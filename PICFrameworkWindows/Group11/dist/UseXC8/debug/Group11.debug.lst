

Microchip Technology PIC18 LITE Macro Assembler V1.10 build 47796 
                                                                                               Mon Sep 17 22:17:19 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 47796
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 47796"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	18F45J10
     8  0000                     porta	equ	0F80h
     9  0000                     portb	equ	0F81h
    10  0000                     portc	equ	0F82h
    11  0000                     portd	equ	0F83h
    12  0000                     porte	equ	0F84h
    13  0000                     lata	equ	0F89h
    14  0000                     latb	equ	0F8Ah
    15  0000                     latc	equ	0F8Bh
    16  0000                     latd	equ	0F8Ch
    17  0000                     late	equ	0F8Dh
    18  0000                     trisa	equ	0F92h
    19  0000                     trisb	equ	0F93h
    20  0000                     trisc	equ	0F94h
    21  0000                     trisd	equ	0F95h
    22  0000                     trise	equ	0F96h
    23  0000                     pie1	equ	0F9Dh
    24  0000                     pir1	equ	0F9Eh
    25  0000                     ipr1	equ	0F9Fh
    26  0000                     pie2	equ	0FA0h
    27  0000                     pir2	equ	0FA1h
    28  0000                     ipr2	equ	0FA2h
    29  0000                     t3con	equ	0FB1h
    30  0000                     tmr3l	equ	0FB2h
    31  0000                     tmr3h	equ	0FB3h
    32  0000                     ccp1con	equ	0FBDh
    33  0000                     ccpr1l	equ	0FBEh
    34  0000                     ccpr1h	equ	0FBFh
    35  0000                     adcon1	equ	0FC1h
    36  0000                     adcon0	equ	0FC2h
    37  0000                     adresl	equ	0FC3h
    38  0000                     adresh	equ	0FC4h
    39  0000                     sspcon2	equ	0FC5h
    40  0000                     sspcon1	equ	0FC6h
    41  0000                     sspstat	equ	0FC7h
    42  0000                     sspadd	equ	0FC8h
    43  0000                     sspbuf	equ	0FC9h
    44  0000                     t2con	equ	0FCAh
    45  0000                     pr2	equ	0FCBh
    46  0000                     tmr2	equ	0FCCh
    47  0000                     t1con	equ	0FCDh
    48  0000                     tmr1l	equ	0FCEh
    49  0000                     tmr1h	equ	0FCFh
    50  0000                     rcon	equ	0FD0h
    51  0000                     wdtcon	equ	0FD1h
    52  0000                     lvdcon	equ	0FD2h
    53  0000                     osccon	equ	0FD3h
    54  0000                     t0con	equ	0FD5h
    55  0000                     tmr0l	equ	0FD6h
    56  0000                     tmr0h	equ	0FD7h
    57  0000                     status	equ	0FD8h
    58  0000                     fsr2	equ	0FD9h
    59  0000                     fsr2l	equ	0FD9h
    60  0000                     fsr2h	equ	0FDAh
    61  0000                     plusw2	equ	0FDBh
    62  0000                     preinc2	equ	0FDCh
    63  0000                     postdec2	equ	0FDDh
    64  0000                     postinc2	equ	0FDEh
    65  0000                     indf2	equ	0FDFh
    66  0000                     bsr	equ	0FE0h
    67  0000                     fsr1	equ	0FE1h
    68  0000                     fsr1l	equ	0FE1h
    69  0000                     fsr1h	equ	0FE2h
    70  0000                     plusw1	equ	0FE3h
    71  0000                     preinc1	equ	0FE4h
    72  0000                     postdec1	equ	0FE5h
    73  0000                     postinc1	equ	0FE6h
    74  0000                     indf1	equ	0FE7h
    75  0000                     wreg	equ	0FE8h
    76  0000                     fsr0	equ	0FE9h
    77  0000                     fsr0l	equ	0FE9h
    78  0000                     fsr0h	equ	0FEAh
    79  0000                     plusw0	equ	0FEBh
    80  0000                     preinc0	equ	0FECh
    81  0000                     postdec0	equ	0FEDh
    82  0000                     postinc0	equ	0FEEh
    83  0000                     indf0	equ	0FEFh
    84  0000                     intcon3	equ	0FF0h
    85  0000                     intcon2	equ	0FF1h
    86  0000                     intcon	equ	0FF2h
    87  0000                     prod	equ	0FF3h
    88  0000                     prodl	equ	0FF3h
    89  0000                     prodh	equ	0FF4h
    90  0000                     tablat	equ	0FF5h
    91  0000                     tblptr	equ	0FF6h
    92  0000                     tblptrl	equ	0FF6h
    93  0000                     tblptrh	equ	0FF7h
    94  0000                     tblptru	equ	0FF8h
    95  0000                     pcl	equ	0FF9h
    96  0000                     pclat	equ	0FFAh
    97  0000                     pclath	equ	0FFAh
    98  0000                     pclatu	equ	0FFBh
    99  0000                     stkptr	equ	0FFCh
   100  0000                     tosl	equ	0FFDh
   101  0000                     tosh	equ	0FFEh
   102  0000                     tosu	equ	0FFFh
   103                           skipnz macro
   104                           	btfsc	status,2
   105  0000                     	endm
   106                           	global	__ramtop
   107                           	global	__accesstop
   108                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   109  0000                     PORTA equ 0F80h ;# 
   110                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   111  0000                     PORTB equ 0F81h ;# 
   112                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   113  0000                     PORTC equ 0F82h ;# 
   114                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   115  0000                     PORTD equ 0F83h ;# 
   116                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   117  0000                     PORTE equ 0F84h ;# 
   118                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   119  0000                     SSP2CON2 equ 0F85h ;# 
   120                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   121  0000                     SSP2CON1 equ 0F86h ;# 
   122                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   123  0000                     SSP2STAT equ 0F87h ;# 
   124                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   125  0000                     SSP2ADD equ 0F88h ;# 
   126                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   127  0000                     LATA equ 0F89h ;# 
   128                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   129  0000                     LATB equ 0F8Ah ;# 
   130                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   131  0000                     LATC equ 0F8Bh ;# 
   132                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   133  0000                     LATD equ 0F8Ch ;# 
   134                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   135  0000                     LATE equ 0F8Dh ;# 
   136                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   137  0000                     SSP2BUF equ 0F8Eh ;# 
   138                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   139  0000                     TRISA equ 0F92h ;# 
   140                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   141  0000                     DDRA equ 0F92h ;# 
   142                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   143  0000                     TRISB equ 0F93h ;# 
   144                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   145  0000                     DDRB equ 0F93h ;# 
   146                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   147  0000                     TRISC equ 0F94h ;# 
   148                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   149  0000                     DDRC equ 0F94h ;# 
   150                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   151  0000                     TRISD equ 0F95h ;# 
   152                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   153  0000                     DDRD equ 0F95h ;# 
   154                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   155  0000                     TRISE equ 0F96h ;# 
   156                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   157  0000                     DDRE equ 0F96h ;# 
   158                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   159  0000                     OSCTUNE equ 0F9Bh ;# 
   160                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   161  0000                     PIE1 equ 0F9Dh ;# 
   162                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   163  0000                     PIR1 equ 0F9Eh ;# 
   164                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   165  0000                     IPR1 equ 0F9Fh ;# 
   166                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   167  0000                     PIE2 equ 0FA0h ;# 
   168                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   169  0000                     PIR2 equ 0FA1h ;# 
   170                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   171  0000                     IPR2 equ 0FA2h ;# 
   172                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   173  0000                     PIE3 equ 0FA3h ;# 
   174                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   175  0000                     PIR3 equ 0FA4h ;# 
   176                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   177  0000                     IPR3 equ 0FA5h ;# 
   178                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   179  0000                     EECON1 equ 0FA6h ;# 
   180                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   181  0000                     EECON2 equ 0FA7h ;# 
   182                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   183  0000                     RCSTA equ 0FABh ;# 
   184                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   185  0000                     RCSTA1 equ 0FABh ;# 
   186                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   187  0000                     TXSTA equ 0FACh ;# 
   188                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   189  0000                     TXSTA1 equ 0FACh ;# 
   190                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   191  0000                     TXREG equ 0FADh ;# 
   192                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   193  0000                     TXREG1 equ 0FADh ;# 
   194                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   195  0000                     RCREG equ 0FAEh ;# 
   196                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   197  0000                     RCREG1 equ 0FAEh ;# 
   198                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   199  0000                     SPBRG equ 0FAFh ;# 
   200                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   201  0000                     SPBRG1 equ 0FAFh ;# 
   202                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   203  0000                     SPBRGH equ 0FB0h ;# 
   204                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   205  0000                     CMCON equ 0FB4h ;# 
   206                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   207  0000                     CVRCON equ 0FB5h ;# 
   208                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   209  0000                     ECCP1AS equ 0FB6h ;# 
   210                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   211  0000                     ECCP1DEL equ 0FB7h ;# 
   212                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   213  0000                     PWM1CON equ 0FB7h ;# 
   214                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   215  0000                     BAUDCON equ 0FB8h ;# 
   216                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   217  0000                     BAUDCTL equ 0FB8h ;# 
   218                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   219  0000                     CCP2CON equ 0FBAh ;# 
   220                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   221  0000                     CCPR2 equ 0FBBh ;# 
   222                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   223  0000                     CCPR2L equ 0FBBh ;# 
   224                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   225  0000                     CCPR2H equ 0FBCh ;# 
   226                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   227  0000                     ECCP1CON equ 0FBDh ;# 
   228                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   229  0000                     CCP1CON equ 0FBDh ;# 
   230                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   231  0000                     CCPR1 equ 0FBEh ;# 
   232                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   233  0000                     CCPR1L equ 0FBEh ;# 
   234                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   235  0000                     CCPR1H equ 0FBFh ;# 
   236                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   237  0000                     ADCON2 equ 0FC0h ;# 
   238                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   239  0000                     ADCON1 equ 0FC1h ;# 
   240                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   241  0000                     ADCON0 equ 0FC2h ;# 
   242                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   243  0000                     ADRES equ 0FC3h ;# 
   244                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   245  0000                     ADRESL equ 0FC3h ;# 
   246                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   247  0000                     ADRESH equ 0FC4h ;# 
   248                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   249  0000                     SSPCON2 equ 0FC5h ;# 
   250                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   251  0000                     SSP1CON2 equ 0FC5h ;# 
   252                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   253  0000                     SSPCON1 equ 0FC6h ;# 
   254                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   255  0000                     SSP1CON1 equ 0FC6h ;# 
   256                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   257  0000                     SSPSTAT equ 0FC7h ;# 
   258                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   259  0000                     SSP1STAT equ 0FC7h ;# 
   260                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   261  0000                     SSPADD equ 0FC8h ;# 
   262                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   263  0000                     SSP1ADD equ 0FC8h ;# 
   264                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   265  0000                     SSPBUF equ 0FC9h ;# 
   266                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   267  0000                     SSP1BUF equ 0FC9h ;# 
   268                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   269  0000                     T2CON equ 0FCAh ;# 
   270                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   271  0000                     PR2 equ 0FCBh ;# 
   272                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   273  0000                     MEMCON equ 0FCBh ;# 
   274                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   275  0000                     TMR2 equ 0FCCh ;# 
   276                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   277  0000                     T1CON equ 0FCDh ;# 
   278                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   279  0000                     TMR1 equ 0FCEh ;# 
   280                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   281  0000                     TMR1L equ 0FCEh ;# 
   282                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   283  0000                     TMR1H equ 0FCFh ;# 
   284                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   285  0000                     RCON equ 0FD0h ;# 
   286                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   287  0000                     WDTCON equ 0FD1h ;# 
   288                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   289  0000                     OSCCON equ 0FD3h ;# 
   290                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   291  0000                     T0CON equ 0FD5h ;# 
   292                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   293  0000                     TMR0 equ 0FD6h ;# 
   294                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   295  0000                     TMR0L equ 0FD6h ;# 
   296                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   297  0000                     TMR0H equ 0FD7h ;# 
   298                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   299  0000                     STATUS equ 0FD8h ;# 
   300                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   301  0000                     FSR2 equ 0FD9h ;# 
   302                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   303  0000                     FSR2L equ 0FD9h ;# 
   304                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   305  0000                     FSR2H equ 0FDAh ;# 
   306                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   307  0000                     PLUSW2 equ 0FDBh ;# 
   308                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   309  0000                     PREINC2 equ 0FDCh ;# 
   310                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   311  0000                     POSTDEC2 equ 0FDDh ;# 
   312                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   313  0000                     POSTINC2 equ 0FDEh ;# 
   314                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   315  0000                     INDF2 equ 0FDFh ;# 
   316                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   317  0000                     BSR equ 0FE0h ;# 
   318                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   319  0000                     FSR1 equ 0FE1h ;# 
   320                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   321  0000                     FSR1L equ 0FE1h ;# 
   322                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   323  0000                     FSR1H equ 0FE2h ;# 
   324                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   325  0000                     PLUSW1 equ 0FE3h ;# 
   326                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   327  0000                     PREINC1 equ 0FE4h ;# 
   328                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   329  0000                     POSTDEC1 equ 0FE5h ;# 
   330                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   331  0000                     POSTINC1 equ 0FE6h ;# 
   332                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   333  0000                     INDF1 equ 0FE7h ;# 
   334                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   335  0000                     WREG equ 0FE8h ;# 
   336                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   337  0000                     FSR0 equ 0FE9h ;# 
   338                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   339  0000                     FSR0L equ 0FE9h ;# 
   340                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   341  0000                     FSR0H equ 0FEAh ;# 
   342                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   343  0000                     PLUSW0 equ 0FEBh ;# 
   344                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   345  0000                     PREINC0 equ 0FECh ;# 
   346                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   347  0000                     POSTDEC0 equ 0FEDh ;# 
   348                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   349  0000                     POSTINC0 equ 0FEEh ;# 
   350                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   351  0000                     INDF0 equ 0FEFh ;# 
   352                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   353  0000                     INTCON3 equ 0FF0h ;# 
   354                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   355  0000                     INTCON2 equ 0FF1h ;# 
   356                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   357  0000                     INTCON equ 0FF2h ;# 
   358                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   359  0000                     PROD equ 0FF3h ;# 
   360                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   361  0000                     PRODL equ 0FF3h ;# 
   362                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   363  0000                     PRODH equ 0FF4h ;# 
   364                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   365  0000                     TABLAT equ 0FF5h ;# 
   366                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   367  0000                     TBLPTR equ 0FF6h ;# 
   368                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   369  0000                     TBLPTRL equ 0FF6h ;# 
   370                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   371  0000                     TBLPTRH equ 0FF7h ;# 
   372                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   373  0000                     TBLPTRU equ 0FF8h ;# 
   374                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   375  0000                     PCLAT equ 0FF9h ;# 
   376                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   377  0000                     PC equ 0FF9h ;# 
   378                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   379  0000                     PCL equ 0FF9h ;# 
   380                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   381  0000                     PCLATH equ 0FFAh ;# 
   382                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   383  0000                     PCLATU equ 0FFBh ;# 
   384                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   385  0000                     STKPTR equ 0FFCh ;# 
   386                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   387  0000                     TOS equ 0FFDh ;# 
   388                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   389  0000                     TOSL equ 0FFDh ;# 
   390                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   391  0000                     TOSH equ 0FFEh ;# 
   392                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   393  0000                     TOSU equ 0FFFh ;# 
   394                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   395  0000                     PORTA equ 0F80h ;# 
   396                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   397  0000                     PORTB equ 0F81h ;# 
   398                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   399  0000                     PORTC equ 0F82h ;# 
   400                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   401  0000                     PORTD equ 0F83h ;# 
   402                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   403  0000                     PORTE equ 0F84h ;# 
   404                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   405  0000                     SSP2CON2 equ 0F85h ;# 
   406                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   407  0000                     SSP2CON1 equ 0F86h ;# 
   408                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   409  0000                     SSP2STAT equ 0F87h ;# 
   410                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   411  0000                     SSP2ADD equ 0F88h ;# 
   412                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   413  0000                     LATA equ 0F89h ;# 
   414                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   415  0000                     LATB equ 0F8Ah ;# 
   416                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   417  0000                     LATC equ 0F8Bh ;# 
   418                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   419  0000                     LATD equ 0F8Ch ;# 
   420                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   421  0000                     LATE equ 0F8Dh ;# 
   422                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   423  0000                     SSP2BUF equ 0F8Eh ;# 
   424                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   425  0000                     TRISA equ 0F92h ;# 
   426                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   427  0000                     DDRA equ 0F92h ;# 
   428                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   429  0000                     TRISB equ 0F93h ;# 
   430                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   431  0000                     DDRB equ 0F93h ;# 
   432                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   433  0000                     TRISC equ 0F94h ;# 
   434                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   435  0000                     DDRC equ 0F94h ;# 
   436                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   437  0000                     TRISD equ 0F95h ;# 
   438                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   439  0000                     DDRD equ 0F95h ;# 
   440                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   441  0000                     TRISE equ 0F96h ;# 
   442                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   443  0000                     DDRE equ 0F96h ;# 
   444                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   445  0000                     OSCTUNE equ 0F9Bh ;# 
   446                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   447  0000                     PIE1 equ 0F9Dh ;# 
   448                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   449  0000                     PIR1 equ 0F9Eh ;# 
   450                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   451  0000                     IPR1 equ 0F9Fh ;# 
   452                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   453  0000                     PIE2 equ 0FA0h ;# 
   454                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   455  0000                     PIR2 equ 0FA1h ;# 
   456                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   457  0000                     IPR2 equ 0FA2h ;# 
   458                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   459  0000                     PIE3 equ 0FA3h ;# 
   460                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   461  0000                     PIR3 equ 0FA4h ;# 
   462                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   463  0000                     IPR3 equ 0FA5h ;# 
   464                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   465  0000                     EECON1 equ 0FA6h ;# 
   466                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   467  0000                     EECON2 equ 0FA7h ;# 
   468                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   469  0000                     RCSTA equ 0FABh ;# 
   470                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   471  0000                     RCSTA1 equ 0FABh ;# 
   472                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   473  0000                     TXSTA equ 0FACh ;# 
   474                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   475  0000                     TXSTA1 equ 0FACh ;# 
   476                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   477  0000                     TXREG equ 0FADh ;# 
   478                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   479  0000                     TXREG1 equ 0FADh ;# 
   480                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   481  0000                     RCREG equ 0FAEh ;# 
   482                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   483  0000                     RCREG1 equ 0FAEh ;# 
   484                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   485  0000                     SPBRG equ 0FAFh ;# 
   486                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   487  0000                     SPBRG1 equ 0FAFh ;# 
   488                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   489  0000                     SPBRGH equ 0FB0h ;# 
   490                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   491  0000                     CMCON equ 0FB4h ;# 
   492                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   493  0000                     CVRCON equ 0FB5h ;# 
   494                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   495  0000                     ECCP1AS equ 0FB6h ;# 
   496                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   497  0000                     ECCP1DEL equ 0FB7h ;# 
   498                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   499  0000                     PWM1CON equ 0FB7h ;# 
   500                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   501  0000                     BAUDCON equ 0FB8h ;# 
   502                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   503  0000                     BAUDCTL equ 0FB8h ;# 
   504                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   505  0000                     CCP2CON equ 0FBAh ;# 
   506                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   507  0000                     CCPR2 equ 0FBBh ;# 
   508                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   509  0000                     CCPR2L equ 0FBBh ;# 
   510                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   511  0000                     CCPR2H equ 0FBCh ;# 
   512                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   513  0000                     ECCP1CON equ 0FBDh ;# 
   514                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   515  0000                     CCP1CON equ 0FBDh ;# 
   516                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   517  0000                     CCPR1 equ 0FBEh ;# 
   518                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   519  0000                     CCPR1L equ 0FBEh ;# 
   520                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   521  0000                     CCPR1H equ 0FBFh ;# 
   522                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   523  0000                     ADCON2 equ 0FC0h ;# 
   524                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   525  0000                     ADCON1 equ 0FC1h ;# 
   526                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   527  0000                     ADCON0 equ 0FC2h ;# 
   528                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   529  0000                     ADRES equ 0FC3h ;# 
   530                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   531  0000                     ADRESL equ 0FC3h ;# 
   532                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   533  0000                     ADRESH equ 0FC4h ;# 
   534                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   535  0000                     SSPCON2 equ 0FC5h ;# 
   536                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   537  0000                     SSP1CON2 equ 0FC5h ;# 
   538                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   539  0000                     SSPCON1 equ 0FC6h ;# 
   540                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   541  0000                     SSP1CON1 equ 0FC6h ;# 
   542                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   543  0000                     SSPSTAT equ 0FC7h ;# 
   544                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   545  0000                     SSP1STAT equ 0FC7h ;# 
   546                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   547  0000                     SSPADD equ 0FC8h ;# 
   548                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   549  0000                     SSP1ADD equ 0FC8h ;# 
   550                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   551  0000                     SSPBUF equ 0FC9h ;# 
   552                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   553  0000                     SSP1BUF equ 0FC9h ;# 
   554                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   555  0000                     T2CON equ 0FCAh ;# 
   556                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   557  0000                     PR2 equ 0FCBh ;# 
   558                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   559  0000                     MEMCON equ 0FCBh ;# 
   560                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   561  0000                     TMR2 equ 0FCCh ;# 
   562                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   563  0000                     T1CON equ 0FCDh ;# 
   564                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   565  0000                     TMR1 equ 0FCEh ;# 
   566                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   567  0000                     TMR1L equ 0FCEh ;# 
   568                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   569  0000                     TMR1H equ 0FCFh ;# 
   570                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   571  0000                     RCON equ 0FD0h ;# 
   572                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   573  0000                     WDTCON equ 0FD1h ;# 
   574                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   575  0000                     OSCCON equ 0FD3h ;# 
   576                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   577  0000                     T0CON equ 0FD5h ;# 
   578                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   579  0000                     TMR0 equ 0FD6h ;# 
   580                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   581  0000                     TMR0L equ 0FD6h ;# 
   582                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   583  0000                     TMR0H equ 0FD7h ;# 
   584                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   585  0000                     STATUS equ 0FD8h ;# 
   586                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   587  0000                     FSR2 equ 0FD9h ;# 
   588                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   589  0000                     FSR2L equ 0FD9h ;# 
   590                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   591  0000                     FSR2H equ 0FDAh ;# 
   592                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   593  0000                     PLUSW2 equ 0FDBh ;# 
   594                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   595  0000                     PREINC2 equ 0FDCh ;# 
   596                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   597  0000                     POSTDEC2 equ 0FDDh ;# 
   598                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   599  0000                     POSTINC2 equ 0FDEh ;# 
   600                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   601  0000                     INDF2 equ 0FDFh ;# 
   602                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   603  0000                     BSR equ 0FE0h ;# 
   604                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   605  0000                     FSR1 equ 0FE1h ;# 
   606                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   607  0000                     FSR1L equ 0FE1h ;# 
   608                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   609  0000                     FSR1H equ 0FE2h ;# 
   610                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   611  0000                     PLUSW1 equ 0FE3h ;# 
   612                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   613  0000                     PREINC1 equ 0FE4h ;# 
   614                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   615  0000                     POSTDEC1 equ 0FE5h ;# 
   616                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   617  0000                     POSTINC1 equ 0FE6h ;# 
   618                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   619  0000                     INDF1 equ 0FE7h ;# 
   620                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   621  0000                     WREG equ 0FE8h ;# 
   622                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   623  0000                     FSR0 equ 0FE9h ;# 
   624                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   625  0000                     FSR0L equ 0FE9h ;# 
   626                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   627  0000                     FSR0H equ 0FEAh ;# 
   628                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   629  0000                     PLUSW0 equ 0FEBh ;# 
   630                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   631  0000                     PREINC0 equ 0FECh ;# 
   632                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   633  0000                     POSTDEC0 equ 0FEDh ;# 
   634                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   635  0000                     POSTINC0 equ 0FEEh ;# 
   636                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   637  0000                     INDF0 equ 0FEFh ;# 
   638                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   639  0000                     INTCON3 equ 0FF0h ;# 
   640                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   641  0000                     INTCON2 equ 0FF1h ;# 
   642                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   643  0000                     INTCON equ 0FF2h ;# 
   644                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   645  0000                     PROD equ 0FF3h ;# 
   646                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   647  0000                     PRODL equ 0FF3h ;# 
   648                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   649  0000                     PRODH equ 0FF4h ;# 
   650                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   651  0000                     TABLAT equ 0FF5h ;# 
   652                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   653  0000                     TBLPTR equ 0FF6h ;# 
   654                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   655  0000                     TBLPTRL equ 0FF6h ;# 
   656                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   657  0000                     TBLPTRH equ 0FF7h ;# 
   658                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   659  0000                     TBLPTRU equ 0FF8h ;# 
   660                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   661  0000                     PCLAT equ 0FF9h ;# 
   662                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   663  0000                     PC equ 0FF9h ;# 
   664                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   665  0000                     PCL equ 0FF9h ;# 
   666                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   667  0000                     PCLATH equ 0FFAh ;# 
   668                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   669  0000                     PCLATU equ 0FFBh ;# 
   670                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   671  0000                     STKPTR equ 0FFCh ;# 
   672                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   673  0000                     TOS equ 0FFDh ;# 
   674                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   675  0000                     TOSL equ 0FFDh ;# 
   676                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   677  0000                     TOSH equ 0FFEh ;# 
   678                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   679  0000                     TOSU equ 0FFFh ;# 
   680                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   681  0000                     PORTA equ 0F80h ;# 
   682                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   683  0000                     PORTB equ 0F81h ;# 
   684                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   685  0000                     PORTC equ 0F82h ;# 
   686                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   687  0000                     PORTD equ 0F83h ;# 
   688                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   689  0000                     PORTE equ 0F84h ;# 
   690                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   691  0000                     SSP2CON2 equ 0F85h ;# 
   692                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   693  0000                     SSP2CON1 equ 0F86h ;# 
   694                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   695  0000                     SSP2STAT equ 0F87h ;# 
   696                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   697  0000                     SSP2ADD equ 0F88h ;# 
   698                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   699  0000                     LATA equ 0F89h ;# 
   700                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   701  0000                     LATB equ 0F8Ah ;# 
   702                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   703  0000                     LATC equ 0F8Bh ;# 
   704                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   705  0000                     LATD equ 0F8Ch ;# 
   706                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   707  0000                     LATE equ 0F8Dh ;# 
   708                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   709  0000                     SSP2BUF equ 0F8Eh ;# 
   710                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   711  0000                     TRISA equ 0F92h ;# 
   712                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   713  0000                     DDRA equ 0F92h ;# 
   714                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   715  0000                     TRISB equ 0F93h ;# 
   716                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   717  0000                     DDRB equ 0F93h ;# 
   718                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   719  0000                     TRISC equ 0F94h ;# 
   720                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   721  0000                     DDRC equ 0F94h ;# 
   722                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   723  0000                     TRISD equ 0F95h ;# 
   724                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   725  0000                     DDRD equ 0F95h ;# 
   726                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   727  0000                     TRISE equ 0F96h ;# 
   728                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   729  0000                     DDRE equ 0F96h ;# 
   730                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   731  0000                     OSCTUNE equ 0F9Bh ;# 
   732                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   733  0000                     PIE1 equ 0F9Dh ;# 
   734                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   735  0000                     PIR1 equ 0F9Eh ;# 
   736                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   737  0000                     IPR1 equ 0F9Fh ;# 
   738                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   739  0000                     PIE2 equ 0FA0h ;# 
   740                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   741  0000                     PIR2 equ 0FA1h ;# 
   742                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   743  0000                     IPR2 equ 0FA2h ;# 
   744                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   745  0000                     PIE3 equ 0FA3h ;# 
   746                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   747  0000                     PIR3 equ 0FA4h ;# 
   748                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   749  0000                     IPR3 equ 0FA5h ;# 
   750                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   751  0000                     EECON1 equ 0FA6h ;# 
   752                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   753  0000                     EECON2 equ 0FA7h ;# 
   754                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   755  0000                     RCSTA equ 0FABh ;# 
   756                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   757  0000                     RCSTA1 equ 0FABh ;# 
   758                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   759  0000                     TXSTA equ 0FACh ;# 
   760                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   761  0000                     TXSTA1 equ 0FACh ;# 
   762                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   763  0000                     TXREG equ 0FADh ;# 
   764                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   765  0000                     TXREG1 equ 0FADh ;# 
   766                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   767  0000                     RCREG equ 0FAEh ;# 
   768                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   769  0000                     RCREG1 equ 0FAEh ;# 
   770                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   771  0000                     SPBRG equ 0FAFh ;# 
   772                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   773  0000                     SPBRG1 equ 0FAFh ;# 
   774                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   775  0000                     SPBRGH equ 0FB0h ;# 
   776                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   777  0000                     CMCON equ 0FB4h ;# 
   778                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   779  0000                     CVRCON equ 0FB5h ;# 
   780                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   781  0000                     ECCP1AS equ 0FB6h ;# 
   782                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   783  0000                     ECCP1DEL equ 0FB7h ;# 
   784                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   785  0000                     PWM1CON equ 0FB7h ;# 
   786                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   787  0000                     BAUDCON equ 0FB8h ;# 
   788                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   789  0000                     BAUDCTL equ 0FB8h ;# 
   790                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   791  0000                     CCP2CON equ 0FBAh ;# 
   792                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   793  0000                     CCPR2 equ 0FBBh ;# 
   794                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   795  0000                     CCPR2L equ 0FBBh ;# 
   796                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   797  0000                     CCPR2H equ 0FBCh ;# 
   798                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   799  0000                     ECCP1CON equ 0FBDh ;# 
   800                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   801  0000                     CCP1CON equ 0FBDh ;# 
   802                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   803  0000                     CCPR1 equ 0FBEh ;# 
   804                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   805  0000                     CCPR1L equ 0FBEh ;# 
   806                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   807  0000                     CCPR1H equ 0FBFh ;# 
   808                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   809  0000                     ADCON2 equ 0FC0h ;# 
   810                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   811  0000                     ADCON1 equ 0FC1h ;# 
   812                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   813  0000                     ADCON0 equ 0FC2h ;# 
   814                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   815  0000                     ADRES equ 0FC3h ;# 
   816                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   817  0000                     ADRESL equ 0FC3h ;# 
   818                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   819  0000                     ADRESH equ 0FC4h ;# 
   820                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   821  0000                     SSPCON2 equ 0FC5h ;# 
   822                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   823  0000                     SSP1CON2 equ 0FC5h ;# 
   824                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   825  0000                     SSPCON1 equ 0FC6h ;# 
   826                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   827  0000                     SSP1CON1 equ 0FC6h ;# 
   828                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   829  0000                     SSPSTAT equ 0FC7h ;# 
   830                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   831  0000                     SSP1STAT equ 0FC7h ;# 
   832                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   833  0000                     SSPADD equ 0FC8h ;# 
   834                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   835  0000                     SSP1ADD equ 0FC8h ;# 
   836                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   837  0000                     SSPBUF equ 0FC9h ;# 
   838                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   839  0000                     SSP1BUF equ 0FC9h ;# 
   840                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   841  0000                     T2CON equ 0FCAh ;# 
   842                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   843  0000                     PR2 equ 0FCBh ;# 
   844                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   845  0000                     MEMCON equ 0FCBh ;# 
   846                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   847  0000                     TMR2 equ 0FCCh ;# 
   848                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   849  0000                     T1CON equ 0FCDh ;# 
   850                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   851  0000                     TMR1 equ 0FCEh ;# 
   852                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   853  0000                     TMR1L equ 0FCEh ;# 
   854                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   855  0000                     TMR1H equ 0FCFh ;# 
   856                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   857  0000                     RCON equ 0FD0h ;# 
   858                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   859  0000                     WDTCON equ 0FD1h ;# 
   860                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   861  0000                     OSCCON equ 0FD3h ;# 
   862                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   863  0000                     T0CON equ 0FD5h ;# 
   864                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   865  0000                     TMR0 equ 0FD6h ;# 
   866                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   867  0000                     TMR0L equ 0FD6h ;# 
   868                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   869  0000                     TMR0H equ 0FD7h ;# 
   870                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   871  0000                     STATUS equ 0FD8h ;# 
   872                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   873  0000                     FSR2 equ 0FD9h ;# 
   874                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   875  0000                     FSR2L equ 0FD9h ;# 
   876                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   877  0000                     FSR2H equ 0FDAh ;# 
   878                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   879  0000                     PLUSW2 equ 0FDBh ;# 
   880                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   881  0000                     PREINC2 equ 0FDCh ;# 
   882                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   883  0000                     POSTDEC2 equ 0FDDh ;# 
   884                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   885  0000                     POSTINC2 equ 0FDEh ;# 
   886                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   887  0000                     INDF2 equ 0FDFh ;# 
   888                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   889  0000                     BSR equ 0FE0h ;# 
   890                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   891  0000                     FSR1 equ 0FE1h ;# 
   892                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   893  0000                     FSR1L equ 0FE1h ;# 
   894                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   895  0000                     FSR1H equ 0FE2h ;# 
   896                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   897  0000                     PLUSW1 equ 0FE3h ;# 
   898                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   899  0000                     PREINC1 equ 0FE4h ;# 
   900                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   901  0000                     POSTDEC1 equ 0FE5h ;# 
   902                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   903  0000                     POSTINC1 equ 0FE6h ;# 
   904                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   905  0000                     INDF1 equ 0FE7h ;# 
   906                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   907  0000                     WREG equ 0FE8h ;# 
   908                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   909  0000                     FSR0 equ 0FE9h ;# 
   910                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   911  0000                     FSR0L equ 0FE9h ;# 
   912                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   913  0000                     FSR0H equ 0FEAh ;# 
   914                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   915  0000                     PLUSW0 equ 0FEBh ;# 
   916                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   917  0000                     PREINC0 equ 0FECh ;# 
   918                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   919  0000                     POSTDEC0 equ 0FEDh ;# 
   920                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   921  0000                     POSTINC0 equ 0FEEh ;# 
   922                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   923  0000                     INDF0 equ 0FEFh ;# 
   924                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   925  0000                     INTCON3 equ 0FF0h ;# 
   926                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   927  0000                     INTCON2 equ 0FF1h ;# 
   928                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   929  0000                     INTCON equ 0FF2h ;# 
   930                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   931  0000                     PROD equ 0FF3h ;# 
   932                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   933  0000                     PRODL equ 0FF3h ;# 
   934                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   935  0000                     PRODH equ 0FF4h ;# 
   936                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   937  0000                     TABLAT equ 0FF5h ;# 
   938                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   939  0000                     TBLPTR equ 0FF6h ;# 
   940                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   941  0000                     TBLPTRL equ 0FF6h ;# 
   942                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   943  0000                     TBLPTRH equ 0FF7h ;# 
   944                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   945  0000                     TBLPTRU equ 0FF8h ;# 
   946                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   947  0000                     PCLAT equ 0FF9h ;# 
   948                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   949  0000                     PC equ 0FF9h ;# 
   950                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   951  0000                     PCL equ 0FF9h ;# 
   952                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   953  0000                     PCLATH equ 0FFAh ;# 
   954                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   955  0000                     PCLATU equ 0FFBh ;# 
   956                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   957  0000                     STKPTR equ 0FFCh ;# 
   958                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   959  0000                     TOS equ 0FFDh ;# 
   960                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   961  0000                     TOSL equ 0FFDh ;# 
   962                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   963  0000                     TOSH equ 0FFEh ;# 
   964                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   965  0000                     TOSU equ 0FFFh ;# 
   966                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   967  0000                     PORTA equ 0F80h ;# 
   968                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   969  0000                     PORTB equ 0F81h ;# 
   970                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   971  0000                     PORTC equ 0F82h ;# 
   972                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   973  0000                     PORTD equ 0F83h ;# 
   974                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   975  0000                     PORTE equ 0F84h ;# 
   976                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   977  0000                     SSP2CON2 equ 0F85h ;# 
   978                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   979  0000                     SSP2CON1 equ 0F86h ;# 
   980                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   981  0000                     SSP2STAT equ 0F87h ;# 
   982                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   983  0000                     SSP2ADD equ 0F88h ;# 
   984                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   985  0000                     LATA equ 0F89h ;# 
   986                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   987  0000                     LATB equ 0F8Ah ;# 
   988                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   989  0000                     LATC equ 0F8Bh ;# 
   990                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   991  0000                     LATD equ 0F8Ch ;# 
   992                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   993  0000                     LATE equ 0F8Dh ;# 
   994                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   995  0000                     SSP2BUF equ 0F8Eh ;# 
   996                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   997  0000                     TRISA equ 0F92h ;# 
   998                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   999  0000                     DDRA equ 0F92h ;# 
  1000                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1001  0000                     TRISB equ 0F93h ;# 
  1002                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1003  0000                     DDRB equ 0F93h ;# 
  1004                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1005  0000                     TRISC equ 0F94h ;# 
  1006                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1007  0000                     DDRC equ 0F94h ;# 
  1008                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1009  0000                     TRISD equ 0F95h ;# 
  1010                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1011  0000                     DDRD equ 0F95h ;# 
  1012                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1013  0000                     TRISE equ 0F96h ;# 
  1014                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1015  0000                     DDRE equ 0F96h ;# 
  1016                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1017  0000                     OSCTUNE equ 0F9Bh ;# 
  1018                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1019  0000                     PIE1 equ 0F9Dh ;# 
  1020                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1021  0000                     PIR1 equ 0F9Eh ;# 
  1022                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1023  0000                     IPR1 equ 0F9Fh ;# 
  1024                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1025  0000                     PIE2 equ 0FA0h ;# 
  1026                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1027  0000                     PIR2 equ 0FA1h ;# 
  1028                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1029  0000                     IPR2 equ 0FA2h ;# 
  1030                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1031  0000                     PIE3 equ 0FA3h ;# 
  1032                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1033  0000                     PIR3 equ 0FA4h ;# 
  1034                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1035  0000                     IPR3 equ 0FA5h ;# 
  1036                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1037  0000                     EECON1 equ 0FA6h ;# 
  1038                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1039  0000                     EECON2 equ 0FA7h ;# 
  1040                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1041  0000                     RCSTA equ 0FABh ;# 
  1042                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1043  0000                     RCSTA1 equ 0FABh ;# 
  1044                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1045  0000                     TXSTA equ 0FACh ;# 
  1046                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1047  0000                     TXSTA1 equ 0FACh ;# 
  1048                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1049  0000                     TXREG equ 0FADh ;# 
  1050                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1051  0000                     TXREG1 equ 0FADh ;# 
  1052                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1053  0000                     RCREG equ 0FAEh ;# 
  1054                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1055  0000                     RCREG1 equ 0FAEh ;# 
  1056                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1057  0000                     SPBRG equ 0FAFh ;# 
  1058                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1059  0000                     SPBRG1 equ 0FAFh ;# 
  1060                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1061  0000                     SPBRGH equ 0FB0h ;# 
  1062                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1063  0000                     CMCON equ 0FB4h ;# 
  1064                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1065  0000                     CVRCON equ 0FB5h ;# 
  1066                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1067  0000                     ECCP1AS equ 0FB6h ;# 
  1068                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1069  0000                     ECCP1DEL equ 0FB7h ;# 
  1070                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1071  0000                     PWM1CON equ 0FB7h ;# 
  1072                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1073  0000                     BAUDCON equ 0FB8h ;# 
  1074                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1075  0000                     BAUDCTL equ 0FB8h ;# 
  1076                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1077  0000                     CCP2CON equ 0FBAh ;# 
  1078                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1079  0000                     CCPR2 equ 0FBBh ;# 
  1080                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1081  0000                     CCPR2L equ 0FBBh ;# 
  1082                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1083  0000                     CCPR2H equ 0FBCh ;# 
  1084                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1085  0000                     ECCP1CON equ 0FBDh ;# 
  1086                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1087  0000                     CCP1CON equ 0FBDh ;# 
  1088                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1089  0000                     CCPR1 equ 0FBEh ;# 
  1090                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1091  0000                     CCPR1L equ 0FBEh ;# 
  1092                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1093  0000                     CCPR1H equ 0FBFh ;# 
  1094                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1095  0000                     ADCON2 equ 0FC0h ;# 
  1096                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1097  0000                     ADCON1 equ 0FC1h ;# 
  1098                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1099  0000                     ADCON0 equ 0FC2h ;# 
  1100                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1101  0000                     ADRES equ 0FC3h ;# 
  1102                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1103  0000                     ADRESL equ 0FC3h ;# 
  1104                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1105  0000                     ADRESH equ 0FC4h ;# 
  1106                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1107  0000                     SSPCON2 equ 0FC5h ;# 
  1108                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1109  0000                     SSP1CON2 equ 0FC5h ;# 
  1110                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1111  0000                     SSPCON1 equ 0FC6h ;# 
  1112                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1113  0000                     SSP1CON1 equ 0FC6h ;# 
  1114                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1115  0000                     SSPSTAT equ 0FC7h ;# 
  1116                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1117  0000                     SSP1STAT equ 0FC7h ;# 
  1118                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1119  0000                     SSPADD equ 0FC8h ;# 
  1120                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1121  0000                     SSP1ADD equ 0FC8h ;# 
  1122                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1123  0000                     SSPBUF equ 0FC9h ;# 
  1124                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1125  0000                     SSP1BUF equ 0FC9h ;# 
  1126                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1127  0000                     T2CON equ 0FCAh ;# 
  1128                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1129  0000                     PR2 equ 0FCBh ;# 
  1130                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1131  0000                     MEMCON equ 0FCBh ;# 
  1132                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1133  0000                     TMR2 equ 0FCCh ;# 
  1134                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1135  0000                     T1CON equ 0FCDh ;# 
  1136                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1137  0000                     TMR1 equ 0FCEh ;# 
  1138                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1139  0000                     TMR1L equ 0FCEh ;# 
  1140                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1141  0000                     TMR1H equ 0FCFh ;# 
  1142                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1143  0000                     RCON equ 0FD0h ;# 
  1144                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1145  0000                     WDTCON equ 0FD1h ;# 
  1146                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1147  0000                     OSCCON equ 0FD3h ;# 
  1148                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1149  0000                     T0CON equ 0FD5h ;# 
  1150                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1151  0000                     TMR0 equ 0FD6h ;# 
  1152                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1153  0000                     TMR0L equ 0FD6h ;# 
  1154                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1155  0000                     TMR0H equ 0FD7h ;# 
  1156                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1157  0000                     STATUS equ 0FD8h ;# 
  1158                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1159  0000                     FSR2 equ 0FD9h ;# 
  1160                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1161  0000                     FSR2L equ 0FD9h ;# 
  1162                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1163  0000                     FSR2H equ 0FDAh ;# 
  1164                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1165  0000                     PLUSW2 equ 0FDBh ;# 
  1166                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1167  0000                     PREINC2 equ 0FDCh ;# 
  1168                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1169  0000                     POSTDEC2 equ 0FDDh ;# 
  1170                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1171  0000                     POSTINC2 equ 0FDEh ;# 
  1172                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1173  0000                     INDF2 equ 0FDFh ;# 
  1174                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1175  0000                     BSR equ 0FE0h ;# 
  1176                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1177  0000                     FSR1 equ 0FE1h ;# 
  1178                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1179  0000                     FSR1L equ 0FE1h ;# 
  1180                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1181  0000                     FSR1H equ 0FE2h ;# 
  1182                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1183  0000                     PLUSW1 equ 0FE3h ;# 
  1184                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1185  0000                     PREINC1 equ 0FE4h ;# 
  1186                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1187  0000                     POSTDEC1 equ 0FE5h ;# 
  1188                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1189  0000                     POSTINC1 equ 0FE6h ;# 
  1190                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1191  0000                     INDF1 equ 0FE7h ;# 
  1192                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1193  0000                     WREG equ 0FE8h ;# 
  1194                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1195  0000                     FSR0 equ 0FE9h ;# 
  1196                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1197  0000                     FSR0L equ 0FE9h ;# 
  1198                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1199  0000                     FSR0H equ 0FEAh ;# 
  1200                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1201  0000                     PLUSW0 equ 0FEBh ;# 
  1202                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1203  0000                     PREINC0 equ 0FECh ;# 
  1204                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1205  0000                     POSTDEC0 equ 0FEDh ;# 
  1206                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1207  0000                     POSTINC0 equ 0FEEh ;# 
  1208                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1209  0000                     INDF0 equ 0FEFh ;# 
  1210                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1211  0000                     INTCON3 equ 0FF0h ;# 
  1212                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1213  0000                     INTCON2 equ 0FF1h ;# 
  1214                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1215  0000                     INTCON equ 0FF2h ;# 
  1216                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1217  0000                     PROD equ 0FF3h ;# 
  1218                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1219  0000                     PRODL equ 0FF3h ;# 
  1220                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1221  0000                     PRODH equ 0FF4h ;# 
  1222                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1223  0000                     TABLAT equ 0FF5h ;# 
  1224                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1225  0000                     TBLPTR equ 0FF6h ;# 
  1226                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1227  0000                     TBLPTRL equ 0FF6h ;# 
  1228                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1229  0000                     TBLPTRH equ 0FF7h ;# 
  1230                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1231  0000                     TBLPTRU equ 0FF8h ;# 
  1232                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1233  0000                     PCLAT equ 0FF9h ;# 
  1234                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1235  0000                     PC equ 0FF9h ;# 
  1236                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1237  0000                     PCL equ 0FF9h ;# 
  1238                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1239  0000                     PCLATH equ 0FFAh ;# 
  1240                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1241  0000                     PCLATU equ 0FFBh ;# 
  1242                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1243  0000                     STKPTR equ 0FFCh ;# 
  1244                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1245  0000                     TOS equ 0FFDh ;# 
  1246                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1247  0000                     TOSL equ 0FFDh ;# 
  1248                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1249  0000                     TOSH equ 0FFEh ;# 
  1250                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1251  0000                     TOSU equ 0FFFh ;# 
  1252                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1253  0000                     PORTA equ 0F80h ;# 
  1254                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1255  0000                     PORTB equ 0F81h ;# 
  1256                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1257  0000                     PORTC equ 0F82h ;# 
  1258                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1259  0000                     PORTD equ 0F83h ;# 
  1260                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1261  0000                     PORTE equ 0F84h ;# 
  1262                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1263  0000                     SSP2CON2 equ 0F85h ;# 
  1264                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1265  0000                     SSP2CON1 equ 0F86h ;# 
  1266                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1267  0000                     SSP2STAT equ 0F87h ;# 
  1268                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1269  0000                     SSP2ADD equ 0F88h ;# 
  1270                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1271  0000                     LATA equ 0F89h ;# 
  1272                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1273  0000                     LATB equ 0F8Ah ;# 
  1274                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1275  0000                     LATC equ 0F8Bh ;# 
  1276                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1277  0000                     LATD equ 0F8Ch ;# 
  1278                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1279  0000                     LATE equ 0F8Dh ;# 
  1280                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1281  0000                     SSP2BUF equ 0F8Eh ;# 
  1282                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1283  0000                     TRISA equ 0F92h ;# 
  1284                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1285  0000                     DDRA equ 0F92h ;# 
  1286                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1287  0000                     TRISB equ 0F93h ;# 
  1288                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1289  0000                     DDRB equ 0F93h ;# 
  1290                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1291  0000                     TRISC equ 0F94h ;# 
  1292                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1293  0000                     DDRC equ 0F94h ;# 
  1294                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1295  0000                     TRISD equ 0F95h ;# 
  1296                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1297  0000                     DDRD equ 0F95h ;# 
  1298                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1299  0000                     TRISE equ 0F96h ;# 
  1300                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1301  0000                     DDRE equ 0F96h ;# 
  1302                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1303  0000                     OSCTUNE equ 0F9Bh ;# 
  1304                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1305  0000                     PIE1 equ 0F9Dh ;# 
  1306                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1307  0000                     PIR1 equ 0F9Eh ;# 
  1308                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1309  0000                     IPR1 equ 0F9Fh ;# 
  1310                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1311  0000                     PIE2 equ 0FA0h ;# 
  1312                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1313  0000                     PIR2 equ 0FA1h ;# 
  1314                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1315  0000                     IPR2 equ 0FA2h ;# 
  1316                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1317  0000                     PIE3 equ 0FA3h ;# 
  1318                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1319  0000                     PIR3 equ 0FA4h ;# 
  1320                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1321  0000                     IPR3 equ 0FA5h ;# 
  1322                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1323  0000                     EECON1 equ 0FA6h ;# 
  1324                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1325  0000                     EECON2 equ 0FA7h ;# 
  1326                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1327  0000                     RCSTA equ 0FABh ;# 
  1328                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1329  0000                     RCSTA1 equ 0FABh ;# 
  1330                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1331  0000                     TXSTA equ 0FACh ;# 
  1332                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1333  0000                     TXSTA1 equ 0FACh ;# 
  1334                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1335  0000                     TXREG equ 0FADh ;# 
  1336                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1337  0000                     TXREG1 equ 0FADh ;# 
  1338                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1339  0000                     RCREG equ 0FAEh ;# 
  1340                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1341  0000                     RCREG1 equ 0FAEh ;# 
  1342                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1343  0000                     SPBRG equ 0FAFh ;# 
  1344                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1345  0000                     SPBRG1 equ 0FAFh ;# 
  1346                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1347  0000                     SPBRGH equ 0FB0h ;# 
  1348                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1349  0000                     CMCON equ 0FB4h ;# 
  1350                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1351  0000                     CVRCON equ 0FB5h ;# 
  1352                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1353  0000                     ECCP1AS equ 0FB6h ;# 
  1354                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1355  0000                     ECCP1DEL equ 0FB7h ;# 
  1356                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1357  0000                     PWM1CON equ 0FB7h ;# 
  1358                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1359  0000                     BAUDCON equ 0FB8h ;# 
  1360                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1361  0000                     BAUDCTL equ 0FB8h ;# 
  1362                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1363  0000                     CCP2CON equ 0FBAh ;# 
  1364                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1365  0000                     CCPR2 equ 0FBBh ;# 
  1366                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1367  0000                     CCPR2L equ 0FBBh ;# 
  1368                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1369  0000                     CCPR2H equ 0FBCh ;# 
  1370                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1371  0000                     ECCP1CON equ 0FBDh ;# 
  1372                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1373  0000                     CCP1CON equ 0FBDh ;# 
  1374                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1375  0000                     CCPR1 equ 0FBEh ;# 
  1376                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1377  0000                     CCPR1L equ 0FBEh ;# 
  1378                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1379  0000                     CCPR1H equ 0FBFh ;# 
  1380                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1381  0000                     ADCON2 equ 0FC0h ;# 
  1382                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1383  0000                     ADCON1 equ 0FC1h ;# 
  1384                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1385  0000                     ADCON0 equ 0FC2h ;# 
  1386                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1387  0000                     ADRES equ 0FC3h ;# 
  1388                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1389  0000                     ADRESL equ 0FC3h ;# 
  1390                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1391  0000                     ADRESH equ 0FC4h ;# 
  1392                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1393  0000                     SSPCON2 equ 0FC5h ;# 
  1394                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1395  0000                     SSP1CON2 equ 0FC5h ;# 
  1396                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1397  0000                     SSPCON1 equ 0FC6h ;# 
  1398                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1399  0000                     SSP1CON1 equ 0FC6h ;# 
  1400                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1401  0000                     SSPSTAT equ 0FC7h ;# 
  1402                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1403  0000                     SSP1STAT equ 0FC7h ;# 
  1404                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1405  0000                     SSPADD equ 0FC8h ;# 
  1406                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1407  0000                     SSP1ADD equ 0FC8h ;# 
  1408                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1409  0000                     SSPBUF equ 0FC9h ;# 
  1410                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1411  0000                     SSP1BUF equ 0FC9h ;# 
  1412                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1413  0000                     T2CON equ 0FCAh ;# 
  1414                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1415  0000                     PR2 equ 0FCBh ;# 
  1416                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1417  0000                     MEMCON equ 0FCBh ;# 
  1418                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1419  0000                     TMR2 equ 0FCCh ;# 
  1420                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1421  0000                     T1CON equ 0FCDh ;# 
  1422                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1423  0000                     TMR1 equ 0FCEh ;# 
  1424                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1425  0000                     TMR1L equ 0FCEh ;# 
  1426                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1427  0000                     TMR1H equ 0FCFh ;# 
  1428                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1429  0000                     RCON equ 0FD0h ;# 
  1430                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1431  0000                     WDTCON equ 0FD1h ;# 
  1432                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1433  0000                     OSCCON equ 0FD3h ;# 
  1434                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1435  0000                     T0CON equ 0FD5h ;# 
  1436                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1437  0000                     TMR0 equ 0FD6h ;# 
  1438                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1439  0000                     TMR0L equ 0FD6h ;# 
  1440                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1441  0000                     TMR0H equ 0FD7h ;# 
  1442                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1443  0000                     STATUS equ 0FD8h ;# 
  1444                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1445  0000                     FSR2 equ 0FD9h ;# 
  1446                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1447  0000                     FSR2L equ 0FD9h ;# 
  1448                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1449  0000                     FSR2H equ 0FDAh ;# 
  1450                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1451  0000                     PLUSW2 equ 0FDBh ;# 
  1452                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1453  0000                     PREINC2 equ 0FDCh ;# 
  1454                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1455  0000                     POSTDEC2 equ 0FDDh ;# 
  1456                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1457  0000                     POSTINC2 equ 0FDEh ;# 
  1458                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1459  0000                     INDF2 equ 0FDFh ;# 
  1460                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1461  0000                     BSR equ 0FE0h ;# 
  1462                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1463  0000                     FSR1 equ 0FE1h ;# 
  1464                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1465  0000                     FSR1L equ 0FE1h ;# 
  1466                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1467  0000                     FSR1H equ 0FE2h ;# 
  1468                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1469  0000                     PLUSW1 equ 0FE3h ;# 
  1470                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1471  0000                     PREINC1 equ 0FE4h ;# 
  1472                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1473  0000                     POSTDEC1 equ 0FE5h ;# 
  1474                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1475  0000                     POSTINC1 equ 0FE6h ;# 
  1476                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1477  0000                     INDF1 equ 0FE7h ;# 
  1478                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1479  0000                     WREG equ 0FE8h ;# 
  1480                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1481  0000                     FSR0 equ 0FE9h ;# 
  1482                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1483  0000                     FSR0L equ 0FE9h ;# 
  1484                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1485  0000                     FSR0H equ 0FEAh ;# 
  1486                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1487  0000                     PLUSW0 equ 0FEBh ;# 
  1488                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1489  0000                     PREINC0 equ 0FECh ;# 
  1490                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1491  0000                     POSTDEC0 equ 0FEDh ;# 
  1492                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1493  0000                     POSTINC0 equ 0FEEh ;# 
  1494                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1495  0000                     INDF0 equ 0FEFh ;# 
  1496                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1497  0000                     INTCON3 equ 0FF0h ;# 
  1498                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1499  0000                     INTCON2 equ 0FF1h ;# 
  1500                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1501  0000                     INTCON equ 0FF2h ;# 
  1502                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1503  0000                     PROD equ 0FF3h ;# 
  1504                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1505  0000                     PRODL equ 0FF3h ;# 
  1506                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1507  0000                     PRODH equ 0FF4h ;# 
  1508                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1509  0000                     TABLAT equ 0FF5h ;# 
  1510                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1511  0000                     TBLPTR equ 0FF6h ;# 
  1512                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1513  0000                     TBLPTRL equ 0FF6h ;# 
  1514                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1515  0000                     TBLPTRH equ 0FF7h ;# 
  1516                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1517  0000                     TBLPTRU equ 0FF8h ;# 
  1518                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1519  0000                     PCLAT equ 0FF9h ;# 
  1520                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1521  0000                     PC equ 0FF9h ;# 
  1522                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1523  0000                     PCL equ 0FF9h ;# 
  1524                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1525  0000                     PCLATH equ 0FFAh ;# 
  1526                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1527  0000                     PCLATU equ 0FFBh ;# 
  1528                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1529  0000                     STKPTR equ 0FFCh ;# 
  1530                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1531  0000                     TOS equ 0FFDh ;# 
  1532                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1533  0000                     TOSL equ 0FFDh ;# 
  1534                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1535  0000                     TOSH equ 0FFEh ;# 
  1536                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1537  0000                     TOSU equ 0FFFh ;# 
  1538                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1539  0000                     PORTA equ 0F80h ;# 
  1540                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1541  0000                     PORTB equ 0F81h ;# 
  1542                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1543  0000                     PORTC equ 0F82h ;# 
  1544                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1545  0000                     PORTD equ 0F83h ;# 
  1546                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1547  0000                     PORTE equ 0F84h ;# 
  1548                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1549  0000                     SSP2CON2 equ 0F85h ;# 
  1550                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1551  0000                     SSP2CON1 equ 0F86h ;# 
  1552                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1553  0000                     SSP2STAT equ 0F87h ;# 
  1554                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1555  0000                     SSP2ADD equ 0F88h ;# 
  1556                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1557  0000                     LATA equ 0F89h ;# 
  1558                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1559  0000                     LATB equ 0F8Ah ;# 
  1560                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1561  0000                     LATC equ 0F8Bh ;# 
  1562                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1563  0000                     LATD equ 0F8Ch ;# 
  1564                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1565  0000                     LATE equ 0F8Dh ;# 
  1566                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1567  0000                     SSP2BUF equ 0F8Eh ;# 
  1568                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1569  0000                     TRISA equ 0F92h ;# 
  1570                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1571  0000                     DDRA equ 0F92h ;# 
  1572                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1573  0000                     TRISB equ 0F93h ;# 
  1574                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1575  0000                     DDRB equ 0F93h ;# 
  1576                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1577  0000                     TRISC equ 0F94h ;# 
  1578                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1579  0000                     DDRC equ 0F94h ;# 
  1580                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1581  0000                     TRISD equ 0F95h ;# 
  1582                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1583  0000                     DDRD equ 0F95h ;# 
  1584                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1585  0000                     TRISE equ 0F96h ;# 
  1586                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1587  0000                     DDRE equ 0F96h ;# 
  1588                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1589  0000                     OSCTUNE equ 0F9Bh ;# 
  1590                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1591  0000                     PIE1 equ 0F9Dh ;# 
  1592                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1593  0000                     PIR1 equ 0F9Eh ;# 
  1594                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1595  0000                     IPR1 equ 0F9Fh ;# 
  1596                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1597  0000                     PIE2 equ 0FA0h ;# 
  1598                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1599  0000                     PIR2 equ 0FA1h ;# 
  1600                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1601  0000                     IPR2 equ 0FA2h ;# 
  1602                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1603  0000                     PIE3 equ 0FA3h ;# 
  1604                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1605  0000                     PIR3 equ 0FA4h ;# 
  1606                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1607  0000                     IPR3 equ 0FA5h ;# 
  1608                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1609  0000                     EECON1 equ 0FA6h ;# 
  1610                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1611  0000                     EECON2 equ 0FA7h ;# 
  1612                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1613  0000                     RCSTA equ 0FABh ;# 
  1614                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1615  0000                     RCSTA1 equ 0FABh ;# 
  1616                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1617  0000                     TXSTA equ 0FACh ;# 
  1618                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1619  0000                     TXSTA1 equ 0FACh ;# 
  1620                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1621  0000                     TXREG equ 0FADh ;# 
  1622                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1623  0000                     TXREG1 equ 0FADh ;# 
  1624                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1625  0000                     RCREG equ 0FAEh ;# 
  1626                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1627  0000                     RCREG1 equ 0FAEh ;# 
  1628                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1629  0000                     SPBRG equ 0FAFh ;# 
  1630                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1631  0000                     SPBRG1 equ 0FAFh ;# 
  1632                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1633  0000                     SPBRGH equ 0FB0h ;# 
  1634                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1635  0000                     CMCON equ 0FB4h ;# 
  1636                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1637  0000                     CVRCON equ 0FB5h ;# 
  1638                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1639  0000                     ECCP1AS equ 0FB6h ;# 
  1640                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1641  0000                     ECCP1DEL equ 0FB7h ;# 
  1642                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1643  0000                     PWM1CON equ 0FB7h ;# 
  1644                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1645  0000                     BAUDCON equ 0FB8h ;# 
  1646                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1647  0000                     BAUDCTL equ 0FB8h ;# 
  1648                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1649  0000                     CCP2CON equ 0FBAh ;# 
  1650                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1651  0000                     CCPR2 equ 0FBBh ;# 
  1652                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1653  0000                     CCPR2L equ 0FBBh ;# 
  1654                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1655  0000                     CCPR2H equ 0FBCh ;# 
  1656                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1657  0000                     ECCP1CON equ 0FBDh ;# 
  1658                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1659  0000                     CCP1CON equ 0FBDh ;# 
  1660                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1661  0000                     CCPR1 equ 0FBEh ;# 
  1662                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1663  0000                     CCPR1L equ 0FBEh ;# 
  1664                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1665  0000                     CCPR1H equ 0FBFh ;# 
  1666                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1667  0000                     ADCON2 equ 0FC0h ;# 
  1668                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1669  0000                     ADCON1 equ 0FC1h ;# 
  1670                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1671  0000                     ADCON0 equ 0FC2h ;# 
  1672                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1673  0000                     ADRES equ 0FC3h ;# 
  1674                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1675  0000                     ADRESL equ 0FC3h ;# 
  1676                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1677  0000                     ADRESH equ 0FC4h ;# 
  1678                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1679  0000                     SSPCON2 equ 0FC5h ;# 
  1680                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1681  0000                     SSP1CON2 equ 0FC5h ;# 
  1682                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1683  0000                     SSPCON1 equ 0FC6h ;# 
  1684                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1685  0000                     SSP1CON1 equ 0FC6h ;# 
  1686                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1687  0000                     SSPSTAT equ 0FC7h ;# 
  1688                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1689  0000                     SSP1STAT equ 0FC7h ;# 
  1690                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1691  0000                     SSPADD equ 0FC8h ;# 
  1692                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1693  0000                     SSP1ADD equ 0FC8h ;# 
  1694                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1695  0000                     SSPBUF equ 0FC9h ;# 
  1696                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1697  0000                     SSP1BUF equ 0FC9h ;# 
  1698                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1699  0000                     T2CON equ 0FCAh ;# 
  1700                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1701  0000                     PR2 equ 0FCBh ;# 
  1702                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1703  0000                     MEMCON equ 0FCBh ;# 
  1704                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1705  0000                     TMR2 equ 0FCCh ;# 
  1706                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1707  0000                     T1CON equ 0FCDh ;# 
  1708                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1709  0000                     TMR1 equ 0FCEh ;# 
  1710                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1711  0000                     TMR1L equ 0FCEh ;# 
  1712                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1713  0000                     TMR1H equ 0FCFh ;# 
  1714                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1715  0000                     RCON equ 0FD0h ;# 
  1716                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1717  0000                     WDTCON equ 0FD1h ;# 
  1718                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1719  0000                     OSCCON equ 0FD3h ;# 
  1720                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1721  0000                     T0CON equ 0FD5h ;# 
  1722                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1723  0000                     TMR0 equ 0FD6h ;# 
  1724                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1725  0000                     TMR0L equ 0FD6h ;# 
  1726                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1727  0000                     TMR0H equ 0FD7h ;# 
  1728                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1729  0000                     STATUS equ 0FD8h ;# 
  1730                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1731  0000                     FSR2 equ 0FD9h ;# 
  1732                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1733  0000                     FSR2L equ 0FD9h ;# 
  1734                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1735  0000                     FSR2H equ 0FDAh ;# 
  1736                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1737  0000                     PLUSW2 equ 0FDBh ;# 
  1738                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1739  0000                     PREINC2 equ 0FDCh ;# 
  1740                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1741  0000                     POSTDEC2 equ 0FDDh ;# 
  1742                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1743  0000                     POSTINC2 equ 0FDEh ;# 
  1744                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1745  0000                     INDF2 equ 0FDFh ;# 
  1746                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1747  0000                     BSR equ 0FE0h ;# 
  1748                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1749  0000                     FSR1 equ 0FE1h ;# 
  1750                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1751  0000                     FSR1L equ 0FE1h ;# 
  1752                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1753  0000                     FSR1H equ 0FE2h ;# 
  1754                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1755  0000                     PLUSW1 equ 0FE3h ;# 
  1756                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1757  0000                     PREINC1 equ 0FE4h ;# 
  1758                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1759  0000                     POSTDEC1 equ 0FE5h ;# 
  1760                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1761  0000                     POSTINC1 equ 0FE6h ;# 
  1762                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1763  0000                     INDF1 equ 0FE7h ;# 
  1764                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1765  0000                     WREG equ 0FE8h ;# 
  1766                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1767  0000                     FSR0 equ 0FE9h ;# 
  1768                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1769  0000                     FSR0L equ 0FE9h ;# 
  1770                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1771  0000                     FSR0H equ 0FEAh ;# 
  1772                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1773  0000                     PLUSW0 equ 0FEBh ;# 
  1774                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1775  0000                     PREINC0 equ 0FECh ;# 
  1776                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1777  0000                     POSTDEC0 equ 0FEDh ;# 
  1778                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1779  0000                     POSTINC0 equ 0FEEh ;# 
  1780                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1781  0000                     INDF0 equ 0FEFh ;# 
  1782                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1783  0000                     INTCON3 equ 0FF0h ;# 
  1784                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1785  0000                     INTCON2 equ 0FF1h ;# 
  1786                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1787  0000                     INTCON equ 0FF2h ;# 
  1788                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1789  0000                     PROD equ 0FF3h ;# 
  1790                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1791  0000                     PRODL equ 0FF3h ;# 
  1792                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1793  0000                     PRODH equ 0FF4h ;# 
  1794                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1795  0000                     TABLAT equ 0FF5h ;# 
  1796                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1797  0000                     TBLPTR equ 0FF6h ;# 
  1798                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1799  0000                     TBLPTRL equ 0FF6h ;# 
  1800                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1801  0000                     TBLPTRH equ 0FF7h ;# 
  1802                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1803  0000                     TBLPTRU equ 0FF8h ;# 
  1804                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1805  0000                     PCLAT equ 0FF9h ;# 
  1806                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1807  0000                     PC equ 0FF9h ;# 
  1808                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1809  0000                     PCL equ 0FF9h ;# 
  1810                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1811  0000                     PCLATH equ 0FFAh ;# 
  1812                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1813  0000                     PCLATU equ 0FFBh ;# 
  1814                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1815  0000                     STKPTR equ 0FFCh ;# 
  1816                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1817  0000                     TOS equ 0FFDh ;# 
  1818                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1819  0000                     TOSL equ 0FFDh ;# 
  1820                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1821  0000                     TOSH equ 0FFEh ;# 
  1822                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1823  0000                     TOSU equ 0FFFh ;# 
  1824                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1825  0000                     PORTA equ 0F80h ;# 
  1826                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1827  0000                     PORTB equ 0F81h ;# 
  1828                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1829  0000                     PORTC equ 0F82h ;# 
  1830                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1831  0000                     PORTD equ 0F83h ;# 
  1832                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1833  0000                     PORTE equ 0F84h ;# 
  1834                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1835  0000                     SSP2CON2 equ 0F85h ;# 
  1836                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1837  0000                     SSP2CON1 equ 0F86h ;# 
  1838                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1839  0000                     SSP2STAT equ 0F87h ;# 
  1840                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1841  0000                     SSP2ADD equ 0F88h ;# 
  1842                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1843  0000                     LATA equ 0F89h ;# 
  1844                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1845  0000                     LATB equ 0F8Ah ;# 
  1846                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1847  0000                     LATC equ 0F8Bh ;# 
  1848                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1849  0000                     LATD equ 0F8Ch ;# 
  1850                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1851  0000                     LATE equ 0F8Dh ;# 
  1852                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1853  0000                     SSP2BUF equ 0F8Eh ;# 
  1854                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1855  0000                     TRISA equ 0F92h ;# 
  1856                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1857  0000                     DDRA equ 0F92h ;# 
  1858                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1859  0000                     TRISB equ 0F93h ;# 
  1860                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1861  0000                     DDRB equ 0F93h ;# 
  1862                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1863  0000                     TRISC equ 0F94h ;# 
  1864                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1865  0000                     DDRC equ 0F94h ;# 
  1866                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1867  0000                     TRISD equ 0F95h ;# 
  1868                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1869  0000                     DDRD equ 0F95h ;# 
  1870                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1871  0000                     TRISE equ 0F96h ;# 
  1872                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1873  0000                     DDRE equ 0F96h ;# 
  1874                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1875  0000                     OSCTUNE equ 0F9Bh ;# 
  1876                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1877  0000                     PIE1 equ 0F9Dh ;# 
  1878                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1879  0000                     PIR1 equ 0F9Eh ;# 
  1880                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1881  0000                     IPR1 equ 0F9Fh ;# 
  1882                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1883  0000                     PIE2 equ 0FA0h ;# 
  1884                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1885  0000                     PIR2 equ 0FA1h ;# 
  1886                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1887  0000                     IPR2 equ 0FA2h ;# 
  1888                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1889  0000                     PIE3 equ 0FA3h ;# 
  1890                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1891  0000                     PIR3 equ 0FA4h ;# 
  1892                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1893  0000                     IPR3 equ 0FA5h ;# 
  1894                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1895  0000                     EECON1 equ 0FA6h ;# 
  1896                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1897  0000                     EECON2 equ 0FA7h ;# 
  1898                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1899  0000                     RCSTA equ 0FABh ;# 
  1900                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1901  0000                     RCSTA1 equ 0FABh ;# 
  1902                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1903  0000                     TXSTA equ 0FACh ;# 
  1904                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1905  0000                     TXSTA1 equ 0FACh ;# 
  1906                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1907  0000                     TXREG equ 0FADh ;# 
  1908                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1909  0000                     TXREG1 equ 0FADh ;# 
  1910                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1911  0000                     RCREG equ 0FAEh ;# 
  1912                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1913  0000                     RCREG1 equ 0FAEh ;# 
  1914                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1915  0000                     SPBRG equ 0FAFh ;# 
  1916                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1917  0000                     SPBRG1 equ 0FAFh ;# 
  1918                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1919  0000                     SPBRGH equ 0FB0h ;# 
  1920                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1921  0000                     CMCON equ 0FB4h ;# 
  1922                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1923  0000                     CVRCON equ 0FB5h ;# 
  1924                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1925  0000                     ECCP1AS equ 0FB6h ;# 
  1926                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1927  0000                     ECCP1DEL equ 0FB7h ;# 
  1928                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1929  0000                     PWM1CON equ 0FB7h ;# 
  1930                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1931  0000                     BAUDCON equ 0FB8h ;# 
  1932                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1933  0000                     BAUDCTL equ 0FB8h ;# 
  1934                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1935  0000                     CCP2CON equ 0FBAh ;# 
  1936                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1937  0000                     CCPR2 equ 0FBBh ;# 
  1938                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1939  0000                     CCPR2L equ 0FBBh ;# 
  1940                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1941  0000                     CCPR2H equ 0FBCh ;# 
  1942                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1943  0000                     ECCP1CON equ 0FBDh ;# 
  1944                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1945  0000                     CCP1CON equ 0FBDh ;# 
  1946                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1947  0000                     CCPR1 equ 0FBEh ;# 
  1948                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1949  0000                     CCPR1L equ 0FBEh ;# 
  1950                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1951  0000                     CCPR1H equ 0FBFh ;# 
  1952                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1953  0000                     ADCON2 equ 0FC0h ;# 
  1954                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1955  0000                     ADCON1 equ 0FC1h ;# 
  1956                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1957  0000                     ADCON0 equ 0FC2h ;# 
  1958                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1959  0000                     ADRES equ 0FC3h ;# 
  1960                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1961  0000                     ADRESL equ 0FC3h ;# 
  1962                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1963  0000                     ADRESH equ 0FC4h ;# 
  1964                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1965  0000                     SSPCON2 equ 0FC5h ;# 
  1966                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1967  0000                     SSP1CON2 equ 0FC5h ;# 
  1968                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1969  0000                     SSPCON1 equ 0FC6h ;# 
  1970                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1971  0000                     SSP1CON1 equ 0FC6h ;# 
  1972                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1973  0000                     SSPSTAT equ 0FC7h ;# 
  1974                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1975  0000                     SSP1STAT equ 0FC7h ;# 
  1976                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1977  0000                     SSPADD equ 0FC8h ;# 
  1978                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1979  0000                     SSP1ADD equ 0FC8h ;# 
  1980                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1981  0000                     SSPBUF equ 0FC9h ;# 
  1982                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1983  0000                     SSP1BUF equ 0FC9h ;# 
  1984                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1985  0000                     T2CON equ 0FCAh ;# 
  1986                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1987  0000                     PR2 equ 0FCBh ;# 
  1988                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1989  0000                     MEMCON equ 0FCBh ;# 
  1990                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1991  0000                     TMR2 equ 0FCCh ;# 
  1992                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1993  0000                     T1CON equ 0FCDh ;# 
  1994                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1995  0000                     TMR1 equ 0FCEh ;# 
  1996                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1997  0000                     TMR1L equ 0FCEh ;# 
  1998                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1999  0000                     TMR1H equ 0FCFh ;# 
  2000                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2001  0000                     RCON equ 0FD0h ;# 
  2002                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2003  0000                     WDTCON equ 0FD1h ;# 
  2004                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2005  0000                     OSCCON equ 0FD3h ;# 
  2006                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2007  0000                     T0CON equ 0FD5h ;# 
  2008                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2009  0000                     TMR0 equ 0FD6h ;# 
  2010                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2011  0000                     TMR0L equ 0FD6h ;# 
  2012                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2013  0000                     TMR0H equ 0FD7h ;# 
  2014                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2015  0000                     STATUS equ 0FD8h ;# 
  2016                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2017  0000                     FSR2 equ 0FD9h ;# 
  2018                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2019  0000                     FSR2L equ 0FD9h ;# 
  2020                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2021  0000                     FSR2H equ 0FDAh ;# 
  2022                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2023  0000                     PLUSW2 equ 0FDBh ;# 
  2024                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2025  0000                     PREINC2 equ 0FDCh ;# 
  2026                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2027  0000                     POSTDEC2 equ 0FDDh ;# 
  2028                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2029  0000                     POSTINC2 equ 0FDEh ;# 
  2030                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2031  0000                     INDF2 equ 0FDFh ;# 
  2032                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2033  0000                     BSR equ 0FE0h ;# 
  2034                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2035  0000                     FSR1 equ 0FE1h ;# 
  2036                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2037  0000                     FSR1L equ 0FE1h ;# 
  2038                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2039  0000                     FSR1H equ 0FE2h ;# 
  2040                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2041  0000                     PLUSW1 equ 0FE3h ;# 
  2042                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2043  0000                     PREINC1 equ 0FE4h ;# 
  2044                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2045  0000                     POSTDEC1 equ 0FE5h ;# 
  2046                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2047  0000                     POSTINC1 equ 0FE6h ;# 
  2048                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2049  0000                     INDF1 equ 0FE7h ;# 
  2050                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2051  0000                     WREG equ 0FE8h ;# 
  2052                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2053  0000                     FSR0 equ 0FE9h ;# 
  2054                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2055  0000                     FSR0L equ 0FE9h ;# 
  2056                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2057  0000                     FSR0H equ 0FEAh ;# 
  2058                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2059  0000                     PLUSW0 equ 0FEBh ;# 
  2060                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2061  0000                     PREINC0 equ 0FECh ;# 
  2062                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2063  0000                     POSTDEC0 equ 0FEDh ;# 
  2064                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2065  0000                     POSTINC0 equ 0FEEh ;# 
  2066                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2067  0000                     INDF0 equ 0FEFh ;# 
  2068                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2069  0000                     INTCON3 equ 0FF0h ;# 
  2070                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2071  0000                     INTCON2 equ 0FF1h ;# 
  2072                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2073  0000                     INTCON equ 0FF2h ;# 
  2074                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2075  0000                     PROD equ 0FF3h ;# 
  2076                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2077  0000                     PRODL equ 0FF3h ;# 
  2078                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2079  0000                     PRODH equ 0FF4h ;# 
  2080                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2081  0000                     TABLAT equ 0FF5h ;# 
  2082                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2083  0000                     TBLPTR equ 0FF6h ;# 
  2084                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2085  0000                     TBLPTRL equ 0FF6h ;# 
  2086                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2087  0000                     TBLPTRH equ 0FF7h ;# 
  2088                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2089  0000                     TBLPTRU equ 0FF8h ;# 
  2090                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2091  0000                     PCLAT equ 0FF9h ;# 
  2092                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2093  0000                     PC equ 0FF9h ;# 
  2094                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2095  0000                     PCL equ 0FF9h ;# 
  2096                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2097  0000                     PCLATH equ 0FFAh ;# 
  2098                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2099  0000                     PCLATU equ 0FFBh ;# 
  2100                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2101  0000                     STKPTR equ 0FFCh ;# 
  2102                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2103  0000                     TOS equ 0FFDh ;# 
  2104                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2105  0000                     TOSL equ 0FFDh ;# 
  2106                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2107  0000                     TOSH equ 0FFEh ;# 
  2108                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2109  0000                     TOSU equ 0FFFh ;# 
  2110                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2111  0000                     PORTA equ 0F80h ;# 
  2112                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2113  0000                     PORTB equ 0F81h ;# 
  2114                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2115  0000                     PORTC equ 0F82h ;# 
  2116                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2117  0000                     PORTD equ 0F83h ;# 
  2118                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2119  0000                     PORTE equ 0F84h ;# 
  2120                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2121  0000                     SSP2CON2 equ 0F85h ;# 
  2122                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2123  0000                     SSP2CON1 equ 0F86h ;# 
  2124                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2125  0000                     SSP2STAT equ 0F87h ;# 
  2126                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2127  0000                     SSP2ADD equ 0F88h ;# 
  2128                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2129  0000                     LATA equ 0F89h ;# 
  2130                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2131  0000                     LATB equ 0F8Ah ;# 
  2132                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2133  0000                     LATC equ 0F8Bh ;# 
  2134                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2135  0000                     LATD equ 0F8Ch ;# 
  2136                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2137  0000                     LATE equ 0F8Dh ;# 
  2138                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2139  0000                     SSP2BUF equ 0F8Eh ;# 
  2140                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2141  0000                     TRISA equ 0F92h ;# 
  2142                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2143  0000                     DDRA equ 0F92h ;# 
  2144                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2145  0000                     TRISB equ 0F93h ;# 
  2146                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2147  0000                     DDRB equ 0F93h ;# 
  2148                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2149  0000                     TRISC equ 0F94h ;# 
  2150                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2151  0000                     DDRC equ 0F94h ;# 
  2152                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2153  0000                     TRISD equ 0F95h ;# 
  2154                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2155  0000                     DDRD equ 0F95h ;# 
  2156                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2157  0000                     TRISE equ 0F96h ;# 
  2158                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2159  0000                     DDRE equ 0F96h ;# 
  2160                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2161  0000                     OSCTUNE equ 0F9Bh ;# 
  2162                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2163  0000                     PIE1 equ 0F9Dh ;# 
  2164                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2165  0000                     PIR1 equ 0F9Eh ;# 
  2166                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2167  0000                     IPR1 equ 0F9Fh ;# 
  2168                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2169  0000                     PIE2 equ 0FA0h ;# 
  2170                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2171  0000                     PIR2 equ 0FA1h ;# 
  2172                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2173  0000                     IPR2 equ 0FA2h ;# 
  2174                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2175  0000                     PIE3 equ 0FA3h ;# 
  2176                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2177  0000                     PIR3 equ 0FA4h ;# 
  2178                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2179  0000                     IPR3 equ 0FA5h ;# 
  2180                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2181  0000                     EECON1 equ 0FA6h ;# 
  2182                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2183  0000                     EECON2 equ 0FA7h ;# 
  2184                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2185  0000                     RCSTA equ 0FABh ;# 
  2186                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2187  0000                     RCSTA1 equ 0FABh ;# 
  2188                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2189  0000                     TXSTA equ 0FACh ;# 
  2190                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2191  0000                     TXSTA1 equ 0FACh ;# 
  2192                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2193  0000                     TXREG equ 0FADh ;# 
  2194                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2195  0000                     TXREG1 equ 0FADh ;# 
  2196                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2197  0000                     RCREG equ 0FAEh ;# 
  2198                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2199  0000                     RCREG1 equ 0FAEh ;# 
  2200                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2201  0000                     SPBRG equ 0FAFh ;# 
  2202                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2203  0000                     SPBRG1 equ 0FAFh ;# 
  2204                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2205  0000                     SPBRGH equ 0FB0h ;# 
  2206                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2207  0000                     CMCON equ 0FB4h ;# 
  2208                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2209  0000                     CVRCON equ 0FB5h ;# 
  2210                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2211  0000                     ECCP1AS equ 0FB6h ;# 
  2212                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2213  0000                     ECCP1DEL equ 0FB7h ;# 
  2214                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2215  0000                     PWM1CON equ 0FB7h ;# 
  2216                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2217  0000                     BAUDCON equ 0FB8h ;# 
  2218                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2219  0000                     BAUDCTL equ 0FB8h ;# 
  2220                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2221  0000                     CCP2CON equ 0FBAh ;# 
  2222                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2223  0000                     CCPR2 equ 0FBBh ;# 
  2224                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2225  0000                     CCPR2L equ 0FBBh ;# 
  2226                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2227  0000                     CCPR2H equ 0FBCh ;# 
  2228                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2229  0000                     ECCP1CON equ 0FBDh ;# 
  2230                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2231  0000                     CCP1CON equ 0FBDh ;# 
  2232                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2233  0000                     CCPR1 equ 0FBEh ;# 
  2234                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2235  0000                     CCPR1L equ 0FBEh ;# 
  2236                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2237  0000                     CCPR1H equ 0FBFh ;# 
  2238                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2239  0000                     ADCON2 equ 0FC0h ;# 
  2240                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2241  0000                     ADCON1 equ 0FC1h ;# 
  2242                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2243  0000                     ADCON0 equ 0FC2h ;# 
  2244                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2245  0000                     ADRES equ 0FC3h ;# 
  2246                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2247  0000                     ADRESL equ 0FC3h ;# 
  2248                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2249  0000                     ADRESH equ 0FC4h ;# 
  2250                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2251  0000                     SSPCON2 equ 0FC5h ;# 
  2252                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2253  0000                     SSP1CON2 equ 0FC5h ;# 
  2254                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2255  0000                     SSPCON1 equ 0FC6h ;# 
  2256                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2257  0000                     SSP1CON1 equ 0FC6h ;# 
  2258                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2259  0000                     SSPSTAT equ 0FC7h ;# 
  2260                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2261  0000                     SSP1STAT equ 0FC7h ;# 
  2262                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2263  0000                     SSPADD equ 0FC8h ;# 
  2264                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2265  0000                     SSP1ADD equ 0FC8h ;# 
  2266                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2267  0000                     SSPBUF equ 0FC9h ;# 
  2268                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2269  0000                     SSP1BUF equ 0FC9h ;# 
  2270                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2271  0000                     T2CON equ 0FCAh ;# 
  2272                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2273  0000                     PR2 equ 0FCBh ;# 
  2274                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2275  0000                     MEMCON equ 0FCBh ;# 
  2276                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2277  0000                     TMR2 equ 0FCCh ;# 
  2278                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2279  0000                     T1CON equ 0FCDh ;# 
  2280                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2281  0000                     TMR1 equ 0FCEh ;# 
  2282                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2283  0000                     TMR1L equ 0FCEh ;# 
  2284                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2285  0000                     TMR1H equ 0FCFh ;# 
  2286                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2287  0000                     RCON equ 0FD0h ;# 
  2288                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2289  0000                     WDTCON equ 0FD1h ;# 
  2290                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2291  0000                     OSCCON equ 0FD3h ;# 
  2292                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2293  0000                     T0CON equ 0FD5h ;# 
  2294                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2295  0000                     TMR0 equ 0FD6h ;# 
  2296                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2297  0000                     TMR0L equ 0FD6h ;# 
  2298                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2299  0000                     TMR0H equ 0FD7h ;# 
  2300                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2301  0000                     STATUS equ 0FD8h ;# 
  2302                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2303  0000                     FSR2 equ 0FD9h ;# 
  2304                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2305  0000                     FSR2L equ 0FD9h ;# 
  2306                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2307  0000                     FSR2H equ 0FDAh ;# 
  2308                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2309  0000                     PLUSW2 equ 0FDBh ;# 
  2310                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2311  0000                     PREINC2 equ 0FDCh ;# 
  2312                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2313  0000                     POSTDEC2 equ 0FDDh ;# 
  2314                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2315  0000                     POSTINC2 equ 0FDEh ;# 
  2316                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2317  0000                     INDF2 equ 0FDFh ;# 
  2318                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2319  0000                     BSR equ 0FE0h ;# 
  2320                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2321  0000                     FSR1 equ 0FE1h ;# 
  2322                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2323  0000                     FSR1L equ 0FE1h ;# 
  2324                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2325  0000                     FSR1H equ 0FE2h ;# 
  2326                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2327  0000                     PLUSW1 equ 0FE3h ;# 
  2328                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2329  0000                     PREINC1 equ 0FE4h ;# 
  2330                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2331  0000                     POSTDEC1 equ 0FE5h ;# 
  2332                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2333  0000                     POSTINC1 equ 0FE6h ;# 
  2334                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2335  0000                     INDF1 equ 0FE7h ;# 
  2336                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2337  0000                     WREG equ 0FE8h ;# 
  2338                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2339  0000                     FSR0 equ 0FE9h ;# 
  2340                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2341  0000                     FSR0L equ 0FE9h ;# 
  2342                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2343  0000                     FSR0H equ 0FEAh ;# 
  2344                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2345  0000                     PLUSW0 equ 0FEBh ;# 
  2346                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2347  0000                     PREINC0 equ 0FECh ;# 
  2348                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2349  0000                     POSTDEC0 equ 0FEDh ;# 
  2350                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2351  0000                     POSTINC0 equ 0FEEh ;# 
  2352                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2353  0000                     INDF0 equ 0FEFh ;# 
  2354                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2355  0000                     INTCON3 equ 0FF0h ;# 
  2356                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2357  0000                     INTCON2 equ 0FF1h ;# 
  2358                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2359  0000                     INTCON equ 0FF2h ;# 
  2360                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2361  0000                     PROD equ 0FF3h ;# 
  2362                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2363  0000                     PRODL equ 0FF3h ;# 
  2364                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2365  0000                     PRODH equ 0FF4h ;# 
  2366                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2367  0000                     TABLAT equ 0FF5h ;# 
  2368                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2369  0000                     TBLPTR equ 0FF6h ;# 
  2370                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2371  0000                     TBLPTRL equ 0FF6h ;# 
  2372                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2373  0000                     TBLPTRH equ 0FF7h ;# 
  2374                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2375  0000                     TBLPTRU equ 0FF8h ;# 
  2376                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2377  0000                     PCLAT equ 0FF9h ;# 
  2378                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2379  0000                     PC equ 0FF9h ;# 
  2380                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2381  0000                     PCL equ 0FF9h ;# 
  2382                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2383  0000                     PCLATH equ 0FFAh ;# 
  2384                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2385  0000                     PCLATU equ 0FFBh ;# 
  2386                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2387  0000                     STKPTR equ 0FFCh ;# 
  2388                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2389  0000                     TOS equ 0FFDh ;# 
  2390                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2391  0000                     TOSL equ 0FFDh ;# 
  2392                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2393  0000                     TOSH equ 0FFEh ;# 
  2394                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2395  0000                     TOSU equ 0FFFh ;# 
  2396                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2397  0000                     PORTA equ 0F80h ;# 
  2398                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2399  0000                     PORTB equ 0F81h ;# 
  2400                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2401  0000                     PORTC equ 0F82h ;# 
  2402                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2403  0000                     PORTD equ 0F83h ;# 
  2404                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2405  0000                     PORTE equ 0F84h ;# 
  2406                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2407  0000                     SSP2CON2 equ 0F85h ;# 
  2408                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2409  0000                     SSP2CON1 equ 0F86h ;# 
  2410                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2411  0000                     SSP2STAT equ 0F87h ;# 
  2412                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2413  0000                     SSP2ADD equ 0F88h ;# 
  2414                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2415  0000                     LATA equ 0F89h ;# 
  2416                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2417  0000                     LATB equ 0F8Ah ;# 
  2418                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2419  0000                     LATC equ 0F8Bh ;# 
  2420                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2421  0000                     LATD equ 0F8Ch ;# 
  2422                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2423  0000                     LATE equ 0F8Dh ;# 
  2424                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2425  0000                     SSP2BUF equ 0F8Eh ;# 
  2426                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2427  0000                     TRISA equ 0F92h ;# 
  2428                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2429  0000                     DDRA equ 0F92h ;# 
  2430                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2431  0000                     TRISB equ 0F93h ;# 
  2432                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2433  0000                     DDRB equ 0F93h ;# 
  2434                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2435  0000                     TRISC equ 0F94h ;# 
  2436                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2437  0000                     DDRC equ 0F94h ;# 
  2438                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2439  0000                     TRISD equ 0F95h ;# 
  2440                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2441  0000                     DDRD equ 0F95h ;# 
  2442                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2443  0000                     TRISE equ 0F96h ;# 
  2444                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2445  0000                     DDRE equ 0F96h ;# 
  2446                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2447  0000                     OSCTUNE equ 0F9Bh ;# 
  2448                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2449  0000                     PIE1 equ 0F9Dh ;# 
  2450                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2451  0000                     PIR1 equ 0F9Eh ;# 
  2452                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2453  0000                     IPR1 equ 0F9Fh ;# 
  2454                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2455  0000                     PIE2 equ 0FA0h ;# 
  2456                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2457  0000                     PIR2 equ 0FA1h ;# 
  2458                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2459  0000                     IPR2 equ 0FA2h ;# 
  2460                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2461  0000                     PIE3 equ 0FA3h ;# 
  2462                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2463  0000                     PIR3 equ 0FA4h ;# 
  2464                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2465  0000                     IPR3 equ 0FA5h ;# 
  2466                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2467  0000                     EECON1 equ 0FA6h ;# 
  2468                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2469  0000                     EECON2 equ 0FA7h ;# 
  2470                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2471  0000                     RCSTA equ 0FABh ;# 
  2472                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2473  0000                     RCSTA1 equ 0FABh ;# 
  2474                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2475  0000                     TXSTA equ 0FACh ;# 
  2476                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2477  0000                     TXSTA1 equ 0FACh ;# 
  2478                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2479  0000                     TXREG equ 0FADh ;# 
  2480                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2481  0000                     TXREG1 equ 0FADh ;# 
  2482                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2483  0000                     RCREG equ 0FAEh ;# 
  2484                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2485  0000                     RCREG1 equ 0FAEh ;# 
  2486                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2487  0000                     SPBRG equ 0FAFh ;# 
  2488                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2489  0000                     SPBRG1 equ 0FAFh ;# 
  2490                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2491  0000                     SPBRGH equ 0FB0h ;# 
  2492                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2493  0000                     CMCON equ 0FB4h ;# 
  2494                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2495  0000                     CVRCON equ 0FB5h ;# 
  2496                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2497  0000                     ECCP1AS equ 0FB6h ;# 
  2498                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2499  0000                     ECCP1DEL equ 0FB7h ;# 
  2500                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2501  0000                     PWM1CON equ 0FB7h ;# 
  2502                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2503  0000                     BAUDCON equ 0FB8h ;# 
  2504                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2505  0000                     BAUDCTL equ 0FB8h ;# 
  2506                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2507  0000                     CCP2CON equ 0FBAh ;# 
  2508                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2509  0000                     CCPR2 equ 0FBBh ;# 
  2510                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2511  0000                     CCPR2L equ 0FBBh ;# 
  2512                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2513  0000                     CCPR2H equ 0FBCh ;# 
  2514                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2515  0000                     ECCP1CON equ 0FBDh ;# 
  2516                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2517  0000                     CCP1CON equ 0FBDh ;# 
  2518                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2519  0000                     CCPR1 equ 0FBEh ;# 
  2520                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2521  0000                     CCPR1L equ 0FBEh ;# 
  2522                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2523  0000                     CCPR1H equ 0FBFh ;# 
  2524                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2525  0000                     ADCON2 equ 0FC0h ;# 
  2526                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2527  0000                     ADCON1 equ 0FC1h ;# 
  2528                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2529  0000                     ADCON0 equ 0FC2h ;# 
  2530                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2531  0000                     ADRES equ 0FC3h ;# 
  2532                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2533  0000                     ADRESL equ 0FC3h ;# 
  2534                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2535  0000                     ADRESH equ 0FC4h ;# 
  2536                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2537  0000                     SSPCON2 equ 0FC5h ;# 
  2538                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2539  0000                     SSP1CON2 equ 0FC5h ;# 
  2540                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2541  0000                     SSPCON1 equ 0FC6h ;# 
  2542                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2543  0000                     SSP1CON1 equ 0FC6h ;# 
  2544                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2545  0000                     SSPSTAT equ 0FC7h ;# 
  2546                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2547  0000                     SSP1STAT equ 0FC7h ;# 
  2548                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2549  0000                     SSPADD equ 0FC8h ;# 
  2550                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2551  0000                     SSP1ADD equ 0FC8h ;# 
  2552                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2553  0000                     SSPBUF equ 0FC9h ;# 
  2554                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2555  0000                     SSP1BUF equ 0FC9h ;# 
  2556                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2557  0000                     T2CON equ 0FCAh ;# 
  2558                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2559  0000                     PR2 equ 0FCBh ;# 
  2560                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2561  0000                     MEMCON equ 0FCBh ;# 
  2562                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2563  0000                     TMR2 equ 0FCCh ;# 
  2564                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2565  0000                     T1CON equ 0FCDh ;# 
  2566                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2567  0000                     TMR1 equ 0FCEh ;# 
  2568                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2569  0000                     TMR1L equ 0FCEh ;# 
  2570                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2571  0000                     TMR1H equ 0FCFh ;# 
  2572                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2573  0000                     RCON equ 0FD0h ;# 
  2574                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2575  0000                     WDTCON equ 0FD1h ;# 
  2576                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2577  0000                     OSCCON equ 0FD3h ;# 
  2578                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2579  0000                     T0CON equ 0FD5h ;# 
  2580                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2581  0000                     TMR0 equ 0FD6h ;# 
  2582                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2583  0000                     TMR0L equ 0FD6h ;# 
  2584                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2585  0000                     TMR0H equ 0FD7h ;# 
  2586                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2587  0000                     STATUS equ 0FD8h ;# 
  2588                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2589  0000                     FSR2 equ 0FD9h ;# 
  2590                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2591  0000                     FSR2L equ 0FD9h ;# 
  2592                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2593  0000                     FSR2H equ 0FDAh ;# 
  2594                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2595  0000                     PLUSW2 equ 0FDBh ;# 
  2596                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2597  0000                     PREINC2 equ 0FDCh ;# 
  2598                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2599  0000                     POSTDEC2 equ 0FDDh ;# 
  2600                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2601  0000                     POSTINC2 equ 0FDEh ;# 
  2602                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2603  0000                     INDF2 equ 0FDFh ;# 
  2604                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2605  0000                     BSR equ 0FE0h ;# 
  2606                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2607  0000                     FSR1 equ 0FE1h ;# 
  2608                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2609  0000                     FSR1L equ 0FE1h ;# 
  2610                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2611  0000                     FSR1H equ 0FE2h ;# 
  2612                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2613  0000                     PLUSW1 equ 0FE3h ;# 
  2614                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2615  0000                     PREINC1 equ 0FE4h ;# 
  2616                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2617  0000                     POSTDEC1 equ 0FE5h ;# 
  2618                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2619  0000                     POSTINC1 equ 0FE6h ;# 
  2620                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2621  0000                     INDF1 equ 0FE7h ;# 
  2622                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2623  0000                     WREG equ 0FE8h ;# 
  2624                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2625  0000                     FSR0 equ 0FE9h ;# 
  2626                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2627  0000                     FSR0L equ 0FE9h ;# 
  2628                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2629  0000                     FSR0H equ 0FEAh ;# 
  2630                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2631  0000                     PLUSW0 equ 0FEBh ;# 
  2632                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2633  0000                     PREINC0 equ 0FECh ;# 
  2634                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2635  0000                     POSTDEC0 equ 0FEDh ;# 
  2636                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2637  0000                     POSTINC0 equ 0FEEh ;# 
  2638                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2639  0000                     INDF0 equ 0FEFh ;# 
  2640                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2641  0000                     INTCON3 equ 0FF0h ;# 
  2642                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2643  0000                     INTCON2 equ 0FF1h ;# 
  2644                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2645  0000                     INTCON equ 0FF2h ;# 
  2646                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2647  0000                     PROD equ 0FF3h ;# 
  2648                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2649  0000                     PRODL equ 0FF3h ;# 
  2650                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2651  0000                     PRODH equ 0FF4h ;# 
  2652                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2653  0000                     TABLAT equ 0FF5h ;# 
  2654                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2655  0000                     TBLPTR equ 0FF6h ;# 
  2656                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2657  0000                     TBLPTRL equ 0FF6h ;# 
  2658                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2659  0000                     TBLPTRH equ 0FF7h ;# 
  2660                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2661  0000                     TBLPTRU equ 0FF8h ;# 
  2662                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2663  0000                     PCLAT equ 0FF9h ;# 
  2664                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2665  0000                     PC equ 0FF9h ;# 
  2666                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2667  0000                     PCL equ 0FF9h ;# 
  2668                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2669  0000                     PCLATH equ 0FFAh ;# 
  2670                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2671  0000                     PCLATU equ 0FFBh ;# 
  2672                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2673  0000                     STKPTR equ 0FFCh ;# 
  2674                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2675  0000                     TOS equ 0FFDh ;# 
  2676                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2677  0000                     TOSL equ 0FFDh ;# 
  2678                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2679  0000                     TOSH equ 0FFEh ;# 
  2680                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2681  0000                     TOSU equ 0FFFh ;# 
  2682                           	FNCALL	_main,_init_uart_recv
  2683                           	FNCALL	_main,_init_i2c
  2684                           	FNCALL	_main,_init_timer1_lthread
  2685                           	FNCALL	_main,_init_queues
  2686                           	FNCALL	_main,_OpenTimer1
  2687                           	FNCALL	_main,_enable_interrupts
  2688                           	FNCALL	_main,_i2c_configure_slave
  2689                           	FNCALL	_main,_OpenUSART
  2690                           	FNCALL	_main,_block_on_To_msgqueues
  2691                           	FNCALL	_main,_ToMainHigh_recvmsg
  2692                           	FNCALL	_main,_timer0_lthread
  2693                           	FNCALL	_main,_start_i2c_slave_reply
  2694                           	FNCALL	_main,_ToMainLow_recvmsg
  2695                           	FNCALL	_main,_timer1_lthread
  2696                           	FNCALL	_main,_uart_lthread
  2697                           	FNCALL	_init_timer1_lthread,_OpenADC
  2698                           	FNCALL	_init_timer1_lthread,_SetChanADC
  2699                           	FNCALL	_init_queues,_init_queue
  2700                           	FNCALL	_block_on_To_msgqueues,_in_main
  2701                           	FNCALL	_block_on_To_msgqueues,_check_msg
  2702                           	FNCALL	_block_on_To_msgqueues,_Delay1KTCYx
  2703                           	FNCALL	_in_main,_in_low_int
  2704                           	FNCALL	_in_main,_in_high_int
  2705                           	FNCALL	_in_low_int,_in_high_int
  2706                           	FNCALL	_ToMainHigh_recvmsg,_recv_msg
  2707                           	FNCALL	_ToMainLow_recvmsg,_recv_msg
  2708                           	FNCALL	_timer1_lthread,_ConvertADC
  2709                           	FNCALL	_recv_msg,_memcpy
  2710                           	FNROOT	_main
  2711                           	FNCALL	_InterruptHandlerHigh,_i2c_int_handler
  2712                           	FNCALL	_InterruptHandlerHigh,_timer0_int_handler
  2713                           	FNCALL	_InterruptHandlerHigh,_SleepIfOkay
  2714                           	FNCALL	_i2c_int_handler,_handle_start
  2715                           	FNCALL	_i2c_int_handler,_ToMainHigh_sendmsg
  2716                           	FNCALL	_timer0_int_handler,_WriteTimer0
  2717                           	FNCALL	_timer0_int_handler,_FromMainHigh_recvmsg
  2718                           	FNCALL	_timer0_int_handler,_ToMainHigh_sendmsg
  2719                           	FNCALL	_SleepIfOkay,i2_in_low_int
  2720                           	FNCALL	_SleepIfOkay,i2_in_high_int
  2721                           	FNCALL	_SleepIfOkay,i2_check_msg
  2722                           	FNCALL	_SleepIfOkay,_enter_sleep_mode
  2723                           	FNCALL	_ToMainHigh_sendmsg,i2_send_msg
  2724                           	FNCALL	_FromMainHigh_recvmsg,i2_recv_msg
  2725                           	FNCALL	i2_in_low_int,i2_in_high_int
  2726                           	FNCALL	i2_send_msg,i2_memcpy
  2727                           	FNCALL	i2_recv_msg,i2_memcpy
  2728                           	FNCALL	intlevel2,_InterruptHandlerHigh
  2729                           	global	intlevel2
  2730                           	FNROOT	intlevel2
  2731                           	FNCALL	_InterruptHandlerLow,_timer1_int_handler
  2732                           	FNCALL	_InterruptHandlerLow,_adc_int_handler
  2733                           	FNCALL	_InterruptHandlerLow,_uart_recv_int_handler
  2734                           	FNCALL	_timer1_int_handler,_ReadTimer1
  2735                           	FNCALL	_timer1_int_handler,_ToMainLow_sendmsg
  2736                           	FNCALL	_timer1_int_handler,_WriteTimer1
  2737                           	FNCALL	_adc_int_handler,_ReadADC
  2738                           	FNCALL	_adc_int_handler,_ToMainLow_sendmsg
  2739                           	FNCALL	_uart_recv_int_handler,_ReadUSART
  2740                           	FNCALL	_uart_recv_int_handler,_ToMainLow_sendmsg
  2741                           	FNCALL	_ToMainLow_sendmsg,_send_msg
  2742                           	FNCALL	_send_msg,i1_memcpy
  2743                           	FNCALL	intlevel1,_InterruptHandlerLow
  2744                           	global	intlevel1
  2745                           	FNROOT	intlevel1
  2746                           	global	_MQ_Main_Willing_to_block
  2747                           	global	_USART_Status
  2748                           	global	_ToMainLow_MQ
  2749                           	global	_FromMainHigh_MQ
  2750                           	global	_FromMainLow_MQ
  2751                           	global	_ToMainHigh_MQ
  2752                           	global	_PC
  2753  0000                     _PC	set	0xFF9
  2754                           	global	_PCLAT
  2755  0000                     _PCLAT	set	0xFF9
  2756                           	global	_TBLPTR
  2757  0000                     _TBLPTR	set	0xFF6
  2758                           	global	_TOS
  2759  0000                     _TOS	set	0xFFD
  2760                           	global	_ADRES
  2761  0000                     _ADRES	set	0xFC3
  2762                           	global	_CCPR1
  2763  0000                     _CCPR1	set	0xFBE
  2764                           	global	_CCPR2
  2765  0000                     _CCPR2	set	0xFBB
  2766                           	global	_FSR0
  2767  0000                     _FSR0	set	0xFE9
  2768                           	global	_FSR1
  2769  0000                     _FSR1	set	0xFE1
  2770                           	global	_FSR2
  2771  0000                     _FSR2	set	0xFD9
  2772                           	global	_PROD
  2773  0000                     _PROD	set	0xFF3
  2774                           	global	_TMR0
  2775  0000                     _TMR0	set	0xFD6
  2776                           	global	_TMR1
  2777  0000                     _TMR1	set	0xFCE
  2778                           	global	_ADCON0
  2779  0000                     _ADCON0	set	0xFC2
  2780                           	global	_ADCON0bits
  2781  0000                     _ADCON0bits	set	0xFC2
  2782                           	global	_ADCON1
  2783  0000                     _ADCON1	set	0xFC1
  2784                           	global	_ADCON1bits
  2785  0000                     _ADCON1bits	set	0xFC1
  2786                           	global	_ADCON2
  2787  0000                     _ADCON2	set	0xFC0
  2788                           	global	_ADCON2bits
  2789  0000                     _ADCON2bits	set	0xFC0
  2790                           	global	_ADRESH
  2791  0000                     _ADRESH	set	0xFC4
  2792                           	global	_ADRESL
  2793  0000                     _ADRESL	set	0xFC3
  2794                           	global	_BAUDCON
  2795  0000                     _BAUDCON	set	0xFB8
  2796                           	global	_BAUDCONbits
  2797  0000                     _BAUDCONbits	set	0xFB8
  2798                           	global	_BAUDCTL
  2799  0000                     _BAUDCTL	set	0xFB8
  2800                           	global	_BAUDCTLbits
  2801  0000                     _BAUDCTLbits	set	0xFB8
  2802                           	global	_BSR
  2803  0000                     _BSR	set	0xFE0
  2804                           	global	_CCP1CON
  2805  0000                     _CCP1CON	set	0xFBD
  2806                           	global	_CCP1CONbits
  2807  0000                     _CCP1CONbits	set	0xFBD
  2808                           	global	_CCP2CON
  2809  0000                     _CCP2CON	set	0xFBA
  2810                           	global	_CCP2CONbits
  2811  0000                     _CCP2CONbits	set	0xFBA
  2812                           	global	_CCPR1H
  2813  0000                     _CCPR1H	set	0xFBF
  2814                           	global	_CCPR1L
  2815  0000                     _CCPR1L	set	0xFBE
  2816                           	global	_CCPR2H
  2817  0000                     _CCPR2H	set	0xFBC
  2818                           	global	_CCPR2L
  2819  0000                     _CCPR2L	set	0xFBB
  2820                           	global	_CMCON
  2821  0000                     _CMCON	set	0xFB4
  2822                           	global	_CMCONbits
  2823  0000                     _CMCONbits	set	0xFB4
  2824                           	global	_CVRCON
  2825  0000                     _CVRCON	set	0xFB5
  2826                           	global	_CVRCONbits
  2827  0000                     _CVRCONbits	set	0xFB5
  2828                           	global	_DDRA
  2829  0000                     _DDRA	set	0xF92
  2830                           	global	_DDRAbits
  2831  0000                     _DDRAbits	set	0xF92
  2832                           	global	_DDRB
  2833  0000                     _DDRB	set	0xF93
  2834                           	global	_DDRBbits
  2835  0000                     _DDRBbits	set	0xF93
  2836                           	global	_DDRC
  2837  0000                     _DDRC	set	0xF94
  2838                           	global	_DDRCbits
  2839  0000                     _DDRCbits	set	0xF94
  2840                           	global	_DDRD
  2841  0000                     _DDRD	set	0xF95
  2842                           	global	_DDRDbits
  2843  0000                     _DDRDbits	set	0xF95
  2844                           	global	_DDRE
  2845  0000                     _DDRE	set	0xF96
  2846                           	global	_DDREbits
  2847  0000                     _DDREbits	set	0xF96
  2848                           	global	_ECCP1AS
  2849  0000                     _ECCP1AS	set	0xFB6
  2850                           	global	_ECCP1ASbits
  2851  0000                     _ECCP1ASbits	set	0xFB6
  2852                           	global	_ECCP1CON
  2853  0000                     _ECCP1CON	set	0xFBD
  2854                           	global	_ECCP1CONbits
  2855  0000                     _ECCP1CONbits	set	0xFBD
  2856                           	global	_ECCP1DEL
  2857  0000                     _ECCP1DEL	set	0xFB7
  2858                           	global	_ECCP1DELbits
  2859  0000                     _ECCP1DELbits	set	0xFB7
  2860                           	global	_EECON1
  2861  0000                     _EECON1	set	0xFA6
  2862                           	global	_EECON1bits
  2863  0000                     _EECON1bits	set	0xFA6
  2864                           	global	_EECON2
  2865  0000                     _EECON2	set	0xFA7
  2866                           	global	_FSR0H
  2867  0000                     _FSR0H	set	0xFEA
  2868                           	global	_FSR0L
  2869  0000                     _FSR0L	set	0xFE9
  2870                           	global	_FSR1H
  2871  0000                     _FSR1H	set	0xFE2
  2872                           	global	_FSR1L
  2873  0000                     _FSR1L	set	0xFE1
  2874                           	global	_FSR2H
  2875  0000                     _FSR2H	set	0xFDA
  2876                           	global	_FSR2L
  2877  0000                     _FSR2L	set	0xFD9
  2878                           	global	_INDF0
  2879  0000                     _INDF0	set	0xFEF
  2880                           	global	_INDF1
  2881  0000                     _INDF1	set	0xFE7
  2882                           	global	_INDF2
  2883  0000                     _INDF2	set	0xFDF
  2884                           	global	_INTCON
  2885  0000                     _INTCON	set	0xFF2
  2886                           	global	_INTCON2
  2887  0000                     _INTCON2	set	0xFF1
  2888                           	global	_INTCON2bits
  2889  0000                     _INTCON2bits	set	0xFF1
  2890                           	global	_INTCON3
  2891  0000                     _INTCON3	set	0xFF0
  2892                           	global	_INTCON3bits
  2893  0000                     _INTCON3bits	set	0xFF0
  2894                           	global	_INTCONbits
  2895  0000                     _INTCONbits	set	0xFF2
  2896                           	global	_IPR1
  2897  0000                     _IPR1	set	0xF9F
  2898                           	global	_IPR1bits
  2899  0000                     _IPR1bits	set	0xF9F
  2900                           	global	_IPR2
  2901  0000                     _IPR2	set	0xFA2
  2902                           	global	_IPR2bits
  2903  0000                     _IPR2bits	set	0xFA2
  2904                           	global	_IPR3
  2905  0000                     _IPR3	set	0xFA5
  2906                           	global	_IPR3bits
  2907  0000                     _IPR3bits	set	0xFA5
  2908                           	global	_LATA
  2909  0000                     _LATA	set	0xF89
  2910                           	global	_LATAbits
  2911  0000                     _LATAbits	set	0xF89
  2912                           	global	_LATB
  2913  0000                     _LATB	set	0xF8A
  2914                           	global	_LATBbits
  2915  0000                     _LATBbits	set	0xF8A
  2916                           	global	_LATC
  2917  0000                     _LATC	set	0xF8B
  2918                           	global	_LATCbits
  2919  0000                     _LATCbits	set	0xF8B
  2920                           	global	_LATD
  2921  0000                     _LATD	set	0xF8C
  2922                           	global	_LATDbits
  2923  0000                     _LATDbits	set	0xF8C
  2924                           	global	_LATE
  2925  0000                     _LATE	set	0xF8D
  2926                           	global	_LATEbits
  2927  0000                     _LATEbits	set	0xF8D
  2928                           	global	_MEMCON
  2929  0000                     _MEMCON	set	0xFCB
  2930                           	global	_OSCCON
  2931  0000                     _OSCCON	set	0xFD3
  2932                           	global	_OSCCONbits
  2933  0000                     _OSCCONbits	set	0xFD3
  2934                           	global	_OSCTUNE
  2935  0000                     _OSCTUNE	set	0xF9B
  2936                           	global	_OSCTUNEbits
  2937  0000                     _OSCTUNEbits	set	0xF9B
  2938                           	global	_PCL
  2939  0000                     _PCL	set	0xFF9
  2940                           	global	_PCLATH
  2941  0000                     _PCLATH	set	0xFFA
  2942                           	global	_PCLATU
  2943  0000                     _PCLATU	set	0xFFB
  2944                           	global	_PIE1
  2945  0000                     _PIE1	set	0xF9D
  2946                           	global	_PIE1bits
  2947  0000                     _PIE1bits	set	0xF9D
  2948                           	global	_PIE2
  2949  0000                     _PIE2	set	0xFA0
  2950                           	global	_PIE2bits
  2951  0000                     _PIE2bits	set	0xFA0
  2952                           	global	_PIE3
  2953  0000                     _PIE3	set	0xFA3
  2954                           	global	_PIE3bits
  2955  0000                     _PIE3bits	set	0xFA3
  2956                           	global	_PIR1
  2957  0000                     _PIR1	set	0xF9E
  2958                           	global	_PIR1bits
  2959  0000                     _PIR1bits	set	0xF9E
  2960                           	global	_PIR2
  2961  0000                     _PIR2	set	0xFA1
  2962                           	global	_PIR2bits
  2963  0000                     _PIR2bits	set	0xFA1
  2964                           	global	_PIR3
  2965  0000                     _PIR3	set	0xFA4
  2966                           	global	_PIR3bits
  2967  0000                     _PIR3bits	set	0xFA4
  2968                           	global	_PLUSW0
  2969  0000                     _PLUSW0	set	0xFEB
  2970                           	global	_PLUSW1
  2971  0000                     _PLUSW1	set	0xFE3
  2972                           	global	_PLUSW2
  2973  0000                     _PLUSW2	set	0xFDB
  2974                           	global	_PORTA
  2975  0000                     _PORTA	set	0xF80
  2976                           	global	_PORTAbits
  2977  0000                     _PORTAbits	set	0xF80
  2978                           	global	_PORTB
  2979  0000                     _PORTB	set	0xF81
  2980                           	global	_PORTBbits
  2981  0000                     _PORTBbits	set	0xF81
  2982                           	global	_PORTC
  2983  0000                     _PORTC	set	0xF82
  2984                           	global	_PORTCbits
  2985  0000                     _PORTCbits	set	0xF82
  2986                           	global	_PORTD
  2987  0000                     _PORTD	set	0xF83
  2988                           	global	_PORTDbits
  2989  0000                     _PORTDbits	set	0xF83
  2990                           	global	_PORTE
  2991  0000                     _PORTE	set	0xF84
  2992                           	global	_PORTEbits
  2993  0000                     _PORTEbits	set	0xF84
  2994                           	global	_POSTDEC0
  2995  0000                     _POSTDEC0	set	0xFED
  2996                           	global	_POSTDEC1
  2997  0000                     _POSTDEC1	set	0xFE5
  2998                           	global	_POSTDEC2
  2999  0000                     _POSTDEC2	set	0xFDD
  3000                           	global	_POSTINC0
  3001  0000                     _POSTINC0	set	0xFEE
  3002                           	global	_POSTINC1
  3003  0000                     _POSTINC1	set	0xFE6
  3004                           	global	_POSTINC2
  3005  0000                     _POSTINC2	set	0xFDE
  3006                           	global	_PR2
  3007  0000                     _PR2	set	0xFCB
  3008                           	global	_PREINC0
  3009  0000                     _PREINC0	set	0xFEC
  3010                           	global	_PREINC1
  3011  0000                     _PREINC1	set	0xFE4
  3012                           	global	_PREINC2
  3013  0000                     _PREINC2	set	0xFDC
  3014                           	global	_PRODH
  3015  0000                     _PRODH	set	0xFF4
  3016                           	global	_PRODL
  3017  0000                     _PRODL	set	0xFF3
  3018                           	global	_PWM1CON
  3019  0000                     _PWM1CON	set	0xFB7
  3020                           	global	_PWM1CONbits
  3021  0000                     _PWM1CONbits	set	0xFB7
  3022                           	global	_RCON
  3023  0000                     _RCON	set	0xFD0
  3024                           	global	_RCONbits
  3025  0000                     _RCONbits	set	0xFD0
  3026                           	global	_RCREG
  3027  0000                     _RCREG	set	0xFAE
  3028                           	global	_RCREG1
  3029  0000                     _RCREG1	set	0xFAE
  3030                           	global	_RCSTA
  3031  0000                     _RCSTA	set	0xFAB
  3032                           	global	_RCSTA1
  3033  0000                     _RCSTA1	set	0xFAB
  3034                           	global	_RCSTA1bits
  3035  0000                     _RCSTA1bits	set	0xFAB
  3036                           	global	_RCSTAbits
  3037  0000                     _RCSTAbits	set	0xFAB
  3038                           	global	_SPBRG
  3039  0000                     _SPBRG	set	0xFAF
  3040                           	global	_SPBRG1
  3041  0000                     _SPBRG1	set	0xFAF
  3042                           	global	_SPBRGH
  3043  0000                     _SPBRGH	set	0xFB0
  3044                           	global	_SSP1ADD
  3045  0000                     _SSP1ADD	set	0xFC8
  3046                           	global	_SSP1ADDbits
  3047  0000                     _SSP1ADDbits	set	0xFC8
  3048                           	global	_SSP1BUF
  3049  0000                     _SSP1BUF	set	0xFC9
  3050                           	global	_SSP1CON1
  3051  0000                     _SSP1CON1	set	0xFC6
  3052                           	global	_SSP1CON1bits
  3053  0000                     _SSP1CON1bits	set	0xFC6
  3054                           	global	_SSP1CON2
  3055  0000                     _SSP1CON2	set	0xFC5
  3056                           	global	_SSP1CON2bits
  3057  0000                     _SSP1CON2bits	set	0xFC5
  3058                           	global	_SSP1STAT
  3059  0000                     _SSP1STAT	set	0xFC7
  3060                           	global	_SSP1STATbits
  3061  0000                     _SSP1STATbits	set	0xFC7
  3062                           	global	_SSP2ADD
  3063  0000                     _SSP2ADD	set	0xF88
  3064                           	global	_SSP2ADDbits
  3065  0000                     _SSP2ADDbits	set	0xF88
  3066                           	global	_SSP2BUF
  3067  0000                     _SSP2BUF	set	0xF8E
  3068                           	global	_SSP2CON1
  3069  0000                     _SSP2CON1	set	0xF86
  3070                           	global	_SSP2CON1bits
  3071  0000                     _SSP2CON1bits	set	0xF86
  3072                           	global	_SSP2CON2
  3073  0000                     _SSP2CON2	set	0xF85
  3074                           	global	_SSP2CON2bits
  3075  0000                     _SSP2CON2bits	set	0xF85
  3076                           	global	_SSP2STAT
  3077  0000                     _SSP2STAT	set	0xF87
  3078                           	global	_SSP2STATbits
  3079  0000                     _SSP2STATbits	set	0xF87
  3080                           	global	_SSPADD
  3081  0000                     _SSPADD	set	0xFC8
  3082                           	global	_SSPADDbits
  3083  0000                     _SSPADDbits	set	0xFC8
  3084                           	global	_SSPBUF
  3085  0000                     _SSPBUF	set	0xFC9
  3086                           	global	_SSPCON1
  3087  0000                     _SSPCON1	set	0xFC6
  3088                           	global	_SSPCON1bits
  3089  0000                     _SSPCON1bits	set	0xFC6
  3090                           	global	_SSPCON2
  3091  0000                     _SSPCON2	set	0xFC5
  3092                           	global	_SSPCON2bits
  3093  0000                     _SSPCON2bits	set	0xFC5
  3094                           	global	_SSPSTAT
  3095  0000                     _SSPSTAT	set	0xFC7
  3096                           	global	_SSPSTATbits
  3097  0000                     _SSPSTATbits	set	0xFC7
  3098                           	global	_STATUS
  3099  0000                     _STATUS	set	0xFD8
  3100                           	global	_STATUSbits
  3101  0000                     _STATUSbits	set	0xFD8
  3102                           	global	_STKPTR
  3103  0000                     _STKPTR	set	0xFFC
  3104                           	global	_STKPTRbits
  3105  0000                     _STKPTRbits	set	0xFFC
  3106                           	global	_T0CON
  3107  0000                     _T0CON	set	0xFD5
  3108                           	global	_T0CONbits
  3109  0000                     _T0CONbits	set	0xFD5
  3110                           	global	_T1CON
  3111  0000                     _T1CON	set	0xFCD
  3112                           	global	_T1CONbits
  3113  0000                     _T1CONbits	set	0xFCD
  3114                           	global	_T2CON
  3115  0000                     _T2CON	set	0xFCA
  3116                           	global	_T2CONbits
  3117  0000                     _T2CONbits	set	0xFCA
  3118                           	global	_TABLAT
  3119  0000                     _TABLAT	set	0xFF5
  3120                           	global	_TBLPTRH
  3121  0000                     _TBLPTRH	set	0xFF7
  3122                           	global	_TBLPTRL
  3123  0000                     _TBLPTRL	set	0xFF6
  3124                           	global	_TBLPTRU
  3125  0000                     _TBLPTRU	set	0xFF8
  3126                           	global	_TMR0H
  3127  0000                     _TMR0H	set	0xFD7
  3128                           	global	_TMR0L
  3129  0000                     _TMR0L	set	0xFD6
  3130                           	global	_TMR1H
  3131  0000                     _TMR1H	set	0xFCF
  3132                           	global	_TMR1L
  3133  0000                     _TMR1L	set	0xFCE
  3134                           	global	_TMR2
  3135  0000                     _TMR2	set	0xFCC
  3136                           	global	_TOSH
  3137  0000                     _TOSH	set	0xFFE
  3138                           	global	_TOSL
  3139  0000                     _TOSL	set	0xFFD
  3140                           	global	_TOSU
  3141  0000                     _TOSU	set	0xFFF
  3142                           	global	_TRISA
  3143  0000                     _TRISA	set	0xF92
  3144                           	global	_TRISAbits
  3145  0000                     _TRISAbits	set	0xF92
  3146                           	global	_TRISB
  3147  0000                     _TRISB	set	0xF93
  3148                           	global	_TRISBbits
  3149  0000                     _TRISBbits	set	0xF93
  3150                           	global	_TRISC
  3151  0000                     _TRISC	set	0xF94
  3152                           	global	_TRISCbits
  3153  0000                     _TRISCbits	set	0xF94
  3154                           	global	_TRISD
  3155  0000                     _TRISD	set	0xF95
  3156                           	global	_TRISDbits
  3157  0000                     _TRISDbits	set	0xF95
  3158                           	global	_TRISE
  3159  0000                     _TRISE	set	0xF96
  3160                           	global	_TRISEbits
  3161  0000                     _TRISEbits	set	0xF96
  3162                           	global	_TXREG
  3163  0000                     _TXREG	set	0xFAD
  3164                           	global	_TXREG1
  3165  0000                     _TXREG1	set	0xFAD
  3166                           	global	_TXSTA
  3167  0000                     _TXSTA	set	0xFAC
  3168                           	global	_TXSTA1
  3169  0000                     _TXSTA1	set	0xFAC
  3170                           	global	_TXSTA1bits
  3171  0000                     _TXSTA1bits	set	0xFAC
  3172                           	global	_TXSTAbits
  3173  0000                     _TXSTAbits	set	0xFAC
  3174                           	global	_WDTCON
  3175  0000                     _WDTCON	set	0xFD1
  3176                           	global	_WDTCONbits
  3177  0000                     _WDTCONbits	set	0xFD1
  3178                           	global	_WREG
  3179  0000                     _WREG	set	0xFE8
  3180                           	global	_ABDEN
  3181  0000                     _ABDEN	set	0x7DC0
  3182                           	global	_ABDOVF
  3183  0000                     _ABDOVF	set	0x7DC7
  3184                           	global	_ACKDT
  3185  0000                     _ACKDT	set	0x7E2D
  3186                           	global	_ACKDT1
  3187  0000                     _ACKDT1	set	0x7E2D
  3188                           	global	_ACKDT2
  3189  0000                     _ACKDT2	set	0x7C2D
  3190                           	global	_ACKEN
  3191  0000                     _ACKEN	set	0x7E2C
  3192                           	global	_ACKEN1
  3193  0000                     _ACKEN1	set	0x7E2C
  3194                           	global	_ACKEN2
  3195  0000                     _ACKEN2	set	0x7C2C
  3196                           	global	_ACKSTAT
  3197  0000                     _ACKSTAT	set	0x7E2E
  3198                           	global	_ACKSTAT1
  3199  0000                     _ACKSTAT1	set	0x7E2E
  3200                           	global	_ACKSTAT2
  3201  0000                     _ACKSTAT2	set	0x7C2E
  3202                           	global	_ACQT0
  3203  0000                     _ACQT0	set	0x7E03
  3204                           	global	_ACQT1
  3205  0000                     _ACQT1	set	0x7E04
  3206                           	global	_ACQT2
  3207  0000                     _ACQT2	set	0x7E05
  3208                           	global	_ADCAL
  3209  0000                     _ADCAL	set	0x7E17
  3210                           	global	_ADCS0
  3211  0000                     _ADCS0	set	0x7E00
  3212                           	global	_ADCS1
  3213  0000                     _ADCS1	set	0x7E01
  3214                           	global	_ADCS2
  3215  0000                     _ADCS2	set	0x7E02
  3216                           	global	_ADDEN
  3217  0000                     _ADDEN	set	0x7D5B
  3218                           	global	_ADDEN1
  3219  0000                     _ADDEN1	set	0x7D5B
  3220                           	global	_ADEN
  3221  0000                     _ADEN	set	0x7D5B
  3222                           	global	_ADFM
  3223  0000                     _ADFM	set	0x7E07
  3224                           	global	_ADIE
  3225  0000                     _ADIE	set	0x7CEE
  3226                           	global	_ADIF
  3227  0000                     _ADIF	set	0x7CF6
  3228                           	global	_ADIP
  3229  0000                     _ADIP	set	0x7CFE
  3230                           	global	_ADMSK1
  3231  0000                     _ADMSK1	set	0x7E29
  3232                           	global	_ADMSK11
  3233  0000                     _ADMSK11	set	0x7E29
  3234                           	global	_ADMSK12
  3235  0000                     _ADMSK12	set	0x7C29
  3236                           	global	_ADMSK2
  3237  0000                     _ADMSK2	set	0x7E2A
  3238                           	global	_ADMSK21
  3239  0000                     _ADMSK21	set	0x7E2A
  3240                           	global	_ADMSK22
  3241  0000                     _ADMSK22	set	0x7C2A
  3242                           	global	_ADMSK3
  3243  0000                     _ADMSK3	set	0x7E2B
  3244                           	global	_ADMSK31
  3245  0000                     _ADMSK31	set	0x7E2B
  3246                           	global	_ADMSK32
  3247  0000                     _ADMSK32	set	0x7C2B
  3248                           	global	_ADMSK4
  3249  0000                     _ADMSK4	set	0x7E2C
  3250                           	global	_ADMSK41
  3251  0000                     _ADMSK41	set	0x7E2C
  3252                           	global	_ADMSK42
  3253  0000                     _ADMSK42	set	0x7C2C
  3254                           	global	_ADMSK5
  3255  0000                     _ADMSK5	set	0x7E2D
  3256                           	global	_ADMSK51
  3257  0000                     _ADMSK51	set	0x7E2D
  3258                           	global	_ADMSK52
  3259  0000                     _ADMSK52	set	0x7C2D
  3260                           	global	_ADON
  3261  0000                     _ADON	set	0x7E10
  3262                           	global	_AN0
  3263  0000                     _AN0	set	0x7C00
  3264                           	global	_AN1
  3265  0000                     _AN1	set	0x7C01
  3266                           	global	_AN10
  3267  0000                     _AN10	set	0x7C09
  3268                           	global	_AN11
  3269  0000                     _AN11	set	0x7C0C
  3270                           	global	_AN12
  3271  0000                     _AN12	set	0x7C08
  3272                           	global	_AN2
  3273  0000                     _AN2	set	0x7C02
  3274                           	global	_AN3
  3275  0000                     _AN3	set	0x7C03
  3276                           	global	_AN4
  3277  0000                     _AN4	set	0x7C05
  3278                           	global	_AN5
  3279  0000                     _AN5	set	0x7C20
  3280                           	global	_AN6
  3281  0000                     _AN6	set	0x7C21
  3282                           	global	_AN7
  3283  0000                     _AN7	set	0x7C22
  3284                           	global	_AN8
  3285  0000                     _AN8	set	0x7C0A
  3286                           	global	_AN9
  3287  0000                     _AN9	set	0x7C0B
  3288                           	global	_BCL1IE
  3289  0000                     _BCL1IE	set	0x7D03
  3290                           	global	_BCL1IF
  3291  0000                     _BCL1IF	set	0x7D0B
  3292                           	global	_BCL1IP
  3293  0000                     _BCL1IP	set	0x7D13
  3294                           	global	_BCL2IE
  3295  0000                     _BCL2IE	set	0x7D1E
  3296                           	global	_BCL2IF
  3297  0000                     _BCL2IF	set	0x7D26
  3298                           	global	_BCL2IP
  3299  0000                     _BCL2IP	set	0x7D2E
  3300                           	global	_BCLIE
  3301  0000                     _BCLIE	set	0x7D03
  3302                           	global	_BCLIF
  3303  0000                     _BCLIF	set	0x7D0B
  3304                           	global	_BCLIP
  3305  0000                     _BCLIP	set	0x7D13
  3306                           	global	_BF
  3307  0000                     _BF	set	0x7E38
  3308                           	global	_BF1
  3309  0000                     _BF1	set	0x7E38
  3310                           	global	_BF2
  3311  0000                     _BF2	set	0x7C38
  3312                           	global	_BOR
  3313  0000                     _BOR	set	0x7E80
  3314                           	global	_BRG16
  3315  0000                     _BRG16	set	0x7DC3
  3316                           	global	_BRGH
  3317  0000                     _BRGH	set	0x7D62
  3318                           	global	_BRGH1
  3319  0000                     _BRGH1	set	0x7D62
  3320                           	global	_C1INV
  3321  0000                     _C1INV	set	0x7DA4
  3322                           	global	_C1OUT
  3323  0000                     _C1OUT	set	0x7DA6
  3324                           	global	_C2INV
  3325  0000                     _C2INV	set	0x7DA5
  3326                           	global	_C2OUT
  3327  0000                     _C2OUT	set	0x7DA7
  3328                           	global	_CARRY
  3329  0000                     _CARRY	set	0x7EC0
  3330                           	global	_CCP1
  3331  0000                     _CCP1	set	0x7C12
  3332                           	global	_CCP10
  3333  0000                     _CCP10	set	0x7C22
  3334                           	global	_CCP1IE
  3335  0000                     _CCP1IE	set	0x7CEA
  3336                           	global	_CCP1IF
  3337  0000                     _CCP1IF	set	0x7CF2
  3338                           	global	_CCP1IP
  3339  0000                     _CCP1IP	set	0x7CFA
  3340                           	global	_CCP1M0
  3341  0000                     _CCP1M0	set	0x7DE8
  3342                           	global	_CCP1M1
  3343  0000                     _CCP1M1	set	0x7DE9
  3344                           	global	_CCP1M2
  3345  0000                     _CCP1M2	set	0x7DEA
  3346                           	global	_CCP1M3
  3347  0000                     _CCP1M3	set	0x7DEB
  3348                           	global	_CCP1X
  3349  0000                     _CCP1X	set	0x7DED
  3350                           	global	_CCP1Y
  3351  0000                     _CCP1Y	set	0x7DEC
  3352                           	global	_CCP2E
  3353  0000                     _CCP2E	set	0x7C27
  3354                           	global	_CCP2IE
  3355  0000                     _CCP2IE	set	0x7D00
  3356                           	global	_CCP2IF
  3357  0000                     _CCP2IF	set	0x7D08
  3358                           	global	_CCP2IP
  3359  0000                     _CCP2IP	set	0x7D10
  3360                           	global	_CCP2M0
  3361  0000                     _CCP2M0	set	0x7DD0
  3362                           	global	_CCP2M1
  3363  0000                     _CCP2M1	set	0x7DD1
  3364                           	global	_CCP2M2
  3365  0000                     _CCP2M2	set	0x7DD2
  3366                           	global	_CCP2M3
  3367  0000                     _CCP2M3	set	0x7DD3
  3368                           	global	_CCP2X
  3369  0000                     _CCP2X	set	0x7DD5
  3370                           	global	_CCP2Y
  3371  0000                     _CCP2Y	set	0x7DD4
  3372                           	global	_CCP2_PA2
  3373  0000                     _CCP2_PA2	set	0x7C0B
  3374                           	global	_CCP6E
  3375  0000                     _CCP6E	set	0x7C26
  3376                           	global	_CCP7E
  3377  0000                     _CCP7E	set	0x7C25
  3378                           	global	_CCP8E
  3379  0000                     _CCP8E	set	0x7C24
  3380                           	global	_CCP9E
  3381  0000                     _CCP9E	set	0x7C23
  3382                           	global	_CHS0
  3383  0000                     _CHS0	set	0x7E12
  3384                           	global	_CHS1
  3385  0000                     _CHS1	set	0x7E13
  3386                           	global	_CHS2
  3387  0000                     _CHS2	set	0x7E14
  3388                           	global	_CHS3
  3389  0000                     _CHS3	set	0x7E15
  3390                           	global	_CHSN3
  3391  0000                     _CHSN3	set	0x7E0B
  3392                           	global	_CIS
  3393  0000                     _CIS	set	0x7DA3
  3394                           	global	_CK
  3395  0000                     _CK	set	0x7C16
  3396                           	global	_CKE
  3397  0000                     _CKE	set	0x7E3E
  3398                           	global	_CKE1
  3399  0000                     _CKE1	set	0x7E3E
  3400                           	global	_CKE2
  3401  0000                     _CKE2	set	0x7C3E
  3402                           	global	_CKP
  3403  0000                     _CKP	set	0x7E34
  3404                           	global	_CKP1
  3405  0000                     _CKP1	set	0x7E34
  3406                           	global	_CKP2
  3407  0000                     _CKP2	set	0x7C34
  3408                           	global	_CM0
  3409  0000                     _CM0	set	0x7DA0
  3410                           	global	_CM1
  3411  0000                     _CM1	set	0x7DA1
  3412                           	global	_CM2
  3413  0000                     _CM2	set	0x7DA2
  3414                           	global	_CMEN0
  3415  0000                     _CMEN0	set	0x7DA0
  3416                           	global	_CMEN1
  3417  0000                     _CMEN1	set	0x7DA1
  3418                           	global	_CMEN2
  3419  0000                     _CMEN2	set	0x7DA2
  3420                           	global	_CMIE
  3421  0000                     _CMIE	set	0x7D06
  3422                           	global	_CMIF
  3423  0000                     _CMIF	set	0x7D0E
  3424                           	global	_CMIP
  3425  0000                     _CMIP	set	0x7D16
  3426                           	global	_CREN
  3427  0000                     _CREN	set	0x7D5C
  3428                           	global	_CREN1
  3429  0000                     _CREN1	set	0x7D5C
  3430                           	global	_CS
  3431  0000                     _CS	set	0x7C22
  3432                           	global	_CSRC
  3433  0000                     _CSRC	set	0x7D67
  3434                           	global	_CSRC1
  3435  0000                     _CSRC1	set	0x7D67
  3436                           	global	_CVR0
  3437  0000                     _CVR0	set	0x7DA8
  3438                           	global	_CVR1
  3439  0000                     _CVR1	set	0x7DA9
  3440                           	global	_CVR2
  3441  0000                     _CVR2	set	0x7DAA
  3442                           	global	_CVR3
  3443  0000                     _CVR3	set	0x7DAB
  3444                           	global	_CVREF
  3445  0000                     _CVREF	set	0x7C02
  3446                           	global	_CVREN
  3447  0000                     _CVREN	set	0x7DAF
  3448                           	global	_CVROE
  3449  0000                     _CVROE	set	0x7DAE
  3450                           	global	_CVROEN
  3451  0000                     _CVROEN	set	0x7DAE
  3452                           	global	_CVRR
  3453  0000                     _CVRR	set	0x7DAD
  3454                           	global	_CVRSS
  3455  0000                     _CVRSS	set	0x7DAC
  3456                           	global	_DA
  3457  0000                     _DA	set	0x7E3D
  3458                           	global	_DA1
  3459  0000                     _DA1	set	0x7E3D
  3460                           	global	_DA2
  3461  0000                     _DA2	set	0x7C3D
  3462                           	global	_DATA_ADDRESS2
  3463  0000                     _DATA_ADDRESS2	set	0x7C3D
  3464                           	global	_DC
  3465  0000                     _DC	set	0x7EC1
  3466                           	global	_DC1B0
  3467  0000                     _DC1B0	set	0x7DEC
  3468                           	global	_DC1B1
  3469  0000                     _DC1B1	set	0x7DED
  3470                           	global	_DC2B0
  3471  0000                     _DC2B0	set	0x7DD4
  3472                           	global	_DC2B1
  3473  0000                     _DC2B1	set	0x7DD5
  3474                           	global	_DONE
  3475  0000                     _DONE	set	0x7E11
  3476                           	global	_DT
  3477  0000                     _DT	set	0x7C17
  3478                           	global	_D_A2
  3479  0000                     _D_A2	set	0x7C3D
  3480                           	global	_D_nA2
  3481  0000                     _D_nA2	set	0x7C3D
  3482                           	global	_ECCPAS0
  3483  0000                     _ECCPAS0	set	0x7DB4
  3484                           	global	_ECCPAS1
  3485  0000                     _ECCPAS1	set	0x7DB5
  3486                           	global	_ECCPAS2
  3487  0000                     _ECCPAS2	set	0x7DB6
  3488                           	global	_ECCPASE
  3489  0000                     _ECCPASE	set	0x7DB7
  3490                           	global	_FERR
  3491  0000                     _FERR	set	0x7D5A
  3492                           	global	_FERR1
  3493  0000                     _FERR1	set	0x7D5A
  3494                           	global	_FLT0
  3495  0000                     _FLT0	set	0x7C08
  3496                           	global	_FREE
  3497  0000                     _FREE	set	0x7D34
  3498                           	global	_GCEN
  3499  0000                     _GCEN	set	0x7E2F
  3500                           	global	_GCEN1
  3501  0000                     _GCEN1	set	0x7E2F
  3502                           	global	_GCEN2
  3503  0000                     _GCEN2	set	0x7C2F
  3504                           	global	_GIE
  3505  0000                     _GIE	set	0x7F97
  3506                           	global	_GIEH
  3507  0000                     _GIEH	set	0x7F97
  3508                           	global	_GIEL
  3509  0000                     _GIEL	set	0x7F96
  3510                           	global	_GIE_GIEH
  3511  0000                     _GIE_GIEH	set	0x7F97
  3512                           	global	_GO
  3513  0000                     _GO	set	0x7E11
  3514                           	global	_GODONE
  3515  0000                     _GODONE	set	0x7E11
  3516                           	global	_GO_DONE
  3517  0000                     _GO_DONE	set	0x7E11
  3518                           	global	_GO_NOT_DONE
  3519  0000                     _GO_NOT_DONE	set	0x7E11
  3520                           	global	_GO_nDONE
  3521  0000                     _GO_nDONE	set	0x7E11
  3522                           	global	_I2C_DAT2
  3523  0000                     _I2C_DAT2	set	0x7C3D
  3524                           	global	_I2C_READ2
  3525  0000                     _I2C_READ2	set	0x7C3A
  3526                           	global	_I2C_START2
  3527  0000                     _I2C_START2	set	0x7C3B
  3528                           	global	_I2C_STOP2
  3529  0000                     _I2C_STOP2	set	0x7C3C
  3530                           	global	_IBF
  3531  0000                     _IBF	set	0x7CB7
  3532                           	global	_IBOV
  3533  0000                     _IBOV	set	0x7CB5
  3534                           	global	_IDLEN
  3535  0000                     _IDLEN	set	0x7E9F
  3536                           	global	_INT0
  3537  0000                     _INT0	set	0x7C08
  3538                           	global	_INT0E
  3539  0000                     _INT0E	set	0x7F94
  3540                           	global	_INT0F
  3541  0000                     _INT0F	set	0x7F91
  3542                           	global	_INT0IE
  3543  0000                     _INT0IE	set	0x7F94
  3544                           	global	_INT0IF
  3545  0000                     _INT0IF	set	0x7F91
  3546                           	global	_INT1
  3547  0000                     _INT1	set	0x7C09
  3548                           	global	_INT1E
  3549  0000                     _INT1E	set	0x7F83
  3550                           	global	_INT1F
  3551  0000                     _INT1F	set	0x7F80
  3552                           	global	_INT1IE
  3553  0000                     _INT1IE	set	0x7F83
  3554                           	global	_INT1IF
  3555  0000                     _INT1IF	set	0x7F80
  3556                           	global	_INT1IP
  3557  0000                     _INT1IP	set	0x7F86
  3558                           	global	_INT1P
  3559  0000                     _INT1P	set	0x7F86
  3560                           	global	_INT2
  3561  0000                     _INT2	set	0x7C0A
  3562                           	global	_INT2E
  3563  0000                     _INT2E	set	0x7F84
  3564                           	global	_INT2F
  3565  0000                     _INT2F	set	0x7F81
  3566                           	global	_INT2IE
  3567  0000                     _INT2IE	set	0x7F84
  3568                           	global	_INT2IF
  3569  0000                     _INT2IF	set	0x7F81
  3570                           	global	_INT2IP
  3571  0000                     _INT2IP	set	0x7F87
  3572                           	global	_INT2P
  3573  0000                     _INT2P	set	0x7F87
  3574                           	global	_INTEDG0
  3575  0000                     _INTEDG0	set	0x7F8E
  3576                           	global	_INTEDG1
  3577  0000                     _INTEDG1	set	0x7F8D
  3578                           	global	_INTEDG2
  3579  0000                     _INTEDG2	set	0x7F8C
  3580                           	global	_IPEN
  3581  0000                     _IPEN	set	0x7E87
  3582                           	global	_KBI0
  3583  0000                     _KBI0	set	0x7C0C
  3584                           	global	_KBI1
  3585  0000                     _KBI1	set	0x7C0D
  3586                           	global	_KBI2
  3587  0000                     _KBI2	set	0x7C0E
  3588                           	global	_KBI3
  3589  0000                     _KBI3	set	0x7C0F
  3590                           	global	_LA0
  3591  0000                     _LA0	set	0x7C48
  3592                           	global	_LA1
  3593  0000                     _LA1	set	0x7C49
  3594                           	global	_LA2
  3595  0000                     _LA2	set	0x7C4A
  3596                           	global	_LA3
  3597  0000                     _LA3	set	0x7C4B
  3598                           	global	_LA4
  3599  0000                     _LA4	set	0x7C4C
  3600                           	global	_LA5
  3601  0000                     _LA5	set	0x7C4D
  3602                           	global	_LA6
  3603  0000                     _LA6	set	0x7C4E
  3604                           	global	_LA7
  3605  0000                     _LA7	set	0x7C4F
  3606                           	global	_LATA0
  3607  0000                     _LATA0	set	0x7C48
  3608                           	global	_LATA1
  3609  0000                     _LATA1	set	0x7C49
  3610                           	global	_LATA2
  3611  0000                     _LATA2	set	0x7C4A
  3612                           	global	_LATA3
  3613  0000                     _LATA3	set	0x7C4B
  3614                           	global	_LATA5
  3615  0000                     _LATA5	set	0x7C4D
  3616                           	global	_LATA7
  3617  0000                     _LATA7	set	0x7C4F
  3618                           	global	_LATB0
  3619  0000                     _LATB0	set	0x7C50
  3620                           	global	_LATB1
  3621  0000                     _LATB1	set	0x7C51
  3622                           	global	_LATB2
  3623  0000                     _LATB2	set	0x7C52
  3624                           	global	_LATB3
  3625  0000                     _LATB3	set	0x7C53
  3626                           	global	_LATB4
  3627  0000                     _LATB4	set	0x7C54
  3628                           	global	_LATB5
  3629  0000                     _LATB5	set	0x7C55
  3630                           	global	_LATB6
  3631  0000                     _LATB6	set	0x7C56
  3632                           	global	_LATB7
  3633  0000                     _LATB7	set	0x7C57
  3634                           	global	_LATC0
  3635  0000                     _LATC0	set	0x7C58
  3636                           	global	_LATC1
  3637  0000                     _LATC1	set	0x7C59
  3638                           	global	_LATC2
  3639  0000                     _LATC2	set	0x7C5A
  3640                           	global	_LATC3
  3641  0000                     _LATC3	set	0x7C5B
  3642                           	global	_LATC4
  3643  0000                     _LATC4	set	0x7C5C
  3644                           	global	_LATC5
  3645  0000                     _LATC5	set	0x7C5D
  3646                           	global	_LATC6
  3647  0000                     _LATC6	set	0x7C5E
  3648                           	global	_LATC7
  3649  0000                     _LATC7	set	0x7C5F
  3650                           	global	_LATD0
  3651  0000                     _LATD0	set	0x7C60
  3652                           	global	_LATD1
  3653  0000                     _LATD1	set	0x7C61
  3654                           	global	_LATD2
  3655  0000                     _LATD2	set	0x7C62
  3656                           	global	_LATD3
  3657  0000                     _LATD3	set	0x7C63
  3658                           	global	_LATD4
  3659  0000                     _LATD4	set	0x7C64
  3660                           	global	_LATD5
  3661  0000                     _LATD5	set	0x7C65
  3662                           	global	_LATD6
  3663  0000                     _LATD6	set	0x7C66
  3664                           	global	_LATD7
  3665  0000                     _LATD7	set	0x7C67
  3666                           	global	_LATE0
  3667  0000                     _LATE0	set	0x7C68
  3668                           	global	_LATE1
  3669  0000                     _LATE1	set	0x7C69
  3670                           	global	_LATE2
  3671  0000                     _LATE2	set	0x7C6A
  3672                           	global	_LB0
  3673  0000                     _LB0	set	0x7C50
  3674                           	global	_LB1
  3675  0000                     _LB1	set	0x7C51
  3676                           	global	_LB2
  3677  0000                     _LB2	set	0x7C52
  3678                           	global	_LB3
  3679  0000                     _LB3	set	0x7C53
  3680                           	global	_LB4
  3681  0000                     _LB4	set	0x7C54
  3682                           	global	_LB5
  3683  0000                     _LB5	set	0x7C55
  3684                           	global	_LB6
  3685  0000                     _LB6	set	0x7C56
  3686                           	global	_LB7
  3687  0000                     _LB7	set	0x7C57
  3688                           	global	_LC0
  3689  0000                     _LC0	set	0x7C58
  3690                           	global	_LC1
  3691  0000                     _LC1	set	0x7C59
  3692                           	global	_LC2
  3693  0000                     _LC2	set	0x7C5A
  3694                           	global	_LC3
  3695  0000                     _LC3	set	0x7C5B
  3696                           	global	_LC4
  3697  0000                     _LC4	set	0x7C5C
  3698                           	global	_LC5
  3699  0000                     _LC5	set	0x7C5D
  3700                           	global	_LC6
  3701  0000                     _LC6	set	0x7C5E
  3702                           	global	_LC7
  3703  0000                     _LC7	set	0x7C5F
  3704                           	global	_LD0
  3705  0000                     _LD0	set	0x7C60
  3706                           	global	_LD1
  3707  0000                     _LD1	set	0x7C61
  3708                           	global	_LD2
  3709  0000                     _LD2	set	0x7C62
  3710                           	global	_LD3
  3711  0000                     _LD3	set	0x7C63
  3712                           	global	_LD4
  3713  0000                     _LD4	set	0x7C64
  3714                           	global	_LD5
  3715  0000                     _LD5	set	0x7C65
  3716                           	global	_LD6
  3717  0000                     _LD6	set	0x7C66
  3718                           	global	_LD7
  3719  0000                     _LD7	set	0x7C67
  3720                           	global	_LE0
  3721  0000                     _LE0	set	0x7C68
  3722                           	global	_LE1
  3723  0000                     _LE1	set	0x7C69
  3724                           	global	_LE2
  3725  0000                     _LE2	set	0x7C6A
  3726                           	global	_LE3
  3727  0000                     _LE3	set	0x7C6B
  3728                           	global	_LE4
  3729  0000                     _LE4	set	0x7C6C
  3730                           	global	_LE5
  3731  0000                     _LE5	set	0x7C6D
  3732                           	global	_LE6
  3733  0000                     _LE6	set	0x7C6E
  3734                           	global	_LE7
  3735  0000                     _LE7	set	0x7C6F
  3736                           	global	_LVDIN
  3737  0000                     _LVDIN	set	0x7C05
  3738                           	global	_MSK0
  3739  0000                     _MSK0	set	0x7E40
  3740                           	global	_MSK01
  3741  0000                     _MSK01	set	0x7E40
  3742                           	global	_MSK02
  3743  0000                     _MSK02	set	0x7C40
  3744                           	global	_MSK1
  3745  0000                     _MSK1	set	0x7E41
  3746                           	global	_MSK11
  3747  0000                     _MSK11	set	0x7E41
  3748                           	global	_MSK12
  3749  0000                     _MSK12	set	0x7C41
  3750                           	global	_MSK2
  3751  0000                     _MSK2	set	0x7E42
  3752                           	global	_MSK21
  3753  0000                     _MSK21	set	0x7E42
  3754                           	global	_MSK22
  3755  0000                     _MSK22	set	0x7C42
  3756                           	global	_MSK3
  3757  0000                     _MSK3	set	0x7E43
  3758                           	global	_MSK31
  3759  0000                     _MSK31	set	0x7E43
  3760                           	global	_MSK32
  3761  0000                     _MSK32	set	0x7C43
  3762                           	global	_MSK4
  3763  0000                     _MSK4	set	0x7E44
  3764                           	global	_MSK41
  3765  0000                     _MSK41	set	0x7E44
  3766                           	global	_MSK42
  3767  0000                     _MSK42	set	0x7C44
  3768                           	global	_MSK5
  3769  0000                     _MSK5	set	0x7E45
  3770                           	global	_MSK51
  3771  0000                     _MSK51	set	0x7E45
  3772                           	global	_MSK52
  3773  0000                     _MSK52	set	0x7C45
  3774                           	global	_MSK6
  3775  0000                     _MSK6	set	0x7E46
  3776                           	global	_MSK61
  3777  0000                     _MSK61	set	0x7E46
  3778                           	global	_MSK62
  3779  0000                     _MSK62	set	0x7C46
  3780                           	global	_MSK7
  3781  0000                     _MSK7	set	0x7E47
  3782                           	global	_MSK71
  3783  0000                     _MSK71	set	0x7E47
  3784                           	global	_MSK72
  3785  0000                     _MSK72	set	0x7C47
  3786                           	global	_NEGATIVE
  3787  0000                     _NEGATIVE	set	0x7EC4
  3788                           	global	_NOT_A
  3789  0000                     _NOT_A	set	0x7E3D
  3790                           	global	_NOT_BOR
  3791  0000                     _NOT_BOR	set	0x7E80
  3792                           	global	_NOT_CS
  3793  0000                     _NOT_CS	set	0x7C22
  3794                           	global	_NOT_DONE
  3795  0000                     _NOT_DONE	set	0x7E11
  3796                           	global	_NOT_PD
  3797  0000                     _NOT_PD	set	0x7E82
  3798                           	global	_NOT_POR
  3799  0000                     _NOT_POR	set	0x7E81
  3800                           	global	_NOT_RBPU
  3801  0000                     _NOT_RBPU	set	0x7F8F
  3802                           	global	_NOT_RC8
  3803  0000                     _NOT_RC8	set	0x7D5E
  3804                           	global	_NOT_RD
  3805  0000                     _NOT_RD	set	0x7C20
  3806                           	global	_NOT_RI
  3807  0000                     _NOT_RI	set	0x7E84
  3808                           	global	_NOT_SS1
  3809  0000                     _NOT_SS1	set	0x7C05
  3810                           	global	_NOT_SS2
  3811  0000                     _NOT_SS2	set	0x7C1B
  3812                           	global	_NOT_T1SYNC
  3813  0000                     _NOT_T1SYNC	set	0x7E6A
  3814                           	global	_NOT_TO
  3815  0000                     _NOT_TO	set	0x7E83
  3816                           	global	_NOT_TX8
  3817  0000                     _NOT_TX8	set	0x7D66
  3818                           	global	_NOT_W
  3819  0000                     _NOT_W	set	0x7E3A
  3820                           	global	_NOT_WR
  3821  0000                     _NOT_WR	set	0x7C21
  3822                           	global	_OBF
  3823  0000                     _OBF	set	0x7CB6
  3824                           	global	_OERR
  3825  0000                     _OERR	set	0x7D59
  3826                           	global	_OERR1
  3827  0000                     _OERR1	set	0x7D59
  3828                           	global	_OSCFIE
  3829  0000                     _OSCFIE	set	0x7D07
  3830                           	global	_OSCFIF
  3831  0000                     _OSCFIF	set	0x7D0F
  3832                           	global	_OSCFIP
  3833  0000                     _OSCFIP	set	0x7D17
  3834                           	global	_OSTS
  3835  0000                     _OSTS	set	0x7E9B
  3836                           	global	_OV
  3837  0000                     _OV	set	0x7EC3
  3838                           	global	_OVERFLOW
  3839  0000                     _OVERFLOW	set	0x7EC3
  3840                           	global	_P1A
  3841  0000                     _P1A	set	0x7C12
  3842                           	global	_P1B
  3843  0000                     _P1B	set	0x7C1D
  3844                           	global	_P1C
  3845  0000                     _P1C	set	0x7C1E
  3846                           	global	_P1D
  3847  0000                     _P1D	set	0x7C1F
  3848                           	global	_P1M0
  3849  0000                     _P1M0	set	0x7DEE
  3850                           	global	_P1M1
  3851  0000                     _P1M1	set	0x7DEF
  3852                           	global	_P2
  3853  0000                     _P2	set	0x7C3C
  3854                           	global	_PA1
  3855  0000                     _PA1	set	0x7C12
  3856                           	global	_PA2
  3857  0000                     _PA2	set	0x7C11
  3858                           	global	_PA2E
  3859  0000                     _PA2E	set	0x7C27
  3860                           	global	_PB1E
  3861  0000                     _PB1E	set	0x7C26
  3862                           	global	_PB2
  3863  0000                     _PB2	set	0x7C22
  3864                           	global	_PB3E
  3865  0000                     _PB3E	set	0x7C24
  3866                           	global	_PC1E
  3867  0000                     _PC1E	set	0x7C25
  3868                           	global	_PC2
  3869  0000                     _PC2	set	0x7C21
  3870                           	global	_PC3E
  3871  0000                     _PC3E	set	0x7C23
  3872                           	global	_PCFG0
  3873  0000                     _PCFG0	set	0x7E08
  3874                           	global	_PCFG1
  3875  0000                     _PCFG1	set	0x7E09
  3876                           	global	_PCFG2
  3877  0000                     _PCFG2	set	0x7E0A
  3878                           	global	_PCFG3
  3879  0000                     _PCFG3	set	0x7E0B
  3880                           	global	_PD
  3881  0000                     _PD	set	0x7E82
  3882                           	global	_PD2
  3883  0000                     _PD2	set	0x7C20
  3884                           	global	_PDC0
  3885  0000                     _PDC0	set	0x7DB8
  3886                           	global	_PDC1
  3887  0000                     _PDC1	set	0x7DB9
  3888                           	global	_PDC2
  3889  0000                     _PDC2	set	0x7DBA
  3890                           	global	_PDC3
  3891  0000                     _PDC3	set	0x7DBB
  3892                           	global	_PDC4
  3893  0000                     _PDC4	set	0x7DBC
  3894                           	global	_PDC5
  3895  0000                     _PDC5	set	0x7DBD
  3896                           	global	_PDC6
  3897  0000                     _PDC6	set	0x7DBE
  3898                           	global	_PEIE
  3899  0000                     _PEIE	set	0x7F96
  3900                           	global	_PEIE_GIEL
  3901  0000                     _PEIE_GIEL	set	0x7F96
  3902                           	global	_PEN
  3903  0000                     _PEN	set	0x7E2A
  3904                           	global	_PEN1
  3905  0000                     _PEN1	set	0x7E2A
  3906                           	global	_PEN2
  3907  0000                     _PEN2	set	0x7C2A
  3908                           	global	_PGC
  3909  0000                     _PGC	set	0x7C0E
  3910                           	global	_PGD
  3911  0000                     _PGD	set	0x7C0F
  3912                           	global	_PLLEN
  3913  0000                     _PLLEN	set	0x7CDE
  3914                           	global	_POR
  3915  0000                     _POR	set	0x7E81
  3916                           	global	_PRSEN
  3917  0000                     _PRSEN	set	0x7DBF
  3918                           	global	_PSA
  3919  0000                     _PSA	set	0x7EAB
  3920                           	global	_PSP0
  3921  0000                     _PSP0	set	0x7C18
  3922                           	global	_PSP1
  3923  0000                     _PSP1	set	0x7C19
  3924                           	global	_PSP2
  3925  0000                     _PSP2	set	0x7C1A
  3926                           	global	_PSP3
  3927  0000                     _PSP3	set	0x7C1B
  3928                           	global	_PSP4
  3929  0000                     _PSP4	set	0x7C1C
  3930                           	global	_PSP5
  3931  0000                     _PSP5	set	0x7C1D
  3932                           	global	_PSP6
  3933  0000                     _PSP6	set	0x7C1E
  3934                           	global	_PSP7
  3935  0000                     _PSP7	set	0x7C1F
  3936                           	global	_PSPIE
  3937  0000                     _PSPIE	set	0x7CEF
  3938                           	global	_PSPIF
  3939  0000                     _PSPIF	set	0x7CF7
  3940                           	global	_PSPIP
  3941  0000                     _PSPIP	set	0x7CFF
  3942                           	global	_PSPMODE
  3943  0000                     _PSPMODE	set	0x7CB4
  3944                           	global	_PSSAC0
  3945  0000                     _PSSAC0	set	0x7DB2
  3946                           	global	_PSSAC1
  3947  0000                     _PSSAC1	set	0x7DB3
  3948                           	global	_PSSBD0
  3949  0000                     _PSSBD0	set	0x7DB0
  3950                           	global	_PSSBD1
  3951  0000                     _PSSBD1	set	0x7DB1
  3952                           	global	_RA0
  3953  0000                     _RA0	set	0x7C00
  3954                           	global	_RA1
  3955  0000                     _RA1	set	0x7C01
  3956                           	global	_RA2
  3957  0000                     _RA2	set	0x7C02
  3958                           	global	_RA3
  3959  0000                     _RA3	set	0x7C03
  3960                           	global	_RA4
  3961  0000                     _RA4	set	0x7C04
  3962                           	global	_RA5
  3963  0000                     _RA5	set	0x7C05
  3964                           	global	_RA6
  3965  0000                     _RA6	set	0x7C06
  3966                           	global	_RA7
  3967  0000                     _RA7	set	0x7C07
  3968                           	global	_RB0
  3969  0000                     _RB0	set	0x7C08
  3970                           	global	_RB1
  3971  0000                     _RB1	set	0x7C09
  3972                           	global	_RB2
  3973  0000                     _RB2	set	0x7C0A
  3974                           	global	_RB3
  3975  0000                     _RB3	set	0x7C0B
  3976                           	global	_RB4
  3977  0000                     _RB4	set	0x7C0C
  3978                           	global	_RB5
  3979  0000                     _RB5	set	0x7C0D
  3980                           	global	_RB6
  3981  0000                     _RB6	set	0x7C0E
  3982                           	global	_RB7
  3983  0000                     _RB7	set	0x7C0F
  3984                           	global	_RBIE
  3985  0000                     _RBIE	set	0x7F93
  3986                           	global	_RBIF
  3987  0000                     _RBIF	set	0x7F90
  3988                           	global	_RBIP
  3989  0000                     _RBIP	set	0x7F88
  3990                           	global	_RBPU
  3991  0000                     _RBPU	set	0x7F8F
  3992                           	global	_RC0
  3993  0000                     _RC0	set	0x7C10
  3994                           	global	_RC1
  3995  0000                     _RC1	set	0x7C11
  3996                           	global	_RC1IE
  3997  0000                     _RC1IE	set	0x7CED
  3998                           	global	_RC1IF
  3999  0000                     _RC1IF	set	0x7CF5
  4000                           	global	_RC1IP
  4001  0000                     _RC1IP	set	0x7CFD
  4002                           	global	_RC2
  4003  0000                     _RC2	set	0x7C12
  4004                           	global	_RC3
  4005  0000                     _RC3	set	0x7C13
  4006                           	global	_RC4
  4007  0000                     _RC4	set	0x7C14
  4008                           	global	_RC5
  4009  0000                     _RC5	set	0x7C15
  4010                           	global	_RC6
  4011  0000                     _RC6	set	0x7C16
  4012                           	global	_RC7
  4013  0000                     _RC7	set	0x7C17
  4014                           	global	_RC8_9
  4015  0000                     _RC8_9	set	0x7D5E
  4016                           	global	_RC9
  4017  0000                     _RC9	set	0x7D5E
  4018                           	global	_RCD8
  4019  0000                     _RCD8	set	0x7D58
  4020                           	global	_RCEN
  4021  0000                     _RCEN	set	0x7E2B
  4022                           	global	_RCEN1
  4023  0000                     _RCEN1	set	0x7E2B
  4024                           	global	_RCEN2
  4025  0000                     _RCEN2	set	0x7C2B
  4026                           	global	_RCIDL
  4027  0000                     _RCIDL	set	0x7DC6
  4028                           	global	_RCIE
  4029  0000                     _RCIE	set	0x7CED
  4030                           	global	_RCIF
  4031  0000                     _RCIF	set	0x7CF5
  4032                           	global	_RCIP
  4033  0000                     _RCIP	set	0x7CFD
  4034                           	global	_RCMT
  4035  0000                     _RCMT	set	0x7DC6
  4036                           	global	_RD
  4037  0000                     _RD	set	0x7C20
  4038                           	global	_RD0
  4039  0000                     _RD0	set	0x7C18
  4040                           	global	_RD1
  4041  0000                     _RD1	set	0x7C19
  4042                           	global	_RD16
  4043  0000                     _RD16	set	0x7E6F
  4044                           	global	_RD2
  4045  0000                     _RD2	set	0x7C1A
  4046                           	global	_RD3
  4047  0000                     _RD3	set	0x7C1B
  4048                           	global	_RD4
  4049  0000                     _RD4	set	0x7C1C
  4050                           	global	_RD5
  4051  0000                     _RD5	set	0x7C1D
  4052                           	global	_RD6
  4053  0000                     _RD6	set	0x7C1E
  4054                           	global	_RD7
  4055  0000                     _RD7	set	0x7C1F
  4056                           	global	_RDE
  4057  0000                     _RDE	set	0x7C20
  4058                           	global	_RE0
  4059  0000                     _RE0	set	0x7C20
  4060                           	global	_RE1
  4061  0000                     _RE1	set	0x7C21
  4062                           	global	_RE2
  4063  0000                     _RE2	set	0x7C22
  4064                           	global	_RE3
  4065  0000                     _RE3	set	0x7CB3
  4066                           	global	_RE4
  4067  0000                     _RE4	set	0x7C24
  4068                           	global	_RE5
  4069  0000                     _RE5	set	0x7C25
  4070                           	global	_RE6
  4071  0000                     _RE6	set	0x7C26
  4072                           	global	_RE7
  4073  0000                     _RE7	set	0x7C27
  4074                           	global	_READ_WRITE2
  4075  0000                     _READ_WRITE2	set	0x7C3A
  4076                           	global	_RI
  4077  0000                     _RI	set	0x7E84
  4078                           	global	_RJPU
  4079  0000                     _RJPU	set	0x7C07
  4080                           	global	_RSEN
  4081  0000                     _RSEN	set	0x7E29
  4082                           	global	_RSEN1
  4083  0000                     _RSEN1	set	0x7E29
  4084                           	global	_RSEN2
  4085  0000                     _RSEN2	set	0x7C29
  4086                           	global	_RW
  4087  0000                     _RW	set	0x7E3A
  4088                           	global	_RW1
  4089  0000                     _RW1	set	0x7E3A
  4090                           	global	_RW2
  4091  0000                     _RW2	set	0x7C3A
  4092                           	global	_RX
  4093  0000                     _RX	set	0x7C17
  4094                           	global	_RX9
  4095  0000                     _RX9	set	0x7D5E
  4096                           	global	_RX91
  4097  0000                     _RX91	set	0x7D5E
  4098                           	global	_RX9D
  4099  0000                     _RX9D	set	0x7D58
  4100                           	global	_RX9D1
  4101  0000                     _RX9D1	set	0x7D58
  4102                           	global	_R_W2
  4103  0000                     _R_W2	set	0x7C3A
  4104                           	global	_R_nW2
  4105  0000                     _R_nW2	set	0x7C3A
  4106                           	global	_S2
  4107  0000                     _S2	set	0x7C3B
  4108                           	global	_SCK
  4109  0000                     _SCK	set	0x7C13
  4110                           	global	_SCK1
  4111  0000                     _SCK1	set	0x7C13
  4112                           	global	_SCK2
  4113  0000                     _SCK2	set	0x7C18
  4114                           	global	_SCKP
  4115  0000                     _SCKP	set	0x7DC4
  4116                           	global	_SCL
  4117  0000                     _SCL	set	0x7C13
  4118                           	global	_SCL1
  4119  0000                     _SCL1	set	0x7C13
  4120                           	global	_SCL2
  4121  0000                     _SCL2	set	0x7C18
  4122                           	global	_SCS0
  4123  0000                     _SCS0	set	0x7E98
  4124                           	global	_SCS1
  4125  0000                     _SCS1	set	0x7E99
  4126                           	global	_SDA
  4127  0000                     _SDA	set	0x7C14
  4128                           	global	_SDA1
  4129  0000                     _SDA1	set	0x7C14
  4130                           	global	_SDA2
  4131  0000                     _SDA2	set	0x7C19
  4132                           	global	_SDI
  4133  0000                     _SDI	set	0x7C14
  4134                           	global	_SDI1
  4135  0000                     _SDI1	set	0x7C14
  4136                           	global	_SDI2
  4137  0000                     _SDI2	set	0x7C19
  4138                           	global	_SDO
  4139  0000                     _SDO	set	0x7C15
  4140                           	global	_SDO1
  4141  0000                     _SDO1	set	0x7C15
  4142                           	global	_SDO2
  4143  0000                     _SDO2	set	0x7C1A
  4144                           	global	_SEN
  4145  0000                     _SEN	set	0x7E28
  4146                           	global	_SEN1
  4147  0000                     _SEN1	set	0x7E28
  4148                           	global	_SEN2
  4149  0000                     _SEN2	set	0x7C28
  4150                           	global	_SENDB
  4151  0000                     _SENDB	set	0x7D63
  4152                           	global	_SENDB1
  4153  0000                     _SENDB1	set	0x7D63
  4154                           	global	_SMP
  4155  0000                     _SMP	set	0x7E3F
  4156                           	global	_SMP1
  4157  0000                     _SMP1	set	0x7E3F
  4158                           	global	_SMP2
  4159  0000                     _SMP2	set	0x7C3F
  4160                           	global	_SOSCEN
  4161  0000                     _SOSCEN	set	0x7E6B
  4162                           	global	_SPEN
  4163  0000                     _SPEN	set	0x7D5F
  4164                           	global	_SPEN1
  4165  0000                     _SPEN1	set	0x7D5F
  4166                           	global	_SREN
  4167  0000                     _SREN	set	0x7D5D
  4168                           	global	_SREN1
  4169  0000                     _SREN1	set	0x7D5D
  4170                           	global	_SRENA
  4171  0000                     _SRENA	set	0x7D5D
  4172                           	global	_SS1
  4173  0000                     _SS1	set	0x7C05
  4174                           	global	_SS2
  4175  0000                     _SS2	set	0x7C1B
  4176                           	global	_SSP1IE
  4177  0000                     _SSP1IE	set	0x7CEB
  4178                           	global	_SSP1IF
  4179  0000                     _SSP1IF	set	0x7CF3
  4180                           	global	_SSP1IP
  4181  0000                     _SSP1IP	set	0x7CFB
  4182                           	global	_SSP2IE
  4183  0000                     _SSP2IE	set	0x7D1F
  4184                           	global	_SSP2IF
  4185  0000                     _SSP2IF	set	0x7D27
  4186                           	global	_SSP2IP
  4187  0000                     _SSP2IP	set	0x7D2F
  4188                           	global	_SSPEN
  4189  0000                     _SSPEN	set	0x7E35
  4190                           	global	_SSPEN1
  4191  0000                     _SSPEN1	set	0x7E35
  4192                           	global	_SSPEN2
  4193  0000                     _SSPEN2	set	0x7C35
  4194                           	global	_SSPIE
  4195  0000                     _SSPIE	set	0x7CEB
  4196                           	global	_SSPIF
  4197  0000                     _SSPIF	set	0x7CF3
  4198                           	global	_SSPIP
  4199  0000                     _SSPIP	set	0x7CFB
  4200                           	global	_SSPM0
  4201  0000                     _SSPM0	set	0x7E30
  4202                           	global	_SSPM01
  4203  0000                     _SSPM01	set	0x7E30
  4204                           	global	_SSPM02
  4205  0000                     _SSPM02	set	0x7C30
  4206                           	global	_SSPM1
  4207  0000                     _SSPM1	set	0x7E31
  4208                           	global	_SSPM11
  4209  0000                     _SSPM11	set	0x7E31
  4210                           	global	_SSPM12
  4211  0000                     _SSPM12	set	0x7C31
  4212                           	global	_SSPM2
  4213  0000                     _SSPM2	set	0x7E32
  4214                           	global	_SSPM21
  4215  0000                     _SSPM21	set	0x7E32
  4216                           	global	_SSPM22
  4217  0000                     _SSPM22	set	0x7C32
  4218                           	global	_SSPM3
  4219  0000                     _SSPM3	set	0x7E33
  4220                           	global	_SSPM31
  4221  0000                     _SSPM31	set	0x7E33
  4222                           	global	_SSPM32
  4223  0000                     _SSPM32	set	0x7C33
  4224                           	global	_SSPOV
  4225  0000                     _SSPOV	set	0x7E36
  4226                           	global	_SSPOV1
  4227  0000                     _SSPOV1	set	0x7E36
  4228                           	global	_SSPOV2
  4229  0000                     _SSPOV2	set	0x7C36
  4230                           	global	_START
  4231  0000                     _START	set	0x7E3B
  4232                           	global	_START1
  4233  0000                     _START1	set	0x7E3B
  4234                           	global	_START2
  4235  0000                     _START2	set	0x7C3B
  4236                           	global	_STKFUL
  4237  0000                     _STKFUL	set	0x7FE7
  4238                           	global	_STKOVF
  4239  0000                     _STKOVF	set	0x7FE7
  4240                           	global	_STKPTR0
  4241  0000                     _STKPTR0	set	0x7FE0
  4242                           	global	_STKPTR1
  4243  0000                     _STKPTR1	set	0x7FE1
  4244                           	global	_STKPTR2
  4245  0000                     _STKPTR2	set	0x7FE2
  4246                           	global	_STKPTR3
  4247  0000                     _STKPTR3	set	0x7FE3
  4248                           	global	_STKPTR4
  4249  0000                     _STKPTR4	set	0x7FE4
  4250                           	global	_STKUNF
  4251  0000                     _STKUNF	set	0x7FE6
  4252                           	global	_STOP
  4253  0000                     _STOP	set	0x7E3C
  4254                           	global	_STOP1
  4255  0000                     _STOP1	set	0x7E3C
  4256                           	global	_STOP2
  4257  0000                     _STOP2	set	0x7C3C
  4258                           	global	_SWDTE
  4259  0000                     _SWDTE	set	0x7E88
  4260                           	global	_SWDTEN
  4261  0000                     _SWDTEN	set	0x7E88
  4262                           	global	_SYNC
  4263  0000                     _SYNC	set	0x7D64
  4264                           	global	_SYNC1
  4265  0000                     _SYNC1	set	0x7D64
  4266                           	global	_T08BIT
  4267  0000                     _T08BIT	set	0x7EAE
  4268                           	global	_T0CKI
  4269  0000                     _T0CKI	set	0x7C0D
  4270                           	global	_T0CS
  4271  0000                     _T0CS	set	0x7EAD
  4272                           	global	_T0IE
  4273  0000                     _T0IE	set	0x7F95
  4274                           	global	_T0IF
  4275  0000                     _T0IF	set	0x7F92
  4276                           	global	_T0IP
  4277  0000                     _T0IP	set	0x7F8A
  4278                           	global	_T0PS0
  4279  0000                     _T0PS0	set	0x7EA8
  4280                           	global	_T0PS1
  4281  0000                     _T0PS1	set	0x7EA9
  4282                           	global	_T0PS2
  4283  0000                     _T0PS2	set	0x7EAA
  4284                           	global	_T0SE
  4285  0000                     _T0SE	set	0x7EAC
  4286                           	global	_T1CKI
  4287  0000                     _T1CKI	set	0x7C10
  4288                           	global	_T1CKPS0
  4289  0000                     _T1CKPS0	set	0x7E6C
  4290                           	global	_T1CKPS1
  4291  0000                     _T1CKPS1	set	0x7E6D
  4292                           	global	_T1INSYNC
  4293  0000                     _T1INSYNC	set	0x7E6A
  4294                           	global	_T1OSCEN
  4295  0000                     _T1OSCEN	set	0x7E6B
  4296                           	global	_T1OSI
  4297  0000                     _T1OSI	set	0x7C11
  4298                           	global	_T1OSO
  4299  0000                     _T1OSO	set	0x7C10
  4300                           	global	_T1RD16
  4301  0000                     _T1RD16	set	0x7E6F
  4302                           	global	_T1RUN
  4303  0000                     _T1RUN	set	0x7E6E
  4304                           	global	_T1SYNC
  4305  0000                     _T1SYNC	set	0x7E6A
  4306                           	global	_T2CKPS0
  4307  0000                     _T2CKPS0	set	0x7E50
  4308                           	global	_T2CKPS1
  4309  0000                     _T2CKPS1	set	0x7E51
  4310                           	global	_T2OUTPS0
  4311  0000                     _T2OUTPS0	set	0x7E53
  4312                           	global	_T2OUTPS1
  4313  0000                     _T2OUTPS1	set	0x7E54
  4314                           	global	_T2OUTPS2
  4315  0000                     _T2OUTPS2	set	0x7E55
  4316                           	global	_T2OUTPS3
  4317  0000                     _T2OUTPS3	set	0x7E56
  4318                           	global	_TMR0IE
  4319  0000                     _TMR0IE	set	0x7F95
  4320                           	global	_TMR0IF
  4321  0000                     _TMR0IF	set	0x7F92
  4322                           	global	_TMR0IP
  4323  0000                     _TMR0IP	set	0x7F8A
  4324                           	global	_TMR0ON
  4325  0000                     _TMR0ON	set	0x7EAF
  4326                           	global	_TMR1CS
  4327  0000                     _TMR1CS	set	0x7E69
  4328                           	global	_TMR1IE
  4329  0000                     _TMR1IE	set	0x7CE8
  4330                           	global	_TMR1IF
  4331  0000                     _TMR1IF	set	0x7CF0
  4332                           	global	_TMR1IP
  4333  0000                     _TMR1IP	set	0x7CF8
  4334                           	global	_TMR1ON
  4335  0000                     _TMR1ON	set	0x7E68
  4336                           	global	_TMR2IE
  4337  0000                     _TMR2IE	set	0x7CE9
  4338                           	global	_TMR2IF
  4339  0000                     _TMR2IF	set	0x7CF1
  4340                           	global	_TMR2IP
  4341  0000                     _TMR2IP	set	0x7CF9
  4342                           	global	_TMR2ON
  4343  0000                     _TMR2ON	set	0x7E52
  4344                           	global	_TO
  4345  0000                     _TO	set	0x7E83
  4346                           	global	_TOUTPS0
  4347  0000                     _TOUTPS0	set	0x7E53
  4348                           	global	_TOUTPS1
  4349  0000                     _TOUTPS1	set	0x7E54
  4350                           	global	_TOUTPS2
  4351  0000                     _TOUTPS2	set	0x7E55
  4352                           	global	_TOUTPS3
  4353  0000                     _TOUTPS3	set	0x7E56
  4354                           	global	_TRISA0
  4355  0000                     _TRISA0	set	0x7C90
  4356                           	global	_TRISA1
  4357  0000                     _TRISA1	set	0x7C91
  4358                           	global	_TRISA2
  4359  0000                     _TRISA2	set	0x7C92
  4360                           	global	_TRISA3
  4361  0000                     _TRISA3	set	0x7C93
  4362                           	global	_TRISA5
  4363  0000                     _TRISA5	set	0x7C95
  4364                           	global	_TRISB0
  4365  0000                     _TRISB0	set	0x7C98
  4366                           	global	_TRISB1
  4367  0000                     _TRISB1	set	0x7C99
  4368                           	global	_TRISB2
  4369  0000                     _TRISB2	set	0x7C9A
  4370                           	global	_TRISB3
  4371  0000                     _TRISB3	set	0x7C9B
  4372                           	global	_TRISB4
  4373  0000                     _TRISB4	set	0x7C9C
  4374                           	global	_TRISB5
  4375  0000                     _TRISB5	set	0x7C9D
  4376                           	global	_TRISB6
  4377  0000                     _TRISB6	set	0x7C9E
  4378                           	global	_TRISB7
  4379  0000                     _TRISB7	set	0x7C9F
  4380                           	global	_TRISC0
  4381  0000                     _TRISC0	set	0x7CA0
  4382                           	global	_TRISC1
  4383  0000                     _TRISC1	set	0x7CA1
  4384                           	global	_TRISC2
  4385  0000                     _TRISC2	set	0x7CA2
  4386                           	global	_TRISC3
  4387  0000                     _TRISC3	set	0x7CA3
  4388                           	global	_TRISC4
  4389  0000                     _TRISC4	set	0x7CA4
  4390                           	global	_TRISC5
  4391  0000                     _TRISC5	set	0x7CA5
  4392                           	global	_TRISC6
  4393  0000                     _TRISC6	set	0x7CA6
  4394                           	global	_TRISC7
  4395  0000                     _TRISC7	set	0x7CA7
  4396                           	global	_TRISD0
  4397  0000                     _TRISD0	set	0x7CA8
  4398                           	global	_TRISD1
  4399  0000                     _TRISD1	set	0x7CA9
  4400                           	global	_TRISD2
  4401  0000                     _TRISD2	set	0x7CAA
  4402                           	global	_TRISD3
  4403  0000                     _TRISD3	set	0x7CAB
  4404                           	global	_TRISD4
  4405  0000                     _TRISD4	set	0x7CAC
  4406                           	global	_TRISD5
  4407  0000                     _TRISD5	set	0x7CAD
  4408                           	global	_TRISD6
  4409  0000                     _TRISD6	set	0x7CAE
  4410                           	global	_TRISD7
  4411  0000                     _TRISD7	set	0x7CAF
  4412                           	global	_TRISE0
  4413  0000                     _TRISE0	set	0x7CB0
  4414                           	global	_TRISE1
  4415  0000                     _TRISE1	set	0x7CB1
  4416                           	global	_TRISE2
  4417  0000                     _TRISE2	set	0x7CB2
  4418                           	global	_TRMT
  4419  0000                     _TRMT	set	0x7D61
  4420                           	global	_TRMT1
  4421  0000                     _TRMT1	set	0x7D61
  4422                           	global	_TX
  4423  0000                     _TX	set	0x7C16
  4424                           	global	_TX1IE
  4425  0000                     _TX1IE	set	0x7CEC
  4426                           	global	_TX1IF
  4427  0000                     _TX1IF	set	0x7CF4
  4428                           	global	_TX1IP
  4429  0000                     _TX1IP	set	0x7CFC
  4430                           	global	_TX8_9
  4431  0000                     _TX8_9	set	0x7D66
  4432                           	global	_TX9
  4433  0000                     _TX9	set	0x7D66
  4434                           	global	_TX91
  4435  0000                     _TX91	set	0x7D66
  4436                           	global	_TX9D
  4437  0000                     _TX9D	set	0x7D60
  4438                           	global	_TX9D1
  4439  0000                     _TX9D1	set	0x7D60
  4440                           	global	_TXD8
  4441  0000                     _TXD8	set	0x7D60
  4442                           	global	_TXEN
  4443  0000                     _TXEN	set	0x7D65
  4444                           	global	_TXEN1
  4445  0000                     _TXEN1	set	0x7D65
  4446                           	global	_TXIE
  4447  0000                     _TXIE	set	0x7CEC
  4448                           	global	_TXIF
  4449  0000                     _TXIF	set	0x7CF4
  4450                           	global	_TXIP
  4451  0000                     _TXIP	set	0x7CFC
  4452                           	global	_UA
  4453  0000                     _UA	set	0x7E39
  4454                           	global	_UA1
  4455  0000                     _UA1	set	0x7E39
  4456                           	global	_UA2
  4457  0000                     _UA2	set	0x7C39
  4458                           	global	_ULPWUIN
  4459  0000                     _ULPWUIN	set	0x7C00
  4460                           	global	_VCFG0
  4461  0000                     _VCFG0	set	0x7E0C
  4462                           	global	_VCFG01
  4463  0000                     _VCFG01	set	0x7E0C
  4464                           	global	_VCFG1
  4465  0000                     _VCFG1	set	0x7E0D
  4466                           	global	_VCFG11
  4467  0000                     _VCFG11	set	0x7E0D
  4468                           	global	_VREFM
  4469  0000                     _VREFM	set	0x7C02
  4470                           	global	_VREFP
  4471  0000                     _VREFP	set	0x7C03
  4472                           	global	_W4E
  4473  0000                     _W4E	set	0x7DC1
  4474                           	global	_WCOL
  4475  0000                     _WCOL	set	0x7E37
  4476                           	global	_WCOL1
  4477  0000                     _WCOL1	set	0x7E37
  4478                           	global	_WCOL2
  4479  0000                     _WCOL2	set	0x7C37
  4480                           	global	_WR
  4481  0000                     _WR	set	0x7D31
  4482                           	global	_WRE
  4483  0000                     _WRE	set	0x7C21
  4484                           	global	_WREN
  4485  0000                     _WREN	set	0x7D32
  4486                           	global	_WRERR
  4487  0000                     _WRERR	set	0x7D33
  4488                           	global	_WUE
  4489  0000                     _WUE	set	0x7DC1
  4490                           	global	_ZERO
  4491  0000                     _ZERO	set	0x7EC2
  4492                           	global	_nA2
  4493  0000                     _nA2	set	0x7C3D
  4494                           	global	_nADDRESS2
  4495  0000                     _nADDRESS2	set	0x7C3D
  4496                           	global	_nBOR
  4497  0000                     _nBOR	set	0x7E80
  4498                           	global	_nCS
  4499  0000                     _nCS	set	0x7C22
  4500                           	global	_nDONE
  4501  0000                     _nDONE	set	0x7E11
  4502                           	global	_nPD
  4503  0000                     _nPD	set	0x7E82
  4504                           	global	_nPOR
  4505  0000                     _nPOR	set	0x7E81
  4506                           	global	_nRBPU
  4507  0000                     _nRBPU	set	0x7F8F
  4508                           	global	_nRC8
  4509  0000                     _nRC8	set	0x7D5E
  4510                           	global	_nRD
  4511  0000                     _nRD	set	0x7C20
  4512                           	global	_nRI
  4513  0000                     _nRI	set	0x7E84
  4514                           	global	_nSS1
  4515  0000                     _nSS1	set	0x7C05
  4516                           	global	_nSS2
  4517  0000                     _nSS2	set	0x7C1B
  4518                           	global	_nT1SYNC
  4519  0000                     _nT1SYNC	set	0x7E6A
  4520                           	global	_nTO
  4521  0000                     _nTO	set	0x7E83
  4522                           	global	_nTX8
  4523  0000                     _nTX8	set	0x7D66
  4524                           	global	_nW2
  4525  0000                     _nW2	set	0x7C3A
  4526                           	global	_nWR
  4527  0000                     _nWR	set	0x7C21
  4528                           	global	_nWRITE2
  4529  0000                     _nWRITE2	set	0x7C3A
  4530                           	global	_uc_ptr
  4531                           psect	nvCOMRAM,class=COMRAM,space=1
  4532                           global __pnvCOMRAM
  4533  00004D                     __pnvCOMRAM:
  4534  00004D                     _uc_ptr:
  4535  00004D                            ds      2
  4536                           	global	_ic_ptr
  4537                           psect	nvBANK0,class=BANK0,space=1
  4538                           global __pnvBANK0
  4539  0000DE                     __pnvBANK0:
  4540  0000DE                     _ic_ptr:
  4541  0000DE                            ds      2
  4542                           ; #config settings
  4543                           global __CFG_WDTEN$OFF
  4544  0000                     __CFG_WDTEN$OFF equ 0x0
  4545                           global __CFG_STVREN$OFF
  4546  0000                     __CFG_STVREN$OFF equ 0x0
  4547                           global __CFG_XINST$OFF
  4548  0000                     __CFG_XINST$OFF equ 0x0
  4549                           global __CFG_CP0$OFF
  4550  0000                     __CFG_CP0$OFF equ 0x0
  4551                           global __CFG_IESO$ON
  4552  0000                     __CFG_IESO$ON equ 0x0
  4553                           global __CFG_FOSC2$ON
  4554  0000                     __CFG_FOSC2$ON equ 0x0
  4555                           global __CFG_FOSC$HSPLL
  4556  0000                     __CFG_FOSC$HSPLL equ 0x0
  4557                           global __CFG_FCMEN$ON
  4558  0000                     __CFG_FCMEN$ON equ 0x0
  4559                           global __CFG_WDTPS$32768
  4560  0000                     __CFG_WDTPS$32768 equ 0x0
  4561                           global __CFG_CCP2MX$DEFAULT
  4562  0000                     __CFG_CCP2MX$DEFAULT equ 0x0
  4563                           	file	"/tmp/cgtv9Yuef"
  4564                           	line	#
  4565                           psect	cinit,class=CODE,delta=1,reloc=2
  4566                           global __pcinit
  4567  001B9A                     __pcinit:
  4568                           global start_initialization
  4569  001B9A                     start_initialization:
  4570                           
  4571                           global __initialization
  4572  001B9A                     __initialization:
  4573                           psect	bssCOMRAM,class=COMRAM,space=1
  4574                           global __pbssCOMRAM
  4575  000048                     __pbssCOMRAM:
  4576                           	global	_errno
  4577                           	global	_errno
  4578  000048                     _errno:
  4579  000048                            ds      2
  4580                           	global	_CapStatus
  4581                           	global	_CapStatus
  4582  00004A                     _CapStatus:
  4583  00004A                            ds      1
  4584  00004B                     _MQ_Main_Willing_to_block:
  4585  00004B                            ds      1
  4586                           	global	_USART_Status
  4587  00004C                     _USART_Status:
  4588  00004C                            ds      1
  4589                           psect	bssBANK0,class=BANK0,space=1
  4590                           global __pbssBANK0
  4591  000080                     __pbssBANK0:
  4592  000080                     _ToMainLow_MQ:
  4593  000080                            ds      54
  4594                           psect	bssBANK1,class=BANK1,space=1
  4595                           global __pbssBANK1
  4596  000100                     __pbssBANK1:
  4597  000100                     _FromMainHigh_MQ:
  4598  000100                            ds      54
  4599  000136                     _FromMainLow_MQ:
  4600  000136                            ds      54
  4601  00016C                     _ToMainHigh_MQ:
  4602  00016C                            ds      54
  4603                           psect	cinit
  4604                           ; Clear objects allocated to BANK1 (162 bytes)
  4605                           	global __pbssBANK1
  4606  001B9A  EE01  F000         lfsr	0,__pbssBANK1
  4607  001B9E  0EA2               movlw	162
  4608  001BA0                     clear_0:
  4609  001BA0  6AEE               clrf	postinc0,c
  4610  001BA2  06E8               decf	wreg
  4611  001BA4  E1FD               bnz	clear_0
  4612                           ; Clear objects allocated to BANK0 (54 bytes)
  4613                           	global __pbssBANK0
  4614  001BA6  EE00  F080         lfsr	0,__pbssBANK0
  4615  001BAA  0E36               movlw	54
  4616  001BAC                     clear_1:
  4617  001BAC  6AEE               clrf	postinc0,c
  4618  001BAE  06E8               decf	wreg
  4619  001BB0  E1FD               bnz	clear_1
  4620                           ; Clear objects allocated to COMRAM (5 bytes)
  4621                           	global __pbssCOMRAM
  4622  001BB2  6A4C               clrf	(__pbssCOMRAM+4)&0xffh,c
  4623  001BB4  6A4B               clrf	(__pbssCOMRAM+3)&0xffh,c
  4624  001BB6  6A4A               clrf	(__pbssCOMRAM+2)&0xffh,c
  4625  001BB8  6A49               clrf	(__pbssCOMRAM+1)&0xffh,c
  4626  001BBA  6A48               clrf	(__pbssCOMRAM+0)&0xffh,c
  4627                           psect cinit,class=CODE,delta=1
  4628                           global end_of_initialization,__end_of__initialization
  4629                           
  4630                           ;End of C runtime variable initialization code
  4631                           
  4632  001BBC                     end_of_initialization:
  4633  001BBC                     __end_of__initialization:movlb 0
  4634  001BBE  EF4C  F004         goto _main	;jump to C main() function
  4635                           psect	cstackBANK1,class=BANK1,space=1
  4636                           global __pcstackBANK1
  4637  0001A2                     __pcstackBANK1:
  4638  0001A2                     ??_init_timer1_lthread:	; 0 bytes @ 0x0
  4639  0001A2                     ??_timer1_lthread:	; 0 bytes @ 0x0
  4640                           	global	timer0_lthread@msgval
  4641  0001A2                     timer0_lthread@msgval:	; 2 bytes @ 0x0
  4642                           	global	memcpy@d
  4643  0001A2                     memcpy@d:	; 2 bytes @ 0x0
  4644  0001A2                     	ds   2
  4645                           	global	memcpy@s
  4646  0001A4                     memcpy@s:	; 2 bytes @ 0x2
  4647  0001A4                     	ds   2
  4648                           	global	?_recv_msg
  4649  0001A6                     ?_recv_msg:	; 1 bytes @ 0x4
  4650                           	global	recv_msg@qptr
  4651  0001A6                     recv_msg@qptr:	; 2 bytes @ 0x4
  4652  0001A6                     	ds   2
  4653                           	global	recv_msg@maxlength
  4654  0001A8                     recv_msg@maxlength:	; 1 bytes @ 0x6
  4655  0001A8                     	ds   1
  4656                           	global	recv_msg@msgtype
  4657  0001A9                     recv_msg@msgtype:	; 2 bytes @ 0x7
  4658  0001A9                     	ds   2
  4659                           	global	recv_msg@data
  4660  0001AB                     recv_msg@data:	; 2 bytes @ 0x9
  4661  0001AB                     	ds   2
  4662                           	global	recv_msg@slot
  4663  0001AD                     recv_msg@slot:	; 1 bytes @ 0xB
  4664  0001AD                     	ds   1
  4665                           	global	recv_msg@tlength
  4666  0001AE                     recv_msg@tlength:	; 2 bytes @ 0xC
  4667  0001AE                     	ds   2
  4668                           	global	recv_msg@qmsg
  4669  0001B0                     recv_msg@qmsg:	; 2 bytes @ 0xE
  4670  0001B0                     	ds   2
  4671                           	global	?_ToMainHigh_recvmsg
  4672  0001B2                     ?_ToMainHigh_recvmsg:	; 1 bytes @ 0x10
  4673                           	global	?_ToMainLow_recvmsg
  4674  0001B2                     ?_ToMainLow_recvmsg:	; 1 bytes @ 0x10
  4675                           	global	ToMainLow_recvmsg@maxlength
  4676  0001B2                     ToMainLow_recvmsg@maxlength:	; 1 bytes @ 0x10
  4677                           	global	ToMainHigh_recvmsg@maxlength
  4678  0001B2                     ToMainHigh_recvmsg@maxlength:	; 1 bytes @ 0x10
  4679  0001B2                     	ds   1
  4680                           	global	ToMainLow_recvmsg@msgtype
  4681  0001B3                     ToMainLow_recvmsg@msgtype:	; 2 bytes @ 0x11
  4682                           	global	ToMainHigh_recvmsg@msgtype
  4683  0001B3                     ToMainHigh_recvmsg@msgtype:	; 2 bytes @ 0x11
  4684  0001B3                     	ds   2
  4685                           	global	ToMainLow_recvmsg@data
  4686  0001B5                     ToMainLow_recvmsg@data:	; 2 bytes @ 0x13
  4687                           	global	ToMainHigh_recvmsg@data
  4688  0001B5                     ToMainHigh_recvmsg@data:	; 2 bytes @ 0x13
  4689  0001B5                     	ds   2
  4690  0001B7                     ??_main:	; 0 bytes @ 0x15
  4691  0001B7                     	ds   1
  4692                           	global	main@uthread_data
  4693  0001B8                     main@uthread_data:	; 2 bytes @ 0x16
  4694  0001B8                     	ds   2
  4695                           	global	main@t0thread_data
  4696  0001BA                     main@t0thread_data:	; 2 bytes @ 0x18
  4697  0001BA                     	ds   2
  4698                           	global	main@msgbuffer
  4699  0001BC                     main@msgbuffer:	; 11 bytes @ 0x1A
  4700  0001BC                     	ds   11
  4701                           	global	main@last_reg_recvd
  4702  0001C7                     main@last_reg_recvd:	; 1 bytes @ 0x25
  4703  0001C7                     	ds   1
  4704                           	global	main@t1thread_data
  4705  0001C8                     main@t1thread_data:	; 2 bytes @ 0x26
  4706  0001C8                     	ds   2
  4707                           	global	main@uc
  4708  0001CA                     main@uc:	; 5 bytes @ 0x28
  4709  0001CA                     	ds   5
  4710                           	global	main@msgtype
  4711  0001CF                     main@msgtype:	; 1 bytes @ 0x2D
  4712  0001CF                     	ds   1
  4713                           	global	main@length
  4714  0001D0                     main@length:	; 1 bytes @ 0x2E
  4715  0001D0                     	ds   1
  4716                           	global	main@ic
  4717  0001D1                     main@ic:	; 28 bytes @ 0x2F
  4718  0001D1                     	ds   28
  4719                           psect	cstackBANK0,class=BANK0,space=1
  4720                           global __pcstackBANK0
  4721  0000B6                     __pcstackBANK0:
  4722                           	global	?_ToMainHigh_sendmsg
  4723  0000B6                     ?_ToMainHigh_sendmsg:	; 1 bytes @ 0x0
  4724                           	global	ToMainHigh_sendmsg@length
  4725  0000B6                     ToMainHigh_sendmsg@length:	; 1 bytes @ 0x0
  4726                           	global	i2recv_msg@slot
  4727  0000B6                     i2recv_msg@slot:	; 1 bytes @ 0x0
  4728  0000B6                     	ds   1
  4729                           	global	ToMainHigh_sendmsg@msgtype
  4730  0000B7                     ToMainHigh_sendmsg@msgtype:	; 1 bytes @ 0x1
  4731                           	global	i2recv_msg@tlength
  4732  0000B7                     i2recv_msg@tlength:	; 2 bytes @ 0x1
  4733  0000B7                     	ds   1
  4734                           	global	ToMainHigh_sendmsg@data
  4735  0000B8                     ToMainHigh_sendmsg@data:	; 2 bytes @ 0x2
  4736  0000B8                     	ds   1
  4737                           	global	i2recv_msg@qmsg
  4738  0000B9                     i2recv_msg@qmsg:	; 2 bytes @ 0x3
  4739  0000B9                     	ds   1
  4740  0000BA                     ??_i2c_int_handler:	; 0 bytes @ 0x4
  4741  0000BA                     	ds   1
  4742                           	global	?_FromMainHigh_recvmsg
  4743  0000BB                     ?_FromMainHigh_recvmsg:	; 1 bytes @ 0x5
  4744                           	global	FromMainHigh_recvmsg@maxlength
  4745  0000BB                     FromMainHigh_recvmsg@maxlength:	; 1 bytes @ 0x5
  4746  0000BB                     	ds   1
  4747                           	global	FromMainHigh_recvmsg@msgtype
  4748  0000BC                     FromMainHigh_recvmsg@msgtype:	; 2 bytes @ 0x6
  4749                           	global	i2c_int_handler@error_buf
  4750  0000BC                     i2c_int_handler@error_buf:	; 3 bytes @ 0x6
  4751  0000BC                     	ds   2
  4752                           	global	FromMainHigh_recvmsg@data
  4753  0000BE                     FromMainHigh_recvmsg@data:	; 2 bytes @ 0x8
  4754  0000BE                     	ds   1
  4755                           	global	i2c_int_handler@data_written
  4756  0000BF                     i2c_int_handler@data_written:	; 1 bytes @ 0x9
  4757  0000BF                     	ds   1
  4758  0000C0                     ??_timer0_int_handler:	; 0 bytes @ 0xA
  4759                           	global	i2c_int_handler@overrun_error
  4760  0000C0                     i2c_int_handler@overrun_error:	; 1 bytes @ 0xA
  4761  0000C0                     	ds   1
  4762                           	global	i2c_int_handler@i2c_data
  4763  0000C1                     i2c_int_handler@i2c_data:	; 1 bytes @ 0xB
  4764  0000C1                     	ds   1
  4765                           	global	i2c_int_handler@msg_to_send
  4766  0000C2                     i2c_int_handler@msg_to_send:	; 1 bytes @ 0xC
  4767                           	global	timer0_int_handler@msgtype
  4768  0000C2                     timer0_int_handler@msgtype:	; 2 bytes @ 0xC
  4769  0000C2                     	ds   1
  4770                           	global	i2c_int_handler@msg_ready
  4771  0000C3                     i2c_int_handler@msg_ready:	; 1 bytes @ 0xD
  4772  0000C3                     	ds   1
  4773                           	global	i2c_int_handler@data_read
  4774  0000C4                     i2c_int_handler@data_read:	; 1 bytes @ 0xE
  4775                           	global	timer0_int_handler@length
  4776  0000C4                     timer0_int_handler@length:	; 2 bytes @ 0xE
  4777  0000C4                     	ds   2
  4778                           	global	timer0_int_handler@val
  4779  0000C6                     timer0_int_handler@val:	; 2 bytes @ 0x10
  4780  0000C6                     	ds   2
  4781  0000C8                     ??_InterruptHandlerHigh:	; 0 bytes @ 0x12
  4782  0000C8                     	ds   14
  4783                           	global	?_init_uart_recv
  4784  0000D6                     ?_init_uart_recv:	; 0 bytes @ 0x20
  4785                           	global	?_init_i2c
  4786  0000D6                     ?_init_i2c:	; 0 bytes @ 0x20
  4787                           	global	?_OpenTimer1
  4788  0000D6                     ?_OpenTimer1:	; 0 bytes @ 0x20
  4789                           	global	?_i2c_configure_slave
  4790  0000D6                     ?_i2c_configure_slave:	; 0 bytes @ 0x20
  4791                           	global	?_OpenUSART
  4792  0000D6                     ?_OpenUSART:	; 0 bytes @ 0x20
  4793                           	global	?_start_i2c_slave_reply
  4794  0000D6                     ?_start_i2c_slave_reply:	; 0 bytes @ 0x20
  4795                           	global	?_Delay1KTCYx
  4796  0000D6                     ?_Delay1KTCYx:	; 0 bytes @ 0x20
  4797                           	global	?_OpenADC
  4798  0000D6                     ?_OpenADC:	; 0 bytes @ 0x20
  4799                           	global	?_SetChanADC
  4800  0000D6                     ?_SetChanADC:	; 0 bytes @ 0x20
  4801  0000D6                     ??_ConvertADC:	; 0 bytes @ 0x20
  4802  0000D6                     ??_enable_interrupts:	; 0 bytes @ 0x20
  4803                           	global	?_init_queue
  4804  0000D6                     ?_init_queue:	; 0 bytes @ 0x20
  4805                           	global	?_check_msg
  4806  0000D6                     ?_check_msg:	; 1 bytes @ 0x20
  4807                           	global	?_timer0_lthread
  4808  0000D6                     ?_timer0_lthread:	; 2 bytes @ 0x20
  4809                           	global	?_timer1_lthread
  4810  0000D6                     ?_timer1_lthread:	; 2 bytes @ 0x20
  4811                           	global	?_uart_lthread
  4812  0000D6                     ?_uart_lthread:	; 2 bytes @ 0x20
  4813                           	global	?_memcpy
  4814  0000D6                     ?_memcpy:	; 2 bytes @ 0x20
  4815                           	global	?_in_high_int
  4816  0000D6                     ?_in_high_int:	; 2 bytes @ 0x20
  4817                           	global	start_i2c_slave_reply@length
  4818  0000D6                     start_i2c_slave_reply@length:	; 1 bytes @ 0x20
  4819                           	global	i2c_configure_slave@addr
  4820  0000D6                     i2c_configure_slave@addr:	; 1 bytes @ 0x20
  4821                           	global	OpenADC@config
  4822  0000D6                     OpenADC@config:	; 1 bytes @ 0x20
  4823                           	global	SetChanADC@channel
  4824  0000D6                     SetChanADC@channel:	; 1 bytes @ 0x20
  4825                           	global	OpenTimer1@config
  4826  0000D6                     OpenTimer1@config:	; 1 bytes @ 0x20
  4827                           	global	OpenUSART@config
  4828  0000D6                     OpenUSART@config:	; 1 bytes @ 0x20
  4829                           	global	Delay1KTCYx@unit
  4830  0000D6                     Delay1KTCYx@unit:	; 1 bytes @ 0x20
  4831                           	global	init_queue@qptr
  4832  0000D6                     init_queue@qptr:	; 2 bytes @ 0x20
  4833                           	global	check_msg@qptr
  4834  0000D6                     check_msg@qptr:	; 2 bytes @ 0x20
  4835                           	global	init_i2c@ic
  4836  0000D6                     init_i2c@ic:	; 2 bytes @ 0x20
  4837                           	global	init_uart_recv@uc
  4838  0000D6                     init_uart_recv@uc:	; 2 bytes @ 0x20
  4839  0000D6                     timer0_lthread@tptr:	; 2 bytes @ 0x20
  4840                           	global	timer1_lthread@tptr
  4841  0000D6                     timer1_lthread@tptr:	; 2 bytes @ 0x20
  4842  0000D6                     uart_lthread@uptr:	; 2 bytes @ 0x20
  4843                           	global	memcpy@d1
  4844  0000D6                     memcpy@d1:	; 2 bytes @ 0x20
  4845  0000D6                     	ds   1
  4846  0000D7                     ??_OpenTimer1:	; 0 bytes @ 0x21
  4847  0000D7                     ??_i2c_configure_slave:	; 0 bytes @ 0x21
  4848  0000D7                     ??_Delay1KTCYx:	; 0 bytes @ 0x21
  4849  0000D7                     ??_SetChanADC:	; 0 bytes @ 0x21
  4850                           	global	OpenADC@config2
  4851  0000D7                     OpenADC@config2:	; 1 bytes @ 0x21
  4852                           	global	start_i2c_slave_reply@msg
  4853  0000D7                     start_i2c_slave_reply@msg:	; 2 bytes @ 0x21
  4854                           	global	OpenUSART@spbrg
  4855  0000D7                     OpenUSART@spbrg:	; 2 bytes @ 0x21
  4856  0000D7                     	ds   1
  4857  0000D8                     ??_init_uart_recv:	; 0 bytes @ 0x22
  4858  0000D8                     ??_init_i2c:	; 0 bytes @ 0x22
  4859  0000D8                     ??_in_high_int:	; 0 bytes @ 0x22
  4860  0000D8                     ??_init_queue:	; 0 bytes @ 0x22
  4861  0000D8                     ??_check_msg:	; 0 bytes @ 0x22
  4862                           	global	?_in_low_int
  4863  0000D8                     ?_in_low_int:	; 2 bytes @ 0x22
  4864                           	global	OpenADC@portconfig
  4865  0000D8                     OpenADC@portconfig:	; 1 bytes @ 0x22
  4866  0000D8                     timer0_lthread@msgtype:	; 2 bytes @ 0x22
  4867  0000D8                     timer1_lthread@msgtype:	; 2 bytes @ 0x22
  4868                           	global	uart_lthread@msgtype
  4869  0000D8                     uart_lthread@msgtype:	; 2 bytes @ 0x22
  4870                           	global	memcpy@s1
  4871  0000D8                     memcpy@s1:	; 2 bytes @ 0x22
  4872  0000D8                     	ds   1
  4873  0000D9                     ??_OpenUSART:	; 0 bytes @ 0x23
  4874  0000D9                     ??_start_i2c_slave_reply:	; 0 bytes @ 0x23
  4875  0000D9                     ??_OpenADC:	; 0 bytes @ 0x23
  4876                           	global	init_queue@i
  4877  0000D9                     init_queue@i:	; 1 bytes @ 0x23
  4878  0000D9                     	ds   1
  4879  0000DA                     ??_init_queues:	; 0 bytes @ 0x24
  4880  0000DA                     ??_in_low_int:	; 0 bytes @ 0x24
  4881                           	global	?_in_main
  4882  0000DA                     ?_in_main:	; 2 bytes @ 0x24
  4883  0000DA                     timer0_lthread@length:	; 2 bytes @ 0x24
  4884  0000DA                     timer1_lthread@length:	; 2 bytes @ 0x24
  4885                           	global	uart_lthread@length
  4886  0000DA                     uart_lthread@length:	; 2 bytes @ 0x24
  4887                           	global	memcpy@n
  4888  0000DA                     memcpy@n:	; 2 bytes @ 0x24
  4889  0000DA                     	ds   1
  4890                           	global	?_init_timer1_lthread
  4891  0000DB                     ?_init_timer1_lthread:	; 0 bytes @ 0x25
  4892                           	global	init_timer1_lthread@tptr
  4893  0000DB                     init_timer1_lthread@tptr:	; 2 bytes @ 0x25
  4894  0000DB                     	ds   1
  4895  0000DC                     ??_block_on_To_msgqueues:	; 0 bytes @ 0x26
  4896  0000DC                     ??_memcpy:	; 0 bytes @ 0x26
  4897  0000DC                     ??_in_main:	; 0 bytes @ 0x26
  4898  0000DC                     ??_recv_msg:	; 0 bytes @ 0x26
  4899                           	global	timer0_lthread@msgbuffer
  4900  0000DC                     timer0_lthread@msgbuffer:	; 2 bytes @ 0x26
  4901                           	global	timer1_lthread@msgbuffer
  4902  0000DC                     timer1_lthread@msgbuffer:	; 2 bytes @ 0x26
  4903                           	global	uart_lthread@msgbuffer
  4904  0000DC                     uart_lthread@msgbuffer:	; 2 bytes @ 0x26
  4905  0000DC                     	ds   2
  4906  0000DE                     ??_ToMainHigh_recvmsg:	; 0 bytes @ 0x28
  4907  0000DE                     ??_timer0_lthread:	; 0 bytes @ 0x28
  4908  0000DE                     ??_ToMainLow_recvmsg:	; 0 bytes @ 0x28
  4909  0000DE                     ??_uart_lthread:	; 0 bytes @ 0x28
  4910                           psect	cstackCOMRAM,class=COMRAM,space=1
  4911                           global __pcstackCOMRAM
  4912  000001                     __pcstackCOMRAM:
  4913  000001                     ?_i2c_int_handler:	; 0 bytes @ 0x0
  4914  000001                     ?_timer0_int_handler:	; 0 bytes @ 0x0
  4915  000001                     ?_SleepIfOkay:	; 0 bytes @ 0x0
  4916  000001                     ?_timer1_int_handler:	; 0 bytes @ 0x0
  4917  000001                     ?_adc_int_handler:	; 0 bytes @ 0x0
  4918  000001                     ?_uart_recv_int_handler:	; 0 bytes @ 0x0
  4919  000001                     ?_init_queues:	; 0 bytes @ 0x0
  4920  000001                     ?_block_on_To_msgqueues:	; 0 bytes @ 0x0
  4921  000001                     ??_ReadUSART:	; 0 bytes @ 0x0
  4922  000001                     ?_ConvertADC:	; 0 bytes @ 0x0
  4923                           	global	?_WriteTimer1
  4924  000001                     ?_WriteTimer1:	; 0 bytes @ 0x0
  4925  000001                     ?_enable_interrupts:	; 0 bytes @ 0x0
  4926  000001                     ?_InterruptHandlerHigh:	; 0 bytes @ 0x0
  4927  000001                     ?_InterruptHandlerLow:	; 0 bytes @ 0x0
  4928  000001                     ?_main:	; 0 bytes @ 0x0
  4929  000001                     ?_enter_sleep_mode:	; 0 bytes @ 0x0
  4930  000001                     ?_ReadUSART:	; 1 bytes @ 0x0
  4931                           	global	?_ReadTimer1
  4932  000001                     ?_ReadTimer1:	; 2 bytes @ 0x0
  4933                           	global	?_ReadADC
  4934  000001                     ?_ReadADC:	; 2 bytes @ 0x0
  4935                           	global	?i1_memcpy
  4936  000001                     ?i1_memcpy:	; 2 bytes @ 0x0
  4937                           	global	ReadUSART@data
  4938  000001                     ReadUSART@data:	; 1 bytes @ 0x0
  4939                           	global	WriteTimer1@timer1
  4940  000001                     WriteTimer1@timer1:	; 2 bytes @ 0x0
  4941                           	global	i1memcpy@d1
  4942  000001                     i1memcpy@d1:	; 2 bytes @ 0x0
  4943  000001                     	ds   2
  4944  000003                     ??_ReadTimer1:	; 0 bytes @ 0x2
  4945  000003                     ??_WriteTimer1:	; 0 bytes @ 0x2
  4946  000003                     ??_ReadADC:	; 0 bytes @ 0x2
  4947                           	global	ReadTimer1@timer
  4948  000003                     ReadTimer1@timer:	; 2 bytes @ 0x2
  4949                           	global	WriteTimer1@timer
  4950  000003                     WriteTimer1@timer:	; 2 bytes @ 0x2
  4951                           	global	i1memcpy@s1
  4952  000003                     i1memcpy@s1:	; 2 bytes @ 0x2
  4953  000003                     	ds   2
  4954                           	global	i1memcpy@n
  4955  000005                     i1memcpy@n:	; 2 bytes @ 0x4
  4956  000005                     	ds   2
  4957  000007                     ??i1_memcpy:	; 0 bytes @ 0x6
  4958                           	global	i1memcpy@d
  4959  000007                     i1memcpy@d:	; 2 bytes @ 0x6
  4960  000007                     	ds   2
  4961                           	global	i1memcpy@s
  4962  000009                     i1memcpy@s:	; 2 bytes @ 0x8
  4963  000009                     	ds   2
  4964                           	global	?_send_msg
  4965  00000B                     ?_send_msg:	; 1 bytes @ 0xA
  4966                           	global	send_msg@qptr
  4967  00000B                     send_msg@qptr:	; 2 bytes @ 0xA
  4968  00000B                     	ds   2
  4969                           	global	send_msg@length
  4970  00000D                     send_msg@length:	; 1 bytes @ 0xC
  4971  00000D                     	ds   1
  4972                           	global	send_msg@msgtype
  4973  00000E                     send_msg@msgtype:	; 1 bytes @ 0xD
  4974  00000E                     	ds   1
  4975                           	global	send_msg@data
  4976  00000F                     send_msg@data:	; 2 bytes @ 0xE
  4977  00000F                     	ds   2
  4978  000011                     ??_send_msg:	; 0 bytes @ 0x10
  4979  000011                     	ds   1
  4980                           	global	send_msg@tlength
  4981  000012                     send_msg@tlength:	; 2 bytes @ 0x11
  4982  000012                     	ds   2
  4983                           	global	send_msg@slot
  4984  000014                     send_msg@slot:	; 1 bytes @ 0x13
  4985  000014                     	ds   1
  4986                           	global	send_msg@qmsg
  4987  000015                     send_msg@qmsg:	; 2 bytes @ 0x14
  4988  000015                     	ds   2
  4989                           	global	?_ToMainLow_sendmsg
  4990  000017                     ?_ToMainLow_sendmsg:	; 1 bytes @ 0x16
  4991                           	global	ToMainLow_sendmsg@length
  4992  000017                     ToMainLow_sendmsg@length:	; 1 bytes @ 0x16
  4993  000017                     	ds   1
  4994                           	global	ToMainLow_sendmsg@msgtype
  4995  000018                     ToMainLow_sendmsg@msgtype:	; 1 bytes @ 0x17
  4996  000018                     	ds   1
  4997                           	global	ToMainLow_sendmsg@data
  4998  000019                     ToMainLow_sendmsg@data:	; 2 bytes @ 0x18
  4999  000019                     	ds   2
  5000  00001B                     ??_timer1_int_handler:	; 0 bytes @ 0x1A
  5001  00001B                     ??_adc_int_handler:	; 0 bytes @ 0x1A
  5002  00001B                     ??_uart_recv_int_handler:	; 0 bytes @ 0x1A
  5003  00001B                     ??_ToMainLow_sendmsg:	; 0 bytes @ 0x1A
  5004  00001B                     	ds   2
  5005                           	global	timer1_int_handler@temp
  5006  00001D                     timer1_int_handler@temp:	; 2 bytes @ 0x1C
  5007                           	global	adc_int_handler@value
  5008  00001D                     adc_int_handler@value:	; 2 bytes @ 0x1C
  5009  00001D                     	ds   2
  5010                           	global	timer1_int_handler@result
  5011  00001F                     timer1_int_handler@result:	; 2 bytes @ 0x1E
  5012  00001F                     	ds   2
  5013  000021                     ??_InterruptHandlerLow:	; 0 bytes @ 0x20
  5014  000021                     	ds   17
  5015                           	global	?_WriteTimer0
  5016  000032                     ?_WriteTimer0:	; 0 bytes @ 0x31
  5017  000032                     ??_enter_sleep_mode:	; 0 bytes @ 0x31
  5018                           	global	?_handle_start
  5019  000032                     ?_handle_start:	; 0 bytes @ 0x31
  5020                           	global	?i2_check_msg
  5021  000032                     ?i2_check_msg:	; 1 bytes @ 0x31
  5022                           	global	?i2_in_high_int
  5023  000032                     ?i2_in_high_int:	; 2 bytes @ 0x31
  5024                           	global	?i2_memcpy
  5025  000032                     ?i2_memcpy:	; 2 bytes @ 0x31
  5026                           	global	handle_start@data_read
  5027  000032                     handle_start@data_read:	; 1 bytes @ 0x31
  5028                           	global	WriteTimer0@timer0
  5029  000032                     WriteTimer0@timer0:	; 2 bytes @ 0x31
  5030                           	global	i2check_msg@qptr
  5031  000032                     i2check_msg@qptr:	; 2 bytes @ 0x31
  5032                           	global	i2memcpy@d1
  5033  000032                     i2memcpy@d1:	; 2 bytes @ 0x31
  5034  000032                     	ds   1
  5035  000033                     ??_handle_start:	; 0 bytes @ 0x32
  5036  000033                     	ds   1
  5037  000034                     ??_WriteTimer0:	; 0 bytes @ 0x33
  5038  000034                     ??i2_in_high_int:	; 0 bytes @ 0x33
  5039  000034                     ??i2_check_msg:	; 0 bytes @ 0x33
  5040                           	global	?i2_in_low_int
  5041  000034                     ?i2_in_low_int:	; 2 bytes @ 0x33
  5042                           	global	WriteTimer0@timer
  5043  000034                     WriteTimer0@timer:	; 2 bytes @ 0x33
  5044                           	global	i2memcpy@s1
  5045  000034                     i2memcpy@s1:	; 2 bytes @ 0x33
  5046  000034                     	ds   2
  5047  000036                     ??_SleepIfOkay:	; 0 bytes @ 0x35
  5048  000036                     ??i2_in_low_int:	; 0 bytes @ 0x35
  5049                           	global	i2memcpy@n
  5050  000036                     i2memcpy@n:	; 2 bytes @ 0x35
  5051  000036                     	ds   2
  5052  000038                     ??i2_memcpy:	; 0 bytes @ 0x37
  5053                           	global	i2memcpy@d
  5054  000038                     i2memcpy@d:	; 2 bytes @ 0x37
  5055  000038                     	ds   2
  5056                           	global	i2memcpy@s
  5057  00003A                     i2memcpy@s:	; 2 bytes @ 0x39
  5058  00003A                     	ds   2
  5059                           	global	?i2_send_msg
  5060  00003C                     ?i2_send_msg:	; 1 bytes @ 0x3B
  5061                           	global	?i2_recv_msg
  5062  00003C                     ?i2_recv_msg:	; 1 bytes @ 0x3B
  5063                           	global	i2send_msg@qptr
  5064  00003C                     i2send_msg@qptr:	; 2 bytes @ 0x3B
  5065                           	global	i2recv_msg@qptr
  5066  00003C                     i2recv_msg@qptr:	; 2 bytes @ 0x3B
  5067  00003C                     	ds   2
  5068                           	global	i2send_msg@length
  5069  00003E                     i2send_msg@length:	; 1 bytes @ 0x3D
  5070                           	global	i2recv_msg@maxlength
  5071  00003E                     i2recv_msg@maxlength:	; 1 bytes @ 0x3D
  5072  00003E                     	ds   1
  5073                           	global	i2send_msg@msgtype
  5074  00003F                     i2send_msg@msgtype:	; 1 bytes @ 0x3E
  5075                           	global	i2recv_msg@msgtype
  5076  00003F                     i2recv_msg@msgtype:	; 2 bytes @ 0x3E
  5077  00003F                     	ds   1
  5078                           	global	i2send_msg@data
  5079  000040                     i2send_msg@data:	; 2 bytes @ 0x3F
  5080  000040                     	ds   1
  5081                           	global	i2recv_msg@data
  5082  000041                     i2recv_msg@data:	; 2 bytes @ 0x40
  5083  000041                     	ds   1
  5084  000042                     ??i2_send_msg:	; 0 bytes @ 0x41
  5085  000042                     	ds   1
  5086  000043                     ??i2_recv_msg:	; 0 bytes @ 0x42
  5087                           	global	i2send_msg@tlength
  5088  000043                     i2send_msg@tlength:	; 2 bytes @ 0x42
  5089  000043                     	ds   2
  5090  000045                     ??_FromMainHigh_recvmsg:	; 0 bytes @ 0x44
  5091                           	global	i2send_msg@slot
  5092  000045                     i2send_msg@slot:	; 1 bytes @ 0x44
  5093  000045                     	ds   1
  5094                           	global	i2send_msg@qmsg
  5095  000046                     i2send_msg@qmsg:	; 2 bytes @ 0x45
  5096  000046                     	ds   2
  5097  000048                     ??_ToMainHigh_sendmsg:	; 0 bytes @ 0x47
  5098                           ;!
  5099                           ;!Data Sizes:
  5100                           ;!    Strings     0
  5101                           ;!    Constant    0
  5102                           ;!    Data        0
  5103                           ;!    BSS         221
  5104                           ;!    Persistent  4
  5105                           ;!    Stack       0
  5106                           ;!
  5107                           ;!Auto Spaces:
  5108                           ;!    Space          Size  Autos    Used
  5109                           ;!    COMRAM          127     71      78
  5110                           ;!    BANK0           128     40      96
  5111                           ;!    BANK1           256     75     237
  5112                           ;!    BANK2           256      0       0
  5113                           ;!    BANK3           244      0       0
  5114                           
  5115                           ;!
  5116                           ;!Pointer List with Targets:
  5117                           ;!
  5118                           ;!    ?_ReadTimer1	unsigned int  size(2) Largest target is 2
  5119                           ;!		 -> WriteTimer1@timer(COMRAM[2]), ReadTimer1@timer(COMRAM[2]), 
  5120                           ;!
  5121                           ;!    ?_ReadADC	int  size(2) Largest target is 0
  5122                           ;!
  5123                           ;!    ?_memcpy	PTR void  size(2) Largest target is 54
  5124                           ;!		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BAN
                                 K1[54]), ToMainHigh_MQ(BANK1[54]), 
  5125                           ;!		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 
  5126                           ;!
  5127                           ;!    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
  5128                           ;!		 -> main@uthread_data(BANK1[2]), 
  5129                           ;!
  5130                           ;!    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
  5131                           ;!		 -> main@t0thread_data(BANK1[2]), 
  5132                           ;!
  5133                           ;!    ?_in_high_int	int  size(2) Largest target is 0
  5134                           ;!
  5135                           ;!    memcpy@d1	PTR void  size(2) Largest target is 54
  5136                           ;!		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BAN
                                 K1[54]), ToMainHigh_MQ(BANK1[54]), 
  5137                           ;!		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 
  5138                           ;!
  5139                           ;!    memcpy@d	PTR unsigned char  size(2) Largest target is 54
  5140                           ;!		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BAN
                                 K1[54]), ToMainHigh_MQ(BANK1[54]), 
  5141                           ;!		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 
  5142                           ;!
  5143                           ;!    memcpy@s1	PTR const void  size(2) Largest target is 54
  5144                           ;!		 -> adc_int_handler@value(COMRAM[2]), timer1_int_handler@result(COMRAM[2]), timer0_i
                                 nt_handler@val(BANK0[2]), NULL(NULL[0]), 
  5145                           ;!		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(
                                 BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
  5146                           ;!		 -> ToMainLow_MQ(BANK0[54]), main@ic(BANK1[28]), main@uc(BANK1[5]), 
  5147                           ;!
  5148                           ;!    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
  5149                           ;!		 -> adc_int_handler@value(COMRAM[2]), timer1_int_handler@result(COMRAM[2]), timer0_i
                                 nt_handler@val(BANK0[2]), NULL(NULL[0]), 
  5150                           ;!		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(
                                 BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
  5151                           ;!		 -> ToMainLow_MQ(BANK0[54]), main@ic(BANK1[28]), main@uc(BANK1[5]), 
  5152                           ;!
  5153                           ;!    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
  5154                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5155                           ;!
  5156                           ;!    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
  5157                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5158                           ;!
  5159                           ;!    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
  5160                           ;!		 -> main@t1thread_data(BANK1[2]), 
  5161                           ;!
  5162                           ;!    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target 
                                 is 2
  5163                           ;!		 -> main@t1thread_data(BANK1[2]), 
  5164                           ;!
  5165                           ;!    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
  5166                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5167                           ;!
  5168                           ;!    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
  5169                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5170                           ;!
  5171                           ;!    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
  5172                           ;!		 -> main@uc(BANK1[5]), 
  5173                           ;!
  5174                           ;!    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
  5175                           ;!		 -> NULL(NULL[0]), main@uc(BANK1[5]), 
  5176                           ;!
  5177                           ;!    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
  5178                           ;!		 -> main@ic(BANK1[28]), 
  5179                           ;!
  5180                           ;!    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
  5181                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5182                           ;!
  5183                           ;!    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
  5184                           ;!		 -> NULL(NULL[0]), main@ic(BANK1[28]), 
  5185                           ;!
  5186                           ;!    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
  5187                           ;!		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
  5188                           ;!
  5189                           ;!    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
  5190                           ;!		 -> timer0_int_handler@val(BANK0[2]), 
  5191                           ;!
  5192                           ;!    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1023
  5193                           ;!		 -> RAM(DATA[1023]), 
  5194                           ;!
  5195                           ;!    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
  5196                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5197                           ;!
  5198                           ;!    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
  5199                           ;!		 -> main@msgtype(BANK1[1]), 
  5200                           ;!
  5201                           ;!    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
  5202                           ;!		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0
                                 [3]), main@ic(BANK1[28]), 
  5203                           ;!
  5204                           ;!    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
  5205                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5206                           ;!
  5207                           ;!    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
  5208                           ;!		 -> main@msgtype(BANK1[1]), 
  5209                           ;!
  5210                           ;!    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
  5211                           ;!		 -> adc_int_handler@value(COMRAM[2]), timer1_int_handler@result(COMRAM[2]), NULL(NUL
                                 L[0]), main@uc(BANK1[5]), 
  5212                           ;!
  5213                           ;!    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1023
  5214                           ;!		 -> RAM(DATA[1023]), main@msgtype(BANK1[1]), 
  5215                           ;!
  5216                           ;!    recv_msg@data	PTR void  size(2) Largest target is 11
  5217                           ;!		 -> timer0_int_handler@val(BANK0[2]), main@msgbuffer(BANK1[11]), 
  5218                           ;!
  5219                           ;!    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
  5220                           ;!		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK0[54]), 
  5221                           ;!
  5222                           ;!    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
  5223                           ;!		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK0[54]), 
  5224                           ;!
  5225                           ;!    sp__memcpy	PTR void  size(2) Largest target is 54
  5226                           ;!		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BAN
                                 K1[54]), ToMainHigh_MQ(BANK1[54]), 
  5227                           ;!		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 
  5228                           ;!
  5229                           ;!    send_msg@data	PTR void  size(2) Largest target is 28
  5230                           ;!		 -> adc_int_handler@value(COMRAM[2]), timer1_int_handler@result(COMRAM[2]), timer0_i
                                 nt_handler@val(BANK0[2]), NULL(NULL[0]), 
  5231                           ;!		 -> i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[28]), main@uc(BANK1[5]), 
  5232                           ;!
  5233                           ;!    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
  5234                           ;!		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK0[54]), 
  5235                           ;!
  5236                           ;!    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
  5237                           ;!		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK0[54]), 
  5238                           ;!
  5239                           ;!    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
  5240                           ;!		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK0[54]), 
  5241                           ;!
  5242                           
  5243                           
  5244                           ;!
  5245                           ;!Critical Paths under _main in COMRAM
  5246                           ;!
  5247                           ;!    None.
  5248                           ;!
  5249                           ;!Critical Paths under _InterruptHandlerHigh in COMRAM
  5250                           ;!
  5251                           ;!    _SleepIfOkay->i2_in_low_int
  5252                           ;!    _ToMainHigh_sendmsg->i2_send_msg
  5253                           ;!    _FromMainHigh_recvmsg->i2_recv_msg
  5254                           ;!    i2_in_low_int->i2_in_high_int
  5255                           ;!    i2_send_msg->i2_memcpy
  5256                           ;!    i2_recv_msg->i2_memcpy
  5257                           ;!    _InterruptHandlerLow->_timer1_int_handler
  5258                           ;!    _timer1_int_handler->_ToMainLow_sendmsg
  5259                           ;!    _adc_int_handler->_ToMainLow_sendmsg
  5260                           ;!    _uart_recv_int_handler->_ToMainLow_sendmsg
  5261                           ;!    _ToMainLow_sendmsg->_send_msg
  5262                           ;!    _send_msg->i1_memcpy
  5263                           ;!
  5264                           ;!Critical Paths under _main in BANK0
  5265                           ;!
  5266                           ;!    _main->_timer0_lthread
  5267                           ;!    _main->_timer1_lthread
  5268                           ;!    _main->_uart_lthread
  5269                           ;!    _init_timer1_lthread->_OpenADC
  5270                           ;!    _init_queues->_init_queue
  5271                           ;!    _block_on_To_msgqueues->_in_main
  5272                           ;!    _in_main->_in_low_int
  5273                           ;!    _in_low_int->_in_high_int
  5274                           ;!    _ToMainHigh_recvmsg->_recv_msg
  5275                           ;!    _ToMainLow_recvmsg->_recv_msg
  5276                           ;!    _recv_msg->_memcpy
  5277                           ;!
  5278                           ;!Critical Paths under _InterruptHandlerHigh in BANK0
  5279                           ;!
  5280                           ;!    _InterruptHandlerHigh->_timer0_int_handler
  5281                           ;!    _i2c_int_handler->_ToMainHigh_sendmsg
  5282                           ;!    _timer0_int_handler->_FromMainHigh_recvmsg
  5283                           ;!    _FromMainHigh_recvmsg->i2_recv_msg
  5284                           ;!
  5285                           ;!Critical Paths under _main in BANK1
  5286                           ;!
  5287                           ;!    _main->_ToMainHigh_recvmsg
  5288                           ;!    _main->_ToMainLow_recvmsg
  5289                           ;!    _ToMainHigh_recvmsg->_recv_msg
  5290                           ;!    _ToMainLow_recvmsg->_recv_msg
  5291                           ;!    _recv_msg->_memcpy
  5292                           ;!
  5293                           ;!Critical Paths under _InterruptHandlerHigh in BANK1
  5294                           ;!
  5295                           ;!    None.
  5296                           ;!
  5297                           ;!Critical Paths under _main in BANK2
  5298                           ;!
  5299                           ;!    None.
  5300                           ;!
  5301                           ;!Critical Paths under _InterruptHandlerHigh in BANK2
  5302                           ;!
  5303                           ;!    None.
  5304                           ;!
  5305                           ;!Critical Paths under _main in BANK3
  5306                           ;!
  5307                           ;!    None.
  5308                           ;!
  5309                           ;!Critical Paths under _InterruptHandlerHigh in BANK3
  5310                           ;!
  5311                           ;!    None.
  5312                           
  5313 ;;
  5314 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  5315 ;;
  5316                           
  5317                           ;!
  5318                           ;!Call Graph Tables:
  5319                           ;!
  5320                           ;! ---------------------------------------------------------------------------------
  5321                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  5322                           ;! ---------------------------------------------------------------------------------
  5323                           ;! (0) _main                                                56    56      0    4066
  5324                           ;!                                             21 BANK1     54    54      0
  5325                           ;!                     _init_uart_recv
  5326                           ;!                           _init_i2c
  5327                           ;!                _init_timer1_lthread
  5328                           ;!                        _init_queues
  5329                           ;!                         _OpenTimer1
  5330                           ;!                  _enable_interrupts
  5331                           ;!                _i2c_configure_slave
  5332                           ;!                          _OpenUSART
  5333                           ;!              _block_on_To_msgqueues
  5334                           ;!                 _ToMainHigh_recvmsg
  5335                           ;!                     _timer0_lthread
  5336                           ;!              _start_i2c_slave_reply
  5337                           ;!                  _ToMainLow_recvmsg
  5338                           ;!                     _timer1_lthread
  5339                           ;!                       _uart_lthread
  5340                           ;! ---------------------------------------------------------------------------------
  5341                           ;! (1) _enable_interrupts                                    0     0      0       0
  5342                           ;! ---------------------------------------------------------------------------------
  5343                           ;! (1) _init_uart_recv                                       2     0      2      22
  5344                           ;!                                             32 BANK0      2     0      2
  5345                           ;! ---------------------------------------------------------------------------------
  5346                           ;! (1) _init_i2c                                             2     0      2      22
  5347                           ;!                                             32 BANK0      2     0      2
  5348                           ;! ---------------------------------------------------------------------------------
  5349                           ;! (1) _init_timer1_lthread                                  5     3      2     207
  5350                           ;!                                             37 BANK0      2     0      2
  5351                           ;!                                              0 BANK1      3     3      0
  5352                           ;!                            _OpenADC
  5353                           ;!                         _SetChanADC
  5354                           ;! ---------------------------------------------------------------------------------
  5355                           ;! (1) _init_queues                                          1     1      0     134
  5356                           ;!                                             36 BANK0      1     1      0
  5357                           ;!                         _init_queue
  5358                           ;! ---------------------------------------------------------------------------------
  5359                           ;! (1) _OpenTimer1                                           1     0      1      66
  5360                           ;!                                             32 BANK0      1     0      1
  5361                           ;! ---------------------------------------------------------------------------------
  5362                           ;! (1) _i2c_configure_slave                                  1     0      1      22
  5363                           ;!                                             32 BANK0      1     0      1
  5364                           ;! ---------------------------------------------------------------------------------
  5365                           ;! (1) _OpenUSART                                            3     0      3     220
  5366                           ;!                                             32 BANK0      3     0      3
  5367                           ;! ---------------------------------------------------------------------------------
  5368                           ;! (1) _block_on_To_msgqueues                                1     1      0      66
  5369                           ;!                                             38 BANK0      1     1      0
  5370                           ;!                            _in_main
  5371                           ;!                          _check_msg
  5372                           ;!                        _Delay1KTCYx
  5373                           ;! ---------------------------------------------------------------------------------
  5374                           ;! (2) _in_main                                              2     0      2       0
  5375                           ;!                                             36 BANK0      2     0      2
  5376                           ;!                         _in_low_int
  5377                           ;!                        _in_high_int
  5378                           ;! ---------------------------------------------------------------------------------
  5379                           ;! (3) _in_low_int                                           2     0      2       0
  5380                           ;!                                             34 BANK0      2     0      2
  5381                           ;!                        _in_high_int
  5382                           ;! ---------------------------------------------------------------------------------
  5383                           ;! (3) _in_high_int                                          2     0      2       0
  5384                           ;!                                             32 BANK0      2     0      2
  5385                           ;! ---------------------------------------------------------------------------------
  5386                           ;! (1) _ToMainHigh_recvmsg                                   5     0      5     772
  5387                           ;!                                             16 BANK1      5     0      5
  5388                           ;!                           _recv_msg
  5389                           ;! ---------------------------------------------------------------------------------
  5390                           ;! (1) _timer0_lthread                                      10     2      8      34
  5391                           ;!                                             32 BANK0      8     0      8
  5392                           ;!                                              0 BANK1      2     2      0
  5393                           ;! ---------------------------------------------------------------------------------
  5394                           ;! (1) _start_i2c_slave_reply                                5     2      3      66
  5395                           ;!                                             32 BANK0      5     2      3
  5396                           ;! ---------------------------------------------------------------------------------
  5397                           ;! (1) _ToMainLow_recvmsg                                    5     0      5     772
  5398                           ;!                                             16 BANK1      5     0      5
  5399                           ;!                           _recv_msg
  5400                           ;! ---------------------------------------------------------------------------------
  5401                           ;! (1) _timer1_lthread                                      10     2      8      62
  5402                           ;!                                             32 BANK0      8     0      8
  5403                           ;!                                              0 BANK1      2     2      0
  5404                           ;!                         _ConvertADC
  5405                           ;! ---------------------------------------------------------------------------------
  5406                           ;! (1) _uart_lthread                                         8     0      8      88
  5407                           ;!                                             32 BANK0      8     0      8
  5408                           ;! ---------------------------------------------------------------------------------
  5409                           ;! (2) _init_queue                                           4     2      2     134
  5410                           ;!                                             32 BANK0      4     2      2
  5411                           ;! ---------------------------------------------------------------------------------
  5412                           ;! (2) _recv_msg                                            14     7      7     679
  5413                           ;!                                             38 BANK0      2     2      0
  5414                           ;!                                              4 BANK1     12     5      7
  5415                           ;!                             _memcpy
  5416                           ;! ---------------------------------------------------------------------------------
  5417                           ;! (3) _memcpy                                              10     4      6     174
  5418                           ;!                                             32 BANK0      6     0      6
  5419                           ;!                                              0 BANK1      4     4      0
  5420                           ;! ---------------------------------------------------------------------------------
  5421                           ;! (2) _check_msg                                            3     1      2      44
  5422                           ;!                                             32 BANK0      3     1      2
  5423                           ;! ---------------------------------------------------------------------------------
  5424                           ;! (2) _Delay1KTCYx                                          1     0      1      22
  5425                           ;!                                             32 BANK0      1     0      1
  5426                           ;! ---------------------------------------------------------------------------------
  5427                           ;! (2) _OpenADC                                              5     2      3     154
  5428                           ;!                                             32 BANK0      5     2      3
  5429                           ;! ---------------------------------------------------------------------------------
  5430                           ;! (2) _SetChanADC                                           2     1      1      22
  5431                           ;!                                             32 BANK0      2     1      1
  5432                           ;! ---------------------------------------------------------------------------------
  5433                           ;! (2) _ConvertADC                                           0     0      0       0
  5434                           ;! ---------------------------------------------------------------------------------
  5435                           ;! Estimated maximum stack depth 3
  5436                           ;! ---------------------------------------------------------------------------------
  5437                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  5438                           ;! ---------------------------------------------------------------------------------
  5439                           ;! (5) _InterruptHandlerLow                                 17    17      0    2559
  5440                           ;!                                             32 COMRAM    17    17      0
  5441                           ;!                 _timer1_int_handler
  5442                           ;!                    _adc_int_handler
  5443                           ;!              _uart_recv_int_handler
  5444                           ;! ---------------------------------------------------------------------------------
  5445                           ;! (6) _timer1_int_handler                                   6     6      0     920
  5446                           ;!                                             26 COMRAM     6     6      0
  5447                           ;!                         _ReadTimer1
  5448                           ;!                  _ToMainLow_sendmsg
  5449                           ;!                        _WriteTimer1
  5450                           ;! ---------------------------------------------------------------------------------
  5451                           ;! (6) _adc_int_handler                                      4     4      0     822
  5452                           ;!                                             26 COMRAM     4     4      0
  5453                           ;!                            _ReadADC
  5454                           ;!                  _ToMainLow_sendmsg
  5455                           ;! ---------------------------------------------------------------------------------
  5456                           ;! (6) _uart_recv_int_handler                                2     2      0     817
  5457                           ;!                                             26 COMRAM     2     2      0
  5458                           ;!                          _ReadUSART
  5459                           ;!                  _ToMainLow_sendmsg
  5460                           ;! ---------------------------------------------------------------------------------
  5461                           ;! (7) _ToMainLow_sendmsg                                    4     0      4     794
  5462                           ;!                                             22 COMRAM     4     0      4
  5463                           ;!                           _send_msg
  5464                           ;! ---------------------------------------------------------------------------------
  5465                           ;! (8) _send_msg                                            12     6      6     728
  5466                           ;!                                             10 COMRAM    12     6      6
  5467                           ;!                           i1_memcpy
  5468                           ;! ---------------------------------------------------------------------------------
  5469                           ;! (7) _ReadUSART                                            1     1      0      23
  5470                           ;!                                              0 COMRAM     1     1      0
  5471                           ;! ---------------------------------------------------------------------------------
  5472                           ;! (7) _ReadTimer1                                           4     2      2      30
  5473                           ;!                                              0 COMRAM     4     2      2
  5474                           ;! ---------------------------------------------------------------------------------
  5475                           ;! (7) _WriteTimer1                                          4     2      2      45
  5476                           ;!                                              0 COMRAM     4     2      2
  5477                           ;! ---------------------------------------------------------------------------------
  5478                           ;! (7) _ReadADC                                              2     0      2       0
  5479                           ;!                                              0 COMRAM     2     0      2
  5480                           ;! ---------------------------------------------------------------------------------
  5481                           ;! (9) i1_memcpy                                            10     4      6     395
  5482                           ;!                                              0 COMRAM    10     4      6
  5483                           ;! ---------------------------------------------------------------------------------
  5484                           ;! (10) _InterruptHandlerHigh                               14    14      0    6810
  5485                           ;!                                             18 BANK0     14    14      0
  5486                           ;!                    _i2c_int_handler
  5487                           ;!                 _timer0_int_handler
  5488                           ;!                        _SleepIfOkay
  5489                           ;! ---------------------------------------------------------------------------------
  5490                           ;! (11) _i2c_int_handler                                    11    11      0    2518
  5491                           ;!                                              4 BANK0     11    11      0
  5492                           ;!                       _handle_start
  5493                           ;!                 _ToMainHigh_sendmsg
  5494                           ;! ---------------------------------------------------------------------------------
  5495                           ;! (11) _timer0_int_handler                                  8     8      0    4146
  5496                           ;!                                             10 BANK0      8     8      0
  5497                           ;!                        _WriteTimer0
  5498                           ;!               _FromMainHigh_recvmsg
  5499                           ;!                 _ToMainHigh_sendmsg
  5500                           ;! ---------------------------------------------------------------------------------
  5501                           ;! (11) _SleepIfOkay                                         0     0      0     146
  5502                           ;!                       i2_in_low_int
  5503                           ;!                      i2_in_high_int
  5504                           ;!                        i2_check_msg
  5505                           ;!                   _enter_sleep_mode
  5506                           ;! ---------------------------------------------------------------------------------
  5507                           ;! (12) _ToMainHigh_sendmsg                                  4     0      4    1912
  5508                           ;!                                              0 BANK0      4     0      4
  5509                           ;!                         i2_send_msg
  5510                           ;! ---------------------------------------------------------------------------------
  5511                           ;! (12) _FromMainHigh_recvmsg                                5     0      5    2000
  5512                           ;!                                              5 BANK0      5     0      5
  5513                           ;!                         i2_recv_msg
  5514                           ;! ---------------------------------------------------------------------------------
  5515                           ;! (12) _enter_sleep_mode                                    0     0      0       0
  5516                           ;! ---------------------------------------------------------------------------------
  5517                           ;! (12) _handle_start                                        1     0      1      22
  5518                           ;!                                             49 COMRAM     1     0      1
  5519                           ;! ---------------------------------------------------------------------------------
  5520                           ;! (12) _WriteTimer0                                         4     2      2      68
  5521                           ;!                                             49 COMRAM     4     2      2
  5522                           ;! ---------------------------------------------------------------------------------
  5523                           ;! (12) i2_in_low_int                                        2     0      2       0
  5524                           ;!                                             51 COMRAM     2     0      2
  5525                           ;!                      i2_in_high_int
  5526                           ;! ---------------------------------------------------------------------------------
  5527                           ;! (12) i2_in_high_int                                       2     0      2       0
  5528                           ;!                                             49 COMRAM     2     0      2
  5529                           ;! ---------------------------------------------------------------------------------
  5530                           ;! (13) i2_send_msg                                         12     6      6    1819
  5531                           ;!                                             59 COMRAM    12     6      6
  5532                           ;!                           i2_memcpy
  5533                           ;! ---------------------------------------------------------------------------------
  5534                           ;! (13) i2_recv_msg                                         14     7      7    1907
  5535                           ;!                                             59 COMRAM     9     2      7
  5536                           ;!                                              0 BANK0      5     5      0
  5537                           ;!                           i2_memcpy
  5538                           ;! ---------------------------------------------------------------------------------
  5539                           ;! (12) i2_check_msg                                         3     1      2     146
  5540                           ;!                                             49 COMRAM     3     1      2
  5541                           ;! ---------------------------------------------------------------------------------
  5542                           ;! (14) i2_memcpy                                           10     4      6     484
  5543                           ;!                                             49 COMRAM    10     4      6
  5544                           ;! ---------------------------------------------------------------------------------
  5545                           ;! Estimated maximum stack depth 14
  5546                           ;! ---------------------------------------------------------------------------------
  5547                           ;!
  5548                           ;! Call Graph Graphs:
  5549                           ;!
  5550                           ;! _main (ROOT)
  5551                           ;!   _init_uart_recv
  5552                           ;!   _init_i2c
  5553                           ;!   _init_timer1_lthread
  5554                           ;!     _OpenADC
  5555                           ;!     _SetChanADC
  5556                           ;!   _init_queues
  5557                           ;!     _init_queue
  5558                           ;!   _OpenTimer1
  5559                           ;!   _enable_interrupts
  5560                           ;!   _i2c_configure_slave
  5561                           ;!   _OpenUSART
  5562                           ;!   _block_on_To_msgqueues
  5563                           ;!     _in_main
  5564                           ;!       _in_low_int
  5565                           ;!         _in_high_int
  5566                           ;!       _in_high_int
  5567                           ;!     _check_msg
  5568                           ;!     _Delay1KTCYx
  5569                           ;!   _ToMainHigh_recvmsg
  5570                           ;!     _recv_msg
  5571                           ;!       _memcpy
  5572                           ;!   _timer0_lthread
  5573                           ;!   _start_i2c_slave_reply
  5574                           ;!   _ToMainLow_recvmsg
  5575                           ;!     _recv_msg
  5576                           ;!       _memcpy
  5577                           ;!   _timer1_lthread
  5578                           ;!     _ConvertADC
  5579                           ;!   _uart_lthread
  5580                           ;!
  5581                           ;! _InterruptHandlerLow (ROOT)
  5582                           ;!   _timer1_int_handler
  5583                           ;!     _ReadTimer1
  5584                           ;!     _ToMainLow_sendmsg
  5585                           ;!       _send_msg
  5586                           ;!         i1_memcpy
  5587                           ;!     _WriteTimer1
  5588                           ;!   _adc_int_handler
  5589                           ;!     _ReadADC
  5590                           ;!     _ToMainLow_sendmsg
  5591                           ;!       _send_msg
  5592                           ;!         i1_memcpy
  5593                           ;!   _uart_recv_int_handler
  5594                           ;!     _ReadUSART
  5595                           ;!     _ToMainLow_sendmsg
  5596                           ;!       _send_msg
  5597                           ;!         i1_memcpy
  5598                           ;!
  5599                           
  5600                           ;! Address spaces:
  5601                           
  5602                           ;!Name               Size   Autos  Total    Cost      Usage
  5603                           ;!BIGRAM             3F3      0       0      12        0.0%
  5604                           ;!BITBANK2           100      0       0       7        0.0%
  5605                           ;!BANK2              100      0       0       8        0.0%
  5606                           ;!BITBANK1           100      0       0       5        0.0%
  5607                           ;!BANK1              100     4B      ED       6       92.6%
  5608                           ;!BITBANK3            F4      0       0       9        0.0%
  5609                           ;!BANK3               F4      0       0      10        0.0%
  5610                           ;!BITBANK0            80      0       0       3        0.0%
  5611                           ;!BANK0               80     28      60       4       75.0%
  5612                           ;!BITCOMRAM           7F      0       0       0        0.0%
  5613                           ;!COMRAM              7F     47      4E       1       61.4%
  5614                           ;!BITSFR               0      0       0      40        0.0%
  5615                           ;!SFR                  0      0       0      40        0.0%
  5616                           ;!STACK                0      0      22       2        0.0%
  5617                           ;!NULL                 0      0       0       0        0.0%
  5618                           ;!ABS                  0      0     19B      11        0.0%
  5619                           ;!DATA                 0      0     1BD      13        0.0%
  5620                           ;!CODE                 0      0       0       0        0.0%
  5621                           
  5622                           	global	_main
  5623                           
  5624 ;; *************** function _main *****************
  5625 ;; Defined at:
  5626 ;;		line 79 in file "../src/main.c"
  5627 ;; Parameters:    Size  Location     Type
  5628 ;;		None
  5629 ;; Auto vars:     Size  Location     Type
  5630 ;;  ic             28   47[BANK1 ] struct __i2c_comm
  5631 ;;  msgbuffer      11   26[BANK1 ] unsigned char [11]
  5632 ;;  uc              5   40[BANK1 ] struct __uart_comm
  5633 ;;  t1thread_dat    2   38[BANK1 ] struct __timer1_thread_s
  5634 ;;  t0thread_dat    2   24[BANK1 ] struct __timer0_thread_s
  5635 ;;  uthread_data    2   22[BANK1 ] struct __uart_thread_str
  5636 ;;  length          1   46[BANK1 ] char 
  5637 ;;  msgtype         1   45[BANK1 ] unsigned char 
  5638 ;;  last_reg_rec    1   37[BANK1 ] unsigned char 
  5639 ;;  i               1    0        unsigned char 
  5640 ;;  c               1    0        unsigned char 
  5641 ;; Return value:  Size  Location     Type
  5642 ;;		None               void
  5643 ;; Registers used:
  5644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5650 ;;      Params:         0       0       0       0       0
  5651 ;;      Locals:         0       0      53       0       0
  5652 ;;      Temps:          0       0       1       0       0
  5653 ;;      Totals:         0       0      54       0       0
  5654 ;;Total ram usage:       54 bytes
  5655 ;; Hardware stack levels required when called:   14
  5656 ;; This function calls:
  5657 ;;		_init_uart_recv
  5658 ;;		_init_i2c
  5659 ;;		_init_timer1_lthread
  5660 ;;		_init_queues
  5661 ;;		_OpenTimer1
  5662 ;;		_enable_interrupts
  5663 ;;		_i2c_configure_slave
  5664 ;;		_OpenUSART
  5665 ;;		_block_on_To_msgqueues
  5666 ;;		_ToMainHigh_recvmsg
  5667 ;;		_timer0_lthread
  5668 ;;		_start_i2c_slave_reply
  5669 ;;		_ToMainLow_recvmsg
  5670 ;;		_timer1_lthread
  5671 ;;		_uart_lthread
  5672 ;; This function is called by:
  5673 ;;		Startup code after reset
  5674 ;; This function uses a non-reentrant model
  5675 ;;
  5676                           psect	text0,class=CODE,space=0,reloc=2
  5677                           global __ptext0
  5678  000898                     __ptext0:
  5679                           psect	text0
  5680                           	file	"../src/main.c"
  5681                           	line	79
  5682                           	global	__size_of_main
  5683  0000                     	__size_of_main	equ	__end_of_main-_main
  5684                           	
  5685  000898                     _main:; BSR set to: 0
  5686                           
  5687                           	opt	stack 16
  5688                           	line	97
  5689                           	
  5690  000898                     l18931:
  5691                           ;main.c: 80: char c;
  5692                           ;main.c: 81: signed char length;
  5693                           ;main.c: 82: unsigned char msgtype;
  5694                           ;main.c: 83: unsigned char last_reg_recvd;
  5695                           ;main.c: 84: uart_comm uc;
  5696                           ;main.c: 85: i2c_comm ic;
  5697                           ;main.c: 86: unsigned char msgbuffer[10 + 1];
  5698                           ;main.c: 87: unsigned char i;
  5699                           ;main.c: 88: uart_thread_struct uthread_data;
  5700                           ;main.c: 89: timer1_thread_struct t1thread_data;
  5701                           ;main.c: 90: timer0_thread_struct t0thread_data;
  5702                           ;main.c: 97: OSCCON = 0x82;
  5703  000898  0E82               	movlw	low(082h)
  5704  00089A  6ED3               	movwf	((c:4051)),c	;volatile
  5705                           	line	98
  5706                           	
  5707  00089C                     l18933:
  5708                           ;main.c: 98: OSCTUNEbits.PLLEN = 0;
  5709  00089C  9C9B               	bcf	((c:3995)),c,6	;volatile
  5710                           	line	102
  5711                           	
  5712  00089E                     l18935:
  5713                           ;main.c: 102: init_uart_recv(&uc);
  5714  00089E  0101               	movlb	1	; () banked
  5715  0008A0  0E01               	movlw	high(main@uc)
  5716  0008A2  0100               	movlb	0	; () banked
  5717  0008A4  0100               	movlb	0	; () banked
  5718  0008A6  6FD7               	movwf	((?_init_uart_recv+1))&0ffh
  5719  0008A8  0101               	movlb	1	; () banked
  5720  0008AA  0ECA               	movlw	low(main@uc)
  5721  0008AC  0100               	movlb	0	; () banked
  5722  0008AE  6FD6               	movwf	((?_init_uart_recv))&0ffh
  5723  0008B0  0100               	movlb	0	; () banked
  5724  0008B2  EC5F  F00E         	call	_init_uart_recv	;wreg free
  5725                           	line	105
  5726                           	
  5727  0008B6                     l18937:
  5728                           ;main.c: 105: init_i2c(&ic);
  5729  0008B6  0101               	movlb	1	; () banked
  5730  0008B8  0E01               	movlw	high(main@ic)
  5731  0008BA  0100               	movlb	0	; () banked
  5732  0008BC  0100               	movlb	0	; () banked
  5733  0008BE  6FD7               	movwf	((?_init_i2c+1))&0ffh
  5734  0008C0  0101               	movlb	1	; () banked
  5735  0008C2  0ED1               	movlw	low(main@ic)
  5736  0008C4  0100               	movlb	0	; () banked
  5737  0008C6  6FD6               	movwf	((?_init_i2c))&0ffh
  5738  0008C8  0100               	movlb	0	; () banked
  5739  0008CA  ECCA  F00B         	call	_init_i2c	;wreg free
  5740                           	line	108
  5741                           	
  5742  0008CE                     l18939:
  5743                           ;main.c: 108: init_timer1_lthread(&t1thread_data);
  5744  0008CE  0101               	movlb	1	; () banked
  5745  0008D0  0E01               	movlw	high(main@t1thread_data)
  5746  0008D2  0100               	movlb	0	; () banked
  5747  0008D4  0100               	movlb	0	; () banked
  5748  0008D6  6FDC               	movwf	((?_init_timer1_lthread+1))&0ffh
  5749  0008D8  0101               	movlb	1	; () banked
  5750  0008DA  0EC8               	movlw	low(main@t1thread_data)
  5751  0008DC  0100               	movlb	0	; () banked
  5752  0008DE  6FDB               	movwf	((?_init_timer1_lthread))&0ffh
  5753  0008E0  0100               	movlb	0	; () banked
  5754  0008E2  EC98  F00B         	call	_init_timer1_lthread	;wreg free
  5755                           	line	111
  5756                           	
  5757  0008E6                     l18941:
  5758                           ;main.c: 111: init_queues();
  5759  0008E6  EC61  F00B         	call	_init_queues	;wreg free
  5760                           	line	114
  5761                           	
  5762  0008EA                     l18943:
  5763                           ;main.c: 114: TRISB = 0x0;
  5764  0008EA  0E00               	movlw	low(0)
  5765  0008EC  6E93               	movwf	((c:3987)),c	;volatile
  5766                           	line	115
  5767                           	
  5768  0008EE                     l18945:
  5769                           ;main.c: 115: LATB = 0x0;
  5770  0008EE  0E00               	movlw	low(0)
  5771  0008F0  6E8A               	movwf	((c:3978)),c	;volatile
  5772                           	line	128
  5773                           	
  5774  0008F2                     l18947:
  5775                           ;main.c: 128: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
                                 & 0b11111111);
  5776  0008F2  0101               	movlb	1	; () banked
  5777  0008F4  6FB7               	movwf	(??_main+0+0)&0ffh
  5778  0008F6  0EF5               	movlw	low(0F5h)
  5779  0008F8  0100               	movlb	0	; () banked
  5780  0008FA  0100               	movlb	0	; () banked
  5781  0008FC  6FD6               	movwf	((?_OpenTimer1))&0ffh
  5782  0008FE  0101               	movlb	1	; () banked
  5783  000900  51B7               	movf	(??_main+0+0)&0ffh,w
  5784  000902  0100               	movlb	0	; () banked
  5785  000904  EC12  F00D         	call	_OpenTimer1	;wreg free
  5786                           	line	132
  5787                           	
  5788  000908                     l18949:
  5789                           ;main.c: 132: enable_interrupts();
  5790  000908  ECAD  F00E         	call	_enable_interrupts	;wreg free
  5791                           	line	137
  5792                           	
  5793  00090C                     l18951:
  5794                           ;main.c: 137: IPR1bits.TMR1IP = 0;
  5795  00090C  909F               	bcf	((c:3999)),c,0	;volatile
  5796                           	line	139
  5797                           	
  5798  00090E                     l18953:
  5799                           ;main.c: 139: IPR1bits.ADIP = 0;
  5800  00090E  9C9F               	bcf	((c:3999)),c,6	;volatile
  5801                           	line	141
  5802                           	
  5803  000910                     l18955:
  5804                           ;main.c: 141: IPR1bits.RCIP = 0;
  5805  000910  9A9F               	bcf	((c:3999)),c,5	;volatile
  5806                           	line	143
  5807                           	
  5808  000912                     l18957:
  5809                           ;main.c: 143: IPR1bits.SSPIP = 1;
  5810  000912  869F               	bsf	((c:3999)),c,3	;volatile
  5811                           	line	152
  5812                           	
  5813  000914                     l18959:
  5814                           ;main.c: 152: i2c_configure_slave(0x9E);
  5815  000914  0101               	movlb	1	; () banked
  5816  000916  6FB7               	movwf	(??_main+0+0)&0ffh
  5817  000918  0E9E               	movlw	low(09Eh)
  5818  00091A  0100               	movlb	0	; () banked
  5819  00091C  0100               	movlb	0	; () banked
  5820  00091E  6FD6               	movwf	((?_i2c_configure_slave))&0ffh
  5821  000920  0101               	movlb	1	; () banked
  5822  000922  51B7               	movf	(??_main+0+0)&0ffh,w
  5823  000924  0100               	movlb	0	; () banked
  5824  000926  EC1B  F00E         	call	_i2c_configure_slave	;wreg free
  5825                           	line	165
  5826                           	
  5827  00092A                     l18961:
  5828                           ;main.c: 165: PIE1bits.SSPIE = 1;
  5829  00092A  869D               	bsf	((c:3997)),c,3	;volatile
  5830                           	line	169
  5831                           	
  5832  00092C                     l18963:
  5833                           ;main.c: 168: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  5834                           ;main.c: 169: 0b11111111 & 0b11101111, 0x19);
  5835  00092C  0101               	movlb	1	; () banked
  5836  00092E  6FB7               	movwf	(??_main+0+0)&0ffh
  5837  000930  0E6C               	movlw	low(06Ch)
  5838  000932  0100               	movlb	0	; () banked
  5839  000934  0100               	movlb	0	; () banked
  5840  000936  6FD6               	movwf	((?_OpenUSART))&0ffh
  5841  000938  0101               	movlb	1	; () banked
  5842  00093A  51B7               	movf	(??_main+0+0)&0ffh,w
  5843  00093C  0E00               	movlw	high(019h)
  5844  00093E  0100               	movlb	0	; () banked
  5845  000940  0100               	movlb	0	; () banked
  5846  000942  6FD8               	movwf	(1+(?_OpenUSART+01h))&0ffh
  5847  000944  0E19               	movlw	low(019h)
  5848  000946  0100               	movlb	0	; () banked
  5849  000948  6FD7               	movwf	(0+(?_OpenUSART+01h))&0ffh
  5850  00094A  0100               	movlb	0	; () banked
  5851  00094C  EC50  F009         	call	_OpenUSART	;wreg free
  5852  000950  D000               	goto	l18965
  5853                           	line	189
  5854                           ;main.c: 189: while (1) {
  5855                           	
  5856  000952                     l3645:
  5857                           	line	193
  5858                           	
  5859  000952                     l18965:
  5860                           ;main.c: 193: block_on_To_msgqueues();
  5861  000952  EC2B  F008         	call	_block_on_To_msgqueues	;wreg free
  5862                           	line	200
  5863                           	
  5864  000956                     l18967:
  5865                           ;main.c: 200: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  5866  000956  0101               	movlb	1	; () banked
  5867  000958  6FB7               	movwf	(??_main+0+0)&0ffh
  5868  00095A  0E0A               	movlw	low(0Ah)
  5869  00095C  0101               	movlb	1	; () banked
  5870  00095E  0101               	movlb	1	; () banked
  5871  000960  6FB2               	movwf	((?_ToMainHigh_recvmsg))&0ffh
  5872  000962  0101               	movlb	1	; () banked
  5873  000964  51B7               	movf	(??_main+0+0)&0ffh,w
  5874  000966  0101               	movlb	1	; () banked
  5875  000968  0E01               	movlw	high(main@msgtype)
  5876  00096A  0101               	movlb	1	; () banked
  5877  00096C  0101               	movlb	1	; () banked
  5878  00096E  6FB4               	movwf	(1+(?_ToMainHigh_recvmsg+01h))&0ffh
  5879  000970  0101               	movlb	1	; () banked
  5880  000972  0ECF               	movlw	low(main@msgtype)
  5881  000974  0101               	movlb	1	; () banked
  5882  000976  6FB3               	movwf	(0+(?_ToMainHigh_recvmsg+01h))&0ffh
  5883  000978  0101               	movlb	1	; () banked
  5884  00097A  0E01               	movlw	high(main@msgbuffer)
  5885  00097C  0101               	movlb	1	; () banked
  5886  00097E  0101               	movlb	1	; () banked
  5887  000980  6FB6               	movwf	(1+(?_ToMainHigh_recvmsg+03h))&0ffh
  5888  000982  0101               	movlb	1	; () banked
  5889  000984  0EBC               	movlw	low(main@msgbuffer)
  5890  000986  0101               	movlb	1	; () banked
  5891  000988  6FB5               	movwf	(0+(?_ToMainHigh_recvmsg+03h))&0ffh
  5892  00098A  0101               	movlb	1	; () banked
  5893  00098C  EC88  F00D         	call	_ToMainHigh_recvmsg	;wreg free
  5894  000990  0101               	movlb	1	; () banked
  5895  000992  0101               	movlb	1	; () banked
  5896  000994  6FD0               	movwf	((main@length))&0ffh
  5897                           	line	201
  5898                           	
  5899  000996                     l18969:; BSR set to: 1
  5900                           
  5901                           ;main.c: 201: if (length < 0) {
  5902  000996  0101               	movlb	1	; () banked
  5903  000998  0101               	movlb	1	; () banked
  5904  00099A  AFD0               	btfss	((main@length))&0ffh,7
  5905  00099C  D001               	goto	u2121
  5906  00099E  D001               	goto	u2120
  5907  0009A0                     u2121:
  5908  0009A0  D08A               	goto	l18989
  5909  0009A2                     u2120:
  5910  0009A2  D09A               	goto	l18991
  5911                           	line	203
  5912                           	
  5913  0009A4                     l18971:; BSR set to: 1
  5914                           
  5915  0009A4  D099               	goto	l18991
  5916                           	line	205
  5917                           	
  5918  0009A6                     l3647:; BSR set to: 1
  5919                           
  5920                           	line	206
  5921                           ;main.c: 205: }
  5922                           ;main.c: 206: } else {
  5923  0009A6  D098               	goto	l18991
  5924                           	
  5925  0009A8                     l3646:; BSR set to: 1
  5926                           
  5927                           	line	207
  5928                           ;main.c: 207: switch (msgtype) {
  5929  0009A8  D086               	goto	l18989
  5930                           	line	208
  5931                           ;main.c: 208: case 10:
  5932                           	
  5933  0009AA                     l3650:; BSR set to: 1
  5934                           
  5935                           	line	210
  5936                           	
  5937  0009AA                     l18973:; BSR set to: 1
  5938                           
  5939                           ;main.c: 209: {
  5940                           ;main.c: 210: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  5941  0009AA  0101               	movlb	1	; () banked
  5942  0009AC  0E01               	movlw	high(main@t0thread_data)
  5943  0009AE  0100               	movlb	0	; () banked
  5944  0009B0  0100               	movlb	0	; () banked
  5945  0009B2  6FD7               	movwf	((?_timer0_lthread+1))&0ffh
  5946  0009B4  0101               	movlb	1	; () banked
  5947  0009B6  0EBA               	movlw	low(main@t0thread_data)
  5948  0009B8  0100               	movlb	0	; () banked
  5949  0009BA  6FD6               	movwf	((?_timer0_lthread))&0ffh
  5950  0009BC  0101               	movlb	1	; () banked
  5951  0009BE  0100               	movlb	0	; () banked
  5952  0009C0  C1CF  F0D8         	movff	(main@msgtype),0+(?_timer0_lthread+02h)
  5953  0009C4  0100               	movlb	0	; () banked
  5954  0009C6  0100               	movlb	0	; () banked
  5955  0009C8  6BD9               	clrf	(1+(?_timer0_lthread+02h))&0ffh
  5956  0009CA  0101               	movlb	1	; () banked
  5957  0009CC  0101               	movlb	1	; () banked
  5958  0009CE  51D0               	movf	((main@length))&0ffh,w
  5959  0009D0  0100               	movlb	0	; () banked
  5960  0009D2  0100               	movlb	0	; () banked
  5961  0009D4  6FDA               	movwf	(0+(?_timer0_lthread+04h))&0ffh
  5962  0009D6  0100               	movlb	0	; () banked
  5963  0009D8  6BDB               	clrf	(1+(?_timer0_lthread+04h))&0ffh
  5964  0009DA  0100               	movlb	0	; () banked
  5965  0009DC  BFDA               	btfsc	(0+(?_timer0_lthread+04h))&0ffh,7
  5966  0009DE  07DB               	decf	(1+(?_timer0_lthread+04h))&0ffh
  5967  0009E0  0101               	movlb	1	; () banked
  5968  0009E2  0E01               	movlw	high(main@msgbuffer)
  5969  0009E4  0100               	movlb	0	; () banked
  5970  0009E6  0100               	movlb	0	; () banked
  5971  0009E8  6FDD               	movwf	(1+(?_timer0_lthread+06h))&0ffh
  5972  0009EA  0101               	movlb	1	; () banked
  5973  0009EC  0EBC               	movlw	low(main@msgbuffer)
  5974  0009EE  0100               	movlb	0	; () banked
  5975  0009F0  6FDC               	movwf	(0+(?_timer0_lthread+06h))&0ffh
  5976  0009F2  0100               	movlb	0	; () banked
  5977  0009F4  ECA8  F00E         	call	_timer0_lthread	;wreg free
  5978                           	line	211
  5979                           ;main.c: 211: break;
  5980  0009F8  D06F               	goto	l18991
  5981                           	line	213
  5982                           ;main.c: 212: };
  5983                           ;main.c: 213: case 40:
  5984                           	
  5985  0009FA                     l3652:
  5986                           	line	215
  5987                           	
  5988  0009FA                     l3653:
  5989                           	line	219
  5990                           ;main.c: 215: case 41:
  5991                           ;main.c: 216: {
  5992                           ;main.c: 219: last_reg_recvd = msgbuffer[0];
  5993  0009FA  C1BC  F1C7         	movff	(main@msgbuffer),(main@last_reg_recvd)
  5994                           	line	220
  5995                           ;main.c: 220: break;
  5996  0009FE  D06C               	goto	l18991
  5997                           	line	222
  5998                           ;main.c: 221: };
  5999                           ;main.c: 222: case 42:
  6000                           	
  6001  000A00                     l3654:
  6002                           	line	231
  6003                           ;main.c: 223: {
  6004                           ;main.c: 231: switch (last_reg_recvd) {
  6005  000A00  D03C               	goto	l18983
  6006                           	line	232
  6007                           ;main.c: 232: case 0xaa:
  6008                           	
  6009  000A02                     l3656:
  6010                           	line	234
  6011                           	
  6012  000A02                     l18975:
  6013                           ;main.c: 233: {
  6014                           ;main.c: 234: length = 2;
  6015  000A02  0101               	movlb	1	; () banked
  6016  000A04  6FB7               	movwf	(??_main+0+0)&0ffh
  6017  000A06  0E02               	movlw	low(02h)
  6018  000A08  0101               	movlb	1	; () banked
  6019  000A0A  0101               	movlb	1	; () banked
  6020  000A0C  6FD0               	movwf	((main@length))&0ffh
  6021  000A0E  0101               	movlb	1	; () banked
  6022  000A10  51B7               	movf	(??_main+0+0)&0ffh,w
  6023                           	line	235
  6024                           ;main.c: 235: msgbuffer[0] = 0x55;
  6025  000A12  0101               	movlb	1	; () banked
  6026  000A14  6FB7               	movwf	(??_main+0+0)&0ffh
  6027  000A16  0E55               	movlw	low(055h)
  6028  000A18  0101               	movlb	1	; () banked
  6029  000A1A  0101               	movlb	1	; () banked
  6030  000A1C  6FBC               	movwf	((main@msgbuffer))&0ffh
  6031  000A1E  0101               	movlb	1	; () banked
  6032  000A20  51B7               	movf	(??_main+0+0)&0ffh,w
  6033                           	line	236
  6034                           ;main.c: 236: msgbuffer[1] = 0xAA;
  6035  000A22  0101               	movlb	1	; () banked
  6036  000A24  6FB7               	movwf	(??_main+0+0)&0ffh
  6037  000A26  0EAA               	movlw	low(0AAh)
  6038  000A28  0101               	movlb	1	; () banked
  6039  000A2A  0101               	movlb	1	; () banked
  6040  000A2C  6FBD               	movwf	(0+(main@msgbuffer+01h))&0ffh
  6041  000A2E  0101               	movlb	1	; () banked
  6042  000A30  51B7               	movf	(??_main+0+0)&0ffh,w
  6043                           	line	237
  6044                           ;main.c: 237: break;
  6045  000A32  D030               	goto	l18985
  6046                           	line	239
  6047                           ;main.c: 238: }
  6048                           ;main.c: 239: case 0xa8:
  6049                           	
  6050  000A34                     l3658:; BSR set to: 1
  6051                           
  6052                           	line	241
  6053                           	
  6054  000A34                     l18977:; BSR set to: 1
  6055                           
  6056                           ;main.c: 240: {
  6057                           ;main.c: 241: length = 1;
  6058  000A34  0101               	movlb	1	; () banked
  6059  000A36  6FB7               	movwf	(??_main+0+0)&0ffh
  6060  000A38  0E01               	movlw	low(01h)
  6061  000A3A  0101               	movlb	1	; () banked
  6062  000A3C  0101               	movlb	1	; () banked
  6063  000A3E  6FD0               	movwf	((main@length))&0ffh
  6064  000A40  0101               	movlb	1	; () banked
  6065  000A42  51B7               	movf	(??_main+0+0)&0ffh,w
  6066                           	line	242
  6067                           ;main.c: 242: msgbuffer[0] = 0x3A;
  6068  000A44  0101               	movlb	1	; () banked
  6069  000A46  6FB7               	movwf	(??_main+0+0)&0ffh
  6070  000A48  0E3A               	movlw	low(03Ah)
  6071  000A4A  0101               	movlb	1	; () banked
  6072  000A4C  0101               	movlb	1	; () banked
  6073  000A4E  6FBC               	movwf	((main@msgbuffer))&0ffh
  6074  000A50  0101               	movlb	1	; () banked
  6075  000A52  51B7               	movf	(??_main+0+0)&0ffh,w
  6076                           	line	243
  6077                           ;main.c: 243: break;
  6078  000A54  D01F               	goto	l18985
  6079                           	line	245
  6080                           ;main.c: 244: }
  6081                           ;main.c: 245: case 0xa9:
  6082                           	
  6083  000A56                     l3659:; BSR set to: 1
  6084                           
  6085                           	line	247
  6086                           	
  6087  000A56                     l18979:; BSR set to: 1
  6088                           
  6089                           ;main.c: 246: {
  6090                           ;main.c: 247: length = 1;
  6091  000A56  0101               	movlb	1	; () banked
  6092  000A58  6FB7               	movwf	(??_main+0+0)&0ffh
  6093  000A5A  0E01               	movlw	low(01h)
  6094  000A5C  0101               	movlb	1	; () banked
  6095  000A5E  0101               	movlb	1	; () banked
  6096  000A60  6FD0               	movwf	((main@length))&0ffh
  6097  000A62  0101               	movlb	1	; () banked
  6098  000A64  51B7               	movf	(??_main+0+0)&0ffh,w
  6099                           	line	248
  6100                           ;main.c: 248: msgbuffer[0] = 0xA3;
  6101  000A66  0101               	movlb	1	; () banked
  6102  000A68  6FB7               	movwf	(??_main+0+0)&0ffh
  6103  000A6A  0EA3               	movlw	low(0A3h)
  6104  000A6C  0101               	movlb	1	; () banked
  6105  000A6E  0101               	movlb	1	; () banked
  6106  000A70  6FBC               	movwf	((main@msgbuffer))&0ffh
  6107  000A72  0101               	movlb	1	; () banked
  6108  000A74  51B7               	movf	(??_main+0+0)&0ffh,w
  6109                           	line	249
  6110                           ;main.c: 249: break;
  6111  000A76  D00E               	goto	l18985
  6112                           	line	251
  6113                           	
  6114  000A78                     l18981:; BSR set to: 1
  6115                           
  6116                           ;main.c: 250: }
  6117                           ;main.c: 251: };
  6118  000A78  D00D               	goto	l18985
  6119                           	line	231
  6120                           	
  6121  000A7A                     l3655:; BSR set to: 1
  6122                           
  6123                           	
  6124  000A7A                     l18983:
  6125  000A7A  0101               	movlb	1	; () banked
  6126  000A7C  0101               	movlb	1	; () banked
  6127  000A7E  51C7               	movf	((main@last_reg_recvd))&0ffh,w
  6128                           	; Switch size 1, requested type "space"
  6129                           ; Number of cases is 3, Range of values is 168 to 170
  6130                           ; switch strategies available:
  6131                           ; Name         Instructions Cycles
  6132                           ; simple_byte           10     6 (average)
  6133                           ;	Chosen strategy is simple_byte
  6134                           
  6135  000A80  0AA8               	xorlw	168^0	; case 168
  6136  000A82  B4D8               	skipnz
  6137  000A84  D7D7               	goto	l18977
  6138  000A86  0A01               	xorlw	169^168	; case 169
  6139  000A88  B4D8               	skipnz
  6140  000A8A  D7E5               	goto	l18979
  6141  000A8C  0A03               	xorlw	170^169	; case 170
  6142  000A8E  B4D8               	skipnz
  6143  000A90  D7B8               	goto	l18975
  6144  000A92  D000               	goto	l18985
  6145                           
  6146                           	line	251
  6147                           	
  6148  000A94                     l3657:; BSR set to: 1
  6149                           
  6150                           	line	252
  6151                           	
  6152  000A94                     l18985:; BSR set to: 1
  6153                           
  6154                           ;main.c: 252: start_i2c_slave_reply(length, msgbuffer);
  6155  000A94  C1D0  F0D6         	movff	(main@length),(?_start_i2c_slave_reply)
  6156  000A98  0101               	movlb	1	; () banked
  6157  000A9A  0E01               	movlw	high(main@msgbuffer)
  6158  000A9C  0100               	movlb	0	; () banked
  6159  000A9E  0100               	movlb	0	; () banked
  6160  000AA0  6FD8               	movwf	(1+(?_start_i2c_slave_reply+01h))&0ffh
  6161  000AA2  0101               	movlb	1	; () banked
  6162  000AA4  0EBC               	movlw	low(main@msgbuffer)
  6163  000AA6  0100               	movlb	0	; () banked
  6164  000AA8  6FD7               	movwf	(0+(?_start_i2c_slave_reply+01h))&0ffh
  6165  000AAA  0100               	movlb	0	; () banked
  6166  000AAC  EC37  F007         	call	_start_i2c_slave_reply	;wreg free
  6167                           	line	253
  6168                           ;main.c: 253: break;
  6169  000AB0  D013               	goto	l18991
  6170                           	line	255
  6171                           ;main.c: 254: };
  6172                           ;main.c: 255: default:
  6173                           	
  6174  000AB2                     l3660:
  6175                           	line	258
  6176                           ;main.c: 256: {
  6177                           ;main.c: 258: break;
  6178  000AB2  D012               	goto	l18991
  6179                           	line	260
  6180                           	
  6181  000AB4                     l18987:
  6182                           ;main.c: 259: };
  6183                           ;main.c: 260: };
  6184  000AB4  D011               	goto	l18991
  6185                           	line	207
  6186                           	
  6187  000AB6                     l3649:
  6188                           	
  6189  000AB6                     l18989:
  6190  000AB6  0101               	movlb	1	; () banked
  6191  000AB8  0101               	movlb	1	; () banked
  6192  000ABA  51CF               	movf	((main@msgtype))&0ffh,w
  6193                           	; Switch size 1, requested type "space"
  6194                           ; Number of cases is 4, Range of values is 10 to 42
  6195                           ; switch strategies available:
  6196                           ; Name         Instructions Cycles
  6197                           ; simple_byte           13     7 (average)
  6198                           ;	Chosen strategy is simple_byte
  6199                           
  6200  000ABC  0A0A               	xorlw	10^0	; case 10
  6201  000ABE  B4D8               	skipnz
  6202  000AC0  D774               	goto	l18973
  6203  000AC2  0A22               	xorlw	40^10	; case 40
  6204  000AC4  B4D8               	skipnz
  6205  000AC6  D799               	goto	l3653
  6206  000AC8  0A01               	xorlw	41^40	; case 41
  6207  000ACA  B4D8               	skipnz
  6208  000ACC  D796               	goto	l3653
  6209  000ACE  0A03               	xorlw	42^41	; case 42
  6210  000AD0  B4D8               	skipnz
  6211  000AD2  D7D3               	goto	l18983
  6212  000AD4  D001               	goto	l18991
  6213                           
  6214                           	line	260
  6215                           	
  6216  000AD6                     l3651:; BSR set to: 1
  6217                           
  6218  000AD6  D000               	goto	l18991
  6219                           	line	261
  6220                           	
  6221  000AD8                     l3648:; BSR set to: 1
  6222                           
  6223                           	line	264
  6224                           	
  6225  000AD8                     l18991:
  6226                           ;main.c: 261: }
  6227                           ;main.c: 264: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  6228  000AD8  0101               	movlb	1	; () banked
  6229  000ADA  6FB7               	movwf	(??_main+0+0)&0ffh
  6230  000ADC  0E0A               	movlw	low(0Ah)
  6231  000ADE  0101               	movlb	1	; () banked
  6232  000AE0  0101               	movlb	1	; () banked
  6233  000AE2  6FB2               	movwf	((?_ToMainLow_recvmsg))&0ffh
  6234  000AE4  0101               	movlb	1	; () banked
  6235  000AE6  51B7               	movf	(??_main+0+0)&0ffh,w
  6236  000AE8  0101               	movlb	1	; () banked
  6237  000AEA  0E01               	movlw	high(main@msgtype)
  6238  000AEC  0101               	movlb	1	; () banked
  6239  000AEE  0101               	movlb	1	; () banked
  6240  000AF0  6FB4               	movwf	(1+(?_ToMainLow_recvmsg+01h))&0ffh
  6241  000AF2  0101               	movlb	1	; () banked
  6242  000AF4  0ECF               	movlw	low(main@msgtype)
  6243  000AF6  0101               	movlb	1	; () banked
  6244  000AF8  6FB3               	movwf	(0+(?_ToMainLow_recvmsg+01h))&0ffh
  6245  000AFA  0101               	movlb	1	; () banked
  6246  000AFC  0E01               	movlw	high(main@msgbuffer)
  6247  000AFE  0101               	movlb	1	; () banked
  6248  000B00  0101               	movlb	1	; () banked
  6249  000B02  6FB6               	movwf	(1+(?_ToMainLow_recvmsg+03h))&0ffh
  6250  000B04  0101               	movlb	1	; () banked
  6251  000B06  0EBC               	movlw	low(main@msgbuffer)
  6252  000B08  0101               	movlb	1	; () banked
  6253  000B0A  6FB5               	movwf	(0+(?_ToMainLow_recvmsg+03h))&0ffh
  6254  000B0C  0101               	movlb	1	; () banked
  6255  000B0E  ECA0  F00D         	call	_ToMainLow_recvmsg	;wreg free
  6256  000B12  0101               	movlb	1	; () banked
  6257  000B14  0101               	movlb	1	; () banked
  6258  000B16  6FD0               	movwf	((main@length))&0ffh
  6259                           	line	265
  6260                           	
  6261  000B18                     l18993:; BSR set to: 1
  6262                           
  6263                           ;main.c: 265: if (length < 0) {
  6264  000B18  0101               	movlb	1	; () banked
  6265  000B1A  0101               	movlb	1	; () banked
  6266  000B1C  AFD0               	btfss	((main@length))&0ffh,7
  6267  000B1E  D001               	goto	u2131
  6268  000B20  D001               	goto	u2130
  6269  000B22                     u2131:
  6270  000B22  D066               	goto	l19005
  6271  000B24                     u2130:
  6272  000B24  D716               	goto	l18965
  6273                           	line	267
  6274                           	
  6275  000B26                     l18995:; BSR set to: 1
  6276                           
  6277  000B26  D715               	goto	l18965
  6278                           	line	269
  6279                           	
  6280  000B28                     l3662:; BSR set to: 1
  6281                           
  6282                           	line	270
  6283                           ;main.c: 269: }
  6284                           ;main.c: 270: } else {
  6285  000B28  D714               	goto	l18965
  6286                           	
  6287  000B2A                     l3661:; BSR set to: 1
  6288                           
  6289                           	line	271
  6290                           ;main.c: 271: switch (msgtype) {
  6291  000B2A  D062               	goto	l19005
  6292                           	line	272
  6293                           ;main.c: 272: case 11:
  6294                           	
  6295  000B2C                     l3665:; BSR set to: 1
  6296                           
  6297                           	line	274
  6298                           	
  6299  000B2C                     l18997:; BSR set to: 1
  6300                           
  6301                           ;main.c: 273: {
  6302                           ;main.c: 274: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  6303  000B2C  0101               	movlb	1	; () banked
  6304  000B2E  0E01               	movlw	high(main@t1thread_data)
  6305  000B30  0100               	movlb	0	; () banked
  6306  000B32  0100               	movlb	0	; () banked
  6307  000B34  6FD7               	movwf	((?_timer1_lthread+1))&0ffh
  6308  000B36  0101               	movlb	1	; () banked
  6309  000B38  0EC8               	movlw	low(main@t1thread_data)
  6310  000B3A  0100               	movlb	0	; () banked
  6311  000B3C  6FD6               	movwf	((?_timer1_lthread))&0ffh
  6312  000B3E  0101               	movlb	1	; () banked
  6313  000B40  0100               	movlb	0	; () banked
  6314  000B42  C1CF  F0D8         	movff	(main@msgtype),0+(?_timer1_lthread+02h)
  6315  000B46  0100               	movlb	0	; () banked
  6316  000B48  0100               	movlb	0	; () banked
  6317  000B4A  6BD9               	clrf	(1+(?_timer1_lthread+02h))&0ffh
  6318  000B4C  0101               	movlb	1	; () banked
  6319  000B4E  0101               	movlb	1	; () banked
  6320  000B50  51D0               	movf	((main@length))&0ffh,w
  6321  000B52  0100               	movlb	0	; () banked
  6322  000B54  0100               	movlb	0	; () banked
  6323  000B56  6FDA               	movwf	(0+(?_timer1_lthread+04h))&0ffh
  6324  000B58  0100               	movlb	0	; () banked
  6325  000B5A  6BDB               	clrf	(1+(?_timer1_lthread+04h))&0ffh
  6326  000B5C  0100               	movlb	0	; () banked
  6327  000B5E  BFDA               	btfsc	(0+(?_timer1_lthread+04h))&0ffh,7
  6328  000B60  07DB               	decf	(1+(?_timer1_lthread+04h))&0ffh
  6329  000B62  0101               	movlb	1	; () banked
  6330  000B64  0E01               	movlw	high(main@msgbuffer)
  6331  000B66  0100               	movlb	0	; () banked
  6332  000B68  0100               	movlb	0	; () banked
  6333  000B6A  6FDD               	movwf	(1+(?_timer1_lthread+06h))&0ffh
  6334  000B6C  0101               	movlb	1	; () banked
  6335  000B6E  0EBC               	movlw	low(main@msgbuffer)
  6336  000B70  0100               	movlb	0	; () banked
  6337  000B72  6FDC               	movwf	(0+(?_timer1_lthread+06h))&0ffh
  6338  000B74  0100               	movlb	0	; () banked
  6339  000B76  ECF5  F00D         	call	_timer1_lthread	;wreg free
  6340                           	line	275
  6341                           ;main.c: 275: break;
  6342  000B7A  D6EB               	goto	l18965
  6343                           	line	277
  6344                           ;main.c: 276: };
  6345                           ;main.c: 277: case 40:
  6346                           	
  6347  000B7C                     l3667:
  6348                           	line	280
  6349                           	
  6350  000B7C                     l18999:
  6351                           ;main.c: 278: {
  6352                           ;main.c: 280: start_i2c_slave_reply(length, msgbuffer);
  6353  000B7C  C1D0  F0D6         	movff	(main@length),(?_start_i2c_slave_reply)
  6354  000B80  0101               	movlb	1	; () banked
  6355  000B82  0E01               	movlw	high(main@msgbuffer)
  6356  000B84  0100               	movlb	0	; () banked
  6357  000B86  0100               	movlb	0	; () banked
  6358  000B88  6FD8               	movwf	(1+(?_start_i2c_slave_reply+01h))&0ffh
  6359  000B8A  0101               	movlb	1	; () banked
  6360  000B8C  0EBC               	movlw	low(main@msgbuffer)
  6361  000B8E  0100               	movlb	0	; () banked
  6362  000B90  6FD7               	movwf	(0+(?_start_i2c_slave_reply+01h))&0ffh
  6363  000B92  0100               	movlb	0	; () banked
  6364  000B94  EC37  F007         	call	_start_i2c_slave_reply	;wreg free
  6365  000B98  D001               	goto	l19001
  6366                           	line	282
  6367                           ;main.c: 281: };
  6368                           ;main.c: 282: case 30:
  6369                           	
  6370  000B9A                     l3668:
  6371  000B9A  D000               	goto	l19001
  6372                           	line	283
  6373                           	
  6374  000B9C                     l3669:
  6375                           	line	285
  6376                           	
  6377  000B9C                     l19001:
  6378                           ;main.c: 283: case 31:
  6379                           ;main.c: 284: {
  6380                           ;main.c: 285: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  6381  000B9C  0101               	movlb	1	; () banked
  6382  000B9E  0E01               	movlw	high(main@uthread_data)
  6383  000BA0  0100               	movlb	0	; () banked
  6384  000BA2  0100               	movlb	0	; () banked
  6385  000BA4  6FD7               	movwf	((?_uart_lthread+1))&0ffh
  6386  000BA6  0101               	movlb	1	; () banked
  6387  000BA8  0EB8               	movlw	low(main@uthread_data)
  6388  000BAA  0100               	movlb	0	; () banked
  6389  000BAC  6FD6               	movwf	((?_uart_lthread))&0ffh
  6390  000BAE  0101               	movlb	1	; () banked
  6391  000BB0  0100               	movlb	0	; () banked
  6392  000BB2  C1CF  F0D8         	movff	(main@msgtype),0+(?_uart_lthread+02h)
  6393  000BB6  0100               	movlb	0	; () banked
  6394  000BB8  0100               	movlb	0	; () banked
  6395  000BBA  6BD9               	clrf	(1+(?_uart_lthread+02h))&0ffh
  6396  000BBC  0101               	movlb	1	; () banked
  6397  000BBE  0101               	movlb	1	; () banked
  6398  000BC0  51D0               	movf	((main@length))&0ffh,w
  6399  000BC2  0100               	movlb	0	; () banked
  6400  000BC4  0100               	movlb	0	; () banked
  6401  000BC6  6FDA               	movwf	(0+(?_uart_lthread+04h))&0ffh
  6402  000BC8  0100               	movlb	0	; () banked
  6403  000BCA  6BDB               	clrf	(1+(?_uart_lthread+04h))&0ffh
  6404  000BCC  0100               	movlb	0	; () banked
  6405  000BCE  BFDA               	btfsc	(0+(?_uart_lthread+04h))&0ffh,7
  6406  000BD0  07DB               	decf	(1+(?_uart_lthread+04h))&0ffh
  6407  000BD2  0101               	movlb	1	; () banked
  6408  000BD4  0E01               	movlw	high(main@msgbuffer)
  6409  000BD6  0100               	movlb	0	; () banked
  6410  000BD8  0100               	movlb	0	; () banked
  6411  000BDA  6FDD               	movwf	(1+(?_uart_lthread+06h))&0ffh
  6412  000BDC  0101               	movlb	1	; () banked
  6413  000BDE  0EBC               	movlw	low(main@msgbuffer)
  6414  000BE0  0100               	movlb	0	; () banked
  6415  000BE2  6FDC               	movwf	(0+(?_uart_lthread+06h))&0ffh
  6416  000BE4  0100               	movlb	0	; () banked
  6417  000BE6  EC81  F00C         	call	_uart_lthread	;wreg free
  6418                           	line	286
  6419                           ;main.c: 286: break;
  6420  000BEA  D6B3               	goto	l18965
  6421                           	line	288
  6422                           ;main.c: 287: };
  6423                           ;main.c: 288: default:
  6424                           	
  6425  000BEC                     l3670:
  6426                           	line	291
  6427                           ;main.c: 289: {
  6428                           ;main.c: 291: break;
  6429  000BEC  D6B2               	goto	l18965
  6430                           	line	293
  6431                           	
  6432  000BEE                     l19003:
  6433                           ;main.c: 292: };
  6434                           ;main.c: 293: };
  6435  000BEE  D6B1               	goto	l18965
  6436                           	line	271
  6437                           	
  6438  000BF0                     l3664:
  6439                           	
  6440  000BF0                     l19005:
  6441  000BF0  0101               	movlb	1	; () banked
  6442  000BF2  0101               	movlb	1	; () banked
  6443  000BF4  51CF               	movf	((main@msgtype))&0ffh,w
  6444                           	; Switch size 1, requested type "space"
  6445                           ; Number of cases is 4, Range of values is 11 to 40
  6446                           ; switch strategies available:
  6447                           ; Name         Instructions Cycles
  6448                           ; simple_byte           13     7 (average)
  6449                           ;	Chosen strategy is simple_byte
  6450                           
  6451  000BF6  0A0B               	xorlw	11^0	; case 11
  6452  000BF8  B4D8               	skipnz
  6453  000BFA  D798               	goto	l18997
  6454  000BFC  0A15               	xorlw	30^11	; case 30
  6455  000BFE  B4D8               	skipnz
  6456  000C00  D7CD               	goto	l19001
  6457  000C02  0A01               	xorlw	31^30	; case 31
  6458  000C04  B4D8               	skipnz
  6459  000C06  D7CA               	goto	l19001
  6460  000C08  0A37               	xorlw	40^31	; case 40
  6461  000C0A  B4D8               	skipnz
  6462  000C0C  D7B7               	goto	l18999
  6463  000C0E  D6A1               	goto	l18965
  6464                           
  6465                           	line	293
  6466                           	
  6467  000C10                     l3666:; BSR set to: 1
  6468                           
  6469  000C10  D6A0               	goto	l18965
  6470                           	line	294
  6471                           	
  6472  000C12                     l3663:; BSR set to: 1
  6473                           
  6474  000C12  D69F               	goto	l18965
  6475                           	line	295
  6476                           	
  6477  000C14                     l3671:; BSR set to: 1
  6478                           
  6479                           	line	189
  6480  000C14  D69E               	goto	l18965
  6481                           	
  6482  000C16                     l3672:; BSR set to: 1
  6483                           
  6484                           	line	297
  6485                           	
  6486  000C16                     l3673:; BSR set to: 1
  6487                           
  6488                           	global	start
  6489  000C16  EF69  F000         	goto	start
  6490                           	opt stack 0
  6491                           GLOBAL	__end_of_main
  6492  000C1A                     	__end_of_main:
  6493                           	signat	_main,88
  6494                           	global	_enable_interrupts
  6495                           
  6496 ;; *************** function _enable_interrupts *****************
  6497 ;; Defined at:
  6498 ;;		line 14 in file "../src/interrupts.c"
  6499 ;; Parameters:    Size  Location     Type
  6500 ;;		None
  6501 ;; Auto vars:     Size  Location     Type
  6502 ;;		None
  6503 ;; Return value:  Size  Location     Type
  6504 ;;		None               void
  6505 ;; Registers used:
  6506 ;;		None
  6507 ;; Tracked objects:
  6508 ;;		On entry : 0/0
  6509 ;;		On exit  : 0/0
  6510 ;;		Unchanged: 0/0
  6511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6512 ;;      Params:         0       0       0       0       0
  6513 ;;      Locals:         0       0       0       0       0
  6514 ;;      Temps:          0       0       0       0       0
  6515 ;;      Totals:         0       0       0       0       0
  6516 ;;Total ram usage:        0 bytes
  6517 ;; Hardware stack levels used:    1
  6518 ;; Hardware stack levels required when called:   10
  6519 ;; This function calls:
  6520 ;;		Nothing
  6521 ;; This function is called by:
  6522 ;;		_main
  6523 ;; This function uses a non-reentrant model
  6524 ;;
  6525                           psect	text1,class=CODE,space=0,reloc=2
  6526                           global __ptext1
  6527  001D5A                     __ptext1:
  6528                           psect	text1
  6529                           	file	"../src/interrupts.c"
  6530                           	line	14
  6531                           	global	__size_of_enable_interrupts
  6532  0000                     	__size_of_enable_interrupts	equ	__end_of_enable_interrupts-_enable_interrupts
  6533                           	
  6534  001D5A                     _enable_interrupts:; BSR set to: 1
  6535                           
  6536                           	opt	stack 19
  6537                           	line	17
  6538                           	
  6539  001D5A                     l18003:
  6540                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  6541  001D5A  8ED0               	bsf	((c:4048)),c,7	;volatile
  6542                           	line	18
  6543                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  6544  001D5C  8EF2               	bsf	((c:4082)),c,7	;volatile
  6545                           	line	19
  6546                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  6547  001D5E  8CF2               	bsf	((c:4082)),c,6	;volatile
  6548                           	line	20
  6549                           	
  6550  001D60                     l1799:
  6551  001D60  0012               	return
  6552                           	opt stack 0
  6553                           GLOBAL	__end_of_enable_interrupts
  6554  001D62                     	__end_of_enable_interrupts:
  6555                           	signat	_enable_interrupts,88
  6556                           	global	_init_uart_recv
  6557                           
  6558 ;; *************** function _init_uart_recv *****************
  6559 ;; Defined at:
  6560 ;;		line 30 in file "../src/my_uart.c"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;  uc              2   32[BANK0 ] PTR struct __uart_comm
  6563 ;;		 -> main@uc(5), 
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;		None
  6566 ;; Return value:  Size  Location     Type
  6567 ;;		None               void
  6568 ;; Registers used:
  6569 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6570 ;; Tracked objects:
  6571 ;;		On entry : 0/0
  6572 ;;		On exit  : 0/0
  6573 ;;		Unchanged: 0/0
  6574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6575 ;;      Params:         0       2       0       0       0
  6576 ;;      Locals:         0       0       0       0       0
  6577 ;;      Temps:          0       0       0       0       0
  6578 ;;      Totals:         0       2       0       0       0
  6579 ;;Total ram usage:        2 bytes
  6580 ;; Hardware stack levels used:    1
  6581 ;; Hardware stack levels required when called:   10
  6582 ;; This function calls:
  6583 ;;		Nothing
  6584 ;; This function is called by:
  6585 ;;		_main
  6586 ;; This function uses a non-reentrant model
  6587 ;;
  6588                           psect	text2,class=CODE,space=0,reloc=2
  6589                           global __ptext2
  6590  001CBE                     __ptext2:
  6591                           psect	text2
  6592                           	file	"../src/my_uart.c"
  6593                           	line	30
  6594                           	global	__size_of_init_uart_recv
  6595  0000                     	__size_of_init_uart_recv	equ	__end_of_init_uart_recv-_init_uart_recv
  6596                           	
  6597  001CBE                     _init_uart_recv:
  6598                           	opt	stack 19
  6599                           	line	31
  6600                           	
  6601  001CBE                     l18297:
  6602                           ;my_uart.c: 31: uc_ptr = uc;
  6603  001CBE  C0D6  F04D         	movff	(init_uart_recv@uc),(c:_uc_ptr)
  6604  001CC2  C0D7  F04E         	movff	(init_uart_recv@uc+1),(c:_uc_ptr+1)
  6605                           	line	32
  6606                           	
  6607  001CC6                     l18299:
  6608                           ;my_uart.c: 32: uc_ptr->buflen = 0;
  6609  001CC6  EE20 F004          	lfsr	2,04h
  6610  001CCA  504D               	movf	((c:_uc_ptr)),c,w
  6611  001CCC  26D9               	addwf	fsr2l
  6612  001CCE  504E               	movf	((c:_uc_ptr+1)),c,w
  6613  001CD0  22DA               	addwfc	fsr2h
  6614  001CD2  0E00               	movlw	low(0)
  6615  001CD4  6EDF               	movwf	indf2
  6616                           	line	33
  6617                           	
  6618  001CD6                     l9205:
  6619  001CD6  0012               	return
  6620                           	opt stack 0
  6621                           GLOBAL	__end_of_init_uart_recv
  6622  001CD8                     	__end_of_init_uart_recv:
  6623                           	signat	_init_uart_recv,4216
  6624                           	global	_init_i2c
  6625                           
  6626 ;; *************** function _init_i2c *****************
  6627 ;; Defined at:
  6628 ;;		line 271 in file "../src/my_i2c.c"
  6629 ;; Parameters:    Size  Location     Type
  6630 ;;  ic              2   32[BANK0 ] PTR struct __i2c_comm
  6631 ;;		 -> main@ic(28), 
  6632 ;; Auto vars:     Size  Location     Type
  6633 ;;		None
  6634 ;; Return value:  Size  Location     Type
  6635 ;;		None               void
  6636 ;; Registers used:
  6637 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6638 ;; Tracked objects:
  6639 ;;		On entry : 0/0
  6640 ;;		On exit  : 0/0
  6641 ;;		Unchanged: 0/0
  6642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6643 ;;      Params:         0       2       0       0       0
  6644 ;;      Locals:         0       0       0       0       0
  6645 ;;      Temps:          0       0       0       0       0
  6646 ;;      Totals:         0       2       0       0       0
  6647 ;;Total ram usage:        2 bytes
  6648 ;; Hardware stack levels used:    1
  6649 ;; Hardware stack levels required when called:   10
  6650 ;; This function calls:
  6651 ;;		Nothing
  6652 ;; This function is called by:
  6653 ;;		_main
  6654 ;; This function uses a non-reentrant model
  6655 ;;
  6656                           psect	text3,class=CODE,space=0,reloc=2
  6657                           global __ptext3
  6658  001794                     __ptext3:
  6659                           psect	text3
  6660                           	file	"../src/my_i2c.c"
  6661                           	line	271
  6662                           	global	__size_of_init_i2c
  6663  0000                     	__size_of_init_i2c	equ	__end_of_init_i2c-_init_i2c
  6664                           	
  6665  001794                     _init_i2c:
  6666                           	opt	stack 19
  6667                           	line	272
  6668                           	
  6669  001794                     l18301:
  6670                           ;my_i2c.c: 272: ic_ptr = ic;
  6671  001794  C0D6  F0DE         	movff	(init_i2c@ic),(_ic_ptr)
  6672  001798  C0D7  F0DF         	movff	(init_i2c@ic+1),(_ic_ptr+1)
  6673                           	line	273
  6674                           	
  6675  00179C                     l18303:
  6676                           ;my_i2c.c: 273: ic_ptr->buflen = 0;
  6677  00179C  0100               	movlb	0	; () banked
  6678  00179E  EE20 F00A          	lfsr	2,0Ah
  6679  0017A2  0100               	movlb	0	; () banked
  6680  0017A4  51DE               	movf	((_ic_ptr))&0ffh,w
  6681  0017A6  26D9               	addwf	fsr2l
  6682  0017A8  0100               	movlb	0	; () banked
  6683  0017AA  51DF               	movf	((_ic_ptr+1))&0ffh,w
  6684  0017AC  22DA               	addwfc	fsr2h
  6685  0017AE  0E00               	movlw	low(0)
  6686  0017B0  6EDF               	movwf	indf2
  6687                           	line	274
  6688                           ;my_i2c.c: 274: ic_ptr->event_count = 0;
  6689  0017B2  0100               	movlb	0	; () banked
  6690  0017B4  EE20 F00B          	lfsr	2,0Bh
  6691  0017B8  0100               	movlb	0	; () banked
  6692  0017BA  51DE               	movf	((_ic_ptr))&0ffh,w
  6693  0017BC  26D9               	addwf	fsr2l
  6694  0017BE  0100               	movlb	0	; () banked
  6695  0017C0  51DF               	movf	((_ic_ptr+1))&0ffh,w
  6696  0017C2  22DA               	addwfc	fsr2h
  6697  0017C4  0E00               	movlw	low(0)
  6698  0017C6  6EDF               	movwf	indf2
  6699                           	line	275
  6700                           ;my_i2c.c: 275: ic_ptr->status = 0x5;
  6701  0017C8  0100               	movlb	0	; () banked
  6702  0017CA  EE20 F00C          	lfsr	2,0Ch
  6703  0017CE  0100               	movlb	0	; () banked
  6704  0017D0  51DE               	movf	((_ic_ptr))&0ffh,w
  6705  0017D2  26D9               	addwf	fsr2l
  6706  0017D4  0100               	movlb	0	; () banked
  6707  0017D6  51DF               	movf	((_ic_ptr+1))&0ffh,w
  6708  0017D8  22DA               	addwfc	fsr2h
  6709  0017DA  0E05               	movlw	low(05h)
  6710  0017DC  6EDF               	movwf	indf2
  6711                           	line	276
  6712                           ;my_i2c.c: 276: ic_ptr->error_count = 0;
  6713  0017DE  0100               	movlb	0	; () banked
  6714  0017E0  EE20 F00E          	lfsr	2,0Eh
  6715  0017E4  0100               	movlb	0	; () banked
  6716  0017E6  51DE               	movf	((_ic_ptr))&0ffh,w
  6717  0017E8  26D9               	addwf	fsr2l
  6718  0017EA  0100               	movlb	0	; () banked
  6719  0017EC  51DF               	movf	((_ic_ptr+1))&0ffh,w
  6720  0017EE  22DA               	addwfc	fsr2h
  6721  0017F0  0E00               	movlw	low(0)
  6722  0017F2  6EDF               	movwf	indf2
  6723                           	line	277
  6724                           	
  6725  0017F4                     l7403:; BSR set to: 0
  6726                           
  6727  0017F4  0012               	return
  6728                           	opt stack 0
  6729                           GLOBAL	__end_of_init_i2c
  6730  0017F6                     	__end_of_init_i2c:
  6731                           	signat	_init_i2c,4216
  6732                           	global	_init_timer1_lthread
  6733                           
  6734 ;; *************** function _init_timer1_lthread *****************
  6735 ;; Defined at:
  6736 ;;		line 8 in file "../src/timer1_thread.c"
  6737 ;; Parameters:    Size  Location     Type
  6738 ;;  tptr            2   37[BANK0 ] PTR struct __timer1_thre
  6739 ;;		 -> main@t1thread_data(2), 
  6740 ;; Auto vars:     Size  Location     Type
  6741 ;;		None
  6742 ;; Return value:  Size  Location     Type
  6743 ;;		None               void
  6744 ;; Registers used:
  6745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6746 ;; Tracked objects:
  6747 ;;		On entry : 0/0
  6748 ;;		On exit  : 0/0
  6749 ;;		Unchanged: 0/0
  6750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6751 ;;      Params:         0       2       0       0       0
  6752 ;;      Locals:         0       0       0       0       0
  6753 ;;      Temps:          0       0       3       0       0
  6754 ;;      Totals:         0       2       3       0       0
  6755 ;;Total ram usage:        5 bytes
  6756 ;; Hardware stack levels used:    1
  6757 ;; Hardware stack levels required when called:   11
  6758 ;; This function calls:
  6759 ;;		_OpenADC
  6760 ;;		_SetChanADC
  6761 ;; This function is called by:
  6762 ;;		_main
  6763 ;; This function uses a non-reentrant model
  6764 ;;
  6765                           psect	text4,class=CODE,space=0,reloc=2
  6766                           global __ptext4
  6767  001730                     __ptext4:
  6768                           psect	text4
  6769                           	file	"../src/timer1_thread.c"
  6770                           	line	8
  6771                           	global	__size_of_init_timer1_lthread
  6772  0000                     	__size_of_init_timer1_lthread	equ	__end_of_init_timer1_lthread-_init_timer1_lthread
  6773                           	
  6774  001730                     _init_timer1_lthread:; BSR set to: 0
  6775                           
  6776                           	opt	stack 18
  6777                           	line	13
  6778                           	
  6779  001730                     l19007:
  6780                           ;timer1_thread.c: 10: OpenADC(0b10011111 & 0b11111111 & 0b11110001,
  6781                           ;timer1_thread.c: 11: 0b10000111 & 0b10001111 &
  6782                           ;timer1_thread.c: 12: 0b01111111 & 0b11111110 &
  6783                           ;timer1_thread.c: 13: 0b11111101, 0b1011);
  6784  001730  0101               	movlb	1	; () banked
  6785  001732  6FA2               	movwf	(??_init_timer1_lthread+0+0)&0ffh
  6786  001734  0E91               	movlw	low(091h)
  6787  001736  0100               	movlb	0	; () banked
  6788  001738  0100               	movlb	0	; () banked
  6789  00173A  6FD6               	movwf	((?_OpenADC))&0ffh
  6790  00173C  0101               	movlb	1	; () banked
  6791  00173E  51A2               	movf	(??_init_timer1_lthread+0+0)&0ffh,w
  6792  001740  0101               	movlb	1	; () banked
  6793  001742  6FA3               	movwf	(??_init_timer1_lthread+1+0)&0ffh
  6794  001744  0E04               	movlw	low(04h)
  6795  001746  0100               	movlb	0	; () banked
  6796  001748  0100               	movlb	0	; () banked
  6797  00174A  6FD7               	movwf	(0+(?_OpenADC+01h))&0ffh
  6798  00174C  0101               	movlb	1	; () banked
  6799  00174E  51A3               	movf	(??_init_timer1_lthread+1+0)&0ffh,w
  6800  001750  0101               	movlb	1	; () banked
  6801  001752  6FA4               	movwf	(??_init_timer1_lthread+2+0)&0ffh
  6802  001754  0E0B               	movlw	low(0Bh)
  6803  001756  0100               	movlb	0	; () banked
  6804  001758  0100               	movlb	0	; () banked
  6805  00175A  6FD8               	movwf	(0+(?_OpenADC+02h))&0ffh
  6806  00175C  0101               	movlb	1	; () banked
  6807  00175E  51A4               	movf	(??_init_timer1_lthread+2+0)&0ffh,w
  6808  001760  0100               	movlb	0	; () banked
  6809  001762  ECE4  F00A         	call	_OpenADC	;wreg free
  6810                           	line	14
  6811                           ;timer1_thread.c: 14: SetChanADC(0b10000111);
  6812  001766  0101               	movlb	1	; () banked
  6813  001768  6FA2               	movwf	(??_init_timer1_lthread+0+0)&0ffh
  6814  00176A  0E87               	movlw	low(087h)
  6815  00176C  0100               	movlb	0	; () banked
  6816  00176E  0100               	movlb	0	; () banked
  6817  001770  6FD6               	movwf	((?_SetChanADC))&0ffh
  6818  001772  0101               	movlb	1	; () banked
  6819  001774  51A2               	movf	(??_init_timer1_lthread+0+0)&0ffh,w
  6820  001776  0100               	movlb	0	; () banked
  6821  001778  EC51  F00E         	call	_SetChanADC	;wreg free
  6822                           	line	16
  6823                           	
  6824  00177C                     l19009:
  6825                           ;timer1_thread.c: 16: (PIR1bits.ADIF=0,INTCONbits.PEIE=1,PIE1bits.ADIE=1);
  6826  00177C  9C9E               	bcf	((c:3998)),c,6	;volatile
  6827                           	
  6828  00177E                     l19011:
  6829  00177E  8CF2               	bsf	((c:4082)),c,6	;volatile
  6830                           	
  6831  001780                     l19013:
  6832  001780  8C9D               	bsf	((c:3997)),c,6	;volatile
  6833                           	line	17
  6834                           	
  6835  001782                     l19015:
  6836                           ;timer1_thread.c: 17: tptr->timerval = 0;
  6837  001782  C0DB  FFD9         	movff	(init_timer1_lthread@tptr),fsr2l
  6838  001786  C0DC  FFDA         	movff	(init_timer1_lthread@tptr+1),fsr2h
  6839  00178A  0E00               	movlw	low(0)
  6840  00178C  6EDE               	movwf	postinc2
  6841  00178E  0E00               	movlw	high(0)
  6842  001790  6EDD               	movwf	postdec2
  6843                           	line	18
  6844                           	
  6845  001792                     l12785:
  6846  001792  0012               	return
  6847                           	opt stack 0
  6848                           GLOBAL	__end_of_init_timer1_lthread
  6849  001794                     	__end_of_init_timer1_lthread:
  6850                           	signat	_init_timer1_lthread,4216
  6851                           	global	_init_queues
  6852                           
  6853 ;; *************** function _init_queues *****************
  6854 ;; Defined at:
  6855 ;;		line 194 in file "../src/messages.c"
  6856 ;; Parameters:    Size  Location     Type
  6857 ;;		None
  6858 ;; Auto vars:     Size  Location     Type
  6859 ;;		None
  6860 ;; Return value:  Size  Location     Type
  6861 ;;		None               void
  6862 ;; Registers used:
  6863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6864 ;; Tracked objects:
  6865 ;;		On entry : 0/0
  6866 ;;		On exit  : 0/0
  6867 ;;		Unchanged: 0/0
  6868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6869 ;;      Params:         0       0       0       0       0
  6870 ;;      Locals:         0       0       0       0       0
  6871 ;;      Temps:          0       1       0       0       0
  6872 ;;      Totals:         0       1       0       0       0
  6873 ;;Total ram usage:        1 bytes
  6874 ;; Hardware stack levels used:    1
  6875 ;; Hardware stack levels required when called:   11
  6876 ;; This function calls:
  6877 ;;		_init_queue
  6878 ;; This function is called by:
  6879 ;;		_main
  6880 ;; This function uses a non-reentrant model
  6881 ;;
  6882                           psect	text5,class=CODE,space=0,reloc=2
  6883                           global __ptext5
  6884  0016C2                     __ptext5:
  6885                           psect	text5
  6886                           	file	"../src/messages.c"
  6887                           	line	194
  6888                           	global	__size_of_init_queues
  6889  0000                     	__size_of_init_queues	equ	__end_of_init_queues-_init_queues
  6890                           	
  6891  0016C2                     _init_queues:
  6892                           	opt	stack 18
  6893                           	line	195
  6894                           	
  6895  0016C2                     l18315:
  6896                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  6897  0016C2  0100               	movlb	0	; () banked
  6898  0016C4  6FDA               	movwf	(??_init_queues+0+0)&0ffh
  6899  0016C6  0E00               	movlw	low(0)
  6900  0016C8  6E4B               	movwf	((c:_MQ_Main_Willing_to_block)),c
  6901  0016CA  0100               	movlb	0	; () banked
  6902  0016CC  51DA               	movf	(??_init_queues+0+0)&0ffh,w
  6903                           	line	196
  6904                           	
  6905  0016CE                     l18317:; BSR set to: 0
  6906                           
  6907                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  6908  0016CE  0100               	movlb	0	; () banked
  6909  0016D0  0E00               	movlw	high(_ToMainLow_MQ)
  6910  0016D2  0100               	movlb	0	; () banked
  6911  0016D4  0100               	movlb	0	; () banked
  6912  0016D6  6FD7               	movwf	((?_init_queue+1))&0ffh
  6913  0016D8  0100               	movlb	0	; () banked
  6914  0016DA  0E80               	movlw	low(_ToMainLow_MQ)
  6915  0016DC  0100               	movlb	0	; () banked
  6916  0016DE  6FD6               	movwf	((?_init_queue))&0ffh
  6917  0016E0  0100               	movlb	0	; () banked
  6918  0016E2  ECA1  F00A         	call	_init_queue	;wreg free
  6919                           	line	197
  6920                           	
  6921  0016E6                     l18319:
  6922                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  6923  0016E6  0101               	movlb	1	; () banked
  6924  0016E8  0E01               	movlw	high(_ToMainHigh_MQ)
  6925  0016EA  0100               	movlb	0	; () banked
  6926  0016EC  0100               	movlb	0	; () banked
  6927  0016EE  6FD7               	movwf	((?_init_queue+1))&0ffh
  6928  0016F0  0101               	movlb	1	; () banked
  6929  0016F2  0E6C               	movlw	low(_ToMainHigh_MQ)
  6930  0016F4  0100               	movlb	0	; () banked
  6931  0016F6  6FD6               	movwf	((?_init_queue))&0ffh
  6932  0016F8  0100               	movlb	0	; () banked
  6933  0016FA  ECA1  F00A         	call	_init_queue	;wreg free
  6934                           	line	198
  6935                           	
  6936  0016FE                     l18321:
  6937                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  6938  0016FE  0101               	movlb	1	; () banked
  6939  001700  0E01               	movlw	high(_FromMainLow_MQ)
  6940  001702  0100               	movlb	0	; () banked
  6941  001704  0100               	movlb	0	; () banked
  6942  001706  6FD7               	movwf	((?_init_queue+1))&0ffh
  6943  001708  0101               	movlb	1	; () banked
  6944  00170A  0E36               	movlw	low(_FromMainLow_MQ)
  6945  00170C  0100               	movlb	0	; () banked
  6946  00170E  6FD6               	movwf	((?_init_queue))&0ffh
  6947  001710  0100               	movlb	0	; () banked
  6948  001712  ECA1  F00A         	call	_init_queue	;wreg free
  6949                           	line	199
  6950                           	
  6951  001716                     l18323:
  6952                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  6953  001716  0101               	movlb	1	; () banked
  6954  001718  0E01               	movlw	high(_FromMainHigh_MQ)
  6955  00171A  0100               	movlb	0	; () banked
  6956  00171C  0100               	movlb	0	; () banked
  6957  00171E  6FD7               	movwf	((?_init_queue+1))&0ffh
  6958  001720  0101               	movlb	1	; () banked
  6959  001722  0E00               	movlw	low(_FromMainHigh_MQ)
  6960  001724  0100               	movlb	0	; () banked
  6961  001726  6FD6               	movwf	((?_init_queue))&0ffh
  6962  001728  0100               	movlb	0	; () banked
  6963  00172A  ECA1  F00A         	call	_init_queue	;wreg free
  6964                           	line	200
  6965                           	
  6966  00172E                     l5519:
  6967  00172E  0012               	return
  6968                           	opt stack 0
  6969                           GLOBAL	__end_of_init_queues
  6970  001730                     	__end_of_init_queues:
  6971                           	signat	_init_queues,88
  6972                           	global	_OpenTimer1
  6973                           
  6974 ;; *************** function _OpenTimer1 *****************
  6975 ;; Defined at:
  6976 ;;		line 17 in file "plib/Timers/t1open.c"
  6977 ;; Parameters:    Size  Location     Type
  6978 ;;  config          1   32[BANK0 ] unsigned char 
  6979 ;; Auto vars:     Size  Location     Type
  6980 ;;		None
  6981 ;; Return value:  Size  Location     Type
  6982 ;;		None               void
  6983 ;; Registers used:
  6984 ;;		wreg, status,2, status,0
  6985 ;; Tracked objects:
  6986 ;;		On entry : 0/0
  6987 ;;		On exit  : 0/0
  6988 ;;		Unchanged: 0/0
  6989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6990 ;;      Params:         0       1       0       0       0
  6991 ;;      Locals:         0       0       0       0       0
  6992 ;;      Temps:          0       0       0       0       0
  6993 ;;      Totals:         0       1       0       0       0
  6994 ;;Total ram usage:        1 bytes
  6995 ;; Hardware stack levels used:    1
  6996 ;; Hardware stack levels required when called:   10
  6997 ;; This function calls:
  6998 ;;		Nothing
  6999 ;; This function is called by:
  7000 ;;		_main
  7001 ;; This function uses a non-reentrant model
  7002 ;;
  7003                           psect	text6,class=CODE,space=0,reloc=2
  7004                           global __ptext6
  7005  001A24                     __ptext6:
  7006                           psect	text6
  7007                           	file	"plib/Timers/t1open.c"
  7008                           	line	17
  7009                           	global	__size_of_OpenTimer1
  7010  0000                     	__size_of_OpenTimer1	equ	__end_of_OpenTimer1-_OpenTimer1
  7011                           	
  7012  001A24                     _OpenTimer1:
  7013                           	opt	stack 19
  7014                           	line	18
  7015                           	
  7016  001A24                     l18325:
  7017  001A24  0100               	movlb	0	; () banked
  7018  001A26  0100               	movlb	0	; () banked
  7019  001A28  51D6               	movf	((OpenTimer1@config))&0ffh,w
  7020  001A2A  0B7E               	andlw	low(07Eh)
  7021  001A2C  6ECD               	movwf	((c:4045)),c	;volatile
  7022                           	line	21
  7023                           	
  7024  001A2E                     l18327:; BSR set to: 0
  7025                           
  7026  001A2E  0100               	movlb	0	; () banked
  7027                           	
  7028  001A30  0100               	movlb	0	; () banked
  7029  001A32  ADD6               	btfss	((OpenTimer1@config))&0ffh,(6)&7
  7030  001A34  D001               	goto	u1361
  7031  001A36  D001               	goto	u1360
  7032  001A38                     u1361:
  7033  001A38  D002               	goto	l16445
  7034  001A3A                     u1360:
  7035                           	line	22
  7036                           	
  7037  001A3A                     l18329:; BSR set to: 0
  7038                           
  7039  001A3A  8ECD               	bsf	((c:4045)),c,7	;volatile
  7040  001A3C  D002               	goto	l18331
  7041                           	line	23
  7042                           	
  7043  001A3E                     l16445:; BSR set to: 0
  7044                           
  7045                           	line	24
  7046  001A3E  9ECD               	bcf	((c:4045)),c,7	;volatile
  7047  001A40  D000               	goto	l18331
  7048                           	
  7049  001A42                     l16446:; BSR set to: 0
  7050                           
  7051                           	line	26
  7052                           	
  7053  001A42                     l18331:; BSR set to: 0
  7054                           
  7055  001A42  0E00               	movlw	low(0)
  7056  001A44  6ECF               	movwf	((c:4047)),c	;volatile
  7057                           	line	27
  7058  001A46  0E00               	movlw	low(0)
  7059  001A48  6ECE               	movwf	((c:4046)),c	;volatile
  7060                           	line	28
  7061                           	
  7062  001A4A                     l18333:; BSR set to: 0
  7063                           
  7064  001A4A  909E               	bcf	((c:3998)),c,0	;volatile
  7065                           	line	30
  7066                           	
  7067  001A4C                     l18335:; BSR set to: 0
  7068                           
  7069  001A4C  0100               	movlb	0	; () banked
  7070                           	
  7071  001A4E  0100               	movlb	0	; () banked
  7072  001A50  AFD6               	btfss	((OpenTimer1@config))&0ffh,(7)&7
  7073  001A52  D001               	goto	u1371
  7074  001A54  D001               	goto	u1370
  7075  001A56                     u1371:
  7076  001A56  D002               	goto	l16447
  7077  001A58                     u1370:
  7078                           	line	31
  7079                           	
  7080  001A58                     l18337:; BSR set to: 0
  7081                           
  7082  001A58  809D               	bsf	((c:3997)),c,0	;volatile
  7083  001A5A  D001               	goto	l16448
  7084                           	line	32
  7085                           	
  7086  001A5C                     l16447:; BSR set to: 0
  7087                           
  7088                           	line	33
  7089  001A5C  909D               	bcf	((c:3997)),c,0	;volatile
  7090                           	
  7091  001A5E                     l16448:; BSR set to: 0
  7092                           
  7093                           	line	35
  7094  001A5E  80CD               	bsf	((c:4045)),c,0	;volatile
  7095                           	line	36
  7096                           	
  7097  001A60                     l16449:; BSR set to: 0
  7098                           
  7099  001A60  0012               	return
  7100                           	opt stack 0
  7101                           GLOBAL	__end_of_OpenTimer1
  7102  001A62                     	__end_of_OpenTimer1:
  7103                           	signat	_OpenTimer1,4216
  7104                           	global	_i2c_configure_slave
  7105                           
  7106 ;; *************** function _i2c_configure_slave *****************
  7107 ;; Defined at:
  7108 ;;		line 282 in file "../src/my_i2c.c"
  7109 ;; Parameters:    Size  Location     Type
  7110 ;;  addr            1   32[BANK0 ] unsigned char 
  7111 ;; Auto vars:     Size  Location     Type
  7112 ;;		None
  7113 ;; Return value:  Size  Location     Type
  7114 ;;		None               void
  7115 ;; Registers used:
  7116 ;;		wreg, status,2, status,0
  7117 ;; Tracked objects:
  7118 ;;		On entry : 0/0
  7119 ;;		On exit  : 0/0
  7120 ;;		Unchanged: 0/0
  7121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7122 ;;      Params:         0       1       0       0       0
  7123 ;;      Locals:         0       0       0       0       0
  7124 ;;      Temps:          0       0       0       0       0
  7125 ;;      Totals:         0       1       0       0       0
  7126 ;;Total ram usage:        1 bytes
  7127 ;; Hardware stack levels used:    1
  7128 ;; Hardware stack levels required when called:   10
  7129 ;; This function calls:
  7130 ;;		Nothing
  7131 ;; This function is called by:
  7132 ;;		_main
  7133 ;; This function uses a non-reentrant model
  7134 ;;
  7135                           psect	text7,class=CODE,space=0,reloc=2
  7136                           global __ptext7
  7137  001C36                     __ptext7:
  7138                           psect	text7
  7139                           	file	"../src/my_i2c.c"
  7140                           	line	282
  7141                           	global	__size_of_i2c_configure_slave
  7142  0000                     	__size_of_i2c_configure_slave	equ	__end_of_i2c_configure_slave-_i2c_configure_slave
  7143                           	
  7144  001C36                     _i2c_configure_slave:; BSR set to: 0
  7145                           
  7146                           	opt	stack 19
  7147                           	line	285
  7148                           	
  7149  001C36                     l18339:
  7150                           ;my_i2c.c: 285: TRISCbits.TRISC3 = 1;
  7151  001C36  8694               	bsf	((c:3988)),c,3	;volatile
  7152                           	line	286
  7153                           ;my_i2c.c: 286: TRISCbits.TRISC4 = 1;
  7154  001C38  8894               	bsf	((c:3988)),c,4	;volatile
  7155                           	line	288
  7156                           ;my_i2c.c: 288: SSPADD = addr;
  7157  001C3A  C0D6  FFC8         	movff	(i2c_configure_slave@addr),(c:4040)	;volatile
  7158                           	line	290
  7159                           	
  7160  001C3E                     l18341:
  7161                           ;my_i2c.c: 290: SSPSTAT = 0x0;
  7162  001C3E  0E00               	movlw	low(0)
  7163  001C40  6EC7               	movwf	((c:4039)),c	;volatile
  7164                           	line	291
  7165                           ;my_i2c.c: 291: SSPCON1 = 0x0;
  7166  001C42  0E00               	movlw	low(0)
  7167  001C44  6EC6               	movwf	((c:4038)),c	;volatile
  7168                           	line	292
  7169                           ;my_i2c.c: 292: SSPCON2 = 0x0;
  7170  001C46  0E00               	movlw	low(0)
  7171  001C48  6EC5               	movwf	((c:4037)),c	;volatile
  7172                           	line	293
  7173                           	
  7174  001C4A                     l18343:
  7175                           ;my_i2c.c: 293: SSPCON1 |= 0x0E;
  7176  001C4A  0E0E               	movlw	(0Eh)&0ffh
  7177  001C4C  12C6               	iorwf	((c:4038)),c	;volatile
  7178                           	line	294
  7179                           	
  7180  001C4E                     l18345:
  7181                           ;my_i2c.c: 294: SSPSTAT |= 0b10000000;
  7182  001C4E  8EC7               	bsf	(0+(7/8)+(c:4039)),c,(7)&7	;volatile
  7183                           	line	296
  7184                           	
  7185  001C50                     l18347:
  7186                           ;my_i2c.c: 296: TRISCbits.TRISC3 = 1;
  7187  001C50  8694               	bsf	((c:3988)),c,3	;volatile
  7188                           	line	297
  7189                           	
  7190  001C52                     l18349:
  7191                           ;my_i2c.c: 297: TRISCbits.TRISC4 = 1;
  7192  001C52  8894               	bsf	((c:3988)),c,4	;volatile
  7193                           	line	307
  7194                           	
  7195  001C54                     l18351:
  7196                           ;my_i2c.c: 307: SSPCON2bits.SEN = 1;
  7197  001C54  80C5               	bsf	((c:4037)),c,0	;volatile
  7198                           	line	308
  7199                           	
  7200  001C56                     l18353:
  7201                           ;my_i2c.c: 308: SSPCON1 |= 0b00100000;
  7202  001C56  8AC6               	bsf	(0+(5/8)+(c:4038)),c,(5)&7	;volatile
  7203                           	line	310
  7204                           	
  7205  001C58                     l7406:
  7206  001C58  0012               	return
  7207                           	opt stack 0
  7208                           GLOBAL	__end_of_i2c_configure_slave
  7209  001C5A                     	__end_of_i2c_configure_slave:
  7210                           	signat	_i2c_configure_slave,4216
  7211                           	global	_OpenUSART
  7212                           
  7213 ;; *************** function _OpenUSART *****************
  7214 ;; Defined at:
  7215 ;;		line 74 in file "plib/USART/uopen.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;  config          1   32[BANK0 ] unsigned char 
  7218 ;;  spbrg           2   33[BANK0 ] unsigned int 
  7219 ;; Auto vars:     Size  Location     Type
  7220 ;;		None
  7221 ;; Return value:  Size  Location     Type
  7222 ;;		None               void
  7223 ;; Registers used:
  7224 ;;		wreg, status,2
  7225 ;; Tracked objects:
  7226 ;;		On entry : 0/0
  7227 ;;		On exit  : 0/0
  7228 ;;		Unchanged: 0/0
  7229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7230 ;;      Params:         0       3       0       0       0
  7231 ;;      Locals:         0       0       0       0       0
  7232 ;;      Temps:          0       0       0       0       0
  7233 ;;      Totals:         0       3       0       0       0
  7234 ;;Total ram usage:        3 bytes
  7235 ;; Hardware stack levels used:    1
  7236 ;; Hardware stack levels required when called:   10
  7237 ;; This function calls:
  7238 ;;		Nothing
  7239 ;; This function is called by:
  7240 ;;		_main
  7241 ;; This function uses a non-reentrant model
  7242 ;;
  7243                           psect	text8,class=CODE,space=0,reloc=2
  7244                           global __ptext8
  7245  0012A0                     __ptext8:
  7246                           psect	text8
  7247                           	file	"plib/USART/uopen.c"
  7248                           	line	74
  7249                           	global	__size_of_OpenUSART
  7250  0000                     	__size_of_OpenUSART	equ	__end_of_OpenUSART-_OpenUSART
  7251                           	
  7252  0012A0                     _OpenUSART:
  7253                           	opt	stack 19
  7254                           	line	75
  7255                           	
  7256  0012A0                     l18355:
  7257  0012A0  0E00               	movlw	low(0)
  7258  0012A2  6EAC               	movwf	((c:4012)),c	;volatile
  7259                           	line	76
  7260  0012A4  0E00               	movlw	low(0)
  7261  0012A6  6EAB               	movwf	((c:4011)),c	;volatile
  7262                           	line	78
  7263                           	
  7264  0012A8                     l18357:
  7265  0012A8  0100               	movlb	0	; () banked
  7266                           	
  7267  0012AA  0100               	movlb	0	; () banked
  7268  0012AC  A1D6               	btfss	((OpenUSART@config))&0ffh,(0)&7
  7269  0012AE  D001               	goto	u1381
  7270  0012B0  D001               	goto	u1380
  7271  0012B2                     u1381:
  7272  0012B2  D001               	goto	l16486
  7273  0012B4                     u1380:
  7274                           	line	79
  7275                           	
  7276  0012B4                     l18359:; BSR set to: 0
  7277                           
  7278  0012B4  88AC               	bsf	((c:4012)),c,4	;volatile
  7279                           	
  7280  0012B6                     l16486:; BSR set to: 0
  7281                           
  7282                           	line	81
  7283  0012B6  0100               	movlb	0	; () banked
  7284                           	
  7285  0012B8  0100               	movlb	0	; () banked
  7286  0012BA  A3D6               	btfss	((OpenUSART@config))&0ffh,(1)&7
  7287  0012BC  D001               	goto	u1391
  7288  0012BE  D001               	goto	u1390
  7289  0012C0                     u1391:
  7290  0012C0  D002               	goto	l16487
  7291  0012C2                     u1390:
  7292                           	line	83
  7293                           	
  7294  0012C2                     l18361:; BSR set to: 0
  7295                           
  7296  0012C2  8CAC               	bsf	((c:4012)),c,6	;volatile
  7297                           	line	84
  7298  0012C4  8CAB               	bsf	((c:4011)),c,6	;volatile
  7299                           	line	85
  7300                           	
  7301  0012C6                     l16487:; BSR set to: 0
  7302                           
  7303                           	line	87
  7304  0012C6  0100               	movlb	0	; () banked
  7305                           	
  7306  0012C8  0100               	movlb	0	; () banked
  7307  0012CA  A5D6               	btfss	((OpenUSART@config))&0ffh,(2)&7
  7308  0012CC  D001               	goto	u1401
  7309  0012CE  D001               	goto	u1400
  7310  0012D0                     u1401:
  7311  0012D0  D001               	goto	l16488
  7312  0012D2                     u1400:
  7313                           	line	88
  7314                           	
  7315  0012D2                     l18363:; BSR set to: 0
  7316                           
  7317  0012D2  8EAC               	bsf	((c:4012)),c,7	;volatile
  7318                           	
  7319  0012D4                     l16488:; BSR set to: 0
  7320                           
  7321                           	line	90
  7322  0012D4  0100               	movlb	0	; () banked
  7323                           	
  7324  0012D6  0100               	movlb	0	; () banked
  7325  0012D8  A7D6               	btfss	((OpenUSART@config))&0ffh,(3)&7
  7326  0012DA  D001               	goto	u1411
  7327  0012DC  D001               	goto	u1410
  7328  0012DE                     u1411:
  7329  0012DE  D002               	goto	l16489
  7330  0012E0                     u1410:
  7331                           	line	91
  7332                           	
  7333  0012E0                     l18365:; BSR set to: 0
  7334                           
  7335  0012E0  88AB               	bsf	((c:4011)),c,4	;volatile
  7336  0012E2  D001               	goto	l16490
  7337                           	line	92
  7338                           	
  7339  0012E4                     l16489:; BSR set to: 0
  7340                           
  7341                           	line	93
  7342  0012E4  8AAB               	bsf	((c:4011)),c,5	;volatile
  7343                           	
  7344  0012E6                     l16490:; BSR set to: 0
  7345                           
  7346                           	line	95
  7347  0012E6  0100               	movlb	0	; () banked
  7348                           	
  7349  0012E8  0100               	movlb	0	; () banked
  7350  0012EA  A9D6               	btfss	((OpenUSART@config))&0ffh,(4)&7
  7351  0012EC  D001               	goto	u1421
  7352  0012EE  D001               	goto	u1420
  7353  0012F0                     u1421:
  7354  0012F0  D001               	goto	l16491
  7355  0012F2                     u1420:
  7356                           	line	96
  7357                           	
  7358  0012F2                     l18367:; BSR set to: 0
  7359                           
  7360  0012F2  84AC               	bsf	((c:4012)),c,2	;volatile
  7361                           	
  7362  0012F4                     l16491:; BSR set to: 0
  7363                           
  7364                           	line	98
  7365  0012F4  989E               	bcf	((c:3998)),c,4	;volatile
  7366                           	line	100
  7367  0012F6  0100               	movlb	0	; () banked
  7368                           	
  7369  0012F8  0100               	movlb	0	; () banked
  7370  0012FA  ABD6               	btfss	((OpenUSART@config))&0ffh,(5)&7
  7371  0012FC  D001               	goto	u1431
  7372  0012FE  D001               	goto	u1430
  7373  001300                     u1431:
  7374  001300  D001               	goto	l16492
  7375  001302                     u1430:
  7376                           	line	101
  7377                           	
  7378  001302                     l18369:; BSR set to: 0
  7379                           
  7380  001302  86AB               	bsf	((c:4011)),c,3	;volatile
  7381                           	
  7382  001304                     l16492:; BSR set to: 0
  7383                           
  7384                           	line	103
  7385  001304  0100               	movlb	0	; () banked
  7386                           	
  7387  001306  0100               	movlb	0	; () banked
  7388  001308  ADD6               	btfss	((OpenUSART@config))&0ffh,(6)&7
  7389  00130A  D001               	goto	u1441
  7390  00130C  D001               	goto	u1440
  7391  00130E                     u1441:
  7392  00130E  D002               	goto	l16493
  7393  001310                     u1440:
  7394                           	line	104
  7395                           	
  7396  001310                     l18371:; BSR set to: 0
  7397                           
  7398  001310  8A9D               	bsf	((c:3997)),c,5	;volatile
  7399  001312  D001               	goto	l16494
  7400                           	line	105
  7401                           	
  7402  001314                     l16493:; BSR set to: 0
  7403                           
  7404                           	line	106
  7405  001314  9A9D               	bcf	((c:3997)),c,5	;volatile
  7406                           	
  7407  001316                     l16494:; BSR set to: 0
  7408                           
  7409                           	line	108
  7410  001316  9A9E               	bcf	((c:3998)),c,5	;volatile
  7411                           	line	110
  7412  001318  0100               	movlb	0	; () banked
  7413                           	
  7414  00131A  0100               	movlb	0	; () banked
  7415  00131C  AFD6               	btfss	((OpenUSART@config))&0ffh,(7)&7
  7416  00131E  D001               	goto	u1451
  7417  001320  D001               	goto	u1450
  7418  001322                     u1451:
  7419  001322  D002               	goto	l16495
  7420  001324                     u1450:
  7421                           	line	111
  7422                           	
  7423  001324                     l18373:; BSR set to: 0
  7424                           
  7425  001324  889D               	bsf	((c:3997)),c,4	;volatile
  7426  001326  D001               	goto	l16496
  7427                           	line	112
  7428                           	
  7429  001328                     l16495:; BSR set to: 0
  7430                           
  7431                           	line	113
  7432  001328  989D               	bcf	((c:3997)),c,4	;volatile
  7433                           	
  7434  00132A                     l16496:; BSR set to: 0
  7435                           
  7436                           	line	115
  7437  00132A  C0D7  FFAF         	movff	(OpenUSART@spbrg),(c:4015)	;volatile
  7438                           	line	116
  7439                           	
  7440  00132E                     l18375:; BSR set to: 0
  7441                           
  7442  00132E  0100               	movlb	0	; () banked
  7443  001330  0100               	movlb	0	; () banked
  7444  001332  51D8               	movf	((OpenUSART@spbrg+1))&0ffh,w
  7445  001334  6EB0               	movwf	((c:4016)),c	;volatile
  7446                           	line	118
  7447                           	
  7448  001336                     l18377:; BSR set to: 0
  7449                           
  7450  001336  8AAC               	bsf	((c:4012)),c,5	;volatile
  7451                           	line	119
  7452                           	
  7453  001338                     l18379:; BSR set to: 0
  7454                           
  7455  001338  8EAB               	bsf	((c:4011)),c,7	;volatile
  7456                           	line	137
  7457                           	
  7458  00133A                     l18381:; BSR set to: 0
  7459                           
  7460  00133A  9C94               	bcf	((c:3988)),c,6	;volatile
  7461                           	
  7462  00133C                     l18383:; BSR set to: 0
  7463                           
  7464  00133C  8E94               	bsf	((c:3988)),c,7	;volatile
  7465                           	line	138
  7466                           	
  7467  00133E                     l18385:; BSR set to: 0
  7468                           
  7469                           	
  7470  00133E  A8AC               	btfss	((c:4012)),c,4	;volatile
  7471  001340  D001               	goto	u1461
  7472  001342  D001               	goto	u1460
  7473  001344                     u1461:
  7474  001344  D006               	goto	l16498
  7475  001346                     u1460:
  7476                           	
  7477  001346                     l18387:; BSR set to: 0
  7478                           
  7479                           	
  7480  001346  BEAC               	btfsc	((c:4012)),c,7	;volatile
  7481  001348  D001               	goto	u1471
  7482  00134A  D001               	goto	u1470
  7483  00134C                     u1471:
  7484  00134C  D002               	goto	l16498
  7485  00134E                     u1470:
  7486                           	line	139
  7487                           	
  7488  00134E                     l18389:; BSR set to: 0
  7489                           
  7490  00134E  8C94               	bsf	((c:3988)),c,6	;volatile
  7491  001350  D000               	goto	l16498
  7492                           	
  7493  001352                     l16497:; BSR set to: 0
  7494                           
  7495                           	line	143
  7496                           	
  7497  001352                     l16498:; BSR set to: 0
  7498                           
  7499  001352  0012               	return
  7500                           	opt stack 0
  7501                           GLOBAL	__end_of_OpenUSART
  7502  001354                     	__end_of_OpenUSART:
  7503                           	signat	_OpenUSART,8312
  7504                           	global	_block_on_To_msgqueues
  7505                           
  7506 ;; *************** function _block_on_To_msgqueues *****************
  7507 ;; Defined at:
  7508 ;;		line 258 in file "../src/messages.c"
  7509 ;; Parameters:    Size  Location     Type
  7510 ;;		None
  7511 ;; Auto vars:     Size  Location     Type
  7512 ;;		None
  7513 ;; Return value:  Size  Location     Type
  7514 ;;		None               void
  7515 ;; Registers used:
  7516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7517 ;; Tracked objects:
  7518 ;;		On entry : 0/0
  7519 ;;		On exit  : 0/0
  7520 ;;		Unchanged: 0/0
  7521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7522 ;;      Params:         0       0       0       0       0
  7523 ;;      Locals:         0       0       0       0       0
  7524 ;;      Temps:          0       1       0       0       0
  7525 ;;      Totals:         0       1       0       0       0
  7526 ;;Total ram usage:        1 bytes
  7527 ;; Hardware stack levels used:    1
  7528 ;; Hardware stack levels required when called:   13
  7529 ;; This function calls:
  7530 ;;		_in_main
  7531 ;;		_check_msg
  7532 ;;		_Delay1KTCYx
  7533 ;; This function is called by:
  7534 ;;		_main
  7535 ;; This function uses a non-reentrant model
  7536 ;;
  7537                           psect	text9,class=CODE,space=0,reloc=2
  7538                           global __ptext9
  7539  001056                     __ptext9:
  7540                           psect	text9
  7541                           	file	"../src/messages.c"
  7542                           	line	258
  7543                           	global	__size_of_block_on_To_msgqueues
  7544  0000                     	__size_of_block_on_To_msgqueues	equ	__end_of_block_on_To_msgqueues-_block_on_To_msgqueu
                                 es
  7545                           	
  7546  001056                     _block_on_To_msgqueues:; BSR set to: 0
  7547                           
  7548                           	opt	stack 16
  7549                           	line	259
  7550                           	
  7551  001056                     l18391:
  7552                           ;messages.c: 259: if (!in_main()) {
  7553  001056  0100               	movlb	0	; () banked
  7554  001058  EC2A  F00C         	call	_in_main	;wreg free
  7555  00105C  0100               	movlb	0	; () banked
  7556  00105E  0100               	movlb	0	; () banked
  7557  001060  51DB               	movf	(1+?_in_main)&0ffh,w
  7558  001062  0100               	movlb	0	; () banked
  7559  001064  11DA               	iorwf (0+?_in_main)&0ffh,w
  7560                           
  7561  001066  A4D8               	btfss	status,2
  7562  001068  D001               	goto	u1481
  7563  00106A  D001               	goto	u1480
  7564  00106C                     u1481:
  7565  00106C  D002               	goto	l5536
  7566  00106E                     u1480:
  7567  00106E  D05C               	goto	l5537
  7568                           	line	260
  7569                           	
  7570  001070                     l18393:; BSR set to: 0
  7571                           
  7572                           ;messages.c: 260: return;
  7573  001070  D05B               	goto	l5537
  7574                           	line	261
  7575                           	
  7576  001072                     l5536:; BSR set to: 0
  7577                           
  7578                           	line	262
  7579                           ;messages.c: 261: }
  7580                           ;messages.c: 262: LATBbits.LATB3 = 1;
  7581  001072  868A               	bsf	((c:3978)),c,3	;volatile
  7582                           	line	263
  7583                           	
  7584  001074                     l18395:; BSR set to: 0
  7585                           
  7586                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  7587  001074  0100               	movlb	0	; () banked
  7588  001076  6FDC               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7589  001078  0E01               	movlw	low(01h)
  7590  00107A  6E4B               	movwf	((c:_MQ_Main_Willing_to_block)),c
  7591  00107C  0100               	movlb	0	; () banked
  7592  00107E  51DC               	movf	(??_block_on_To_msgqueues+0+0)&0ffh,w
  7593  001080  D000               	goto	l18397
  7594                           	line	264
  7595                           ;messages.c: 264: while (1) {
  7596                           	
  7597  001082                     l5538:; BSR set to: 0
  7598                           
  7599                           	line	265
  7600                           	
  7601  001082                     l18397:; BSR set to: 0
  7602                           
  7603                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  7604  001082  0101               	movlb	1	; () banked
  7605  001084  0E01               	movlw	high(_ToMainHigh_MQ)
  7606  001086  0100               	movlb	0	; () banked
  7607  001088  0100               	movlb	0	; () banked
  7608  00108A  6FD7               	movwf	((?_check_msg+1))&0ffh
  7609  00108C  0101               	movlb	1	; () banked
  7610  00108E  0E6C               	movlw	low(_ToMainHigh_MQ)
  7611  001090  0100               	movlb	0	; () banked
  7612  001092  6FD6               	movwf	((?_check_msg))&0ffh
  7613  001094  0100               	movlb	0	; () banked
  7614  001096  EC50  F00D         	call	_check_msg	;wreg free
  7615  00109A  0900               	iorlw	0
  7616  00109C  B4D8               	btfsc	status,2
  7617  00109E  D001               	goto	u1491
  7618  0010A0  D001               	goto	u1490
  7619  0010A2                     u1491:
  7620  0010A2  D009               	goto	l18405
  7621  0010A4                     u1490:
  7622                           	line	266
  7623                           	
  7624  0010A4                     l18399:
  7625                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  7626  0010A4  0100               	movlb	0	; () banked
  7627  0010A6  6FDC               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7628  0010A8  0E00               	movlw	low(0)
  7629  0010AA  6E4B               	movwf	((c:_MQ_Main_Willing_to_block)),c
  7630  0010AC  0100               	movlb	0	; () banked
  7631  0010AE  51DC               	movf	(??_block_on_To_msgqueues+0+0)&0ffh,w
  7632                           	line	267
  7633                           	
  7634  0010B0                     l18401:; BSR set to: 0
  7635                           
  7636                           ;messages.c: 267: LATBbits.LATB3 = 0;
  7637  0010B0  968A               	bcf	((c:3978)),c,3	;volatile
  7638  0010B2  D03A               	goto	l5537
  7639                           	line	268
  7640                           	
  7641  0010B4                     l18403:; BSR set to: 0
  7642                           
  7643                           ;messages.c: 268: return;
  7644  0010B4  D039               	goto	l5537
  7645                           	line	269
  7646                           	
  7647  0010B6                     l5539:; BSR set to: 0
  7648                           
  7649                           	line	270
  7650                           	
  7651  0010B6                     l18405:
  7652                           ;messages.c: 269: }
  7653                           ;messages.c: 270: if (check_msg(&ToMainLow_MQ)) {
  7654  0010B6  0100               	movlb	0	; () banked
  7655  0010B8  0E00               	movlw	high(_ToMainLow_MQ)
  7656  0010BA  0100               	movlb	0	; () banked
  7657  0010BC  0100               	movlb	0	; () banked
  7658  0010BE  6FD7               	movwf	((?_check_msg+1))&0ffh
  7659  0010C0  0100               	movlb	0	; () banked
  7660  0010C2  0E80               	movlw	low(_ToMainLow_MQ)
  7661  0010C4  0100               	movlb	0	; () banked
  7662  0010C6  6FD6               	movwf	((?_check_msg))&0ffh
  7663  0010C8  0100               	movlb	0	; () banked
  7664  0010CA  EC50  F00D         	call	_check_msg	;wreg free
  7665  0010CE  0900               	iorlw	0
  7666  0010D0  B4D8               	btfsc	status,2
  7667  0010D2  D001               	goto	u1501
  7668  0010D4  D001               	goto	u1500
  7669  0010D6                     u1501:
  7670  0010D6  D009               	goto	l18413
  7671  0010D8                     u1500:
  7672                           	line	271
  7673                           	
  7674  0010D8                     l18407:
  7675                           ;messages.c: 271: MQ_Main_Willing_to_block = 0;
  7676  0010D8  0100               	movlb	0	; () banked
  7677  0010DA  6FDC               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7678  0010DC  0E00               	movlw	low(0)
  7679  0010DE  6E4B               	movwf	((c:_MQ_Main_Willing_to_block)),c
  7680  0010E0  0100               	movlb	0	; () banked
  7681  0010E2  51DC               	movf	(??_block_on_To_msgqueues+0+0)&0ffh,w
  7682                           	line	272
  7683                           	
  7684  0010E4                     l18409:; BSR set to: 0
  7685                           
  7686                           ;messages.c: 272: LATBbits.LATB3 = 0;
  7687  0010E4  968A               	bcf	((c:3978)),c,3	;volatile
  7688  0010E6  D020               	goto	l5537
  7689                           	line	273
  7690                           	
  7691  0010E8                     l18411:; BSR set to: 0
  7692                           
  7693                           ;messages.c: 273: return;
  7694  0010E8  D01F               	goto	l5537
  7695                           	line	274
  7696                           	
  7697  0010EA                     l5540:; BSR set to: 0
  7698                           
  7699                           	line	275
  7700                           	
  7701  0010EA                     l18413:
  7702                           ;messages.c: 274: }
  7703                           ;messages.c: 275: Delay1KTCYx(10);
  7704  0010EA  0100               	movlb	0	; () banked
  7705  0010EC  6FDC               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7706  0010EE  0E0A               	movlw	low(0Ah)
  7707  0010F0  0100               	movlb	0	; () banked
  7708  0010F2  0100               	movlb	0	; () banked
  7709  0010F4  6FD6               	movwf	((?_Delay1KTCYx))&0ffh
  7710  0010F6  0100               	movlb	0	; () banked
  7711  0010F8  51DC               	movf	(??_block_on_To_msgqueues+0+0)&0ffh,w
  7712  0010FA  0100               	movlb	0	; () banked
  7713  0010FC  EC76  F00E         	call	_Delay1KTCYx	;wreg free
  7714                           	line	276
  7715                           	
  7716  001100                     l18415:
  7717                           ;messages.c: 276: LATBbits.LATB3 = !LATBbits.LATB3;
  7718                           	
  7719  001100  A68A               	btfss	((c:3978)),c,3	;volatile
  7720  001102  D001               	goto	u1511
  7721  001104  D002               	goto	u1510
  7722  001106                     u1511:
  7723  001106  0E01               	movlw	1
  7724  001108  D001               	goto	u1516
  7725  00110A                     u1510:
  7726  00110A  0E00               	movlw	0
  7727  00110C                     u1516:
  7728  00110C  0100               	movlb	0	; () banked
  7729  00110E  6FDC               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7730  001110  0100               	movlb	0	; () banked
  7731  001112  47DC               	rlncf	((??_block_on_To_msgqueues+0+0))&0ffh
  7732  001114  47DC               	rlncf	((??_block_on_To_msgqueues+0+0))&0ffh
  7733  001116  47DC               	rlncf	((??_block_on_To_msgqueues+0+0))&0ffh
  7734  001118  508A               	movf	((c:3978)),c,w	;volatile
  7735  00111A  0100               	movlb	0	; () banked
  7736  00111C  19DC               	xorwf	((??_block_on_To_msgqueues+0+0))&0ffh,w
  7737  00111E  0BF7               	andlw	not (((1<<1)-1)<<3)
  7738  001120  19DC               	xorwf	((??_block_on_To_msgqueues+0+0))&0ffh,w
  7739  001122  6E8A               	movwf	((c:3978)),c	;volatile
  7740  001124  D7AE               	goto	l18397
  7741                           	line	277
  7742                           	
  7743  001126                     l5541:; BSR set to: 0
  7744                           
  7745                           	line	264
  7746  001126  D7AD               	goto	l18397
  7747                           	
  7748  001128                     l5542:; BSR set to: 0
  7749                           
  7750                           	line	278
  7751                           	
  7752  001128                     l5537:; BSR set to: 0
  7753                           
  7754  001128  0012               	return
  7755                           	opt stack 0
  7756                           GLOBAL	__end_of_block_on_To_msgqueues
  7757  00112A                     	__end_of_block_on_To_msgqueues:
  7758                           	signat	_block_on_To_msgqueues,88
  7759                           	global	_in_main
  7760                           
  7761 ;; *************** function _in_main *****************
  7762 ;; Defined at:
  7763 ;;		line 40 in file "../src/interrupts.c"
  7764 ;; Parameters:    Size  Location     Type
  7765 ;;		None
  7766 ;; Auto vars:     Size  Location     Type
  7767 ;;		None
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  2   36[BANK0 ] int 
  7770 ;; Registers used:
  7771 ;;		wreg, status,2, status,0, cstack
  7772 ;; Tracked objects:
  7773 ;;		On entry : 0/0
  7774 ;;		On exit  : 0/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7777 ;;      Params:         0       2       0       0       0
  7778 ;;      Locals:         0       0       0       0       0
  7779 ;;      Temps:          0       0       0       0       0
  7780 ;;      Totals:         0       2       0       0       0
  7781 ;;Total ram usage:        2 bytes
  7782 ;; Hardware stack levels used:    1
  7783 ;; Hardware stack levels required when called:   12
  7784 ;; This function calls:
  7785 ;;		_in_low_int
  7786 ;;		_in_high_int
  7787 ;; This function is called by:
  7788 ;;		_block_on_To_msgqueues
  7789 ;; This function uses a non-reentrant model
  7790 ;;
  7791                           psect	text10,class=CODE,space=0,reloc=2
  7792                           global __ptext10
  7793  001854                     __ptext10:
  7794                           psect	text10
  7795                           	file	"../src/interrupts.c"
  7796                           	line	40
  7797                           	global	__size_of_in_main
  7798  0000                     	__size_of_in_main	equ	__end_of_in_main-_in_main
  7799                           	
  7800  001854                     _in_main:; BSR set to: 0
  7801                           
  7802                           	opt	stack 16
  7803                           	line	41
  7804                           	
  7805  001854                     l18029:
  7806                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  7807  001854  0100               	movlb	0	; () banked
  7808  001856  ECFB  F00B         	call	_in_low_int	;wreg free
  7809  00185A  0100               	movlb	0	; () banked
  7810  00185C  0100               	movlb	0	; () banked
  7811  00185E  51D9               	movf	(1+?_in_low_int)&0ffh,w
  7812  001860  0100               	movlb	0	; () banked
  7813  001862  11D8               	iorwf (0+?_in_low_int)&0ffh,w
  7814                           
  7815  001864  A4D8               	btfss	status,2
  7816  001866  D001               	goto	u971
  7817  001868  D001               	goto	u970
  7818  00186A                     u971:
  7819  00186A  D016               	goto	l18039
  7820  00186C                     u970:
  7821                           	
  7822  00186C                     l18031:; BSR set to: 0
  7823                           
  7824  00186C  0100               	movlb	0	; () banked
  7825  00186E  EC6C  F00E         	call	_in_high_int	;wreg free
  7826  001872  0100               	movlb	0	; () banked
  7827  001874  0100               	movlb	0	; () banked
  7828  001876  51D7               	movf	(1+?_in_high_int)&0ffh,w
  7829  001878  0100               	movlb	0	; () banked
  7830  00187A  11D6               	iorwf (0+?_in_high_int)&0ffh,w
  7831                           
  7832  00187C  A4D8               	btfss	status,2
  7833  00187E  D001               	goto	u981
  7834  001880  D001               	goto	u980
  7835  001882                     u981:
  7836  001882  D00A               	goto	l18039
  7837  001884                     u980:
  7838                           	line	42
  7839                           	
  7840  001884                     l18033:; BSR set to: 0
  7841                           
  7842                           ;interrupts.c: 42: return (1);
  7843  001884  0E00               	movlw	high(01h)
  7844  001886  0100               	movlb	0	; () banked
  7845  001888  0100               	movlb	0	; () banked
  7846  00188A  6FDB               	movwf	((?_in_main+1))&0ffh
  7847  00188C  0E01               	movlw	low(01h)
  7848  00188E  0100               	movlb	0	; () banked
  7849  001890  6FDA               	movwf	((?_in_main))&0ffh
  7850  001892  D00B               	goto	l1816
  7851                           	
  7852  001894                     l18035:; BSR set to: 0
  7853                           
  7854  001894  D00A               	goto	l1816
  7855                           	line	43
  7856                           	
  7857  001896                     l18037:; BSR set to: 0
  7858                           
  7859                           ;interrupts.c: 43: } else {
  7860  001896  D009               	goto	l1816
  7861                           	
  7862  001898                     l1815:; BSR set to: 0
  7863                           
  7864                           	line	44
  7865                           	
  7866  001898                     l18039:; BSR set to: 0
  7867                           
  7868                           ;interrupts.c: 44: return (0);
  7869  001898  0E00               	movlw	high(0)
  7870  00189A  0100               	movlb	0	; () banked
  7871  00189C  0100               	movlb	0	; () banked
  7872  00189E  6FDB               	movwf	((?_in_main+1))&0ffh
  7873  0018A0  0E00               	movlw	low(0)
  7874  0018A2  0100               	movlb	0	; () banked
  7875  0018A4  6FDA               	movwf	((?_in_main))&0ffh
  7876  0018A6  D001               	goto	l1816
  7877                           	
  7878  0018A8                     l18041:; BSR set to: 0
  7879                           
  7880  0018A8  D000               	goto	l1816
  7881                           	line	45
  7882                           	
  7883  0018AA                     l1817:; BSR set to: 0
  7884                           
  7885                           	line	46
  7886                           	
  7887  0018AA                     l1816:; BSR set to: 0
  7888                           
  7889  0018AA  0012               	return
  7890                           	opt stack 0
  7891                           GLOBAL	__end_of_in_main
  7892  0018AC                     	__end_of_in_main:
  7893                           	signat	_in_main,90
  7894                           	global	_in_low_int
  7895                           
  7896 ;; *************** function _in_low_int *****************
  7897 ;; Defined at:
  7898 ;;		line 30 in file "../src/interrupts.c"
  7899 ;; Parameters:    Size  Location     Type
  7900 ;;		None
  7901 ;; Auto vars:     Size  Location     Type
  7902 ;;		None
  7903 ;; Return value:  Size  Location     Type
  7904 ;;                  2   34[BANK0 ] int 
  7905 ;; Registers used:
  7906 ;;		wreg, status,2, status,0, cstack
  7907 ;; Tracked objects:
  7908 ;;		On entry : 0/0
  7909 ;;		On exit  : 0/0
  7910 ;;		Unchanged: 0/0
  7911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7912 ;;      Params:         0       2       0       0       0
  7913 ;;      Locals:         0       0       0       0       0
  7914 ;;      Temps:          0       0       0       0       0
  7915 ;;      Totals:         0       2       0       0       0
  7916 ;;Total ram usage:        2 bytes
  7917 ;; Hardware stack levels used:    1
  7918 ;; Hardware stack levels required when called:   11
  7919 ;; This function calls:
  7920 ;;		_in_high_int
  7921 ;; This function is called by:
  7922 ;;		_in_main
  7923 ;; This function uses a non-reentrant model
  7924 ;;
  7925                           psect	text11,class=CODE,space=0,reloc=2
  7926                           global __ptext11
  7927  0017F6                     __ptext11:
  7928                           psect	text11
  7929                           	file	"../src/interrupts.c"
  7930                           	line	30
  7931                           	global	__size_of_in_low_int
  7932  0000                     	__size_of_in_low_int	equ	__end_of_in_low_int-_in_low_int
  7933                           	
  7934  0017F6                     _in_low_int:; BSR set to: 0
  7935                           
  7936                           	opt	stack 16
  7937                           	line	31
  7938                           	
  7939  0017F6                     l18009:
  7940                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  7941                           	
  7942  0017F6  ACF2               	btfss	((c:4082)),c,6	;volatile
  7943  0017F8  D001               	goto	u951
  7944  0017FA  D001               	goto	u950
  7945  0017FC                     u951:
  7946  0017FC  D00A               	goto	l18017
  7947  0017FE                     u950:
  7948                           	line	32
  7949                           	
  7950  0017FE                     l18011:
  7951                           ;interrupts.c: 32: return (0);
  7952  0017FE  0E00               	movlw	high(0)
  7953  001800  0100               	movlb	0	; () banked
  7954  001802  0100               	movlb	0	; () banked
  7955  001804  6FD9               	movwf	((?_in_low_int+1))&0ffh
  7956  001806  0E00               	movlw	low(0)
  7957  001808  0100               	movlb	0	; () banked
  7958  00180A  6FD8               	movwf	((?_in_low_int))&0ffh
  7959  00180C  D022               	goto	l1809
  7960                           	
  7961  00180E                     l18013:; BSR set to: 0
  7962                           
  7963  00180E  D021               	goto	l1809
  7964                           	line	33
  7965                           	
  7966  001810                     l18015:; BSR set to: 0
  7967                           
  7968                           ;interrupts.c: 33: } else if (in_high_int()) {
  7969  001810  D020               	goto	l1809
  7970                           	
  7971  001812                     l1808:; BSR set to: 0
  7972                           
  7973                           	
  7974  001812                     l18017:
  7975  001812  0100               	movlb	0	; () banked
  7976  001814  EC6C  F00E         	call	_in_high_int	;wreg free
  7977  001818  0100               	movlb	0	; () banked
  7978  00181A  0100               	movlb	0	; () banked
  7979  00181C  51D7               	movf	(1+?_in_high_int)&0ffh,w
  7980  00181E  0100               	movlb	0	; () banked
  7981  001820  11D6               	iorwf (0+?_in_high_int)&0ffh,w
  7982                           
  7983  001822  B4D8               	btfsc	status,2
  7984  001824  D001               	goto	u961
  7985  001826  D001               	goto	u960
  7986  001828                     u961:
  7987  001828  D00A               	goto	l18025
  7988  00182A                     u960:
  7989                           	line	34
  7990                           	
  7991  00182A                     l18019:; BSR set to: 0
  7992                           
  7993                           ;interrupts.c: 34: return (0);
  7994  00182A  0E00               	movlw	high(0)
  7995  00182C  0100               	movlb	0	; () banked
  7996  00182E  0100               	movlb	0	; () banked
  7997  001830  6FD9               	movwf	((?_in_low_int+1))&0ffh
  7998  001832  0E00               	movlw	low(0)
  7999  001834  0100               	movlb	0	; () banked
  8000  001836  6FD8               	movwf	((?_in_low_int))&0ffh
  8001  001838  D00C               	goto	l1809
  8002                           	
  8003  00183A                     l18021:; BSR set to: 0
  8004                           
  8005  00183A  D00B               	goto	l1809
  8006                           	line	35
  8007                           	
  8008  00183C                     l18023:; BSR set to: 0
  8009                           
  8010                           ;interrupts.c: 35: } else {
  8011  00183C  D00A               	goto	l1809
  8012                           	
  8013  00183E                     l1811:; BSR set to: 0
  8014                           
  8015                           	line	36
  8016                           	
  8017  00183E                     l18025:; BSR set to: 0
  8018                           
  8019                           ;interrupts.c: 36: return (1);
  8020  00183E  0E00               	movlw	high(01h)
  8021  001840  0100               	movlb	0	; () banked
  8022  001842  0100               	movlb	0	; () banked
  8023  001844  6FD9               	movwf	((?_in_low_int+1))&0ffh
  8024  001846  0E01               	movlw	low(01h)
  8025  001848  0100               	movlb	0	; () banked
  8026  00184A  6FD8               	movwf	((?_in_low_int))&0ffh
  8027  00184C  D002               	goto	l1809
  8028                           	
  8029  00184E                     l18027:; BSR set to: 0
  8030                           
  8031  00184E  D001               	goto	l1809
  8032                           	line	37
  8033                           	
  8034  001850                     l1812:; BSR set to: 0
  8035                           
  8036  001850  D000               	goto	l1809
  8037                           	
  8038  001852                     l1810:; BSR set to: 0
  8039                           
  8040                           	line	38
  8041                           	
  8042  001852                     l1809:; BSR set to: 0
  8043                           
  8044  001852  0012               	return
  8045                           	opt stack 0
  8046                           GLOBAL	__end_of_in_low_int
  8047  001854                     	__end_of_in_low_int:
  8048                           	signat	_in_low_int,90
  8049                           	global	_in_high_int
  8050                           
  8051 ;; *************** function _in_high_int *****************
  8052 ;; Defined at:
  8053 ;;		line 22 in file "../src/interrupts.c"
  8054 ;; Parameters:    Size  Location     Type
  8055 ;;		None
  8056 ;; Auto vars:     Size  Location     Type
  8057 ;;		None
  8058 ;; Return value:  Size  Location     Type
  8059 ;;                  2   32[BANK0 ] int 
  8060 ;; Registers used:
  8061 ;;		wreg, status,2
  8062 ;; Tracked objects:
  8063 ;;		On entry : 0/0
  8064 ;;		On exit  : 0/0
  8065 ;;		Unchanged: 0/0
  8066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8067 ;;      Params:         0       2       0       0       0
  8068 ;;      Locals:         0       0       0       0       0
  8069 ;;      Temps:          0       0       0       0       0
  8070 ;;      Totals:         0       2       0       0       0
  8071 ;;Total ram usage:        2 bytes
  8072 ;; Hardware stack levels used:    1
  8073 ;; Hardware stack levels required when called:   10
  8074 ;; This function calls:
  8075 ;;		Nothing
  8076 ;; This function is called by:
  8077 ;;		_in_low_int
  8078 ;;		_in_main
  8079 ;; This function uses a non-reentrant model
  8080 ;;
  8081                           psect	text12,class=CODE,space=0,reloc=2
  8082                           global __ptext12
  8083  001CD8                     __ptext12:
  8084                           psect	text12
  8085                           	file	"../src/interrupts.c"
  8086                           	line	22
  8087                           	global	__size_of_in_high_int
  8088  0000                     	__size_of_in_high_int	equ	__end_of_in_high_int-_in_high_int
  8089                           	
  8090  001CD8                     _in_high_int:; BSR set to: 0
  8091                           
  8092                           	opt	stack 17
  8093                           	line	23
  8094                           	
  8095  001CD8                     l18005:
  8096                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  8097                           	
  8098  001CD8  0E00               	movlw	0
  8099  001CDA  AEF2               	btfss	((c:4082)),c,7	;volatile
  8100  001CDC  0E01               	movlw	1
  8101  001CDE  0100               	movlb	0	; () banked
  8102  001CE0  0100               	movlb	0	; () banked
  8103  001CE2  6FD6               	movwf	((?_in_high_int))&0ffh
  8104  001CE4  0100               	movlb	0	; () banked
  8105  001CE6  6BD7               	clrf	((?_in_high_int+1))&0ffh
  8106  001CE8  D000               	goto	l1802
  8107                           	
  8108  001CEA                     l18007:; BSR set to: 0
  8109                           
  8110                           	line	24
  8111                           	
  8112  001CEA                     l1802:; BSR set to: 0
  8113                           
  8114  001CEA  0012               	return
  8115                           	opt stack 0
  8116                           GLOBAL	__end_of_in_high_int
  8117  001CEC                     	__end_of_in_high_int:
  8118                           	signat	_in_high_int,90
  8119                           	global	_ToMainHigh_recvmsg
  8120                           
  8121 ;; *************** function _ToMainHigh_recvmsg *****************
  8122 ;; Defined at:
  8123 ;;		line 135 in file "../src/messages.c"
  8124 ;; Parameters:    Size  Location     Type
  8125 ;;  maxlength       1   16[BANK1 ] unsigned char 
  8126 ;;  msgtype         2   17[BANK1 ] PTR unsigned char 
  8127 ;;		 -> main@msgtype(1), 
  8128 ;;  data            2   19[BANK1 ] PTR void 
  8129 ;;		 -> main@msgbuffer(11), 
  8130 ;; Auto vars:     Size  Location     Type
  8131 ;;		None
  8132 ;; Return value:  Size  Location     Type
  8133 ;;                  1    wreg      char 
  8134 ;; Registers used:
  8135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8136 ;; Tracked objects:
  8137 ;;		On entry : 0/0
  8138 ;;		On exit  : 0/0
  8139 ;;		Unchanged: 0/0
  8140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8141 ;;      Params:         0       0       5       0       0
  8142 ;;      Locals:         0       0       0       0       0
  8143 ;;      Temps:          0       0       0       0       0
  8144 ;;      Totals:         0       0       5       0       0
  8145 ;;Total ram usage:        5 bytes
  8146 ;; Hardware stack levels used:    1
  8147 ;; Hardware stack levels required when called:   12
  8148 ;; This function calls:
  8149 ;;		_recv_msg
  8150 ;; This function is called by:
  8151 ;;		_main
  8152 ;; This function uses a non-reentrant model
  8153 ;;
  8154                           psect	text13,class=CODE,space=0,reloc=2
  8155                           global __ptext13
  8156  001B10                     __ptext13:
  8157                           psect	text13
  8158                           	file	"../src/messages.c"
  8159                           	line	135
  8160                           	global	__size_of_ToMainHigh_recvmsg
  8161  0000                     	__size_of_ToMainHigh_recvmsg	equ	__end_of_ToMainHigh_recvmsg-_ToMainHigh_recvmsg
  8162                           	
  8163  001B10                     _ToMainHigh_recvmsg:; BSR set to: 0
  8164                           
  8165                           	opt	stack 17
  8166                           	line	141
  8167                           	
  8168  001B10                     l19017:
  8169                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  8170  001B10  0101               	movlb	1	; () banked
  8171  001B12  0E01               	movlw	high(_ToMainHigh_MQ)
  8172  001B14  0101               	movlb	1	; () banked
  8173  001B16  0101               	movlb	1	; () banked
  8174  001B18  6FA7               	movwf	((?_recv_msg+1))&0ffh
  8175  001B1A  0101               	movlb	1	; () banked
  8176  001B1C  0E6C               	movlw	low(_ToMainHigh_MQ)
  8177  001B1E  0101               	movlb	1	; () banked
  8178  001B20  6FA6               	movwf	((?_recv_msg))&0ffh
  8179  001B22  C1B2  F1A8         	movff	(ToMainHigh_recvmsg@maxlength),0+(?_recv_msg+02h)
  8180  001B26  C1B3  F1A9         	movff	(ToMainHigh_recvmsg@msgtype),0+(?_recv_msg+03h)
  8181  001B2A  C1B4  F1AA         	movff	(ToMainHigh_recvmsg@msgtype+1),1+(?_recv_msg+03h)
  8182  001B2E  C1B5  F1AB         	movff	(ToMainHigh_recvmsg@data),0+(?_recv_msg+05h)
  8183  001B32  C1B6  F1AC         	movff	(ToMainHigh_recvmsg@data+1),1+(?_recv_msg+05h)
  8184  001B36  0101               	movlb	1	; () banked
  8185  001B38  EC0D  F006         	call	_recv_msg	;wreg free
  8186  001B3C  D000               	goto	l5498
  8187                           	
  8188  001B3E                     l19019:
  8189                           	line	142
  8190                           	
  8191  001B3E                     l5498:
  8192  001B3E  0012               	return
  8193                           	opt stack 0
  8194                           GLOBAL	__end_of_ToMainHigh_recvmsg
  8195  001B40                     	__end_of_ToMainHigh_recvmsg:
  8196                           	signat	_ToMainHigh_recvmsg,12409
  8197                           	global	_timer0_lthread
  8198                           
  8199 ;; *************** function _timer0_lthread *****************
  8200 ;; Defined at:
  8201 ;;		line 9 in file "../src/timer0_thread.c"
  8202 ;; Parameters:    Size  Location     Type
  8203 ;;  tptr            2   32[BANK0 ] PTR struct __timer0_thre
  8204 ;;		 -> main@t0thread_data(2), 
  8205 ;;  msgtype         2   34[BANK0 ] int 
  8206 ;;  length          2   36[BANK0 ] int 
  8207 ;;  msgbuffer       2   38[BANK0 ] PTR unsigned char 
  8208 ;;		 -> main@msgbuffer(11), 
  8209 ;; Auto vars:     Size  Location     Type
  8210 ;;  msgval          2    0[BANK1 ] PTR unsigned int 
  8211 ;;		 -> main@msgbuffer(11), 
  8212 ;; Return value:  Size  Location     Type
  8213 ;;                  2   32[BANK0 ] int 
  8214 ;; Registers used:
  8215 ;;		None
  8216 ;; Tracked objects:
  8217 ;;		On entry : 0/0
  8218 ;;		On exit  : 0/0
  8219 ;;		Unchanged: 0/0
  8220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8221 ;;      Params:         0       8       0       0       0
  8222 ;;      Locals:         0       0       2       0       0
  8223 ;;      Temps:          0       0       0       0       0
  8224 ;;      Totals:         0       8       2       0       0
  8225 ;;Total ram usage:       10 bytes
  8226 ;; Hardware stack levels used:    1
  8227 ;; Hardware stack levels required when called:   10
  8228 ;; This function calls:
  8229 ;;		Nothing
  8230 ;; This function is called by:
  8231 ;;		_main
  8232 ;; This function uses a non-reentrant model
  8233 ;;
  8234                           psect	text14,class=CODE,space=0,reloc=2
  8235                           global __ptext14
  8236  001D50                     __ptext14:
  8237                           psect	text14
  8238                           	file	"../src/timer0_thread.c"
  8239                           	line	9
  8240                           	global	__size_of_timer0_lthread
  8241  0000                     	__size_of_timer0_lthread	equ	__end_of_timer0_lthread-_timer0_lthread
  8242                           	
  8243  001D50                     _timer0_lthread:
  8244                           	opt	stack 19
  8245                           	line	12
  8246                           	
  8247  001D50                     l19021:
  8248                           ;timer0_thread.c: 10: unsigned int *msgval;
  8249                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  8250  001D50  C0DC  F1A2         	movff	(timer0_lthread@msgbuffer),(timer0_lthread@msgval)
  8251  001D54  C0DD  F1A3         	movff	(timer0_lthread@msgbuffer+1),(timer0_lthread@msgval+1)
  8252                           	line	16
  8253                           	
  8254  001D58                     l10992:
  8255  001D58  0012               	return
  8256                           	opt stack 0
  8257                           GLOBAL	__end_of_timer0_lthread
  8258  001D5A                     	__end_of_timer0_lthread:
  8259                           	signat	_timer0_lthread,16506
  8260                           	global	_start_i2c_slave_reply
  8261                           
  8262 ;; *************** function _start_i2c_slave_reply *****************
  8263 ;; Defined at:
  8264 ;;		line 53 in file "../src/my_i2c.c"
  8265 ;; Parameters:    Size  Location     Type
  8266 ;;  length          1   32[BANK0 ] unsigned char 
  8267 ;;  msg             2   33[BANK0 ] PTR unsigned char 
  8268 ;;		 -> main@msgbuffer(11), 
  8269 ;; Auto vars:     Size  Location     Type
  8270 ;;		None
  8271 ;; Return value:  Size  Location     Type
  8272 ;;		None               void
  8273 ;; Registers used:
  8274 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8275 ;; Tracked objects:
  8276 ;;		On entry : 0/0
  8277 ;;		On exit  : 0/0
  8278 ;;		Unchanged: 0/0
  8279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8280 ;;      Params:         0       3       0       0       0
  8281 ;;      Locals:         0       0       0       0       0
  8282 ;;      Temps:          0       2       0       0       0
  8283 ;;      Totals:         0       5       0       0       0
  8284 ;;Total ram usage:        5 bytes
  8285 ;; Hardware stack levels used:    1
  8286 ;; Hardware stack levels required when called:   10
  8287 ;; This function calls:
  8288 ;;		Nothing
  8289 ;; This function is called by:
  8290 ;;		_main
  8291 ;; This function uses a non-reentrant model
  8292 ;;
  8293                           psect	text15,class=CODE,space=0,reloc=2
  8294                           global __ptext15
  8295  000E6E                     __ptext15:
  8296                           psect	text15
  8297                           	file	"../src/my_i2c.c"
  8298                           	line	53
  8299                           	global	__size_of_start_i2c_slave_reply
  8300  0000                     	__size_of_start_i2c_slave_reply	equ	__end_of_start_i2c_slave_reply-_start_i2c_slave_rep
                                 ly
  8301                           	
  8302  000E6E                     _start_i2c_slave_reply:
  8303                           	opt	stack 19
  8304                           	line	55
  8305                           	
  8306  000E6E                     l18423:
  8307                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
                                 ++) {
  8308  000E6E  0100               	movlb	0	; () banked
  8309  000E70  EE20 F019          	lfsr	2,019h
  8310  000E74  0100               	movlb	0	; () banked
  8311  000E76  51DE               	movf	((_ic_ptr))&0ffh,w
  8312  000E78  26D9               	addwf	fsr2l
  8313  000E7A  0100               	movlb	0	; () banked
  8314  000E7C  51DF               	movf	((_ic_ptr+1))&0ffh,w
  8315  000E7E  22DA               	addwfc	fsr2h
  8316  000E80  0E00               	movlw	low(0)
  8317  000E82  6EDF               	movwf	indf2
  8318  000E84  D043               	goto	l18429
  8319                           	
  8320  000E86                     l7343:; BSR set to: 0
  8321                           
  8322                           	line	56
  8323                           	
  8324  000E86                     l18425:; BSR set to: 0
  8325                           
  8326                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  8327  000E86  0100               	movlb	0	; () banked
  8328  000E88  EE20 F019          	lfsr	2,019h
  8329  000E8C  0100               	movlb	0	; () banked
  8330  000E8E  51DE               	movf	((_ic_ptr))&0ffh,w
  8331  000E90  26D9               	addwf	fsr2l
  8332  000E92  0100               	movlb	0	; () banked
  8333  000E94  51DF               	movf	((_ic_ptr+1))&0ffh,w
  8334  000E96  22DA               	addwfc	fsr2h
  8335  000E98  50DF               	movf	indf2,w
  8336  000E9A  0100               	movlb	0	; () banked
  8337  000E9C  6FD9               	movwf	(??_start_i2c_slave_reply+0+0)&0ffh
  8338  000E9E  0100               	movlb	0	; () banked
  8339  000EA0  51D9               	movf	((??_start_i2c_slave_reply+0+0))&0ffh,w
  8340  000EA2  0D01               	mullw	01h
  8341  000EA4  50F3               	movf	(prodl),c,w
  8342  000EA6  0100               	movlb	0	; () banked
  8343  000EA8  0100               	movlb	0	; () banked
  8344  000EAA  25D7               	addwf	((start_i2c_slave_reply@msg))&0ffh,w
  8345  000EAC  6ED9               	movwf	c:fsr2l
  8346  000EAE  50F4               	movf	(prodh),c,w
  8347  000EB0  0100               	movlb	0	; () banked
  8348  000EB2  0100               	movlb	0	; () banked
  8349  000EB4  21D8               	addwfc	((start_i2c_slave_reply@msg+1))&0ffh,w
  8350  000EB6  6EDA               	movwf	1+c:fsr2l
  8351  000EB8  0100               	movlb	0	; () banked
  8352  000EBA  EE10 F019          	lfsr	1,019h
  8353  000EBE  0100               	movlb	0	; () banked
  8354  000EC0  51DE               	movf	((_ic_ptr))&0ffh,w
  8355  000EC2  26E1               	addwf	fsr1l
  8356  000EC4  0100               	movlb	0	; () banked
  8357  000EC6  51DF               	movf	((_ic_ptr+1))&0ffh,w
  8358  000EC8  22E2               	addwfc	fsr1h
  8359  000ECA  50E7               	movf	indf1,w
  8360  000ECC  0100               	movlb	0	; () banked
  8361  000ECE  6FDA               	movwf	(??_start_i2c_slave_reply+1+0)&0ffh
  8362  000ED0  0100               	movlb	0	; () banked
  8363  000ED2  51DA               	movf	((??_start_i2c_slave_reply+1+0))&0ffh,w
  8364  000ED4  0D01               	mullw	01h
  8365  000ED6  0E0F               	movlw	0Fh
  8366  000ED8  26F3               	addwf	(prodl),c
  8367  000EDA  0E00               	movlw	0
  8368  000EDC  22F4               	addwfc	(prodh),c
  8369  000EDE  50F3               	movf	(prodl),c,w
  8370  000EE0  0100               	movlb	0	; () banked
  8371  000EE2  0100               	movlb	0	; () banked
  8372  000EE4  25DE               	addwf	((_ic_ptr))&0ffh,w
  8373  000EE6  6EE1               	movwf	c:fsr1l
  8374  000EE8  50F4               	movf	(prodh),c,w
  8375  000EEA  0100               	movlb	0	; () banked
  8376  000EEC  0100               	movlb	0	; () banked
  8377  000EEE  21DF               	addwfc	((_ic_ptr+1))&0ffh,w
  8378  000EF0  6EE2               	movwf	1+c:fsr1l
  8379  000EF2  CFDF FFE7          	movff	indf2,indf1
  8380                           	line	55
  8381                           	
  8382  000EF6                     l18427:; BSR set to: 0
  8383                           
  8384  000EF6  0100               	movlb	0	; () banked
  8385  000EF8  EE20 F019          	lfsr	2,019h
  8386  000EFC  0100               	movlb	0	; () banked
  8387  000EFE  51DE               	movf	((_ic_ptr))&0ffh,w
  8388  000F00  26D9               	addwf	fsr2l
  8389  000F02  0100               	movlb	0	; () banked
  8390  000F04  51DF               	movf	((_ic_ptr+1))&0ffh,w
  8391  000F06  22DA               	addwfc	fsr2h
  8392  000F08  2ADF               	incf	indf2
  8393                           
  8394  000F0A  D000               	goto	l18429
  8395                           	
  8396  000F0C                     l7342:; BSR set to: 0
  8397                           
  8398                           	
  8399  000F0C                     l18429:; BSR set to: 0
  8400                           
  8401  000F0C  0100               	movlb	0	; () banked
  8402  000F0E  EE20 F019          	lfsr	2,019h
  8403  000F12  0100               	movlb	0	; () banked
  8404  000F14  51DE               	movf	((_ic_ptr))&0ffh,w
  8405  000F16  26D9               	addwf	fsr2l
  8406  000F18  0100               	movlb	0	; () banked
  8407  000F1A  51DF               	movf	((_ic_ptr+1))&0ffh,w
  8408  000F1C  22DA               	addwfc	fsr2h
  8409  000F1E  50DF               	movf	indf2,w
  8410  000F20  0100               	movlb	0	; () banked
  8411  000F22  6FD9               	movwf	(??_start_i2c_slave_reply+0+0)&0ffh
  8412  000F24  0100               	movlb	0	; () banked
  8413  000F26  0100               	movlb	0	; () banked
  8414  000F28  51D6               	movf	((start_i2c_slave_reply@length))&0ffh,w
  8415  000F2A  0100               	movlb	0	; () banked
  8416  000F2C  5DD9               	subwf	((??_start_i2c_slave_reply+0+0))&0ffh,w
  8417  000F2E  A0D8               	btfss	status,0
  8418  000F30  D001               	goto	u1521
  8419  000F32  D001               	goto	u1520
  8420  000F34                     u1521:
  8421  000F34  D7A8               	goto	l18425
  8422  000F36                     u1520:
  8423  000F36  D000               	goto	l18431
  8424                           	
  8425  000F38                     l7344:; BSR set to: 0
  8426                           
  8427                           	line	58
  8428                           	
  8429  000F38                     l18431:; BSR set to: 0
  8430                           
  8431                           ;my_i2c.c: 57: }
  8432                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  8433  000F38  0100               	movlb	0	; () banked
  8434  000F3A  EE20 F019          	lfsr	2,019h
  8435  000F3E  0100               	movlb	0	; () banked
  8436  000F40  51DE               	movf	((_ic_ptr))&0ffh,w
  8437  000F42  26D9               	addwf	fsr2l
  8438  000F44  0100               	movlb	0	; () banked
  8439  000F46  51DF               	movf	((_ic_ptr+1))&0ffh,w
  8440  000F48  22DA               	addwfc	fsr2h
  8441  000F4A  0100               	movlb	0	; () banked
  8442  000F4C  C0D6  FFDF         	movff	(start_i2c_slave_reply@length),indf2
  8443                           
  8444                           	line	59
  8445                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  8446  000F50  0100               	movlb	0	; () banked
  8447  000F52  EE20 F01A          	lfsr	2,01Ah
  8448  000F56  0100               	movlb	0	; () banked
  8449  000F58  51DE               	movf	((_ic_ptr))&0ffh,w
  8450  000F5A  26D9               	addwf	fsr2l
  8451  000F5C  0100               	movlb	0	; () banked
  8452  000F5E  51DF               	movf	((_ic_ptr+1))&0ffh,w
  8453  000F60  22DA               	addwfc	fsr2h
  8454  000F62  0E01               	movlw	low(01h)
  8455  000F64  6EDF               	movwf	indf2
  8456                           	line	62
  8457                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  8458  000F66  0100               	movlb	0	; () banked
  8459  000F68  EE20 F00F          	lfsr	2,0Fh
  8460  000F6C  0100               	movlb	0	; () banked
  8461  000F6E  51DE               	movf	((_ic_ptr))&0ffh,w
  8462  000F70  26D9               	addwf	fsr2l
  8463  000F72  0100               	movlb	0	; () banked
  8464  000F74  51DF               	movf	((_ic_ptr+1))&0ffh,w
  8465  000F76  22DA               	addwfc	fsr2h
  8466  000F78  50DF               	movf	indf2,w
  8467  000F7A  6EC9               	movwf	((c:4041)),c	;volatile
  8468                           	line	65
  8469                           	
  8470  000F7C                     l18433:; BSR set to: 0
  8471                           
  8472                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  8473  000F7C  88C6               	bsf	((c:4038)),c,4	;volatile
  8474                           	line	67
  8475                           	
  8476  000F7E                     l7345:; BSR set to: 0
  8477                           
  8478  000F7E  0012               	return
  8479                           	opt stack 0
  8480                           GLOBAL	__end_of_start_i2c_slave_reply
  8481  000F80                     	__end_of_start_i2c_slave_reply:
  8482                           	signat	_start_i2c_slave_reply,8312
  8483                           	global	_ToMainLow_recvmsg
  8484                           
  8485 ;; *************** function _ToMainLow_recvmsg *****************
  8486 ;; Defined at:
  8487 ;;		line 112 in file "../src/messages.c"
  8488 ;; Parameters:    Size  Location     Type
  8489 ;;  maxlength       1   16[BANK1 ] unsigned char 
  8490 ;;  msgtype         2   17[BANK1 ] PTR unsigned char 
  8491 ;;		 -> main@msgtype(1), 
  8492 ;;  data            2   19[BANK1 ] PTR void 
  8493 ;;		 -> main@msgbuffer(11), 
  8494 ;; Auto vars:     Size  Location     Type
  8495 ;;		None
  8496 ;; Return value:  Size  Location     Type
  8497 ;;                  1    wreg      char 
  8498 ;; Registers used:
  8499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8500 ;; Tracked objects:
  8501 ;;		On entry : 0/0
  8502 ;;		On exit  : 0/0
  8503 ;;		Unchanged: 0/0
  8504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8505 ;;      Params:         0       0       5       0       0
  8506 ;;      Locals:         0       0       0       0       0
  8507 ;;      Temps:          0       0       0       0       0
  8508 ;;      Totals:         0       0       5       0       0
  8509 ;;Total ram usage:        5 bytes
  8510 ;; Hardware stack levels used:    1
  8511 ;; Hardware stack levels required when called:   12
  8512 ;; This function calls:
  8513 ;;		_recv_msg
  8514 ;; This function is called by:
  8515 ;;		_main
  8516 ;; This function uses a non-reentrant model
  8517 ;;
  8518                           psect	text16,class=CODE,space=0,reloc=2
  8519                           global __ptext16
  8520  001B40                     __ptext16:
  8521                           psect	text16
  8522                           	file	"../src/messages.c"
  8523                           	line	112
  8524                           	global	__size_of_ToMainLow_recvmsg
  8525  0000                     	__size_of_ToMainLow_recvmsg	equ	__end_of_ToMainLow_recvmsg-_ToMainLow_recvmsg
  8526                           	
  8527  001B40                     _ToMainLow_recvmsg:; BSR set to: 0
  8528                           
  8529                           	opt	stack 17
  8530                           	line	118
  8531                           	
  8532  001B40                     l19023:
  8533                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  8534  001B40  0100               	movlb	0	; () banked
  8535  001B42  0E00               	movlw	high(_ToMainLow_MQ)
  8536  001B44  0101               	movlb	1	; () banked
  8537  001B46  0101               	movlb	1	; () banked
  8538  001B48  6FA7               	movwf	((?_recv_msg+1))&0ffh
  8539  001B4A  0100               	movlb	0	; () banked
  8540  001B4C  0E80               	movlw	low(_ToMainLow_MQ)
  8541  001B4E  0101               	movlb	1	; () banked
  8542  001B50  6FA6               	movwf	((?_recv_msg))&0ffh
  8543  001B52  C1B2  F1A8         	movff	(ToMainLow_recvmsg@maxlength),0+(?_recv_msg+02h)
  8544  001B56  C1B3  F1A9         	movff	(ToMainLow_recvmsg@msgtype),0+(?_recv_msg+03h)
  8545  001B5A  C1B4  F1AA         	movff	(ToMainLow_recvmsg@msgtype+1),1+(?_recv_msg+03h)
  8546  001B5E  C1B5  F1AB         	movff	(ToMainLow_recvmsg@data),0+(?_recv_msg+05h)
  8547  001B62  C1B6  F1AC         	movff	(ToMainLow_recvmsg@data+1),1+(?_recv_msg+05h)
  8548  001B66  0101               	movlb	1	; () banked
  8549  001B68  EC0D  F006         	call	_recv_msg	;wreg free
  8550  001B6C  D000               	goto	l5490
  8551                           	
  8552  001B6E                     l19025:
  8553                           	line	119
  8554                           	
  8555  001B6E                     l5490:
  8556  001B6E  0012               	return
  8557                           	opt stack 0
  8558                           GLOBAL	__end_of_ToMainLow_recvmsg
  8559  001B70                     	__end_of_ToMainLow_recvmsg:
  8560                           	signat	_ToMainLow_recvmsg,12409
  8561                           	global	_timer1_lthread
  8562                           
  8563 ;; *************** function _timer1_lthread *****************
  8564 ;; Defined at:
  8565 ;;		line 24 in file "../src/timer1_thread.c"
  8566 ;; Parameters:    Size  Location     Type
  8567 ;;  tptr            2   32[BANK0 ] PTR struct __timer1_thre
  8568 ;;		 -> main@t1thread_data(2), 
  8569 ;;  msgtype         2   34[BANK0 ] int 
  8570 ;;  length          2   36[BANK0 ] int 
  8571 ;;  msgbuffer       2   38[BANK0 ] PTR unsigned char 
  8572 ;;		 -> main@msgbuffer(11), 
  8573 ;; Auto vars:     Size  Location     Type
  8574 ;;		None
  8575 ;; Return value:  Size  Location     Type
  8576 ;;                  2   32[BANK0 ] int 
  8577 ;; Registers used:
  8578 ;;		wreg, fsr2l, fsr2h, cstack
  8579 ;; Tracked objects:
  8580 ;;		On entry : 0/0
  8581 ;;		On exit  : 0/0
  8582 ;;		Unchanged: 0/0
  8583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8584 ;;      Params:         0       8       0       0       0
  8585 ;;      Locals:         0       0       0       0       0
  8586 ;;      Temps:          0       0       2       0       0
  8587 ;;      Totals:         0       8       2       0       0
  8588 ;;Total ram usage:       10 bytes
  8589 ;; Hardware stack levels used:    1
  8590 ;; Hardware stack levels required when called:   11
  8591 ;; This function calls:
  8592 ;;		_ConvertADC
  8593 ;; This function is called by:
  8594 ;;		_main
  8595 ;; This function uses a non-reentrant model
  8596 ;;
  8597                           psect	text17,class=CODE,space=0,reloc=2
  8598                           global __ptext17
  8599  001BEA                     __ptext17:
  8600                           psect	text17
  8601                           	file	"../src/timer1_thread.c"
  8602                           	line	24
  8603                           	global	__size_of_timer1_lthread
  8604  0000                     	__size_of_timer1_lthread	equ	__end_of_timer1_lthread-_timer1_lthread
  8605                           	
  8606  001BEA                     _timer1_lthread:
  8607                           	opt	stack 18
  8608                           	line	26
  8609                           	
  8610  001BEA                     l19027:
  8611                           ;timer1_thread.c: 26: tptr->timerval = msgbuffer[0];
  8612  001BEA  C0DC  FFD9         	movff	(timer1_lthread@msgbuffer),fsr2l
  8613  001BEE  C0DD  FFDA         	movff	(timer1_lthread@msgbuffer+1),fsr2h
  8614  001BF2  50DF               	movf	indf2,w
  8615  001BF4  0101               	movlb	1	; () banked
  8616  001BF6  6FA2               	movwf	(??_timer1_lthread+0+0)&0ffh
  8617  001BF8  6BA3               	clrf	(??_timer1_lthread+0+0+1)&0ffh
  8618                           
  8619  001BFA  C0D6  FFD9         	movff	(timer1_lthread@tptr),fsr2l
  8620  001BFE  C0D7  FFDA         	movff	(timer1_lthread@tptr+1),fsr2h
  8621  001C02  C1A2  FFDE         	movff	??_timer1_lthread+0+0,postinc2
  8622  001C06  C1A3  FFDD         	movff	??_timer1_lthread+0+1,postdec2
  8623                           
  8624                           	line	28
  8625                           	
  8626  001C0A                     l19029:; BSR set to: 1
  8627                           
  8628                           ;timer1_thread.c: 28: ConvertADC();
  8629  001C0A  ECB4  F00E         	call	_ConvertADC	;wreg free
  8630                           	line	29
  8631                           	
  8632  001C0E                     l12788:
  8633  001C0E  0012               	return
  8634                           	opt stack 0
  8635                           GLOBAL	__end_of_timer1_lthread
  8636  001C10                     	__end_of_timer1_lthread:
  8637                           	signat	_timer1_lthread,16506
  8638                           	global	_uart_lthread
  8639                           
  8640 ;; *************** function _uart_lthread *****************
  8641 ;; Defined at:
  8642 ;;		line 9 in file "../src/uart_thread.c"
  8643 ;; Parameters:    Size  Location     Type
  8644 ;;  uptr            2   32[BANK0 ] PTR struct __uart_thread
  8645 ;;		 -> main@uthread_data(2), 
  8646 ;;  msgtype         2   34[BANK0 ] int 
  8647 ;;  length          2   36[BANK0 ] int 
  8648 ;;  msgbuffer       2   38[BANK0 ] PTR unsigned char 
  8649 ;;		 -> main@msgbuffer(11), 
  8650 ;; Auto vars:     Size  Location     Type
  8651 ;;		None
  8652 ;; Return value:  Size  Location     Type
  8653 ;;                  2   32[BANK0 ] int 
  8654 ;; Registers used:
  8655 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8656 ;; Tracked objects:
  8657 ;;		On entry : 0/0
  8658 ;;		On exit  : 0/0
  8659 ;;		Unchanged: 0/0
  8660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8661 ;;      Params:         0       8       0       0       0
  8662 ;;      Locals:         0       0       0       0       0
  8663 ;;      Temps:          0       0       0       0       0
  8664 ;;      Totals:         0       8       0       0       0
  8665 ;;Total ram usage:        8 bytes
  8666 ;; Hardware stack levels used:    1
  8667 ;; Hardware stack levels required when called:   10
  8668 ;; This function calls:
  8669 ;;		Nothing
  8670 ;; This function is called by:
  8671 ;;		_main
  8672 ;; This function uses a non-reentrant model
  8673 ;;
  8674                           psect	text18,class=CODE,space=0,reloc=2
  8675                           global __ptext18
  8676  001902                     __ptext18:
  8677                           psect	text18
  8678                           	file	"../src/uart_thread.c"
  8679                           	line	9
  8680                           	global	__size_of_uart_lthread
  8681  0000                     	__size_of_uart_lthread	equ	__end_of_uart_lthread-_uart_lthread
  8682                           	
  8683  001902                     _uart_lthread:
  8684                           	opt	stack 19
  8685                           	line	10
  8686                           	
  8687  001902                     l18443:
  8688                           ;uart_thread.c: 10: if (msgtype == 30) {
  8689  001902  0100               	movlb	0	; () banked
  8690  001904  0100               	movlb	0	; () banked
  8691  001906  51D8               	movf	((uart_lthread@msgtype))&0ffh,w
  8692  001908  0A1E               	xorlw	30
  8693  00190A  11D9               	iorwf ((uart_lthread@msgtype+1))&0ffh,w
  8694                           
  8695  00190C  A4D8               	btfss	status,2
  8696  00190E  D001               	goto	u1531
  8697  001910  D001               	goto	u1530
  8698  001912                     u1531:
  8699  001912  D002               	goto	l18447
  8700  001914                     u1530:
  8701  001914  D01C               	goto	l14578
  8702                           	line	11
  8703                           	
  8704  001916                     l18445:; BSR set to: 0
  8705                           
  8706                           ;uart_thread.c: 11: } else if (msgtype == 31) {
  8707  001916  D01B               	goto	l14578
  8708                           	
  8709  001918                     l14575:; BSR set to: 0
  8710                           
  8711                           	
  8712  001918                     l18447:; BSR set to: 0
  8713                           
  8714  001918  0100               	movlb	0	; () banked
  8715  00191A  0100               	movlb	0	; () banked
  8716  00191C  51D8               	movf	((uart_lthread@msgtype))&0ffh,w
  8717  00191E  0A1F               	xorlw	31
  8718  001920  11D9               	iorwf ((uart_lthread@msgtype+1))&0ffh,w
  8719                           
  8720  001922  A4D8               	btfss	status,2
  8721  001924  D001               	goto	u1541
  8722  001926  D001               	goto	u1540
  8723  001928                     u1541:
  8724  001928  D012               	goto	l14578
  8725  00192A                     u1540:
  8726                           	line	14
  8727                           	
  8728  00192A                     l18449:; BSR set to: 0
  8729                           
  8730                           ;uart_thread.c: 14: msgbuffer[length] = '\0';
  8731  00192A  0100               	movlb	0	; () banked
  8732  00192C  0100               	movlb	0	; () banked
  8733  00192E  51DA               	movf	((uart_lthread@length))&0ffh,w
  8734  001930  0100               	movlb	0	; () banked
  8735  001932  0100               	movlb	0	; () banked
  8736  001934  25DC               	addwf	((uart_lthread@msgbuffer))&0ffh,w
  8737  001936  6ED9               	movwf	c:fsr2l
  8738  001938  0100               	movlb	0	; () banked
  8739  00193A  0100               	movlb	0	; () banked
  8740  00193C  51DB               	movf	((uart_lthread@length+1))&0ffh,w
  8741  00193E  0100               	movlb	0	; () banked
  8742  001940  0100               	movlb	0	; () banked
  8743  001942  21DD               	addwfc	((uart_lthread@msgbuffer+1))&0ffh,w
  8744  001944  6EDA               	movwf	1+c:fsr2l
  8745  001946  0E00               	movlw	low(0)
  8746  001948  6EDF               	movwf	indf2
  8747  00194A  D001               	goto	l14578
  8748                           	line	16
  8749                           	
  8750  00194C                     l14577:; BSR set to: 0
  8751                           
  8752  00194C  D000               	goto	l14578
  8753                           	line	17
  8754                           	
  8755  00194E                     l14576:; BSR set to: 0
  8756                           
  8757                           	
  8758  00194E                     l14578:; BSR set to: 0
  8759                           
  8760  00194E  0012               	return
  8761                           	opt stack 0
  8762                           GLOBAL	__end_of_uart_lthread
  8763  001950                     	__end_of_uart_lthread:
  8764                           	signat	_uart_lthread,16506
  8765                           	global	_init_queue
  8766                           
  8767 ;; *************** function _init_queue *****************
  8768 ;; Defined at:
  8769 ;;		line 14 in file "../src/messages.c"
  8770 ;; Parameters:    Size  Location     Type
  8771 ;;  qptr            2   32[BANK0 ] PTR struct __msg_queue
  8772 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8773 ;; Auto vars:     Size  Location     Type
  8774 ;;  i               1   35[BANK0 ] unsigned char 
  8775 ;; Return value:  Size  Location     Type
  8776 ;;		None               void
  8777 ;; Registers used:
  8778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8779 ;; Tracked objects:
  8780 ;;		On entry : 0/0
  8781 ;;		On exit  : 0/0
  8782 ;;		Unchanged: 0/0
  8783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8784 ;;      Params:         0       2       0       0       0
  8785 ;;      Locals:         0       1       0       0       0
  8786 ;;      Temps:          0       1       0       0       0
  8787 ;;      Totals:         0       4       0       0       0
  8788 ;;Total ram usage:        4 bytes
  8789 ;; Hardware stack levels used:    1
  8790 ;; Hardware stack levels required when called:   10
  8791 ;; This function calls:
  8792 ;;		Nothing
  8793 ;; This function is called by:
  8794 ;;		_init_queues
  8795 ;; This function uses a non-reentrant model
  8796 ;;
  8797                           psect	text19,class=CODE,space=0,reloc=2
  8798                           global __ptext19
  8799  001542                     __ptext19:
  8800                           psect	text19
  8801                           	file	"../src/messages.c"
  8802                           	line	14
  8803                           	global	__size_of_init_queue
  8804  0000                     	__size_of_init_queue	equ	__end_of_init_queue-_init_queue
  8805                           	
  8806  001542                     _init_queue:; BSR set to: 0
  8807                           
  8808                           	opt	stack 18
  8809                           	line	17
  8810                           	
  8811  001542                     l18451:
  8812                           ;messages.c: 15: unsigned char i;
  8813                           ;messages.c: 17: qptr->cur_write_ind = 0;
  8814  001542  0100               	movlb	0	; () banked
  8815  001544  EE20 F034          	lfsr	2,034h
  8816  001548  0100               	movlb	0	; () banked
  8817  00154A  51D6               	movf	((init_queue@qptr))&0ffh,w
  8818  00154C  26D9               	addwf	fsr2l
  8819  00154E  0100               	movlb	0	; () banked
  8820  001550  51D7               	movf	((init_queue@qptr+1))&0ffh,w
  8821  001552  22DA               	addwfc	fsr2h
  8822  001554  0E00               	movlw	low(0)
  8823  001556  6EDF               	movwf	indf2
  8824                           	line	18
  8825                           ;messages.c: 18: qptr->cur_read_ind = 0;
  8826  001558  0100               	movlb	0	; () banked
  8827  00155A  EE20 F035          	lfsr	2,035h
  8828  00155E  0100               	movlb	0	; () banked
  8829  001560  51D6               	movf	((init_queue@qptr))&0ffh,w
  8830  001562  26D9               	addwf	fsr2l
  8831  001564  0100               	movlb	0	; () banked
  8832  001566  51D7               	movf	((init_queue@qptr+1))&0ffh,w
  8833  001568  22DA               	addwfc	fsr2h
  8834  00156A  0E00               	movlw	low(0)
  8835  00156C  6EDF               	movwf	indf2
  8836                           	line	19
  8837                           	
  8838  00156E                     l18453:; BSR set to: 0
  8839                           
  8840                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  8841  00156E  0100               	movlb	0	; () banked
  8842  001570  6FD8               	movwf	(??_init_queue+0+0)&0ffh
  8843  001572  0E00               	movlw	low(0)
  8844  001574  0100               	movlb	0	; () banked
  8845  001576  0100               	movlb	0	; () banked
  8846  001578  6FD9               	movwf	((init_queue@i))&0ffh
  8847  00157A  0100               	movlb	0	; () banked
  8848  00157C  51D8               	movf	(??_init_queue+0+0)&0ffh,w
  8849                           	
  8850  00157E                     l18455:; BSR set to: 0
  8851                           
  8852  00157E  0E03               	movlw	(04h-1)
  8853  001580  0100               	movlb	0	; () banked
  8854  001582  0100               	movlb	0	; () banked
  8855  001584  65D9               	cpfsgt	((init_queue@i))&0ffh
  8856  001586  D001               	goto	u1551
  8857  001588  D001               	goto	u1550
  8858  00158A                     u1551:
  8859  00158A  D002               	goto	l18459
  8860  00158C                     u1550:
  8861  00158C  D01C               	goto	l5472
  8862                           	
  8863  00158E                     l18457:; BSR set to: 0
  8864                           
  8865  00158E  D01B               	goto	l5472
  8866                           	
  8867  001590                     l5470:; BSR set to: 0
  8868                           
  8869                           	line	20
  8870                           	
  8871  001590                     l18459:; BSR set to: 0
  8872                           
  8873                           ;messages.c: 20: qptr->queue[i].full = 0;
  8874  001590  0100               	movlb	0	; () banked
  8875  001592  0100               	movlb	0	; () banked
  8876  001594  51D9               	movf	((init_queue@i))&0ffh,w
  8877  001596  0D0D               	mullw	0Dh
  8878  001598  50F3               	movf	(prodl),c,w
  8879  00159A  0100               	movlb	0	; () banked
  8880  00159C  0100               	movlb	0	; () banked
  8881  00159E  25D6               	addwf	((init_queue@qptr))&0ffh,w
  8882  0015A0  6ED9               	movwf	c:fsr2l
  8883  0015A2  50F4               	movf	(prodh),c,w
  8884  0015A4  0100               	movlb	0	; () banked
  8885  0015A6  0100               	movlb	0	; () banked
  8886  0015A8  21D7               	addwfc	((init_queue@qptr+1))&0ffh,w
  8887  0015AA  6EDA               	movwf	1+c:fsr2l
  8888  0015AC  0E00               	movlw	low(0)
  8889  0015AE  6EDF               	movwf	indf2
  8890                           	line	19
  8891                           	
  8892  0015B0                     l18461:; BSR set to: 0
  8893                           
  8894  0015B0  0100               	movlb	0	; () banked
  8895  0015B2  0100               	movlb	0	; () banked
  8896  0015B4  2BD9               	incf	((init_queue@i))&0ffh
  8897                           	
  8898  0015B6                     l18463:; BSR set to: 0
  8899                           
  8900  0015B6  0E03               	movlw	(04h-1)
  8901  0015B8  0100               	movlb	0	; () banked
  8902  0015BA  0100               	movlb	0	; () banked
  8903  0015BC  65D9               	cpfsgt	((init_queue@i))&0ffh
  8904  0015BE  D001               	goto	u1561
  8905  0015C0  D001               	goto	u1560
  8906  0015C2                     u1561:
  8907  0015C2  D7E6               	goto	l18459
  8908  0015C4                     u1560:
  8909  0015C4  D000               	goto	l5472
  8910                           	
  8911  0015C6                     l5471:; BSR set to: 0
  8912                           
  8913                           	line	22
  8914                           	
  8915  0015C6                     l5472:; BSR set to: 0
  8916                           
  8917  0015C6  0012               	return
  8918                           	opt stack 0
  8919                           GLOBAL	__end_of_init_queue
  8920  0015C8                     	__end_of_init_queue:
  8921                           	signat	_init_queue,4216
  8922                           	global	_recv_msg
  8923                           
  8924 ;; *************** function _recv_msg *****************
  8925 ;; Defined at:
  8926 ;;		line 63 in file "../src/messages.c"
  8927 ;; Parameters:    Size  Location     Type
  8928 ;;  qptr            2    4[BANK1 ] PTR struct __msg_queue
  8929 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8930 ;;  maxlength       1    6[BANK1 ] unsigned char 
  8931 ;;  msgtype         2    7[BANK1 ] PTR unsigned char 
  8932 ;;		 -> RAM(1023), main@msgtype(1), 
  8933 ;;  data            2    9[BANK1 ] PTR void 
  8934 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  8935 ;; Auto vars:     Size  Location     Type
  8936 ;;  qmsg            2   14[BANK1 ] PTR struct __msg
  8937 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8938 ;;  tlength         2   12[BANK1 ] unsigned int 
  8939 ;;  slot            1   11[BANK1 ] unsigned char 
  8940 ;; Return value:  Size  Location     Type
  8941 ;;                  1    wreg      char 
  8942 ;; Registers used:
  8943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8944 ;; Tracked objects:
  8945 ;;		On entry : 0/0
  8946 ;;		On exit  : 0/0
  8947 ;;		Unchanged: 0/0
  8948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8949 ;;      Params:         0       0       7       0       0
  8950 ;;      Locals:         0       0       5       0       0
  8951 ;;      Temps:          0       2       0       0       0
  8952 ;;      Totals:         0       2      12       0       0
  8953 ;;Total ram usage:       14 bytes
  8954 ;; Hardware stack levels used:    1
  8955 ;; Hardware stack levels required when called:   11
  8956 ;; This function calls:
  8957 ;;		_memcpy
  8958 ;; This function is called by:
  8959 ;;		_ToMainLow_recvmsg
  8960 ;;		_ToMainHigh_recvmsg
  8961 ;;		_FromMainLow_recvmsg
  8962 ;; This function uses a non-reentrant model
  8963 ;;
  8964                           psect	text20,class=CODE,space=0,reloc=2
  8965                           global __ptext20
  8966  000C1A                     __ptext20:
  8967                           psect	text20
  8968                           	file	"../src/messages.c"
  8969                           	line	63
  8970                           	global	__size_of_recv_msg
  8971  0000                     	__size_of_recv_msg	equ	__end_of_recv_msg-_recv_msg
  8972                           	
  8973  000C1A                     _recv_msg:; BSR set to: 0
  8974                           
  8975                           	opt	stack 17
  8976                           	line	72
  8977                           	
  8978  000C1A                     l19041:
  8979                           ;messages.c: 64: unsigned char slot;
  8980                           ;messages.c: 68: msg *qmsg;
  8981                           ;messages.c: 69: size_t tlength;
  8982                           ;messages.c: 72: slot = qptr->cur_read_ind;
  8983  000C1A  0101               	movlb	1	; () banked
  8984  000C1C  EE20 F035          	lfsr	2,035h
  8985  000C20  0101               	movlb	1	; () banked
  8986  000C22  51A6               	movf	((recv_msg@qptr))&0ffh,w
  8987  000C24  26D9               	addwf	fsr2l
  8988  000C26  0101               	movlb	1	; () banked
  8989  000C28  51A7               	movf	((recv_msg@qptr+1))&0ffh,w
  8990  000C2A  22DA               	addwfc	fsr2h
  8991  000C2C  50DF               	movf	indf2,w
  8992  000C2E  0101               	movlb	1	; () banked
  8993  000C30  0101               	movlb	1	; () banked
  8994  000C32  6FAD               	movwf	((recv_msg@slot))&0ffh
  8995                           	line	73
  8996                           	
  8997  000C34                     l19043:; BSR set to: 1
  8998                           
  8999                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  9000  000C34  0101               	movlb	1	; () banked
  9001  000C36  0101               	movlb	1	; () banked
  9002  000C38  51AD               	movf	((recv_msg@slot))&0ffh,w
  9003  000C3A  0D0D               	mullw	0Dh
  9004  000C3C  50F3               	movf	(prodl),c,w
  9005  000C3E  0101               	movlb	1	; () banked
  9006  000C40  0101               	movlb	1	; () banked
  9007  000C42  25A6               	addwf	((recv_msg@qptr))&0ffh,w
  9008  000C44  0101               	movlb	1	; () banked
  9009                           	
  9010  000C46  0101               	movlb	1	; () banked
  9011  000C48  6FB0               	movwf	((recv_msg@qmsg))&0ffh
  9012  000C4A  50F4               	movf	(prodh),c,w
  9013  000C4C  0101               	movlb	1	; () banked
  9014  000C4E  0101               	movlb	1	; () banked
  9015  000C50  21A7               	addwfc	((recv_msg@qptr+1))&0ffh,w
  9016  000C52  0101               	movlb	1	; () banked
  9017  000C54  6FB1               	movwf	1+((recv_msg@qmsg))&0ffh
  9018                           	line	74
  9019                           	
  9020  000C56                     l19045:; BSR set to: 1
  9021                           
  9022                           ;messages.c: 74: if (qmsg->full == 1) {
  9023  000C56  0E01               	movlw	(01h)&0ffh
  9024  000C58  C1B0  FFD9         	movff	(recv_msg@qmsg),fsr2l
  9025  000C5C  C1B1  FFDA         	movff	(recv_msg@qmsg+1),fsr2h
  9026  000C60  62DF               	cpfseq	indf2
  9027  000C62  D001               	goto	u2151
  9028  000C64  D001               	goto	u2150
  9029  000C66                     u2151:
  9030  000C66  D075               	goto	l19069
  9031  000C68                     u2150:
  9032                           	line	76
  9033                           	
  9034  000C68                     l19047:; BSR set to: 1
  9035                           
  9036                           ;messages.c: 76: if (qmsg->length > maxlength) {
  9037  000C68  0101               	movlb	1	; () banked
  9038  000C6A  EE20 F001          	lfsr	2,01h
  9039  000C6E  0101               	movlb	1	; () banked
  9040  000C70  51B0               	movf	((recv_msg@qmsg))&0ffh,w
  9041  000C72  26D9               	addwf	fsr2l
  9042  000C74  0101               	movlb	1	; () banked
  9043  000C76  51B1               	movf	((recv_msg@qmsg+1))&0ffh,w
  9044  000C78  22DA               	addwfc	fsr2h
  9045  000C7A  50DF               	movf	indf2,w
  9046  000C7C  0101               	movlb	1	; () banked
  9047  000C7E  0101               	movlb	1	; () banked
  9048  000C80  61A8               	cpfslt	((recv_msg@maxlength))&0ffh
  9049  000C82  D001               	goto	u2161
  9050  000C84  D001               	goto	u2160
  9051  000C86                     u2161:
  9052  000C86  D003               	goto	l19053
  9053  000C88                     u2160:
  9054                           	line	77
  9055                           	
  9056  000C88                     l19049:; BSR set to: 1
  9057                           
  9058                           ;messages.c: 77: return (-3);
  9059  000C88  0EFD               	movlw	(-3)&0ffh
  9060  000C8A  D066               	goto	l5481
  9061                           	
  9062  000C8C                     l19051:; BSR set to: 1
  9063                           
  9064  000C8C  D065               	goto	l5481
  9065                           	line	78
  9066                           	
  9067  000C8E                     l5480:; BSR set to: 1
  9068                           
  9069                           	line	80
  9070                           	
  9071  000C8E                     l19053:; BSR set to: 1
  9072                           
  9073                           ;messages.c: 78: }
  9074                           ;messages.c: 80: tlength = qmsg->length;
  9075  000C8E  0101               	movlb	1	; () banked
  9076  000C90  EE20 F001          	lfsr	2,01h
  9077  000C94  0101               	movlb	1	; () banked
  9078  000C96  51B0               	movf	((recv_msg@qmsg))&0ffh,w
  9079  000C98  26D9               	addwf	fsr2l
  9080  000C9A  0101               	movlb	1	; () banked
  9081  000C9C  51B1               	movf	((recv_msg@qmsg+1))&0ffh,w
  9082  000C9E  22DA               	addwfc	fsr2h
  9083  000CA0  50DF               	movf	indf2,w
  9084  000CA2  0100               	movlb	0	; () banked
  9085  000CA4  6FDC               	movwf	(??_recv_msg+0+0)&0ffh
  9086  000CA6  0100               	movlb	0	; () banked
  9087  000CA8  51DC               	movf	((??_recv_msg+0+0))&0ffh,w
  9088  000CAA  0101               	movlb	1	; () banked
  9089  000CAC  0101               	movlb	1	; () banked
  9090  000CAE  6FAE               	movwf	((recv_msg@tlength))&0ffh
  9091  000CB0  0101               	movlb	1	; () banked
  9092  000CB2  6BAF               	clrf	((recv_msg@tlength+1))&0ffh
  9093                           	line	81
  9094                           	
  9095  000CB4                     l19055:; BSR set to: 1
  9096                           
  9097                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  9098  000CB4  C1AB  F0D6         	movff	(recv_msg@data),(?_memcpy)
  9099  000CB8  C1AC  F0D7         	movff	(recv_msg@data+1),(?_memcpy+1)
  9100  000CBC  0E03               	movlw	03h
  9101  000CBE  0101               	movlb	1	; () banked
  9102  000CC0  0101               	movlb	1	; () banked
  9103  000CC2  25B0               	addwf	((recv_msg@qmsg))&0ffh,w
  9104  000CC4  0100               	movlb	0	; () banked
  9105  000CC6  6FDC               	movwf	(??_recv_msg+0+0)&0ffh
  9106  000CC8  0E00               	movlw	0
  9107  000CCA  0101               	movlb	1	; () banked
  9108  000CCC  0101               	movlb	1	; () banked
  9109  000CCE  21B1               	addwfc	((recv_msg@qmsg+1))&0ffh,w
  9110  000CD0  0100               	movlb	0	; () banked
  9111  000CD2  6FDD               	movwf	(??_recv_msg+0+0+1)&0ffh
  9112  000CD4  C0DC  F0D8         	movff	??_recv_msg+0+0,0+(?_memcpy+02h)
  9113  000CD8  C0DD  F0D9         	movff	??_recv_msg+0+1,1+(?_memcpy+02h)
  9114  000CDC  C1AE  F0DA         	movff	(recv_msg@tlength),0+(?_memcpy+04h)
  9115  000CE0  C1AF  F0DB         	movff	(recv_msg@tlength+1),1+(?_memcpy+04h)
  9116  000CE4  0100               	movlb	0	; () banked
  9117  000CE6  EC56  F00C         	call	_memcpy	;wreg free
  9118                           	line	87
  9119                           	
  9120  000CEA                     l19057:
  9121                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  9122  000CEA  0101               	movlb	1	; () banked
  9123  000CEC  EE20 F035          	lfsr	2,035h
  9124  000CF0  0101               	movlb	1	; () banked
  9125  000CF2  51A6               	movf	((recv_msg@qptr))&0ffh,w
  9126  000CF4  26D9               	addwf	fsr2l
  9127  000CF6  0101               	movlb	1	; () banked
  9128  000CF8  51A7               	movf	((recv_msg@qptr+1))&0ffh,w
  9129  000CFA  22DA               	addwfc	fsr2h
  9130  000CFC  0101               	movlb	1	; () banked
  9131  000CFE  EE10 F035          	lfsr	1,035h
  9132  000D02  0101               	movlb	1	; () banked
  9133  000D04  51A6               	movf	((recv_msg@qptr))&0ffh,w
  9134  000D06  26E1               	addwf	fsr1l
  9135  000D08  0101               	movlb	1	; () banked
  9136  000D0A  51A7               	movf	((recv_msg@qptr+1))&0ffh,w
  9137  000D0C  22E2               	addwfc	fsr1h
  9138  000D0E  50E7               	movf	indf1,w
  9139  000D10  0100               	movlb	0	; () banked
  9140  000D12  6FDC               	movwf	(??_recv_msg+0+0)&0ffh
  9141  000D14  0100               	movlb	0	; () banked
  9142  000D16  29DC               	incf	((??_recv_msg+0+0))&0ffh,w
  9143  000D18  0B03               	andlw	low(03h)
  9144  000D1A  6EDF               	movwf	indf2
  9145                           
  9146                           	line	89
  9147                           	
  9148  000D1C                     l19059:; BSR set to: 0
  9149                           
  9150                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  9151  000D1C  0101               	movlb	1	; () banked
  9152  000D1E  EE20 F002          	lfsr	2,02h
  9153  000D22  0101               	movlb	1	; () banked
  9154  000D24  51B0               	movf	((recv_msg@qmsg))&0ffh,w
  9155  000D26  26D9               	addwf	fsr2l
  9156  000D28  0101               	movlb	1	; () banked
  9157  000D2A  51B1               	movf	((recv_msg@qmsg+1))&0ffh,w
  9158  000D2C  22DA               	addwfc	fsr2h
  9159  000D2E  C1A9  FFE1         	movff	(recv_msg@msgtype),fsr1l
  9160  000D32  C1AA  FFE2         	movff	(recv_msg@msgtype+1),fsr1h
  9161  000D36  CFDF FFE7          	movff	indf2,indf1
  9162                           	line	91
  9163                           	
  9164  000D3A                     l19061:; BSR set to: 1
  9165                           
  9166                           ;messages.c: 91: qmsg->full = 0;
  9167  000D3A  C1B0  FFD9         	movff	(recv_msg@qmsg),fsr2l
  9168  000D3E  C1B1  FFDA         	movff	(recv_msg@qmsg+1),fsr2h
  9169  000D42  0E00               	movlw	low(0)
  9170  000D44  6EDF               	movwf	indf2
  9171                           	line	92
  9172                           	
  9173  000D46                     l19063:; BSR set to: 1
  9174                           
  9175                           ;messages.c: 92: return (tlength);
  9176  000D46  0101               	movlb	1	; () banked
  9177  000D48  0101               	movlb	1	; () banked
  9178  000D4A  51AE               	movf	((recv_msg@tlength))&0ffh,w
  9179  000D4C  D005               	goto	l5481
  9180                           	
  9181  000D4E                     l19065:; BSR set to: 1
  9182                           
  9183  000D4E  D004               	goto	l5481
  9184                           	line	93
  9185                           	
  9186  000D50                     l19067:; BSR set to: 1
  9187                           
  9188                           ;messages.c: 93: } else {
  9189  000D50  D003               	goto	l5481
  9190                           	
  9191  000D52                     l5479:; BSR set to: 1
  9192                           
  9193                           	line	94
  9194                           	
  9195  000D52                     l19069:; BSR set to: 1
  9196                           
  9197                           ;messages.c: 94: return (-4);
  9198  000D52  0EFC               	movlw	(-4)&0ffh
  9199  000D54  D001               	goto	l5481
  9200                           	
  9201  000D56                     l19071:; BSR set to: 1
  9202                           
  9203  000D56  D000               	goto	l5481
  9204                           	line	95
  9205                           	
  9206  000D58                     l5482:; BSR set to: 1
  9207                           
  9208                           	line	96
  9209                           	
  9210  000D58                     l5481:; BSR set to: 1
  9211                           
  9212  000D58  0012               	return
  9213                           	opt stack 0
  9214                           GLOBAL	__end_of_recv_msg
  9215  000D5A                     	__end_of_recv_msg:
  9216                           	signat	_recv_msg,16505
  9217                           	global	_memcpy
  9218                           
  9219 ;; *************** function _memcpy *****************
  9220 ;; Defined at:
  9221 ;;		line 13 in file "/opt/microchip/xc8/v1.10/sources/memcpy.c"
  9222 ;; Parameters:    Size  Location     Type
  9223 ;;  d1              2   32[BANK0 ] PTR void 
  9224 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  9225 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  9226 ;;  s1              2   34[BANK0 ] PTR const void 
  9227 ;;		 -> adc_int_handler@value(2), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
  9228 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  9229 ;;		 -> ToMainLow_MQ(54), main@ic(28), main@uc(5), 
  9230 ;;  n               2   36[BANK0 ] unsigned int 
  9231 ;; Auto vars:     Size  Location     Type
  9232 ;;  s               2    2[BANK1 ] PTR const unsigned char 
  9233 ;;		 -> adc_int_handler@value(2), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
  9234 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  9235 ;;		 -> ToMainLow_MQ(54), main@ic(28), main@uc(5), 
  9236 ;;  d               2    0[BANK1 ] PTR unsigned char 
  9237 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  9238 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  9239 ;; Return value:  Size  Location     Type
  9240 ;;                  2   32[BANK0 ] PTR void 
  9241 ;; Registers used:
  9242 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9243 ;; Tracked objects:
  9244 ;;		On entry : 0/0
  9245 ;;		On exit  : 0/0
  9246 ;;		Unchanged: 0/0
  9247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9248 ;;      Params:         0       6       0       0       0
  9249 ;;      Locals:         0       0       4       0       0
  9250 ;;      Temps:          0       0       0       0       0
  9251 ;;      Totals:         0       6       4       0       0
  9252 ;;Total ram usage:       10 bytes
  9253 ;; Hardware stack levels used:    1
  9254 ;; Hardware stack levels required when called:   10
  9255 ;; This function calls:
  9256 ;;		Nothing
  9257 ;; This function is called by:
  9258 ;;		_recv_msg
  9259 ;; This function uses a non-reentrant model
  9260 ;;
  9261                           psect	text21,class=CODE,space=0,reloc=2
  9262                           global __ptext21
  9263  0018AC                     __ptext21:
  9264                           psect	text21
  9265                           	file	"/opt/microchip/xc8/v1.10/sources/memcpy.c"
  9266                           	line	13
  9267                           	global	__size_of_memcpy
  9268  0000                     	__size_of_memcpy	equ	__end_of_memcpy-_memcpy
  9269                           	
  9270  0018AC                     _memcpy:; BSR set to: 1
  9271                           
  9272                           	opt	stack 17
  9273                           	line	24
  9274                           	
  9275  0018AC                     l19031:
  9276  0018AC  C0D8  F1A4         	movff	(memcpy@s1),(memcpy@s)
  9277  0018B0  C0D9  F1A5         	movff	(memcpy@s1+1),(memcpy@s+1)
  9278                           	line	25
  9279  0018B4  C0D6  F1A2         	movff	(memcpy@d1),(memcpy@d)
  9280  0018B8  C0D7  F1A3         	movff	(memcpy@d1+1),(memcpy@d+1)
  9281                           	line	26
  9282  0018BC  D013               	goto	l19039
  9283                           	
  9284  0018BE                     l17005:
  9285                           	line	27
  9286                           	
  9287  0018BE                     l19033:
  9288  0018BE  C1A4  FFD9         	movff	(memcpy@s),fsr2l
  9289  0018C2  C1A5  FFDA         	movff	(memcpy@s+1),fsr2h
  9290  0018C6  C1A2  FFE1         	movff	(memcpy@d),fsr1l
  9291  0018CA  C1A3  FFE2         	movff	(memcpy@d+1),fsr1h
  9292  0018CE  CFDF FFE7          	movff	indf2,indf1
  9293                           	
  9294  0018D2                     l19035:
  9295  0018D2  0101               	movlb	1	; () banked
  9296  0018D4  0101               	movlb	1	; () banked
  9297  0018D6  4BA4               	infsnz	((memcpy@s))&0ffh
  9298  0018D8  2BA5               	incf	((memcpy@s+1))&0ffh
  9299                           	
  9300  0018DA                     l19037:; BSR set to: 1
  9301                           
  9302  0018DA  0101               	movlb	1	; () banked
  9303  0018DC  0101               	movlb	1	; () banked
  9304  0018DE  4BA2               	infsnz	((memcpy@d))&0ffh
  9305  0018E0  2BA3               	incf	((memcpy@d+1))&0ffh
  9306  0018E2  D000               	goto	l19039
  9307                           	
  9308  0018E4                     l17004:; BSR set to: 1
  9309                           
  9310                           	line	26
  9311                           	
  9312  0018E4                     l19039:
  9313  0018E4  0100               	movlb	0	; () banked
  9314  0018E6  0100               	movlb	0	; () banked
  9315  0018E8  07DA               	decf	((memcpy@n))&0ffh
  9316  0018EA  A0D8               	btfss	status,0
  9317  0018EC  07DB               	decf	((memcpy@n+1))&0ffh
  9318  0018EE  0100               	movlb	0	; () banked
  9319  0018F0  29DA               	incf	((memcpy@n))&0ffh,w
  9320  0018F2  B4D8               	btfsc	status,2
  9321  0018F4  29DB               	incf ((memcpy@n+1))&0ffh,w
  9322                           
  9323  0018F6  A4D8               	btfss	status,2
  9324  0018F8  D001               	goto	u2141
  9325  0018FA  D001               	goto	u2140
  9326  0018FC                     u2141:
  9327  0018FC  D7E0               	goto	l19033
  9328  0018FE                     u2140:
  9329  0018FE  D000               	goto	l17007
  9330                           	
  9331  001900                     l17006:; BSR set to: 0
  9332                           
  9333                           	line	32
  9334                           ;	Return value of _memcpy is never used
  9335                           	
  9336  001900                     l17007:; BSR set to: 0
  9337                           
  9338  001900  0012               	return
  9339                           	opt stack 0
  9340                           GLOBAL	__end_of_memcpy
  9341  001902                     	__end_of_memcpy:
  9342                           	signat	_memcpy,12410
  9343                           	global	_check_msg
  9344                           
  9345 ;; *************** function _check_msg *****************
  9346 ;; Defined at:
  9347 ;;		line 222 in file "../src/messages.c"
  9348 ;; Parameters:    Size  Location     Type
  9349 ;;  qptr            2   32[BANK0 ] PTR struct __msg_queue
  9350 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9351 ;; Auto vars:     Size  Location     Type
  9352 ;;		None
  9353 ;; Return value:  Size  Location     Type
  9354 ;;                  1    wreg      unsigned char 
  9355 ;; Registers used:
  9356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9357 ;; Tracked objects:
  9358 ;;		On entry : 0/0
  9359 ;;		On exit  : 0/0
  9360 ;;		Unchanged: 0/0
  9361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9362 ;;      Params:         0       2       0       0       0
  9363 ;;      Locals:         0       0       0       0       0
  9364 ;;      Temps:          0       1       0       0       0
  9365 ;;      Totals:         0       3       0       0       0
  9366 ;;Total ram usage:        3 bytes
  9367 ;; Hardware stack levels used:    1
  9368 ;; Hardware stack levels required when called:   10
  9369 ;; This function calls:
  9370 ;;		Nothing
  9371 ;; This function is called by:
  9372 ;;		_block_on_To_msgqueues
  9373 ;; This function uses a non-reentrant model
  9374 ;;
  9375                           psect	text22,class=CODE,space=0,reloc=2
  9376                           global __ptext22
  9377  001AA0                     __ptext22:
  9378                           psect	text22
  9379                           	file	"../src/messages.c"
  9380                           	line	222
  9381                           	global	__size_of_check_msg
  9382  0000                     	__size_of_check_msg	equ	__end_of_check_msg-_check_msg
  9383                           	
  9384  001AA0                     _check_msg:; BSR set to: 0
  9385                           
  9386                           	opt	stack 18
  9387                           	line	223
  9388                           	
  9389  001AA0                     l18529:
  9390                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  9391  001AA0  0100               	movlb	0	; () banked
  9392  001AA2  EE20 F035          	lfsr	2,035h
  9393  001AA6  0100               	movlb	0	; () banked
  9394  001AA8  51D6               	movf	((check_msg@qptr))&0ffh,w
  9395  001AAA  26D9               	addwf	fsr2l
  9396  001AAC  0100               	movlb	0	; () banked
  9397  001AAE  51D7               	movf	((check_msg@qptr+1))&0ffh,w
  9398  001AB0  22DA               	addwfc	fsr2h
  9399  001AB2  50DF               	movf	indf2,w
  9400  001AB4  0100               	movlb	0	; () banked
  9401  001AB6  6FD8               	movwf	(??_check_msg+0+0)&0ffh
  9402  001AB8  0100               	movlb	0	; () banked
  9403  001ABA  51D8               	movf	((??_check_msg+0+0))&0ffh,w
  9404  001ABC  0D0D               	mullw	0Dh
  9405  001ABE  50F3               	movf	(prodl),c,w
  9406  001AC0  0100               	movlb	0	; () banked
  9407  001AC2  0100               	movlb	0	; () banked
  9408  001AC4  25D6               	addwf	((check_msg@qptr))&0ffh,w
  9409  001AC6  6ED9               	movwf	c:fsr2l
  9410  001AC8  50F4               	movf	(prodh),c,w
  9411  001ACA  0100               	movlb	0	; () banked
  9412  001ACC  0100               	movlb	0	; () banked
  9413  001ACE  21D7               	addwfc	((check_msg@qptr+1))&0ffh,w
  9414  001AD0  6EDA               	movwf	1+c:fsr2l
  9415  001AD2  50DF               	movf	indf2,w
  9416  001AD4  D000               	goto	l5525
  9417                           	
  9418  001AD6                     l18531:; BSR set to: 0
  9419                           
  9420                           	line	224
  9421                           	
  9422  001AD6                     l5525:; BSR set to: 0
  9423                           
  9424  001AD6  0012               	return
  9425                           	opt stack 0
  9426                           GLOBAL	__end_of_check_msg
  9427  001AD8                     	__end_of_check_msg:
  9428                           	signat	_check_msg,4217
  9429                           	global	_Delay1KTCYx
  9430                           
  9431 ;; *************** function _Delay1KTCYx *****************
  9432 ;; Defined at:
  9433 ;;		line 9 in file "../common/d1ktcyx.c"
  9434 ;; Parameters:    Size  Location     Type
  9435 ;;  unit            1   32[BANK0 ] unsigned char 
  9436 ;; Auto vars:     Size  Location     Type
  9437 ;;		None
  9438 ;; Return value:  Size  Location     Type
  9439 ;;		None               void
  9440 ;; Registers used:
  9441 ;;		wreg
  9442 ;; Tracked objects:
  9443 ;;		On entry : 0/0
  9444 ;;		On exit  : 0/0
  9445 ;;		Unchanged: 0/0
  9446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9447 ;;      Params:         0       1       0       0       0
  9448 ;;      Locals:         0       0       0       0       0
  9449 ;;      Temps:          0       0       0       0       0
  9450 ;;      Totals:         0       1       0       0       0
  9451 ;;Total ram usage:        1 bytes
  9452 ;; Hardware stack levels used:    1
  9453 ;; Hardware stack levels required when called:   10
  9454 ;; This function calls:
  9455 ;;		Nothing
  9456 ;; This function is called by:
  9457 ;;		_block_on_To_msgqueues
  9458 ;; This function uses a non-reentrant model
  9459 ;;
  9460                           psect	text23,class=CODE,space=0,reloc=2
  9461                           global __ptext23
  9462  001CEC                     __ptext23:
  9463                           psect	text23
  9464                           	file	"../common/d1ktcyx.c"
  9465                           	line	9
  9466                           	global	__size_of_Delay1KTCYx
  9467  0000                     	__size_of_Delay1KTCYx	equ	__end_of_Delay1KTCYx-_Delay1KTCYx
  9468                           	
  9469  001CEC                     _Delay1KTCYx:; BSR set to: 0
  9470                           
  9471                           	opt	stack 18
  9472                           	line	10
  9473                           	
  9474  001CEC                     l17069:
  9475                           	line	11
  9476                           	
  9477  001CEC                     l18533:
  9478  001CEC  0EFA               	movlw	250
  9479  001CEE                     u2217:
  9480  001CEE  F000               	nop
  9481  001CF0  2EE8               decfsz	wreg,f
  9482  001CF2  D7FD               	goto	u2217
  9483                           
  9484                           	line	12
  9485                           	
  9486  001CF4                     l18535:
  9487  001CF4  0100               	movlb	0	; () banked
  9488  001CF6  0100               	movlb	0	; () banked
  9489  001CF8  2FD6               	decfsz	((Delay1KTCYx@unit))&0ffh
  9490                           	
  9491  001CFA  D7F8               	goto	l17069
  9492  001CFC  D000               	goto	l17071
  9493                           	
  9494  001CFE                     l17070:; BSR set to: 0
  9495                           
  9496                           	line	13
  9497                           	
  9498  001CFE                     l17071:; BSR set to: 0
  9499                           
  9500  001CFE  0012               	return
  9501                           	opt stack 0
  9502                           GLOBAL	__end_of_Delay1KTCYx
  9503  001D00                     	__end_of_Delay1KTCYx:
  9504                           	signat	_Delay1KTCYx,4216
  9505                           	global	_OpenADC
  9506                           
  9507 ;; *************** function _OpenADC *****************
  9508 ;; Defined at:
  9509 ;;		line 71 in file "plib/ADC/adcopen.c"
  9510 ;; Parameters:    Size  Location     Type
  9511 ;;  config          1   32[BANK0 ] unsigned char 
  9512 ;;  config2         1   33[BANK0 ] unsigned char 
  9513 ;;  portconfig      1   34[BANK0 ] unsigned char 
  9514 ;; Auto vars:     Size  Location     Type
  9515 ;;		None
  9516 ;; Return value:  Size  Location     Type
  9517 ;;		None               void
  9518 ;; Registers used:
  9519 ;;		wreg, status,2, status,0
  9520 ;; Tracked objects:
  9521 ;;		On entry : 0/0
  9522 ;;		On exit  : 0/0
  9523 ;;		Unchanged: 0/0
  9524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9525 ;;      Params:         0       3       0       0       0
  9526 ;;      Locals:         0       0       0       0       0
  9527 ;;      Temps:          0       2       0       0       0
  9528 ;;      Totals:         0       5       0       0       0
  9529 ;;Total ram usage:        5 bytes
  9530 ;; Hardware stack levels used:    1
  9531 ;; Hardware stack levels required when called:   10
  9532 ;; This function calls:
  9533 ;;		Nothing
  9534 ;; This function is called by:
  9535 ;;		_init_timer1_lthread
  9536 ;; This function uses a non-reentrant model
  9537 ;;
  9538                           psect	text24,class=CODE,space=0,reloc=2
  9539                           global __ptext24
  9540  0015C8                     __ptext24:
  9541                           psect	text24
  9542                           	file	"plib/ADC/adcopen.c"
  9543                           	line	71
  9544                           	global	__size_of_OpenADC
  9545  0000                     	__size_of_OpenADC	equ	__end_of_OpenADC-_OpenADC
  9546                           	
  9547  0015C8                     _OpenADC:; BSR set to: 0
  9548                           
  9549                           	opt	stack 18
  9550                           	line	72
  9551                           	
  9552  0015C8                     l18567:
  9553  0015C8  0E00               	movlw	low(0)
  9554  0015CA  6EC2               	movwf	((c:4034)),c	;volatile
  9555                           	line	73
  9556  0015CC  0E00               	movlw	low(0)
  9557  0015CE  6EC0               	movwf	((c:4032)),c	;volatile
  9558                           	line	75
  9559                           	
  9560  0015D0                     l18569:
  9561  0015D0  0100               	movlb	0	; () banked
  9562  0015D2  0100               	movlb	0	; () banked
  9563  0015D4  90D8               	bcf	status,0
  9564  0015D6  31D7               	rrcf	((OpenADC@config2))&0ffh,w
  9565  0015D8  0B3C               	andlw	low(03Ch)
  9566  0015DA  6EC2               	movwf	((c:4034)),c	;volatile
  9567                           	line	77
  9568                           	
  9569  0015DC                     l18571:; BSR set to: 0
  9570                           
  9571  0015DC  C0D7  F0D9         	movff	(OpenADC@config2),??_OpenADC+0+0
  9572  0015E0  0100               	movlb	0	; () banked
  9573  0015E2  3BD9               	swapf	(??_OpenADC+0+0)&0ffh
  9574  0015E4  0EF0               	movlw	(0ffh shl 4) & 0ffh
  9575  0015E6  17D9               	andwf	(??_OpenADC+0+0)&0ffh
  9576  0015E8  0E30               	movlw	030h
  9577  0015EA  0100               	movlb	0	; () banked
  9578  0015EC  17D9               	andwf	(??_OpenADC+0+0)&0ffh
  9579  0015EE  0100               	movlb	0	; () banked
  9580  0015F0  0100               	movlb	0	; () banked
  9581  0015F2  51D8               	movf	((OpenADC@portconfig))&0ffh,w
  9582  0015F4  0B0F               	andlw	low(0Fh)
  9583  0015F6  0100               	movlb	0	; () banked
  9584  0015F8  11D9               	iorwf	(??_OpenADC+0+0)&0ffh,w
  9585  0015FA  6EC1               	movwf	((c:4033)),c	;volatile
  9586                           	line	80
  9587                           	
  9588  0015FC                     l18573:; BSR set to: 0
  9589                           
  9590  0015FC  C0D6  F0D9         	movff	(OpenADC@config),??_OpenADC+0+0
  9591  001600  0100               	movlb	0	; () banked
  9592  001602  90D8               	bcf	status,0
  9593  001604  37D9               	rlcf	(??_OpenADC+0+0)&0ffh
  9594  001606  0100               	movlb	0	; () banked
  9595  001608  90D8               	bcf	status,0
  9596  00160A  37D9               	rlcf	(??_OpenADC+0+0)&0ffh
  9597                           
  9598  00160C  0E38               	movlw	038h
  9599  00160E  0100               	movlb	0	; () banked
  9600  001610  17D9               	andwf	(??_OpenADC+0+0)&0ffh
  9601  001612  C0D6  F0DA         	movff	(OpenADC@config),??_OpenADC+1+0
  9602  001616  0100               	movlb	0	; () banked
  9603  001618  3BDA               	swapf	(??_OpenADC+1+0)&0ffh
  9604  00161A  0E0F               	movlw	(0ffh shr 4) & 0ffh
  9605  00161C  17DA               	andwf	(??_OpenADC+1+0)&0ffh
  9606  00161E  0E07               	movlw	07h
  9607  001620  0100               	movlb	0	; () banked
  9608  001622  17DA               	andwf	(??_OpenADC+1+0)&0ffh
  9609  001624  0100               	movlb	0	; () banked
  9610  001626  0100               	movlb	0	; () banked
  9611  001628  51D6               	movf	((OpenADC@config))&0ffh,w
  9612  00162A  0B80               	andlw	low(080h)
  9613  00162C  0100               	movlb	0	; () banked
  9614  00162E  11DA               	iorwf	(??_OpenADC+1+0)&0ffh,w
  9615  001630  0100               	movlb	0	; () banked
  9616  001632  11D9               	iorwf	(??_OpenADC+0+0)&0ffh,w
  9617  001634  6EC0               	movwf	((c:4032)),c	;volatile
  9618                           	line	82
  9619                           	
  9620  001636                     l18575:; BSR set to: 0
  9621                           
  9622  001636  0100               	movlb	0	; () banked
  9623                           	
  9624  001638  0100               	movlb	0	; () banked
  9625  00163A  AFD7               	btfss	((OpenADC@config2))&0ffh,(7)&7
  9626  00163C  D001               	goto	u1671
  9627  00163E  D001               	goto	u1670
  9628  001640                     u1671:
  9629  001640  D003               	goto	l16408
  9630  001642                     u1670:
  9631                           	line	84
  9632                           	
  9633  001642                     l18577:; BSR set to: 0
  9634                           
  9635  001642  9C9E               	bcf	((c:3998)),c,6	;volatile
  9636                           	line	85
  9637  001644  8C9D               	bsf	((c:3997)),c,6	;volatile
  9638                           	line	86
  9639  001646  8CF2               	bsf	((c:4082)),c,6	;volatile
  9640                           	line	87
  9641                           	
  9642  001648                     l16408:; BSR set to: 0
  9643                           
  9644                           	line	88
  9645  001648  80C2               	bsf	((c:4034)),c,0	;volatile
  9646                           	line	89
  9647                           	
  9648  00164A                     l16409:; BSR set to: 0
  9649                           
  9650  00164A  0012               	return
  9651                           	opt stack 0
  9652                           GLOBAL	__end_of_OpenADC
  9653  00164C                     	__end_of_OpenADC:
  9654                           	signat	_OpenADC,12408
  9655                           	global	_SetChanADC
  9656                           
  9657 ;; *************** function _SetChanADC *****************
  9658 ;; Defined at:
  9659 ;;		line 31 in file "plib/ADC/adcsetch.c"
  9660 ;; Parameters:    Size  Location     Type
  9661 ;;  channel         1   32[BANK0 ] unsigned char 
  9662 ;; Auto vars:     Size  Location     Type
  9663 ;;		None
  9664 ;; Return value:  Size  Location     Type
  9665 ;;		None               void
  9666 ;; Registers used:
  9667 ;;		wreg, status,2, status,0
  9668 ;; Tracked objects:
  9669 ;;		On entry : 0/0
  9670 ;;		On exit  : 0/0
  9671 ;;		Unchanged: 0/0
  9672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9673 ;;      Params:         0       1       0       0       0
  9674 ;;      Locals:         0       0       0       0       0
  9675 ;;      Temps:          0       1       0       0       0
  9676 ;;      Totals:         0       2       0       0       0
  9677 ;;Total ram usage:        2 bytes
  9678 ;; Hardware stack levels used:    1
  9679 ;; Hardware stack levels required when called:   10
  9680 ;; This function calls:
  9681 ;;		Nothing
  9682 ;; This function is called by:
  9683 ;;		_init_timer1_lthread
  9684 ;; This function uses a non-reentrant model
  9685 ;;
  9686                           psect	text25,class=CODE,space=0,reloc=2
  9687                           global __ptext25
  9688  001CA2                     __ptext25:
  9689                           psect	text25
  9690                           	file	"plib/ADC/adcsetch.c"
  9691                           	line	31
  9692                           	global	__size_of_SetChanADC
  9693  0000                     	__size_of_SetChanADC	equ	__end_of_SetChanADC-_SetChanADC
  9694                           	
  9695  001CA2                     _SetChanADC:; BSR set to: 0
  9696                           
  9697                           	opt	stack 18
  9698                           	line	34
  9699                           	
  9700  001CA2                     l18579:
  9701  001CA2  CFC2 F0D7          	movff	(c:4034),??_SetChanADC+0+0	;volatile
  9702  001CA6  0EC3               	movlw	0C3h
  9703  001CA8  0100               	movlb	0	; () banked
  9704  001CAA  17D7               	andwf	(??_SetChanADC+0+0)&0ffh
  9705  001CAC  0100               	movlb	0	; () banked
  9706  001CAE  0100               	movlb	0	; () banked
  9707  001CB0  90D8               	bcf	status,0
  9708  001CB2  31D6               	rrcf	((SetChanADC@channel))&0ffh,w
  9709  001CB4  0B3C               	andlw	low(03Ch)
  9710  001CB6  0100               	movlb	0	; () banked
  9711  001CB8  11D7               	iorwf	(??_SetChanADC+0+0)&0ffh,w
  9712  001CBA  6EC2               	movwf	((c:4034)),c	;volatile
  9713                           	line	36
  9714                           	
  9715  001CBC                     l16421:; BSR set to: 0
  9716                           
  9717  001CBC  0012               	return
  9718                           	opt stack 0
  9719                           GLOBAL	__end_of_SetChanADC
  9720  001CBE                     	__end_of_SetChanADC:
  9721                           	signat	_SetChanADC,4216
  9722                           	global	_ConvertADC
  9723                           
  9724 ;; *************** function _ConvertADC *****************
  9725 ;; Defined at:
  9726 ;;		line 23 in file "plib/ADC/adcconv.c"
  9727 ;; Parameters:    Size  Location     Type
  9728 ;;		None
  9729 ;; Auto vars:     Size  Location     Type
  9730 ;;		None
  9731 ;; Return value:  Size  Location     Type
  9732 ;;		None               void
  9733 ;; Registers used:
  9734 ;;		None
  9735 ;; Tracked objects:
  9736 ;;		On entry : 0/0
  9737 ;;		On exit  : 0/0
  9738 ;;		Unchanged: 0/0
  9739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9740 ;;      Params:         0       0       0       0       0
  9741 ;;      Locals:         0       0       0       0       0
  9742 ;;      Temps:          0       0       0       0       0
  9743 ;;      Totals:         0       0       0       0       0
  9744 ;;Total ram usage:        0 bytes
  9745 ;; Hardware stack levels used:    1
  9746 ;; Hardware stack levels required when called:   10
  9747 ;; This function calls:
  9748 ;;		Nothing
  9749 ;; This function is called by:
  9750 ;;		_timer1_lthread
  9751 ;; This function uses a non-reentrant model
  9752 ;;
  9753                           psect	text26,class=CODE,space=0,reloc=2
  9754                           global __ptext26
  9755  001D68                     __ptext26:
  9756                           psect	text26
  9757                           	file	"plib/ADC/adcconv.c"
  9758                           	line	23
  9759                           	global	__size_of_ConvertADC
  9760  0000                     	__size_of_ConvertADC	equ	__end_of_ConvertADC-_ConvertADC
  9761                           	
  9762  001D68                     _ConvertADC:; BSR set to: 0
  9763                           
  9764                           	opt	stack 18
  9765                           	line	24
  9766                           	
  9767  001D68                     l18581:
  9768  001D68  82C2               	bsf	((c:4034)),c,1	;volatile
  9769                           	line	25
  9770                           	
  9771  001D6A                     l16391:
  9772  001D6A  0012               	return
  9773                           	opt stack 0
  9774                           GLOBAL	__end_of_ConvertADC
  9775  001D6C                     	__end_of_ConvertADC:
  9776                           	signat	_ConvertADC,88
  9777                           	global	_InterruptHandlerLow
  9778                           
  9779 ;; *************** function _InterruptHandlerLow *****************
  9780 ;; Defined at:
  9781 ;;		line 122 in file "../src/interrupts.c"
  9782 ;; Parameters:    Size  Location     Type
  9783 ;;		None
  9784 ;; Auto vars:     Size  Location     Type
  9785 ;;		None
  9786 ;; Return value:  Size  Location     Type
  9787 ;;		None               void
  9788 ;; Registers used:
  9789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9790 ;; Tracked objects:
  9791 ;;		On entry : 0/0
  9792 ;;		On exit  : 0/0
  9793 ;;		Unchanged: 0/0
  9794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9795 ;;      Params:         0       0       0       0       0
  9796 ;;      Locals:         0       0       0       0       0
  9797 ;;      Temps:         17       0       0       0       0
  9798 ;;      Totals:        17       0       0       0       0
  9799 ;;Total ram usage:       17 bytes
  9800 ;; Hardware stack levels used:    1
  9801 ;; Hardware stack levels required when called:    9
  9802 ;; This function calls:
  9803 ;;		_timer1_int_handler
  9804 ;;		_adc_int_handler
  9805 ;;		_uart_recv_int_handler
  9806 ;; This function is called by:
  9807 ;;		Interrupt level 1
  9808 ;; This function uses a non-reentrant model
  9809 ;;
  9810                           psect	intcodelo,class=CODE,space=0,reloc=2
  9811                           global __pintcodelo
  9812  000018                     __pintcodelo:
  9813                           psect	intcodelo
  9814                           	file	"../src/interrupts.c"
  9815                           	line	122
  9816                           	global	__size_of_InterruptHandlerLow
  9817  0000                     	__size_of_InterruptHandlerLow	equ	__end_of_InterruptHandlerLow-_InterruptHandlerLow
  9818                           	
  9819  000018                     _InterruptHandlerLow:
  9820                           	opt	stack 16
  9821  000018  CFD8 F021          	movff	status+0,??_InterruptHandlerLow+0
  9822  00001C  CFE8 F022          	movff	wreg+0,??_InterruptHandlerLow+1
  9823  000020  CFE0 F023          	movff	bsr+0,??_InterruptHandlerLow+2
  9824  000024  CFFA F024          	movff	pclat+0,??_InterruptHandlerLow+3
  9825  000028  CFFB F025          	movff	pclat+1,??_InterruptHandlerLow+4
  9826  00002C  CFE9 F026          	movff	fsr0l+0,??_InterruptHandlerLow+5
  9827  000030  CFEA F027          	movff	fsr0h+0,??_InterruptHandlerLow+6
  9828  000034  CFE1 F028          	movff	fsr1l+0,??_InterruptHandlerLow+7
  9829  000038  CFE2 F029          	movff	fsr1h+0,??_InterruptHandlerLow+8
  9830  00003C  CFD9 F02A          	movff	fsr2l+0,??_InterruptHandlerLow+9
  9831  000040  CFDA F02B          	movff	fsr2h+0,??_InterruptHandlerLow+10
  9832  000044  CFF3 F02C          	movff	prodl+0,??_InterruptHandlerLow+11
  9833  000048  CFF4 F02D          	movff	prodh+0,??_InterruptHandlerLow+12
  9834  00004C  CFF6 F02E          	movff	tblptrl+0,??_InterruptHandlerLow+13
  9835  000050  CFF7 F02F          	movff	tblptrh+0,??_InterruptHandlerLow+14
  9836  000054  CFF8 F030          	movff	tblptru+0,??_InterruptHandlerLow+15
  9837  000058  CFF5 F031          	movff	tablat+0,??_InterruptHandlerLow+16
  9838                           	line	124
  9839                           	
  9840  00005C                     i1l18747:
  9841                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  9842                           	
  9843  00005C  A09E               	btfss	((c:3998)),c,0	;volatile
  9844  00005E  D001               	goto	i1u179_21
  9845  000060  D001               	goto	i1u179_20
  9846  000062                     i1u179_21:
  9847  000062  D004               	goto	i1l18753
  9848  000064                     i1u179_20:
  9849                           	line	125
  9850                           	
  9851  000064                     i1l18749:
  9852                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  9853  000064  909E               	bcf	((c:3998)),c,0	;volatile
  9854                           	line	126
  9855                           	
  9856  000066                     i1l18751:
  9857                           ;interrupts.c: 126: timer1_int_handler();
  9858  000066  EC31  F00D         	call	_timer1_int_handler	;wreg free
  9859  00006A  D000               	goto	i1l18753
  9860                           	line	127
  9861                           	
  9862  00006C                     i1l1825:
  9863                           	line	130
  9864                           	
  9865  00006C                     i1l18753:
  9866                           ;interrupts.c: 127: }
  9867                           ;interrupts.c: 130: if(PIR1bits.ADIF){
  9868                           	
  9869  00006C  AC9E               	btfss	((c:3998)),c,6	;volatile
  9870  00006E  D001               	goto	i1u180_21
  9871  000070  D001               	goto	i1u180_20
  9872  000072                     i1u180_21:
  9873  000072  D004               	goto	i1l18759
  9874  000074                     i1u180_20:
  9875                           	line	131
  9876                           	
  9877  000074                     i1l18755:
  9878                           ;interrupts.c: 131: PIR1bits.ADIF = 0;
  9879  000074  9C9E               	bcf	((c:3998)),c,6	;volatile
  9880                           	line	132
  9881                           	
  9882  000076                     i1l18757:
  9883                           ;interrupts.c: 132: adc_int_handler();
  9884  000076  ECB8  F00D         	call	_adc_int_handler	;wreg free
  9885  00007A  D000               	goto	i1l18759
  9886                           	line	133
  9887                           	
  9888  00007C                     i1l1826:
  9889                           	line	136
  9890                           	
  9891  00007C                     i1l18759:
  9892                           ;interrupts.c: 133: }
  9893                           ;interrupts.c: 136: if (PIR1bits.RCIF) {
  9894                           	
  9895  00007C  AA9E               	btfss	((c:3998)),c,5	;volatile
  9896  00007E  D001               	goto	i1u181_21
  9897  000080  D001               	goto	i1u181_20
  9898  000082                     i1u181_21:
  9899  000082  D004               	goto	i1l1828
  9900  000084                     i1u181_20:
  9901                           	line	137
  9902                           	
  9903  000084                     i1l18761:
  9904                           ;interrupts.c: 137: PIR1bits.RCIF = 0;
  9905  000084  9A9E               	bcf	((c:3998)),c,5	;volatile
  9906                           	line	138
  9907                           	
  9908  000086                     i1l18763:
  9909                           ;interrupts.c: 138: uart_recv_int_handler();
  9910  000086  ECF5  F008         	call	_uart_recv_int_handler	;wreg free
  9911  00008A  D000               	goto	i1l1828
  9912                           	line	139
  9913                           	
  9914  00008C                     i1l1827:
  9915                           	line	140
  9916                           	
  9917  00008C                     i1l1828:
  9918  00008C  C031  FFF5         	movff	??_InterruptHandlerLow+16,tablat+0
  9919  000090  C030  FFF8         	movff	??_InterruptHandlerLow+15,tblptru+0
  9920  000094  C02F  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh+0
  9921  000098  C02E  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl+0
  9922  00009C  C02D  FFF4         	movff	??_InterruptHandlerLow+12,prodh+0
  9923  0000A0  C02C  FFF3         	movff	??_InterruptHandlerLow+11,prodl+0
  9924  0000A4  C02B  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h+0
  9925  0000A8  C02A  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l+0
  9926  0000AC  C029  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h+0
  9927  0000B0  C028  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l+0
  9928  0000B4  C027  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h+0
  9929  0000B8  C026  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l+0
  9930  0000BC  C025  FFFB         	movff	??_InterruptHandlerLow+4,pclat+1
  9931  0000C0  C024  FFFA         	movff	??_InterruptHandlerLow+3,pclat+0
  9932  0000C4  C023  FFE0         	movff	??_InterruptHandlerLow+2,bsr+0
  9933  0000C8  C022  FFE8         	movff	??_InterruptHandlerLow+1,wreg+0
  9934  0000CC  C021  FFD8         	movff	??_InterruptHandlerLow+0,status+0
  9935  0000D0  0010               	retfie
  9936                           	opt stack 0
  9937                           GLOBAL	__end_of_InterruptHandlerLow
  9938  0000D2                     	__end_of_InterruptHandlerLow:
  9939                           	signat	_InterruptHandlerLow,1112
  9940                           	global	_timer1_int_handler
  9941                           
  9942 ;; *************** function _timer1_int_handler *****************
  9943 ;; Defined at:
  9944 ;;		line 35 in file "../src/user_interrupts.c"
  9945 ;; Parameters:    Size  Location     Type
  9946 ;;		None
  9947 ;; Auto vars:     Size  Location     Type
  9948 ;;  result          2   30[COMRAM] unsigned int 
  9949 ;;  temp            2   28[COMRAM] unsigned int 
  9950 ;; Return value:  Size  Location     Type
  9951 ;;		None               void
  9952 ;; Registers used:
  9953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9954 ;; Tracked objects:
  9955 ;;		On entry : 0/0
  9956 ;;		On exit  : 0/0
  9957 ;;		Unchanged: 0/0
  9958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9959 ;;      Params:         0       0       0       0       0
  9960 ;;      Locals:         4       0       0       0       0
  9961 ;;      Temps:          2       0       0       0       0
  9962 ;;      Totals:         6       0       0       0       0
  9963 ;;Total ram usage:        6 bytes
  9964 ;; Hardware stack levels used:    1
  9965 ;; Hardware stack levels required when called:    8
  9966 ;; This function calls:
  9967 ;;		_ReadTimer1
  9968 ;;		_ToMainLow_sendmsg
  9969 ;;		_WriteTimer1
  9970 ;; This function is called by:
  9971 ;;		_InterruptHandlerLow
  9972 ;; This function uses a non-reentrant model
  9973 ;;
  9974                           psect	text28,class=CODE,space=0,reloc=2
  9975                           global __ptext28
  9976  001A62                     __ptext28:
  9977                           psect	text28
  9978                           	file	"../src/user_interrupts.c"
  9979                           	line	35
  9980                           	global	__size_of_timer1_int_handler
  9981  0000                     	__size_of_timer1_int_handler	equ	__end_of_timer1_int_handler-_timer1_int_handler
  9982                           	
  9983  001A62                     _timer1_int_handler:
  9984                           	opt	stack 16
  9985                           	line	40
  9986                           	
  9987  001A62                     i1l18717:
  9988                           ;user_interrupts.c: 36: unsigned int result;
  9989                           ;user_interrupts.c: 40: result = ReadTimer1();
  9990  001A62  EC80  F00E         	call	_ReadTimer1	;wreg free
  9991  001A66  C001  F01F         	movff	0+?_ReadTimer1,(c:timer1_int_handler@result)
  9992  001A6A  C002  F020         	movff	1+?_ReadTimer1,(c:timer1_int_handler@result+1)
  9993                           	line	41
  9994                           	
  9995  001A6E                     i1l18719:
  9996                           ;user_interrupts.c: 41: ToMainLow_sendmsg(sizeof(result), 11, (void *) &result);
  9997  001A6E  6E1B               	movwf	(??_timer1_int_handler+0+0)&0ffh,c
  9998  001A70  0E02               	movlw	low(02h)
  9999  001A72  6E17               	movwf	((c:?_ToMainLow_sendmsg)),c
 10000  001A74  501B               	movf	(??_timer1_int_handler+0+0)&0ffh,c,w
 10001  001A76  6E1C               	movwf	(??_timer1_int_handler+1+0)&0ffh,c
 10002  001A78  0E0B               	movlw	low(0Bh)
 10003  001A7A  6E18               	movwf	(0+((c:?_ToMainLow_sendmsg)+01h)),c
 10004  001A7C  501C               	movf	(??_timer1_int_handler+1+0)&0ffh,c,w
 10005  001A7E  0E00               	movlw	high((c:timer1_int_handler@result))
 10006  001A80  6E1A               	movwf	(1+((c:?_ToMainLow_sendmsg)+02h)),c
 10007  001A82  0E1F               	movlw	low((c:timer1_int_handler@result))
 10008  001A84  6E19               	movwf	(0+((c:?_ToMainLow_sendmsg)+02h)),c
 10009  001A86  EC2D  F00E         	call	_ToMainLow_sendmsg	;wreg free
 10010                           	line	44
 10011                           	
 10012  001A8A                     i1l18721:
 10013                           ;user_interrupts.c: 44: unsigned int temp = 0x1;
 10014  001A8A  0E00               	movlw	high(01h)
 10015  001A8C  6E1E               	movwf	((c:timer1_int_handler@temp+1)),c
 10016  001A8E  0E01               	movlw	low(01h)
 10017  001A90  6E1D               	movwf	((c:timer1_int_handler@temp)),c
 10018                           	line	45
 10019                           	
 10020  001A92                     i1l18723:
 10021                           ;user_interrupts.c: 45: WriteTimer1(temp);
 10022  001A92  C01D  F001         	movff	(c:timer1_int_handler@temp),(c:?_WriteTimer1)
 10023  001A96  C01E  F002         	movff	(c:timer1_int_handler@temp+1),(c:?_WriteTimer1+1)
 10024  001A9A  EC89  F00E         	call	_WriteTimer1	;wreg free
 10025                           	line	46
 10026                           	
 10027  001A9E                     i1l16383:
 10028  001A9E  0012               	return
 10029                           	opt stack 0
 10030                           GLOBAL	__end_of_timer1_int_handler
 10031  001AA0                     	__end_of_timer1_int_handler:
 10032                           	signat	_timer1_int_handler,88
 10033                           	global	_adc_int_handler
 10034                           
 10035 ;; *************** function _adc_int_handler *****************
 10036 ;; Defined at:
 10037 ;;		line 48 in file "../src/user_interrupts.c"
 10038 ;; Parameters:    Size  Location     Type
 10039 ;;		None
 10040 ;; Auto vars:     Size  Location     Type
 10041 ;;  value           2   28[COMRAM] int 
 10042 ;; Return value:  Size  Location     Type
 10043 ;;		None               void
 10044 ;; Registers used:
 10045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10046 ;; Tracked objects:
 10047 ;;		On entry : 0/0
 10048 ;;		On exit  : 0/0
 10049 ;;		Unchanged: 0/0
 10050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10051 ;;      Params:         0       0       0       0       0
 10052 ;;      Locals:         2       0       0       0       0
 10053 ;;      Temps:          2       0       0       0       0
 10054 ;;      Totals:         4       0       0       0       0
 10055 ;;Total ram usage:        4 bytes
 10056 ;; Hardware stack levels used:    1
 10057 ;; Hardware stack levels required when called:    8
 10058 ;; This function calls:
 10059 ;;		_ReadADC
 10060 ;;		_ToMainLow_sendmsg
 10061 ;; This function is called by:
 10062 ;;		_InterruptHandlerLow
 10063 ;; This function uses a non-reentrant model
 10064 ;;
 10065                           psect	text29,class=CODE,space=0,reloc=2
 10066                           global __ptext29
 10067  001B70                     __ptext29:
 10068                           psect	text29
 10069                           	file	"../src/user_interrupts.c"
 10070                           	line	48
 10071                           	global	__size_of_adc_int_handler
 10072  0000                     	__size_of_adc_int_handler	equ	__end_of_adc_int_handler-_adc_int_handler
 10073                           	
 10074  001B70                     _adc_int_handler:
 10075                           	opt	stack 16
 10076                           	line	49
 10077                           	
 10078  001B70                     i1l18725:
 10079                           ;user_interrupts.c: 49: int value = ReadADC();
 10080  001B70  ECA2  F00E         	call	_ReadADC	;wreg free
 10081  001B74  C001  F01D         	movff	0+?_ReadADC,(c:adc_int_handler@value)
 10082  001B78  C002  F01E         	movff	1+?_ReadADC,(c:adc_int_handler@value+1)
 10083                           	line	50
 10084                           	
 10085  001B7C                     i1l18727:
 10086                           ;user_interrupts.c: 50: ToMainLow_sendmsg(sizeof(value),40,(void *) &value);
 10087  001B7C  6E1B               	movwf	(??_adc_int_handler+0+0)&0ffh,c
 10088  001B7E  0E02               	movlw	low(02h)
 10089  001B80  6E17               	movwf	((c:?_ToMainLow_sendmsg)),c
 10090  001B82  501B               	movf	(??_adc_int_handler+0+0)&0ffh,c,w
 10091  001B84  6E1C               	movwf	(??_adc_int_handler+1+0)&0ffh,c
 10092  001B86  0E28               	movlw	low(028h)
 10093  001B88  6E18               	movwf	(0+((c:?_ToMainLow_sendmsg)+01h)),c
 10094  001B8A  501C               	movf	(??_adc_int_handler+1+0)&0ffh,c,w
 10095  001B8C  0E00               	movlw	high((c:adc_int_handler@value))
 10096  001B8E  6E1A               	movwf	(1+((c:?_ToMainLow_sendmsg)+02h)),c
 10097  001B90  0E1D               	movlw	low((c:adc_int_handler@value))
 10098  001B92  6E19               	movwf	(0+((c:?_ToMainLow_sendmsg)+02h)),c
 10099  001B94  EC2D  F00E         	call	_ToMainLow_sendmsg	;wreg free
 10100                           	line	51
 10101                           	
 10102  001B98                     i1l16386:
 10103  001B98  0012               	return
 10104                           	opt stack 0
 10105                           GLOBAL	__end_of_adc_int_handler
 10106  001B9A                     	__end_of_adc_int_handler:
 10107                           	signat	_adc_int_handler,88
 10108                           	global	_uart_recv_int_handler
 10109                           
 10110 ;; *************** function _uart_recv_int_handler *****************
 10111 ;; Defined at:
 10112 ;;		line 11 in file "../src/my_uart.c"
 10113 ;; Parameters:    Size  Location     Type
 10114 ;;		None
 10115 ;; Auto vars:     Size  Location     Type
 10116 ;;		None
 10117 ;; Return value:  Size  Location     Type
 10118 ;;		None               void
 10119 ;; Registers used:
 10120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10121 ;; Tracked objects:
 10122 ;;		On entry : 0/0
 10123 ;;		On exit  : 0/0
 10124 ;;		Unchanged: 0/0
 10125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10126 ;;      Params:         0       0       0       0       0
 10127 ;;      Locals:         0       0       0       0       0
 10128 ;;      Temps:          2       0       0       0       0
 10129 ;;      Totals:         2       0       0       0       0
 10130 ;;Total ram usage:        2 bytes
 10131 ;; Hardware stack levels used:    1
 10132 ;; Hardware stack levels required when called:    8
 10133 ;; This function calls:
 10134 ;;		_ReadUSART
 10135 ;;		_ToMainLow_sendmsg
 10136 ;; This function is called by:
 10137 ;;		_InterruptHandlerLow
 10138 ;; This function uses a non-reentrant model
 10139 ;;
 10140                           psect	text30,class=CODE,space=0,reloc=2
 10141                           global __ptext30
 10142  0011EA                     __ptext30:
 10143                           psect	text30
 10144                           	file	"../src/my_uart.c"
 10145                           	line	11
 10146                           	global	__size_of_uart_recv_int_handler
 10147  0000                     	__size_of_uart_recv_int_handler	equ	__end_of_uart_recv_int_handler-_uart_recv_int_handl
                                 er
 10148                           	
 10149  0011EA                     _uart_recv_int_handler:
 10150                           	opt	stack 16
 10151                           	line	12
 10152                           	
 10153  0011EA                     i1l18729:
 10154                           ;my_uart.c: 12: if ((PIR1bits.RCIF)) {
 10155                           	
 10156  0011EA  AA9E               	btfss	((c:3998)),c,5	;volatile
 10157  0011EC  D001               	goto	i1u176_21
 10158  0011EE  D001               	goto	i1u176_20
 10159  0011F0                     i1u176_21:
 10160  0011F0  D041               	goto	i1l18741
 10161  0011F2                     i1u176_20:
 10162                           	line	13
 10163                           	
 10164  0011F2                     i1l18731:
 10165                           ;my_uart.c: 13: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
 10166  0011F2  EE20 F004          	lfsr	2,04h
 10167  0011F6  504D               	movf	((c:_uc_ptr)),c,w
 10168  0011F8  26D9               	addwf	fsr2l
 10169  0011FA  504E               	movf	((c:_uc_ptr+1)),c,w
 10170  0011FC  22DA               	addwfc	fsr2h
 10171  0011FE  50DF               	movf	indf2,w
 10172  001200  6E1B               	movwf	(??_uart_recv_int_handler+0+0)&0ffh,c
 10173  001202  501B               	movf	((??_uart_recv_int_handler+0+0)),c,w
 10174  001204  0D01               	mullw	01h
 10175  001206  50F3               	movf	(prodl),c,w
 10176  001208  244D               	addwf	((c:_uc_ptr)),c,w
 10177  00120A  6ED9               	movwf	c:fsr2l
 10178  00120C  50F4               	movf	(prodh),c,w
 10179  00120E  204E               	addwfc	((c:_uc_ptr+1)),c,w
 10180  001210  6EDA               	movwf	1+c:fsr2l
 10181  001212  EC6C  F00D         	call	_ReadUSART	;wreg free
 10182  001216  6EDF               	movwf	indf2
 10183                           
 10184                           	line	14
 10185                           	
 10186  001218                     i1l18733:
 10187                           ;my_uart.c: 14: uc_ptr->buflen++;
 10188  001218  EE20 F004          	lfsr	2,04h
 10189  00121C  504D               	movf	((c:_uc_ptr)),c,w
 10190  00121E  26D9               	addwf	fsr2l
 10191  001220  504E               	movf	((c:_uc_ptr+1)),c,w
 10192  001222  22DA               	addwfc	fsr2h
 10193  001224  2ADF               	incf	indf2
 10194                           
 10195                           	line	16
 10196                           	
 10197  001226                     i1l18735:
 10198                           ;my_uart.c: 16: if (uc_ptr->buflen == 4) {
 10199  001226  EE20 F004          	lfsr	2,04h
 10200  00122A  504D               	movf	((c:_uc_ptr)),c,w
 10201  00122C  26D9               	addwf	fsr2l
 10202  00122E  504E               	movf	((c:_uc_ptr+1)),c,w
 10203  001230  22DA               	addwfc	fsr2h
 10204  001232  0E04               	movlw	(04h)&0ffh
 10205  001234  62DF               	cpfseq	indf2
 10206  001236  D001               	goto	i1u177_21
 10207  001238  D001               	goto	i1u177_20
 10208  00123A                     i1u177_21:
 10209  00123A  D01C               	goto	i1l18741
 10210  00123C                     i1u177_20:
 10211                           	line	17
 10212                           	
 10213  00123C                     i1l18737:
 10214                           ;my_uart.c: 17: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
 10215  00123C  EE20 F004          	lfsr	2,04h
 10216  001240  504D               	movf	((c:_uc_ptr)),c,w
 10217  001242  26D9               	addwf	fsr2l
 10218  001244  504E               	movf	((c:_uc_ptr+1)),c,w
 10219  001246  22DA               	addwfc	fsr2h
 10220  001248  50DF               	movf	indf2,w
 10221  00124A  6E17               	movwf	((c:?_ToMainLow_sendmsg)),c
 10222  00124C  6E1B               	movwf	(??_uart_recv_int_handler+0+0)&0ffh,c
 10223  00124E  0E1F               	movlw	low(01Fh)
 10224  001250  6E18               	movwf	(0+((c:?_ToMainLow_sendmsg)+01h)),c
 10225  001252  501B               	movf	(??_uart_recv_int_handler+0+0)&0ffh,c,w
 10226  001254  C04D  F019         	movff	(c:_uc_ptr),0+((c:?_ToMainLow_sendmsg)+02h)
 10227  001258  C04E  F01A         	movff	(c:_uc_ptr+1),1+((c:?_ToMainLow_sendmsg)+02h)
 10228  00125C  EC2D  F00E         	call	_ToMainLow_sendmsg	;wreg free
 10229                           	line	18
 10230                           	
 10231  001260                     i1l18739:
 10232                           ;my_uart.c: 18: uc_ptr->buflen = 0;
 10233  001260  EE20 F004          	lfsr	2,04h
 10234  001264  504D               	movf	((c:_uc_ptr)),c,w
 10235  001266  26D9               	addwf	fsr2l
 10236  001268  504E               	movf	((c:_uc_ptr+1)),c,w
 10237  00126A  22DA               	addwfc	fsr2h
 10238  00126C  0E00               	movlw	low(0)
 10239  00126E  6EDF               	movwf	indf2
 10240  001270  D001               	goto	i1l18741
 10241                           	line	19
 10242                           	
 10243  001272                     i1l9200:
 10244  001272  D000               	goto	i1l18741
 10245                           	line	20
 10246                           	
 10247  001274                     i1l9199:
 10248                           	line	21
 10249                           	
 10250  001274                     i1l18741:
 10251                           ;my_uart.c: 19: }
 10252                           ;my_uart.c: 20: }
 10253                           ;my_uart.c: 21: if (USART_Status.OVERRUN_ERROR == 1) {
 10254                           	
 10255  001274  A64C               	btfss	((c:_USART_Status)),c,3
 10256  001276  D001               	goto	i1u178_21
 10257  001278  D001               	goto	i1u178_20
 10258  00127A                     i1u178_21:
 10259  00127A  D011               	goto	i1l9202
 10260  00127C                     i1u178_20:
 10261                           	line	24
 10262                           	
 10263  00127C                     i1l18743:
 10264                           ;my_uart.c: 24: RCSTAbits.CREN = 0;
 10265  00127C  98AB               	bcf	((c:4011)),c,4	;volatile
 10266                           	line	25
 10267                           ;my_uart.c: 25: RCSTAbits.CREN = 1;
 10268  00127E  88AB               	bsf	((c:4011)),c,4	;volatile
 10269                           	line	26
 10270                           	
 10271  001280                     i1l18745:
 10272                           ;my_uart.c: 26: ToMainLow_sendmsg(0, 30, (void *) 0);
 10273  001280  6E1B               	movwf	(??_uart_recv_int_handler+0+0)&0ffh,c
 10274  001282  0E00               	movlw	low(0)
 10275  001284  6E17               	movwf	((c:?_ToMainLow_sendmsg)),c
 10276  001286  501B               	movf	(??_uart_recv_int_handler+0+0)&0ffh,c,w
 10277  001288  6E1C               	movwf	(??_uart_recv_int_handler+1+0)&0ffh,c
 10278  00128A  0E1E               	movlw	low(01Eh)
 10279  00128C  6E18               	movwf	(0+((c:?_ToMainLow_sendmsg)+01h)),c
 10280  00128E  501C               	movf	(??_uart_recv_int_handler+1+0)&0ffh,c,w
 10281  001290  0E00               	movlw	high(0)
 10282  001292  6E1A               	movwf	(1+((c:?_ToMainLow_sendmsg)+02h)),c
 10283  001294  0E00               	movlw	low(0)
 10284  001296  6E19               	movwf	(0+((c:?_ToMainLow_sendmsg)+02h)),c
 10285  001298  EC2D  F00E         	call	_ToMainLow_sendmsg	;wreg free
 10286  00129C  D000               	goto	i1l9202
 10287                           	line	27
 10288                           	
 10289  00129E                     i1l9201:
 10290                           	line	28
 10291                           	
 10292  00129E                     i1l9202:
 10293  00129E  0012               	return
 10294                           	opt stack 0
 10295                           GLOBAL	__end_of_uart_recv_int_handler
 10296  0012A0                     	__end_of_uart_recv_int_handler:
 10297                           	signat	_uart_recv_int_handler,88
 10298                           	global	_ToMainLow_sendmsg
 10299                           
 10300 ;; *************** function _ToMainLow_sendmsg *****************
 10301 ;; Defined at:
 10302 ;;		line 103 in file "../src/messages.c"
 10303 ;; Parameters:    Size  Location     Type
 10304 ;;  length          1   22[COMRAM] unsigned char 
 10305 ;;  msgtype         1   23[COMRAM] unsigned char 
 10306 ;;  data            2   24[COMRAM] PTR void 
 10307 ;;		 -> adc_int_handler@value(2), timer1_int_handler@result(2), NULL(0), main@uc(5), 
 10308 ;; Auto vars:     Size  Location     Type
 10309 ;;		None
 10310 ;; Return value:  Size  Location     Type
 10311 ;;                  1    wreg      char 
 10312 ;; Registers used:
 10313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10314 ;; Tracked objects:
 10315 ;;		On entry : 0/0
 10316 ;;		On exit  : 0/0
 10317 ;;		Unchanged: 0/0
 10318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10319 ;;      Params:         4       0       0       0       0
 10320 ;;      Locals:         0       0       0       0       0
 10321 ;;      Temps:          0       0       0       0       0
 10322 ;;      Totals:         4       0       0       0       0
 10323 ;;Total ram usage:        4 bytes
 10324 ;; Hardware stack levels used:    1
 10325 ;; Hardware stack levels required when called:    7
 10326 ;; This function calls:
 10327 ;;		_send_msg
 10328 ;; This function is called by:
 10329 ;;		_uart_recv_int_handler
 10330 ;;		_timer1_int_handler
 10331 ;;		_adc_int_handler
 10332 ;; This function uses a non-reentrant model
 10333 ;;
 10334                           psect	text31,class=CODE,space=0,reloc=2
 10335                           global __ptext31
 10336  001C5A                     __ptext31:
 10337                           psect	text31
 10338                           	file	"../src/messages.c"
 10339                           	line	103
 10340                           	global	__size_of_ToMainLow_sendmsg
 10341  0000                     	__size_of_ToMainLow_sendmsg	equ	__end_of_ToMainLow_sendmsg-_ToMainLow_sendmsg
 10342                           	
 10343  001C5A                     _ToMainLow_sendmsg:
 10344                           	opt	stack 16
 10345                           	line	109
 10346                           	
 10347  001C5A                     i1l18713:
 10348                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
 10349                           ;	Return value of _ToMainLow_sendmsg is never used
 10350  001C5A  0100               	movlb	0	; () banked
 10351  001C5C  0E00               	movlw	high(_ToMainLow_MQ)
 10352  001C5E  6E0C               	movwf	((c:?_send_msg+1)),c
 10353  001C60  0100               	movlb	0	; () banked
 10354  001C62  0E80               	movlw	low(_ToMainLow_MQ)
 10355  001C64  6E0B               	movwf	((c:?_send_msg)),c
 10356  001C66  C017  F00D         	movff	(c:ToMainLow_sendmsg@length),0+((c:?_send_msg)+02h)
 10357  001C6A  C018  F00E         	movff	(c:ToMainLow_sendmsg@msgtype),0+((c:?_send_msg)+03h)
 10358  001C6E  C019  F00F         	movff	(c:ToMainLow_sendmsg@data),0+((c:?_send_msg)+04h)
 10359  001C72  C01A  F010         	movff	(c:ToMainLow_sendmsg@data+1),1+((c:?_send_msg)+04h)
 10360  001C76  ECAA  F009         	call	_send_msg	;wreg free
 10361  001C7A  D000               	goto	i1l5487
 10362                           	
 10363  001C7C                     i1l18715:
 10364                           	line	110
 10365                           	
 10366  001C7C                     i1l5487:
 10367  001C7C  0012               	return
 10368                           	opt stack 0
 10369                           GLOBAL	__end_of_ToMainLow_sendmsg
 10370  001C7E                     	__end_of_ToMainLow_sendmsg:
 10371                           	signat	_ToMainLow_sendmsg,12409
 10372                           	global	_send_msg
 10373                           
 10374 ;; *************** function _send_msg *****************
 10375 ;; Defined at:
 10376 ;;		line 24 in file "../src/messages.c"
 10377 ;; Parameters:    Size  Location     Type
 10378 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
 10379 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 10380 ;;  length          1   12[COMRAM] unsigned char 
 10381 ;;  msgtype         1   13[COMRAM] unsigned char 
 10382 ;;  data            2   14[COMRAM] PTR void 
 10383 ;;		 -> adc_int_handler@value(2), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 10384 ;;		 -> i2c_int_handler@error_buf(3), main@ic(28), main@uc(5), 
 10385 ;; Auto vars:     Size  Location     Type
 10386 ;;  qmsg            2   20[COMRAM] PTR struct __msg
 10387 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 10388 ;;  tlength         2   17[COMRAM] unsigned int 
 10389 ;;  slot            1   19[COMRAM] unsigned char 
 10390 ;; Return value:  Size  Location     Type
 10391 ;;                  1    wreg      char 
 10392 ;; Registers used:
 10393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10394 ;; Tracked objects:
 10395 ;;		On entry : 0/0
 10396 ;;		On exit  : 0/0
 10397 ;;		Unchanged: 0/0
 10398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10399 ;;      Params:         6       0       0       0       0
 10400 ;;      Locals:         5       0       0       0       0
 10401 ;;      Temps:          1       0       0       0       0
 10402 ;;      Totals:        12       0       0       0       0
 10403 ;;Total ram usage:       12 bytes
 10404 ;; Hardware stack levels used:    1
 10405 ;; Hardware stack levels required when called:    6
 10406 ;; This function calls:
 10407 ;;		i1_memcpy
 10408 ;; This function is called by:
 10409 ;;		_ToMainLow_sendmsg
 10410 ;;		_FromMainLow_sendmsg
 10411 ;;		_FromMainHigh_sendmsg
 10412 ;; This function uses a non-reentrant model
 10413 ;;
 10414                           psect	text32,class=CODE,space=0,reloc=2
 10415                           global __ptext32
 10416  001354                     __ptext32:
 10417                           psect	text32
 10418                           	file	"../src/messages.c"
 10419                           	line	24
 10420                           	global	__size_of_send_msg
 10421  0000                     	__size_of_send_msg	equ	__end_of_send_msg-_send_msg
 10422                           	
 10423  001354                     _send_msg:
 10424                           	opt	stack 16
 10425                           	line	28
 10426                           	
 10427  001354                     i1l18689:
 10428                           ;messages.c: 25: unsigned char slot;
 10429                           ;messages.c: 27: msg *qmsg;
 10430                           ;messages.c: 28: size_t tlength = length;
 10431  001354  C00D  F012         	movff	(c:send_msg@length),(c:send_msg@tlength)
 10432  001358  6A13               	clrf	((c:send_msg@tlength+1)),c
 10433                           	line	38
 10434                           	
 10435  00135A                     i1l18691:
 10436                           ;messages.c: 38: slot = qptr->cur_write_ind;
 10437  00135A  EE20 F034          	lfsr	2,034h
 10438  00135E  500B               	movf	((c:send_msg@qptr)),c,w
 10439  001360  26D9               	addwf	fsr2l
 10440  001362  500C               	movf	((c:send_msg@qptr+1)),c,w
 10441  001364  22DA               	addwfc	fsr2h
 10442  001366  50DF               	movf	indf2,w
 10443  001368  6E14               	movwf	((c:send_msg@slot)),c
 10444                           	line	39
 10445                           	
 10446  00136A                     i1l18693:
 10447                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
 10448  00136A  5014               	movf	((c:send_msg@slot)),c,w
 10449  00136C  0D0D               	mullw	0Dh
 10450  00136E  50F3               	movf	(prodl),c,w
 10451  001370  240B               	addwf	((c:send_msg@qptr)),c,w
 10452                           	
 10453  001372  6E15               	movwf	((c:send_msg@qmsg)),c
 10454  001374  50F4               	movf	(prodh),c,w
 10455  001376  200C               	addwfc	((c:send_msg@qptr+1)),c,w
 10456  001378  6E16               	movwf	1+((c:send_msg@qmsg)),c
 10457                           	line	41
 10458                           	
 10459  00137A                     i1l18695:
 10460                           ;messages.c: 41: if (qmsg->full != 0) {
 10461  00137A  C015  FFD9         	movff	(c:send_msg@qmsg),fsr2l
 10462  00137E  C016  FFDA         	movff	(c:send_msg@qmsg+1),fsr2h
 10463  001382  50DF               	movf	indf2,w
 10464  001384  B4D8               	btfsc	status,2
 10465  001386  D001               	goto	i1u175_21
 10466  001388  D001               	goto	i1u175_20
 10467  00138A                     i1u175_21:
 10468  00138A  D003               	goto	i1l18701
 10469  00138C                     i1u175_20:
 10470                           	line	42
 10471                           	
 10472  00138C                     i1l18697:
 10473                           ;messages.c: 42: return (-1);
 10474  00138C  0EFF               	movlw	(-1)&0ffh
 10475  00138E  D03A               	goto	i1l5476
 10476                           	
 10477  001390                     i1l18699:
 10478  001390  D039               	goto	i1l5476
 10479                           	line	43
 10480                           	
 10481  001392                     i1l5475:
 10482                           	line	46
 10483                           	
 10484  001392                     i1l18701:
 10485                           ;messages.c: 43: }
 10486                           ;messages.c: 46: qmsg->length = length;
 10487  001392  EE20 F001          	lfsr	2,01h
 10488  001396  5015               	movf	((c:send_msg@qmsg)),c,w
 10489  001398  26D9               	addwf	fsr2l
 10490  00139A  5016               	movf	((c:send_msg@qmsg+1)),c,w
 10491  00139C  22DA               	addwfc	fsr2h
 10492  00139E  C00D  FFDF         	movff	(c:send_msg@length),indf2
 10493                           
 10494                           	line	47
 10495                           ;messages.c: 47: qmsg->msgtype = msgtype;
 10496  0013A2  EE20 F002          	lfsr	2,02h
 10497  0013A6  5015               	movf	((c:send_msg@qmsg)),c,w
 10498  0013A8  26D9               	addwf	fsr2l
 10499  0013AA  5016               	movf	((c:send_msg@qmsg+1)),c,w
 10500  0013AC  22DA               	addwfc	fsr2h
 10501  0013AE  C00E  FFDF         	movff	(c:send_msg@msgtype),indf2
 10502                           
 10503                           	line	55
 10504                           	
 10505  0013B2                     i1l18703:
 10506                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
 10507  0013B2  0E03               	movlw	low(03h)
 10508  0013B4  2415               	addwf	((c:send_msg@qmsg)),c,w
 10509                           	
 10510  0013B6  6E01               	movwf	((c:?i1_memcpy)),c
 10511  0013B8  0E00               	movlw	high(03h)
 10512  0013BA  2016               	addwfc	((c:send_msg@qmsg+1)),c,w
 10513  0013BC  6E02               	movwf	1+((c:?i1_memcpy)),c
 10514  0013BE  C00F  F003         	movff	(c:send_msg@data),0+((c:?i1_memcpy)+02h)
 10515  0013C2  C010  F004         	movff	(c:send_msg@data+1),1+((c:?i1_memcpy)+02h)
 10516  0013C6  C012  F005         	movff	(c:send_msg@tlength),0+((c:?i1_memcpy)+04h)
 10517  0013CA  C013  F006         	movff	(c:send_msg@tlength+1),1+((c:?i1_memcpy)+04h)
 10518  0013CE  ECA8  F00C         	call	i1_memcpy	;wreg free
 10519                           	line	56
 10520                           	
 10521  0013D2                     i1l18705:
 10522                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
 10523  0013D2  EE20 F034          	lfsr	2,034h
 10524  0013D6  500B               	movf	((c:send_msg@qptr)),c,w
 10525  0013D8  26D9               	addwf	fsr2l
 10526  0013DA  500C               	movf	((c:send_msg@qptr+1)),c,w
 10527  0013DC  22DA               	addwfc	fsr2h
 10528  0013DE  EE10 F034          	lfsr	1,034h
 10529  0013E2  500B               	movf	((c:send_msg@qptr)),c,w
 10530  0013E4  26E1               	addwf	fsr1l
 10531  0013E6  500C               	movf	((c:send_msg@qptr+1)),c,w
 10532  0013E8  22E2               	addwfc	fsr1h
 10533  0013EA  50E7               	movf	indf1,w
 10534  0013EC  6E11               	movwf	(??_send_msg+0+0)&0ffh,c
 10535  0013EE  2811               	incf	((??_send_msg+0+0)),c,w
 10536  0013F0  0B03               	andlw	low(03h)
 10537  0013F2  6EDF               	movwf	indf2
 10538                           
 10539                           	line	59
 10540                           	
 10541  0013F4                     i1l18707:
 10542                           ;messages.c: 59: qmsg->full = 1;
 10543  0013F4  C015  FFD9         	movff	(c:send_msg@qmsg),fsr2l
 10544  0013F8  C016  FFDA         	movff	(c:send_msg@qmsg+1),fsr2h
 10545  0013FC  0E01               	movlw	low(01h)
 10546  0013FE  6EDF               	movwf	indf2
 10547                           	line	60
 10548                           	
 10549  001400                     i1l18709:
 10550                           ;messages.c: 60: return (1);
 10551  001400  0E01               	movlw	(01h)&0ffh
 10552  001402  D000               	goto	i1l5476
 10553                           	
 10554  001404                     i1l18711:
 10555                           	line	61
 10556                           	
 10557  001404                     i1l5476:
 10558  001404  0012               	return
 10559                           	opt stack 0
 10560                           GLOBAL	__end_of_send_msg
 10561  001406                     	__end_of_send_msg:
 10562                           	signat	_send_msg,16505
 10563                           	global	_ReadUSART
 10564                           
 10565 ;; *************** function _ReadUSART *****************
 10566 ;; Defined at:
 10567 ;;		line 16 in file "plib/USART/uread.c"
 10568 ;; Parameters:    Size  Location     Type
 10569 ;;		None
 10570 ;; Auto vars:     Size  Location     Type
 10571 ;;  data            1    0[COMRAM] unsigned char 
 10572 ;; Return value:  Size  Location     Type
 10573 ;;                  1    wreg      unsigned char 
 10574 ;; Registers used:
 10575 ;;		wreg, status,2, status,0
 10576 ;; Tracked objects:
 10577 ;;		On entry : 0/0
 10578 ;;		On exit  : 0/0
 10579 ;;		Unchanged: 0/0
 10580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10581 ;;      Params:         0       0       0       0       0
 10582 ;;      Locals:         1       0       0       0       0
 10583 ;;      Temps:          0       0       0       0       0
 10584 ;;      Totals:         1       0       0       0       0
 10585 ;;Total ram usage:        1 bytes
 10586 ;; Hardware stack levels used:    1
 10587 ;; Hardware stack levels required when called:    5
 10588 ;; This function calls:
 10589 ;;		Nothing
 10590 ;; This function is called by:
 10591 ;;		_uart_recv_int_handler
 10592 ;; This function uses a non-reentrant model
 10593 ;;
 10594                           psect	text33,class=CODE,space=0,reloc=2
 10595                           global __ptext33
 10596  001AD8                     __ptext33:
 10597                           psect	text33
 10598                           	file	"plib/USART/uread.c"
 10599                           	line	16
 10600                           	global	__size_of_ReadUSART
 10601  0000                     	__size_of_ReadUSART	equ	__end_of_ReadUSART-_ReadUSART
 10602                           	
 10603  001AD8                     _ReadUSART:
 10604                           	opt	stack 18
 10605                           	line	19
 10606                           	
 10607  001AD8                     i1l18551:
 10608  001AD8  0EF2               	movlw	(0F2h)&0ffh
 10609  001ADA  164C               	andwf	((c:_USART_Status)),c
 10610                           	line	21
 10611                           	
 10612  001ADC                     i1l18553:
 10613                           	
 10614  001ADC  ACAB               	btfss	((c:4011)),c,6	;volatile
 10615  001ADE  D001               	goto	i1u163_21
 10616  001AE0  D001               	goto	i1u163_20
 10617  001AE2                     i1u163_21:
 10618  001AE2  D007               	goto	i1l16507
 10619  001AE4                     i1u163_20:
 10620                           	line	23
 10621                           	
 10622  001AE4                     i1l18555:
 10623  001AE4  904C               	bcf	((c:_USART_Status)),c,0
 10624                           	line	24
 10625                           	
 10626  001AE6  A0AB               	btfss	((c:4011)),c,0	;volatile
 10627  001AE8  D001               	goto	i1u164_21
 10628  001AEA  D001               	goto	i1u164_20
 10629  001AEC                     i1u164_21:
 10630  001AEC  D002               	goto	i1l16507
 10631  001AEE                     i1u164_20:
 10632                           	line	25
 10633                           	
 10634  001AEE                     i1l18557:
 10635  001AEE  804C               	bsf	((c:_USART_Status)),c,0
 10636  001AF0  D000               	goto	i1l16507
 10637                           	
 10638  001AF2                     i1l16508:
 10639                           	line	26
 10640                           	
 10641  001AF2                     i1l16507:
 10642                           	line	28
 10643                           	
 10644  001AF2  A4AB               	btfss	((c:4011)),c,2	;volatile
 10645  001AF4  D001               	goto	i1u165_21
 10646  001AF6  D001               	goto	i1u165_20
 10647  001AF8                     i1u165_21:
 10648  001AF8  D001               	goto	i1l16509
 10649  001AFA                     i1u165_20:
 10650                           	line	29
 10651                           	
 10652  001AFA                     i1l18559:
 10653  001AFA  844C               	bsf	((c:_USART_Status)),c,2
 10654                           	
 10655  001AFC                     i1l16509:
 10656                           	line	31
 10657                           	
 10658  001AFC  A2AB               	btfss	((c:4011)),c,1	;volatile
 10659  001AFE  D001               	goto	i1u166_21
 10660  001B00  D001               	goto	i1u166_20
 10661  001B02                     i1u166_21:
 10662  001B02  D001               	goto	i1l16510
 10663  001B04                     i1u166_20:
 10664                           	line	32
 10665                           	
 10666  001B04                     i1l18561:
 10667  001B04  864C               	bsf	((c:_USART_Status)),c,3
 10668                           	
 10669  001B06                     i1l16510:
 10670                           	line	34
 10671  001B06  CFAE F001          	movff	(c:4014),(c:ReadUSART@data)	;volatile
 10672                           	line	36
 10673                           	
 10674  001B0A                     i1l18563:
 10675  001B0A  5001               	movf	((c:ReadUSART@data)),c,w
 10676  001B0C  D000               	goto	i1l16511
 10677                           	
 10678  001B0E                     i1l18565:
 10679                           	line	37
 10680                           	
 10681  001B0E                     i1l16511:
 10682  001B0E  0012               	return
 10683                           	opt stack 0
 10684                           GLOBAL	__end_of_ReadUSART
 10685  001B10                     	__end_of_ReadUSART:
 10686                           	signat	_ReadUSART,89
 10687                           	global	_ReadTimer1
 10688                           
 10689 ;; *************** function _ReadTimer1 *****************
 10690 ;; Defined at:
 10691 ;;		line 16 in file "plib/Timers/t1read.c"
 10692 ;; Parameters:    Size  Location     Type
 10693 ;;		None
 10694 ;; Auto vars:     Size  Location     Type
 10695 ;;  timer           2    2[COMRAM] struct Timers
 10696 ;; Return value:  Size  Location     Type
 10697 ;;                  2    0[COMRAM] unsigned int 
 10698 ;; Registers used:
 10699 ;;		None
 10700 ;; Tracked objects:
 10701 ;;		On entry : 0/0
 10702 ;;		On exit  : 0/0
 10703 ;;		Unchanged: 0/0
 10704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10705 ;;      Params:         2       0       0       0       0
 10706 ;;      Locals:         2       0       0       0       0
 10707 ;;      Temps:          0       0       0       0       0
 10708 ;;      Totals:         4       0       0       0       0
 10709 ;;Total ram usage:        4 bytes
 10710 ;; Hardware stack levels used:    1
 10711 ;; Hardware stack levels required when called:    5
 10712 ;; This function calls:
 10713 ;;		Nothing
 10714 ;; This function is called by:
 10715 ;;		_timer1_int_handler
 10716 ;; This function uses a non-reentrant model
 10717 ;;
 10718                           psect	text34,class=CODE,space=0,reloc=2
 10719                           global __ptext34
 10720  001D00                     __ptext34:
 10721                           psect	text34
 10722                           	file	"plib/Timers/t1read.c"
 10723                           	line	16
 10724                           	global	__size_of_ReadTimer1
 10725  0000                     	__size_of_ReadTimer1	equ	__end_of_ReadTimer1-_ReadTimer1
 10726                           	
 10727  001D00                     _ReadTimer1:
 10728                           	opt	stack 18
 10729                           	line	19
 10730                           	
 10731  001D00                     i1l17711:
 10732  001D00  CFCE F003          	movff	(c:4046),(c:ReadTimer1@timer)	;volatile
 10733                           	line	20
 10734  001D04  CFCF F004          	movff	(c:4047),0+((c:ReadTimer1@timer)+01h)	;volatile
 10735                           	line	22
 10736  001D08  C003  F001         	movff	(c:ReadTimer1@timer),(c:?_ReadTimer1)
 10737  001D0C  C004  F002         	movff	(c:ReadTimer1@timer+1),(c:?_ReadTimer1+1)
 10738                           	line	23
 10739                           	
 10740  001D10                     i1l16456:
 10741  001D10  0012               	return
 10742                           	opt stack 0
 10743                           GLOBAL	__end_of_ReadTimer1
 10744  001D12                     	__end_of_ReadTimer1:
 10745                           	signat	_ReadTimer1,90
 10746                           	global	_WriteTimer1
 10747                           
 10748 ;; *************** function _WriteTimer1 *****************
 10749 ;; Defined at:
 10750 ;;		line 15 in file "plib/Timers/t1write.c"
 10751 ;; Parameters:    Size  Location     Type
 10752 ;;  timer1          2    0[COMRAM] unsigned int 
 10753 ;; Auto vars:     Size  Location     Type
 10754 ;;  timer           2    2[COMRAM] struct Timers
 10755 ;; Return value:  Size  Location     Type
 10756 ;;		None               void
 10757 ;; Registers used:
 10758 ;;		None
 10759 ;; Tracked objects:
 10760 ;;		On entry : 0/0
 10761 ;;		On exit  : 0/0
 10762 ;;		Unchanged: 0/0
 10763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10764 ;;      Params:         2       0       0       0       0
 10765 ;;      Locals:         2       0       0       0       0
 10766 ;;      Temps:          0       0       0       0       0
 10767 ;;      Totals:         4       0       0       0       0
 10768 ;;Total ram usage:        4 bytes
 10769 ;; Hardware stack levels used:    1
 10770 ;; Hardware stack levels required when called:    5
 10771 ;; This function calls:
 10772 ;;		Nothing
 10773 ;; This function is called by:
 10774 ;;		_timer1_int_handler
 10775 ;; This function uses a non-reentrant model
 10776 ;;
 10777                           psect	text35,class=CODE,space=0,reloc=2
 10778                           global __ptext35
 10779  001D12                     __ptext35:
 10780                           psect	text35
 10781                           	file	"plib/Timers/t1write.c"
 10782                           	line	15
 10783                           	global	__size_of_WriteTimer1
 10784  0000                     	__size_of_WriteTimer1	equ	__end_of_WriteTimer1-_WriteTimer1
 10785                           	
 10786  001D12                     _WriteTimer1:
 10787                           	opt	stack 18
 10788                           	line	18
 10789                           	
 10790  001D12                     i1l17713:
 10791  001D12  C001  F003         	movff	(c:WriteTimer1@timer1),(c:WriteTimer1@timer)
 10792  001D16  C002  F004         	movff	(c:WriteTimer1@timer1+1),(c:WriteTimer1@timer+1)
 10793                           	line	20
 10794  001D1A  C004  FFCF         	movff	0+((c:WriteTimer1@timer)+01h),(c:4047)	;volatile
 10795                           	line	21
 10796  001D1E  C003  FFCE         	movff	(c:WriteTimer1@timer),(c:4046)	;volatile
 10797                           	line	22
 10798                           	
 10799  001D22                     i1l16463:
 10800  001D22  0012               	return
 10801                           	opt stack 0
 10802                           GLOBAL	__end_of_WriteTimer1
 10803  001D24                     	__end_of_WriteTimer1:
 10804                           	signat	_WriteTimer1,4216
 10805                           	global	_ReadADC
 10806                           
 10807 ;; *************** function _ReadADC *****************
 10808 ;; Defined at:
 10809 ;;		line 25 in file "plib/ADC/adcread.c"
 10810 ;; Parameters:    Size  Location     Type
 10811 ;;		None
 10812 ;; Auto vars:     Size  Location     Type
 10813 ;;		None
 10814 ;; Return value:  Size  Location     Type
 10815 ;;                  2    0[COMRAM] int 
 10816 ;; Registers used:
 10817 ;;		wreg, status,2
 10818 ;; Tracked objects:
 10819 ;;		On entry : 0/0
 10820 ;;		On exit  : 0/0
 10821 ;;		Unchanged: 0/0
 10822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10823 ;;      Params:         2       0       0       0       0
 10824 ;;      Locals:         0       0       0       0       0
 10825 ;;      Temps:          0       0       0       0       0
 10826 ;;      Totals:         2       0       0       0       0
 10827 ;;Total ram usage:        2 bytes
 10828 ;; Hardware stack levels used:    1
 10829 ;; Hardware stack levels required when called:    5
 10830 ;; This function calls:
 10831 ;;		Nothing
 10832 ;; This function is called by:
 10833 ;;		_adc_int_handler
 10834 ;; This function uses a non-reentrant model
 10835 ;;
 10836                           psect	text36,class=CODE,space=0,reloc=2
 10837                           global __ptext36
 10838  001D44                     __ptext36:
 10839                           psect	text36
 10840                           	file	"plib/ADC/adcread.c"
 10841                           	line	25
 10842                           	global	__size_of_ReadADC
 10843  0000                     	__size_of_ReadADC	equ	__end_of_ReadADC-_ReadADC
 10844                           	
 10845  001D44                     _ReadADC:
 10846                           	opt	stack 18
 10847                           	line	26
 10848                           	
 10849  001D44                     i1l17715:
 10850  001D44  50C4               	movf	((c:4036)),c,w	;volatile
 10851  001D46  6E02               	movwf	((c:?_ReadADC+1)),c
 10852  001D48  50C3               	movf	((c:4035)),c,w	;volatile
 10853  001D4A  6E01               	movwf	((c:?_ReadADC)),c
 10854  001D4C  D000               	goto	i1l16416
 10855                           	
 10856  001D4E                     i1l17717:
 10857                           	line	27
 10858                           	
 10859  001D4E                     i1l16416:
 10860  001D4E  0012               	return
 10861                           	opt stack 0
 10862                           GLOBAL	__end_of_ReadADC
 10863  001D50                     	__end_of_ReadADC:
 10864                           	signat	_ReadADC,90
 10865                           	global	i1_memcpy
 10866                           
 10867 ;; *************** function i1_memcpy *****************
 10868 ;; Defined at:
 10869 ;;		line 13 in file "/opt/microchip/xc8/v1.10/sources/memcpy.c"
 10870 ;; Parameters:    Size  Location     Type
 10871 ;;  memcpy          2    0[COMRAM] PTR void 
 10872 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 10873 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
 10874 ;;  memcpy          2    2[COMRAM] PTR const void 
 10875 ;;		 -> adc_int_handler@value(2), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 10876 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 10877 ;;		 -> ToMainLow_MQ(54), main@ic(28), main@uc(5), 
 10878 ;;  memcpy          2    4[COMRAM] unsigned int 
 10879 ;; Auto vars:     Size  Location     Type
 10880 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 10881 ;;		 -> adc_int_handler@value(2), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 10882 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 10883 ;;		 -> ToMainLow_MQ(54), main@ic(28), main@uc(5), 
 10884 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 10885 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 10886 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
 10887 ;; Return value:  Size  Location     Type
 10888 ;;                  2    0[COMRAM] PTR void 
 10889 ;; Registers used:
 10890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10891 ;; Tracked objects:
 10892 ;;		On entry : 0/0
 10893 ;;		On exit  : 0/0
 10894 ;;		Unchanged: 0/0
 10895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10896 ;;      Params:         6       0       0       0       0
 10897 ;;      Locals:         4       0       0       0       0
 10898 ;;      Temps:          0       0       0       0       0
 10899 ;;      Totals:        10       0       0       0       0
 10900 ;;Total ram usage:       10 bytes
 10901 ;; Hardware stack levels used:    1
 10902 ;; Hardware stack levels required when called:    5
 10903 ;; This function calls:
 10904 ;;		Nothing
 10905 ;; This function is called by:
 10906 ;;		_send_msg
 10907 ;; This function uses a non-reentrant model
 10908 ;;
 10909                           psect	text37,class=CODE,space=0,reloc=2
 10910                           global __ptext37
 10911  001950                     __ptext37:
 10912                           psect	text37
 10913                           	file	"/opt/microchip/xc8/v1.10/sources/memcpy.c"
 10914                           	line	13
 10915                           	global	__size_ofi1_memcpy
 10916  0000                     	__size_ofi1_memcpy	equ	__end_ofi1_memcpy-i1_memcpy
 10917                           	
 10918  001950                     i1_memcpy:
 10919                           	opt	stack 16
 10920                           	line	24
 10921                           	
 10922  001950                     i1l18669:
 10923  001950  C003  F009         	movff	(c:i1memcpy@s1),(c:i1memcpy@s)
 10924  001954  C004  F00A         	movff	(c:i1memcpy@s1+1),(c:i1memcpy@s+1)
 10925                           	line	25
 10926  001958  C001  F007         	movff	(c:i1memcpy@d1),(c:i1memcpy@d)
 10927  00195C  C002  F008         	movff	(c:i1memcpy@d1+1),(c:i1memcpy@d+1)
 10928                           	line	26
 10929  001960  D00F               	goto	i1l18677
 10930                           	
 10931  001962                     i1l17005:
 10932                           	line	27
 10933                           	
 10934  001962                     i1l18671:
 10935  001962  C009  FFD9         	movff	(c:i1memcpy@s),fsr2l
 10936  001966  C00A  FFDA         	movff	(c:i1memcpy@s+1),fsr2h
 10937  00196A  C007  FFE1         	movff	(c:i1memcpy@d),fsr1l
 10938  00196E  C008  FFE2         	movff	(c:i1memcpy@d+1),fsr1h
 10939  001972  CFDF FFE7          	movff	indf2,indf1
 10940                           	
 10941  001976                     i1l18673:
 10942  001976  4A09               	infsnz	((c:i1memcpy@s)),c
 10943  001978  2A0A               	incf	((c:i1memcpy@s+1)),c
 10944                           	
 10945  00197A                     i1l18675:
 10946  00197A  4A07               	infsnz	((c:i1memcpy@d)),c
 10947  00197C  2A08               	incf	((c:i1memcpy@d+1)),c
 10948  00197E  D000               	goto	i1l18677
 10949                           	
 10950  001980                     i1l17004:
 10951                           	line	26
 10952                           	
 10953  001980                     i1l18677:
 10954  001980  0605               	decf	((c:i1memcpy@n)),c
 10955  001982  A0D8               	btfss	status,0
 10956  001984  0606               	decf	((c:i1memcpy@n+1)),c
 10957  001986  2805               	incf	((c:i1memcpy@n))&0ffh,w
 10958  001988  B4D8               	btfsc	status,2
 10959  00198A  2806               	incf ((c:i1memcpy@n+1))&0ffh,w
 10960                           
 10961  00198C  A4D8               	btfss	status,2
 10962  00198E  D001               	goto	i1u173_21
 10963  001990  D001               	goto	i1u173_20
 10964  001992                     i1u173_21:
 10965  001992  D7E7               	goto	i1l18671
 10966  001994                     i1u173_20:
 10967  001994  D000               	goto	i1l17007
 10968                           	
 10969  001996                     i1l17006:
 10970                           	line	32
 10971                           ;	Return value of i1_memcpy is never used
 10972                           	
 10973  001996                     i1l17007:
 10974  001996  0012               	return
 10975                           	opt stack 0
 10976                           GLOBAL	__end_ofi1_memcpy
 10977  001998                     	__end_ofi1_memcpy:
 10978                           	signat	i1_memcpy,90
 10979                           	global	_InterruptHandlerHigh
 10980                           
 10981 ;; *************** function _InterruptHandlerHigh *****************
 10982 ;; Defined at:
 10983 ;;		line 83 in file "../src/interrupts.c"
 10984 ;; Parameters:    Size  Location     Type
 10985 ;;		None
 10986 ;; Auto vars:     Size  Location     Type
 10987 ;;		None
 10988 ;; Return value:  Size  Location     Type
 10989 ;;		None               void
 10990 ;; Registers used:
 10991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10992 ;; Tracked objects:
 10993 ;;		On entry : 0/0
 10994 ;;		On exit  : 0/0
 10995 ;;		Unchanged: 0/0
 10996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10997 ;;      Params:         0       0       0       0       0
 10998 ;;      Locals:         0       0       0       0       0
 10999 ;;      Temps:          0      14       0       0       0
 11000 ;;      Totals:         0      14       0       0       0
 11001 ;;Total ram usage:       14 bytes
 11002 ;; Hardware stack levels used:    1
 11003 ;; Hardware stack levels required when called:    4
 11004 ;; This function calls:
 11005 ;;		_i2c_int_handler
 11006 ;;		_timer0_int_handler
 11007 ;;		_SleepIfOkay
 11008 ;; This function is called by:
 11009 ;;		Interrupt level 2
 11010 ;; This function uses a non-reentrant model
 11011 ;;
 11012                           psect	intcode,class=CODE,space=0,reloc=2
 11013                           global __pintcode
 11014  000008                     __pintcode:
 11015                           psect	intcode
 11016                           	file	"../src/interrupts.c"
 11017                           	line	83
 11018                           	global	__size_of_InterruptHandlerHigh
 11019  0000                     	__size_of_InterruptHandlerHigh	equ	__end_of_InterruptHandlerHigh-_InterruptHandlerHigh
 11020                           	
 11021  000008                     _InterruptHandlerHigh:
 11022                           	opt	stack 16
 11023  000008  CFFA F0C8          	movff	pclat+0,??_InterruptHandlerHigh+0
 11024  00000C  CFFB F0C9          	movff	pclat+1,??_InterruptHandlerHigh+1
 11025  000010  CFE9 F0CA          	movff	fsr0l+0,??_InterruptHandlerHigh+2
 11026                           	global	int_func
 11027  000014  EF5C  F00A         	goto	int_func
 11028                           psect	intcode_body,class=CODE,space=0,reloc=2
 11029                           global __pintcode_body
 11030  0014B8                     __pintcode_body:
 11031  0014B8                     int_func:
 11032  0014B8  CFEA F0CB          	movff	fsr0h+0,??_InterruptHandlerHigh+3
 11033  0014BC  CFE1 F0CC          	movff	fsr1l+0,??_InterruptHandlerHigh+4
 11034  0014C0  CFE2 F0CD          	movff	fsr1h+0,??_InterruptHandlerHigh+5
 11035  0014C4  CFD9 F0CE          	movff	fsr2l+0,??_InterruptHandlerHigh+6
 11036  0014C8  CFDA F0CF          	movff	fsr2h+0,??_InterruptHandlerHigh+7
 11037  0014CC  CFF3 F0D0          	movff	prodl+0,??_InterruptHandlerHigh+8
 11038  0014D0  CFF4 F0D1          	movff	prodh+0,??_InterruptHandlerHigh+9
 11039  0014D4  CFF6 F0D2          	movff	tblptrl+0,??_InterruptHandlerHigh+10
 11040  0014D8  CFF7 F0D3          	movff	tblptrh+0,??_InterruptHandlerHigh+11
 11041  0014DC  CFF8 F0D4          	movff	tblptru+0,??_InterruptHandlerHigh+12
 11042  0014E0  CFF5 F0D5          	movff	tablat+0,??_InterruptHandlerHigh+13
 11043                           	line	88
 11044                           	
 11045  0014E4                     i2l18765:
 11046                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
 11047                           	
 11048  0014E4  A69E               	btfss	((c:3998)),c,3	;volatile
 11049  0014E6  D001               	goto	i2u182_41
 11050  0014E8  D001               	goto	i2u182_40
 11051  0014EA                     i2u182_41:
 11052  0014EA  D004               	goto	i2l18771
 11053  0014EC                     i2u182_40:
 11054                           	line	90
 11055                           	
 11056  0014EC                     i2l18767:
 11057                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
 11058  0014EC  969E               	bcf	((c:3998)),c,3	;volatile
 11059                           	line	92
 11060                           	
 11061  0014EE                     i2l18769:
 11062                           ;interrupts.c: 92: i2c_int_handler();
 11063  0014EE  EC6B  F000         	call	_i2c_int_handler	;wreg free
 11064  0014F2  D000               	goto	i2l18771
 11065                           	line	93
 11066                           	
 11067  0014F4                     i2l1820:
 11068                           	line	96
 11069                           	
 11070  0014F4                     i2l18771:
 11071                           ;interrupts.c: 93: }
 11072                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
 11073                           	
 11074  0014F4  A4F2               	btfss	((c:4082)),c,2	;volatile
 11075  0014F6  D001               	goto	i2u183_41
 11076  0014F8  D001               	goto	i2u183_40
 11077  0014FA                     i2u183_41:
 11078  0014FA  D004               	goto	i2l18777
 11079  0014FC                     i2u183_40:
 11080                           	line	97
 11081                           	
 11082  0014FC                     i2l18773:
 11083                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
 11084  0014FC  94F2               	bcf	((c:4082)),c,2	;volatile
 11085                           	line	99
 11086                           	
 11087  0014FE                     i2l18775:
 11088                           ;interrupts.c: 99: timer0_int_handler();
 11089  0014FE  EC95  F008         	call	_timer0_int_handler	;wreg free
 11090  001502  D000               	goto	i2l18777
 11091                           	line	100
 11092                           	
 11093  001504                     i2l1821:
 11094                           	line	109
 11095                           	
 11096  001504                     i2l18777:
 11097                           ;interrupts.c: 100: }
 11098                           ;interrupts.c: 109: SleepIfOkay();
 11099  001504  EC26  F00B         	call	_SleepIfOkay	;wreg free
 11100                           	line	110
 11101                           	
 11102  001508                     i2l1822:
 11103  001508  C0D5  FFF5         	movff	??_InterruptHandlerHigh+13,tablat+0
 11104  00150C  C0D4  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru+0
 11105  001510  C0D3  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh+0
 11106  001514  C0D2  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl+0
 11107  001518  C0D1  FFF4         	movff	??_InterruptHandlerHigh+9,prodh+0
 11108  00151C  C0D0  FFF3         	movff	??_InterruptHandlerHigh+8,prodl+0
 11109  001520  C0CF  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h+0
 11110  001524  C0CE  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l+0
 11111  001528  C0CD  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h+0
 11112  00152C  C0CC  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l+0
 11113  001530  C0CB  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h+0
 11114  001534  C0CA  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l+0
 11115  001538  C0C9  FFFB         	movff	??_InterruptHandlerHigh+1,pclat+1
 11116  00153C  C0C8  FFFA         	movff	??_InterruptHandlerHigh+0,pclat+0
 11117  001540  0011               	retfie f
 11118                           	opt stack 0
 11119                           GLOBAL	__end_of_InterruptHandlerHigh
 11120  001542                     	__end_of_InterruptHandlerHigh:
 11121                           	signat	_InterruptHandlerHigh,88
 11122                           	global	_i2c_int_handler
 11123                           
 11124 ;; *************** function _i2c_int_handler *****************
 11125 ;; Defined at:
 11126 ;;		line 100 in file "../src/my_i2c.c"
 11127 ;; Parameters:    Size  Location     Type
 11128 ;;		None
 11129 ;; Auto vars:     Size  Location     Type
 11130 ;;  error_buf       3    6[BANK0 ] unsigned char [3]
 11131 ;;  data_read       1   14[BANK0 ] unsigned char 
 11132 ;;  msg_ready       1   13[BANK0 ] unsigned char 
 11133 ;;  msg_to_send     1   12[BANK0 ] unsigned char 
 11134 ;;  i2c_data        1   11[BANK0 ] unsigned char 
 11135 ;;  overrun_erro    1   10[BANK0 ] unsigned char 
 11136 ;;  data_written    1    9[BANK0 ] unsigned char 
 11137 ;; Return value:  Size  Location     Type
 11138 ;;		None               void
 11139 ;; Registers used:
 11140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11141 ;; Tracked objects:
 11142 ;;		On entry : 0/0
 11143 ;;		On exit  : 0/0
 11144 ;;		Unchanged: 0/0
 11145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11146 ;;      Params:         0       0       0       0       0
 11147 ;;      Locals:         0       9       0       0       0
 11148 ;;      Temps:          0       2       0       0       0
 11149 ;;      Totals:         0      11       0       0       0
 11150 ;;Total ram usage:       11 bytes
 11151 ;; Hardware stack levels used:    1
 11152 ;; Hardware stack levels required when called:    3
 11153 ;; This function calls:
 11154 ;;		_handle_start
 11155 ;;		_ToMainHigh_sendmsg
 11156 ;; This function is called by:
 11157 ;;		_InterruptHandlerHigh
 11158 ;; This function uses a non-reentrant model
 11159 ;;
 11160                           psect	text39,class=CODE,space=0,reloc=2
 11161                           global __ptext39
 11162  0000D6                     __ptext39:
 11163                           psect	text39
 11164                           	file	"../src/my_i2c.c"
 11165                           	line	100
 11166                           	global	__size_of_i2c_int_handler
 11167  0000                     	__size_of_i2c_int_handler	equ	__end_of_i2c_int_handler-_i2c_int_handler
 11168                           	
 11169  0000D6                     _i2c_int_handler:
 11170                           	opt	stack 16
 11171                           	line	102
 11172                           	
 11173  0000D6                     i2l18779:
 11174                           ;my_i2c.c: 101: unsigned char i2c_data;
 11175                           ;my_i2c.c: 102: unsigned char data_read = 0;
 11176  0000D6  0100               	movlb	0	; () banked
 11177  0000D8  6FBA               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11178  0000DA  0E00               	movlw	low(0)
 11179  0000DC  0100               	movlb	0	; () banked
 11180  0000DE  0100               	movlb	0	; () banked
 11181  0000E0  6FC4               	movwf	((i2c_int_handler@data_read))&0ffh
 11182  0000E2  0100               	movlb	0	; () banked
 11183  0000E4  51BA               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11184                           	line	103
 11185                           ;my_i2c.c: 103: unsigned char data_written = 0;
 11186  0000E6  0100               	movlb	0	; () banked
 11187  0000E8  6FBA               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11188  0000EA  0E00               	movlw	low(0)
 11189  0000EC  0100               	movlb	0	; () banked
 11190  0000EE  0100               	movlb	0	; () banked
 11191  0000F0  6FBF               	movwf	((i2c_int_handler@data_written))&0ffh
 11192  0000F2  0100               	movlb	0	; () banked
 11193  0000F4  51BA               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11194                           	line	104
 11195                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
 11196  0000F6  0100               	movlb	0	; () banked
 11197  0000F8  6FBA               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11198  0000FA  0E00               	movlw	low(0)
 11199  0000FC  0100               	movlb	0	; () banked
 11200  0000FE  0100               	movlb	0	; () banked
 11201  000100  6FC3               	movwf	((i2c_int_handler@msg_ready))&0ffh
 11202  000102  0100               	movlb	0	; () banked
 11203  000104  51BA               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11204                           	line	105
 11205                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
 11206  000106  0100               	movlb	0	; () banked
 11207  000108  6FBA               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11208  00010A  0E00               	movlw	low(0)
 11209  00010C  0100               	movlb	0	; () banked
 11210  00010E  0100               	movlb	0	; () banked
 11211  000110  6FC2               	movwf	((i2c_int_handler@msg_to_send))&0ffh
 11212  000112  0100               	movlb	0	; () banked
 11213  000114  51BA               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11214                           	line	106
 11215                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
 11216  000116  0100               	movlb	0	; () banked
 11217  000118  6FBA               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11218  00011A  0E00               	movlw	low(0)
 11219  00011C  0100               	movlb	0	; () banked
 11220  00011E  0100               	movlb	0	; () banked
 11221  000120  6FC0               	movwf	((i2c_int_handler@overrun_error))&0ffh
 11222  000122  0100               	movlb	0	; () banked
 11223  000124  51BA               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11224                           	line	110
 11225                           	
 11226  000126                     i2l18781:; BSR set to: 0
 11227                           
 11228                           ;my_i2c.c: 107: unsigned char error_buf[3];
 11229                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
 11230                           	
 11231  000126  ACC6               	btfss	((c:4038)),c,6	;volatile
 11232  000128  D001               	goto	i2u184_41
 11233  00012A  D001               	goto	i2u184_40
 11234  00012C                     i2u184_41:
 11235  00012C  D02A               	goto	i2l18793
 11236  00012E                     i2u184_40:
 11237                           	line	111
 11238                           	
 11239  00012E                     i2l18783:; BSR set to: 0
 11240                           
 11241                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
 11242  00012E  9CC6               	bcf	((c:4038)),c,6	;volatile
 11243                           	line	115
 11244                           	
 11245  000130                     i2l18785:; BSR set to: 0
 11246                           
 11247                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
 11248  000130  0100               	movlb	0	; () banked
 11249  000132  EE20 F00C          	lfsr	2,0Ch
 11250  000136  0100               	movlb	0	; () banked
 11251  000138  51DE               	movf	((_ic_ptr))&0ffh,w
 11252  00013A  26D9               	addwf	fsr2l
 11253  00013C  0100               	movlb	0	; () banked
 11254  00013E  51DF               	movf	((_ic_ptr+1))&0ffh,w
 11255  000140  22DA               	addwfc	fsr2h
 11256  000142  0E05               	movlw	low(05h)
 11257  000144  6EDF               	movwf	indf2
 11258                           	line	116
 11259                           	
 11260  000146                     i2l18787:; BSR set to: 0
 11261                           
 11262                           ;my_i2c.c: 116: overrun_error = 1;
 11263  000146  0100               	movlb	0	; () banked
 11264  000148  6FBA               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11265  00014A  0E01               	movlw	low(01h)
 11266  00014C  0100               	movlb	0	; () banked
 11267  00014E  0100               	movlb	0	; () banked
 11268  000150  6FC0               	movwf	((i2c_int_handler@overrun_error))&0ffh
 11269  000152  0100               	movlb	0	; () banked
 11270  000154  51BA               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11271                           	line	117
 11272                           	
 11273  000156                     i2l18789:; BSR set to: 0
 11274                           
 11275                           ;my_i2c.c: 117: ic_ptr->error_count++;
 11276  000156  0100               	movlb	0	; () banked
 11277  000158  EE20 F00E          	lfsr	2,0Eh
 11278  00015C  0100               	movlb	0	; () banked
 11279  00015E  51DE               	movf	((_ic_ptr))&0ffh,w
 11280  000160  26D9               	addwf	fsr2l
 11281  000162  0100               	movlb	0	; () banked
 11282  000164  51DF               	movf	((_ic_ptr+1))&0ffh,w
 11283  000166  22DA               	addwfc	fsr2h
 11284  000168  2ADF               	incf	indf2
 11285                           
 11286                           	line	118
 11287                           	
 11288  00016A                     i2l18791:; BSR set to: 0
 11289                           
 11290                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
 11291  00016A  0100               	movlb	0	; () banked
 11292  00016C  EE20 F00D          	lfsr	2,0Dh
 11293  000170  0100               	movlb	0	; () banked
 11294  000172  51DE               	movf	((_ic_ptr))&0ffh,w
 11295  000174  26D9               	addwf	fsr2l
 11296  000176  0100               	movlb	0	; () banked
 11297  000178  51DF               	movf	((_ic_ptr+1))&0ffh,w
 11298  00017A  22DA               	addwfc	fsr2h
 11299  00017C  0E04               	movlw	low(04h)
 11300  00017E  6EDF               	movwf	indf2
 11301  000180  D000               	goto	i2l18793
 11302                           	line	119
 11303                           	
 11304  000182                     i2l7357:; BSR set to: 0
 11305                           
 11306                           	line	121
 11307                           	
 11308  000182                     i2l18793:; BSR set to: 0
 11309                           
 11310                           ;my_i2c.c: 119: }
 11311                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
 11312                           	
 11313  000182  A0C7               	btfss	((c:4039)),c,0	;volatile
 11314  000184  D001               	goto	i2u185_41
 11315  000186  D001               	goto	i2u185_40
 11316  000188                     i2u185_41:
 11317  000188  D00B               	goto	i2l18799
 11318  00018A                     i2u185_40:
 11319                           	line	122
 11320                           	
 11321  00018A                     i2l18795:; BSR set to: 0
 11322                           
 11323                           ;my_i2c.c: 122: i2c_data = SSPBUF;
 11324  00018A  CFC9 F0C1          	movff	(c:4041),(i2c_int_handler@i2c_data)	;volatile
 11325                           	line	123
 11326                           	
 11327  00018E                     i2l18797:; BSR set to: 0
 11328                           
 11329                           ;my_i2c.c: 123: data_read = 1;
 11330  00018E  0100               	movlb	0	; () banked
 11331  000190  6FBA               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11332  000192  0E01               	movlw	low(01h)
 11333  000194  0100               	movlb	0	; () banked
 11334  000196  0100               	movlb	0	; () banked
 11335  000198  6FC4               	movwf	((i2c_int_handler@data_read))&0ffh
 11336  00019A  0100               	movlb	0	; () banked
 11337  00019C  51BA               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11338  00019E  D000               	goto	i2l18799
 11339                           	line	124
 11340                           	
 11341  0001A0                     i2l7358:; BSR set to: 0
 11342                           
 11343                           	line	129
 11344                           	
 11345  0001A0                     i2l18799:; BSR set to: 0
 11346                           
 11347                           ;my_i2c.c: 124: }
 11348                           ;my_i2c.c: 129: if (!overrun_error) {
 11349  0001A0  0100               	movlb	0	; () banked
 11350  0001A2  0100               	movlb	0	; () banked
 11351  0001A4  67C0               	tstfsz	((i2c_int_handler@overrun_error))&0ffh
 11352  0001A6  D001               	goto	i2u186_41
 11353  0001A8  D001               	goto	i2u186_40
 11354  0001AA                     i2u186_41:
 11355  0001AA  D250               	goto	i2l7359
 11356  0001AC                     i2u186_40:
 11357  0001AC  D238               	goto	i2l18887
 11358                           	line	130
 11359                           	
 11360  0001AE                     i2l18801:; BSR set to: 0
 11361                           
 11362                           ;my_i2c.c: 130: switch (ic_ptr->status) {
 11363  0001AE  D237               	goto	i2l18887
 11364                           	line	131
 11365                           ;my_i2c.c: 131: case 0x5:
 11366                           	
 11367  0001B0                     i2l7361:; BSR set to: 0
 11368                           
 11369                           	line	134
 11370                           ;my_i2c.c: 132: {
 11371                           ;my_i2c.c: 134: if (SSPSTATbits.S == 1) {
 11372                           	
 11373  0001B0  A6C7               	btfss	((c:4039)),c,3	;volatile
 11374  0001B2  D001               	goto	i2u187_41
 11375  0001B4  D001               	goto	i2u187_40
 11376  0001B6                     i2u187_41:
 11377  0001B6  D24A               	goto	i2l7359
 11378  0001B8                     i2u187_40:
 11379                           	line	135
 11380                           	
 11381  0001B8                     i2l18803:; BSR set to: 0
 11382                           
 11383                           ;my_i2c.c: 135: handle_start(data_read);
 11384  0001B8  C0C4  F032         	movff	(i2c_int_handler@data_read),(c:?_handle_start)
 11385  0001BC  ECC0  F007         	call	_handle_start	;wreg free
 11386                           	line	137
 11387                           	
 11388  0001C0                     i2l18805:
 11389                           ;my_i2c.c: 137: if (ic_ptr->status == 0x8) {
 11390  0001C0  0100               	movlb	0	; () banked
 11391  0001C2  EE20 F00C          	lfsr	2,0Ch
 11392  0001C6  0100               	movlb	0	; () banked
 11393  0001C8  51DE               	movf	((_ic_ptr))&0ffh,w
 11394  0001CA  26D9               	addwf	fsr2l
 11395  0001CC  0100               	movlb	0	; () banked
 11396  0001CE  51DF               	movf	((_ic_ptr+1))&0ffh,w
 11397  0001D0  22DA               	addwfc	fsr2h
 11398  0001D2  0E08               	movlw	(08h)&0ffh
 11399  0001D4  62DF               	cpfseq	indf2
 11400  0001D6  D001               	goto	i2u188_41
 11401  0001D8  D001               	goto	i2u188_40
 11402  0001DA                     i2u188_41:
 11403  0001DA  D238               	goto	i2l7359
 11404  0001DC                     i2u188_40:
 11405                           	line	138
 11406                           	
 11407  0001DC                     i2l18807:; BSR set to: 0
 11408                           
 11409                           ;my_i2c.c: 138: data_read = 0;
 11410  0001DC  0100               	movlb	0	; () banked
 11411  0001DE  6FBA               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11412  0001E0  0E00               	movlw	low(0)
 11413  0001E2  0100               	movlb	0	; () banked
 11414  0001E4  0100               	movlb	0	; () banked
 11415  0001E6  6FC4               	movwf	((i2c_int_handler@data_read))&0ffh
 11416  0001E8  0100               	movlb	0	; () banked
 11417  0001EA  51BA               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11418                           	line	139
 11419                           ;my_i2c.c: 139: msg_to_send = 1;
 11420  0001EC  0100               	movlb	0	; () banked
 11421  0001EE  6FBA               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11422  0001F0  0E01               	movlw	low(01h)
 11423  0001F2  0100               	movlb	0	; () banked
 11424  0001F4  0100               	movlb	0	; () banked
 11425  0001F6  6FC2               	movwf	((i2c_int_handler@msg_to_send))&0ffh
 11426  0001F8  0100               	movlb	0	; () banked
 11427  0001FA  51BA               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11428  0001FC  D227               	goto	i2l7359
 11429                           	line	140
 11430                           	
 11431  0001FE                     i2l7363:; BSR set to: 0
 11432                           
 11433  0001FE  D226               	goto	i2l7359
 11434                           	line	141
 11435                           	
 11436  000200                     i2l7362:; BSR set to: 0
 11437                           
 11438                           	line	142
 11439                           ;my_i2c.c: 140: }
 11440                           ;my_i2c.c: 141: }
 11441                           ;my_i2c.c: 142: break;
 11442  000200  D225               	goto	i2l7359
 11443                           	line	144
 11444                           ;my_i2c.c: 143: }
 11445                           ;my_i2c.c: 144: case 0x6:
 11446                           	
 11447  000202                     i2l7365:; BSR set to: 0
 11448                           
 11449                           	line	147
 11450                           ;my_i2c.c: 145: {
 11451                           ;my_i2c.c: 147: if (SSPSTATbits.P == 1) {
 11452                           	
 11453  000202  A8C7               	btfss	((c:4039)),c,4	;volatile
 11454  000204  D001               	goto	i2u189_41
 11455  000206  D001               	goto	i2u189_40
 11456  000208                     i2u189_41:
 11457  000208  D040               	goto	i2l18819
 11458  00020A                     i2u189_40:
 11459                           	line	150
 11460                           	
 11461  00020A                     i2l18809:; BSR set to: 0
 11462                           
 11463                           ;my_i2c.c: 150: ic_ptr->event_count++;
 11464  00020A  0100               	movlb	0	; () banked
 11465  00020C  EE20 F00B          	lfsr	2,0Bh
 11466  000210  0100               	movlb	0	; () banked
 11467  000212  51DE               	movf	((_ic_ptr))&0ffh,w
 11468  000214  26D9               	addwf	fsr2l
 11469  000216  0100               	movlb	0	; () banked
 11470  000218  51DF               	movf	((_ic_ptr+1))&0ffh,w
 11471  00021A  22DA               	addwfc	fsr2h
 11472  00021C  2ADF               	incf	indf2
 11473                           
 11474                           	line	151
 11475                           	
 11476  00021E                     i2l18811:; BSR set to: 0
 11477                           
 11478                           ;my_i2c.c: 151: if (data_read) {
 11479  00021E  0100               	movlb	0	; () banked
 11480  000220  0100               	movlb	0	; () banked
 11481  000222  51C4               	movf	((i2c_int_handler@data_read))&0ffh,w
 11482  000224  B4D8               	btfsc	status,2
 11483  000226  D001               	goto	i2u190_41
 11484  000228  D001               	goto	i2u190_40
 11485  00022A                     i2u190_41:
 11486  00022A  D023               	goto	i2l7367
 11487  00022C                     i2u190_40:
 11488                           	line	152
 11489                           	
 11490  00022C                     i2l18813:; BSR set to: 0
 11491                           
 11492                           ;my_i2c.c: 152: if (SSPSTATbits.D_A == 0) {
 11493                           	
 11494  00022C  BAC7               	btfsc	((c:4039)),c,5	;volatile
 11495  00022E  D001               	goto	i2u191_41
 11496  000230  D001               	goto	i2u191_40
 11497  000232                     i2u191_41:
 11498  000232  D009               	goto	i2l18817
 11499  000234                     i2u191_40:
 11500                           	line	153
 11501                           	
 11502  000234                     i2l18815:; BSR set to: 0
 11503                           
 11504                           ;my_i2c.c: 153: msg_ready = 1;
 11505  000234  0100               	movlb	0	; () banked
 11506  000236  6FBA               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11507  000238  0E01               	movlw	low(01h)
 11508  00023A  0100               	movlb	0	; () banked
 11509  00023C  0100               	movlb	0	; () banked
 11510  00023E  6FC3               	movwf	((i2c_int_handler@msg_ready))&0ffh
 11511  000240  0100               	movlb	0	; () banked
 11512  000242  51BA               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11513                           	line	154
 11514                           ;my_i2c.c: 154: } else {
 11515  000244  D016               	goto	i2l7367
 11516                           	
 11517  000246                     i2l7368:; BSR set to: 0
 11518                           
 11519                           	line	155
 11520                           	
 11521  000246                     i2l18817:; BSR set to: 0
 11522                           
 11523                           ;my_i2c.c: 155: ic_ptr->error_count++;
 11524  000246  0100               	movlb	0	; () banked
 11525  000248  EE20 F00E          	lfsr	2,0Eh
 11526  00024C  0100               	movlb	0	; () banked
 11527  00024E  51DE               	movf	((_ic_ptr))&0ffh,w
 11528  000250  26D9               	addwf	fsr2l
 11529  000252  0100               	movlb	0	; () banked
 11530  000254  51DF               	movf	((_ic_ptr+1))&0ffh,w
 11531  000256  22DA               	addwfc	fsr2h
 11532  000258  2ADF               	incf	indf2
 11533                           
 11534                           	line	156
 11535                           ;my_i2c.c: 156: ic_ptr->error_code = 0x6;
 11536  00025A  0100               	movlb	0	; () banked
 11537  00025C  EE20 F00D          	lfsr	2,0Dh
 11538  000260  0100               	movlb	0	; () banked
 11539  000262  51DE               	movf	((_ic_ptr))&0ffh,w
 11540  000264  26D9               	addwf	fsr2l
 11541  000266  0100               	movlb	0	; () banked
 11542  000268  51DF               	movf	((_ic_ptr+1))&0ffh,w
 11543  00026A  22DA               	addwfc	fsr2h
 11544  00026C  0E06               	movlw	low(06h)
 11545  00026E  6EDF               	movwf	indf2
 11546  000270  D000               	goto	i2l7367
 11547                           	line	157
 11548                           	
 11549  000272                     i2l7369:; BSR set to: 0
 11550                           
 11551                           	line	158
 11552                           	
 11553  000272                     i2l7367:; BSR set to: 0
 11554                           
 11555                           	line	159
 11556                           ;my_i2c.c: 157: }
 11557                           ;my_i2c.c: 158: }
 11558                           ;my_i2c.c: 159: ic_ptr->status = 0x5;
 11559  000272  0100               	movlb	0	; () banked
 11560  000274  EE20 F00C          	lfsr	2,0Ch
 11561  000278  0100               	movlb	0	; () banked
 11562  00027A  51DE               	movf	((_ic_ptr))&0ffh,w
 11563  00027C  26D9               	addwf	fsr2l
 11564  00027E  0100               	movlb	0	; () banked
 11565  000280  51DF               	movf	((_ic_ptr+1))&0ffh,w
 11566  000282  22DA               	addwfc	fsr2h
 11567  000284  0E05               	movlw	low(05h)
 11568  000286  6EDF               	movwf	indf2
 11569                           	line	160
 11570                           ;my_i2c.c: 160: } else if (data_read) {
 11571  000288  D1E1               	goto	i2l7359
 11572                           	
 11573  00028A                     i2l7366:; BSR set to: 0
 11574                           
 11575                           	
 11576  00028A                     i2l18819:; BSR set to: 0
 11577                           
 11578  00028A  0100               	movlb	0	; () banked
 11579  00028C  0100               	movlb	0	; () banked
 11580  00028E  51C4               	movf	((i2c_int_handler@data_read))&0ffh,w
 11581  000290  B4D8               	btfsc	status,2
 11582  000292  D001               	goto	i2u192_41
 11583  000294  D001               	goto	i2u192_40
 11584  000296                     i2u192_41:
 11585  000296  D1DA               	goto	i2l7359
 11586  000298                     i2u192_40:
 11587                           	line	161
 11588                           	
 11589  000298                     i2l18821:; BSR set to: 0
 11590                           
 11591                           ;my_i2c.c: 161: ic_ptr->event_count++;
 11592  000298  0100               	movlb	0	; () banked
 11593  00029A  EE20 F00B          	lfsr	2,0Bh
 11594  00029E  0100               	movlb	0	; () banked
 11595  0002A0  51DE               	movf	((_ic_ptr))&0ffh,w
 11596  0002A2  26D9               	addwf	fsr2l
 11597  0002A4  0100               	movlb	0	; () banked
 11598  0002A6  51DF               	movf	((_ic_ptr+1))&0ffh,w
 11599  0002A8  22DA               	addwfc	fsr2h
 11600  0002AA  2ADF               	incf	indf2
 11601                           
 11602                           	line	162
 11603                           	
 11604  0002AC                     i2l18823:; BSR set to: 0
 11605                           
 11606                           ;my_i2c.c: 162: if (SSPSTATbits.D_A == 0) {
 11607                           	
 11608  0002AC  BAC7               	btfsc	((c:4039)),c,5	;volatile
 11609  0002AE  D001               	goto	i2u193_41
 11610  0002B0  D001               	goto	i2u193_40
 11611  0002B2                     i2u193_41:
 11612  0002B2  D02D               	goto	i2l18835
 11613  0002B4                     i2u193_40:
 11614                           	line	163
 11615                           	
 11616  0002B4                     i2l18825:; BSR set to: 0
 11617                           
 11618                           ;my_i2c.c: 163: if (SSPSTATbits.R_W == 0) {
 11619                           	
 11620  0002B4  B4C7               	btfsc	((c:4039)),c,2	;volatile
 11621  0002B6  D001               	goto	i2u194_41
 11622  0002B8  D001               	goto	i2u194_40
 11623  0002BA                     i2u194_41:
 11624  0002BA  D00C               	goto	i2l18829
 11625  0002BC                     i2u194_40:
 11626                           	line	164
 11627                           	
 11628  0002BC                     i2l18827:; BSR set to: 0
 11629                           
 11630                           ;my_i2c.c: 164: ic_ptr->status = 0x7;
 11631  0002BC  0100               	movlb	0	; () banked
 11632  0002BE  EE20 F00C          	lfsr	2,0Ch
 11633  0002C2  0100               	movlb	0	; () banked
 11634  0002C4  51DE               	movf	((_ic_ptr))&0ffh,w
 11635  0002C6  26D9               	addwf	fsr2l
 11636  0002C8  0100               	movlb	0	; () banked
 11637  0002CA  51DF               	movf	((_ic_ptr+1))&0ffh,w
 11638  0002CC  22DA               	addwfc	fsr2h
 11639  0002CE  0E07               	movlw	low(07h)
 11640  0002D0  6EDF               	movwf	indf2
 11641                           	line	165
 11642                           ;my_i2c.c: 165: } else {
 11643  0002D2  D1BC               	goto	i2l7359
 11644                           	
 11645  0002D4                     i2l7373:; BSR set to: 0
 11646                           
 11647                           	line	166
 11648                           	
 11649  0002D4                     i2l18829:; BSR set to: 0
 11650                           
 11651                           ;my_i2c.c: 166: ic_ptr->status = 0x8;
 11652  0002D4  0100               	movlb	0	; () banked
 11653  0002D6  EE20 F00C          	lfsr	2,0Ch
 11654  0002DA  0100               	movlb	0	; () banked
 11655  0002DC  51DE               	movf	((_ic_ptr))&0ffh,w
 11656  0002DE  26D9               	addwf	fsr2l
 11657  0002E0  0100               	movlb	0	; () banked
 11658  0002E2  51DF               	movf	((_ic_ptr+1))&0ffh,w
 11659  0002E4  22DA               	addwfc	fsr2h
 11660  0002E6  0E08               	movlw	low(08h)
 11661  0002E8  6EDF               	movwf	indf2
 11662                           	line	167
 11663                           	
 11664  0002EA                     i2l18831:; BSR set to: 0
 11665                           
 11666                           ;my_i2c.c: 167: msg_to_send = 1;
 11667  0002EA  0100               	movlb	0	; () banked
 11668  0002EC  6FBA               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11669  0002EE  0E01               	movlw	low(01h)
 11670  0002F0  0100               	movlb	0	; () banked
 11671  0002F2  0100               	movlb	0	; () banked
 11672  0002F4  6FC2               	movwf	((i2c_int_handler@msg_to_send))&0ffh
 11673  0002F6  0100               	movlb	0	; () banked
 11674  0002F8  51BA               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11675                           	line	169
 11676                           	
 11677  0002FA                     i2l18833:; BSR set to: 0
 11678                           
 11679                           ;my_i2c.c: 169: data_read = 0;
 11680  0002FA  0100               	movlb	0	; () banked
 11681  0002FC  6FBA               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11682  0002FE  0E00               	movlw	low(0)
 11683  000300  0100               	movlb	0	; () banked
 11684  000302  0100               	movlb	0	; () banked
 11685  000304  6FC4               	movwf	((i2c_int_handler@data_read))&0ffh
 11686  000306  0100               	movlb	0	; () banked
 11687  000308  51BA               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11688  00030A  D1A0               	goto	i2l7359
 11689                           	line	170
 11690                           	
 11691  00030C                     i2l7374:; BSR set to: 0
 11692                           
 11693                           	line	171
 11694                           ;my_i2c.c: 170: }
 11695                           ;my_i2c.c: 171: } else {
 11696  00030C  D19F               	goto	i2l7359
 11697                           	
 11698  00030E                     i2l7372:; BSR set to: 0
 11699                           
 11700                           	line	172
 11701                           	
 11702  00030E                     i2l18835:; BSR set to: 0
 11703                           
 11704                           ;my_i2c.c: 172: ic_ptr->error_count++;
 11705  00030E  0100               	movlb	0	; () banked
 11706  000310  EE20 F00E          	lfsr	2,0Eh
 11707  000314  0100               	movlb	0	; () banked
 11708  000316  51DE               	movf	((_ic_ptr))&0ffh,w
 11709  000318  26D9               	addwf	fsr2l
 11710  00031A  0100               	movlb	0	; () banked
 11711  00031C  51DF               	movf	((_ic_ptr+1))&0ffh,w
 11712  00031E  22DA               	addwfc	fsr2h
 11713  000320  2ADF               	incf	indf2
 11714                           
 11715                           	line	173
 11716                           ;my_i2c.c: 173: ic_ptr->status = 0x5;
 11717  000322  0100               	movlb	0	; () banked
 11718  000324  EE20 F00C          	lfsr	2,0Ch
 11719  000328  0100               	movlb	0	; () banked
 11720  00032A  51DE               	movf	((_ic_ptr))&0ffh,w
 11721  00032C  26D9               	addwf	fsr2l
 11722  00032E  0100               	movlb	0	; () banked
 11723  000330  51DF               	movf	((_ic_ptr+1))&0ffh,w
 11724  000332  22DA               	addwfc	fsr2h
 11725  000334  0E05               	movlw	low(05h)
 11726  000336  6EDF               	movwf	indf2
 11727                           	line	174
 11728                           ;my_i2c.c: 174: ic_ptr->error_code = 0x6;
 11729  000338  0100               	movlb	0	; () banked
 11730  00033A  EE20 F00D          	lfsr	2,0Dh
 11731  00033E  0100               	movlb	0	; () banked
 11732  000340  51DE               	movf	((_ic_ptr))&0ffh,w
 11733  000342  26D9               	addwf	fsr2l
 11734  000344  0100               	movlb	0	; () banked
 11735  000346  51DF               	movf	((_ic_ptr+1))&0ffh,w
 11736  000348  22DA               	addwfc	fsr2h
 11737  00034A  0E06               	movlw	low(06h)
 11738  00034C  6EDF               	movwf	indf2
 11739  00034E  D17E               	goto	i2l7359
 11740                           	line	175
 11741                           	
 11742  000350                     i2l7375:; BSR set to: 0
 11743                           
 11744  000350  D17D               	goto	i2l7359
 11745                           	line	176
 11746                           	
 11747  000352                     i2l7371:; BSR set to: 0
 11748                           
 11749  000352  D17C               	goto	i2l7359
 11750                           	line	177
 11751                           	
 11752  000354                     i2l7370:; BSR set to: 0
 11753                           
 11754                           ;my_i2c.c: 175: }
 11755                           ;my_i2c.c: 176: }
 11756                           ;my_i2c.c: 177: break;
 11757  000354  D17B               	goto	i2l7359
 11758                           	line	179
 11759                           ;my_i2c.c: 178: }
 11760                           ;my_i2c.c: 179: case 0x8:
 11761                           	
 11762  000356                     i2l7376:; BSR set to: 0
 11763                           
 11764                           	line	181
 11765                           	
 11766  000356                     i2l18837:; BSR set to: 0
 11767                           
 11768                           ;my_i2c.c: 180: {
 11769                           ;my_i2c.c: 181: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
 11770  000356  0100               	movlb	0	; () banked
 11771  000358  EE20 F01A          	lfsr	2,01Ah
 11772  00035C  0100               	movlb	0	; () banked
 11773  00035E  51DE               	movf	((_ic_ptr))&0ffh,w
 11774  000360  26D9               	addwf	fsr2l
 11775  000362  0100               	movlb	0	; () banked
 11776  000364  51DF               	movf	((_ic_ptr+1))&0ffh,w
 11777  000366  22DA               	addwfc	fsr2h
 11778  000368  50DF               	movf	indf2,w
 11779  00036A  0100               	movlb	0	; () banked
 11780  00036C  6FBA               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11781  00036E  0100               	movlb	0	; () banked
 11782  000370  EE20 F019          	lfsr	2,019h
 11783  000374  0100               	movlb	0	; () banked
 11784  000376  51DE               	movf	((_ic_ptr))&0ffh,w
 11785  000378  26D9               	addwf	fsr2l
 11786  00037A  0100               	movlb	0	; () banked
 11787  00037C  51DF               	movf	((_ic_ptr+1))&0ffh,w
 11788  00037E  22DA               	addwfc	fsr2h
 11789  000380  50DF               	movf	indf2,w
 11790  000382  0100               	movlb	0	; () banked
 11791  000384  5DBA               	subwf	((??_i2c_int_handler+0+0))&0ffh,w
 11792  000386  B0D8               	btfsc	status,0
 11793  000388  D001               	goto	i2u195_41
 11794  00038A  D001               	goto	i2u195_40
 11795  00038C                     i2u195_41:
 11796  00038C  D032               	goto	i2l18845
 11797  00038E                     i2u195_40:
 11798                           	line	182
 11799                           	
 11800  00038E                     i2l18839:; BSR set to: 0
 11801                           
 11802                           ;my_i2c.c: 182: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
 11803  00038E  0100               	movlb	0	; () banked
 11804  000390  EE20 F01A          	lfsr	2,01Ah
 11805  000394  0100               	movlb	0	; () banked
 11806  000396  51DE               	movf	((_ic_ptr))&0ffh,w
 11807  000398  26D9               	addwf	fsr2l
 11808  00039A  0100               	movlb	0	; () banked
 11809  00039C  51DF               	movf	((_ic_ptr+1))&0ffh,w
 11810  00039E  22DA               	addwfc	fsr2h
 11811  0003A0  50DF               	movf	indf2,w
 11812  0003A2  0100               	movlb	0	; () banked
 11813  0003A4  6FBA               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11814  0003A6  0100               	movlb	0	; () banked
 11815  0003A8  51BA               	movf	((??_i2c_int_handler+0+0))&0ffh,w
 11816  0003AA  0D01               	mullw	01h
 11817  0003AC  0E0F               	movlw	0Fh
 11818  0003AE  26F3               	addwf	(prodl),c
 11819  0003B0  0E00               	movlw	0
 11820  0003B2  22F4               	addwfc	(prodh),c
 11821  0003B4  50F3               	movf	(prodl),c,w
 11822  0003B6  0100               	movlb	0	; () banked
 11823  0003B8  0100               	movlb	0	; () banked
 11824  0003BA  25DE               	addwf	((_ic_ptr))&0ffh,w
 11825  0003BC  6ED9               	movwf	c:fsr2l
 11826  0003BE  50F4               	movf	(prodh),c,w
 11827  0003C0  0100               	movlb	0	; () banked
 11828  0003C2  0100               	movlb	0	; () banked
 11829  0003C4  21DF               	addwfc	((_ic_ptr+1))&0ffh,w
 11830  0003C6  6EDA               	movwf	1+c:fsr2l
 11831  0003C8  50DF               	movf	indf2,w
 11832  0003CA  6EC9               	movwf	((c:4041)),c	;volatile
 11833                           	line	183
 11834                           	
 11835  0003CC                     i2l18841:; BSR set to: 0
 11836                           
 11837                           ;my_i2c.c: 183: ic_ptr->outbufind++;
 11838  0003CC  0100               	movlb	0	; () banked
 11839  0003CE  EE20 F01A          	lfsr	2,01Ah
 11840  0003D2  0100               	movlb	0	; () banked
 11841  0003D4  51DE               	movf	((_ic_ptr))&0ffh,w
 11842  0003D6  26D9               	addwf	fsr2l
 11843  0003D8  0100               	movlb	0	; () banked
 11844  0003DA  51DF               	movf	((_ic_ptr+1))&0ffh,w
 11845  0003DC  22DA               	addwfc	fsr2h
 11846  0003DE  2ADF               	incf	indf2
 11847                           
 11848                           	line	184
 11849                           	
 11850  0003E0                     i2l18843:; BSR set to: 0
 11851                           
 11852                           ;my_i2c.c: 184: data_written = 1;
 11853  0003E0  0100               	movlb	0	; () banked
 11854  0003E2  6FBA               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11855  0003E4  0E01               	movlw	low(01h)
 11856  0003E6  0100               	movlb	0	; () banked
 11857  0003E8  0100               	movlb	0	; () banked
 11858  0003EA  6FBF               	movwf	((i2c_int_handler@data_written))&0ffh
 11859  0003EC  0100               	movlb	0	; () banked
 11860  0003EE  51BA               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11861                           	line	185
 11862                           ;my_i2c.c: 185: } else {
 11863  0003F0  D12D               	goto	i2l7359
 11864                           	
 11865  0003F2                     i2l7377:; BSR set to: 0
 11866                           
 11867                           	line	187
 11868                           	
 11869  0003F2                     i2l18845:; BSR set to: 0
 11870                           
 11871                           ;my_i2c.c: 187: ic_ptr->status = 0x5;
 11872  0003F2  0100               	movlb	0	; () banked
 11873  0003F4  EE20 F00C          	lfsr	2,0Ch
 11874  0003F8  0100               	movlb	0	; () banked
 11875  0003FA  51DE               	movf	((_ic_ptr))&0ffh,w
 11876  0003FC  26D9               	addwf	fsr2l
 11877  0003FE  0100               	movlb	0	; () banked
 11878  000400  51DF               	movf	((_ic_ptr+1))&0ffh,w
 11879  000402  22DA               	addwfc	fsr2h
 11880  000404  0E05               	movlw	low(05h)
 11881  000406  6EDF               	movwf	indf2
 11882  000408  D121               	goto	i2l7359
 11883                           	line	188
 11884                           	
 11885  00040A                     i2l7378:; BSR set to: 0
 11886                           
 11887                           	line	189
 11888                           ;my_i2c.c: 188: }
 11889                           ;my_i2c.c: 189: break;
 11890  00040A  D120               	goto	i2l7359
 11891                           	line	191
 11892                           ;my_i2c.c: 190: }
 11893                           ;my_i2c.c: 191: case 0x7:
 11894                           	
 11895  00040C                     i2l7379:; BSR set to: 0
 11896                           
 11897                           	line	194
 11898                           ;my_i2c.c: 192: {
 11899                           ;my_i2c.c: 194: if (SSPSTATbits.P == 1) {
 11900                           	
 11901  00040C  A8C7               	btfss	((c:4039)),c,4	;volatile
 11902  00040E  D001               	goto	i2u196_41
 11903  000410  D001               	goto	i2u196_40
 11904  000412                     i2u196_41:
 11905  000412  D07B               	goto	i2l18865
 11906  000414                     i2u196_40:
 11907                           	line	196
 11908                           	
 11909  000414                     i2l18847:; BSR set to: 0
 11910                           
 11911                           ;my_i2c.c: 196: ic_ptr->event_count++;
 11912  000414  0100               	movlb	0	; () banked
 11913  000416  EE20 F00B          	lfsr	2,0Bh
 11914  00041A  0100               	movlb	0	; () banked
 11915  00041C  51DE               	movf	((_ic_ptr))&0ffh,w
 11916  00041E  26D9               	addwf	fsr2l
 11917  000420  0100               	movlb	0	; () banked
 11918  000422  51DF               	movf	((_ic_ptr+1))&0ffh,w
 11919  000424  22DA               	addwfc	fsr2h
 11920  000426  2ADF               	incf	indf2
 11921                           
 11922                           	line	197
 11923                           	
 11924  000428                     i2l18849:; BSR set to: 0
 11925                           
 11926                           ;my_i2c.c: 197: if (data_read) {
 11927  000428  0100               	movlb	0	; () banked
 11928  00042A  0100               	movlb	0	; () banked
 11929  00042C  51C4               	movf	((i2c_int_handler@data_read))&0ffh,w
 11930  00042E  B4D8               	btfsc	status,2
 11931  000430  D001               	goto	i2u197_41
 11932  000432  D001               	goto	i2u197_40
 11933  000434                     i2u197_41:
 11934  000434  D055               	goto	i2l18861
 11935  000436                     i2u197_40:
 11936                           	line	198
 11937                           	
 11938  000436                     i2l18851:; BSR set to: 0
 11939                           
 11940                           ;my_i2c.c: 198: if (SSPSTATbits.D_A == 1) {
 11941                           	
 11942  000436  AAC7               	btfss	((c:4039)),c,5	;volatile
 11943  000438  D001               	goto	i2u198_41
 11944  00043A  D001               	goto	i2u198_40
 11945  00043C                     i2u198_41:
 11946  00043C  D02F               	goto	i2l18859
 11947  00043E                     i2u198_40:
 11948                           	line	199
 11949                           	
 11950  00043E                     i2l18853:; BSR set to: 0
 11951                           
 11952                           ;my_i2c.c: 199: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
 11953  00043E  0100               	movlb	0	; () banked
 11954  000440  EE20 F00A          	lfsr	2,0Ah
 11955  000444  0100               	movlb	0	; () banked
 11956  000446  51DE               	movf	((_ic_ptr))&0ffh,w
 11957  000448  26D9               	addwf	fsr2l
 11958  00044A  0100               	movlb	0	; () banked
 11959  00044C  51DF               	movf	((_ic_ptr+1))&0ffh,w
 11960  00044E  22DA               	addwfc	fsr2h
 11961  000450  50DF               	movf	indf2,w
 11962  000452  0100               	movlb	0	; () banked
 11963  000454  6FBA               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11964  000456  0100               	movlb	0	; () banked
 11965  000458  51BA               	movf	((??_i2c_int_handler+0+0))&0ffh,w
 11966  00045A  0D01               	mullw	01h
 11967  00045C  50F3               	movf	(prodl),c,w
 11968  00045E  0100               	movlb	0	; () banked
 11969  000460  0100               	movlb	0	; () banked
 11970  000462  25DE               	addwf	((_ic_ptr))&0ffh,w
 11971  000464  6ED9               	movwf	c:fsr2l
 11972  000466  50F4               	movf	(prodh),c,w
 11973  000468  0100               	movlb	0	; () banked
 11974  00046A  0100               	movlb	0	; () banked
 11975  00046C  21DF               	addwfc	((_ic_ptr+1))&0ffh,w
 11976  00046E  6EDA               	movwf	1+c:fsr2l
 11977  000470  0100               	movlb	0	; () banked
 11978  000472  C0C1  FFDF         	movff	(i2c_int_handler@i2c_data),indf2
 11979                           
 11980                           	line	200
 11981                           	
 11982  000476                     i2l18855:; BSR set to: 0
 11983                           
 11984                           ;my_i2c.c: 200: ic_ptr->buflen++;
 11985  000476  0100               	movlb	0	; () banked
 11986  000478  EE20 F00A          	lfsr	2,0Ah
 11987  00047C  0100               	movlb	0	; () banked
 11988  00047E  51DE               	movf	((_ic_ptr))&0ffh,w
 11989  000480  26D9               	addwf	fsr2l
 11990  000482  0100               	movlb	0	; () banked
 11991  000484  51DF               	movf	((_ic_ptr+1))&0ffh,w
 11992  000486  22DA               	addwfc	fsr2h
 11993  000488  2ADF               	incf	indf2
 11994                           
 11995                           	line	201
 11996                           	
 11997  00048A                     i2l18857:; BSR set to: 0
 11998                           
 11999                           ;my_i2c.c: 201: msg_ready = 1;
 12000  00048A  0100               	movlb	0	; () banked
 12001  00048C  6FBA               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12002  00048E  0E01               	movlw	low(01h)
 12003  000490  0100               	movlb	0	; () banked
 12004  000492  0100               	movlb	0	; () banked
 12005  000494  6FC3               	movwf	((i2c_int_handler@msg_ready))&0ffh
 12006  000496  0100               	movlb	0	; () banked
 12007  000498  51BA               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 12008                           	line	202
 12009                           ;my_i2c.c: 202: } else {
 12010  00049A  D02B               	goto	i2l18863
 12011                           	
 12012  00049C                     i2l7382:; BSR set to: 0
 12013                           
 12014                           	line	203
 12015                           	
 12016  00049C                     i2l18859:; BSR set to: 0
 12017                           
 12018                           ;my_i2c.c: 203: ic_ptr->error_count++;
 12019  00049C  0100               	movlb	0	; () banked
 12020  00049E  EE20 F00E          	lfsr	2,0Eh
 12021  0004A2  0100               	movlb	0	; () banked
 12022  0004A4  51DE               	movf	((_ic_ptr))&0ffh,w
 12023  0004A6  26D9               	addwf	fsr2l
 12024  0004A8  0100               	movlb	0	; () banked
 12025  0004AA  51DF               	movf	((_ic_ptr+1))&0ffh,w
 12026  0004AC  22DA               	addwfc	fsr2h
 12027  0004AE  2ADF               	incf	indf2
 12028                           
 12029                           	line	204
 12030                           ;my_i2c.c: 204: ic_ptr->error_code = 0x6;
 12031  0004B0  0100               	movlb	0	; () banked
 12032  0004B2  EE20 F00D          	lfsr	2,0Dh
 12033  0004B6  0100               	movlb	0	; () banked
 12034  0004B8  51DE               	movf	((_ic_ptr))&0ffh,w
 12035  0004BA  26D9               	addwf	fsr2l
 12036  0004BC  0100               	movlb	0	; () banked
 12037  0004BE  51DF               	movf	((_ic_ptr+1))&0ffh,w
 12038  0004C0  22DA               	addwfc	fsr2h
 12039  0004C2  0E06               	movlw	low(06h)
 12040  0004C4  6EDF               	movwf	indf2
 12041                           	line	205
 12042                           ;my_i2c.c: 205: ic_ptr->status = 0x5;
 12043  0004C6  0100               	movlb	0	; () banked
 12044  0004C8  EE20 F00C          	lfsr	2,0Ch
 12045  0004CC  0100               	movlb	0	; () banked
 12046  0004CE  51DE               	movf	((_ic_ptr))&0ffh,w
 12047  0004D0  26D9               	addwf	fsr2l
 12048  0004D2  0100               	movlb	0	; () banked
 12049  0004D4  51DF               	movf	((_ic_ptr+1))&0ffh,w
 12050  0004D6  22DA               	addwfc	fsr2h
 12051  0004D8  0E05               	movlw	low(05h)
 12052  0004DA  6EDF               	movwf	indf2
 12053  0004DC  D00A               	goto	i2l18863
 12054                           	line	206
 12055                           	
 12056  0004DE                     i2l7383:; BSR set to: 0
 12057                           
 12058                           	line	207
 12059                           ;my_i2c.c: 206: }
 12060                           ;my_i2c.c: 207: } else {
 12061  0004DE  D009               	goto	i2l18863
 12062                           	
 12063  0004E0                     i2l7381:; BSR set to: 0
 12064                           
 12065                           	line	208
 12066                           	
 12067  0004E0                     i2l18861:; BSR set to: 0
 12068                           
 12069                           ;my_i2c.c: 208: msg_ready = 1;
 12070  0004E0  0100               	movlb	0	; () banked
 12071  0004E2  6FBA               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12072  0004E4  0E01               	movlw	low(01h)
 12073  0004E6  0100               	movlb	0	; () banked
 12074  0004E8  0100               	movlb	0	; () banked
 12075  0004EA  6FC3               	movwf	((i2c_int_handler@msg_ready))&0ffh
 12076  0004EC  0100               	movlb	0	; () banked
 12077  0004EE  51BA               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 12078  0004F0  D000               	goto	i2l18863
 12079                           	line	209
 12080                           	
 12081  0004F2                     i2l7384:; BSR set to: 0
 12082                           
 12083                           	line	210
 12084                           	
 12085  0004F2                     i2l18863:; BSR set to: 0
 12086                           
 12087                           ;my_i2c.c: 209: }
 12088                           ;my_i2c.c: 210: ic_ptr->status = 0x5;
 12089  0004F2  0100               	movlb	0	; () banked
 12090  0004F4  EE20 F00C          	lfsr	2,0Ch
 12091  0004F8  0100               	movlb	0	; () banked
 12092  0004FA  51DE               	movf	((_ic_ptr))&0ffh,w
 12093  0004FC  26D9               	addwf	fsr2l
 12094  0004FE  0100               	movlb	0	; () banked
 12095  000500  51DF               	movf	((_ic_ptr+1))&0ffh,w
 12096  000502  22DA               	addwfc	fsr2h
 12097  000504  0E05               	movlw	low(05h)
 12098  000506  6EDF               	movwf	indf2
 12099                           	line	211
 12100                           ;my_i2c.c: 211: } else if (data_read) {
 12101  000508  D0A1               	goto	i2l7359
 12102                           	
 12103  00050A                     i2l7380:; BSR set to: 0
 12104                           
 12105                           	
 12106  00050A                     i2l18865:; BSR set to: 0
 12107                           
 12108  00050A  0100               	movlb	0	; () banked
 12109  00050C  0100               	movlb	0	; () banked
 12110  00050E  51C4               	movf	((i2c_int_handler@data_read))&0ffh,w
 12111  000510  B4D8               	btfsc	status,2
 12112  000512  D001               	goto	i2u199_41
 12113  000514  D001               	goto	i2u199_40
 12114  000516                     i2u199_41:
 12115  000516  D09A               	goto	i2l7359
 12116  000518                     i2u199_40:
 12117                           	line	212
 12118                           	
 12119  000518                     i2l18867:; BSR set to: 0
 12120                           
 12121                           ;my_i2c.c: 212: ic_ptr->event_count++;
 12122  000518  0100               	movlb	0	; () banked
 12123  00051A  EE20 F00B          	lfsr	2,0Bh
 12124  00051E  0100               	movlb	0	; () banked
 12125  000520  51DE               	movf	((_ic_ptr))&0ffh,w
 12126  000522  26D9               	addwf	fsr2l
 12127  000524  0100               	movlb	0	; () banked
 12128  000526  51DF               	movf	((_ic_ptr+1))&0ffh,w
 12129  000528  22DA               	addwfc	fsr2h
 12130  00052A  2ADF               	incf	indf2
 12131                           
 12132                           	line	213
 12133                           	
 12134  00052C                     i2l18869:; BSR set to: 0
 12135                           
 12136                           ;my_i2c.c: 213: if (SSPSTATbits.D_A == 1) {
 12137                           	
 12138  00052C  AAC7               	btfss	((c:4039)),c,5	;volatile
 12139  00052E  D001               	goto	i2u200_41
 12140  000530  D001               	goto	i2u200_40
 12141  000532                     i2u200_41:
 12142  000532  D027               	goto	i2l7387
 12143  000534                     i2u200_40:
 12144                           	line	214
 12145                           	
 12146  000534                     i2l18871:; BSR set to: 0
 12147                           
 12148                           ;my_i2c.c: 214: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
 12149  000534  0100               	movlb	0	; () banked
 12150  000536  EE20 F00A          	lfsr	2,0Ah
 12151  00053A  0100               	movlb	0	; () banked
 12152  00053C  51DE               	movf	((_ic_ptr))&0ffh,w
 12153  00053E  26D9               	addwf	fsr2l
 12154  000540  0100               	movlb	0	; () banked
 12155  000542  51DF               	movf	((_ic_ptr+1))&0ffh,w
 12156  000544  22DA               	addwfc	fsr2h
 12157  000546  50DF               	movf	indf2,w
 12158  000548  0100               	movlb	0	; () banked
 12159  00054A  6FBA               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12160  00054C  0100               	movlb	0	; () banked
 12161  00054E  51BA               	movf	((??_i2c_int_handler+0+0))&0ffh,w
 12162  000550  0D01               	mullw	01h
 12163  000552  50F3               	movf	(prodl),c,w
 12164  000554  0100               	movlb	0	; () banked
 12165  000556  0100               	movlb	0	; () banked
 12166  000558  25DE               	addwf	((_ic_ptr))&0ffh,w
 12167  00055A  6ED9               	movwf	c:fsr2l
 12168  00055C  50F4               	movf	(prodh),c,w
 12169  00055E  0100               	movlb	0	; () banked
 12170  000560  0100               	movlb	0	; () banked
 12171  000562  21DF               	addwfc	((_ic_ptr+1))&0ffh,w
 12172  000564  6EDA               	movwf	1+c:fsr2l
 12173  000566  0100               	movlb	0	; () banked
 12174  000568  C0C1  FFDF         	movff	(i2c_int_handler@i2c_data),indf2
 12175                           
 12176                           	line	215
 12177                           	
 12178  00056C                     i2l18873:; BSR set to: 0
 12179                           
 12180                           ;my_i2c.c: 215: ic_ptr->buflen++;
 12181  00056C  0100               	movlb	0	; () banked
 12182  00056E  EE20 F00A          	lfsr	2,0Ah
 12183  000572  0100               	movlb	0	; () banked
 12184  000574  51DE               	movf	((_ic_ptr))&0ffh,w
 12185  000576  26D9               	addwf	fsr2l
 12186  000578  0100               	movlb	0	; () banked
 12187  00057A  51DF               	movf	((_ic_ptr+1))&0ffh,w
 12188  00057C  22DA               	addwfc	fsr2h
 12189  00057E  2ADF               	incf	indf2
 12190                           
 12191                           	line	216
 12192                           ;my_i2c.c: 216: } else {
 12193  000580  D065               	goto	i2l7359
 12194                           	
 12195  000582                     i2l7387:; BSR set to: 0
 12196                           
 12197                           	line	217
 12198                           ;my_i2c.c: 217: if (SSPSTATbits.R_W == 1) {
 12199                           	
 12200  000582  A4C7               	btfss	((c:4039)),c,2	;volatile
 12201  000584  D001               	goto	i2u201_41
 12202  000586  D001               	goto	i2u201_40
 12203  000588                     i2u201_41:
 12204  000588  D024               	goto	i2l18883
 12205  00058A                     i2u201_40:
 12206                           	line	218
 12207                           	
 12208  00058A                     i2l18875:; BSR set to: 0
 12209                           
 12210                           ;my_i2c.c: 218: ic_ptr->status = 0x8;
 12211  00058A  0100               	movlb	0	; () banked
 12212  00058C  EE20 F00C          	lfsr	2,0Ch
 12213  000590  0100               	movlb	0	; () banked
 12214  000592  51DE               	movf	((_ic_ptr))&0ffh,w
 12215  000594  26D9               	addwf	fsr2l
 12216  000596  0100               	movlb	0	; () banked
 12217  000598  51DF               	movf	((_ic_ptr+1))&0ffh,w
 12218  00059A  22DA               	addwfc	fsr2h
 12219  00059C  0E08               	movlw	low(08h)
 12220  00059E  6EDF               	movwf	indf2
 12221                           	line	219
 12222                           	
 12223  0005A0                     i2l18877:; BSR set to: 0
 12224                           
 12225                           ;my_i2c.c: 219: msg_ready = 1;
 12226  0005A0  0100               	movlb	0	; () banked
 12227  0005A2  6FBA               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12228  0005A4  0E01               	movlw	low(01h)
 12229  0005A6  0100               	movlb	0	; () banked
 12230  0005A8  0100               	movlb	0	; () banked
 12231  0005AA  6FC3               	movwf	((i2c_int_handler@msg_ready))&0ffh
 12232  0005AC  0100               	movlb	0	; () banked
 12233  0005AE  51BA               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 12234                           	line	220
 12235                           	
 12236  0005B0                     i2l18879:; BSR set to: 0
 12237                           
 12238                           ;my_i2c.c: 220: msg_to_send = 1;
 12239  0005B0  0100               	movlb	0	; () banked
 12240  0005B2  6FBA               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12241  0005B4  0E01               	movlw	low(01h)
 12242  0005B6  0100               	movlb	0	; () banked
 12243  0005B8  0100               	movlb	0	; () banked
 12244  0005BA  6FC2               	movwf	((i2c_int_handler@msg_to_send))&0ffh
 12245  0005BC  0100               	movlb	0	; () banked
 12246  0005BE  51BA               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 12247                           	line	222
 12248                           	
 12249  0005C0                     i2l18881:; BSR set to: 0
 12250                           
 12251                           ;my_i2c.c: 222: data_read = 0;
 12252  0005C0  0100               	movlb	0	; () banked
 12253  0005C2  6FBA               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12254  0005C4  0E00               	movlw	low(0)
 12255  0005C6  0100               	movlb	0	; () banked
 12256  0005C8  0100               	movlb	0	; () banked
 12257  0005CA  6FC4               	movwf	((i2c_int_handler@data_read))&0ffh
 12258  0005CC  0100               	movlb	0	; () banked
 12259  0005CE  51BA               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 12260                           	line	223
 12261                           ;my_i2c.c: 223: } else {
 12262  0005D0  D03D               	goto	i2l7359
 12263                           	
 12264  0005D2                     i2l7389:; BSR set to: 0
 12265                           
 12266                           	line	224
 12267                           	
 12268  0005D2                     i2l18883:; BSR set to: 0
 12269                           
 12270                           ;my_i2c.c: 224: ic_ptr->error_count++;
 12271  0005D2  0100               	movlb	0	; () banked
 12272  0005D4  EE20 F00E          	lfsr	2,0Eh
 12273  0005D8  0100               	movlb	0	; () banked
 12274  0005DA  51DE               	movf	((_ic_ptr))&0ffh,w
 12275  0005DC  26D9               	addwf	fsr2l
 12276  0005DE  0100               	movlb	0	; () banked
 12277  0005E0  51DF               	movf	((_ic_ptr+1))&0ffh,w
 12278  0005E2  22DA               	addwfc	fsr2h
 12279  0005E4  2ADF               	incf	indf2
 12280                           
 12281                           	line	225
 12282                           ;my_i2c.c: 225: ic_ptr->error_code = 0x6;
 12283  0005E6  0100               	movlb	0	; () banked
 12284  0005E8  EE20 F00D          	lfsr	2,0Dh
 12285  0005EC  0100               	movlb	0	; () banked
 12286  0005EE  51DE               	movf	((_ic_ptr))&0ffh,w
 12287  0005F0  26D9               	addwf	fsr2l
 12288  0005F2  0100               	movlb	0	; () banked
 12289  0005F4  51DF               	movf	((_ic_ptr+1))&0ffh,w
 12290  0005F6  22DA               	addwfc	fsr2h
 12291  0005F8  0E06               	movlw	low(06h)
 12292  0005FA  6EDF               	movwf	indf2
 12293                           	line	226
 12294                           ;my_i2c.c: 226: ic_ptr->status = 0x5;
 12295  0005FC  0100               	movlb	0	; () banked
 12296  0005FE  EE20 F00C          	lfsr	2,0Ch
 12297  000602  0100               	movlb	0	; () banked
 12298  000604  51DE               	movf	((_ic_ptr))&0ffh,w
 12299  000606  26D9               	addwf	fsr2l
 12300  000608  0100               	movlb	0	; () banked
 12301  00060A  51DF               	movf	((_ic_ptr+1))&0ffh,w
 12302  00060C  22DA               	addwfc	fsr2h
 12303  00060E  0E05               	movlw	low(05h)
 12304  000610  6EDF               	movwf	indf2
 12305  000612  D01C               	goto	i2l7359
 12306                           	line	227
 12307                           	
 12308  000614                     i2l7390:; BSR set to: 0
 12309                           
 12310  000614  D01B               	goto	i2l7359
 12311                           	line	228
 12312                           	
 12313  000616                     i2l7388:; BSR set to: 0
 12314                           
 12315  000616  D01A               	goto	i2l7359
 12316                           	line	229
 12317                           	
 12318  000618                     i2l7386:; BSR set to: 0
 12319                           
 12320  000618  D019               	goto	i2l7359
 12321                           	line	230
 12322                           	
 12323  00061A                     i2l7385:; BSR set to: 0
 12324                           
 12325                           ;my_i2c.c: 227: }
 12326                           ;my_i2c.c: 228: }
 12327                           ;my_i2c.c: 229: }
 12328                           ;my_i2c.c: 230: break;
 12329  00061A  D018               	goto	i2l7359
 12330                           	line	232
 12331                           	
 12332  00061C                     i2l18885:; BSR set to: 0
 12333                           
 12334                           ;my_i2c.c: 231: }
 12335                           ;my_i2c.c: 232: }
 12336  00061C  D017               	goto	i2l7359
 12337                           	line	130
 12338                           	
 12339  00061E                     i2l7360:; BSR set to: 0
 12340                           
 12341                           	
 12342  00061E                     i2l18887:; BSR set to: 0
 12343                           
 12344  00061E  0100               	movlb	0	; () banked
 12345  000620  EE20 F00C          	lfsr	2,0Ch
 12346  000624  0100               	movlb	0	; () banked
 12347  000626  51DE               	movf	((_ic_ptr))&0ffh,w
 12348  000628  26D9               	addwf	fsr2l
 12349  00062A  0100               	movlb	0	; () banked
 12350  00062C  51DF               	movf	((_ic_ptr+1))&0ffh,w
 12351  00062E  22DA               	addwfc	fsr2h
 12352  000630  50DF               	movf	indf2,w
 12353                           	; Switch size 1, requested type "space"
 12354                           ; Number of cases is 4, Range of values is 5 to 8
 12355                           ; switch strategies available:
 12356                           ; Name         Instructions Cycles
 12357                           ; simple_byte           13     7 (average)
 12358                           ;	Chosen strategy is simple_byte
 12359                           
 12360  000632  0A05               	xorlw	5^0	; case 5
 12361  000634  B4D8               	skipnz
 12362  000636  D5BC               	goto	i2l7361
 12363  000638  0A03               	xorlw	6^5	; case 6
 12364  00063A  B4D8               	skipnz
 12365  00063C  D5E2               	goto	i2l7365
 12366  00063E  0A01               	xorlw	7^6	; case 7
 12367  000640  B4D8               	skipnz
 12368  000642  D6E4               	goto	i2l7379
 12369  000644  0A0F               	xorlw	8^7	; case 8
 12370  000646  B4D8               	skipnz
 12371  000648  D686               	goto	i2l18837
 12372  00064A  D000               	goto	i2l7359
 12373                           
 12374                           	line	232
 12375                           	
 12376  00064C                     i2l7364:; BSR set to: 0
 12377                           
 12378                           	line	233
 12379                           	
 12380  00064C                     i2l7359:; BSR set to: 0
 12381                           
 12382                           	line	236
 12383                           ;my_i2c.c: 233: }
 12384                           ;my_i2c.c: 236: if (data_read || data_written) {
 12385  00064C  0100               	movlb	0	; () banked
 12386  00064E  0100               	movlb	0	; () banked
 12387  000650  67C4               	tstfsz	((i2c_int_handler@data_read))&0ffh
 12388  000652  D001               	goto	i2u202_41
 12389  000654  D001               	goto	i2u202_40
 12390  000656                     i2u202_41:
 12391  000656  D007               	goto	i2l7393
 12392  000658                     i2u202_40:
 12393                           	
 12394  000658                     i2l18889:; BSR set to: 0
 12395                           
 12396  000658  0100               	movlb	0	; () banked
 12397  00065A  0100               	movlb	0	; () banked
 12398  00065C  51BF               	movf	((i2c_int_handler@data_written))&0ffh,w
 12399  00065E  B4D8               	btfsc	status,2
 12400  000660  D001               	goto	i2u203_41
 12401  000662  D001               	goto	i2u203_40
 12402  000664                     i2u203_41:
 12403  000664  D007               	goto	i2l18893
 12404  000666                     i2u203_40:
 12405                           	
 12406  000666                     i2l7393:; BSR set to: 0
 12407                           
 12408                           	line	238
 12409                           ;my_i2c.c: 238: if (SSPCON1bits.CKP == 0) {
 12410                           	
 12411  000666  B8C6               	btfsc	((c:4038)),c,4	;volatile
 12412  000668  D001               	goto	i2u204_41
 12413  00066A  D001               	goto	i2u204_40
 12414  00066C                     i2u204_41:
 12415  00066C  D003               	goto	i2l18893
 12416  00066E                     i2u204_40:
 12417                           	line	239
 12418                           	
 12419  00066E                     i2l18891:; BSR set to: 0
 12420                           
 12421                           ;my_i2c.c: 239: SSPCON1bits.CKP = 1;
 12422  00066E  88C6               	bsf	((c:4038)),c,4	;volatile
 12423  000670  D001               	goto	i2l18893
 12424                           	line	240
 12425                           	
 12426  000672                     i2l7394:; BSR set to: 0
 12427                           
 12428  000672  D000               	goto	i2l18893
 12429                           	line	241
 12430                           	
 12431  000674                     i2l7391:; BSR set to: 0
 12432                           
 12433                           	line	244
 12434                           	
 12435  000674                     i2l18893:; BSR set to: 0
 12436                           
 12437                           ;my_i2c.c: 240: }
 12438                           ;my_i2c.c: 241: }
 12439                           ;my_i2c.c: 244: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
 12440  000674  0100               	movlb	0	; () banked
 12441  000676  EE20 F00A          	lfsr	2,0Ah
 12442  00067A  0100               	movlb	0	; () banked
 12443  00067C  51DE               	movf	((_ic_ptr))&0ffh,w
 12444  00067E  26D9               	addwf	fsr2l
 12445  000680  0100               	movlb	0	; () banked
 12446  000682  51DF               	movf	((_ic_ptr+1))&0ffh,w
 12447  000684  22DA               	addwfc	fsr2h
 12448  000686  0E08               	movlw	(09h-1)
 12449  000688  64DF               	cpfsgt	indf2
 12450  00068A  D001               	goto	i2u205_41
 12451  00068C  D001               	goto	i2u205_40
 12452  00068E                     i2u205_41:
 12453  00068E  D027               	goto	i2l18899
 12454  000690                     i2u205_40:
 12455                           	
 12456  000690                     i2l18895:; BSR set to: 0
 12457                           
 12458  000690  0100               	movlb	0	; () banked
 12459  000692  0100               	movlb	0	; () banked
 12460  000694  67C3               	tstfsz	((i2c_int_handler@msg_ready))&0ffh
 12461  000696  D001               	goto	i2u206_41
 12462  000698  D001               	goto	i2u206_40
 12463  00069A                     i2u206_41:
 12464  00069A  D021               	goto	i2l18899
 12465  00069C                     i2u206_40:
 12466                           	line	245
 12467                           	
 12468  00069C                     i2l18897:; BSR set to: 0
 12469                           
 12470                           ;my_i2c.c: 245: ic_ptr->status = 0x5;
 12471  00069C  0100               	movlb	0	; () banked
 12472  00069E  EE20 F00C          	lfsr	2,0Ch
 12473  0006A2  0100               	movlb	0	; () banked
 12474  0006A4  51DE               	movf	((_ic_ptr))&0ffh,w
 12475  0006A6  26D9               	addwf	fsr2l
 12476  0006A8  0100               	movlb	0	; () banked
 12477  0006AA  51DF               	movf	((_ic_ptr+1))&0ffh,w
 12478  0006AC  22DA               	addwfc	fsr2h
 12479  0006AE  0E05               	movlw	low(05h)
 12480  0006B0  6EDF               	movwf	indf2
 12481                           	line	246
 12482                           ;my_i2c.c: 246: ic_ptr->error_count++;
 12483  0006B2  0100               	movlb	0	; () banked
 12484  0006B4  EE20 F00E          	lfsr	2,0Eh
 12485  0006B8  0100               	movlb	0	; () banked
 12486  0006BA  51DE               	movf	((_ic_ptr))&0ffh,w
 12487  0006BC  26D9               	addwf	fsr2l
 12488  0006BE  0100               	movlb	0	; () banked
 12489  0006C0  51DF               	movf	((_ic_ptr+1))&0ffh,w
 12490  0006C2  22DA               	addwfc	fsr2h
 12491  0006C4  2ADF               	incf	indf2
 12492                           
 12493                           	line	247
 12494                           ;my_i2c.c: 247: ic_ptr->error_code = 0x7;
 12495  0006C6  0100               	movlb	0	; () banked
 12496  0006C8  EE20 F00D          	lfsr	2,0Dh
 12497  0006CC  0100               	movlb	0	; () banked
 12498  0006CE  51DE               	movf	((_ic_ptr))&0ffh,w
 12499  0006D0  26D9               	addwf	fsr2l
 12500  0006D2  0100               	movlb	0	; () banked
 12501  0006D4  51DF               	movf	((_ic_ptr+1))&0ffh,w
 12502  0006D6  22DA               	addwfc	fsr2h
 12503  0006D8  0E07               	movlw	low(07h)
 12504  0006DA  6EDF               	movwf	indf2
 12505  0006DC  D000               	goto	i2l18899
 12506                           	line	248
 12507                           	
 12508  0006DE                     i2l7395:; BSR set to: 0
 12509                           
 12510                           	line	250
 12511                           	
 12512  0006DE                     i2l18899:; BSR set to: 0
 12513                           
 12514                           ;my_i2c.c: 248: }
 12515                           ;my_i2c.c: 250: if (msg_ready) {
 12516  0006DE  0100               	movlb	0	; () banked
 12517  0006E0  0100               	movlb	0	; () banked
 12518  0006E2  51C3               	movf	((i2c_int_handler@msg_ready))&0ffh,w
 12519  0006E4  B4D8               	btfsc	status,2
 12520  0006E6  D001               	goto	i2u207_41
 12521  0006E8  D001               	goto	i2u207_40
 12522  0006EA                     i2u207_41:
 12523  0006EA  D050               	goto	i2l18907
 12524  0006EC                     i2u207_40:
 12525                           	line	251
 12526                           	
 12527  0006EC                     i2l18901:; BSR set to: 0
 12528                           
 12529                           ;my_i2c.c: 251: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
 12530  0006EC  0100               	movlb	0	; () banked
 12531  0006EE  EE20 F00B          	lfsr	2,0Bh
 12532  0006F2  0100               	movlb	0	; () banked
 12533  0006F4  51DE               	movf	((_ic_ptr))&0ffh,w
 12534  0006F6  26D9               	addwf	fsr2l
 12535  0006F8  0100               	movlb	0	; () banked
 12536  0006FA  51DF               	movf	((_ic_ptr+1))&0ffh,w
 12537  0006FC  22DA               	addwfc	fsr2h
 12538  0006FE  0100               	movlb	0	; () banked
 12539  000700  EE10 F00A          	lfsr	1,0Ah
 12540  000704  0100               	movlb	0	; () banked
 12541  000706  51DE               	movf	((_ic_ptr))&0ffh,w
 12542  000708  26E1               	addwf	fsr1l
 12543  00070A  0100               	movlb	0	; () banked
 12544  00070C  51DF               	movf	((_ic_ptr+1))&0ffh,w
 12545  00070E  22E2               	addwfc	fsr1h
 12546  000710  50E7               	movf	indf1,w
 12547  000712  0100               	movlb	0	; () banked
 12548  000714  6FBA               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12549  000716  0100               	movlb	0	; () banked
 12550  000718  51BA               	movf	((??_i2c_int_handler+0+0))&0ffh,w
 12551  00071A  0D01               	mullw	01h
 12552  00071C  50F3               	movf	(prodl),c,w
 12553  00071E  0100               	movlb	0	; () banked
 12554  000720  0100               	movlb	0	; () banked
 12555  000722  25DE               	addwf	((_ic_ptr))&0ffh,w
 12556  000724  6EE1               	movwf	c:fsr1l
 12557  000726  50F4               	movf	(prodh),c,w
 12558  000728  0100               	movlb	0	; () banked
 12559  00072A  0100               	movlb	0	; () banked
 12560  00072C  21DF               	addwfc	((_ic_ptr+1))&0ffh,w
 12561  00072E  6EE2               	movwf	1+c:fsr1l
 12562  000730  CFDF FFE7          	movff	indf2,indf1
 12563                           	line	252
 12564                           	
 12565  000734                     i2l18903:; BSR set to: 0
 12566                           
 12567                           ;my_i2c.c: 252: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
 12568  000734  0100               	movlb	0	; () banked
 12569  000736  EE20 F00A          	lfsr	2,0Ah
 12570  00073A  0100               	movlb	0	; () banked
 12571  00073C  51DE               	movf	((_ic_ptr))&0ffh,w
 12572  00073E  26D9               	addwf	fsr2l
 12573  000740  0100               	movlb	0	; () banked
 12574  000742  51DF               	movf	((_ic_ptr+1))&0ffh,w
 12575  000744  22DA               	addwfc	fsr2h
 12576  000746  50DF               	movf	indf2,w
 12577  000748  0100               	movlb	0	; () banked
 12578  00074A  6FBA               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12579  00074C  0100               	movlb	0	; () banked
 12580  00074E  29BA               	incf	((??_i2c_int_handler+0+0))&0ffh,w
 12581  000750  0100               	movlb	0	; () banked
 12582  000752  0100               	movlb	0	; () banked
 12583  000754  6FB6               	movwf	((?_ToMainHigh_sendmsg))&0ffh
 12584  000756  0100               	movlb	0	; () banked
 12585  000758  6FBB               	movwf	(??_i2c_int_handler+1+0)&0ffh
 12586  00075A  0E28               	movlw	low(028h)
 12587  00075C  0100               	movlb	0	; () banked
 12588  00075E  0100               	movlb	0	; () banked
 12589  000760  6FB7               	movwf	(0+(?_ToMainHigh_sendmsg+01h))&0ffh
 12590  000762  0100               	movlb	0	; () banked
 12591  000764  51BB               	movf	(??_i2c_int_handler+1+0)&0ffh,w
 12592  000766  C0DE  F0B8         	movff	(_ic_ptr),0+(?_ToMainHigh_sendmsg+02h)
 12593  00076A  C0DF  F0B9         	movff	(_ic_ptr+1),1+(?_ToMainHigh_sendmsg+02h)
 12594  00076E  0100               	movlb	0	; () banked
 12595  000770  EC3F  F00E         	call	_ToMainHigh_sendmsg	;wreg free
 12596                           	line	253
 12597                           	
 12598  000774                     i2l18905:
 12599                           ;my_i2c.c: 253: ic_ptr->buflen = 0;
 12600  000774  0100               	movlb	0	; () banked
 12601  000776  EE20 F00A          	lfsr	2,0Ah
 12602  00077A  0100               	movlb	0	; () banked
 12603  00077C  51DE               	movf	((_ic_ptr))&0ffh,w
 12604  00077E  26D9               	addwf	fsr2l
 12605  000780  0100               	movlb	0	; () banked
 12606  000782  51DF               	movf	((_ic_ptr+1))&0ffh,w
 12607  000784  22DA               	addwfc	fsr2h
 12608  000786  0E00               	movlw	low(0)
 12609  000788  6EDF               	movwf	indf2
 12610                           	line	254
 12611                           ;my_i2c.c: 254: } else if (ic_ptr->error_count >= 1) {
 12612  00078A  D05E               	goto	i2l18915
 12613                           	
 12614  00078C                     i2l7396:; BSR set to: 0
 12615                           
 12616                           	
 12617  00078C                     i2l18907:; BSR set to: 0
 12618                           
 12619  00078C  0100               	movlb	0	; () banked
 12620  00078E  EE20 F00E          	lfsr	2,0Eh
 12621  000792  0100               	movlb	0	; () banked
 12622  000794  51DE               	movf	((_ic_ptr))&0ffh,w
 12623  000796  26D9               	addwf	fsr2l
 12624  000798  0100               	movlb	0	; () banked
 12625  00079A  51DF               	movf	((_ic_ptr+1))&0ffh,w
 12626  00079C  22DA               	addwfc	fsr2h
 12627  00079E  50DF               	movf	indf2,w
 12628  0007A0  B4D8               	btfsc	status,2
 12629  0007A2  D001               	goto	i2u208_41
 12630  0007A4  D001               	goto	i2u208_40
 12631  0007A6                     i2u208_41:
 12632  0007A6  D050               	goto	i2l18915
 12633  0007A8                     i2u208_40:
 12634                           	line	255
 12635                           	
 12636  0007A8                     i2l18909:; BSR set to: 0
 12637                           
 12638                           ;my_i2c.c: 255: error_buf[0] = ic_ptr->error_count;
 12639  0007A8  0100               	movlb	0	; () banked
 12640  0007AA  EE20 F00E          	lfsr	2,0Eh
 12641  0007AE  0100               	movlb	0	; () banked
 12642  0007B0  51DE               	movf	((_ic_ptr))&0ffh,w
 12643  0007B2  26D9               	addwf	fsr2l
 12644  0007B4  0100               	movlb	0	; () banked
 12645  0007B6  51DF               	movf	((_ic_ptr+1))&0ffh,w
 12646  0007B8  22DA               	addwfc	fsr2h
 12647  0007BA  50DF               	movf	indf2,w
 12648  0007BC  0100               	movlb	0	; () banked
 12649  0007BE  0100               	movlb	0	; () banked
 12650  0007C0  6FBC               	movwf	((i2c_int_handler@error_buf))&0ffh
 12651                           	line	256
 12652                           ;my_i2c.c: 256: error_buf[1] = ic_ptr->error_code;
 12653  0007C2  0100               	movlb	0	; () banked
 12654  0007C4  EE20 F00D          	lfsr	2,0Dh
 12655  0007C8  0100               	movlb	0	; () banked
 12656  0007CA  51DE               	movf	((_ic_ptr))&0ffh,w
 12657  0007CC  26D9               	addwf	fsr2l
 12658  0007CE  0100               	movlb	0	; () banked
 12659  0007D0  51DF               	movf	((_ic_ptr+1))&0ffh,w
 12660  0007D2  22DA               	addwfc	fsr2h
 12661  0007D4  50DF               	movf	indf2,w
 12662  0007D6  0100               	movlb	0	; () banked
 12663  0007D8  0100               	movlb	0	; () banked
 12664  0007DA  6FBD               	movwf	(0+(i2c_int_handler@error_buf+01h))&0ffh
 12665                           	line	257
 12666                           ;my_i2c.c: 257: error_buf[2] = ic_ptr->event_count;
 12667  0007DC  0100               	movlb	0	; () banked
 12668  0007DE  EE20 F00B          	lfsr	2,0Bh
 12669  0007E2  0100               	movlb	0	; () banked
 12670  0007E4  51DE               	movf	((_ic_ptr))&0ffh,w
 12671  0007E6  26D9               	addwf	fsr2l
 12672  0007E8  0100               	movlb	0	; () banked
 12673  0007EA  51DF               	movf	((_ic_ptr+1))&0ffh,w
 12674  0007EC  22DA               	addwfc	fsr2h
 12675  0007EE  50DF               	movf	indf2,w
 12676  0007F0  0100               	movlb	0	; () banked
 12677  0007F2  0100               	movlb	0	; () banked
 12678  0007F4  6FBE               	movwf	(0+(i2c_int_handler@error_buf+02h))&0ffh
 12679                           	line	258
 12680                           	
 12681  0007F6                     i2l18911:; BSR set to: 0
 12682                           
 12683                           ;my_i2c.c: 258: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
 12684  0007F6  0100               	movlb	0	; () banked
 12685  0007F8  6FBA               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12686  0007FA  0E03               	movlw	low(03h)
 12687  0007FC  0100               	movlb	0	; () banked
 12688  0007FE  0100               	movlb	0	; () banked
 12689  000800  6FB6               	movwf	((?_ToMainHigh_sendmsg))&0ffh
 12690  000802  0100               	movlb	0	; () banked
 12691  000804  51BA               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 12692  000806  0100               	movlb	0	; () banked
 12693  000808  6FBB               	movwf	(??_i2c_int_handler+1+0)&0ffh
 12694  00080A  0E29               	movlw	low(029h)
 12695  00080C  0100               	movlb	0	; () banked
 12696  00080E  0100               	movlb	0	; () banked
 12697  000810  6FB7               	movwf	(0+(?_ToMainHigh_sendmsg+01h))&0ffh
 12698  000812  0100               	movlb	0	; () banked
 12699  000814  51BB               	movf	(??_i2c_int_handler+1+0)&0ffh,w
 12700  000816  0100               	movlb	0	; () banked
 12701  000818  0E00               	movlw	high(i2c_int_handler@error_buf)
 12702  00081A  0100               	movlb	0	; () banked
 12703  00081C  0100               	movlb	0	; () banked
 12704  00081E  6FB9               	movwf	(1+(?_ToMainHigh_sendmsg+02h))&0ffh
 12705  000820  0100               	movlb	0	; () banked
 12706  000822  0EBC               	movlw	low(i2c_int_handler@error_buf)
 12707  000824  0100               	movlb	0	; () banked
 12708  000826  6FB8               	movwf	(0+(?_ToMainHigh_sendmsg+02h))&0ffh
 12709  000828  0100               	movlb	0	; () banked
 12710  00082A  EC3F  F00E         	call	_ToMainHigh_sendmsg	;wreg free
 12711                           	line	259
 12712                           	
 12713  00082E                     i2l18913:
 12714                           ;my_i2c.c: 259: ic_ptr->error_count = 0;
 12715  00082E  0100               	movlb	0	; () banked
 12716  000830  EE20 F00E          	lfsr	2,0Eh
 12717  000834  0100               	movlb	0	; () banked
 12718  000836  51DE               	movf	((_ic_ptr))&0ffh,w
 12719  000838  26D9               	addwf	fsr2l
 12720  00083A  0100               	movlb	0	; () banked
 12721  00083C  51DF               	movf	((_ic_ptr+1))&0ffh,w
 12722  00083E  22DA               	addwfc	fsr2h
 12723  000840  0E00               	movlw	low(0)
 12724  000842  6EDF               	movwf	indf2
 12725  000844  D001               	goto	i2l18915
 12726                           	line	260
 12727                           	
 12728  000846                     i2l7398:; BSR set to: 0
 12729                           
 12730  000846  D000               	goto	i2l18915
 12731                           	line	261
 12732                           	
 12733  000848                     i2l7397:; BSR set to: 0
 12734                           
 12735                           	
 12736  000848                     i2l18915:; BSR set to: 0
 12737                           
 12738                           ;my_i2c.c: 260: }
 12739                           ;my_i2c.c: 261: if (msg_to_send) {
 12740  000848  0100               	movlb	0	; () banked
 12741  00084A  0100               	movlb	0	; () banked
 12742  00084C  51C2               	movf	((i2c_int_handler@msg_to_send))&0ffh,w
 12743  00084E  B4D8               	btfsc	status,2
 12744  000850  D001               	goto	i2u209_41
 12745  000852  D001               	goto	i2u209_40
 12746  000854                     i2u209_41:
 12747  000854  D020               	goto	i2l7400
 12748  000856                     i2u209_40:
 12749                           	line	263
 12750                           	
 12751  000856                     i2l18917:; BSR set to: 0
 12752                           
 12753                           ;my_i2c.c: 263: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
 12754  000856  0100               	movlb	0	; () banked
 12755  000858  6FBA               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12756  00085A  0E00               	movlw	low(0)
 12757  00085C  0100               	movlb	0	; () banked
 12758  00085E  0100               	movlb	0	; () banked
 12759  000860  6FB6               	movwf	((?_ToMainHigh_sendmsg))&0ffh
 12760  000862  0100               	movlb	0	; () banked
 12761  000864  51BA               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 12762  000866  0100               	movlb	0	; () banked
 12763  000868  6FBB               	movwf	(??_i2c_int_handler+1+0)&0ffh
 12764  00086A  0E2A               	movlw	low(02Ah)
 12765  00086C  0100               	movlb	0	; () banked
 12766  00086E  0100               	movlb	0	; () banked
 12767  000870  6FB7               	movwf	(0+(?_ToMainHigh_sendmsg+01h))&0ffh
 12768  000872  0100               	movlb	0	; () banked
 12769  000874  51BB               	movf	(??_i2c_int_handler+1+0)&0ffh,w
 12770  000876  C0DE  F0B8         	movff	(_ic_ptr),0+(?_ToMainHigh_sendmsg+02h)
 12771  00087A  C0DF  F0B9         	movff	(_ic_ptr+1),1+(?_ToMainHigh_sendmsg+02h)
 12772  00087E  0100               	movlb	0	; () banked
 12773  000880  EC3F  F00E         	call	_ToMainHigh_sendmsg	;wreg free
 12774                           	line	264
 12775                           	
 12776  000884                     i2l18919:
 12777                           ;my_i2c.c: 264: msg_to_send = 0;
 12778  000884  0100               	movlb	0	; () banked
 12779  000886  6FBA               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12780  000888  0E00               	movlw	low(0)
 12781  00088A  0100               	movlb	0	; () banked
 12782  00088C  0100               	movlb	0	; () banked
 12783  00088E  6FC2               	movwf	((i2c_int_handler@msg_to_send))&0ffh
 12784  000890  0100               	movlb	0	; () banked
 12785  000892  51BA               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 12786  000894  D000               	goto	i2l7400
 12787                           	line	265
 12788                           	
 12789  000896                     i2l7399:; BSR set to: 0
 12790                           
 12791                           	line	266
 12792                           	
 12793  000896                     i2l7400:; BSR set to: 0
 12794                           
 12795  000896  0012               	return
 12796                           	opt stack 0
 12797                           GLOBAL	__end_of_i2c_int_handler
 12798  000898                     	__end_of_i2c_int_handler:
 12799                           	signat	_i2c_int_handler,88
 12800                           	global	_timer0_int_handler
 12801                           
 12802 ;; *************** function _timer0_int_handler *****************
 12803 ;; Defined at:
 12804 ;;		line 17 in file "../src/user_interrupts.c"
 12805 ;; Parameters:    Size  Location     Type
 12806 ;;		None
 12807 ;; Auto vars:     Size  Location     Type
 12808 ;;  val             2   16[BANK0 ] unsigned int 
 12809 ;;  length          2   14[BANK0 ] int 
 12810 ;;  msgtype         2   12[BANK0 ] int 
 12811 ;; Return value:  Size  Location     Type
 12812 ;;		None               void
 12813 ;; Registers used:
 12814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12815 ;; Tracked objects:
 12816 ;;		On entry : 0/0
 12817 ;;		On exit  : 0/0
 12818 ;;		Unchanged: 0/0
 12819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12820 ;;      Params:         0       0       0       0       0
 12821 ;;      Locals:         0       6       0       0       0
 12822 ;;      Temps:          0       2       0       0       0
 12823 ;;      Totals:         0       8       0       0       0
 12824 ;;Total ram usage:        8 bytes
 12825 ;; Hardware stack levels used:    1
 12826 ;; Hardware stack levels required when called:    3
 12827 ;; This function calls:
 12828 ;;		_WriteTimer0
 12829 ;;		_FromMainHigh_recvmsg
 12830 ;;		_ToMainHigh_sendmsg
 12831 ;; This function is called by:
 12832 ;;		_InterruptHandlerHigh
 12833 ;; This function uses a non-reentrant model
 12834 ;;
 12835                           psect	text40,class=CODE,space=0,reloc=2
 12836                           global __ptext40
 12837  00112A                     __ptext40:
 12838                           psect	text40
 12839                           	file	"../src/user_interrupts.c"
 12840                           	line	17
 12841                           	global	__size_of_timer0_int_handler
 12842  0000                     	__size_of_timer0_int_handler	equ	__end_of_timer0_int_handler-_timer0_int_handler
 12843                           	
 12844  00112A                     _timer0_int_handler:; BSR set to: 0
 12845                           
 12846                           	opt	stack 16
 12847                           	line	22
 12848                           	
 12849  00112A                     i2l18921:
 12850                           ;user_interrupts.c: 18: unsigned int val;
 12851                           ;user_interrupts.c: 19: int length, msgtype;
 12852                           ;user_interrupts.c: 22: LATBbits.LATB0 = !LATBbits.LATB0;
 12853                           	
 12854  00112A  A08A               	btfss	((c:3978)),c,0	;volatile
 12855  00112C  D001               	goto	i2u210_41
 12856  00112E  D002               	goto	i2u210_40
 12857  001130                     i2u210_41:
 12858  001130  0E01               	movlw	1
 12859  001132  D001               	goto	i2u210_46
 12860  001134                     i2u210_40:
 12861  001134  0E00               	movlw	0
 12862  001136                     i2u210_46:
 12863  001136  0100               	movlb	0	; () banked
 12864  001138  6FC0               	movwf	(??_timer0_int_handler+0+0)&0ffh
 12865  00113A  508A               	movf	((c:3978)),c,w	;volatile
 12866  00113C  0100               	movlb	0	; () banked
 12867  00113E  19C0               	xorwf	((??_timer0_int_handler+0+0))&0ffh,w
 12868  001140  0BFE               	andlw	not ((1<<1)-1)
 12869  001142  19C0               	xorwf	((??_timer0_int_handler+0+0))&0ffh,w
 12870  001144  6E8A               	movwf	((c:3978)),c	;volatile
 12871                           	line	24
 12872                           	
 12873  001146                     i2l18923:; BSR set to: 0
 12874                           
 12875                           ;user_interrupts.c: 24: WriteTimer0(0);
 12876  001146  0E00               	movlw	high(0)
 12877  001148  6E33               	movwf	((c:?_WriteTimer0+1)),c
 12878  00114A  0E00               	movlw	low(0)
 12879  00114C  6E32               	movwf	((c:?_WriteTimer0)),c
 12880  00114E  EC92  F00E         	call	_WriteTimer0	;wreg free
 12881                           	line	26
 12882                           	
 12883  001152                     i2l18925:
 12884                           ;user_interrupts.c: 26: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)(uns
                                 igned int)&msgtype, (void *) &val);
 12885  001152  0100               	movlb	0	; () banked
 12886  001154  6FC0               	movwf	(??_timer0_int_handler+0+0)&0ffh
 12887  001156  0E02               	movlw	low(02h)
 12888  001158  0100               	movlb	0	; () banked
 12889  00115A  0100               	movlb	0	; () banked
 12890  00115C  6FBB               	movwf	((?_FromMainHigh_recvmsg))&0ffh
 12891  00115E  0100               	movlb	0	; () banked
 12892  001160  51C0               	movf	(??_timer0_int_handler+0+0)&0ffh,w
 12893  001162  0100               	movlb	0	; () banked
 12894  001164  0E00               	movlw	high(timer0_int_handler@msgtype)
 12895  001166  0100               	movlb	0	; () banked
 12896  001168  0100               	movlb	0	; () banked
 12897  00116A  6FBD               	movwf	(1+(?_FromMainHigh_recvmsg+01h))&0ffh
 12898  00116C  0100               	movlb	0	; () banked
 12899  00116E  0EC2               	movlw	low(timer0_int_handler@msgtype)
 12900  001170  0100               	movlb	0	; () banked
 12901  001172  6FBC               	movwf	(0+(?_FromMainHigh_recvmsg+01h))&0ffh
 12902  001174  0100               	movlb	0	; () banked
 12903  001176  0E00               	movlw	high(timer0_int_handler@val)
 12904  001178  0100               	movlb	0	; () banked
 12905  00117A  0100               	movlb	0	; () banked
 12906  00117C  6FBF               	movwf	(1+(?_FromMainHigh_recvmsg+03h))&0ffh
 12907  00117E  0100               	movlb	0	; () banked
 12908  001180  0EC6               	movlw	low(timer0_int_handler@val)
 12909  001182  0100               	movlb	0	; () banked
 12910  001184  6FBE               	movwf	(0+(?_FromMainHigh_recvmsg+03h))&0ffh
 12911  001186  0100               	movlb	0	; () banked
 12912  001188  ECE1  F00D         	call	_FromMainHigh_recvmsg	;wreg free
 12913  00118C  0100               	movlb	0	; () banked
 12914  00118E  0100               	movlb	0	; () banked
 12915  001190  6FC4               	movwf	((timer0_int_handler@length))&0ffh
 12916  001192  0100               	movlb	0	; () banked
 12917  001194  6BC5               	clrf	((timer0_int_handler@length+1))&0ffh
 12918  001196  0100               	movlb	0	; () banked
 12919  001198  BFC4               	btfsc	((timer0_int_handler@length))&0ffh,7
 12920  00119A  07C5               	decf	((timer0_int_handler@length+1))&0ffh
 12921                           	line	27
 12922                           	
 12923  00119C                     i2l18927:; BSR set to: 0
 12924                           
 12925                           ;user_interrupts.c: 27: if (length == sizeof (val)) {
 12926  00119C  0100               	movlb	0	; () banked
 12927  00119E  0100               	movlb	0	; () banked
 12928  0011A0  51C4               	movf	((timer0_int_handler@length))&0ffh,w
 12929  0011A2  0A02               	xorlw	2
 12930  0011A4  11C5               	iorwf ((timer0_int_handler@length+1))&0ffh,w
 12931                           
 12932  0011A6  A4D8               	btfss	status,2
 12933  0011A8  D001               	goto	i2u211_41
 12934  0011AA  D001               	goto	i2u211_40
 12935  0011AC                     i2u211_41:
 12936  0011AC  D01D               	goto	i2l16380
 12937  0011AE                     i2u211_40:
 12938                           	line	28
 12939                           	
 12940  0011AE                     i2l18929:; BSR set to: 0
 12941                           
 12942                           ;user_interrupts.c: 28: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
 12943  0011AE  0100               	movlb	0	; () banked
 12944  0011B0  6FC0               	movwf	(??_timer0_int_handler+0+0)&0ffh
 12945  0011B2  0E02               	movlw	low(02h)
 12946  0011B4  0100               	movlb	0	; () banked
 12947  0011B6  0100               	movlb	0	; () banked
 12948  0011B8  6FB6               	movwf	((?_ToMainHigh_sendmsg))&0ffh
 12949  0011BA  0100               	movlb	0	; () banked
 12950  0011BC  51C0               	movf	(??_timer0_int_handler+0+0)&0ffh,w
 12951  0011BE  0100               	movlb	0	; () banked
 12952  0011C0  6FC1               	movwf	(??_timer0_int_handler+1+0)&0ffh
 12953  0011C2  0E0A               	movlw	low(0Ah)
 12954  0011C4  0100               	movlb	0	; () banked
 12955  0011C6  0100               	movlb	0	; () banked
 12956  0011C8  6FB7               	movwf	(0+(?_ToMainHigh_sendmsg+01h))&0ffh
 12957  0011CA  0100               	movlb	0	; () banked
 12958  0011CC  51C1               	movf	(??_timer0_int_handler+1+0)&0ffh,w
 12959  0011CE  0100               	movlb	0	; () banked
 12960  0011D0  0E00               	movlw	high(timer0_int_handler@val)
 12961  0011D2  0100               	movlb	0	; () banked
 12962  0011D4  0100               	movlb	0	; () banked
 12963  0011D6  6FB9               	movwf	(1+(?_ToMainHigh_sendmsg+02h))&0ffh
 12964  0011D8  0100               	movlb	0	; () banked
 12965  0011DA  0EC6               	movlw	low(timer0_int_handler@val)
 12966  0011DC  0100               	movlb	0	; () banked
 12967  0011DE  6FB8               	movwf	(0+(?_ToMainHigh_sendmsg+02h))&0ffh
 12968  0011E0  0100               	movlb	0	; () banked
 12969  0011E2  EC3F  F00E         	call	_ToMainHigh_sendmsg	;wreg free
 12970  0011E6  D000               	goto	i2l16380
 12971                           	line	29
 12972                           	
 12973  0011E8                     i2l16379:
 12974                           	line	30
 12975                           	
 12976  0011E8                     i2l16380:
 12977  0011E8  0012               	return
 12978                           	opt stack 0
 12979                           GLOBAL	__end_of_timer0_int_handler
 12980  0011EA                     	__end_of_timer0_int_handler:
 12981                           	signat	_timer0_int_handler,88
 12982                           	global	_SleepIfOkay
 12983                           
 12984 ;; *************** function _SleepIfOkay *****************
 12985 ;; Defined at:
 12986 ;;		line 228 in file "../src/messages.c"
 12987 ;; Parameters:    Size  Location     Type
 12988 ;;		None
 12989 ;; Auto vars:     Size  Location     Type
 12990 ;;		None
 12991 ;; Return value:  Size  Location     Type
 12992 ;;		None               void
 12993 ;; Registers used:
 12994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12995 ;; Tracked objects:
 12996 ;;		On entry : 0/0
 12997 ;;		On exit  : 0/0
 12998 ;;		Unchanged: 0/0
 12999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13000 ;;      Params:         0       0       0       0       0
 13001 ;;      Locals:         0       0       0       0       0
 13002 ;;      Temps:          0       0       0       0       0
 13003 ;;      Totals:         0       0       0       0       0
 13004 ;;Total ram usage:        0 bytes
 13005 ;; Hardware stack levels used:    1
 13006 ;; Hardware stack levels required when called:    2
 13007 ;; This function calls:
 13008 ;;		i2_in_low_int
 13009 ;;		i2_in_high_int
 13010 ;;		i2_check_msg
 13011 ;;		_enter_sleep_mode
 13012 ;; This function is called by:
 13013 ;;		_InterruptHandlerHigh
 13014 ;; This function uses a non-reentrant model
 13015 ;;
 13016                           psect	text41,class=CODE,space=0,reloc=2
 13017                           global __ptext41
 13018  00164C                     __ptext41:
 13019                           psect	text41
 13020                           	file	"../src/messages.c"
 13021                           	line	228
 13022                           	global	__size_of_SleepIfOkay
 13023  0000                     	__size_of_SleepIfOkay	equ	__end_of_SleepIfOkay-_SleepIfOkay
 13024                           	
 13025  00164C                     _SleepIfOkay:
 13026                           	opt	stack 17
 13027                           	line	230
 13028                           	
 13029  00164C                     i2l18205:
 13030                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
 13031  00164C  664B               	tstfsz	((c:_MQ_Main_Willing_to_block)),c
 13032  00164E  D001               	goto	i2u129_41
 13033  001650  D001               	goto	i2u129_40
 13034  001652                     i2u129_41:
 13035  001652  D002               	goto	i2l18209
 13036  001654                     i2u129_40:
 13037  001654  D035               	goto	i2l5529
 13038                           	line	231
 13039                           	
 13040  001656                     i2l18207:
 13041                           ;messages.c: 231: return;
 13042  001656  D034               	goto	i2l5529
 13043                           	line	232
 13044                           	
 13045  001658                     i2l5528:
 13046                           	line	235
 13047                           	
 13048  001658                     i2l18209:
 13049                           ;messages.c: 232: }
 13050                           ;messages.c: 235: if (in_low_int()) {
 13051  001658  ECF0  F00C         	call	i2_in_low_int	;wreg free
 13052  00165C  5035               	movf	(1+?i2_in_low_int),c,w
 13053  00165E  1034               	iorwf (0+?i2_in_low_int),c,w
 13054                           
 13055  001660  B4D8               	btfsc	status,2
 13056  001662  D001               	goto	i2u130_41
 13057  001664  D001               	goto	i2u130_40
 13058  001666                     i2u130_41:
 13059  001666  D002               	goto	i2l18213
 13060  001668                     i2u130_40:
 13061  001668  D02B               	goto	i2l5529
 13062                           	line	236
 13063                           	
 13064  00166A                     i2l18211:
 13065                           ;messages.c: 236: return;
 13066  00166A  D02A               	goto	i2l5529
 13067                           	line	237
 13068                           	
 13069  00166C                     i2l5530:
 13070                           	line	240
 13071                           	
 13072  00166C                     i2l18213:
 13073                           ;messages.c: 237: }
 13074                           ;messages.c: 240: if (!in_high_int()) {
 13075  00166C  EC9B  F00E         	call	i2_in_high_int	;wreg free
 13076  001670  5033               	movf	(1+?i2_in_high_int),c,w
 13077  001672  1032               	iorwf (0+?i2_in_high_int),c,w
 13078                           
 13079  001674  A4D8               	btfss	status,2
 13080  001676  D001               	goto	i2u131_41
 13081  001678  D001               	goto	i2u131_40
 13082  00167A                     i2u131_41:
 13083  00167A  D002               	goto	i2l18217
 13084  00167C                     i2u131_40:
 13085  00167C  D021               	goto	i2l5529
 13086                           	line	241
 13087                           	
 13088  00167E                     i2l18215:
 13089                           ;messages.c: 241: return;
 13090  00167E  D020               	goto	i2l5529
 13091                           	line	242
 13092                           	
 13093  001680                     i2l5531:
 13094                           	line	247
 13095                           	
 13096  001680                     i2l18217:
 13097                           ;messages.c: 242: }
 13098                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
 13099  001680  0101               	movlb	1	; () banked
 13100  001682  0E01               	movlw	high(_ToMainHigh_MQ)
 13101  001684  6E33               	movwf	((c:?i2_check_msg+1)),c
 13102  001686  0101               	movlb	1	; () banked
 13103  001688  0E6C               	movlw	low(_ToMainHigh_MQ)
 13104  00168A  6E32               	movwf	((c:?i2_check_msg)),c
 13105  00168C  EC08  F00E         	call	i2_check_msg	;wreg free
 13106  001690  0900               	iorlw	0
 13107  001692  B4D8               	btfsc	status,2
 13108  001694  D001               	goto	i2u132_41
 13109  001696  D001               	goto	i2u132_40
 13110  001698                     i2u132_41:
 13111  001698  D002               	goto	i2l18221
 13112  00169A                     i2u132_40:
 13113  00169A  D012               	goto	i2l5529
 13114                           	line	248
 13115                           	
 13116  00169C                     i2l18219:
 13117                           ;messages.c: 248: return;
 13118  00169C  D011               	goto	i2l5529
 13119                           	line	249
 13120                           	
 13121  00169E                     i2l5532:
 13122                           	line	250
 13123                           	
 13124  00169E                     i2l18221:
 13125                           ;messages.c: 249: }
 13126                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
 13127  00169E  0100               	movlb	0	; () banked
 13128  0016A0  0E00               	movlw	high(_ToMainLow_MQ)
 13129  0016A2  6E33               	movwf	((c:?i2_check_msg+1)),c
 13130  0016A4  0100               	movlb	0	; () banked
 13131  0016A6  0E80               	movlw	low(_ToMainLow_MQ)
 13132  0016A8  6E32               	movwf	((c:?i2_check_msg)),c
 13133  0016AA  EC08  F00E         	call	i2_check_msg	;wreg free
 13134  0016AE  0900               	iorlw	0
 13135  0016B0  B4D8               	btfsc	status,2
 13136  0016B2  D001               	goto	i2u133_41
 13137  0016B4  D001               	goto	i2u133_40
 13138  0016B6                     i2u133_41:
 13139  0016B6  D002               	goto	i2l18225
 13140  0016B8                     i2u133_40:
 13141  0016B8  D003               	goto	i2l5529
 13142                           	line	251
 13143                           	
 13144  0016BA                     i2l18223:
 13145                           ;messages.c: 251: return;
 13146  0016BA  D002               	goto	i2l5529
 13147                           	line	252
 13148                           	
 13149  0016BC                     i2l5533:
 13150                           	line	253
 13151                           	
 13152  0016BC                     i2l18225:
 13153                           ;messages.c: 252: }
 13154                           ;messages.c: 253: enter_sleep_mode();
 13155  0016BC  ECB1  F00E         	call	_enter_sleep_mode	;wreg free
 13156                           	line	254
 13157                           	
 13158  0016C0                     i2l5529:
 13159  0016C0  0012               	return
 13160                           	opt stack 0
 13161                           GLOBAL	__end_of_SleepIfOkay
 13162  0016C2                     	__end_of_SleepIfOkay:
 13163                           	signat	_SleepIfOkay,88
 13164                           	global	_ToMainHigh_sendmsg
 13165                           
 13166 ;; *************** function _ToMainHigh_sendmsg *****************
 13167 ;; Defined at:
 13168 ;;		line 126 in file "../src/messages.c"
 13169 ;; Parameters:    Size  Location     Type
 13170 ;;  length          1    0[BANK0 ] unsigned char 
 13171 ;;  msgtype         1    1[BANK0 ] unsigned char 
 13172 ;;  data            2    2[BANK0 ] PTR void 
 13173 ;;		 -> timer0_int_handler@val(2), NULL(0), i2c_int_handler@error_buf(3), main@ic(28), 
 13174 ;; Auto vars:     Size  Location     Type
 13175 ;;		None
 13176 ;; Return value:  Size  Location     Type
 13177 ;;                  1    wreg      char 
 13178 ;; Registers used:
 13179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13180 ;; Tracked objects:
 13181 ;;		On entry : 0/0
 13182 ;;		On exit  : 0/0
 13183 ;;		Unchanged: 0/0
 13184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13185 ;;      Params:         0       4       0       0       0
 13186 ;;      Locals:         0       0       0       0       0
 13187 ;;      Temps:          0       0       0       0       0
 13188 ;;      Totals:         0       4       0       0       0
 13189 ;;Total ram usage:        4 bytes
 13190 ;; Hardware stack levels used:    1
 13191 ;; Hardware stack levels required when called:    2
 13192 ;; This function calls:
 13193 ;;		i2_send_msg
 13194 ;; This function is called by:
 13195 ;;		_i2c_int_handler
 13196 ;;		_timer0_int_handler
 13197 ;; This function uses a non-reentrant model
 13198 ;;
 13199                           psect	text42,class=CODE,space=0,reloc=2
 13200                           global __ptext42
 13201  001C7E                     __ptext42:
 13202                           psect	text42
 13203                           	file	"../src/messages.c"
 13204                           	line	126
 13205                           	global	__size_of_ToMainHigh_sendmsg
 13206  0000                     	__size_of_ToMainHigh_sendmsg	equ	__end_of_ToMainHigh_sendmsg-_ToMainHigh_sendmsg
 13207                           	
 13208  001C7E                     _ToMainHigh_sendmsg:
 13209                           	opt	stack 16
 13210                           	line	132
 13211                           	
 13212  001C7E                     i2l19073:
 13213                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
 13214                           ;	Return value of _ToMainHigh_sendmsg is never used
 13215  001C7E  0101               	movlb	1	; () banked
 13216  001C80  0E01               	movlw	high(_ToMainHigh_MQ)
 13217  001C82  6E3D               	movwf	((c:?i2_send_msg+1)),c
 13218  001C84  0101               	movlb	1	; () banked
 13219  001C86  0E6C               	movlw	low(_ToMainHigh_MQ)
 13220  001C88  6E3C               	movwf	((c:?i2_send_msg)),c
 13221  001C8A  C0B6  F03E         	movff	(ToMainHigh_sendmsg@length),0+((c:?i2_send_msg)+02h)
 13222  001C8E  C0B7  F03F         	movff	(ToMainHigh_sendmsg@msgtype),0+((c:?i2_send_msg)+03h)
 13223  001C92  C0B8  F040         	movff	(ToMainHigh_sendmsg@data),0+((c:?i2_send_msg)+04h)
 13224  001C96  C0B9  F041         	movff	(ToMainHigh_sendmsg@data+1),1+((c:?i2_send_msg)+04h)
 13225  001C9A  EC03  F00A         	call	i2_send_msg	;wreg free
 13226  001C9E  D000               	goto	i2l5495
 13227                           	
 13228  001CA0                     i2l19075:
 13229                           	line	133
 13230                           	
 13231  001CA0                     i2l5495:
 13232  001CA0  0012               	return
 13233                           	opt stack 0
 13234                           GLOBAL	__end_of_ToMainHigh_sendmsg
 13235  001CA2                     	__end_of_ToMainHigh_sendmsg:
 13236                           	signat	_ToMainHigh_sendmsg,12409
 13237                           	global	_FromMainHigh_recvmsg
 13238                           
 13239 ;; *************** function _FromMainHigh_recvmsg *****************
 13240 ;; Defined at:
 13241 ;;		line 183 in file "../src/messages.c"
 13242 ;; Parameters:    Size  Location     Type
 13243 ;;  maxlength       1    5[BANK0 ] unsigned char 
 13244 ;;  msgtype         2    6[BANK0 ] PTR unsigned char 
 13245 ;;		 -> RAM(1023), 
 13246 ;;  data            2    8[BANK0 ] PTR void 
 13247 ;;		 -> timer0_int_handler@val(2), 
 13248 ;; Auto vars:     Size  Location     Type
 13249 ;;		None
 13250 ;; Return value:  Size  Location     Type
 13251 ;;                  1    wreg      char 
 13252 ;; Registers used:
 13253 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13254 ;; Tracked objects:
 13255 ;;		On entry : 0/0
 13256 ;;		On exit  : 0/0
 13257 ;;		Unchanged: 0/0
 13258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13259 ;;      Params:         0       5       0       0       0
 13260 ;;      Locals:         0       0       0       0       0
 13261 ;;      Temps:          0       0       0       0       0
 13262 ;;      Totals:         0       5       0       0       0
 13263 ;;Total ram usage:        5 bytes
 13264 ;; Hardware stack levels used:    1
 13265 ;; Hardware stack levels required when called:    2
 13266 ;; This function calls:
 13267 ;;		i2_recv_msg
 13268 ;; This function is called by:
 13269 ;;		_timer0_int_handler
 13270 ;; This function uses a non-reentrant model
 13271 ;;
 13272                           psect	text43,class=CODE,space=0,reloc=2
 13273                           global __ptext43
 13274  001BC2                     __ptext43:
 13275                           psect	text43
 13276                           	file	"../src/messages.c"
 13277                           	line	183
 13278                           	global	__size_of_FromMainHigh_recvmsg
 13279  0000                     	__size_of_FromMainHigh_recvmsg	equ	__end_of_FromMainHigh_recvmsg-_FromMainHigh_recvmsg
 13280                           	
 13281  001BC2                     _FromMainHigh_recvmsg:
 13282                           	opt	stack 16
 13283                           	line	189
 13284                           	
 13285  001BC2                     i2l19081:
 13286                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
 13287  001BC2  0101               	movlb	1	; () banked
 13288  001BC4  0E01               	movlw	high(_FromMainHigh_MQ)
 13289  001BC6  6E3D               	movwf	((c:?i2_recv_msg+1)),c
 13290  001BC8  0101               	movlb	1	; () banked
 13291  001BCA  0E00               	movlw	low(_FromMainHigh_MQ)
 13292  001BCC  6E3C               	movwf	((c:?i2_recv_msg)),c
 13293  001BCE  C0BB  F03E         	movff	(FromMainHigh_recvmsg@maxlength),0+((c:?i2_recv_msg)+02h)
 13294  001BD2  C0BC  F03F         	movff	(FromMainHigh_recvmsg@msgtype),0+((c:?i2_recv_msg)+03h)
 13295  001BD6  C0BD  F040         	movff	(FromMainHigh_recvmsg@msgtype+1),1+((c:?i2_recv_msg)+03h)
 13296  001BDA  C0BE  F041         	movff	(FromMainHigh_recvmsg@data),0+((c:?i2_recv_msg)+05h)
 13297  001BDE  C0BF  F042         	movff	(FromMainHigh_recvmsg@data+1),1+((c:?i2_recv_msg)+05h)
 13298  001BE2  ECAD  F006         	call	i2_recv_msg	;wreg free
 13299  001BE6  D000               	goto	i2l5514
 13300                           	
 13301  001BE8                     i2l19083:
 13302                           	line	190
 13303                           	
 13304  001BE8                     i2l5514:
 13305  001BE8  0012               	return
 13306                           	opt stack 0
 13307                           GLOBAL	__end_of_FromMainHigh_recvmsg
 13308  001BEA                     	__end_of_FromMainHigh_recvmsg:
 13309                           	signat	_FromMainHigh_recvmsg,12409
 13310                           	global	_enter_sleep_mode
 13311                           
 13312 ;; *************** function _enter_sleep_mode *****************
 13313 ;; Defined at:
 13314 ;;		line 202 in file "../src/messages.c"
 13315 ;; Parameters:    Size  Location     Type
 13316 ;;		None
 13317 ;; Auto vars:     Size  Location     Type
 13318 ;;		None
 13319 ;; Return value:  Size  Location     Type
 13320 ;;		None               void
 13321 ;; Registers used:
 13322 ;;		None
 13323 ;; Tracked objects:
 13324 ;;		On entry : 0/0
 13325 ;;		On exit  : 0/0
 13326 ;;		Unchanged: 0/0
 13327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13328 ;;      Params:         0       0       0       0       0
 13329 ;;      Locals:         0       0       0       0       0
 13330 ;;      Temps:          0       0       0       0       0
 13331 ;;      Totals:         0       0       0       0       0
 13332 ;;Total ram usage:        0 bytes
 13333 ;; Hardware stack levels used:    1
 13334 ;; This function calls:
 13335 ;;		Nothing
 13336 ;; This function is called by:
 13337 ;;		_SleepIfOkay
 13338 ;; This function uses a non-reentrant model
 13339 ;;
 13340                           psect	text44,class=CODE,space=0,reloc=2
 13341                           global __ptext44
 13342  001D62                     __ptext44:
 13343                           psect	text44
 13344                           	file	"../src/messages.c"
 13345                           	line	202
 13346                           	global	__size_of_enter_sleep_mode
 13347  0000                     	__size_of_enter_sleep_mode	equ	__end_of_enter_sleep_mode-_enter_sleep_mode
 13348                           	
 13349  001D62                     _enter_sleep_mode:
 13350                           	opt	stack 18
 13351                           	line	204
 13352                           	
 13353  001D62                     i2l18527:
 13354                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
 13355  001D62  8ED3               	bsf	((c:4051)),c,7	;volatile
 13356                           	line	213
 13357                           # 213 "../src/messages.c"
 13358  001D64  0003               SLEEP ;# 
 13359                           	line	215
 13360                           # 215 "../src/messages.c"
 13361                           # 214 ;# 
 13362                           psect	text44
 13363                           	line	218
 13364                           	
 13365  001D66                     i2l5522:
 13366  001D66  0012               	return
 13367                           	opt stack 0
 13368                           GLOBAL	__end_of_enter_sleep_mode
 13369  001D68                     	__end_of_enter_sleep_mode:
 13370                           	signat	_enter_sleep_mode,88
 13371                           	global	_handle_start
 13372                           
 13373 ;; *************** function _handle_start *****************
 13374 ;; Defined at:
 13375 ;;		line 71 in file "../src/my_i2c.c"
 13376 ;; Parameters:    Size  Location     Type
 13377 ;;  data_read       1   49[COMRAM] unsigned char 
 13378 ;; Auto vars:     Size  Location     Type
 13379 ;;		None
 13380 ;; Return value:  Size  Location     Type
 13381 ;;		None               void
 13382 ;; Registers used:
 13383 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13384 ;; Tracked objects:
 13385 ;;		On entry : 0/0
 13386 ;;		On exit  : 0/0
 13387 ;;		Unchanged: 0/0
 13388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13389 ;;      Params:         1       0       0       0       0
 13390 ;;      Locals:         0       0       0       0       0
 13391 ;;      Temps:          0       0       0       0       0
 13392 ;;      Totals:         1       0       0       0       0
 13393 ;;Total ram usage:        1 bytes
 13394 ;; Hardware stack levels used:    1
 13395 ;; This function calls:
 13396 ;;		Nothing
 13397 ;; This function is called by:
 13398 ;;		_i2c_int_handler
 13399 ;; This function uses a non-reentrant model
 13400 ;;
 13401                           psect	text45,class=CODE,space=0,reloc=2
 13402                           global __ptext45
 13403  000F80                     __ptext45:
 13404                           psect	text45
 13405                           	file	"../src/my_i2c.c"
 13406                           	line	71
 13407                           	global	__size_of_handle_start
 13408  0000                     	__size_of_handle_start	equ	__end_of_handle_start-_handle_start
 13409                           	
 13410  000F80                     _handle_start:
 13411                           	opt	stack 18
 13412                           	line	72
 13413                           	
 13414  000F80                     i2l18537:
 13415                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
 13416  000F80  0100               	movlb	0	; () banked
 13417  000F82  EE20 F00B          	lfsr	2,0Bh
 13418  000F86  0100               	movlb	0	; () banked
 13419  000F88  51DE               	movf	((_ic_ptr))&0ffh,w
 13420  000F8A  26D9               	addwf	fsr2l
 13421  000F8C  0100               	movlb	0	; () banked
 13422  000F8E  51DF               	movf	((_ic_ptr+1))&0ffh,w
 13423  000F90  22DA               	addwfc	fsr2h
 13424  000F92  0E01               	movlw	low(01h)
 13425  000F94  6EDF               	movwf	indf2
 13426                           	line	73
 13427                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
 13428  000F96  0100               	movlb	0	; () banked
 13429  000F98  EE20 F00A          	lfsr	2,0Ah
 13430  000F9C  0100               	movlb	0	; () banked
 13431  000F9E  51DE               	movf	((_ic_ptr))&0ffh,w
 13432  000FA0  26D9               	addwf	fsr2l
 13433  000FA2  0100               	movlb	0	; () banked
 13434  000FA4  51DF               	movf	((_ic_ptr+1))&0ffh,w
 13435  000FA6  22DA               	addwfc	fsr2h
 13436  000FA8  0E00               	movlw	low(0)
 13437  000FAA  6EDF               	movwf	indf2
 13438                           	line	75
 13439                           	
 13440  000FAC                     i2l18539:; BSR set to: 0
 13441                           
 13442                           ;my_i2c.c: 75: if (data_read) {
 13443  000FAC  5032               	movf	((c:handle_start@data_read)),c,w
 13444  000FAE  B4D8               	btfsc	status,2
 13445  000FB0  D001               	goto	i2u160_41
 13446  000FB2  D001               	goto	i2u160_40
 13447  000FB4                     i2u160_41:
 13448  000FB4  D043               	goto	i2l18549
 13449  000FB6                     i2u160_40:
 13450                           	line	76
 13451                           	
 13452  000FB6                     i2l18541:; BSR set to: 0
 13453                           
 13454                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
 13455                           	
 13456  000FB6  AAC7               	btfss	((c:4039)),c,5	;volatile
 13457  000FB8  D001               	goto	i2u161_41
 13458  000FBA  D001               	goto	i2u161_40
 13459  000FBC                     i2u161_41:
 13460  000FBC  D021               	goto	i2l7349
 13461  000FBE                     i2u161_40:
 13462                           	line	79
 13463                           	
 13464  000FBE                     i2l18543:; BSR set to: 0
 13465                           
 13466                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
 13467  000FBE  0100               	movlb	0	; () banked
 13468  000FC0  EE20 F00C          	lfsr	2,0Ch
 13469  000FC4  0100               	movlb	0	; () banked
 13470  000FC6  51DE               	movf	((_ic_ptr))&0ffh,w
 13471  000FC8  26D9               	addwf	fsr2l
 13472  000FCA  0100               	movlb	0	; () banked
 13473  000FCC  51DF               	movf	((_ic_ptr+1))&0ffh,w
 13474  000FCE  22DA               	addwfc	fsr2h
 13475  000FD0  0E05               	movlw	low(05h)
 13476  000FD2  6EDF               	movwf	indf2
 13477                           	line	80
 13478                           ;my_i2c.c: 80: ic_ptr->error_count++;
 13479  000FD4  0100               	movlb	0	; () banked
 13480  000FD6  EE20 F00E          	lfsr	2,0Eh
 13481  000FDA  0100               	movlb	0	; () banked
 13482  000FDC  51DE               	movf	((_ic_ptr))&0ffh,w
 13483  000FDE  26D9               	addwf	fsr2l
 13484  000FE0  0100               	movlb	0	; () banked
 13485  000FE2  51DF               	movf	((_ic_ptr+1))&0ffh,w
 13486  000FE4  22DA               	addwfc	fsr2h
 13487  000FE6  2ADF               	incf	indf2
 13488                           
 13489                           	line	81
 13490                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
 13491  000FE8  0100               	movlb	0	; () banked
 13492  000FEA  EE20 F00D          	lfsr	2,0Dh
 13493  000FEE  0100               	movlb	0	; () banked
 13494  000FF0  51DE               	movf	((_ic_ptr))&0ffh,w
 13495  000FF2  26D9               	addwf	fsr2l
 13496  000FF4  0100               	movlb	0	; () banked
 13497  000FF6  51DF               	movf	((_ic_ptr+1))&0ffh,w
 13498  000FF8  22DA               	addwfc	fsr2h
 13499  000FFA  0E05               	movlw	low(05h)
 13500  000FFC  6EDF               	movwf	indf2
 13501                           	line	82
 13502                           ;my_i2c.c: 82: } else {
 13503  000FFE  D02A               	goto	i2l7354
 13504                           	
 13505  001000                     i2l7349:; BSR set to: 0
 13506                           
 13507                           	line	83
 13508                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
 13509                           	
 13510  001000  A4C7               	btfss	((c:4039)),c,2	;volatile
 13511  001002  D001               	goto	i2u162_41
 13512  001004  D001               	goto	i2u162_40
 13513  001006                     i2u162_41:
 13514  001006  D00C               	goto	i2l18547
 13515  001008                     i2u162_40:
 13516                           	line	84
 13517                           	
 13518  001008                     i2l18545:; BSR set to: 0
 13519                           
 13520                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
 13521  001008  0100               	movlb	0	; () banked
 13522  00100A  EE20 F00C          	lfsr	2,0Ch
 13523  00100E  0100               	movlb	0	; () banked
 13524  001010  51DE               	movf	((_ic_ptr))&0ffh,w
 13525  001012  26D9               	addwf	fsr2l
 13526  001014  0100               	movlb	0	; () banked
 13527  001016  51DF               	movf	((_ic_ptr+1))&0ffh,w
 13528  001018  22DA               	addwfc	fsr2h
 13529  00101A  0E08               	movlw	low(08h)
 13530  00101C  6EDF               	movwf	indf2
 13531                           	line	85
 13532                           ;my_i2c.c: 85: } else {
 13533  00101E  D01A               	goto	i2l7354
 13534                           	
 13535  001020                     i2l7351:; BSR set to: 0
 13536                           
 13537                           	line	86
 13538                           	
 13539  001020                     i2l18547:; BSR set to: 0
 13540                           
 13541                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
 13542  001020  0100               	movlb	0	; () banked
 13543  001022  EE20 F00C          	lfsr	2,0Ch
 13544  001026  0100               	movlb	0	; () banked
 13545  001028  51DE               	movf	((_ic_ptr))&0ffh,w
 13546  00102A  26D9               	addwf	fsr2l
 13547  00102C  0100               	movlb	0	; () banked
 13548  00102E  51DF               	movf	((_ic_ptr+1))&0ffh,w
 13549  001030  22DA               	addwfc	fsr2h
 13550  001032  0E07               	movlw	low(07h)
 13551  001034  6EDF               	movwf	indf2
 13552  001036  D00E               	goto	i2l7354
 13553                           	line	87
 13554                           	
 13555  001038                     i2l7352:; BSR set to: 0
 13556                           
 13557  001038  D00D               	goto	i2l7354
 13558                           	line	88
 13559                           	
 13560  00103A                     i2l7350:; BSR set to: 0
 13561                           
 13562                           	line	89
 13563                           ;my_i2c.c: 87: }
 13564                           ;my_i2c.c: 88: }
 13565                           ;my_i2c.c: 89: } else {
 13566  00103A  D00C               	goto	i2l7354
 13567                           	
 13568  00103C                     i2l7348:; BSR set to: 0
 13569                           
 13570                           	line	90
 13571                           	
 13572  00103C                     i2l18549:; BSR set to: 0
 13573                           
 13574                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
 13575  00103C  0100               	movlb	0	; () banked
 13576  00103E  EE20 F00C          	lfsr	2,0Ch
 13577  001042  0100               	movlb	0	; () banked
 13578  001044  51DE               	movf	((_ic_ptr))&0ffh,w
 13579  001046  26D9               	addwf	fsr2l
 13580  001048  0100               	movlb	0	; () banked
 13581  00104A  51DF               	movf	((_ic_ptr+1))&0ffh,w
 13582  00104C  22DA               	addwfc	fsr2h
 13583  00104E  0E06               	movlw	low(06h)
 13584  001050  6EDF               	movwf	indf2
 13585  001052  D000               	goto	i2l7354
 13586                           	line	91
 13587                           	
 13588  001054                     i2l7353:; BSR set to: 0
 13589                           
 13590                           	line	92
 13591                           	
 13592  001054                     i2l7354:; BSR set to: 0
 13593                           
 13594  001054  0012               	return
 13595                           	opt stack 0
 13596                           GLOBAL	__end_of_handle_start
 13597  001056                     	__end_of_handle_start:
 13598                           	signat	_handle_start,4216
 13599                           	global	_WriteTimer0
 13600                           
 13601 ;; *************** function _WriteTimer0 *****************
 13602 ;; Defined at:
 13603 ;;		line 17 in file "plib/Timers/t0write.c"
 13604 ;; Parameters:    Size  Location     Type
 13605 ;;  timer0          2   49[COMRAM] unsigned int 
 13606 ;; Auto vars:     Size  Location     Type
 13607 ;;  timer           2   51[COMRAM] struct Timers
 13608 ;; Return value:  Size  Location     Type
 13609 ;;		None               void
 13610 ;; Registers used:
 13611 ;;		None
 13612 ;; Tracked objects:
 13613 ;;		On entry : 0/0
 13614 ;;		On exit  : 0/0
 13615 ;;		Unchanged: 0/0
 13616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13617 ;;      Params:         2       0       0       0       0
 13618 ;;      Locals:         2       0       0       0       0
 13619 ;;      Temps:          0       0       0       0       0
 13620 ;;      Totals:         4       0       0       0       0
 13621 ;;Total ram usage:        4 bytes
 13622 ;; Hardware stack levels used:    1
 13623 ;; This function calls:
 13624 ;;		Nothing
 13625 ;; This function is called by:
 13626 ;;		_timer0_int_handler
 13627 ;; This function uses a non-reentrant model
 13628 ;;
 13629                           psect	text46,class=CODE,space=0,reloc=2
 13630                           global __ptext46
 13631  001D24                     __ptext46:
 13632                           psect	text46
 13633                           	file	"plib/Timers/t0write.c"
 13634                           	line	17
 13635                           	global	__size_of_WriteTimer0
 13636  0000                     	__size_of_WriteTimer0	equ	__end_of_WriteTimer0-_WriteTimer0
 13637                           	
 13638  001D24                     _WriteTimer0:; BSR set to: 0
 13639                           
 13640                           	opt	stack 18
 13641                           	line	20
 13642                           	
 13643  001D24                     i2l18583:
 13644  001D24  C032  F034         	movff	(c:WriteTimer0@timer0),(c:WriteTimer0@timer)
 13645  001D28  C033  F035         	movff	(c:WriteTimer0@timer0+1),(c:WriteTimer0@timer+1)
 13646                           	line	22
 13647  001D2C  C035  FFD7         	movff	0+((c:WriteTimer0@timer)+01h),(c:4055)	;volatile
 13648                           	line	23
 13649  001D30  C034  FFD6         	movff	(c:WriteTimer0@timer),(c:4054)	;volatile
 13650                           	line	24
 13651                           	
 13652  001D34                     i2l16430:
 13653  001D34  0012               	return
 13654                           	opt stack 0
 13655                           GLOBAL	__end_of_WriteTimer0
 13656  001D36                     	__end_of_WriteTimer0:
 13657                           	signat	_WriteTimer0,4216
 13658                           	global	i2_in_low_int
 13659                           
 13660 ;; *************** function i2_in_low_int *****************
 13661 ;; Defined at:
 13662 ;;		line 30 in file "../src/interrupts.c"
 13663 ;; Parameters:    Size  Location     Type
 13664 ;;		None
 13665 ;; Auto vars:     Size  Location     Type
 13666 ;;		None
 13667 ;; Return value:  Size  Location     Type
 13668 ;;                  2   51[COMRAM] int 
 13669 ;; Registers used:
 13670 ;;		wreg, status,2, status,0, cstack
 13671 ;; Tracked objects:
 13672 ;;		On entry : 0/0
 13673 ;;		On exit  : 0/0
 13674 ;;		Unchanged: 0/0
 13675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13676 ;;      Params:         2       0       0       0       0
 13677 ;;      Locals:         0       0       0       0       0
 13678 ;;      Temps:          0       0       0       0       0
 13679 ;;      Totals:         2       0       0       0       0
 13680 ;;Total ram usage:        2 bytes
 13681 ;; Hardware stack levels used:    1
 13682 ;; Hardware stack levels required when called:    1
 13683 ;; This function calls:
 13684 ;;		i2_in_high_int
 13685 ;; This function is called by:
 13686 ;;		_SleepIfOkay
 13687 ;; This function uses a non-reentrant model
 13688 ;;
 13689                           psect	text47,class=CODE,space=0,reloc=2
 13690                           global __ptext47
 13691  0019E0                     __ptext47:
 13692                           psect	text47
 13693                           	file	"../src/interrupts.c"
 13694                           	line	30
 13695                           	global	__size_ofi2_in_low_int
 13696  0000                     	__size_ofi2_in_low_int	equ	__end_ofi2_in_low_int-i2_in_low_int
 13697                           	
 13698  0019E0                     i2_in_low_int:
 13699                           	opt	stack 17
 13700                           	line	31
 13701                           	
 13702  0019E0                     i2l18589:
 13703                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
 13704                           	
 13705  0019E0  ACF2               	btfss	((c:4082)),c,6	;volatile
 13706  0019E2  D001               	goto	i2u168_41
 13707  0019E4  D001               	goto	i2u168_40
 13708  0019E6                     i2u168_41:
 13709  0019E6  D007               	goto	i2l18597
 13710  0019E8                     i2u168_40:
 13711                           	line	32
 13712                           	
 13713  0019E8                     i2l18591:
 13714                           ;interrupts.c: 32: return (0);
 13715  0019E8  0E00               	movlw	high(0)
 13716  0019EA  6E35               	movwf	((c:?i2_in_low_int+1)),c
 13717  0019EC  0E00               	movlw	low(0)
 13718  0019EE  6E34               	movwf	((c:?i2_in_low_int)),c
 13719  0019F0  D018               	goto	i2l1809
 13720                           	
 13721  0019F2                     i2l18593:
 13722  0019F2  D017               	goto	i2l1809
 13723                           	line	33
 13724                           	
 13725  0019F4                     i2l18595:
 13726                           ;interrupts.c: 33: } else if (in_high_int()) {
 13727  0019F4  D016               	goto	i2l1809
 13728                           	
 13729  0019F6                     i2l1808:
 13730                           	
 13731  0019F6                     i2l18597:
 13732  0019F6  EC9B  F00E         	call	i2_in_high_int	;wreg free
 13733  0019FA  5033               	movf	(1+?i2_in_high_int),c,w
 13734  0019FC  1032               	iorwf (0+?i2_in_high_int),c,w
 13735                           
 13736  0019FE  B4D8               	btfsc	status,2
 13737  001A00  D001               	goto	i2u169_41
 13738  001A02  D001               	goto	i2u169_40
 13739  001A04                     i2u169_41:
 13740  001A04  D007               	goto	i2l18605
 13741  001A06                     i2u169_40:
 13742                           	line	34
 13743                           	
 13744  001A06                     i2l18599:
 13745                           ;interrupts.c: 34: return (0);
 13746  001A06  0E00               	movlw	high(0)
 13747  001A08  6E35               	movwf	((c:?i2_in_low_int+1)),c
 13748  001A0A  0E00               	movlw	low(0)
 13749  001A0C  6E34               	movwf	((c:?i2_in_low_int)),c
 13750  001A0E  D009               	goto	i2l1809
 13751                           	
 13752  001A10                     i2l18601:
 13753  001A10  D008               	goto	i2l1809
 13754                           	line	35
 13755                           	
 13756  001A12                     i2l18603:
 13757                           ;interrupts.c: 35: } else {
 13758  001A12  D007               	goto	i2l1809
 13759                           	
 13760  001A14                     i2l1811:
 13761                           	line	36
 13762                           	
 13763  001A14                     i2l18605:
 13764                           ;interrupts.c: 36: return (1);
 13765  001A14  0E00               	movlw	high(01h)
 13766  001A16  6E35               	movwf	((c:?i2_in_low_int+1)),c
 13767  001A18  0E01               	movlw	low(01h)
 13768  001A1A  6E34               	movwf	((c:?i2_in_low_int)),c
 13769  001A1C  D002               	goto	i2l1809
 13770                           	
 13771  001A1E                     i2l18607:
 13772  001A1E  D001               	goto	i2l1809
 13773                           	line	37
 13774                           	
 13775  001A20                     i2l1812:
 13776  001A20  D000               	goto	i2l1809
 13777                           	
 13778  001A22                     i2l1810:
 13779                           	line	38
 13780                           	
 13781  001A22                     i2l1809:
 13782  001A22  0012               	return
 13783                           	opt stack 0
 13784                           GLOBAL	__end_ofi2_in_low_int
 13785  001A24                     	__end_ofi2_in_low_int:
 13786                           	signat	i2_in_low_int,90
 13787                           	global	i2_in_high_int
 13788                           
 13789 ;; *************** function i2_in_high_int *****************
 13790 ;; Defined at:
 13791 ;;		line 22 in file "../src/interrupts.c"
 13792 ;; Parameters:    Size  Location     Type
 13793 ;;		None
 13794 ;; Auto vars:     Size  Location     Type
 13795 ;;		None
 13796 ;; Return value:  Size  Location     Type
 13797 ;;                  2   49[COMRAM] int 
 13798 ;; Registers used:
 13799 ;;		wreg, status,2
 13800 ;; Tracked objects:
 13801 ;;		On entry : 0/0
 13802 ;;		On exit  : 0/0
 13803 ;;		Unchanged: 0/0
 13804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13805 ;;      Params:         2       0       0       0       0
 13806 ;;      Locals:         0       0       0       0       0
 13807 ;;      Temps:          0       0       0       0       0
 13808 ;;      Totals:         2       0       0       0       0
 13809 ;;Total ram usage:        2 bytes
 13810 ;; Hardware stack levels used:    1
 13811 ;; This function calls:
 13812 ;;		Nothing
 13813 ;; This function is called by:
 13814 ;;		_SleepIfOkay
 13815 ;;		i2_in_low_int
 13816 ;; This function uses a non-reentrant model
 13817 ;;
 13818                           psect	text48,class=CODE,space=0,reloc=2
 13819                           global __ptext48
 13820  001D36                     __ptext48:
 13821                           psect	text48
 13822                           	file	"../src/interrupts.c"
 13823                           	line	22
 13824                           	global	__size_ofi2_in_high_int
 13825  0000                     	__size_ofi2_in_high_int	equ	__end_ofi2_in_high_int-i2_in_high_int
 13826                           	
 13827  001D36                     i2_in_high_int:
 13828                           	opt	stack 18
 13829                           	line	23
 13830                           	
 13831  001D36                     i2l18585:
 13832                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
 13833                           	
 13834  001D36  0E00               	movlw	0
 13835  001D38  AEF2               	btfss	((c:4082)),c,7	;volatile
 13836  001D3A  0E01               	movlw	1
 13837  001D3C  6E32               	movwf	((c:?i2_in_high_int)),c
 13838  001D3E  6A33               	clrf	((c:?i2_in_high_int+1)),c
 13839  001D40  D000               	goto	i2l1802
 13840                           	
 13841  001D42                     i2l18587:
 13842                           	line	24
 13843                           	
 13844  001D42                     i2l1802:
 13845  001D42  0012               	return
 13846                           	opt stack 0
 13847                           GLOBAL	__end_ofi2_in_high_int
 13848  001D44                     	__end_ofi2_in_high_int:
 13849                           	signat	i2_in_high_int,90
 13850                           	global	i2_send_msg
 13851                           
 13852 ;; *************** function i2_send_msg *****************
 13853 ;; Defined at:
 13854 ;;		line 24 in file "../src/messages.c"
 13855 ;; Parameters:    Size  Location     Type
 13856 ;;  send_msg        2   59[COMRAM] PTR struct __msg_queue
 13857 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 13858 ;;  send_msg        1   61[COMRAM] unsigned char 
 13859 ;;  send_msg        1   62[COMRAM] unsigned char 
 13860 ;;  send_msg        2   63[COMRAM] PTR void 
 13861 ;;		 -> adc_int_handler@value(2), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 13862 ;;		 -> i2c_int_handler@error_buf(3), main@ic(28), main@uc(5), 
 13863 ;; Auto vars:     Size  Location     Type
 13864 ;;  send_msg        2   69[COMRAM] PTR struct __msg
 13865 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 13866 ;;  send_msg        2   66[COMRAM] unsigned int 
 13867 ;;  send_msg        1   68[COMRAM] unsigned char 
 13868 ;; Return value:  Size  Location     Type
 13869 ;;                  1    wreg      char 
 13870 ;; Registers used:
 13871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13872 ;; Tracked objects:
 13873 ;;		On entry : 0/0
 13874 ;;		On exit  : 0/0
 13875 ;;		Unchanged: 0/0
 13876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13877 ;;      Params:         6       0       0       0       0
 13878 ;;      Locals:         5       0       0       0       0
 13879 ;;      Temps:          1       0       0       0       0
 13880 ;;      Totals:        12       0       0       0       0
 13881 ;;Total ram usage:       12 bytes
 13882 ;; Hardware stack levels used:    1
 13883 ;; Hardware stack levels required when called:    1
 13884 ;; This function calls:
 13885 ;;		i2_memcpy
 13886 ;; This function is called by:
 13887 ;;		_ToMainHigh_sendmsg
 13888 ;; This function uses a non-reentrant model
 13889 ;;
 13890                           psect	text49,class=CODE,space=0,reloc=2
 13891                           global __ptext49
 13892  001406                     __ptext49:
 13893                           psect	text49
 13894                           	file	"../src/messages.c"
 13895                           	global	__size_ofi2_send_msg
 13896  0000                     	__size_ofi2_send_msg	equ	__end_ofi2_send_msg-i2_send_msg
 13897                           	
 13898  001406                     i2_send_msg:
 13899                           	opt	stack 16
 13900                           	line	28
 13901                           	
 13902  001406                     i2l19085:
 13903                           ;messages.c: 25: unsigned char slot;
 13904                           ;messages.c: 27: msg *qmsg;
 13905                           ;messages.c: 28: size_t tlength = length;
 13906  001406  C03E  F043         	movff	(c:i2send_msg@length),(c:i2send_msg@tlength)
 13907  00140A  6A44               	clrf	((c:i2send_msg@tlength+1)),c
 13908                           	line	38
 13909                           	
 13910  00140C                     i2l19087:
 13911                           ;messages.c: 38: slot = qptr->cur_write_ind;
 13912  00140C  EE20 F034          	lfsr	2,034h
 13913  001410  503C               	movf	((c:i2send_msg@qptr)),c,w
 13914  001412  26D9               	addwf	fsr2l
 13915  001414  503D               	movf	((c:i2send_msg@qptr+1)),c,w
 13916  001416  22DA               	addwfc	fsr2h
 13917  001418  50DF               	movf	indf2,w
 13918  00141A  6E45               	movwf	((c:i2send_msg@slot)),c
 13919                           	line	39
 13920                           	
 13921  00141C                     i2l19089:
 13922                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
 13923  00141C  5045               	movf	((c:i2send_msg@slot)),c,w
 13924  00141E  0D0D               	mullw	0Dh
 13925  001420  50F3               	movf	(prodl),c,w
 13926  001422  243C               	addwf	((c:i2send_msg@qptr)),c,w
 13927                           	
 13928  001424  6E46               	movwf	((c:i2send_msg@qmsg)),c
 13929  001426  50F4               	movf	(prodh),c,w
 13930  001428  203D               	addwfc	((c:i2send_msg@qptr+1)),c,w
 13931  00142A  6E47               	movwf	1+((c:i2send_msg@qmsg)),c
 13932                           	line	41
 13933                           	
 13934  00142C                     i2l19091:
 13935                           ;messages.c: 41: if (qmsg->full != 0) {
 13936  00142C  C046  FFD9         	movff	(c:i2send_msg@qmsg),fsr2l
 13937  001430  C047  FFDA         	movff	(c:i2send_msg@qmsg+1),fsr2h
 13938  001434  50DF               	movf	indf2,w
 13939  001436  B4D8               	btfsc	status,2
 13940  001438  D001               	goto	i2u217_41
 13941  00143A  D001               	goto	i2u217_40
 13942  00143C                     i2u217_41:
 13943  00143C  D003               	goto	i2l19097
 13944  00143E                     i2u217_40:
 13945                           	line	42
 13946                           	
 13947  00143E                     i2l19093:
 13948                           ;messages.c: 42: return (-1);
 13949  00143E  0EFF               	movlw	(-1)&0ffh
 13950  001440  D03A               	goto	i2l5476
 13951                           	
 13952  001442                     i2l19095:
 13953  001442  D039               	goto	i2l5476
 13954                           	line	43
 13955                           	
 13956  001444                     i2l5475:
 13957                           	line	46
 13958                           	
 13959  001444                     i2l19097:
 13960                           ;messages.c: 43: }
 13961                           ;messages.c: 46: qmsg->length = length;
 13962  001444  EE20 F001          	lfsr	2,01h
 13963  001448  5046               	movf	((c:i2send_msg@qmsg)),c,w
 13964  00144A  26D9               	addwf	fsr2l
 13965  00144C  5047               	movf	((c:i2send_msg@qmsg+1)),c,w
 13966  00144E  22DA               	addwfc	fsr2h
 13967  001450  C03E  FFDF         	movff	(c:i2send_msg@length),indf2
 13968                           
 13969                           	line	47
 13970                           ;messages.c: 47: qmsg->msgtype = msgtype;
 13971  001454  EE20 F002          	lfsr	2,02h
 13972  001458  5046               	movf	((c:i2send_msg@qmsg)),c,w
 13973  00145A  26D9               	addwf	fsr2l
 13974  00145C  5047               	movf	((c:i2send_msg@qmsg+1)),c,w
 13975  00145E  22DA               	addwfc	fsr2h
 13976  001460  C03F  FFDF         	movff	(c:i2send_msg@msgtype),indf2
 13977                           
 13978                           	line	55
 13979                           	
 13980  001464                     i2l19099:
 13981                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
 13982  001464  0E03               	movlw	low(03h)
 13983  001466  2446               	addwf	((c:i2send_msg@qmsg)),c,w
 13984                           	
 13985  001468  6E32               	movwf	((c:?i2_memcpy)),c
 13986  00146A  0E00               	movlw	high(03h)
 13987  00146C  2047               	addwfc	((c:i2send_msg@qmsg+1)),c,w
 13988  00146E  6E33               	movwf	1+((c:?i2_memcpy)),c
 13989  001470  C040  F034         	movff	(c:i2send_msg@data),0+((c:?i2_memcpy)+02h)
 13990  001474  C041  F035         	movff	(c:i2send_msg@data+1),1+((c:?i2_memcpy)+02h)
 13991  001478  C043  F036         	movff	(c:i2send_msg@tlength),0+((c:?i2_memcpy)+04h)
 13992  00147C  C044  F037         	movff	(c:i2send_msg@tlength+1),1+((c:?i2_memcpy)+04h)
 13993  001480  ECCC  F00C         	call	i2_memcpy	;wreg free
 13994                           	line	56
 13995                           	
 13996  001484                     i2l19101:
 13997                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
 13998  001484  EE20 F034          	lfsr	2,034h
 13999  001488  503C               	movf	((c:i2send_msg@qptr)),c,w
 14000  00148A  26D9               	addwf	fsr2l
 14001  00148C  503D               	movf	((c:i2send_msg@qptr+1)),c,w
 14002  00148E  22DA               	addwfc	fsr2h
 14003  001490  EE10 F034          	lfsr	1,034h
 14004  001494  503C               	movf	((c:i2send_msg@qptr)),c,w
 14005  001496  26E1               	addwf	fsr1l
 14006  001498  503D               	movf	((c:i2send_msg@qptr+1)),c,w
 14007  00149A  22E2               	addwfc	fsr1h
 14008  00149C  50E7               	movf	indf1,w
 14009  00149E  6E42               	movwf	(??i2_send_msg+0+0)&0ffh,c
 14010  0014A0  2842               	incf	((??i2_send_msg+0+0)),c,w
 14011  0014A2  0B03               	andlw	low(03h)
 14012  0014A4  6EDF               	movwf	indf2
 14013                           
 14014                           	line	59
 14015                           	
 14016  0014A6                     i2l19103:
 14017                           ;messages.c: 59: qmsg->full = 1;
 14018  0014A6  C046  FFD9         	movff	(c:i2send_msg@qmsg),fsr2l
 14019  0014AA  C047  FFDA         	movff	(c:i2send_msg@qmsg+1),fsr2h
 14020  0014AE  0E01               	movlw	low(01h)
 14021  0014B0  6EDF               	movwf	indf2
 14022                           	line	60
 14023                           	
 14024  0014B2                     i2l19105:
 14025                           ;messages.c: 60: return (1);
 14026  0014B2  0E01               	movlw	(01h)&0ffh
 14027  0014B4  D000               	goto	i2l5476
 14028                           	
 14029  0014B6                     i2l19107:
 14030                           	line	61
 14031                           	
 14032  0014B6                     i2l5476:
 14033  0014B6  0012               	return
 14034                           	opt stack 0
 14035                           GLOBAL	__end_ofi2_send_msg
 14036  0014B8                     	__end_ofi2_send_msg:
 14037                           	signat	i2_send_msg,89
 14038                           	global	i2_recv_msg
 14039                           
 14040 ;; *************** function i2_recv_msg *****************
 14041 ;; Defined at:
 14042 ;;		line 63 in file "../src/messages.c"
 14043 ;; Parameters:    Size  Location     Type
 14044 ;;  recv_msg        2   59[COMRAM] PTR struct __msg_queue
 14045 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 14046 ;;  recv_msg        1   61[COMRAM] unsigned char 
 14047 ;;  recv_msg        2   62[COMRAM] PTR unsigned char 
 14048 ;;		 -> RAM(1023), main@msgtype(1), 
 14049 ;;  recv_msg        2   64[COMRAM] PTR void 
 14050 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
 14051 ;; Auto vars:     Size  Location     Type
 14052 ;;  recv_msg        2    3[BANK0 ] PTR struct __msg
 14053 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 14054 ;;  recv_msg        2    1[BANK0 ] unsigned int 
 14055 ;;  recv_msg        1    0[BANK0 ] unsigned char 
 14056 ;; Return value:  Size  Location     Type
 14057 ;;                  1    wreg      char 
 14058 ;; Registers used:
 14059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14060 ;; Tracked objects:
 14061 ;;		On entry : 0/0
 14062 ;;		On exit  : 0/0
 14063 ;;		Unchanged: 0/0
 14064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14065 ;;      Params:         7       0       0       0       0
 14066 ;;      Locals:         0       5       0       0       0
 14067 ;;      Temps:          2       0       0       0       0
 14068 ;;      Totals:         9       5       0       0       0
 14069 ;;Total ram usage:       14 bytes
 14070 ;; Hardware stack levels used:    1
 14071 ;; Hardware stack levels required when called:    1
 14072 ;; This function calls:
 14073 ;;		i2_memcpy
 14074 ;; This function is called by:
 14075 ;;		_FromMainHigh_recvmsg
 14076 ;; This function uses a non-reentrant model
 14077 ;;
 14078                           psect	text50,class=CODE,space=0,reloc=2
 14079                           global __ptext50
 14080  000D5A                     __ptext50:
 14081                           psect	text50
 14082                           	file	"../src/messages.c"
 14083                           	line	63
 14084                           	global	__size_ofi2_recv_msg
 14085  0000                     	__size_ofi2_recv_msg	equ	__end_ofi2_recv_msg-i2_recv_msg
 14086                           	
 14087  000D5A                     i2_recv_msg:
 14088                           	opt	stack 16
 14089                           	line	72
 14090                           	
 14091  000D5A                     i2l19109:
 14092                           ;messages.c: 64: unsigned char slot;
 14093                           ;messages.c: 68: msg *qmsg;
 14094                           ;messages.c: 69: size_t tlength;
 14095                           ;messages.c: 72: slot = qptr->cur_read_ind;
 14096  000D5A  EE20 F035          	lfsr	2,035h
 14097  000D5E  503C               	movf	((c:i2recv_msg@qptr)),c,w
 14098  000D60  26D9               	addwf	fsr2l
 14099  000D62  503D               	movf	((c:i2recv_msg@qptr+1)),c,w
 14100  000D64  22DA               	addwfc	fsr2h
 14101  000D66  50DF               	movf	indf2,w
 14102  000D68  0100               	movlb	0	; () banked
 14103  000D6A  0100               	movlb	0	; () banked
 14104  000D6C  6FB6               	movwf	((i2recv_msg@slot))&0ffh
 14105                           	line	73
 14106                           	
 14107  000D6E                     i2l19111:; BSR set to: 0
 14108                           
 14109                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
 14110  000D6E  0100               	movlb	0	; () banked
 14111  000D70  0100               	movlb	0	; () banked
 14112  000D72  51B6               	movf	((i2recv_msg@slot))&0ffh,w
 14113  000D74  0D0D               	mullw	0Dh
 14114  000D76  50F3               	movf	(prodl),c,w
 14115  000D78  243C               	addwf	((c:i2recv_msg@qptr)),c,w
 14116  000D7A  0100               	movlb	0	; () banked
 14117                           	
 14118  000D7C  0100               	movlb	0	; () banked
 14119  000D7E  6FB9               	movwf	((i2recv_msg@qmsg))&0ffh
 14120  000D80  50F4               	movf	(prodh),c,w
 14121  000D82  203D               	addwfc	((c:i2recv_msg@qptr+1)),c,w
 14122  000D84  0100               	movlb	0	; () banked
 14123  000D86  6FBA               	movwf	1+((i2recv_msg@qmsg))&0ffh
 14124                           	line	74
 14125                           	
 14126  000D88                     i2l19113:; BSR set to: 0
 14127                           
 14128                           ;messages.c: 74: if (qmsg->full == 1) {
 14129  000D88  0E01               	movlw	(01h)&0ffh
 14130  000D8A  C0B9  FFD9         	movff	(i2recv_msg@qmsg),fsr2l
 14131  000D8E  C0BA  FFDA         	movff	(i2recv_msg@qmsg+1),fsr2h
 14132  000D92  62DF               	cpfseq	indf2
 14133  000D94  D001               	goto	i2u218_41
 14134  000D96  D001               	goto	i2u218_40
 14135  000D98                     i2u218_41:
 14136  000D98  D066               	goto	i2l19137
 14137  000D9A                     i2u218_40:
 14138                           	line	76
 14139                           	
 14140  000D9A                     i2l19115:; BSR set to: 0
 14141                           
 14142                           ;messages.c: 76: if (qmsg->length > maxlength) {
 14143  000D9A  0100               	movlb	0	; () banked
 14144  000D9C  EE20 F001          	lfsr	2,01h
 14145  000DA0  0100               	movlb	0	; () banked
 14146  000DA2  51B9               	movf	((i2recv_msg@qmsg))&0ffh,w
 14147  000DA4  26D9               	addwf	fsr2l
 14148  000DA6  0100               	movlb	0	; () banked
 14149  000DA8  51BA               	movf	((i2recv_msg@qmsg+1))&0ffh,w
 14150  000DAA  22DA               	addwfc	fsr2h
 14151  000DAC  50DF               	movf	indf2,w
 14152  000DAE  603E               	cpfslt	((c:i2recv_msg@maxlength)),c
 14153  000DB0  D001               	goto	i2u219_41
 14154  000DB2  D001               	goto	i2u219_40
 14155  000DB4                     i2u219_41:
 14156  000DB4  D003               	goto	i2l19121
 14157  000DB6                     i2u219_40:
 14158                           	line	77
 14159                           	
 14160  000DB6                     i2l19117:; BSR set to: 0
 14161                           
 14162                           ;messages.c: 77: return (-3);
 14163  000DB6  0EFD               	movlw	(-3)&0ffh
 14164  000DB8  D059               	goto	i2l5481
 14165                           	
 14166  000DBA                     i2l19119:; BSR set to: 0
 14167                           
 14168  000DBA  D058               	goto	i2l5481
 14169                           	line	78
 14170                           	
 14171  000DBC                     i2l5480:; BSR set to: 0
 14172                           
 14173                           	line	80
 14174                           	
 14175  000DBC                     i2l19121:; BSR set to: 0
 14176                           
 14177                           ;messages.c: 78: }
 14178                           ;messages.c: 80: tlength = qmsg->length;
 14179  000DBC  0100               	movlb	0	; () banked
 14180  000DBE  EE20 F001          	lfsr	2,01h
 14181  000DC2  0100               	movlb	0	; () banked
 14182  000DC4  51B9               	movf	((i2recv_msg@qmsg))&0ffh,w
 14183  000DC6  26D9               	addwf	fsr2l
 14184  000DC8  0100               	movlb	0	; () banked
 14185  000DCA  51BA               	movf	((i2recv_msg@qmsg+1))&0ffh,w
 14186  000DCC  22DA               	addwfc	fsr2h
 14187  000DCE  50DF               	movf	indf2,w
 14188  000DD0  6E43               	movwf	(??i2_recv_msg+0+0)&0ffh,c
 14189  000DD2  5043               	movf	((??i2_recv_msg+0+0)),c,w
 14190  000DD4  0100               	movlb	0	; () banked
 14191  000DD6  0100               	movlb	0	; () banked
 14192  000DD8  6FB7               	movwf	((i2recv_msg@tlength))&0ffh
 14193  000DDA  0100               	movlb	0	; () banked
 14194  000DDC  6BB8               	clrf	((i2recv_msg@tlength+1))&0ffh
 14195                           	line	81
 14196                           	
 14197  000DDE                     i2l19123:; BSR set to: 0
 14198                           
 14199                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
 14200  000DDE  C041  F032         	movff	(c:i2recv_msg@data),(c:?i2_memcpy)
 14201  000DE2  C042  F033         	movff	(c:i2recv_msg@data+1),(c:?i2_memcpy+1)
 14202  000DE6  0E03               	movlw	03h
 14203  000DE8  0100               	movlb	0	; () banked
 14204  000DEA  0100               	movlb	0	; () banked
 14205  000DEC  25B9               	addwf	((i2recv_msg@qmsg))&0ffh,w
 14206  000DEE  6E43               	movwf	(??i2_recv_msg+0+0)&0ffh,c
 14207  000DF0  0E00               	movlw	0
 14208  000DF2  0100               	movlb	0	; () banked
 14209  000DF4  0100               	movlb	0	; () banked
 14210  000DF6  21BA               	addwfc	((i2recv_msg@qmsg+1))&0ffh,w
 14211  000DF8  6E44               	movwf	(??i2_recv_msg+0+0+1)&0ffh,c
 14212  000DFA  C043  F034         	movff	??i2_recv_msg+0+0,0+((c:?i2_memcpy)+02h)
 14213  000DFE  C044  F035         	movff	??i2_recv_msg+0+1,1+((c:?i2_memcpy)+02h)
 14214  000E02  C0B7  F036         	movff	(i2recv_msg@tlength),0+((c:?i2_memcpy)+04h)
 14215  000E06  C0B8  F037         	movff	(i2recv_msg@tlength+1),1+((c:?i2_memcpy)+04h)
 14216  000E0A  ECCC  F00C         	call	i2_memcpy	;wreg free
 14217                           	line	87
 14218                           	
 14219  000E0E                     i2l19125:
 14220                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
 14221  000E0E  EE20 F035          	lfsr	2,035h
 14222  000E12  503C               	movf	((c:i2recv_msg@qptr)),c,w
 14223  000E14  26D9               	addwf	fsr2l
 14224  000E16  503D               	movf	((c:i2recv_msg@qptr+1)),c,w
 14225  000E18  22DA               	addwfc	fsr2h
 14226  000E1A  EE10 F035          	lfsr	1,035h
 14227  000E1E  503C               	movf	((c:i2recv_msg@qptr)),c,w
 14228  000E20  26E1               	addwf	fsr1l
 14229  000E22  503D               	movf	((c:i2recv_msg@qptr+1)),c,w
 14230  000E24  22E2               	addwfc	fsr1h
 14231  000E26  50E7               	movf	indf1,w
 14232  000E28  6E43               	movwf	(??i2_recv_msg+0+0)&0ffh,c
 14233  000E2A  2843               	incf	((??i2_recv_msg+0+0)),c,w
 14234  000E2C  0B03               	andlw	low(03h)
 14235  000E2E  6EDF               	movwf	indf2
 14236                           
 14237                           	line	89
 14238                           	
 14239  000E30                     i2l19127:
 14240                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
 14241  000E30  0100               	movlb	0	; () banked
 14242  000E32  EE20 F002          	lfsr	2,02h
 14243  000E36  0100               	movlb	0	; () banked
 14244  000E38  51B9               	movf	((i2recv_msg@qmsg))&0ffh,w
 14245  000E3A  26D9               	addwf	fsr2l
 14246  000E3C  0100               	movlb	0	; () banked
 14247  000E3E  51BA               	movf	((i2recv_msg@qmsg+1))&0ffh,w
 14248  000E40  22DA               	addwfc	fsr2h
 14249  000E42  C03F  FFE1         	movff	(c:i2recv_msg@msgtype),fsr1l
 14250  000E46  C040  FFE2         	movff	(c:i2recv_msg@msgtype+1),fsr1h
 14251  000E4A  CFDF FFE7          	movff	indf2,indf1
 14252                           	line	91
 14253                           	
 14254  000E4E                     i2l19129:; BSR set to: 0
 14255                           
 14256                           ;messages.c: 91: qmsg->full = 0;
 14257  000E4E  C0B9  FFD9         	movff	(i2recv_msg@qmsg),fsr2l
 14258  000E52  C0BA  FFDA         	movff	(i2recv_msg@qmsg+1),fsr2h
 14259  000E56  0E00               	movlw	low(0)
 14260  000E58  6EDF               	movwf	indf2
 14261                           	line	92
 14262                           	
 14263  000E5A                     i2l19131:; BSR set to: 0
 14264                           
 14265                           ;messages.c: 92: return (tlength);
 14266  000E5A  0100               	movlb	0	; () banked
 14267  000E5C  0100               	movlb	0	; () banked
 14268  000E5E  51B7               	movf	((i2recv_msg@tlength))&0ffh,w
 14269  000E60  D005               	goto	i2l5481
 14270                           	
 14271  000E62                     i2l19133:; BSR set to: 0
 14272                           
 14273  000E62  D004               	goto	i2l5481
 14274                           	line	93
 14275                           	
 14276  000E64                     i2l19135:; BSR set to: 0
 14277                           
 14278                           ;messages.c: 93: } else {
 14279  000E64  D003               	goto	i2l5481
 14280                           	
 14281  000E66                     i2l5479:; BSR set to: 0
 14282                           
 14283                           	line	94
 14284                           	
 14285  000E66                     i2l19137:; BSR set to: 0
 14286                           
 14287                           ;messages.c: 94: return (-4);
 14288  000E66  0EFC               	movlw	(-4)&0ffh
 14289  000E68  D001               	goto	i2l5481
 14290                           	
 14291  000E6A                     i2l19139:; BSR set to: 0
 14292                           
 14293  000E6A  D000               	goto	i2l5481
 14294                           	line	95
 14295                           	
 14296  000E6C                     i2l5482:; BSR set to: 0
 14297                           
 14298                           	line	96
 14299                           	
 14300  000E6C                     i2l5481:; BSR set to: 0
 14301                           
 14302  000E6C  0012               	return
 14303                           	opt stack 0
 14304                           GLOBAL	__end_ofi2_recv_msg
 14305  000E6E                     	__end_ofi2_recv_msg:
 14306                           	signat	i2_recv_msg,89
 14307                           	global	i2_check_msg
 14308                           
 14309 ;; *************** function i2_check_msg *****************
 14310 ;; Defined at:
 14311 ;;		line 222 in file "../src/messages.c"
 14312 ;; Parameters:    Size  Location     Type
 14313 ;;  check_msg       2   49[COMRAM] PTR struct __msg_queue
 14314 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 14315 ;; Auto vars:     Size  Location     Type
 14316 ;;		None
 14317 ;; Return value:  Size  Location     Type
 14318 ;;                  1    wreg      unsigned char 
 14319 ;; Registers used:
 14320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14321 ;; Tracked objects:
 14322 ;;		On entry : 0/0
 14323 ;;		On exit  : 0/0
 14324 ;;		Unchanged: 0/0
 14325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14326 ;;      Params:         2       0       0       0       0
 14327 ;;      Locals:         0       0       0       0       0
 14328 ;;      Temps:          1       0       0       0       0
 14329 ;;      Totals:         3       0       0       0       0
 14330 ;;Total ram usage:        3 bytes
 14331 ;; Hardware stack levels used:    1
 14332 ;; This function calls:
 14333 ;;		Nothing
 14334 ;; This function is called by:
 14335 ;;		_SleepIfOkay
 14336 ;; This function uses a non-reentrant model
 14337 ;;
 14338                           psect	text51,class=CODE,space=0,reloc=2
 14339                           global __ptext51
 14340  001C10                     __ptext51:
 14341                           psect	text51
 14342                           	file	"../src/messages.c"
 14343                           	line	222
 14344                           	global	__size_ofi2_check_msg
 14345  0000                     	__size_ofi2_check_msg	equ	__end_ofi2_check_msg-i2_check_msg
 14346                           	
 14347  001C10                     i2_check_msg:; BSR set to: 0
 14348                           
 14349                           	opt	stack 18
 14350                           	line	223
 14351                           	
 14352  001C10                     i2l18665:
 14353                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
 14354  001C10  EE20 F035          	lfsr	2,035h
 14355  001C14  5032               	movf	((c:i2check_msg@qptr)),c,w
 14356  001C16  26D9               	addwf	fsr2l
 14357  001C18  5033               	movf	((c:i2check_msg@qptr+1)),c,w
 14358  001C1A  22DA               	addwfc	fsr2h
 14359  001C1C  50DF               	movf	indf2,w
 14360  001C1E  6E34               	movwf	(??i2_check_msg+0+0)&0ffh,c
 14361  001C20  5034               	movf	((??i2_check_msg+0+0)),c,w
 14362  001C22  0D0D               	mullw	0Dh
 14363  001C24  50F3               	movf	(prodl),c,w
 14364  001C26  2432               	addwf	((c:i2check_msg@qptr)),c,w
 14365  001C28  6ED9               	movwf	c:fsr2l
 14366  001C2A  50F4               	movf	(prodh),c,w
 14367  001C2C  2033               	addwfc	((c:i2check_msg@qptr+1)),c,w
 14368  001C2E  6EDA               	movwf	1+c:fsr2l
 14369  001C30  50DF               	movf	indf2,w
 14370  001C32  D000               	goto	i2l5525
 14371                           	
 14372  001C34                     i2l18667:
 14373                           	line	224
 14374                           	
 14375  001C34                     i2l5525:
 14376  001C34  0012               	return
 14377                           	opt stack 0
 14378                           GLOBAL	__end_ofi2_check_msg
 14379  001C36                     	__end_ofi2_check_msg:
 14380                           	signat	i2_check_msg,89
 14381                           	global	i2_memcpy
 14382                           
 14383 ;; *************** function i2_memcpy *****************
 14384 ;; Defined at:
 14385 ;;		line 13 in file "/opt/microchip/xc8/v1.10/sources/memcpy.c"
 14386 ;; Parameters:    Size  Location     Type
 14387 ;;  memcpy          2   49[COMRAM] PTR void 
 14388 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 14389 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
 14390 ;;  memcpy          2   51[COMRAM] PTR const void 
 14391 ;;		 -> adc_int_handler@value(2), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 14392 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 14393 ;;		 -> ToMainLow_MQ(54), main@ic(28), main@uc(5), 
 14394 ;;  memcpy          2   53[COMRAM] unsigned int 
 14395 ;; Auto vars:     Size  Location     Type
 14396 ;;  memcpy          2   57[COMRAM] PTR const unsigned char 
 14397 ;;		 -> adc_int_handler@value(2), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 14398 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 14399 ;;		 -> ToMainLow_MQ(54), main@ic(28), main@uc(5), 
 14400 ;;  memcpy          2   55[COMRAM] PTR unsigned char 
 14401 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 14402 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
 14403 ;; Return value:  Size  Location     Type
 14404 ;;                  2   49[COMRAM] PTR void 
 14405 ;; Registers used:
 14406 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 14407 ;; Tracked objects:
 14408 ;;		On entry : 0/0
 14409 ;;		On exit  : 0/0
 14410 ;;		Unchanged: 0/0
 14411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14412 ;;      Params:         6       0       0       0       0
 14413 ;;      Locals:         4       0       0       0       0
 14414 ;;      Temps:          0       0       0       0       0
 14415 ;;      Totals:        10       0       0       0       0
 14416 ;;Total ram usage:       10 bytes
 14417 ;; Hardware stack levels used:    1
 14418 ;; This function calls:
 14419 ;;		Nothing
 14420 ;; This function is called by:
 14421 ;;		i2_send_msg
 14422 ;;		i2_recv_msg
 14423 ;; This function uses a non-reentrant model
 14424 ;;
 14425                           psect	text52,class=CODE,space=0,reloc=2
 14426                           global __ptext52
 14427  001998                     __ptext52:
 14428                           psect	text52
 14429                           	file	"/opt/microchip/xc8/v1.10/sources/memcpy.c"
 14430                           	line	13
 14431                           	global	__size_ofi2_memcpy
 14432  0000                     	__size_ofi2_memcpy	equ	__end_ofi2_memcpy-i2_memcpy
 14433                           	
 14434  001998                     i2_memcpy:
 14435                           	opt	stack 16
 14436                           	line	24
 14437                           	
 14438  001998                     i2l19141:
 14439  001998  C034  F03A         	movff	(c:i2memcpy@s1),(c:i2memcpy@s)
 14440  00199C  C035  F03B         	movff	(c:i2memcpy@s1+1),(c:i2memcpy@s+1)
 14441                           	line	25
 14442  0019A0  C032  F038         	movff	(c:i2memcpy@d1),(c:i2memcpy@d)
 14443  0019A4  C033  F039         	movff	(c:i2memcpy@d1+1),(c:i2memcpy@d+1)
 14444                           	line	26
 14445  0019A8  D00F               	goto	i2l19149
 14446                           	
 14447  0019AA                     i2l17005:
 14448                           	line	27
 14449                           	
 14450  0019AA                     i2l19143:
 14451  0019AA  C03A  FFD9         	movff	(c:i2memcpy@s),fsr2l
 14452  0019AE  C03B  FFDA         	movff	(c:i2memcpy@s+1),fsr2h
 14453  0019B2  C038  FFE1         	movff	(c:i2memcpy@d),fsr1l
 14454  0019B6  C039  FFE2         	movff	(c:i2memcpy@d+1),fsr1h
 14455  0019BA  CFDF FFE7          	movff	indf2,indf1
 14456                           	
 14457  0019BE                     i2l19145:
 14458  0019BE  4A3A               	infsnz	((c:i2memcpy@s)),c
 14459  0019C0  2A3B               	incf	((c:i2memcpy@s+1)),c
 14460                           	
 14461  0019C2                     i2l19147:
 14462  0019C2  4A38               	infsnz	((c:i2memcpy@d)),c
 14463  0019C4  2A39               	incf	((c:i2memcpy@d+1)),c
 14464  0019C6  D000               	goto	i2l19149
 14465                           	
 14466  0019C8                     i2l17004:
 14467                           	line	26
 14468                           	
 14469  0019C8                     i2l19149:
 14470  0019C8  0636               	decf	((c:i2memcpy@n)),c
 14471  0019CA  A0D8               	btfss	status,0
 14472  0019CC  0637               	decf	((c:i2memcpy@n+1)),c
 14473  0019CE  2836               	incf	((c:i2memcpy@n))&0ffh,w
 14474  0019D0  B4D8               	btfsc	status,2
 14475  0019D2  2837               	incf ((c:i2memcpy@n+1))&0ffh,w
 14476                           
 14477  0019D4  A4D8               	btfss	status,2
 14478  0019D6  D001               	goto	i2u220_41
 14479  0019D8  D001               	goto	i2u220_40
 14480  0019DA                     i2u220_41:
 14481  0019DA  D7E7               	goto	i2l19143
 14482  0019DC                     i2u220_40:
 14483  0019DC  D000               	goto	i2l17007
 14484                           	
 14485  0019DE                     i2l17006:
 14486                           	line	32
 14487                           ;	Return value of i2_memcpy is never used
 14488                           	
 14489  0019DE                     i2l17007:
 14490  0019DE  0012               	return
 14491                           	opt stack 0
 14492                           GLOBAL	__end_ofi2_memcpy
 14493  0019E0                     	__end_ofi2_memcpy:
 14494                           	signat	i2_memcpy,90
 14495                           	GLOBAL	__activetblptr
 14496  0000                     __activetblptr	EQU	0
 14497                           	psect	intsave_regs,class=BIGRAM,space=1
 14498                           psect	text53,class=CODE,space=0,reloc=2
 14499                           global __ptext53
 14500  000000                     __ptext53:
 14501                           	PSECT	rparam,class=COMRAM,space=1
 14502                           	GLOBAL	__Lrparam
 14503                           	FNCONF	rparam,??,?
 14504                           GLOBAL	__Lparam, __Hparam
 14505                           GLOBAL	__Lrparam, __Hrparam
 14506  0000                     __Lparam	EQU	__Lrparam
 14507  0000                     __Hparam	EQU	__Hrparam


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         221
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     71      78
    BANK0           128     40      96
    BANK1           256     75     237
    BANK2           256      0       0
    BANK3           244      0       0

Pointer List with Targets:

    ?_ReadTimer1	unsigned int  size(2) Largest target is 2
		 -> WriteTimer1@timer(COMRAM[2]), ReadTimer1@timer(COMRAM[2]), 

    ?_ReadADC	int  size(2) Largest target is 0

    ?_memcpy	PTR void  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    ?_in_high_int	int  size(2) Largest target is 0

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> adc_int_handler@value(COMRAM[2]), timer1_int_handler@result(COMRAM[2]), timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@ic(BANK1[28]), main@uc(BANK1[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> adc_int_handler@value(COMRAM[2]), timer1_int_handler@result(COMRAM[2]), timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@ic(BANK1[28]), main@uc(BANK1[5]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK1[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1023
		 -> RAM(DATA[1023]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[28]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> adc_int_handler@value(COMRAM[2]), timer1_int_handler@result(COMRAM[2]), NULL(NULL[0]), main@uc(BANK1[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1023
		 -> RAM(DATA[1023]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> adc_int_handler@value(COMRAM[2]), timer1_int_handler@result(COMRAM[2]), timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[28]), main@uc(BANK1[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _SleepIfOkay->i2_in_low_int
    _ToMainHigh_sendmsg->i2_send_msg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_in_low_int->i2_in_high_int
    i2_send_msg->i2_memcpy
    i2_recv_msg->i2_memcpy
    _InterruptHandlerLow->_timer1_int_handler
    _timer1_int_handler->_ToMainLow_sendmsg
    _adc_int_handler->_ToMainLow_sendmsg
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_timer0_lthread
    _main->_timer1_lthread
    _main->_uart_lthread
    _init_timer1_lthread->_OpenADC
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainHigh_recvmsg->_recv_msg
    _ToMainLow_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_timer0_int_handler
    _i2c_int_handler->_ToMainHigh_sendmsg
    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg

Critical Paths under _main in BANK1

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _ToMainHigh_recvmsg->_recv_msg
    _ToMainLow_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                56    56      0    4066
                                             21 BANK1     54    54      0
                     _init_uart_recv
                           _init_i2c
                _init_timer1_lthread
                        _init_queues
                         _OpenTimer1
                  _enable_interrupts
                _i2c_configure_slave
                          _OpenUSART
              _block_on_To_msgqueues
                 _ToMainHigh_recvmsg
                     _timer0_lthread
              _start_i2c_slave_reply
                  _ToMainLow_recvmsg
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      22
                                             32 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      22
                                             32 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  5     3      2     207
                                             37 BANK0      2     0      2
                                              0 BANK1      3     3      0
                            _OpenADC
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     134
                                             36 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     0      1      66
                                             32 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     0      1      22
                                             32 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            3     0      3     220
                                             32 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0      66
                                             38 BANK0      1     1      0
                            _in_main
                          _check_msg
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             36 BANK0      2     0      2
                         _in_low_int
                        _in_high_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             34 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (3) _in_high_int                                          2     0      2       0
                                             32 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     0      5     772
                                             16 BANK1      5     0      5
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8      34
                                             32 BANK0      8     0      8
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     2      3      66
                                             32 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     0      5     772
                                             16 BANK1      5     0      5
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8      62
                                             32 BANK0      8     0      8
                                              0 BANK1      2     2      0
                         _ConvertADC
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8      88
                                             32 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     134
                                             32 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7     679
                                             38 BANK0      2     2      0
                                              4 BANK1     12     5      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     174
                                             32 BANK0      6     0      6
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2      44
                                             32 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     0      1      22
                                             32 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     2      3     154
                                             32 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _SetChanADC                                           2     1      1      22
                                             32 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    2559
                                             32 COMRAM    17    17      0
                 _timer1_int_handler
                    _adc_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   6     6      0     920
                                             26 COMRAM     6     6      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (6) _adc_int_handler                                      4     4      0     822
                                             26 COMRAM     4     4      0
                            _ReadADC
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                2     2      0     817
                                             26 COMRAM     2     2      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     0      4     794
                                             22 COMRAM     4     0      4
                           _send_msg
 ---------------------------------------------------------------------------------
 (8) _send_msg                                            12     6      6     728
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      45
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ReadADC                                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     395
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    6810
                                             18 BANK0     14    14      0
                    _i2c_int_handler
                 _timer0_int_handler
                        _SleepIfOkay
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    11    11      0    2518
                                              4 BANK0     11    11      0
                       _handle_start
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  8     8      0    4146
                                             10 BANK0      8     8      0
                        _WriteTimer0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     146
                       i2_in_low_int
                      i2_in_high_int
                        i2_check_msg
                   _enter_sleep_mode
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     0      4    1912
                                              0 BANK0      4     0      4
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     0      5    2000
                                              5 BANK0      5     0      5
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     0      1      22
                                             49 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2      68
                                             49 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             51 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (12) i2_in_high_int                                       2     0      2       0
                                             49 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    1819
                                             59 COMRAM    12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    1907
                                             59 COMRAM     9     2      7
                                              0 BANK0      5     5      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     146
                                             49 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     484
                                             49 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_uart_recv
   _init_i2c
   _init_timer1_lthread
     _OpenADC
     _SetChanADC
   _init_queues
     _init_queue
   _OpenTimer1
   _enable_interrupts
   _i2c_configure_slave
   _OpenUSART
   _block_on_To_msgqueues
     _in_main
       _in_low_int
         _in_high_int
       _in_high_int
     _check_msg
     _Delay1KTCYx
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _timer0_lthread
   _start_i2c_slave_reply
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _timer1_lthread
     _ConvertADC
   _uart_lthread

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       _send_msg
         i1_memcpy
     _WriteTimer1
   _adc_int_handler
     _ReadADC
     _ToMainLow_sendmsg
       _send_msg
         i1_memcpy
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       _send_msg
         i1_memcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F3      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     4B      ED       6       92.6%
BITBANK3            F4      0       0       9        0.0%
BANK3               F4      0       0      10        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     28      60       4       75.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     47      4E       1       61.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0      22       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     19B      11        0.0%
DATA                 0      0     1BD      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.10 build 47796 
Symbol Table                                                                                   Mon Sep 17 22:17:19 2012

                    _STKPTRbits 000FFC                main@uthread_data 01B8        _MQ_Main_Willing_to_block 004B  
                   _SSPSTATbits 000FC7                              _DA 007E3D                              _BF 007E38  
                            _DC 007EC1                              _CK 007C16                              _P2 007C3C  
                            _S2 007C3B                              _CS 007C22                              _DT 007C17  
                            _GO 007E11                              _PC 000FF9                              _PD 007E82  
                            _RD 007C20                              _UA 007E39                              _RI 007E84  
                            _OV 007EC3                              _TO 007E83                              _RW 007E3A  
                            _RX 007C17                              _WR 007D31                              _TX 007C16  
     __end_of_ToMainLow_recvmsg 1B70                              bsr 000FE0       __end_of_ToMainLow_sendmsg 1C7E  
                  __CFG_CP0$OFF 000000               i2recv_msg@msgtype 003F               i2recv_msg@tlength 00B7  
                           _DA1 007E3D                             _DA2 007C3D                             _BF1 007E38  
                           _BF2 007C38                             _AN0 007C00                             _AN1 007C01  
                           _AN2 007C02                             _AN3 007C03                             _AN4 007C05  
                           _AN5 007C20                             _CM0 007DA0                             _AN6 007C21  
                           _CM1 007DA1                             _AN7 007C22                             _CM2 007DA2  
                           _AN8 007C0A                             _AN9 007C0B                             _LA0 007C48  
                           _P1A 007C12                             _LA1 007C49                             _P1B 007C1D  
                           _LB0 007C50                             _LA2 007C4A                             _P1C 007C1E  
                           _LB1 007C51                             _LA3 007C4B                             _P1D 007C1F  
                           _LC0 007C58                             _LB2 007C52                             _LA4 007C4C  
                           _LC1 007C59                             _LB3 007C53                             _LA5 007C4D  
                           _CKE 007E3E                             _LD0 007C60                             _LC2 007C5A  
                           _LB4 007C54                             _LA6 007C4E                             _LD1 007C61  
                           _LC3 007C5B                             _LB5 007C55                             _LA7 007C4F  
                           _LE0 007C68                             _LD2 007C62                             _LC4 007C5C  
                           _LB6 007C56                             _LE1 007C69                             _LD3 007C63  
                           _LC5 007C5D                             _LB7 007C57                             _LE2 007C6A  
                           _LD4 007C64                             _LC6 007C5E                             _LE3 007C6B  
                           _LD5 007C65                             _LC7 007C5F                             _LE4 007C6C  
                           _LD6 007C66                             _IBF 007CB7                             _LE5 007C6D  
                           _LD7 007C67                             _LE6 007C6E                             _LE7 007C6F  
                           _CIS 007DA3                             _CKP 007E34                             _PA1 007C12  
                           _GIE 007F97                             _PA2 007C11                             _PB2 007C22  
                           _PC2 007C21                             _BOR 007E80                             _RA0 007C00  
                           _PD2 007C20                             _RA1 007C01                             _RB0 007C08  
                           _RA2 007C02                             _RB1 007C09                             _RA3 007C03  
                           _RC0 007C10                             _RB2 007C0A                             _RA4 007C04  
                           _RC1 007C11                             _RB3 007C0B                             _RA5 007C05  
                           _RD0 007C18                             _RC2 007C12                             _RB4 007C0C  
                           _RA6 007C06                             _BSR 000FE0                             _RD1 007C19  
                           _RC3 007C13                             _RB5 007C0D                             _RA7 007C07  
                           _RE0 007C20                             _RD2 007C1A                             _RC4 007C14  
                           _RB6 007C0E                             _RE1 007C21                             _RD3 007C1B  
                           _RC5 007C15                             _RB7 007C0F                             _RE2 007C22  
                           _RD4 007C1C                             _RC6 007C16                             _RE3 007CB3  
                           _RD5 007C1D                             _RC7 007C17                             _RE4 007C24  
                           _RD6 007C1E                             _OBF 007CB6                             _UA1 007E39  
                           _RE5 007C25                             _RD7 007C1F                             _RC9 007D5E  
                           _UA2 007C39                             _RE6 007C26                             _W4E 007DC1  
                           _RE7 007C27                             _PGC 007C0E                             _PGD 007C0F  
                           _PCL 000FF9                             _SDA 007C14                             _RDE 007C20  
                           _PR2 000FCB                             _PEN 007E2A                             _SDI 007C14  
                           _SCK 007C13                             _SCL 007C13                             _SS1 007C05  
                           _SDO 007C15                             _SS2 007C1B                             _SEN 007E28  
                           _RW1 007E3A                             _PSA 007EAB                             _RW2 007C3A  
                           u950 17FE                             u951 17FC                             u960 182A  
                           _POR 007E81                             u961 1828                             _RX9 007D5E  
                           u970 186C                             u971 186A                             u980 1884  
                           u981 1882                             _SMP 007E3F                             _TX9 007D66  
                           _TOS 000FFD                             _WRE 007C21                             _WUE 007DC1  
                           _nA2 007C3D                             _nCS 007C22                             _nW2 007C3A  
                           _nPD 007E82            __size_of_WriteTimer0 0012            __size_of_WriteTimer1 0012  
                           _nRD 007C20                             _nRI 007E84                             _nTO 007E83  
                           _nWR 007C21                  _FromMainLow_MQ 0136                             wreg 000FE8  
                    _TXSTA1bits 000FAC                    __CFG_IESO$ON 000000                    ?_in_high_int 00D6  
              ??_init_uart_recv 00D8                 ReadTimer1@timer 0003             i2recv_msg@maxlength 003E  
                          l1802 1CEA                            l1810 1852                            l1811 183E  
                          l1812 1850                            l1815 1898                            l1808 1812  
                          l1816 18AA                            l1809 1852                            l1817 18AA  
                          _AN10 007C09                            _AN11 007C0C                            _AN12 007C08  
                          l3650 09AA                            l3651 0AD6                            l3660 0AB2  
                          l3652 09FA                            l3661 0B2A                            l3653 09FA  
                          l3645 0952                            l3670 0BEC                            l3662 0B28  
                          l3654 0A00                            l3646 09A8                            l1799 1D60  
                          l3671 0C14                            l3663 0C12                            l3655 0A7A  
                          l3647 09A6                            l3672 0C16                            l3664 0BF0  
                          l3648 0AD8                            l3656 0A02                            l3673 0C16  
                          l3665 0B2C                            l3649 0AB6                            l3657 0A94  
                          l3666 0C10                            l3658 0A34                            l3667 0B7C  
                          l3659 0A56                            l5540 10EA                            l3668 0B9A  
                          l5525 1AD6                            l5541 1126                            l3669 0B9C  
                          l5470 1590                            l5542 1128                            l5471 15C6  
                          l5519 172E                            l5480 0C8E                            l5472 15C6  
                          l5536 1072                            l5481 0D58                            l5537 1128  
                          l5482 0D58                            l5490 1B6E                            l5538 1082  
                          l5539 10B6                            l7403 17F4                            l7342 0F0C  
                          l7406 1C58                            l5479 0D52                            l7343 0E86  
                          _ADIE 007CEE                            l7344 0F38                            _ADIF 007CF6  
                          _ADEN 007D5B                            l7345 0F7E                            _ADFM 007E07  
                          l5498 1B3E                            l9205 1CD6                            _CCP1 007C12  
                          _ADIP 007CFE                            _CKE1 007E3E                            _CKE2 007C3E  
                          _ADON 007E10                            _P1M0 007DEE                            _CHS0 007E12  
                          _P1M1 007DEF                            _CHS1 007E13                            _CHS2 007E14  
                          _CHS3 007E15                            _CKP1 007E34                            _DDRA 000F92  
                          _CKP2 007C34                            _DDRB 000F93                            _DDRC 000F94  
                          _DDRD 000F95                            _DDRE 000F96                            _GCEN 007E2F  
                          _KBI0 007C0C                            _KBI1 007C0D                            _CMIE 007D06  
                          _KBI2 007C0E                            _CMIF 007D0E                            _KBI3 007C0F  
                          _PA2E 007C27                            _GIEH 007F97                            _CMIP 007D16  
                          _BRGH 007D62                            _PB1E 007C26                            _GIEL 007F96  
                          _PC1E 007C25                            _PB3E 007C24                            _T0IE 007F95  
                          _PC3E 007C23                            _T0IF 007F92                            _RD16 007E6F  
                          _FLT0 007C08                            _CREN 007D5C                            _T0CS 007EAD  
                          _FERR 007D5A                            _DONE 007E11                            _T0IP 007F8A  
                          _IBOV 007CB5                            _CVR0 007DA8                            _CVR1 007DA9  
                          _PDC0 007DB8                            _CVR2 007DAA                            _PDC1 007DB9  
                          _FREE 007D34                            _CVR3 007DAB                            u1400 12D2  
                          u2120 09A2                            _PDC2 007DBA                            u1401 12D0  
                          u2121 09A0                            _PDC3 007DBB                            u1410 12E0  
                          u2130 0B24                            _PDC4 007DBC                            u1411 12DE  
                          u2131 0B22                            _T0SE 007EAC                            _PDC5 007DBD  
                          _CSRC 007D67                            u2140 18FE                            u1500 10D8  
                          u1420 12F2                            _PDC6 007DBE                            u2141 18FC  
                          u1501 10D6                            u1421 12F0                            _LATA 000F89  
                          u2150 0C68                            u1510 110A                            u1430 1302  
                          _LATB 000F8A                            u2151 0C66                            u1511 1106  
                          u1431 1300                            _LATC 000F8B                            u2160 0C88  
                          u1520 0F36                            u1440 1310                            u1360 1A3A  
                          _D_A2 007C3D                            _LATD 000F8C                            _FSR0 000FE9  
                          u2217 1CEE                            u2161 0C86                            u1521 0F34  
                          u1441 130E                            u1361 1A38                            _LATE 000F8D  
                          _FSR1 000FE1                            u1530 1914                            u1450 1324  
                          u1370 1A58                            _FSR2 000FD9                            u1531 1912  
                          u1451 1322                            u1371 1A56                            u1540 192A  
                          u1516 110C                            u1460 1346                            u1380 12B4  
                          u1541 1928                            u1461 1344                            u1381 12B2  
                          u1550 158C                            u1470 134E                            u1390 12C2  
                          u1551 158A                            u1471 134C                            u1391 12C0  
                          u1560 15C4                            u1480 106E                            _INT0 007C08  
                          u1561 15C2                            u1481 106C                            _INT1 007C09  
                          u1490 10A4                            _INT2 007C0A                            u1491 10A2  
                          _SDA1 007C14                            _SDA2 007C19                            _RCD8 007D58  
                          _IPR1 000F9F                            u1670 1642                            _IPR2 000FA2  
                          u1671 1640                            _PIE1 000F9D                            _IPR3 000FA5  
                          _IPEN 007E87                            _PIE2 000FA0                            _PEN1 007E2A  
                          _PIE3 000FA3                            _PEN2 007C2A                            _CVRR 007DAD  
                          _SDI1 007C14                            _SCK1 007C13                            _PEIE 007F96  
                          _SDI2 007C19                            _SCK2 007C18                            _SCL1 007C13  
                          _SCL2 007C18                            _RBIE 007F93                            _RBIF 007F90  
                          _RCIE 007CED                            _RCIF 007CF5                            _RCEN 007E2B  
                          _SDO1 007C15                            _SDO2 007C1A                            _SEN1 007E28  
                          _PIR1 000F9E                            _SEN2 007C28                            _SCS0 007E98  
                          _RBIP 007F88                            _MSK0 007E40                            _PIR2 000FA1  
                          _SCS1 007E99                            _MSK1 007E41                            _PIR3 000FA4  
                          _MSK2 007E42                            _MSK3 007E43                            _RCIP 007CFD  
                          _MSK4 007E44                            _MSK5 007E45                            _MSK6 007E46  
                          _MSK7 007E47                            _OERR 007D59                            _RCON 000FD0  
                          _SCKP 007DC4                            _RCMT 007DC6                            _RBPU 007F8F  
                          _RX91 007D5E                            _PSP0 007C18                            _SMP1 007E3F  
                          _PSP1 007C19                            _SMP2 007C3F                            _PSP2 007C1A  
                          _PSP3 007C1B                            _PSP4 007C1C                            _PSP5 007C1D  
                          _PSP6 007C1E                            _TX91 007D66                            _PSP7 007C1F  
                          _RX9D 007D58                            _TMR0 000FD6                            _TMR1 000FCE  
                          _TMR2 000FCC                            _PROD 000FF3                            _RJPU 007C07  
                          _WCOL 007E37                            _SPEN 007D5F                            _RSEN 007E29  
                          _TX9D 007D60                            _SREN 007D5D                            _OSTS 007E9B  
                          _TXD8 007D60                            _TOSH 000FFE                            _TOSL 000FFD  
                          _WREG 000FE8                            _TRMT 007D61                            _STOP 007E3C  
                          _ZERO 007EC2                            _TXIE 007CEC                            _TOSU 000FFF  
                          _WREN 007D32                            _TXIF 007CF4                            _TXEN 007D65  
                          _SYNC 007D64                            _TXIP 007CFC                            _R_W2 007C3A  
               _FromMainHigh_MQ 0100                            _nBOR 007E80                   __CFG_FCMEN$ON 000000  
                          _nRC8 007D5E                            _nSS1 007C05                            _nSS2 007C1B  
                          _nPOR 007E81                            _nTX8 007D66          ?_block_on_To_msgqueues 0001  
                          _main 0898                            fsr0h 000FEA                            fsr1h 000FE2  
                          fsr0l 000FE9                            fsr2h 000FDA                            indf1 000FE7  
                          fsr1l 000FE1                            indf2 000FDF                            fsr2l 000FD9  
                   main@msgtype 01CF                            pclat 000FFA                     i2_check_msg 1C10  
                          prodh 000FF4                            prodl 000FF3           handle_start@data_read 0032  
                          start 00D2                      i2_recv_msg 0D5A                   __CFG_FOSC2$ON 000000  
              ?_adc_int_handler 0001                      i2_send_msg 1406       ToMainHigh_recvmsg@msgtype 01B3  
                  _ECCP1DELbits 000FB7                 __end_of_ReadADC 1D50                    _ECCP1CONbits 000FBD  
                send_msg@length 000D                 __end_of_OpenADC 164C     __size_of_timer0_int_handler 00C0  
                   _Delay1KTCYx 1CEC                           l10992 1D58                           l17004 18E4  
                         l17005 18BE                           l17006 1900                           l17007 1900  
                         l12785 1792                           l18011 17FE                           l18003 1D5A  
                         l12788 1C0E                           l16421 1CBC                           l18005 1CD8  
                         l18021 183A                           l18013 180E                           l17070 1CFE  
                         l17071 1CFE                           l14575 1918                           l18007 1CEA  
                         l18023 183C                           l18015 1810                           l18031 186C  
                         l16408 1648                           l14576 194E                           l16409 164A  
                         l14577 194C                           l18025 183E                           l18017 1812  
                         l18009 17F6                           l18041 18A8                           l18033 1884  
                         l19001 0B9C                           l14578 194E                           l18027 184E  
                         l18019 182A                           l18035 1894                           l19011 177E  
                         l19003 0BEE                           l17069 1CEC                           l19021 1D50  
                         l18037 1896                           l18029 1854                           l16445 1A3E  
                         l19013 1780                           l18301 1794                           l19005 0BF0  
                         l16446 1A42                           _C1INV 007DA4                           l16391 1D6A  
                         l19031 18AC                           l19023 1B40                           l18039 1898  
                         l16447 1A5C                           l19015 1782                           l19007 1730  
                         l18303 179C                           l16448 1A5E                           _DC1B0 007DEC  
                         l19033 18BE                           l19041 0C1A                           l19025 1B6E  
                         l19017 1B10                           l18401 10B0                           l16449 1A60  
                         l18321 16FE                           l19009 177C                           _DC1B1 007DED  
                         l16490 12E6                           l19035 18D2                           l19051 0C8C  
                         l19043 0C34                           l19027 1BEA                           l19019 1B3E  
                         l18411 10E8                           l18403 10B4                           l16491 12F4  
                         l18331 1A42                           l18323 1716                           l18315 16C2  
                         l16492 1304                           _DC2B0 007DD4                           l19037 18DA  
                         l19061 0D3A                           l19053 0C8E                           l19045 0C56  
                         l19029 1C0A                           l18413 10EA                           l18405 10B6  
                         l16493 1314                           l18341 1C3E                           l18333 1A4A  
                         l18325 1A24                           l18317 16CE                           _DC2B1 007DD5  
                         l16494 1316                           l16486 12B6                           _C2INV 007DA5  
                         l19039 18E4                           l19071 0D56                           l19063 0D46  
                         l19055 0CB4                           l19047 0C68                           l18431 0F38  
                         l18423 0E6E                           l18415 1100                           l18407 10D8  
                         l16495 1328                           l16487 12C6                           l18351 1C54  
                         l18343 1C4A                           l18335 1A4C                           l18327 1A2E  
                         l18319 16E6                           l16496 132A                           l16488 12D4  
                         l19065 0D4E                           l19057 0CEA                           l19049 0C88  
                         l18433 0F7C                           l18425 0E86                           l18409 10E4  
                         l16497 1352                           l16489 12E4                           l18361 12C2  
                         l18353 1C56                           l18345 1C4E                           l18337 1A58  
                         l18329 1A3A                           l16498 1352                           l18531 1AD6  
                         l19067 0D50                           l19059 0D1C                           l18451 1542  
                         l18443 1902                           l18427 0EF6                           l18371 1310  
                         l18363 12D2                           l18355 12A0                           l18347 1C50  
                         l18339 1C36                           l18533 1CEC                           l19069 0D52  
                         l18461 15B0                           l18453 156E                           l18445 1916  
                         l18429 0F0C                           l18381 133A                           l18373 1324  
                         l18365 12E0                           l18357 12A8                           l18349 1C52  
                         l18535 1CF4                           l18463 15B6                           l18455 157E  
                         l18447 1918                           l18391 1056                           l18383 133C  
                         l18375 132E                           l18367 12F2                           l18359 12B4  
                         l18529 1AA0                           l18457 158E                           l18449 192A  
                         l18393 1070                           l18385 133E                           l18377 1336  
                         l18369 1302                           l18297 1CBE                           l18571 15DC  
                         l18459 1590                           l18395 1074                           l18387 1346  
                         l18379 1338                           l18299 1CC6                           l18581 1D68  
                         l18573 15FC                           l18397 1082                           l18389 134E  
                         l18575 1636                           l18567 15C8                           l18399 10A4  
                         l18577 1642                           l18569 15D0                           l18579 1CA2  
                         l18931 0898                           l18941 08E6                           l18933 089C  
                         l18951 090C                           l18943 08EA                           l18935 089E  
                         l18961 092A                           l18953 090E                           l18945 08EE  
                         l18937 08B6                           _C1OUT 007DA6                           l18971 09A4  
                         l18963 092C                           l18955 0910                           l18947 08F2  
                         l18939 08CE                           l18981 0A78                           l18973 09AA  
                         l18965 0952                           l18957 0912                           l18949 0908  
                         l18975 0A02                           l18983 0A7A                           l18991 0AD8  
                         l18967 0956                           l18959 0914                           l18993 0B18  
                         l18977 0A34                           l18985 0A94                           l18969 0996  
                         _C2OUT 007DA7                           l18995 0B26                           l18987 0AB4  
                         l18979 0A56                           l18997 0B2C                           l18989 0AB6  
                         l18999 0B7C                           _ABDEN 007DC0                           _ADCAL 007E17  
                         _ADCS0 007E00                           _ADCS1 007E01                           _ADCS2 007E02  
                         _ADDEN 007D5B                           _CCP10 007C22                           ?_main 0001  
                         _ACKEN 007E2C                           _ACKDT 007E2D                           _CCP2E 007C27  
                         _CCP6E 007C26                           _CCP7E 007C25                           _CCP8E 007C24  
                         _CCP9E 007C23                           _BCLIE 007D03                           _BCLIF 007D0B  
                         _CCP1X 007DED                           _CCP1Y 007DEC                           _CCP2X 007DD5  
                         _ACQT0 007E03                           _CCP2Y 007DD4                           _ACQT1 007E04  
                         _ACQT2 007E05                           _BCLIP 007D13                           _ADRES 000FC3  
                         _CCPR1 000FBE                           _CCPR2 000FBB                           _BRG16 007DC3  
                         _GCEN1 007E2F                           _GCEN2 007C2F                           _CMEN0 007DA0  
                         _CMEN1 007DA1                           _CMEN2 007DA2                           _CARRY 007EC0  
                         _CHSN3 007E0B                           _BRGH1 007D62                           _CMCON 000FB4  
                         _CREN1 007D5C                           _FERR1 007D5A                           _T0CKI 007C0D  
                         _T1CKI 007C10                           _IDLEN 007E9F                           _T0CON 000FD5  
                         _T1CON 000FCD                           _CSRC1 007D67                           _T2CON 000FCA  
                         _LATA0 007C48                           _LATA1 007C49                           _LATB0 007C50  
                         _LATA2 007C4A                           _INDF0 000FEF                           _LATB1 007C51  
                         _LATA3 007C4B                           _INDF1 000FE7                           _LATC0 007C58  
                         _LATB2 007C52                           _INDF2 000FDF                           _LATC1 007C59  
                         _LATB3 007C53                           _LATA5 007C4D                           _LATD0 007C60  
                         _LATC2 007C5A                           _LATB4 007C54                           _LATD1 007C61  
                         _LATC3 007C5B                           _LATB5 007C55                           _LATA7 007C4F  
                         _LATE0 007C68                           _LATD2 007C62                           _LATC4 007C5C  
                         _LATB6 007C56                           _RC1IE 007CED                           _LATE1 007C69  
                         _LATD3 007C63                           _LATC5 007C5D                           _LATB7 007C57  
                         _RC1IF 007CF5                           _LATE2 007C6A                           _LATD4 007C64  
                         _LATC6 007C5E                           _LATD5 007C65                           _LATC7 007C5F  
                         _T0PS0 007EA8                           _LATD6 007C66                           _T0PS1 007EA9  
                         _LATD7 007C67                           _T0PS2 007EAA                           _RC1IP 007CFD  
                         _FSR0H 000FEA                           _FSR1H 000FE2                           _FSR2H 000FDA  
                         _FSR0L 000FE9                           _PCFG0 007E08                           _FSR1L 000FE1  
                         _PCFG1 007E09                           _PCFG2 007E0A                           _FSR2L 000FD9  
                         _PCFG3 007E0B                           _T1OSI 007C11                           _INT0E 007F94  
                         _INT0F 007F91                           _INT1E 007F83                           _INT1F 007F80  
                         _CVREF 007C02                           _T1OSO 007C10                           _INT2E 007F84  
                         _INT2F 007F81                           _CVREN 007DAF                           _INT1P 007F86  
                         _INT2P 007F87                           _T1RUN 007E6E                           _CVROE 007DAE  
                         _RC8_9 007D5E                           _RCEN1 007E2B                      i1memcpy@d1 0001  
                         _RCEN2 007C2B                           _PCLAT 000FF9                           _CVRSS 007DAC  
                         _MSK01 007E40                           _MSK02 007C40                           _MSK11 007E41  
                         _MSK12 007C41                           _MSK21 007E42                           _MSK22 007C42  
                         _MSK31 007E43                           _MSK32 007C43                           _MSK41 007E44  
                         _MSK42 007C44                           _MSK51 007E45                           _RCIDL 007DC6  
                         _MSK52 007C45                           _MSK61 007E46                           _MSK62 007C46  
                         _MSK71 007E47                           _MSK72 007C47                           _OERR1 007D59  
                    i1memcpy@s1 0003     FromMainHigh_recvmsg@msgtype 00BC                           _VCFG0 007E0C  
                         _VCFG1 007E0D                           _RCREG 000FAE                           _SENDB 007D63  
                         _LVDIN 007C05                           _PLLEN 007CDE                           _RCSTA 000FAB  
                         _RX9D1 007D58                           _WCOL1 007E37                           _WCOL2 007C37  
                         _SPEN1 007D5F                           _TMR0H 000FD7                           _RSEN1 007E29  
                         _RSEN2 007C29                           _TMR1H 000FCF                           _TX1IE 007CEC  
                         _TX1IF 007CF4                           _TMR0L 000FD6                           _PRODH 000FF4  
                         _TX9D1 007D60                           _TMR1L 000FCE                           _PRODL 000FF3  
                         _SREN1 007D5D                           _SPBRG 000FAF                           _D_nA2 007C3D  
                         _TX1IP 007CFC                           _NOT_A 007E3D                           _PORTA 000F80  
                         _PORTB 000F81                           _PORTC 000F82                           _PORTD 000F83  
                         _PORTE 000F84                           _PSPIE 007CEF                           _PSPIF 007CF7  
                         _SRENA 007D5D                           _PRSEN 007DBF                           _PSPIP 007CFF  
                         _NOT_W 007E3A                           _START 007E3B                           _SSPM0 007E30  
                         _SSPM1 007E31                           _SSPM2 007E32                           _SSPM3 007E33  
                         _TX8_9 007D66                           _TRISA 000F92                           _TRISB 000F93  
                         _VREFM 007C02                           _TRMT1 007D61                           _STOP1 007E3C  
                         _TRISC 000F94                           _STOP2 007C3C                           _TRISD 000F95  
                         _SSPIE 007CEB                           _TRISE 000F96                           _VREFP 007C03  
                         _SSPIF 007CF3                           _SSPEN 007E35                           _TXEN1 007D65  
                         _SWDTE 007E88                           _SYNC1 007D64                           _SSPIP 007CFB  
                         _SSPOV 007E36                           _WRERR 007D33                           _TXREG 000FAD  
                         _TXSTA 000FAC                           _R_nW2 007C3A                      i2memcpy@d1 0032  
                         _nDONE 007E11                      i2memcpy@s1 0034                    ?_init_queues 0001  
                         _nRBPU 007F8F       __size_of_enter_sleep_mode 0006                 __end_of_in_main 18AC  
                         _errno 0048      ToMainLow_recvmsg@maxlength 01B2         timer0_lthread@msgbuffer 00DC  
                    _ConvertADC 1D68         i2c_configure_slave@addr 00D6                           tablat 000FF5  
                         status 000FD8                __end_ofi1_memcpy 1998                __end_ofi2_memcpy 19E0  
               __initialization 1B9A                    __end_of_main 0C1A                      _ReadTimer1 1D00  
   __size_of_timer1_int_handler 003E      __size_of_ToMainLow_recvmsg 0030      __size_of_ToMainLow_sendmsg 0024  
 __size_of_FromMainHigh_recvmsg 0028           __size_ofi2_in_low_int 0044                          ??_main 01B7  
               send_msg@msgtype 000E                   __activetblptr 000000                 send_msg@tlength 0012  
                    _SetChanADC 1CA2            __end_of_handle_start 1056                          _ADDEN1 007D5B  
                        _BCL1IE 007D03                          _BCL1IF 007D0B                          _BCL2IE 007D1E  
                        _BCL2IF 007D26                          _BCL1IP 007D13                          _BCL2IP 007D2E  
                        _ADCON0 000FC2                          _ADCON1 000FC1                          _ADCON2 000FC0  
                        _ACKEN1 007E2C                          _ACKEN2 007C2C                          _ABDOVF 007DC7  
                        _ACKDT1 007E2D                          _ACKDT2 007C2D                          _CCP1M0 007DE8  
                        _CCP1M1 007DE9                          _CCP1M2 007DEA                          _CCP1M3 007DEB  
                        _CCP2M0 007DD0                          _CCP2M1 007DD1                          _CCP2M2 007DD2  
                        _CCP2M3 007DD3                          _CCP1IE 007CEA                          _CCP1IF 007CF2  
                        _CCP2IE 007D00                          _CCP2IF 007D08                          _CCP1IP 007CFA  
                        _CCP2IP 007D10                          _ADMSK1 007E29                          _ADMSK2 007E2A  
                        _ADMSK3 007E2B                          _ADMSK4 007E2C                          _ADMSK5 007E2D  
                        _ADRESH 000FC4                          _ADRESL 000FC3                          _CCPR1H 000FBF  
                        _CCPR2H 000FBC                          _CCPR1L 000FBE                          _CCPR2L 000FBB  
                        _EECON1 000FA6                          _EECON2 000FA7                          _T08BIT 007EAE  
       ??_uart_recv_int_handler 001B                          _T1RD16 007E6F                          _GODONE 007E11  
                        _INT0IE 007F94                          _INT0IF 007F91                          _INT1IE 007F83  
                        _INT1IF 007F80                          _INT2IE 007F84                          _INT2IF 007F81  
                        _INT1IP 007F86                          _CVRCON 000FB5                          _INT2IP 007F87  
                        _MEMCON 000FCB                          i1l1825 006C                          i1l1826 007C  
                        i1l1827 008C                          i1l1828 008C                          _CVROEN 007DAE  
                        _T1SYNC 007E6A                          i2l1802 1D42                          i2l1810 1A22  
                    _OpenTimer1 1A24                          i2l1811 1A14                          i1l5475 1392  
                        i2l1812 1A20                          i2l1820 14F4                          i1l5476 1404  
                        i2l1821 1504                          i2l1822 1508                  __CFG_WDTEN$OFF 000000  
                        i1l5487 1C7C                          i2l1808 19F6                          i1l9200 1272  
                        i2l1809 1A22                          i1l9201 129E                          i1l9202 129E  
                        _PCLATH 000FFA                          _PCLATU 000FFB                          i2l5522 1D66  
                        i2l5514 1BE8                          i2l5530 166C                          i2l5531 1680  
                        i2l5532 169E                          i2l5525 1C34                          i2l5533 16BC  
                        i1l9199 1274                          i2l5480 0DBC                          i2l5528 1658  
                        i2l7400 0896                          _INTCON 000FF2                          i2l5481 0E6C  
                        i2l5529 16C0                          i2l5482 0E6C                          i2l5475 1444  
                        i2l5476 14B6                          i2l7350 103A                          i2l5479 0E66  
                        i2l7351 1020                          i2l5495 1CA0                          i2l7352 1038  
                        i2l7360 061E                          i2l7353 1054                          i2l7361 01B0  
                        i2l7354 1054                          i2l7370 0354                          i2l7362 0200  
                        i2l7371 0352                          i2l7363 01FE                          i2l7348 103C  
                        i2l7364 064C                          i2l7380 050A                          i2l7372 030E  
                        i2l7349 1000                          i2l7381 04E0                          i2l7373 02D4  
                        i2l7365 0202                          i2l7357 0182                          i2l7390 0614  
                        i2l7382 049C                          i2l7374 030C                          i2l7366 028A  
                        i2l7358 01A0                          _TABLAT 000FF5                          i2l7391 0674  
                        i2l7383 04DE                          i2l7375 0350                          i2l7367 0272  
                        i2l7359 064C                          i2l7384 04F2                          i2l7376 0356  
                        i2l7368 0246                          i2l7393 0666                          i2l7385 061A  
                        i2l7377 03F2                          i2l7369 0272                          i2l7394 0672  
                        i2l7386 0618                          i2l7378 040A                          i2l7395 06DE  
                        i2l7387 0582                          i2l7379 040C                          i2l7396 078C  
                        i2l7388 0616                          i2l7397 0848                          i2l7389 05D2  
                        i2l7398 0846                          i2l7399 0896                          _VCFG01 007E0C  
                        _VCFG11 007E0D                          _RCREG1 000FAE     __end_of_i2c_configure_slave 1C5A  
                        _SENDB1 007D63                   ??_SleepIfOkay 0036              __size_of_ReadUSART 0038  
                        _RCSTA1 000FAB                          _OSCFIE 007D07                          _OSCFIF 007D0F  
                        _OSCCON 000FD3                          _OSCFIP 007D17                          _TBLPTR 000FF6  
                        _TMR0IE 007F95                          _SPBRG1 000FAF                          _TMR0IF 007F92  
                        _TMR1IE 007CE8                          _TMR1IF 007CF0                          _TMR1CS 007E69  
                        _TMR2IE 007CE9                          _TMR2IF 007CF1                          _TMR0IP 007F8A  
                        _PSSAC0 007DB2                          _PSSAC1 007DB3                          _TMR1IP 007CF8  
                        _PSSBD0 007DB0                          _PSSBD1 007DB1                          _TMR2IP 007CF9  
                        _TMR0ON 007EAF                          _SPBRGH 000FB0                          _TMR1ON 007E68  
                        _PLUSW0 000FEB                          _PLUSW1 000FE3                          _TMR2ON 007E52  
                        _PLUSW2 000FDB                          _NOT_CS 007C22                          _SSP1IE 007CEB  
                        _SSP1IF 007CF3                          _SSP2IE 007D1F                          _SSP2IF 007D27  
                        _NOT_PD 007E82                          _NOT_RD 007C20                          _SSP1IP 007CFB  
                        _WDTCON 000FD1                          _NOT_RI 007E84                          _SSP2IP 007D2F  
                        _NOT_TO 007E83                          _START1 007E3B                          _START2 007C3B  
                        _SOSCEN 007E6B                          _NOT_WR 007C21                          _SSPM01 007E30  
                        _SSPM02 007C30                          _SSPM11 007E31                          _SSPM12 007C31  
                        _SSPM21 007E32                          _SSPM22 007C32                          _SSPM31 007E33  
                        _SSPM32 007C33                          _SSPADD 000FC8                          _TRISA0 007C90  
                        _TRISA1 007C91                          _TRISB0 007C98                          _TRISA2 007C92  
                        _TRISB1 007C99                          _TRISA3 007C93                          _TRISC0 007CA0  
                        _TRISB2 007C9A                          _TRISC1 007CA1                          _TRISB3 007C9B  
                        _TRISA5 007C95                          _TRISD0 007CA8                          _TRISC2 007CA2  
                        _TRISB4 007C9C                          _TRISD1 007CA9                          _TRISC3 007CA3  
                        _TRISB5 007C9D                          _TRISE0 007CB0                          _TRISD2 007CAA  
                        _TRISC4 007CA4                          _TRISB6 007C9E                          _TRISE1 007CB1  
                        _TRISD3 007CAB                          _TRISC5 007CA5                          _TRISB7 007C9F  
                        _TRISE2 007CB2                          _TRISD4 007CAC                          _TRISC6 007CA6  
                        _TRISD5 007CAD                          _TRISC7 007CA7                          _SSPEN1 007E35  
                        _TRISD6 007CAE                          _SSPEN2 007C35                          _TRISD7 007CAF  
                        _STATUS 000FD8                          _STKFUL 007FE7                          _SSPBUF 000FC9  
                        _SWDTEN 007E88                          _STKOVF 007FE7                          _SSPOV1 007E36  
                        _SSPOV2 007C36                          _STKUNF 007FE6                          _STKPTR 000FFC  
__size_of_start_i2c_slave_reply 0112                          _TXREG1 000FAD                       ??_ReadADC 0003  
                        _TXSTA1 000FAC   __end_of_start_i2c_slave_reply 0F80              timer0_lthread@tptr 00D6  
                   ?i2_recv_msg 003C                       ??_OpenADC 00D9                    i2_in_low_int 19E0  
                   ?i2_send_msg 003C                  __CFG_XINST$OFF 000000              __size_of_OpenUSART 00B4  
               _i2c_int_handler 00D6                          _ic_ptr 00DE                   main@msgbuffer 01BC  
              __end_of_init_i2c 17F6                OpenTimer1@config 00D6                          _memcpy 18AC  
                        clear_0 1BA0                          clear_1 1BAC                          _uc_ptr 004D  
                        main@ic 01D1                          main@uc 01CA                __end_of_recv_msg 0D5A  
   start_i2c_slave_reply@length 00D6                       ??_in_main 00DC                __end_of_send_msg 1406  
         timer0_int_handler@val 00C6         i2c_int_handler@i2c_data 00C1                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                     init_queue@i 00D9  
      ToMainLow_recvmsg@msgtype 01B3            __size_of_in_high_int 0014                     ?_ConvertADC 0001  
               __CFG_FOSC$HSPLL 000000                      __accesstop 0080         __end_of__initialization 1BBC  
    __end_of_ToMainHigh_recvmsg 1B40      __end_of_ToMainHigh_sendmsg 1CA2     __end_of_init_timer1_lthread 1794  
           __end_of_SleepIfOkay 16C2                  __pcstackCOMRAM 0001          __size_ofi2_in_high_int 000E  
                   ?_ReadTimer1 0001              __size_of_check_msg 0038               __end_of_ReadUSART 1B10  
     timer0_int_handler@msgtype 00C2                     ?_SetChanADC 00D6                       ?i1_memcpy 0001  
 __size_of_InterruptHandlerHigh 153A     __end_of_InterruptHandlerLow 00D2                       ?i2_memcpy 0032  
                 _ToMainHigh_MQ 016C             __size_ofi2_recv_msg 0114                _enter_sleep_mode 1D62  
           __size_ofi2_send_msg 00B2            timer1_lthread@length 00DA                   ReadUSART@data 0001  
             __end_of_OpenUSART 1354                   check_msg@qptr 00D6         ??_block_on_To_msgqueues 00DC  
          __size_of_init_queues 006E                      __pbssBANK0 0080                      __pbssBANK1 0100  
                   ?_OpenTimer1 00D6                      __pnvCOMRAM 004D         __end_of_i2c_int_handler 0898  
                  ?i2_check_msg 0032              timer1_lthread@tptr 00D6                   _DATA_ADDRESS2 007C3D  
             recv_msg@maxlength 01A8                 recv_msg@msgtype 01A9                 recv_msg@tlength 01AE  
                       _CCP1CON 000FBD                         _CCP2CON 000FBA           __size_of_handle_start 00D6  
                  ?_Delay1KTCYx 00D6                WriteTimer0@timer 0034                         _ADMSK11 007E29  
                       _ADMSK12 007C29                         _ADMSK21 007E2A                         _ECCP1AS 000FB6  
                       _ADMSK22 007C2A                         _ADMSK31 007E2B                         _ADMSK32 007C2B  
                       _ADMSK41 007E2C                         _ADMSK42 007C2C                         _ADMSK51 007E2D  
                       _ADMSK52 007C2D                         ?_memcpy 00D6                         _BAUDCON 000FB8  
                       _ACKSTAT 007E2E                         _BAUDCTL 000FB8                WriteTimer1@timer 0003  
                 ??_WriteTimer0 0034                   ??_WriteTimer1 0003                         _ECCPAS0 007DB4  
                       _ECCPAS1 007DB5                         _ECCPAS2 007DB6                         _ECCPASE 007DB7  
           __size_of_ConvertADC 0004         __size_of_timer0_lthread 000A                         _T1CKPS0 007E6C  
                       _T1CKPS1 007E6D                         _T2CKPS0 007E50                         _T2CKPS1 007E51  
       __size_of_timer1_lthread 0026                         _T1OSCEN 007E6B                         i1l17004 1980  
                       i1l17005 1962                         i1l17006 1996                         i1l17007 1996  
                       i1l16510 1B06                         i1l16511 1B0E                         i1l16416 1D4E  
                       i1l16507 1AF2                         i1l16508 1AF2                         i1l16509 1AFC  
                       i1l16463 1D22                         i1l16383 1A9E                         i1l16456 1D10  
                       i1l16386 1B98                         i1l17711 1D00                         i1l17713 1D12  
                       i1l17715 1D44                         i1l17717 1D4E                         i1l18701 1392  
                       i1l18551 1AD8                         i1l18711 1404                         i1l18703 13B2  
                       i1l18561 1B04                         i1l18553 1ADC                         i1l18705 13D2  
                       i1l18713 1C5A                         i1l18721 1A8A                         i1l18563 1B0A  
                       i1l18555 1AE4                         i1l18707 13F4                         i1l18715 1C7C  
                       i1l18731 11F2                         i1l18723 1A92                         i1l18565 1B0E  
                       i1l18557 1AEE                         i1l18709 1400                         i1l18733 1218  
                       i1l18741 1274                         i1l18725 1B70                         i1l18717 1A62  
                       i1l18671 1962                         i1l18559 1AFA                         i1l18743 127C  
                       i1l18735 1226                         i1l18727 1B7C                         i1l18719 1A6E  
                       i1l18751 0066                         i1l18673 1976                         i1l18745 1280  
                       i1l18737 123C                         i1l18729 11EA                         i1l18761 0084  
                       i1l18753 006C                         i1l18675 197A                         i1l18691 135A  
                       i1l18739 1260                         i1l18763 0086                         i1l18755 0074  
                       i1l18747 005C                         i1l18677 1980                         i1l18669 1950  
                       i1l18693 136A                         i1l18757 0076                         i1l18749 0064  
                       i1l18695 137A                         i1l18759 007C                         i1l18697 138C  
                       i1l18689 1354                         i1l18699 1390                         i2l17004 19C8  
                       i2l17005 19AA                         i2l17006 19DE                         i2l17007 19DE  
                       i2l16430 1D34                         i2l18211 166A                         i2l16380 11E8  
                       i2l19101 1484                         i2l18221 169E                         i2l18213 166C  
                       i2l18205 164C                         i2l19111 0D6E                         i2l19103 14A6  
                       i2l18223 16BA                         i2l18215 167E                         i2l18207 1656  
                       i2l19121 0DBC                         i2l19113 0D88                         i2l19105 14B2  
                       i2l18225 16BC                         i2l18217 1680                         i2l18209 1658  
                       i2l19131 0E5A                         i2l19123 0DDE                         i2l19115 0D9A  
                       i2l19107 14B6                         i2l18219 169C                         i2l16379 11E8  
                       i2l19141 1998                         i2l19133 0E62                         i2l19125 0E0E  
                       i2l19117 0DB6                         i2l19109 0D5A                         _INTEDG0 007F8E  
                       i2l19143 19AA                         i2l19135 0E64                         i2l19127 0E30  
                       i2l19119 0DBA                         _INTEDG1 007F8D                         _INTEDG2 007F8C  
                       i2l19145 19BE                         i2l19129 0E4E                         i2l19137 0E66  
                       i2l18601 1A10                         i2l19081 1BC2                         i2l19073 1C7E  
                       i2l19147 19C2                         i2l19139 0E6A                         i2l19091 142C  
                       i2l18603 1A12                         i2l19083 1BE8                         i2l19075 1CA0  
                       i2l19149 19C8                         i2l19093 143E                         i2l19085 1406  
                       i2l18605 1A14                         i2l18541 0FB6                         i2l19095 1442  
                       i2l19087 140C                         i2l18607 1A1E                         i2l18543 0FBE  
                       i2l18527 1D62                         i2l19097 1444                         i2l19089 141C  
                       i2l18545 1008                         i2l18537 0F80                         i2l18801 01AE  
                       i2l19099 1464                         i2l18547 1020                         i2l18539 0FAC  
                       i2l18811 021E                         i2l18803 01B8                         i2l18549 103C  
                       i2l18901 06EC                         i2l18821 0298                         i2l18813 022C  
                       i2l18805 01C0                         i2l18591 19E8                         i2l18583 1D24  
                       i2l18911 07F6                         i2l18903 0734                         i2l18831 02EA  
                       i2l18823 02AC                         i2l18815 0234                         i2l18807 01DC  
                       i2l18665 1C10                         i2l18585 1D36                         i2l18593 19F2  
                       i2l18921 112A                         i2l18913 082E                         i2l18905 0774  
                       i2l18841 03CC                         i2l18833 02FA                         i2l18825 02B4  
                       i2l18817 0246                         i2l18809 020A                         i2l18667 1C34  
                       i2l18587 1D42                         i2l18595 19F4                         i2l18923 1146  
                       i2l18915 0848                         i2l18907 078C                         i2l18851 0436  
                       i2l18843 03E0                         i2l18827 02BC                         i2l18835 030E  
                       i2l18819 028A                         i2l18771 14F4                         i2l18597 19F6  
                       i2l18589 19E0                         i2l18925 1152                         i2l18917 0856  
                       i2l18909 07A8                         i2l18853 043E                         i2l18861 04E0  
                       i2l18845 03F2                         i2l18837 0356                         i2l18829 02D4  
                       i2l18781 0126                         i2l18773 14FC                         i2l18765 14E4  
                       i2l18599 1A06                         i2l18927 119C                         i2l18919 0884  
                       i2l18871 0534                         i2l18863 04F2                         i2l18855 0476  
                       i2l18847 0414                         i2l18839 038E                         i2l18791 016A  
                       i2l18783 012E                         i2l18775 14FE                         i2l18767 14EC  
                       i2l18929 11AE                         i2l18881 05C0                         i2l18873 056C  
                       i2l18857 048A                         i2l18849 0428                         i2l18865 050A  
                       i2l18785 0130                         i2l18793 0182                         i2l18777 1504  
                       i2l18769 14EE                         i2l18891 066E                         i2l18875 058A  
                       i2l18883 05D2                         i2l18867 0518                         i2l18859 049C  
                       i2l18795 018A                         i2l18787 0146                         i2l18779 00D6  
                       i2l18893 0674                         i2l18885 061C                         i2l18877 05A0  
                       i2l18869 052C                         i2l18797 018E                         i2l18789 0156  
                       i2l18895 0690                         i2l18879 05B0                         i2l18887 061E  
                       i2l18799 01A0                         i2l18897 069C                         i2l18889 0658  
                       i2l18899 06DE                         _INTCON2 000FF1                      ??i1_memcpy 0007  
                       _INTCON3 000FF0                         _GO_DONE 007E11                      ??i2_memcpy 0038  
                       _TBLPTRH 000FF7                         _TBLPTRL 000FF6                         _PREINC0 000FEC  
                       _PREINC1 000FE4                         _PREINC2 000FDC                         _TBLPTRU 000FF8  
                       _OSCTUNE 000F9B                         _PWM1CON 000FB7                         _SSP1ADD 000FC8  
                       _SSP2ADD 000F88                         _NOT_BOR 007E80                         _NOT_RC8 007D5E  
                       _SSP1BUF 000FC9                         _SSP2BUF 000F8E                         _NOT_SS1 007C05  
                       _NOT_SS2 007C1B                         _NOT_POR 007E81                         _NOT_TX8 007D66  
                       _PSPMODE 007CB4                   i2_in_high_int 1D36                         _SSPCON1 000FC6  
                       _SSPCON2 000FC5                         _STKPTR0 007FE0                         _STKPTR1 007FE1  
                       _STKPTR2 007FE2                         _STKPTR3 007FE3                         _STKPTR4 007FE4  
                       _ULPWUIN 007C00                         _SSPSTAT 000FC7                         _TOUTPS0 007E53  
                       _TOUTPS1 007E54                         _TOUTPS2 007E55                         _TOUTPS3 007E56  
           __size_of_ReadTimer1 0012               __end_of_check_msg 1AD8                       _I2C_READ2 007C3A  
                     _I2C_STOP2 007C3C                       ?_init_i2c 00D6                     _SleepIfOkay 164C  
                       _ReadADC 1D44                       ?_recv_msg 01A6                         _OpenADC 15C8  
                    _in_low_int 17F6                    _handle_start 0F80                         __Hparam 0000  
           __size_of_SetChanADC 001C                         _nT1SYNC 007E6A                       ?_send_msg 000B  
                       __Lparam 0000      __end_of_timer0_int_handler 11EA                init_uart_recv@uc 00D6  
                       _nWRITE2 007C3A                       _CMCONbits 000FB4                 __CFG_STVREN$OFF 000000  
                       __pcinit 1B9A                 __size_of_memcpy 0056        __size_of_adc_int_handler 002A  
                    _init_queue 1542                         __ramtop 0400             __size_of_OpenTimer1 003E  
                       __ptext0 0898                         __ptext1 1D5A                         __ptext2 1CBE  
                       __ptext3 1794                         __ptext4 1730                         __ptext5 16C2  
                       __ptext6 1A24                         __ptext7 1C36                         __ptext8 12A0  
                       __ptext9 1056                       _T0CONbits 000FD5                         _in_main 1854  
                     _T1CONbits 000FCD                       _T2CONbits 000FCA             __end_of_WriteTimer0 1D36  
           __end_of_WriteTimer1 1D24                  ?i2_in_high_int 0032                  OpenADC@config2 00D7  
                __pintcode_body 14B8    __end_of_FromMainHigh_recvmsg 1BEA            end_of_initialization 1BBC  
       timer1_lthread@msgbuffer 00DC                       _PEIE_GIEL 007F96  __size_of_uart_recv_int_handler 00B6  
                       memcpy@d 01A2                         memcpy@n 00DA                         memcpy@s 01A4  
 __end_of_uart_recv_int_handler 12A0                      ??_init_i2c 00D8     i2c_int_handler@data_written 00BF  
                       int_func 14B8                   ?_uart_lthread 00D6         __size_of_init_uart_recv 001A  
              ?_i2c_int_handler 0001                    ??i2_recv_msg 0043                      ??_recv_msg 00DC  
                  ??i2_send_msg 0042                      ??_send_msg 0011            adc_int_handler@value 001D  
    __end_of_timer1_int_handler 1AA0                       _RCSTAbits 000FAB                         postdec2 000FDD  
                       postinc0 000FEE                         postinc2 000FDE       ToMainHigh_sendmsg@msgtype 00B7  
                     _PORTAbits 000F80                       _PORTBbits 000F81                       _PORTCbits 000F82  
                     _PORTDbits 000F83                       _PORTEbits 000F84                       _TRISAbits 000F92  
                     _TRISBbits 000F93                       _TRISCbits 000F94                       _TRISDbits 000F95  
                     _TRISEbits 000F96              __end_ofi2_recv_msg 0E6E              __end_ofi2_send_msg 14B8  
                  ??_ConvertADC 00D6                       _CapStatus 004A   FromMainHigh_recvmsg@maxlength 00BB  
      timer1_int_handler@result 001F                  ??_uart_lthread 00DE                     _CCP1CONbits 000FBD  
                   _CCP2CONbits 000FBA                       _TXSTAbits 000FAC                      main@length 01D0  
                   ?_in_low_int 00D8           timer0_lthread@msgtype 00D8           _start_i2c_slave_reply 0E6E  
  __size_of_i2c_configure_slave 0024            __size_ofi2_check_msg 0026        __end_of_enter_sleep_mode 1D68  
                  ??_ReadTimer1 0003                     _ECCP1ASbits 000FB6              _ToMainHigh_recvmsg 1B10  
                     i1memcpy@d 0007              _ToMainHigh_sendmsg 1C7E                       i1memcpy@n 0005  
                     i1memcpy@s 0009                     _BAUDCONbits 000FB8                  _timer0_lthread 1D50  
                   ?_init_queue 00D6                       i2memcpy@d 0038                     _BAUDCTLbits 000FB8  
                   _WriteTimer0 1D24                     _WriteTimer1 1D12                       i2memcpy@n 0036  
                     i2memcpy@s 003A              __end_of_ConvertADC 1D6C                  _timer1_lthread 1BEA  
                __end_of_memcpy 1902               _enable_interrupts 1D5A            __size_of_Delay1KTCYx 0014  
                     _nADDRESS2 007C3D                    ??_SetChanADC 00D7             ?_ToMainHigh_recvmsg 01B2  
               ??i2_in_high_int 0034        i2c_int_handler@data_read 00C4             ?_ToMainHigh_sendmsg 00B6  
            ?_enable_interrupts 0001             start_initialization 1B9A                   ??_in_high_int 00D8  
                     _ReadUSART 1AD8               ??_adc_int_handler 001B               __size_ofi1_memcpy 0048  
             __size_ofi2_memcpy 0048             ??_enable_interrupts 00D6                    ??_OpenTimer1 00D7  
__size_of_block_on_To_msgqueues 00D4              __end_of_ReadTimer1 1D12   __end_of_block_on_To_msgqueues 112A  
                     _OpenUSART 12A0    __end_of_InterruptHandlerHigh 1542                      init_i2c@ic 00D6  
          ??_ToMainHigh_recvmsg 00DE            ??_ToMainHigh_sendmsg 0048              __end_of_SetChanADC 1CBE  
        __end_of_timer0_lthread 1D5A        i2c_int_handler@error_buf 00BC          __end_of_timer1_lthread 1C10  
     __end_of_enable_interrupts 1D62                        ??_memcpy 00DC           timer1_lthread@msgtype 00D8  
          _FromMainHigh_recvmsg 1BC2    __size_of_init_timer1_lthread 0064              __end_of_OpenTimer1 1A62  
      i2c_int_handler@msg_ready 00C3                     __pbssCOMRAM 0048          timer1_int_handler@temp 001D  
                    ?_ReadUSART 0001                   ??_init_queues 00DA                   __pcstackBANK0 00B6  
                 __pcstackBANK1 01A2             __size_of_in_low_int 005E        start_i2c_slave_reply@msg 00D7  
           __CFG_CCP2MX$DEFAULT 000000                 Delay1KTCYx@unit 00D6        ToMainLow_sendmsg@msgtype 0018  
  __size_of_InterruptHandlerLow 00BA             __end_of_in_high_int 1CEC                      ?_OpenUSART 00D6  
                  ?_SleepIfOkay 0001           ToMainLow_recvmsg@data 01B5                    _ToMainLow_MQ 0080  
           __size_of_init_queue 0086                  _init_uart_recv 1CBE                        ?_ReadADC 0001  
                     _check_msg 1AA0                       __pnvBANK0 00DE          ?_start_i2c_slave_reply 00D6  
             __size_of_init_i2c 0062               OpenADC@portconfig 00D8                        ?_OpenADC 00D6  
                  recv_msg@data 01AB                    recv_msg@qmsg 01B0                    recv_msg@slot 01AD  
                  recv_msg@qptr 01A6               __size_of_recv_msg 0140                       __pintcode 0008  
             __size_of_send_msg 00B2                 ?_timer0_lthread 00D6           ?_FromMainHigh_recvmsg 00BB  
               ?_timer1_lthread 00D6                     __pintcodelo 0018          ToMainHigh_recvmsg@data 01B5  
          __end_of_uart_lthread 1950                        _I2C_DAT2 007C3D      i2c_int_handler@msg_to_send 00C2  
                      ?_in_main 00DA               WriteTimer0@timer0 0032                        _ECCP1DEL 000FB7  
                      _ECCP1CON 000FBD                        _CCP2_PA2 007C0B                        _ACKSTAT1 007E2E  
                      _ACKSTAT2 007C2E              _timer0_int_handler 112A               WriteTimer1@timer1 0001  
           uart_lthread@msgtype 00D8           ToMainLow_sendmsg@data 0019                        _DDRAbits 000F92  
                      _DDRBbits 000F93                        _DDRCbits 000F94                        _DDRDbits 000F95  
                      _DDREbits 000F96             ?_timer0_int_handler 0001                        _GIE_GIEH 007F97  
                      _T1INSYNC 007E6A                uart_lthread@uptr 00D6          __end_of_init_uart_recv 1CD8  
           __end_of_init_queues 1730                        _NEGATIVE 007EC4                        _T2OUTPS0 007E53  
                      _T2OUTPS1 007E54                        _T2OUTPS2 007E55                        _T2OUTPS3 007E56  
                 OpenADC@config 00D6                        _LATAbits 000F89                        _LATBbits 000F8A  
                      _LATCbits 000F8B                        _LATDbits 000F8C                        _LATEbits 000F8D  
               i2check_msg@qptr 0032                      ?_check_msg 00D6                        _IPR1bits 000F9F  
                      _IPR2bits 000FA2                        _PIE1bits 000F9D                        _IPR3bits 000FA5  
                      _PIE2bits 000FA0                        _PIE3bits 000FA3                   ?i2_in_low_int 0034  
                      i1u163_20 1AE4                        i1u163_21 1AE2                        i1u164_20 1AEE  
                      i1u180_20 0074                        i1u164_21 1AEC                        i1u180_21 0072  
                      i1u173_20 1994                        i1u165_20 1AFA                        i1u181_20 0084  
                      i1u173_21 1992                        i1u165_21 1AF8                        i1u181_21 0082  
                      i1u166_20 1B04                        i1u166_21 1B02                        i1u175_20 138C  
                      i1u175_21 138A                        i1u176_20 11F2                        i1u176_21 11F0  
                      i2u200_40 0534                        i2u200_41 0532                        i1u177_20 123C  
                      i1u177_21 123A                        i2u201_40 058A                        i2u201_41 0588  
                      i1u178_20 127C                        i1u178_21 127A                        i2u130_40 1668  
                      i2u210_40 1134                        i2u202_40 0658                        i2u130_41 1666  
                      i2u210_41 1130                        i2u202_41 0656                        i1u179_20 0064  
                      i1u179_21 0062                        i2u210_46 1136                        i2u131_40 167C  
                      i2u211_40 11AE                        i2u203_40 0666                        i2u131_41 167A  
                      i2u211_41 11AC                        i2u203_41 0664                        i2u220_40 19DC  
                      i2u132_40 169A                        i2u204_40 066E                        i2u220_41 19DA  
                      i2u132_41 1698                        i2u204_41 066C                        i2u133_40 16B8  
                      i2u205_40 0690                        i2u133_41 16B6                        i2u205_41 068E  
                      i2u206_40 069C                        i2u206_41 069A                        i2u207_40 06EC  
                      i2u207_41 06EA                        i2u160_40 0FB6                        i2u208_40 07A8  
                      i2u160_41 0FB4                        i2u208_41 07A6                        i2u217_40 143E  
                      i2u161_40 0FBE                        i2u129_40 1654                        i2u209_40 0856  
                      i2u217_41 143C                        i2u161_41 0FBC                        i2u129_41 1652  
                      i2u209_41 0854                        i2u218_40 0D9A                        i2u162_40 1008  
                      i2u218_41 0D98                        i2u162_41 1006                        i2u219_40 0DB6  
                      i2u219_41 0DB4                        i2u190_40 022C                        i2u182_40 14EC  
                      i2u190_41 022A                        i2u182_41 14EA                        i2u191_40 0234  
                      i2u183_40 14FC                        i2u191_41 0232                        i2u183_41 14FA  
                      i2u168_40 19E8                        i2u192_40 0298                        i2u184_40 012E  
                      i2u168_41 19E6                        i2u192_41 0296                        i2u184_41 012C  
                      i2u169_40 1A06                        i2u193_40 02B4                        i2u185_40 018A  
                      i2u169_41 1A04                        i2u193_41 02B2                        i2u185_41 0188  
                      _PIR1bits 000F9E                        i2u194_40 02BC                        i2u186_40 01AC  
                      i2u194_41 02BA                        i2u186_41 01AA                        i2u195_40 038E  
                      i2u187_40 01B8                        i2u195_41 038C                        i2u187_41 01B6  
                      _PIR2bits 000FA1                        i2u196_40 0414                        i2u188_40 01DC  
                      i2u196_41 0412                        i2u188_41 01DA                        i2u197_40 0436  
                      i2u189_40 020A                        i2u197_41 0434                        i2u189_41 0208  
                      _PIR3bits 000FA4                        i2u198_40 043E                        i2u198_41 043C  
                      i2u199_40 0518                        i2u199_41 0516          ToMainHigh_sendmsg@data 00B8  
                      _GO_nDONE 007E11                        _RCONbits 000FD0                __CFG_WDTPS$32768 000000  
                      _OVERFLOW 007EC3                        _POSTDEC0 000FED                        _POSTDEC1 000FE5  
                      _POSTDEC2 000FDD                        _NOT_DONE 007E11                        _SSP1CON1 000FC6  
                      _SSP1CON2 000FC5                        _SSP2CON1 000F86                        _SSP2CON2 000F85  
                      _POSTINC0 000FEE                        _POSTINC1 000FE6                        _POSTINC2 000FDE  
                      _NOT_RBPU 007F8F            ??_timer0_int_handler 00C0                        _SSP1STAT 000FC7  
                      _SSP2STAT 000F87      __size_of_enable_interrupts 0008                      _ADCON0bits 000FC2  
                    _ADCON1bits 000FC1                      _ADCON2bits 000FC0            timer0_lthread@length 00DA  
            _timer1_int_handler 1A62                        i1_memcpy 1950            _InterruptHandlerHigh 0008  
                   ??_ReadUSART 0001                        i2_memcpy 1998            timer0_lthread@msgval 01A2  
      FromMainHigh_recvmsg@data 00BE                      _I2C_START2 007C3B                     _in_high_int 1CD8  
                  send_msg@data 000F             _i2c_configure_slave 1C36                    send_msg@qmsg 0015  
                  send_msg@slot 0014                    send_msg@qptr 000B                     _INTCON2bits 000FF1  
                   _INTCON3bits 000FF0           uart_lthread@msgbuffer 00DC             ?_timer1_int_handler 0001  
               ?_init_uart_recv 00D6                     ??_OpenUSART 00D9                 OpenUSART@config 00D6  
                    _EECON1bits 000FA6                  ??i2_in_low_int 0036           _uart_recv_int_handler 11EA  
                  ??_in_low_int 00DA                __size_of_ReadADC 000C                     _READ_WRITE2 007C3A  
                      __Hrparam 0000                __size_of_OpenADC 0084            ?_i2c_configure_slave 00D6  
                      __Lrparam 0000               ?_enter_sleep_mode 0001          ??_FromMainHigh_recvmsg 0045  
          ??_timer1_int_handler 001B                 _adc_int_handler 1B70        __size_of_i2c_int_handler 07C2  
            ??_enter_sleep_mode 0032                    ??_init_queue 00D8                    ?_WriteTimer0 0032  
                  ?_WriteTimer1 0001         ToMainLow_sendmsg@length 0017               main@t0thread_data 01BA  
         ?_InterruptHandlerHigh 0001                     _GO_NOT_DONE 007E11                __size_of_in_main 0058  
             i2send_msg@msgtype 003F     ToMainHigh_recvmsg@maxlength 01B2               i2send_msg@tlength 0043  
       init_timer1_lthread@tptr 00DB                     _init_queues 16C2              __end_of_in_low_int 1854  
                      __ptext10 1854                        __ptext11 17F6                        __ptext20 0C1A  
                      __ptext12 1CD8                        __ptext21 18AC                        __ptext13 1B10  
                      __ptext30 11EA                        __ptext22 1AA0                        __ptext14 1D50  
                      __ptext31 1C5A                        __ptext23 1CEC                        __ptext15 0E6E  
                      __ptext40 112A                        __ptext32 1354                        __ptext24 15C8  
                      __ptext16 1B40                        __ptext41 164C                        __ptext33 1AD8  
                      __ptext25 1CA2                        __ptext17 1BEA                        __ptext50 0D5A  
                      __ptext42 1C7E                        __ptext34 1D00                        __ptext26 1D68  
                      __ptext18 1902                        __ptext51 1C10                        __ptext43 1BC2  
                      __ptext35 1D12                        __ptext19 1542                        __ptext52 1998  
                      __ptext44 1D62                        __ptext36 1D44                        __ptext28 1A62  
                      __ptext53 0000                        __ptext45 0F80                        __ptext37 1950  
                      __ptext29 1B70                        __ptext46 1D24                        __ptext47 19E0  
                      __ptext39 00D6                        __ptext48 1D36                        __ptext49 1406  
                  _SSP1CON1bits 000FC6                    _SSP1CON2bits 000FC5                    _SSP2CON1bits 000F86  
                  _SSP2CON2bits 000F85              uart_lthread@length 00DA        timer0_int_handler@length 00C4  
                      _init_i2c 1794             _init_timer1_lthread 1730                   __size_of_main 0382  
                 ??i2_check_msg 0034               main@t1thread_data 01C8                     ??_check_msg 00D8  
            __end_of_init_queue 15C8            __size_of_SleepIfOkay 0076                        _recv_msg 0C1A  
         ??_i2c_configure_slave 00D7                        _send_msg 1354                  init_queue@qptr 00D6  
                    _CVRCONbits 000FB5           __size_of_uart_lthread 004E                  i2recv_msg@data 0041  
                i2recv_msg@qmsg 00B9                   ??_Delay1KTCYx 00D7                  i2recv_msg@slot 00B6  
                i2recv_msg@qptr 003C                    _SSP1STATbits 000FC7             _InterruptHandlerLow 0018  
          ?_init_timer1_lthread 00DB                    _SSP2STATbits 000F87                     _OSCTUNEbits 000F9B  
                    _INTCONbits 000FF2                     _PWM1CONbits 000FB7                  OpenUSART@spbrg 00D7  
                      memcpy@d1 00D6                        memcpy@s1 00D8           __end_ofi2_in_high_int 1D44  
  i2c_int_handler@overrun_error 00C0                i2send_msg@length 003E                        intlevel1 0000  
                      intlevel2 0000            ?_InterruptHandlerLow 0001         ??_start_i2c_slave_reply 00D9  
                   _SSP1ADDbits 000FC8                     _SSP2ADDbits 000F88          ?_uart_recv_int_handler 0001  
                  _uart_lthread 1902               SetChanADC@channel 00D6                      _RCSTA1bits 000FAB  
         _block_on_To_msgqueues 1056                   ?_handle_start 0032                ??_timer0_lthread 00DE  
   __size_of_ToMainHigh_recvmsg 0030         __end_of_adc_int_handler 1B9A     __size_of_ToMainHigh_sendmsg 0024  
                    _OSCCONbits 000FD3                ??_timer1_lthread 01A2        ToMainHigh_sendmsg@length 00B6  
           __end_ofi2_check_msg 1C36           ??_init_timer1_lthread 01A2          ??_InterruptHandlerHigh 00C8  
             _ToMainLow_recvmsg 1B40               _ToMainLow_sendmsg 1C5A              main@last_reg_recvd 01C7  
                    _NOT_T1SYNC 007E6A            __end_ofi2_in_low_int 1A24              ?_ToMainLow_recvmsg 01B2  
           __end_of_Delay1KTCYx 1D00               ??_i2c_int_handler 00BA              ?_ToMainLow_sendmsg 0017  
                   _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5                      _WDTCONbits 000FD1  
                i2send_msg@data 0040           ??_InterruptHandlerLow 0021             ??_ToMainLow_recvmsg 00DE  
                i2send_msg@qmsg 0046                  i2send_msg@slot 0045                  i2send_msg@qptr 003C  
           ??_ToMainLow_sendmsg 001B                      _SSPADDbits 000FC8                      _STATUSbits 000FD8  
                ??_handle_start 0033                    _USART_Status 004C  
