

Microchip Technology PIC18 LITE Macro Assembler V1.10 build 47796 
                                                                                               Tue Sep 25 13:45:14 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 47796
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 47796"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	18F45J10
     8  0000                     porta	equ	0F80h
     9  0000                     portb	equ	0F81h
    10  0000                     portc	equ	0F82h
    11  0000                     portd	equ	0F83h
    12  0000                     porte	equ	0F84h
    13  0000                     lata	equ	0F89h
    14  0000                     latb	equ	0F8Ah
    15  0000                     latc	equ	0F8Bh
    16  0000                     latd	equ	0F8Ch
    17  0000                     late	equ	0F8Dh
    18  0000                     trisa	equ	0F92h
    19  0000                     trisb	equ	0F93h
    20  0000                     trisc	equ	0F94h
    21  0000                     trisd	equ	0F95h
    22  0000                     trise	equ	0F96h
    23  0000                     pie1	equ	0F9Dh
    24  0000                     pir1	equ	0F9Eh
    25  0000                     ipr1	equ	0F9Fh
    26  0000                     pie2	equ	0FA0h
    27  0000                     pir2	equ	0FA1h
    28  0000                     ipr2	equ	0FA2h
    29  0000                     t3con	equ	0FB1h
    30  0000                     tmr3l	equ	0FB2h
    31  0000                     tmr3h	equ	0FB3h
    32  0000                     ccp1con	equ	0FBDh
    33  0000                     ccpr1l	equ	0FBEh
    34  0000                     ccpr1h	equ	0FBFh
    35  0000                     adcon1	equ	0FC1h
    36  0000                     adcon0	equ	0FC2h
    37  0000                     adresl	equ	0FC3h
    38  0000                     adresh	equ	0FC4h
    39  0000                     sspcon2	equ	0FC5h
    40  0000                     sspcon1	equ	0FC6h
    41  0000                     sspstat	equ	0FC7h
    42  0000                     sspadd	equ	0FC8h
    43  0000                     sspbuf	equ	0FC9h
    44  0000                     t2con	equ	0FCAh
    45  0000                     pr2	equ	0FCBh
    46  0000                     tmr2	equ	0FCCh
    47  0000                     t1con	equ	0FCDh
    48  0000                     tmr1l	equ	0FCEh
    49  0000                     tmr1h	equ	0FCFh
    50  0000                     rcon	equ	0FD0h
    51  0000                     wdtcon	equ	0FD1h
    52  0000                     lvdcon	equ	0FD2h
    53  0000                     osccon	equ	0FD3h
    54  0000                     t0con	equ	0FD5h
    55  0000                     tmr0l	equ	0FD6h
    56  0000                     tmr0h	equ	0FD7h
    57  0000                     status	equ	0FD8h
    58  0000                     fsr2	equ	0FD9h
    59  0000                     fsr2l	equ	0FD9h
    60  0000                     fsr2h	equ	0FDAh
    61  0000                     plusw2	equ	0FDBh
    62  0000                     preinc2	equ	0FDCh
    63  0000                     postdec2	equ	0FDDh
    64  0000                     postinc2	equ	0FDEh
    65  0000                     indf2	equ	0FDFh
    66  0000                     bsr	equ	0FE0h
    67  0000                     fsr1	equ	0FE1h
    68  0000                     fsr1l	equ	0FE1h
    69  0000                     fsr1h	equ	0FE2h
    70  0000                     plusw1	equ	0FE3h
    71  0000                     preinc1	equ	0FE4h
    72  0000                     postdec1	equ	0FE5h
    73  0000                     postinc1	equ	0FE6h
    74  0000                     indf1	equ	0FE7h
    75  0000                     wreg	equ	0FE8h
    76  0000                     fsr0	equ	0FE9h
    77  0000                     fsr0l	equ	0FE9h
    78  0000                     fsr0h	equ	0FEAh
    79  0000                     plusw0	equ	0FEBh
    80  0000                     preinc0	equ	0FECh
    81  0000                     postdec0	equ	0FEDh
    82  0000                     postinc0	equ	0FEEh
    83  0000                     indf0	equ	0FEFh
    84  0000                     intcon3	equ	0FF0h
    85  0000                     intcon2	equ	0FF1h
    86  0000                     intcon	equ	0FF2h
    87  0000                     prod	equ	0FF3h
    88  0000                     prodl	equ	0FF3h
    89  0000                     prodh	equ	0FF4h
    90  0000                     tablat	equ	0FF5h
    91  0000                     tblptr	equ	0FF6h
    92  0000                     tblptrl	equ	0FF6h
    93  0000                     tblptrh	equ	0FF7h
    94  0000                     tblptru	equ	0FF8h
    95  0000                     pcl	equ	0FF9h
    96  0000                     pclat	equ	0FFAh
    97  0000                     pclath	equ	0FFAh
    98  0000                     pclatu	equ	0FFBh
    99  0000                     stkptr	equ	0FFCh
   100  0000                     tosl	equ	0FFDh
   101  0000                     tosh	equ	0FFEh
   102  0000                     tosu	equ	0FFFh
   103                           skipnz macro
   104                           	btfsc	status,2
   105  0000                     	endm
   106                           	global	__ramtop
   107                           	global	__accesstop
   108                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   109  0000                     PORTA equ 0F80h ;# 
   110                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   111  0000                     PORTB equ 0F81h ;# 
   112                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   113  0000                     PORTC equ 0F82h ;# 
   114                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   115  0000                     PORTD equ 0F83h ;# 
   116                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   117  0000                     PORTE equ 0F84h ;# 
   118                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   119  0000                     SSP2CON2 equ 0F85h ;# 
   120                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   121  0000                     SSP2CON1 equ 0F86h ;# 
   122                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   123  0000                     SSP2STAT equ 0F87h ;# 
   124                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   125  0000                     SSP2ADD equ 0F88h ;# 
   126                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   127  0000                     LATA equ 0F89h ;# 
   128                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   129  0000                     LATB equ 0F8Ah ;# 
   130                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   131  0000                     LATC equ 0F8Bh ;# 
   132                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   133  0000                     LATD equ 0F8Ch ;# 
   134                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   135  0000                     LATE equ 0F8Dh ;# 
   136                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   137  0000                     SSP2BUF equ 0F8Eh ;# 
   138                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   139  0000                     TRISA equ 0F92h ;# 
   140                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   141  0000                     DDRA equ 0F92h ;# 
   142                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   143  0000                     TRISB equ 0F93h ;# 
   144                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   145  0000                     DDRB equ 0F93h ;# 
   146                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   147  0000                     TRISC equ 0F94h ;# 
   148                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   149  0000                     DDRC equ 0F94h ;# 
   150                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   151  0000                     TRISD equ 0F95h ;# 
   152                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   153  0000                     DDRD equ 0F95h ;# 
   154                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   155  0000                     TRISE equ 0F96h ;# 
   156                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   157  0000                     DDRE equ 0F96h ;# 
   158                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   159  0000                     OSCTUNE equ 0F9Bh ;# 
   160                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   161  0000                     PIE1 equ 0F9Dh ;# 
   162                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   163  0000                     PIR1 equ 0F9Eh ;# 
   164                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   165  0000                     IPR1 equ 0F9Fh ;# 
   166                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   167  0000                     PIE2 equ 0FA0h ;# 
   168                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   169  0000                     PIR2 equ 0FA1h ;# 
   170                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   171  0000                     IPR2 equ 0FA2h ;# 
   172                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   173  0000                     PIE3 equ 0FA3h ;# 
   174                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   175  0000                     PIR3 equ 0FA4h ;# 
   176                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   177  0000                     IPR3 equ 0FA5h ;# 
   178                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   179  0000                     EECON1 equ 0FA6h ;# 
   180                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   181  0000                     EECON2 equ 0FA7h ;# 
   182                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   183  0000                     RCSTA equ 0FABh ;# 
   184                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   185  0000                     RCSTA1 equ 0FABh ;# 
   186                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   187  0000                     TXSTA equ 0FACh ;# 
   188                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   189  0000                     TXSTA1 equ 0FACh ;# 
   190                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   191  0000                     TXREG equ 0FADh ;# 
   192                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   193  0000                     TXREG1 equ 0FADh ;# 
   194                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   195  0000                     RCREG equ 0FAEh ;# 
   196                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   197  0000                     RCREG1 equ 0FAEh ;# 
   198                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   199  0000                     SPBRG equ 0FAFh ;# 
   200                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   201  0000                     SPBRG1 equ 0FAFh ;# 
   202                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   203  0000                     SPBRGH equ 0FB0h ;# 
   204                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   205  0000                     CMCON equ 0FB4h ;# 
   206                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   207  0000                     CVRCON equ 0FB5h ;# 
   208                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   209  0000                     ECCP1AS equ 0FB6h ;# 
   210                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   211  0000                     ECCP1DEL equ 0FB7h ;# 
   212                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   213  0000                     PWM1CON equ 0FB7h ;# 
   214                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   215  0000                     BAUDCON equ 0FB8h ;# 
   216                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   217  0000                     BAUDCTL equ 0FB8h ;# 
   218                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   219  0000                     CCP2CON equ 0FBAh ;# 
   220                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   221  0000                     CCPR2 equ 0FBBh ;# 
   222                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   223  0000                     CCPR2L equ 0FBBh ;# 
   224                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   225  0000                     CCPR2H equ 0FBCh ;# 
   226                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   227  0000                     ECCP1CON equ 0FBDh ;# 
   228                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   229  0000                     CCP1CON equ 0FBDh ;# 
   230                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   231  0000                     CCPR1 equ 0FBEh ;# 
   232                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   233  0000                     CCPR1L equ 0FBEh ;# 
   234                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   235  0000                     CCPR1H equ 0FBFh ;# 
   236                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   237  0000                     ADCON2 equ 0FC0h ;# 
   238                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   239  0000                     ADCON1 equ 0FC1h ;# 
   240                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   241  0000                     ADCON0 equ 0FC2h ;# 
   242                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   243  0000                     ADRES equ 0FC3h ;# 
   244                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   245  0000                     ADRESL equ 0FC3h ;# 
   246                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   247  0000                     ADRESH equ 0FC4h ;# 
   248                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   249  0000                     SSPCON2 equ 0FC5h ;# 
   250                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   251  0000                     SSP1CON2 equ 0FC5h ;# 
   252                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   253  0000                     SSPCON1 equ 0FC6h ;# 
   254                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   255  0000                     SSP1CON1 equ 0FC6h ;# 
   256                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   257  0000                     SSPSTAT equ 0FC7h ;# 
   258                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   259  0000                     SSP1STAT equ 0FC7h ;# 
   260                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   261  0000                     SSPADD equ 0FC8h ;# 
   262                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   263  0000                     SSP1ADD equ 0FC8h ;# 
   264                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   265  0000                     SSPBUF equ 0FC9h ;# 
   266                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   267  0000                     SSP1BUF equ 0FC9h ;# 
   268                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   269  0000                     T2CON equ 0FCAh ;# 
   270                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   271  0000                     PR2 equ 0FCBh ;# 
   272                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   273  0000                     MEMCON equ 0FCBh ;# 
   274                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   275  0000                     TMR2 equ 0FCCh ;# 
   276                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   277  0000                     T1CON equ 0FCDh ;# 
   278                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   279  0000                     TMR1 equ 0FCEh ;# 
   280                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   281  0000                     TMR1L equ 0FCEh ;# 
   282                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   283  0000                     TMR1H equ 0FCFh ;# 
   284                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   285  0000                     RCON equ 0FD0h ;# 
   286                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   287  0000                     WDTCON equ 0FD1h ;# 
   288                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   289  0000                     OSCCON equ 0FD3h ;# 
   290                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   291  0000                     T0CON equ 0FD5h ;# 
   292                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   293  0000                     TMR0 equ 0FD6h ;# 
   294                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   295  0000                     TMR0L equ 0FD6h ;# 
   296                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   297  0000                     TMR0H equ 0FD7h ;# 
   298                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   299  0000                     STATUS equ 0FD8h ;# 
   300                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   301  0000                     FSR2 equ 0FD9h ;# 
   302                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   303  0000                     FSR2L equ 0FD9h ;# 
   304                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   305  0000                     FSR2H equ 0FDAh ;# 
   306                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   307  0000                     PLUSW2 equ 0FDBh ;# 
   308                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   309  0000                     PREINC2 equ 0FDCh ;# 
   310                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   311  0000                     POSTDEC2 equ 0FDDh ;# 
   312                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   313  0000                     POSTINC2 equ 0FDEh ;# 
   314                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   315  0000                     INDF2 equ 0FDFh ;# 
   316                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   317  0000                     BSR equ 0FE0h ;# 
   318                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   319  0000                     FSR1 equ 0FE1h ;# 
   320                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   321  0000                     FSR1L equ 0FE1h ;# 
   322                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   323  0000                     FSR1H equ 0FE2h ;# 
   324                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   325  0000                     PLUSW1 equ 0FE3h ;# 
   326                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   327  0000                     PREINC1 equ 0FE4h ;# 
   328                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   329  0000                     POSTDEC1 equ 0FE5h ;# 
   330                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   331  0000                     POSTINC1 equ 0FE6h ;# 
   332                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   333  0000                     INDF1 equ 0FE7h ;# 
   334                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   335  0000                     WREG equ 0FE8h ;# 
   336                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   337  0000                     FSR0 equ 0FE9h ;# 
   338                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   339  0000                     FSR0L equ 0FE9h ;# 
   340                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   341  0000                     FSR0H equ 0FEAh ;# 
   342                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   343  0000                     PLUSW0 equ 0FEBh ;# 
   344                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   345  0000                     PREINC0 equ 0FECh ;# 
   346                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   347  0000                     POSTDEC0 equ 0FEDh ;# 
   348                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   349  0000                     POSTINC0 equ 0FEEh ;# 
   350                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   351  0000                     INDF0 equ 0FEFh ;# 
   352                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   353  0000                     INTCON3 equ 0FF0h ;# 
   354                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   355  0000                     INTCON2 equ 0FF1h ;# 
   356                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   357  0000                     INTCON equ 0FF2h ;# 
   358                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   359  0000                     PROD equ 0FF3h ;# 
   360                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   361  0000                     PRODL equ 0FF3h ;# 
   362                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   363  0000                     PRODH equ 0FF4h ;# 
   364                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   365  0000                     TABLAT equ 0FF5h ;# 
   366                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   367  0000                     TBLPTR equ 0FF6h ;# 
   368                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   369  0000                     TBLPTRL equ 0FF6h ;# 
   370                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   371  0000                     TBLPTRH equ 0FF7h ;# 
   372                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   373  0000                     TBLPTRU equ 0FF8h ;# 
   374                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   375  0000                     PCLAT equ 0FF9h ;# 
   376                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   377  0000                     PC equ 0FF9h ;# 
   378                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   379  0000                     PCL equ 0FF9h ;# 
   380                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   381  0000                     PCLATH equ 0FFAh ;# 
   382                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   383  0000                     PCLATU equ 0FFBh ;# 
   384                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   385  0000                     STKPTR equ 0FFCh ;# 
   386                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   387  0000                     TOS equ 0FFDh ;# 
   388                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   389  0000                     TOSL equ 0FFDh ;# 
   390                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   391  0000                     TOSH equ 0FFEh ;# 
   392                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   393  0000                     TOSU equ 0FFFh ;# 
   394                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   395  0000                     PORTA equ 0F80h ;# 
   396                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   397  0000                     PORTB equ 0F81h ;# 
   398                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   399  0000                     PORTC equ 0F82h ;# 
   400                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   401  0000                     PORTD equ 0F83h ;# 
   402                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   403  0000                     PORTE equ 0F84h ;# 
   404                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   405  0000                     SSP2CON2 equ 0F85h ;# 
   406                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   407  0000                     SSP2CON1 equ 0F86h ;# 
   408                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   409  0000                     SSP2STAT equ 0F87h ;# 
   410                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   411  0000                     SSP2ADD equ 0F88h ;# 
   412                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   413  0000                     LATA equ 0F89h ;# 
   414                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   415  0000                     LATB equ 0F8Ah ;# 
   416                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   417  0000                     LATC equ 0F8Bh ;# 
   418                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   419  0000                     LATD equ 0F8Ch ;# 
   420                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   421  0000                     LATE equ 0F8Dh ;# 
   422                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   423  0000                     SSP2BUF equ 0F8Eh ;# 
   424                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   425  0000                     TRISA equ 0F92h ;# 
   426                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   427  0000                     DDRA equ 0F92h ;# 
   428                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   429  0000                     TRISB equ 0F93h ;# 
   430                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   431  0000                     DDRB equ 0F93h ;# 
   432                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   433  0000                     TRISC equ 0F94h ;# 
   434                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   435  0000                     DDRC equ 0F94h ;# 
   436                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   437  0000                     TRISD equ 0F95h ;# 
   438                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   439  0000                     DDRD equ 0F95h ;# 
   440                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   441  0000                     TRISE equ 0F96h ;# 
   442                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   443  0000                     DDRE equ 0F96h ;# 
   444                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   445  0000                     OSCTUNE equ 0F9Bh ;# 
   446                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   447  0000                     PIE1 equ 0F9Dh ;# 
   448                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   449  0000                     PIR1 equ 0F9Eh ;# 
   450                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   451  0000                     IPR1 equ 0F9Fh ;# 
   452                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   453  0000                     PIE2 equ 0FA0h ;# 
   454                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   455  0000                     PIR2 equ 0FA1h ;# 
   456                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   457  0000                     IPR2 equ 0FA2h ;# 
   458                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   459  0000                     PIE3 equ 0FA3h ;# 
   460                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   461  0000                     PIR3 equ 0FA4h ;# 
   462                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   463  0000                     IPR3 equ 0FA5h ;# 
   464                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   465  0000                     EECON1 equ 0FA6h ;# 
   466                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   467  0000                     EECON2 equ 0FA7h ;# 
   468                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   469  0000                     RCSTA equ 0FABh ;# 
   470                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   471  0000                     RCSTA1 equ 0FABh ;# 
   472                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   473  0000                     TXSTA equ 0FACh ;# 
   474                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   475  0000                     TXSTA1 equ 0FACh ;# 
   476                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   477  0000                     TXREG equ 0FADh ;# 
   478                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   479  0000                     TXREG1 equ 0FADh ;# 
   480                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   481  0000                     RCREG equ 0FAEh ;# 
   482                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   483  0000                     RCREG1 equ 0FAEh ;# 
   484                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   485  0000                     SPBRG equ 0FAFh ;# 
   486                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   487  0000                     SPBRG1 equ 0FAFh ;# 
   488                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   489  0000                     SPBRGH equ 0FB0h ;# 
   490                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   491  0000                     CMCON equ 0FB4h ;# 
   492                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   493  0000                     CVRCON equ 0FB5h ;# 
   494                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   495  0000                     ECCP1AS equ 0FB6h ;# 
   496                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   497  0000                     ECCP1DEL equ 0FB7h ;# 
   498                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   499  0000                     PWM1CON equ 0FB7h ;# 
   500                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   501  0000                     BAUDCON equ 0FB8h ;# 
   502                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   503  0000                     BAUDCTL equ 0FB8h ;# 
   504                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   505  0000                     CCP2CON equ 0FBAh ;# 
   506                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   507  0000                     CCPR2 equ 0FBBh ;# 
   508                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   509  0000                     CCPR2L equ 0FBBh ;# 
   510                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   511  0000                     CCPR2H equ 0FBCh ;# 
   512                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   513  0000                     ECCP1CON equ 0FBDh ;# 
   514                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   515  0000                     CCP1CON equ 0FBDh ;# 
   516                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   517  0000                     CCPR1 equ 0FBEh ;# 
   518                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   519  0000                     CCPR1L equ 0FBEh ;# 
   520                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   521  0000                     CCPR1H equ 0FBFh ;# 
   522                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   523  0000                     ADCON2 equ 0FC0h ;# 
   524                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   525  0000                     ADCON1 equ 0FC1h ;# 
   526                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   527  0000                     ADCON0 equ 0FC2h ;# 
   528                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   529  0000                     ADRES equ 0FC3h ;# 
   530                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   531  0000                     ADRESL equ 0FC3h ;# 
   532                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   533  0000                     ADRESH equ 0FC4h ;# 
   534                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   535  0000                     SSPCON2 equ 0FC5h ;# 
   536                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   537  0000                     SSP1CON2 equ 0FC5h ;# 
   538                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   539  0000                     SSPCON1 equ 0FC6h ;# 
   540                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   541  0000                     SSP1CON1 equ 0FC6h ;# 
   542                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   543  0000                     SSPSTAT equ 0FC7h ;# 
   544                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   545  0000                     SSP1STAT equ 0FC7h ;# 
   546                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   547  0000                     SSPADD equ 0FC8h ;# 
   548                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   549  0000                     SSP1ADD equ 0FC8h ;# 
   550                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   551  0000                     SSPBUF equ 0FC9h ;# 
   552                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   553  0000                     SSP1BUF equ 0FC9h ;# 
   554                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   555  0000                     T2CON equ 0FCAh ;# 
   556                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   557  0000                     PR2 equ 0FCBh ;# 
   558                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   559  0000                     MEMCON equ 0FCBh ;# 
   560                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   561  0000                     TMR2 equ 0FCCh ;# 
   562                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   563  0000                     T1CON equ 0FCDh ;# 
   564                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   565  0000                     TMR1 equ 0FCEh ;# 
   566                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   567  0000                     TMR1L equ 0FCEh ;# 
   568                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   569  0000                     TMR1H equ 0FCFh ;# 
   570                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   571  0000                     RCON equ 0FD0h ;# 
   572                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   573  0000                     WDTCON equ 0FD1h ;# 
   574                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   575  0000                     OSCCON equ 0FD3h ;# 
   576                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   577  0000                     T0CON equ 0FD5h ;# 
   578                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   579  0000                     TMR0 equ 0FD6h ;# 
   580                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   581  0000                     TMR0L equ 0FD6h ;# 
   582                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   583  0000                     TMR0H equ 0FD7h ;# 
   584                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   585  0000                     STATUS equ 0FD8h ;# 
   586                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   587  0000                     FSR2 equ 0FD9h ;# 
   588                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   589  0000                     FSR2L equ 0FD9h ;# 
   590                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   591  0000                     FSR2H equ 0FDAh ;# 
   592                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   593  0000                     PLUSW2 equ 0FDBh ;# 
   594                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   595  0000                     PREINC2 equ 0FDCh ;# 
   596                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   597  0000                     POSTDEC2 equ 0FDDh ;# 
   598                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   599  0000                     POSTINC2 equ 0FDEh ;# 
   600                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   601  0000                     INDF2 equ 0FDFh ;# 
   602                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   603  0000                     BSR equ 0FE0h ;# 
   604                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   605  0000                     FSR1 equ 0FE1h ;# 
   606                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   607  0000                     FSR1L equ 0FE1h ;# 
   608                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   609  0000                     FSR1H equ 0FE2h ;# 
   610                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   611  0000                     PLUSW1 equ 0FE3h ;# 
   612                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   613  0000                     PREINC1 equ 0FE4h ;# 
   614                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   615  0000                     POSTDEC1 equ 0FE5h ;# 
   616                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   617  0000                     POSTINC1 equ 0FE6h ;# 
   618                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   619  0000                     INDF1 equ 0FE7h ;# 
   620                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   621  0000                     WREG equ 0FE8h ;# 
   622                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   623  0000                     FSR0 equ 0FE9h ;# 
   624                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   625  0000                     FSR0L equ 0FE9h ;# 
   626                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   627  0000                     FSR0H equ 0FEAh ;# 
   628                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   629  0000                     PLUSW0 equ 0FEBh ;# 
   630                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   631  0000                     PREINC0 equ 0FECh ;# 
   632                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   633  0000                     POSTDEC0 equ 0FEDh ;# 
   634                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   635  0000                     POSTINC0 equ 0FEEh ;# 
   636                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   637  0000                     INDF0 equ 0FEFh ;# 
   638                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   639  0000                     INTCON3 equ 0FF0h ;# 
   640                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   641  0000                     INTCON2 equ 0FF1h ;# 
   642                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   643  0000                     INTCON equ 0FF2h ;# 
   644                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   645  0000                     PROD equ 0FF3h ;# 
   646                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   647  0000                     PRODL equ 0FF3h ;# 
   648                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   649  0000                     PRODH equ 0FF4h ;# 
   650                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   651  0000                     TABLAT equ 0FF5h ;# 
   652                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   653  0000                     TBLPTR equ 0FF6h ;# 
   654                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   655  0000                     TBLPTRL equ 0FF6h ;# 
   656                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   657  0000                     TBLPTRH equ 0FF7h ;# 
   658                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   659  0000                     TBLPTRU equ 0FF8h ;# 
   660                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   661  0000                     PCLAT equ 0FF9h ;# 
   662                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   663  0000                     PC equ 0FF9h ;# 
   664                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   665  0000                     PCL equ 0FF9h ;# 
   666                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   667  0000                     PCLATH equ 0FFAh ;# 
   668                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   669  0000                     PCLATU equ 0FFBh ;# 
   670                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   671  0000                     STKPTR equ 0FFCh ;# 
   672                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   673  0000                     TOS equ 0FFDh ;# 
   674                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   675  0000                     TOSL equ 0FFDh ;# 
   676                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   677  0000                     TOSH equ 0FFEh ;# 
   678                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   679  0000                     TOSU equ 0FFFh ;# 
   680                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   681  0000                     PORTA equ 0F80h ;# 
   682                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   683  0000                     PORTB equ 0F81h ;# 
   684                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   685  0000                     PORTC equ 0F82h ;# 
   686                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   687  0000                     PORTD equ 0F83h ;# 
   688                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   689  0000                     PORTE equ 0F84h ;# 
   690                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   691  0000                     SSP2CON2 equ 0F85h ;# 
   692                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   693  0000                     SSP2CON1 equ 0F86h ;# 
   694                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   695  0000                     SSP2STAT equ 0F87h ;# 
   696                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   697  0000                     SSP2ADD equ 0F88h ;# 
   698                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   699  0000                     LATA equ 0F89h ;# 
   700                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   701  0000                     LATB equ 0F8Ah ;# 
   702                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   703  0000                     LATC equ 0F8Bh ;# 
   704                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   705  0000                     LATD equ 0F8Ch ;# 
   706                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   707  0000                     LATE equ 0F8Dh ;# 
   708                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   709  0000                     SSP2BUF equ 0F8Eh ;# 
   710                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   711  0000                     TRISA equ 0F92h ;# 
   712                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   713  0000                     DDRA equ 0F92h ;# 
   714                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   715  0000                     TRISB equ 0F93h ;# 
   716                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   717  0000                     DDRB equ 0F93h ;# 
   718                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   719  0000                     TRISC equ 0F94h ;# 
   720                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   721  0000                     DDRC equ 0F94h ;# 
   722                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   723  0000                     TRISD equ 0F95h ;# 
   724                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   725  0000                     DDRD equ 0F95h ;# 
   726                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   727  0000                     TRISE equ 0F96h ;# 
   728                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   729  0000                     DDRE equ 0F96h ;# 
   730                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   731  0000                     OSCTUNE equ 0F9Bh ;# 
   732                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   733  0000                     PIE1 equ 0F9Dh ;# 
   734                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   735  0000                     PIR1 equ 0F9Eh ;# 
   736                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   737  0000                     IPR1 equ 0F9Fh ;# 
   738                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   739  0000                     PIE2 equ 0FA0h ;# 
   740                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   741  0000                     PIR2 equ 0FA1h ;# 
   742                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   743  0000                     IPR2 equ 0FA2h ;# 
   744                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   745  0000                     PIE3 equ 0FA3h ;# 
   746                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   747  0000                     PIR3 equ 0FA4h ;# 
   748                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   749  0000                     IPR3 equ 0FA5h ;# 
   750                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   751  0000                     EECON1 equ 0FA6h ;# 
   752                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   753  0000                     EECON2 equ 0FA7h ;# 
   754                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   755  0000                     RCSTA equ 0FABh ;# 
   756                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   757  0000                     RCSTA1 equ 0FABh ;# 
   758                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   759  0000                     TXSTA equ 0FACh ;# 
   760                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   761  0000                     TXSTA1 equ 0FACh ;# 
   762                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   763  0000                     TXREG equ 0FADh ;# 
   764                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   765  0000                     TXREG1 equ 0FADh ;# 
   766                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   767  0000                     RCREG equ 0FAEh ;# 
   768                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   769  0000                     RCREG1 equ 0FAEh ;# 
   770                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   771  0000                     SPBRG equ 0FAFh ;# 
   772                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   773  0000                     SPBRG1 equ 0FAFh ;# 
   774                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   775  0000                     SPBRGH equ 0FB0h ;# 
   776                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   777  0000                     CMCON equ 0FB4h ;# 
   778                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   779  0000                     CVRCON equ 0FB5h ;# 
   780                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   781  0000                     ECCP1AS equ 0FB6h ;# 
   782                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   783  0000                     ECCP1DEL equ 0FB7h ;# 
   784                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   785  0000                     PWM1CON equ 0FB7h ;# 
   786                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   787  0000                     BAUDCON equ 0FB8h ;# 
   788                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   789  0000                     BAUDCTL equ 0FB8h ;# 
   790                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   791  0000                     CCP2CON equ 0FBAh ;# 
   792                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   793  0000                     CCPR2 equ 0FBBh ;# 
   794                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   795  0000                     CCPR2L equ 0FBBh ;# 
   796                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   797  0000                     CCPR2H equ 0FBCh ;# 
   798                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   799  0000                     ECCP1CON equ 0FBDh ;# 
   800                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   801  0000                     CCP1CON equ 0FBDh ;# 
   802                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   803  0000                     CCPR1 equ 0FBEh ;# 
   804                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   805  0000                     CCPR1L equ 0FBEh ;# 
   806                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   807  0000                     CCPR1H equ 0FBFh ;# 
   808                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   809  0000                     ADCON2 equ 0FC0h ;# 
   810                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   811  0000                     ADCON1 equ 0FC1h ;# 
   812                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   813  0000                     ADCON0 equ 0FC2h ;# 
   814                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   815  0000                     ADRES equ 0FC3h ;# 
   816                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   817  0000                     ADRESL equ 0FC3h ;# 
   818                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   819  0000                     ADRESH equ 0FC4h ;# 
   820                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   821  0000                     SSPCON2 equ 0FC5h ;# 
   822                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   823  0000                     SSP1CON2 equ 0FC5h ;# 
   824                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   825  0000                     SSPCON1 equ 0FC6h ;# 
   826                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   827  0000                     SSP1CON1 equ 0FC6h ;# 
   828                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   829  0000                     SSPSTAT equ 0FC7h ;# 
   830                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   831  0000                     SSP1STAT equ 0FC7h ;# 
   832                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   833  0000                     SSPADD equ 0FC8h ;# 
   834                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   835  0000                     SSP1ADD equ 0FC8h ;# 
   836                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   837  0000                     SSPBUF equ 0FC9h ;# 
   838                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   839  0000                     SSP1BUF equ 0FC9h ;# 
   840                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   841  0000                     T2CON equ 0FCAh ;# 
   842                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   843  0000                     PR2 equ 0FCBh ;# 
   844                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   845  0000                     MEMCON equ 0FCBh ;# 
   846                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   847  0000                     TMR2 equ 0FCCh ;# 
   848                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   849  0000                     T1CON equ 0FCDh ;# 
   850                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   851  0000                     TMR1 equ 0FCEh ;# 
   852                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   853  0000                     TMR1L equ 0FCEh ;# 
   854                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   855  0000                     TMR1H equ 0FCFh ;# 
   856                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   857  0000                     RCON equ 0FD0h ;# 
   858                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   859  0000                     WDTCON equ 0FD1h ;# 
   860                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   861  0000                     OSCCON equ 0FD3h ;# 
   862                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   863  0000                     T0CON equ 0FD5h ;# 
   864                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   865  0000                     TMR0 equ 0FD6h ;# 
   866                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   867  0000                     TMR0L equ 0FD6h ;# 
   868                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   869  0000                     TMR0H equ 0FD7h ;# 
   870                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   871  0000                     STATUS equ 0FD8h ;# 
   872                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   873  0000                     FSR2 equ 0FD9h ;# 
   874                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   875  0000                     FSR2L equ 0FD9h ;# 
   876                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   877  0000                     FSR2H equ 0FDAh ;# 
   878                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   879  0000                     PLUSW2 equ 0FDBh ;# 
   880                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   881  0000                     PREINC2 equ 0FDCh ;# 
   882                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   883  0000                     POSTDEC2 equ 0FDDh ;# 
   884                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   885  0000                     POSTINC2 equ 0FDEh ;# 
   886                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   887  0000                     INDF2 equ 0FDFh ;# 
   888                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   889  0000                     BSR equ 0FE0h ;# 
   890                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   891  0000                     FSR1 equ 0FE1h ;# 
   892                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   893  0000                     FSR1L equ 0FE1h ;# 
   894                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   895  0000                     FSR1H equ 0FE2h ;# 
   896                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   897  0000                     PLUSW1 equ 0FE3h ;# 
   898                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   899  0000                     PREINC1 equ 0FE4h ;# 
   900                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   901  0000                     POSTDEC1 equ 0FE5h ;# 
   902                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   903  0000                     POSTINC1 equ 0FE6h ;# 
   904                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   905  0000                     INDF1 equ 0FE7h ;# 
   906                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   907  0000                     WREG equ 0FE8h ;# 
   908                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   909  0000                     FSR0 equ 0FE9h ;# 
   910                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   911  0000                     FSR0L equ 0FE9h ;# 
   912                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   913  0000                     FSR0H equ 0FEAh ;# 
   914                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   915  0000                     PLUSW0 equ 0FEBh ;# 
   916                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   917  0000                     PREINC0 equ 0FECh ;# 
   918                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   919  0000                     POSTDEC0 equ 0FEDh ;# 
   920                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   921  0000                     POSTINC0 equ 0FEEh ;# 
   922                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   923  0000                     INDF0 equ 0FEFh ;# 
   924                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   925  0000                     INTCON3 equ 0FF0h ;# 
   926                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   927  0000                     INTCON2 equ 0FF1h ;# 
   928                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   929  0000                     INTCON equ 0FF2h ;# 
   930                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   931  0000                     PROD equ 0FF3h ;# 
   932                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   933  0000                     PRODL equ 0FF3h ;# 
   934                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   935  0000                     PRODH equ 0FF4h ;# 
   936                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   937  0000                     TABLAT equ 0FF5h ;# 
   938                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   939  0000                     TBLPTR equ 0FF6h ;# 
   940                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   941  0000                     TBLPTRL equ 0FF6h ;# 
   942                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   943  0000                     TBLPTRH equ 0FF7h ;# 
   944                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   945  0000                     TBLPTRU equ 0FF8h ;# 
   946                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   947  0000                     PCLAT equ 0FF9h ;# 
   948                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   949  0000                     PC equ 0FF9h ;# 
   950                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   951  0000                     PCL equ 0FF9h ;# 
   952                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   953  0000                     PCLATH equ 0FFAh ;# 
   954                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   955  0000                     PCLATU equ 0FFBh ;# 
   956                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   957  0000                     STKPTR equ 0FFCh ;# 
   958                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   959  0000                     TOS equ 0FFDh ;# 
   960                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   961  0000                     TOSL equ 0FFDh ;# 
   962                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   963  0000                     TOSH equ 0FFEh ;# 
   964                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   965  0000                     TOSU equ 0FFFh ;# 
   966                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   967  0000                     PORTA equ 0F80h ;# 
   968                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   969  0000                     PORTB equ 0F81h ;# 
   970                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   971  0000                     PORTC equ 0F82h ;# 
   972                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   973  0000                     PORTD equ 0F83h ;# 
   974                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   975  0000                     PORTE equ 0F84h ;# 
   976                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   977  0000                     SSP2CON2 equ 0F85h ;# 
   978                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   979  0000                     SSP2CON1 equ 0F86h ;# 
   980                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   981  0000                     SSP2STAT equ 0F87h ;# 
   982                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   983  0000                     SSP2ADD equ 0F88h ;# 
   984                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   985  0000                     LATA equ 0F89h ;# 
   986                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   987  0000                     LATB equ 0F8Ah ;# 
   988                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   989  0000                     LATC equ 0F8Bh ;# 
   990                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   991  0000                     LATD equ 0F8Ch ;# 
   992                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   993  0000                     LATE equ 0F8Dh ;# 
   994                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   995  0000                     SSP2BUF equ 0F8Eh ;# 
   996                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   997  0000                     TRISA equ 0F92h ;# 
   998                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   999  0000                     DDRA equ 0F92h ;# 
  1000                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1001  0000                     TRISB equ 0F93h ;# 
  1002                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1003  0000                     DDRB equ 0F93h ;# 
  1004                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1005  0000                     TRISC equ 0F94h ;# 
  1006                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1007  0000                     DDRC equ 0F94h ;# 
  1008                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1009  0000                     TRISD equ 0F95h ;# 
  1010                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1011  0000                     DDRD equ 0F95h ;# 
  1012                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1013  0000                     TRISE equ 0F96h ;# 
  1014                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1015  0000                     DDRE equ 0F96h ;# 
  1016                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1017  0000                     OSCTUNE equ 0F9Bh ;# 
  1018                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1019  0000                     PIE1 equ 0F9Dh ;# 
  1020                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1021  0000                     PIR1 equ 0F9Eh ;# 
  1022                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1023  0000                     IPR1 equ 0F9Fh ;# 
  1024                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1025  0000                     PIE2 equ 0FA0h ;# 
  1026                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1027  0000                     PIR2 equ 0FA1h ;# 
  1028                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1029  0000                     IPR2 equ 0FA2h ;# 
  1030                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1031  0000                     PIE3 equ 0FA3h ;# 
  1032                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1033  0000                     PIR3 equ 0FA4h ;# 
  1034                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1035  0000                     IPR3 equ 0FA5h ;# 
  1036                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1037  0000                     EECON1 equ 0FA6h ;# 
  1038                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1039  0000                     EECON2 equ 0FA7h ;# 
  1040                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1041  0000                     RCSTA equ 0FABh ;# 
  1042                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1043  0000                     RCSTA1 equ 0FABh ;# 
  1044                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1045  0000                     TXSTA equ 0FACh ;# 
  1046                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1047  0000                     TXSTA1 equ 0FACh ;# 
  1048                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1049  0000                     TXREG equ 0FADh ;# 
  1050                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1051  0000                     TXREG1 equ 0FADh ;# 
  1052                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1053  0000                     RCREG equ 0FAEh ;# 
  1054                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1055  0000                     RCREG1 equ 0FAEh ;# 
  1056                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1057  0000                     SPBRG equ 0FAFh ;# 
  1058                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1059  0000                     SPBRG1 equ 0FAFh ;# 
  1060                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1061  0000                     SPBRGH equ 0FB0h ;# 
  1062                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1063  0000                     CMCON equ 0FB4h ;# 
  1064                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1065  0000                     CVRCON equ 0FB5h ;# 
  1066                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1067  0000                     ECCP1AS equ 0FB6h ;# 
  1068                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1069  0000                     ECCP1DEL equ 0FB7h ;# 
  1070                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1071  0000                     PWM1CON equ 0FB7h ;# 
  1072                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1073  0000                     BAUDCON equ 0FB8h ;# 
  1074                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1075  0000                     BAUDCTL equ 0FB8h ;# 
  1076                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1077  0000                     CCP2CON equ 0FBAh ;# 
  1078                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1079  0000                     CCPR2 equ 0FBBh ;# 
  1080                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1081  0000                     CCPR2L equ 0FBBh ;# 
  1082                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1083  0000                     CCPR2H equ 0FBCh ;# 
  1084                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1085  0000                     ECCP1CON equ 0FBDh ;# 
  1086                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1087  0000                     CCP1CON equ 0FBDh ;# 
  1088                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1089  0000                     CCPR1 equ 0FBEh ;# 
  1090                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1091  0000                     CCPR1L equ 0FBEh ;# 
  1092                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1093  0000                     CCPR1H equ 0FBFh ;# 
  1094                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1095  0000                     ADCON2 equ 0FC0h ;# 
  1096                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1097  0000                     ADCON1 equ 0FC1h ;# 
  1098                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1099  0000                     ADCON0 equ 0FC2h ;# 
  1100                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1101  0000                     ADRES equ 0FC3h ;# 
  1102                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1103  0000                     ADRESL equ 0FC3h ;# 
  1104                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1105  0000                     ADRESH equ 0FC4h ;# 
  1106                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1107  0000                     SSPCON2 equ 0FC5h ;# 
  1108                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1109  0000                     SSP1CON2 equ 0FC5h ;# 
  1110                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1111  0000                     SSPCON1 equ 0FC6h ;# 
  1112                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1113  0000                     SSP1CON1 equ 0FC6h ;# 
  1114                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1115  0000                     SSPSTAT equ 0FC7h ;# 
  1116                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1117  0000                     SSP1STAT equ 0FC7h ;# 
  1118                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1119  0000                     SSPADD equ 0FC8h ;# 
  1120                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1121  0000                     SSP1ADD equ 0FC8h ;# 
  1122                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1123  0000                     SSPBUF equ 0FC9h ;# 
  1124                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1125  0000                     SSP1BUF equ 0FC9h ;# 
  1126                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1127  0000                     T2CON equ 0FCAh ;# 
  1128                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1129  0000                     PR2 equ 0FCBh ;# 
  1130                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1131  0000                     MEMCON equ 0FCBh ;# 
  1132                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1133  0000                     TMR2 equ 0FCCh ;# 
  1134                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1135  0000                     T1CON equ 0FCDh ;# 
  1136                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1137  0000                     TMR1 equ 0FCEh ;# 
  1138                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1139  0000                     TMR1L equ 0FCEh ;# 
  1140                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1141  0000                     TMR1H equ 0FCFh ;# 
  1142                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1143  0000                     RCON equ 0FD0h ;# 
  1144                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1145  0000                     WDTCON equ 0FD1h ;# 
  1146                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1147  0000                     OSCCON equ 0FD3h ;# 
  1148                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1149  0000                     T0CON equ 0FD5h ;# 
  1150                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1151  0000                     TMR0 equ 0FD6h ;# 
  1152                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1153  0000                     TMR0L equ 0FD6h ;# 
  1154                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1155  0000                     TMR0H equ 0FD7h ;# 
  1156                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1157  0000                     STATUS equ 0FD8h ;# 
  1158                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1159  0000                     FSR2 equ 0FD9h ;# 
  1160                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1161  0000                     FSR2L equ 0FD9h ;# 
  1162                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1163  0000                     FSR2H equ 0FDAh ;# 
  1164                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1165  0000                     PLUSW2 equ 0FDBh ;# 
  1166                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1167  0000                     PREINC2 equ 0FDCh ;# 
  1168                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1169  0000                     POSTDEC2 equ 0FDDh ;# 
  1170                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1171  0000                     POSTINC2 equ 0FDEh ;# 
  1172                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1173  0000                     INDF2 equ 0FDFh ;# 
  1174                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1175  0000                     BSR equ 0FE0h ;# 
  1176                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1177  0000                     FSR1 equ 0FE1h ;# 
  1178                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1179  0000                     FSR1L equ 0FE1h ;# 
  1180                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1181  0000                     FSR1H equ 0FE2h ;# 
  1182                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1183  0000                     PLUSW1 equ 0FE3h ;# 
  1184                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1185  0000                     PREINC1 equ 0FE4h ;# 
  1186                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1187  0000                     POSTDEC1 equ 0FE5h ;# 
  1188                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1189  0000                     POSTINC1 equ 0FE6h ;# 
  1190                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1191  0000                     INDF1 equ 0FE7h ;# 
  1192                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1193  0000                     WREG equ 0FE8h ;# 
  1194                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1195  0000                     FSR0 equ 0FE9h ;# 
  1196                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1197  0000                     FSR0L equ 0FE9h ;# 
  1198                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1199  0000                     FSR0H equ 0FEAh ;# 
  1200                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1201  0000                     PLUSW0 equ 0FEBh ;# 
  1202                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1203  0000                     PREINC0 equ 0FECh ;# 
  1204                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1205  0000                     POSTDEC0 equ 0FEDh ;# 
  1206                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1207  0000                     POSTINC0 equ 0FEEh ;# 
  1208                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1209  0000                     INDF0 equ 0FEFh ;# 
  1210                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1211  0000                     INTCON3 equ 0FF0h ;# 
  1212                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1213  0000                     INTCON2 equ 0FF1h ;# 
  1214                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1215  0000                     INTCON equ 0FF2h ;# 
  1216                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1217  0000                     PROD equ 0FF3h ;# 
  1218                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1219  0000                     PRODL equ 0FF3h ;# 
  1220                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1221  0000                     PRODH equ 0FF4h ;# 
  1222                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1223  0000                     TABLAT equ 0FF5h ;# 
  1224                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1225  0000                     TBLPTR equ 0FF6h ;# 
  1226                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1227  0000                     TBLPTRL equ 0FF6h ;# 
  1228                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1229  0000                     TBLPTRH equ 0FF7h ;# 
  1230                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1231  0000                     TBLPTRU equ 0FF8h ;# 
  1232                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1233  0000                     PCLAT equ 0FF9h ;# 
  1234                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1235  0000                     PC equ 0FF9h ;# 
  1236                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1237  0000                     PCL equ 0FF9h ;# 
  1238                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1239  0000                     PCLATH equ 0FFAh ;# 
  1240                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1241  0000                     PCLATU equ 0FFBh ;# 
  1242                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1243  0000                     STKPTR equ 0FFCh ;# 
  1244                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1245  0000                     TOS equ 0FFDh ;# 
  1246                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1247  0000                     TOSL equ 0FFDh ;# 
  1248                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1249  0000                     TOSH equ 0FFEh ;# 
  1250                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1251  0000                     TOSU equ 0FFFh ;# 
  1252                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1253  0000                     PORTA equ 0F80h ;# 
  1254                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1255  0000                     PORTB equ 0F81h ;# 
  1256                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1257  0000                     PORTC equ 0F82h ;# 
  1258                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1259  0000                     PORTD equ 0F83h ;# 
  1260                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1261  0000                     PORTE equ 0F84h ;# 
  1262                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1263  0000                     SSP2CON2 equ 0F85h ;# 
  1264                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1265  0000                     SSP2CON1 equ 0F86h ;# 
  1266                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1267  0000                     SSP2STAT equ 0F87h ;# 
  1268                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1269  0000                     SSP2ADD equ 0F88h ;# 
  1270                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1271  0000                     LATA equ 0F89h ;# 
  1272                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1273  0000                     LATB equ 0F8Ah ;# 
  1274                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1275  0000                     LATC equ 0F8Bh ;# 
  1276                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1277  0000                     LATD equ 0F8Ch ;# 
  1278                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1279  0000                     LATE equ 0F8Dh ;# 
  1280                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1281  0000                     SSP2BUF equ 0F8Eh ;# 
  1282                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1283  0000                     TRISA equ 0F92h ;# 
  1284                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1285  0000                     DDRA equ 0F92h ;# 
  1286                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1287  0000                     TRISB equ 0F93h ;# 
  1288                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1289  0000                     DDRB equ 0F93h ;# 
  1290                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1291  0000                     TRISC equ 0F94h ;# 
  1292                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1293  0000                     DDRC equ 0F94h ;# 
  1294                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1295  0000                     TRISD equ 0F95h ;# 
  1296                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1297  0000                     DDRD equ 0F95h ;# 
  1298                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1299  0000                     TRISE equ 0F96h ;# 
  1300                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1301  0000                     DDRE equ 0F96h ;# 
  1302                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1303  0000                     OSCTUNE equ 0F9Bh ;# 
  1304                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1305  0000                     PIE1 equ 0F9Dh ;# 
  1306                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1307  0000                     PIR1 equ 0F9Eh ;# 
  1308                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1309  0000                     IPR1 equ 0F9Fh ;# 
  1310                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1311  0000                     PIE2 equ 0FA0h ;# 
  1312                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1313  0000                     PIR2 equ 0FA1h ;# 
  1314                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1315  0000                     IPR2 equ 0FA2h ;# 
  1316                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1317  0000                     PIE3 equ 0FA3h ;# 
  1318                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1319  0000                     PIR3 equ 0FA4h ;# 
  1320                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1321  0000                     IPR3 equ 0FA5h ;# 
  1322                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1323  0000                     EECON1 equ 0FA6h ;# 
  1324                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1325  0000                     EECON2 equ 0FA7h ;# 
  1326                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1327  0000                     RCSTA equ 0FABh ;# 
  1328                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1329  0000                     RCSTA1 equ 0FABh ;# 
  1330                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1331  0000                     TXSTA equ 0FACh ;# 
  1332                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1333  0000                     TXSTA1 equ 0FACh ;# 
  1334                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1335  0000                     TXREG equ 0FADh ;# 
  1336                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1337  0000                     TXREG1 equ 0FADh ;# 
  1338                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1339  0000                     RCREG equ 0FAEh ;# 
  1340                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1341  0000                     RCREG1 equ 0FAEh ;# 
  1342                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1343  0000                     SPBRG equ 0FAFh ;# 
  1344                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1345  0000                     SPBRG1 equ 0FAFh ;# 
  1346                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1347  0000                     SPBRGH equ 0FB0h ;# 
  1348                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1349  0000                     CMCON equ 0FB4h ;# 
  1350                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1351  0000                     CVRCON equ 0FB5h ;# 
  1352                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1353  0000                     ECCP1AS equ 0FB6h ;# 
  1354                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1355  0000                     ECCP1DEL equ 0FB7h ;# 
  1356                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1357  0000                     PWM1CON equ 0FB7h ;# 
  1358                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1359  0000                     BAUDCON equ 0FB8h ;# 
  1360                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1361  0000                     BAUDCTL equ 0FB8h ;# 
  1362                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1363  0000                     CCP2CON equ 0FBAh ;# 
  1364                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1365  0000                     CCPR2 equ 0FBBh ;# 
  1366                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1367  0000                     CCPR2L equ 0FBBh ;# 
  1368                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1369  0000                     CCPR2H equ 0FBCh ;# 
  1370                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1371  0000                     ECCP1CON equ 0FBDh ;# 
  1372                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1373  0000                     CCP1CON equ 0FBDh ;# 
  1374                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1375  0000                     CCPR1 equ 0FBEh ;# 
  1376                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1377  0000                     CCPR1L equ 0FBEh ;# 
  1378                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1379  0000                     CCPR1H equ 0FBFh ;# 
  1380                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1381  0000                     ADCON2 equ 0FC0h ;# 
  1382                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1383  0000                     ADCON1 equ 0FC1h ;# 
  1384                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1385  0000                     ADCON0 equ 0FC2h ;# 
  1386                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1387  0000                     ADRES equ 0FC3h ;# 
  1388                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1389  0000                     ADRESL equ 0FC3h ;# 
  1390                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1391  0000                     ADRESH equ 0FC4h ;# 
  1392                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1393  0000                     SSPCON2 equ 0FC5h ;# 
  1394                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1395  0000                     SSP1CON2 equ 0FC5h ;# 
  1396                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1397  0000                     SSPCON1 equ 0FC6h ;# 
  1398                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1399  0000                     SSP1CON1 equ 0FC6h ;# 
  1400                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1401  0000                     SSPSTAT equ 0FC7h ;# 
  1402                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1403  0000                     SSP1STAT equ 0FC7h ;# 
  1404                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1405  0000                     SSPADD equ 0FC8h ;# 
  1406                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1407  0000                     SSP1ADD equ 0FC8h ;# 
  1408                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1409  0000                     SSPBUF equ 0FC9h ;# 
  1410                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1411  0000                     SSP1BUF equ 0FC9h ;# 
  1412                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1413  0000                     T2CON equ 0FCAh ;# 
  1414                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1415  0000                     PR2 equ 0FCBh ;# 
  1416                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1417  0000                     MEMCON equ 0FCBh ;# 
  1418                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1419  0000                     TMR2 equ 0FCCh ;# 
  1420                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1421  0000                     T1CON equ 0FCDh ;# 
  1422                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1423  0000                     TMR1 equ 0FCEh ;# 
  1424                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1425  0000                     TMR1L equ 0FCEh ;# 
  1426                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1427  0000                     TMR1H equ 0FCFh ;# 
  1428                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1429  0000                     RCON equ 0FD0h ;# 
  1430                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1431  0000                     WDTCON equ 0FD1h ;# 
  1432                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1433  0000                     OSCCON equ 0FD3h ;# 
  1434                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1435  0000                     T0CON equ 0FD5h ;# 
  1436                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1437  0000                     TMR0 equ 0FD6h ;# 
  1438                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1439  0000                     TMR0L equ 0FD6h ;# 
  1440                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1441  0000                     TMR0H equ 0FD7h ;# 
  1442                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1443  0000                     STATUS equ 0FD8h ;# 
  1444                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1445  0000                     FSR2 equ 0FD9h ;# 
  1446                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1447  0000                     FSR2L equ 0FD9h ;# 
  1448                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1449  0000                     FSR2H equ 0FDAh ;# 
  1450                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1451  0000                     PLUSW2 equ 0FDBh ;# 
  1452                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1453  0000                     PREINC2 equ 0FDCh ;# 
  1454                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1455  0000                     POSTDEC2 equ 0FDDh ;# 
  1456                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1457  0000                     POSTINC2 equ 0FDEh ;# 
  1458                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1459  0000                     INDF2 equ 0FDFh ;# 
  1460                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1461  0000                     BSR equ 0FE0h ;# 
  1462                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1463  0000                     FSR1 equ 0FE1h ;# 
  1464                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1465  0000                     FSR1L equ 0FE1h ;# 
  1466                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1467  0000                     FSR1H equ 0FE2h ;# 
  1468                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1469  0000                     PLUSW1 equ 0FE3h ;# 
  1470                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1471  0000                     PREINC1 equ 0FE4h ;# 
  1472                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1473  0000                     POSTDEC1 equ 0FE5h ;# 
  1474                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1475  0000                     POSTINC1 equ 0FE6h ;# 
  1476                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1477  0000                     INDF1 equ 0FE7h ;# 
  1478                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1479  0000                     WREG equ 0FE8h ;# 
  1480                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1481  0000                     FSR0 equ 0FE9h ;# 
  1482                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1483  0000                     FSR0L equ 0FE9h ;# 
  1484                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1485  0000                     FSR0H equ 0FEAh ;# 
  1486                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1487  0000                     PLUSW0 equ 0FEBh ;# 
  1488                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1489  0000                     PREINC0 equ 0FECh ;# 
  1490                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1491  0000                     POSTDEC0 equ 0FEDh ;# 
  1492                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1493  0000                     POSTINC0 equ 0FEEh ;# 
  1494                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1495  0000                     INDF0 equ 0FEFh ;# 
  1496                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1497  0000                     INTCON3 equ 0FF0h ;# 
  1498                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1499  0000                     INTCON2 equ 0FF1h ;# 
  1500                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1501  0000                     INTCON equ 0FF2h ;# 
  1502                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1503  0000                     PROD equ 0FF3h ;# 
  1504                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1505  0000                     PRODL equ 0FF3h ;# 
  1506                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1507  0000                     PRODH equ 0FF4h ;# 
  1508                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1509  0000                     TABLAT equ 0FF5h ;# 
  1510                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1511  0000                     TBLPTR equ 0FF6h ;# 
  1512                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1513  0000                     TBLPTRL equ 0FF6h ;# 
  1514                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1515  0000                     TBLPTRH equ 0FF7h ;# 
  1516                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1517  0000                     TBLPTRU equ 0FF8h ;# 
  1518                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1519  0000                     PCLAT equ 0FF9h ;# 
  1520                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1521  0000                     PC equ 0FF9h ;# 
  1522                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1523  0000                     PCL equ 0FF9h ;# 
  1524                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1525  0000                     PCLATH equ 0FFAh ;# 
  1526                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1527  0000                     PCLATU equ 0FFBh ;# 
  1528                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1529  0000                     STKPTR equ 0FFCh ;# 
  1530                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1531  0000                     TOS equ 0FFDh ;# 
  1532                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1533  0000                     TOSL equ 0FFDh ;# 
  1534                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1535  0000                     TOSH equ 0FFEh ;# 
  1536                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1537  0000                     TOSU equ 0FFFh ;# 
  1538                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1539  0000                     PORTA equ 0F80h ;# 
  1540                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1541  0000                     PORTB equ 0F81h ;# 
  1542                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1543  0000                     PORTC equ 0F82h ;# 
  1544                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1545  0000                     PORTD equ 0F83h ;# 
  1546                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1547  0000                     PORTE equ 0F84h ;# 
  1548                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1549  0000                     SSP2CON2 equ 0F85h ;# 
  1550                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1551  0000                     SSP2CON1 equ 0F86h ;# 
  1552                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1553  0000                     SSP2STAT equ 0F87h ;# 
  1554                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1555  0000                     SSP2ADD equ 0F88h ;# 
  1556                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1557  0000                     LATA equ 0F89h ;# 
  1558                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1559  0000                     LATB equ 0F8Ah ;# 
  1560                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1561  0000                     LATC equ 0F8Bh ;# 
  1562                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1563  0000                     LATD equ 0F8Ch ;# 
  1564                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1565  0000                     LATE equ 0F8Dh ;# 
  1566                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1567  0000                     SSP2BUF equ 0F8Eh ;# 
  1568                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1569  0000                     TRISA equ 0F92h ;# 
  1570                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1571  0000                     DDRA equ 0F92h ;# 
  1572                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1573  0000                     TRISB equ 0F93h ;# 
  1574                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1575  0000                     DDRB equ 0F93h ;# 
  1576                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1577  0000                     TRISC equ 0F94h ;# 
  1578                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1579  0000                     DDRC equ 0F94h ;# 
  1580                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1581  0000                     TRISD equ 0F95h ;# 
  1582                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1583  0000                     DDRD equ 0F95h ;# 
  1584                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1585  0000                     TRISE equ 0F96h ;# 
  1586                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1587  0000                     DDRE equ 0F96h ;# 
  1588                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1589  0000                     OSCTUNE equ 0F9Bh ;# 
  1590                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1591  0000                     PIE1 equ 0F9Dh ;# 
  1592                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1593  0000                     PIR1 equ 0F9Eh ;# 
  1594                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1595  0000                     IPR1 equ 0F9Fh ;# 
  1596                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1597  0000                     PIE2 equ 0FA0h ;# 
  1598                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1599  0000                     PIR2 equ 0FA1h ;# 
  1600                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1601  0000                     IPR2 equ 0FA2h ;# 
  1602                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1603  0000                     PIE3 equ 0FA3h ;# 
  1604                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1605  0000                     PIR3 equ 0FA4h ;# 
  1606                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1607  0000                     IPR3 equ 0FA5h ;# 
  1608                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1609  0000                     EECON1 equ 0FA6h ;# 
  1610                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1611  0000                     EECON2 equ 0FA7h ;# 
  1612                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1613  0000                     RCSTA equ 0FABh ;# 
  1614                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1615  0000                     RCSTA1 equ 0FABh ;# 
  1616                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1617  0000                     TXSTA equ 0FACh ;# 
  1618                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1619  0000                     TXSTA1 equ 0FACh ;# 
  1620                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1621  0000                     TXREG equ 0FADh ;# 
  1622                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1623  0000                     TXREG1 equ 0FADh ;# 
  1624                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1625  0000                     RCREG equ 0FAEh ;# 
  1626                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1627  0000                     RCREG1 equ 0FAEh ;# 
  1628                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1629  0000                     SPBRG equ 0FAFh ;# 
  1630                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1631  0000                     SPBRG1 equ 0FAFh ;# 
  1632                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1633  0000                     SPBRGH equ 0FB0h ;# 
  1634                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1635  0000                     CMCON equ 0FB4h ;# 
  1636                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1637  0000                     CVRCON equ 0FB5h ;# 
  1638                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1639  0000                     ECCP1AS equ 0FB6h ;# 
  1640                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1641  0000                     ECCP1DEL equ 0FB7h ;# 
  1642                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1643  0000                     PWM1CON equ 0FB7h ;# 
  1644                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1645  0000                     BAUDCON equ 0FB8h ;# 
  1646                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1647  0000                     BAUDCTL equ 0FB8h ;# 
  1648                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1649  0000                     CCP2CON equ 0FBAh ;# 
  1650                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1651  0000                     CCPR2 equ 0FBBh ;# 
  1652                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1653  0000                     CCPR2L equ 0FBBh ;# 
  1654                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1655  0000                     CCPR2H equ 0FBCh ;# 
  1656                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1657  0000                     ECCP1CON equ 0FBDh ;# 
  1658                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1659  0000                     CCP1CON equ 0FBDh ;# 
  1660                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1661  0000                     CCPR1 equ 0FBEh ;# 
  1662                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1663  0000                     CCPR1L equ 0FBEh ;# 
  1664                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1665  0000                     CCPR1H equ 0FBFh ;# 
  1666                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1667  0000                     ADCON2 equ 0FC0h ;# 
  1668                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1669  0000                     ADCON1 equ 0FC1h ;# 
  1670                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1671  0000                     ADCON0 equ 0FC2h ;# 
  1672                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1673  0000                     ADRES equ 0FC3h ;# 
  1674                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1675  0000                     ADRESL equ 0FC3h ;# 
  1676                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1677  0000                     ADRESH equ 0FC4h ;# 
  1678                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1679  0000                     SSPCON2 equ 0FC5h ;# 
  1680                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1681  0000                     SSP1CON2 equ 0FC5h ;# 
  1682                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1683  0000                     SSPCON1 equ 0FC6h ;# 
  1684                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1685  0000                     SSP1CON1 equ 0FC6h ;# 
  1686                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1687  0000                     SSPSTAT equ 0FC7h ;# 
  1688                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1689  0000                     SSP1STAT equ 0FC7h ;# 
  1690                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1691  0000                     SSPADD equ 0FC8h ;# 
  1692                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1693  0000                     SSP1ADD equ 0FC8h ;# 
  1694                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1695  0000                     SSPBUF equ 0FC9h ;# 
  1696                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1697  0000                     SSP1BUF equ 0FC9h ;# 
  1698                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1699  0000                     T2CON equ 0FCAh ;# 
  1700                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1701  0000                     PR2 equ 0FCBh ;# 
  1702                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1703  0000                     MEMCON equ 0FCBh ;# 
  1704                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1705  0000                     TMR2 equ 0FCCh ;# 
  1706                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1707  0000                     T1CON equ 0FCDh ;# 
  1708                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1709  0000                     TMR1 equ 0FCEh ;# 
  1710                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1711  0000                     TMR1L equ 0FCEh ;# 
  1712                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1713  0000                     TMR1H equ 0FCFh ;# 
  1714                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1715  0000                     RCON equ 0FD0h ;# 
  1716                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1717  0000                     WDTCON equ 0FD1h ;# 
  1718                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1719  0000                     OSCCON equ 0FD3h ;# 
  1720                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1721  0000                     T0CON equ 0FD5h ;# 
  1722                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1723  0000                     TMR0 equ 0FD6h ;# 
  1724                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1725  0000                     TMR0L equ 0FD6h ;# 
  1726                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1727  0000                     TMR0H equ 0FD7h ;# 
  1728                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1729  0000                     STATUS equ 0FD8h ;# 
  1730                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1731  0000                     FSR2 equ 0FD9h ;# 
  1732                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1733  0000                     FSR2L equ 0FD9h ;# 
  1734                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1735  0000                     FSR2H equ 0FDAh ;# 
  1736                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1737  0000                     PLUSW2 equ 0FDBh ;# 
  1738                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1739  0000                     PREINC2 equ 0FDCh ;# 
  1740                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1741  0000                     POSTDEC2 equ 0FDDh ;# 
  1742                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1743  0000                     POSTINC2 equ 0FDEh ;# 
  1744                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1745  0000                     INDF2 equ 0FDFh ;# 
  1746                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1747  0000                     BSR equ 0FE0h ;# 
  1748                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1749  0000                     FSR1 equ 0FE1h ;# 
  1750                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1751  0000                     FSR1L equ 0FE1h ;# 
  1752                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1753  0000                     FSR1H equ 0FE2h ;# 
  1754                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1755  0000                     PLUSW1 equ 0FE3h ;# 
  1756                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1757  0000                     PREINC1 equ 0FE4h ;# 
  1758                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1759  0000                     POSTDEC1 equ 0FE5h ;# 
  1760                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1761  0000                     POSTINC1 equ 0FE6h ;# 
  1762                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1763  0000                     INDF1 equ 0FE7h ;# 
  1764                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1765  0000                     WREG equ 0FE8h ;# 
  1766                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1767  0000                     FSR0 equ 0FE9h ;# 
  1768                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1769  0000                     FSR0L equ 0FE9h ;# 
  1770                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1771  0000                     FSR0H equ 0FEAh ;# 
  1772                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1773  0000                     PLUSW0 equ 0FEBh ;# 
  1774                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1775  0000                     PREINC0 equ 0FECh ;# 
  1776                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1777  0000                     POSTDEC0 equ 0FEDh ;# 
  1778                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1779  0000                     POSTINC0 equ 0FEEh ;# 
  1780                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1781  0000                     INDF0 equ 0FEFh ;# 
  1782                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1783  0000                     INTCON3 equ 0FF0h ;# 
  1784                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1785  0000                     INTCON2 equ 0FF1h ;# 
  1786                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1787  0000                     INTCON equ 0FF2h ;# 
  1788                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1789  0000                     PROD equ 0FF3h ;# 
  1790                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1791  0000                     PRODL equ 0FF3h ;# 
  1792                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1793  0000                     PRODH equ 0FF4h ;# 
  1794                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1795  0000                     TABLAT equ 0FF5h ;# 
  1796                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1797  0000                     TBLPTR equ 0FF6h ;# 
  1798                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1799  0000                     TBLPTRL equ 0FF6h ;# 
  1800                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1801  0000                     TBLPTRH equ 0FF7h ;# 
  1802                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1803  0000                     TBLPTRU equ 0FF8h ;# 
  1804                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1805  0000                     PCLAT equ 0FF9h ;# 
  1806                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1807  0000                     PC equ 0FF9h ;# 
  1808                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1809  0000                     PCL equ 0FF9h ;# 
  1810                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1811  0000                     PCLATH equ 0FFAh ;# 
  1812                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1813  0000                     PCLATU equ 0FFBh ;# 
  1814                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1815  0000                     STKPTR equ 0FFCh ;# 
  1816                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1817  0000                     TOS equ 0FFDh ;# 
  1818                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1819  0000                     TOSL equ 0FFDh ;# 
  1820                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1821  0000                     TOSH equ 0FFEh ;# 
  1822                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1823  0000                     TOSU equ 0FFFh ;# 
  1824                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1825  0000                     PORTA equ 0F80h ;# 
  1826                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1827  0000                     PORTB equ 0F81h ;# 
  1828                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1829  0000                     PORTC equ 0F82h ;# 
  1830                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1831  0000                     PORTD equ 0F83h ;# 
  1832                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1833  0000                     PORTE equ 0F84h ;# 
  1834                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1835  0000                     SSP2CON2 equ 0F85h ;# 
  1836                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1837  0000                     SSP2CON1 equ 0F86h ;# 
  1838                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1839  0000                     SSP2STAT equ 0F87h ;# 
  1840                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1841  0000                     SSP2ADD equ 0F88h ;# 
  1842                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1843  0000                     LATA equ 0F89h ;# 
  1844                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1845  0000                     LATB equ 0F8Ah ;# 
  1846                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1847  0000                     LATC equ 0F8Bh ;# 
  1848                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1849  0000                     LATD equ 0F8Ch ;# 
  1850                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1851  0000                     LATE equ 0F8Dh ;# 
  1852                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1853  0000                     SSP2BUF equ 0F8Eh ;# 
  1854                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1855  0000                     TRISA equ 0F92h ;# 
  1856                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1857  0000                     DDRA equ 0F92h ;# 
  1858                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1859  0000                     TRISB equ 0F93h ;# 
  1860                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1861  0000                     DDRB equ 0F93h ;# 
  1862                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1863  0000                     TRISC equ 0F94h ;# 
  1864                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1865  0000                     DDRC equ 0F94h ;# 
  1866                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1867  0000                     TRISD equ 0F95h ;# 
  1868                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1869  0000                     DDRD equ 0F95h ;# 
  1870                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1871  0000                     TRISE equ 0F96h ;# 
  1872                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1873  0000                     DDRE equ 0F96h ;# 
  1874                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1875  0000                     OSCTUNE equ 0F9Bh ;# 
  1876                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1877  0000                     PIE1 equ 0F9Dh ;# 
  1878                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1879  0000                     PIR1 equ 0F9Eh ;# 
  1880                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1881  0000                     IPR1 equ 0F9Fh ;# 
  1882                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1883  0000                     PIE2 equ 0FA0h ;# 
  1884                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1885  0000                     PIR2 equ 0FA1h ;# 
  1886                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1887  0000                     IPR2 equ 0FA2h ;# 
  1888                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1889  0000                     PIE3 equ 0FA3h ;# 
  1890                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1891  0000                     PIR3 equ 0FA4h ;# 
  1892                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1893  0000                     IPR3 equ 0FA5h ;# 
  1894                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1895  0000                     EECON1 equ 0FA6h ;# 
  1896                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1897  0000                     EECON2 equ 0FA7h ;# 
  1898                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1899  0000                     RCSTA equ 0FABh ;# 
  1900                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1901  0000                     RCSTA1 equ 0FABh ;# 
  1902                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1903  0000                     TXSTA equ 0FACh ;# 
  1904                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1905  0000                     TXSTA1 equ 0FACh ;# 
  1906                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1907  0000                     TXREG equ 0FADh ;# 
  1908                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1909  0000                     TXREG1 equ 0FADh ;# 
  1910                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1911  0000                     RCREG equ 0FAEh ;# 
  1912                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1913  0000                     RCREG1 equ 0FAEh ;# 
  1914                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1915  0000                     SPBRG equ 0FAFh ;# 
  1916                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1917  0000                     SPBRG1 equ 0FAFh ;# 
  1918                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1919  0000                     SPBRGH equ 0FB0h ;# 
  1920                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1921  0000                     CMCON equ 0FB4h ;# 
  1922                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1923  0000                     CVRCON equ 0FB5h ;# 
  1924                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1925  0000                     ECCP1AS equ 0FB6h ;# 
  1926                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1927  0000                     ECCP1DEL equ 0FB7h ;# 
  1928                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1929  0000                     PWM1CON equ 0FB7h ;# 
  1930                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1931  0000                     BAUDCON equ 0FB8h ;# 
  1932                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1933  0000                     BAUDCTL equ 0FB8h ;# 
  1934                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1935  0000                     CCP2CON equ 0FBAh ;# 
  1936                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1937  0000                     CCPR2 equ 0FBBh ;# 
  1938                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1939  0000                     CCPR2L equ 0FBBh ;# 
  1940                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1941  0000                     CCPR2H equ 0FBCh ;# 
  1942                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1943  0000                     ECCP1CON equ 0FBDh ;# 
  1944                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1945  0000                     CCP1CON equ 0FBDh ;# 
  1946                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1947  0000                     CCPR1 equ 0FBEh ;# 
  1948                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1949  0000                     CCPR1L equ 0FBEh ;# 
  1950                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1951  0000                     CCPR1H equ 0FBFh ;# 
  1952                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1953  0000                     ADCON2 equ 0FC0h ;# 
  1954                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1955  0000                     ADCON1 equ 0FC1h ;# 
  1956                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1957  0000                     ADCON0 equ 0FC2h ;# 
  1958                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1959  0000                     ADRES equ 0FC3h ;# 
  1960                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1961  0000                     ADRESL equ 0FC3h ;# 
  1962                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1963  0000                     ADRESH equ 0FC4h ;# 
  1964                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1965  0000                     SSPCON2 equ 0FC5h ;# 
  1966                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1967  0000                     SSP1CON2 equ 0FC5h ;# 
  1968                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1969  0000                     SSPCON1 equ 0FC6h ;# 
  1970                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1971  0000                     SSP1CON1 equ 0FC6h ;# 
  1972                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1973  0000                     SSPSTAT equ 0FC7h ;# 
  1974                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1975  0000                     SSP1STAT equ 0FC7h ;# 
  1976                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1977  0000                     SSPADD equ 0FC8h ;# 
  1978                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1979  0000                     SSP1ADD equ 0FC8h ;# 
  1980                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1981  0000                     SSPBUF equ 0FC9h ;# 
  1982                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1983  0000                     SSP1BUF equ 0FC9h ;# 
  1984                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1985  0000                     T2CON equ 0FCAh ;# 
  1986                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1987  0000                     PR2 equ 0FCBh ;# 
  1988                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1989  0000                     MEMCON equ 0FCBh ;# 
  1990                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1991  0000                     TMR2 equ 0FCCh ;# 
  1992                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1993  0000                     T1CON equ 0FCDh ;# 
  1994                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1995  0000                     TMR1 equ 0FCEh ;# 
  1996                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1997  0000                     TMR1L equ 0FCEh ;# 
  1998                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1999  0000                     TMR1H equ 0FCFh ;# 
  2000                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2001  0000                     RCON equ 0FD0h ;# 
  2002                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2003  0000                     WDTCON equ 0FD1h ;# 
  2004                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2005  0000                     OSCCON equ 0FD3h ;# 
  2006                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2007  0000                     T0CON equ 0FD5h ;# 
  2008                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2009  0000                     TMR0 equ 0FD6h ;# 
  2010                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2011  0000                     TMR0L equ 0FD6h ;# 
  2012                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2013  0000                     TMR0H equ 0FD7h ;# 
  2014                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2015  0000                     STATUS equ 0FD8h ;# 
  2016                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2017  0000                     FSR2 equ 0FD9h ;# 
  2018                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2019  0000                     FSR2L equ 0FD9h ;# 
  2020                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2021  0000                     FSR2H equ 0FDAh ;# 
  2022                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2023  0000                     PLUSW2 equ 0FDBh ;# 
  2024                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2025  0000                     PREINC2 equ 0FDCh ;# 
  2026                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2027  0000                     POSTDEC2 equ 0FDDh ;# 
  2028                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2029  0000                     POSTINC2 equ 0FDEh ;# 
  2030                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2031  0000                     INDF2 equ 0FDFh ;# 
  2032                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2033  0000                     BSR equ 0FE0h ;# 
  2034                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2035  0000                     FSR1 equ 0FE1h ;# 
  2036                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2037  0000                     FSR1L equ 0FE1h ;# 
  2038                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2039  0000                     FSR1H equ 0FE2h ;# 
  2040                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2041  0000                     PLUSW1 equ 0FE3h ;# 
  2042                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2043  0000                     PREINC1 equ 0FE4h ;# 
  2044                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2045  0000                     POSTDEC1 equ 0FE5h ;# 
  2046                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2047  0000                     POSTINC1 equ 0FE6h ;# 
  2048                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2049  0000                     INDF1 equ 0FE7h ;# 
  2050                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2051  0000                     WREG equ 0FE8h ;# 
  2052                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2053  0000                     FSR0 equ 0FE9h ;# 
  2054                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2055  0000                     FSR0L equ 0FE9h ;# 
  2056                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2057  0000                     FSR0H equ 0FEAh ;# 
  2058                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2059  0000                     PLUSW0 equ 0FEBh ;# 
  2060                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2061  0000                     PREINC0 equ 0FECh ;# 
  2062                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2063  0000                     POSTDEC0 equ 0FEDh ;# 
  2064                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2065  0000                     POSTINC0 equ 0FEEh ;# 
  2066                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2067  0000                     INDF0 equ 0FEFh ;# 
  2068                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2069  0000                     INTCON3 equ 0FF0h ;# 
  2070                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2071  0000                     INTCON2 equ 0FF1h ;# 
  2072                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2073  0000                     INTCON equ 0FF2h ;# 
  2074                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2075  0000                     PROD equ 0FF3h ;# 
  2076                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2077  0000                     PRODL equ 0FF3h ;# 
  2078                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2079  0000                     PRODH equ 0FF4h ;# 
  2080                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2081  0000                     TABLAT equ 0FF5h ;# 
  2082                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2083  0000                     TBLPTR equ 0FF6h ;# 
  2084                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2085  0000                     TBLPTRL equ 0FF6h ;# 
  2086                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2087  0000                     TBLPTRH equ 0FF7h ;# 
  2088                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2089  0000                     TBLPTRU equ 0FF8h ;# 
  2090                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2091  0000                     PCLAT equ 0FF9h ;# 
  2092                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2093  0000                     PC equ 0FF9h ;# 
  2094                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2095  0000                     PCL equ 0FF9h ;# 
  2096                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2097  0000                     PCLATH equ 0FFAh ;# 
  2098                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2099  0000                     PCLATU equ 0FFBh ;# 
  2100                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2101  0000                     STKPTR equ 0FFCh ;# 
  2102                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2103  0000                     TOS equ 0FFDh ;# 
  2104                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2105  0000                     TOSL equ 0FFDh ;# 
  2106                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2107  0000                     TOSH equ 0FFEh ;# 
  2108                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2109  0000                     TOSU equ 0FFFh ;# 
  2110                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2111  0000                     PORTA equ 0F80h ;# 
  2112                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2113  0000                     PORTB equ 0F81h ;# 
  2114                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2115  0000                     PORTC equ 0F82h ;# 
  2116                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2117  0000                     PORTD equ 0F83h ;# 
  2118                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2119  0000                     PORTE equ 0F84h ;# 
  2120                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2121  0000                     SSP2CON2 equ 0F85h ;# 
  2122                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2123  0000                     SSP2CON1 equ 0F86h ;# 
  2124                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2125  0000                     SSP2STAT equ 0F87h ;# 
  2126                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2127  0000                     SSP2ADD equ 0F88h ;# 
  2128                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2129  0000                     LATA equ 0F89h ;# 
  2130                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2131  0000                     LATB equ 0F8Ah ;# 
  2132                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2133  0000                     LATC equ 0F8Bh ;# 
  2134                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2135  0000                     LATD equ 0F8Ch ;# 
  2136                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2137  0000                     LATE equ 0F8Dh ;# 
  2138                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2139  0000                     SSP2BUF equ 0F8Eh ;# 
  2140                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2141  0000                     TRISA equ 0F92h ;# 
  2142                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2143  0000                     DDRA equ 0F92h ;# 
  2144                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2145  0000                     TRISB equ 0F93h ;# 
  2146                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2147  0000                     DDRB equ 0F93h ;# 
  2148                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2149  0000                     TRISC equ 0F94h ;# 
  2150                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2151  0000                     DDRC equ 0F94h ;# 
  2152                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2153  0000                     TRISD equ 0F95h ;# 
  2154                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2155  0000                     DDRD equ 0F95h ;# 
  2156                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2157  0000                     TRISE equ 0F96h ;# 
  2158                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2159  0000                     DDRE equ 0F96h ;# 
  2160                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2161  0000                     OSCTUNE equ 0F9Bh ;# 
  2162                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2163  0000                     PIE1 equ 0F9Dh ;# 
  2164                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2165  0000                     PIR1 equ 0F9Eh ;# 
  2166                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2167  0000                     IPR1 equ 0F9Fh ;# 
  2168                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2169  0000                     PIE2 equ 0FA0h ;# 
  2170                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2171  0000                     PIR2 equ 0FA1h ;# 
  2172                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2173  0000                     IPR2 equ 0FA2h ;# 
  2174                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2175  0000                     PIE3 equ 0FA3h ;# 
  2176                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2177  0000                     PIR3 equ 0FA4h ;# 
  2178                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2179  0000                     IPR3 equ 0FA5h ;# 
  2180                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2181  0000                     EECON1 equ 0FA6h ;# 
  2182                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2183  0000                     EECON2 equ 0FA7h ;# 
  2184                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2185  0000                     RCSTA equ 0FABh ;# 
  2186                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2187  0000                     RCSTA1 equ 0FABh ;# 
  2188                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2189  0000                     TXSTA equ 0FACh ;# 
  2190                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2191  0000                     TXSTA1 equ 0FACh ;# 
  2192                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2193  0000                     TXREG equ 0FADh ;# 
  2194                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2195  0000                     TXREG1 equ 0FADh ;# 
  2196                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2197  0000                     RCREG equ 0FAEh ;# 
  2198                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2199  0000                     RCREG1 equ 0FAEh ;# 
  2200                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2201  0000                     SPBRG equ 0FAFh ;# 
  2202                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2203  0000                     SPBRG1 equ 0FAFh ;# 
  2204                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2205  0000                     SPBRGH equ 0FB0h ;# 
  2206                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2207  0000                     CMCON equ 0FB4h ;# 
  2208                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2209  0000                     CVRCON equ 0FB5h ;# 
  2210                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2211  0000                     ECCP1AS equ 0FB6h ;# 
  2212                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2213  0000                     ECCP1DEL equ 0FB7h ;# 
  2214                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2215  0000                     PWM1CON equ 0FB7h ;# 
  2216                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2217  0000                     BAUDCON equ 0FB8h ;# 
  2218                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2219  0000                     BAUDCTL equ 0FB8h ;# 
  2220                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2221  0000                     CCP2CON equ 0FBAh ;# 
  2222                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2223  0000                     CCPR2 equ 0FBBh ;# 
  2224                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2225  0000                     CCPR2L equ 0FBBh ;# 
  2226                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2227  0000                     CCPR2H equ 0FBCh ;# 
  2228                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2229  0000                     ECCP1CON equ 0FBDh ;# 
  2230                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2231  0000                     CCP1CON equ 0FBDh ;# 
  2232                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2233  0000                     CCPR1 equ 0FBEh ;# 
  2234                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2235  0000                     CCPR1L equ 0FBEh ;# 
  2236                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2237  0000                     CCPR1H equ 0FBFh ;# 
  2238                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2239  0000                     ADCON2 equ 0FC0h ;# 
  2240                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2241  0000                     ADCON1 equ 0FC1h ;# 
  2242                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2243  0000                     ADCON0 equ 0FC2h ;# 
  2244                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2245  0000                     ADRES equ 0FC3h ;# 
  2246                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2247  0000                     ADRESL equ 0FC3h ;# 
  2248                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2249  0000                     ADRESH equ 0FC4h ;# 
  2250                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2251  0000                     SSPCON2 equ 0FC5h ;# 
  2252                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2253  0000                     SSP1CON2 equ 0FC5h ;# 
  2254                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2255  0000                     SSPCON1 equ 0FC6h ;# 
  2256                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2257  0000                     SSP1CON1 equ 0FC6h ;# 
  2258                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2259  0000                     SSPSTAT equ 0FC7h ;# 
  2260                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2261  0000                     SSP1STAT equ 0FC7h ;# 
  2262                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2263  0000                     SSPADD equ 0FC8h ;# 
  2264                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2265  0000                     SSP1ADD equ 0FC8h ;# 
  2266                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2267  0000                     SSPBUF equ 0FC9h ;# 
  2268                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2269  0000                     SSP1BUF equ 0FC9h ;# 
  2270                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2271  0000                     T2CON equ 0FCAh ;# 
  2272                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2273  0000                     PR2 equ 0FCBh ;# 
  2274                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2275  0000                     MEMCON equ 0FCBh ;# 
  2276                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2277  0000                     TMR2 equ 0FCCh ;# 
  2278                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2279  0000                     T1CON equ 0FCDh ;# 
  2280                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2281  0000                     TMR1 equ 0FCEh ;# 
  2282                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2283  0000                     TMR1L equ 0FCEh ;# 
  2284                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2285  0000                     TMR1H equ 0FCFh ;# 
  2286                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2287  0000                     RCON equ 0FD0h ;# 
  2288                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2289  0000                     WDTCON equ 0FD1h ;# 
  2290                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2291  0000                     OSCCON equ 0FD3h ;# 
  2292                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2293  0000                     T0CON equ 0FD5h ;# 
  2294                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2295  0000                     TMR0 equ 0FD6h ;# 
  2296                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2297  0000                     TMR0L equ 0FD6h ;# 
  2298                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2299  0000                     TMR0H equ 0FD7h ;# 
  2300                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2301  0000                     STATUS equ 0FD8h ;# 
  2302                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2303  0000                     FSR2 equ 0FD9h ;# 
  2304                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2305  0000                     FSR2L equ 0FD9h ;# 
  2306                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2307  0000                     FSR2H equ 0FDAh ;# 
  2308                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2309  0000                     PLUSW2 equ 0FDBh ;# 
  2310                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2311  0000                     PREINC2 equ 0FDCh ;# 
  2312                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2313  0000                     POSTDEC2 equ 0FDDh ;# 
  2314                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2315  0000                     POSTINC2 equ 0FDEh ;# 
  2316                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2317  0000                     INDF2 equ 0FDFh ;# 
  2318                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2319  0000                     BSR equ 0FE0h ;# 
  2320                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2321  0000                     FSR1 equ 0FE1h ;# 
  2322                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2323  0000                     FSR1L equ 0FE1h ;# 
  2324                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2325  0000                     FSR1H equ 0FE2h ;# 
  2326                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2327  0000                     PLUSW1 equ 0FE3h ;# 
  2328                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2329  0000                     PREINC1 equ 0FE4h ;# 
  2330                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2331  0000                     POSTDEC1 equ 0FE5h ;# 
  2332                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2333  0000                     POSTINC1 equ 0FE6h ;# 
  2334                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2335  0000                     INDF1 equ 0FE7h ;# 
  2336                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2337  0000                     WREG equ 0FE8h ;# 
  2338                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2339  0000                     FSR0 equ 0FE9h ;# 
  2340                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2341  0000                     FSR0L equ 0FE9h ;# 
  2342                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2343  0000                     FSR0H equ 0FEAh ;# 
  2344                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2345  0000                     PLUSW0 equ 0FEBh ;# 
  2346                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2347  0000                     PREINC0 equ 0FECh ;# 
  2348                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2349  0000                     POSTDEC0 equ 0FEDh ;# 
  2350                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2351  0000                     POSTINC0 equ 0FEEh ;# 
  2352                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2353  0000                     INDF0 equ 0FEFh ;# 
  2354                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2355  0000                     INTCON3 equ 0FF0h ;# 
  2356                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2357  0000                     INTCON2 equ 0FF1h ;# 
  2358                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2359  0000                     INTCON equ 0FF2h ;# 
  2360                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2361  0000                     PROD equ 0FF3h ;# 
  2362                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2363  0000                     PRODL equ 0FF3h ;# 
  2364                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2365  0000                     PRODH equ 0FF4h ;# 
  2366                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2367  0000                     TABLAT equ 0FF5h ;# 
  2368                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2369  0000                     TBLPTR equ 0FF6h ;# 
  2370                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2371  0000                     TBLPTRL equ 0FF6h ;# 
  2372                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2373  0000                     TBLPTRH equ 0FF7h ;# 
  2374                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2375  0000                     TBLPTRU equ 0FF8h ;# 
  2376                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2377  0000                     PCLAT equ 0FF9h ;# 
  2378                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2379  0000                     PC equ 0FF9h ;# 
  2380                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2381  0000                     PCL equ 0FF9h ;# 
  2382                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2383  0000                     PCLATH equ 0FFAh ;# 
  2384                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2385  0000                     PCLATU equ 0FFBh ;# 
  2386                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2387  0000                     STKPTR equ 0FFCh ;# 
  2388                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2389  0000                     TOS equ 0FFDh ;# 
  2390                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2391  0000                     TOSL equ 0FFDh ;# 
  2392                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2393  0000                     TOSH equ 0FFEh ;# 
  2394                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2395  0000                     TOSU equ 0FFFh ;# 
  2396                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2397  0000                     PORTA equ 0F80h ;# 
  2398                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2399  0000                     PORTB equ 0F81h ;# 
  2400                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2401  0000                     PORTC equ 0F82h ;# 
  2402                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2403  0000                     PORTD equ 0F83h ;# 
  2404                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2405  0000                     PORTE equ 0F84h ;# 
  2406                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2407  0000                     SSP2CON2 equ 0F85h ;# 
  2408                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2409  0000                     SSP2CON1 equ 0F86h ;# 
  2410                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2411  0000                     SSP2STAT equ 0F87h ;# 
  2412                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2413  0000                     SSP2ADD equ 0F88h ;# 
  2414                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2415  0000                     LATA equ 0F89h ;# 
  2416                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2417  0000                     LATB equ 0F8Ah ;# 
  2418                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2419  0000                     LATC equ 0F8Bh ;# 
  2420                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2421  0000                     LATD equ 0F8Ch ;# 
  2422                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2423  0000                     LATE equ 0F8Dh ;# 
  2424                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2425  0000                     SSP2BUF equ 0F8Eh ;# 
  2426                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2427  0000                     TRISA equ 0F92h ;# 
  2428                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2429  0000                     DDRA equ 0F92h ;# 
  2430                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2431  0000                     TRISB equ 0F93h ;# 
  2432                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2433  0000                     DDRB equ 0F93h ;# 
  2434                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2435  0000                     TRISC equ 0F94h ;# 
  2436                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2437  0000                     DDRC equ 0F94h ;# 
  2438                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2439  0000                     TRISD equ 0F95h ;# 
  2440                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2441  0000                     DDRD equ 0F95h ;# 
  2442                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2443  0000                     TRISE equ 0F96h ;# 
  2444                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2445  0000                     DDRE equ 0F96h ;# 
  2446                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2447  0000                     OSCTUNE equ 0F9Bh ;# 
  2448                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2449  0000                     PIE1 equ 0F9Dh ;# 
  2450                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2451  0000                     PIR1 equ 0F9Eh ;# 
  2452                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2453  0000                     IPR1 equ 0F9Fh ;# 
  2454                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2455  0000                     PIE2 equ 0FA0h ;# 
  2456                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2457  0000                     PIR2 equ 0FA1h ;# 
  2458                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2459  0000                     IPR2 equ 0FA2h ;# 
  2460                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2461  0000                     PIE3 equ 0FA3h ;# 
  2462                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2463  0000                     PIR3 equ 0FA4h ;# 
  2464                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2465  0000                     IPR3 equ 0FA5h ;# 
  2466                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2467  0000                     EECON1 equ 0FA6h ;# 
  2468                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2469  0000                     EECON2 equ 0FA7h ;# 
  2470                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2471  0000                     RCSTA equ 0FABh ;# 
  2472                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2473  0000                     RCSTA1 equ 0FABh ;# 
  2474                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2475  0000                     TXSTA equ 0FACh ;# 
  2476                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2477  0000                     TXSTA1 equ 0FACh ;# 
  2478                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2479  0000                     TXREG equ 0FADh ;# 
  2480                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2481  0000                     TXREG1 equ 0FADh ;# 
  2482                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2483  0000                     RCREG equ 0FAEh ;# 
  2484                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2485  0000                     RCREG1 equ 0FAEh ;# 
  2486                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2487  0000                     SPBRG equ 0FAFh ;# 
  2488                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2489  0000                     SPBRG1 equ 0FAFh ;# 
  2490                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2491  0000                     SPBRGH equ 0FB0h ;# 
  2492                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2493  0000                     CMCON equ 0FB4h ;# 
  2494                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2495  0000                     CVRCON equ 0FB5h ;# 
  2496                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2497  0000                     ECCP1AS equ 0FB6h ;# 
  2498                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2499  0000                     ECCP1DEL equ 0FB7h ;# 
  2500                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2501  0000                     PWM1CON equ 0FB7h ;# 
  2502                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2503  0000                     BAUDCON equ 0FB8h ;# 
  2504                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2505  0000                     BAUDCTL equ 0FB8h ;# 
  2506                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2507  0000                     CCP2CON equ 0FBAh ;# 
  2508                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2509  0000                     CCPR2 equ 0FBBh ;# 
  2510                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2511  0000                     CCPR2L equ 0FBBh ;# 
  2512                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2513  0000                     CCPR2H equ 0FBCh ;# 
  2514                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2515  0000                     ECCP1CON equ 0FBDh ;# 
  2516                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2517  0000                     CCP1CON equ 0FBDh ;# 
  2518                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2519  0000                     CCPR1 equ 0FBEh ;# 
  2520                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2521  0000                     CCPR1L equ 0FBEh ;# 
  2522                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2523  0000                     CCPR1H equ 0FBFh ;# 
  2524                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2525  0000                     ADCON2 equ 0FC0h ;# 
  2526                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2527  0000                     ADCON1 equ 0FC1h ;# 
  2528                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2529  0000                     ADCON0 equ 0FC2h ;# 
  2530                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2531  0000                     ADRES equ 0FC3h ;# 
  2532                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2533  0000                     ADRESL equ 0FC3h ;# 
  2534                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2535  0000                     ADRESH equ 0FC4h ;# 
  2536                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2537  0000                     SSPCON2 equ 0FC5h ;# 
  2538                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2539  0000                     SSP1CON2 equ 0FC5h ;# 
  2540                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2541  0000                     SSPCON1 equ 0FC6h ;# 
  2542                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2543  0000                     SSP1CON1 equ 0FC6h ;# 
  2544                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2545  0000                     SSPSTAT equ 0FC7h ;# 
  2546                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2547  0000                     SSP1STAT equ 0FC7h ;# 
  2548                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2549  0000                     SSPADD equ 0FC8h ;# 
  2550                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2551  0000                     SSP1ADD equ 0FC8h ;# 
  2552                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2553  0000                     SSPBUF equ 0FC9h ;# 
  2554                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2555  0000                     SSP1BUF equ 0FC9h ;# 
  2556                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2557  0000                     T2CON equ 0FCAh ;# 
  2558                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2559  0000                     PR2 equ 0FCBh ;# 
  2560                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2561  0000                     MEMCON equ 0FCBh ;# 
  2562                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2563  0000                     TMR2 equ 0FCCh ;# 
  2564                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2565  0000                     T1CON equ 0FCDh ;# 
  2566                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2567  0000                     TMR1 equ 0FCEh ;# 
  2568                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2569  0000                     TMR1L equ 0FCEh ;# 
  2570                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2571  0000                     TMR1H equ 0FCFh ;# 
  2572                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2573  0000                     RCON equ 0FD0h ;# 
  2574                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2575  0000                     WDTCON equ 0FD1h ;# 
  2576                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2577  0000                     OSCCON equ 0FD3h ;# 
  2578                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2579  0000                     T0CON equ 0FD5h ;# 
  2580                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2581  0000                     TMR0 equ 0FD6h ;# 
  2582                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2583  0000                     TMR0L equ 0FD6h ;# 
  2584                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2585  0000                     TMR0H equ 0FD7h ;# 
  2586                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2587  0000                     STATUS equ 0FD8h ;# 
  2588                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2589  0000                     FSR2 equ 0FD9h ;# 
  2590                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2591  0000                     FSR2L equ 0FD9h ;# 
  2592                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2593  0000                     FSR2H equ 0FDAh ;# 
  2594                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2595  0000                     PLUSW2 equ 0FDBh ;# 
  2596                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2597  0000                     PREINC2 equ 0FDCh ;# 
  2598                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2599  0000                     POSTDEC2 equ 0FDDh ;# 
  2600                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2601  0000                     POSTINC2 equ 0FDEh ;# 
  2602                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2603  0000                     INDF2 equ 0FDFh ;# 
  2604                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2605  0000                     BSR equ 0FE0h ;# 
  2606                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2607  0000                     FSR1 equ 0FE1h ;# 
  2608                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2609  0000                     FSR1L equ 0FE1h ;# 
  2610                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2611  0000                     FSR1H equ 0FE2h ;# 
  2612                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2613  0000                     PLUSW1 equ 0FE3h ;# 
  2614                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2615  0000                     PREINC1 equ 0FE4h ;# 
  2616                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2617  0000                     POSTDEC1 equ 0FE5h ;# 
  2618                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2619  0000                     POSTINC1 equ 0FE6h ;# 
  2620                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2621  0000                     INDF1 equ 0FE7h ;# 
  2622                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2623  0000                     WREG equ 0FE8h ;# 
  2624                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2625  0000                     FSR0 equ 0FE9h ;# 
  2626                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2627  0000                     FSR0L equ 0FE9h ;# 
  2628                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2629  0000                     FSR0H equ 0FEAh ;# 
  2630                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2631  0000                     PLUSW0 equ 0FEBh ;# 
  2632                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2633  0000                     PREINC0 equ 0FECh ;# 
  2634                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2635  0000                     POSTDEC0 equ 0FEDh ;# 
  2636                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2637  0000                     POSTINC0 equ 0FEEh ;# 
  2638                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2639  0000                     INDF0 equ 0FEFh ;# 
  2640                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2641  0000                     INTCON3 equ 0FF0h ;# 
  2642                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2643  0000                     INTCON2 equ 0FF1h ;# 
  2644                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2645  0000                     INTCON equ 0FF2h ;# 
  2646                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2647  0000                     PROD equ 0FF3h ;# 
  2648                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2649  0000                     PRODL equ 0FF3h ;# 
  2650                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2651  0000                     PRODH equ 0FF4h ;# 
  2652                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2653  0000                     TABLAT equ 0FF5h ;# 
  2654                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2655  0000                     TBLPTR equ 0FF6h ;# 
  2656                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2657  0000                     TBLPTRL equ 0FF6h ;# 
  2658                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2659  0000                     TBLPTRH equ 0FF7h ;# 
  2660                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2661  0000                     TBLPTRU equ 0FF8h ;# 
  2662                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2663  0000                     PCLAT equ 0FF9h ;# 
  2664                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2665  0000                     PC equ 0FF9h ;# 
  2666                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2667  0000                     PCL equ 0FF9h ;# 
  2668                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2669  0000                     PCLATH equ 0FFAh ;# 
  2670                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2671  0000                     PCLATU equ 0FFBh ;# 
  2672                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2673  0000                     STKPTR equ 0FFCh ;# 
  2674                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2675  0000                     TOS equ 0FFDh ;# 
  2676                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2677  0000                     TOSL equ 0FFDh ;# 
  2678                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2679  0000                     TOSH equ 0FFEh ;# 
  2680                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2681  0000                     TOSU equ 0FFFh ;# 
  2682                           	FNCALL	_main,_init_uart_recv
  2683                           	FNCALL	_main,_init_i2c
  2684                           	FNCALL	_main,_init_timer1_lthread
  2685                           	FNCALL	_main,_init_queues
  2686                           	FNCALL	_main,_OpenTimer1
  2687                           	FNCALL	_main,_enable_interrupts
  2688                           	FNCALL	_main,_i2c_configure_slave
  2689                           	FNCALL	_main,_OpenUSART
  2690                           	FNCALL	_main,_block_on_To_msgqueues
  2691                           	FNCALL	_main,_ToMainHigh_recvmsg
  2692                           	FNCALL	_main,_timer0_lthread
  2693                           	FNCALL	_main,_ToMainLow_recvmsg
  2694                           	FNCALL	_main,_timer1_lthread
  2695                           	FNCALL	_main,_FromMainLow_sendmsg
  2696                           	FNCALL	_main,_uart_lthread
  2697                           	FNCALL	_init_timer1_lthread,_OpenADC
  2698                           	FNCALL	_init_timer1_lthread,_SetChanADC
  2699                           	FNCALL	_init_queues,_init_queue
  2700                           	FNCALL	_block_on_To_msgqueues,_in_main
  2701                           	FNCALL	_block_on_To_msgqueues,_check_msg
  2702                           	FNCALL	_block_on_To_msgqueues,_Delay1KTCYx
  2703                           	FNCALL	_in_main,_in_low_int
  2704                           	FNCALL	_in_main,_in_high_int
  2705                           	FNCALL	_in_low_int,_in_high_int
  2706                           	FNCALL	_ToMainHigh_recvmsg,_recv_msg
  2707                           	FNCALL	_ToMainLow_recvmsg,_recv_msg
  2708                           	FNCALL	_timer1_lthread,_ConvertADC
  2709                           	FNCALL	_FromMainLow_sendmsg,_send_msg
  2710                           	FNCALL	_send_msg,_memcpy
  2711                           	FNCALL	_recv_msg,_memcpy
  2712                           	FNROOT	_main
  2713                           	FNCALL	_InterruptHandlerHigh,_i2c_int_handler
  2714                           	FNCALL	_InterruptHandlerHigh,_timer0_int_handler
  2715                           	FNCALL	_InterruptHandlerHigh,_SleepIfOkay
  2716                           	FNCALL	_i2c_int_handler,_i2c_slave_int_handler
  2717                           	FNCALL	_i2c_int_handler,_i2c_master_int_handler
  2718                           	FNCALL	_timer0_int_handler,_WriteTimer0
  2719                           	FNCALL	_timer0_int_handler,_FromMainHigh_recvmsg
  2720                           	FNCALL	_timer0_int_handler,_ToMainHigh_sendmsg
  2721                           	FNCALL	_SleepIfOkay,i2_in_low_int
  2722                           	FNCALL	_SleepIfOkay,i2_in_high_int
  2723                           	FNCALL	_SleepIfOkay,i2_check_msg
  2724                           	FNCALL	_SleepIfOkay,_enter_sleep_mode
  2725                           	FNCALL	_FromMainHigh_recvmsg,i2_recv_msg
  2726                           	FNCALL	_i2c_slave_int_handler,_handle_start
  2727                           	FNCALL	_i2c_slave_int_handler,_FromMainLow_recvmsg
  2728                           	FNCALL	_i2c_slave_int_handler,_start_i2c_slave_reply
  2729                           	FNCALL	_i2c_slave_int_handler,_ToMainHigh_sendmsg
  2730                           	FNCALL	_ToMainHigh_sendmsg,i2_send_msg
  2731                           	FNCALL	_FromMainLow_recvmsg,i2_recv_msg
  2732                           	FNCALL	i2_in_low_int,i2_in_high_int
  2733                           	FNCALL	i2_send_msg,i2_memcpy
  2734                           	FNCALL	i2_recv_msg,i2_memcpy
  2735                           	FNCALL	intlevel2,_InterruptHandlerHigh
  2736                           	global	intlevel2
  2737                           	FNROOT	intlevel2
  2738                           	FNCALL	_InterruptHandlerLow,_timer1_int_handler
  2739                           	FNCALL	_InterruptHandlerLow,_adc_int_handler
  2740                           	FNCALL	_InterruptHandlerLow,_uart_recv_int_handler
  2741                           	FNCALL	_timer1_int_handler,_ReadTimer1
  2742                           	FNCALL	_timer1_int_handler,_WriteTimer1
  2743                           	FNCALL	_timer1_int_handler,_ToMainLow_sendmsg
  2744                           	FNCALL	_adc_int_handler,_ReadADC
  2745                           	FNCALL	_adc_int_handler,_ToMainLow_sendmsg
  2746                           	FNCALL	_uart_recv_int_handler,_ReadUSART
  2747                           	FNCALL	_uart_recv_int_handler,_ToMainLow_sendmsg
  2748                           	FNCALL	_ToMainLow_sendmsg,i1_send_msg
  2749                           	FNCALL	i1_send_msg,i1_memcpy
  2750                           	FNCALL	intlevel1,_InterruptHandlerLow
  2751                           	global	intlevel1
  2752                           	FNROOT	intlevel1
  2753                           	global	_MQ_Main_Willing_to_block
  2754                           	global	_USART_Status
  2755                           	global	_adcMsgCount
  2756                           	global	_emptyMsgCount
  2757                           	global	_i2cMode
  2758                           	global	_FromMainLow_MQ
  2759                           	global	_ToMainHigh_MQ
  2760                           	global	_ToMainLow_MQ
  2761                           	global	_FromMainHigh_MQ
  2762                           	global	_PC
  2763  0000                     _PC	set	0xFF9
  2764                           	global	_PCLAT
  2765  0000                     _PCLAT	set	0xFF9
  2766                           	global	_TBLPTR
  2767  0000                     _TBLPTR	set	0xFF6
  2768                           	global	_TOS
  2769  0000                     _TOS	set	0xFFD
  2770                           	global	_ADRES
  2771  0000                     _ADRES	set	0xFC3
  2772                           	global	_CCPR1
  2773  0000                     _CCPR1	set	0xFBE
  2774                           	global	_CCPR2
  2775  0000                     _CCPR2	set	0xFBB
  2776                           	global	_FSR0
  2777  0000                     _FSR0	set	0xFE9
  2778                           	global	_FSR1
  2779  0000                     _FSR1	set	0xFE1
  2780                           	global	_FSR2
  2781  0000                     _FSR2	set	0xFD9
  2782                           	global	_PROD
  2783  0000                     _PROD	set	0xFF3
  2784                           	global	_TMR0
  2785  0000                     _TMR0	set	0xFD6
  2786                           	global	_TMR1
  2787  0000                     _TMR1	set	0xFCE
  2788                           	global	_ADCON0
  2789  0000                     _ADCON0	set	0xFC2
  2790                           	global	_ADCON0bits
  2791  0000                     _ADCON0bits	set	0xFC2
  2792                           	global	_ADCON1
  2793  0000                     _ADCON1	set	0xFC1
  2794                           	global	_ADCON1bits
  2795  0000                     _ADCON1bits	set	0xFC1
  2796                           	global	_ADCON2
  2797  0000                     _ADCON2	set	0xFC0
  2798                           	global	_ADCON2bits
  2799  0000                     _ADCON2bits	set	0xFC0
  2800                           	global	_ADRESH
  2801  0000                     _ADRESH	set	0xFC4
  2802                           	global	_ADRESL
  2803  0000                     _ADRESL	set	0xFC3
  2804                           	global	_BAUDCON
  2805  0000                     _BAUDCON	set	0xFB8
  2806                           	global	_BAUDCONbits
  2807  0000                     _BAUDCONbits	set	0xFB8
  2808                           	global	_BAUDCTL
  2809  0000                     _BAUDCTL	set	0xFB8
  2810                           	global	_BAUDCTLbits
  2811  0000                     _BAUDCTLbits	set	0xFB8
  2812                           	global	_BSR
  2813  0000                     _BSR	set	0xFE0
  2814                           	global	_CCP1CON
  2815  0000                     _CCP1CON	set	0xFBD
  2816                           	global	_CCP1CONbits
  2817  0000                     _CCP1CONbits	set	0xFBD
  2818                           	global	_CCP2CON
  2819  0000                     _CCP2CON	set	0xFBA
  2820                           	global	_CCP2CONbits
  2821  0000                     _CCP2CONbits	set	0xFBA
  2822                           	global	_CCPR1H
  2823  0000                     _CCPR1H	set	0xFBF
  2824                           	global	_CCPR1L
  2825  0000                     _CCPR1L	set	0xFBE
  2826                           	global	_CCPR2H
  2827  0000                     _CCPR2H	set	0xFBC
  2828                           	global	_CCPR2L
  2829  0000                     _CCPR2L	set	0xFBB
  2830                           	global	_CMCON
  2831  0000                     _CMCON	set	0xFB4
  2832                           	global	_CMCONbits
  2833  0000                     _CMCONbits	set	0xFB4
  2834                           	global	_CVRCON
  2835  0000                     _CVRCON	set	0xFB5
  2836                           	global	_CVRCONbits
  2837  0000                     _CVRCONbits	set	0xFB5
  2838                           	global	_DDRA
  2839  0000                     _DDRA	set	0xF92
  2840                           	global	_DDRAbits
  2841  0000                     _DDRAbits	set	0xF92
  2842                           	global	_DDRB
  2843  0000                     _DDRB	set	0xF93
  2844                           	global	_DDRBbits
  2845  0000                     _DDRBbits	set	0xF93
  2846                           	global	_DDRC
  2847  0000                     _DDRC	set	0xF94
  2848                           	global	_DDRCbits
  2849  0000                     _DDRCbits	set	0xF94
  2850                           	global	_DDRD
  2851  0000                     _DDRD	set	0xF95
  2852                           	global	_DDRDbits
  2853  0000                     _DDRDbits	set	0xF95
  2854                           	global	_DDRE
  2855  0000                     _DDRE	set	0xF96
  2856                           	global	_DDREbits
  2857  0000                     _DDREbits	set	0xF96
  2858                           	global	_ECCP1AS
  2859  0000                     _ECCP1AS	set	0xFB6
  2860                           	global	_ECCP1ASbits
  2861  0000                     _ECCP1ASbits	set	0xFB6
  2862                           	global	_ECCP1CON
  2863  0000                     _ECCP1CON	set	0xFBD
  2864                           	global	_ECCP1CONbits
  2865  0000                     _ECCP1CONbits	set	0xFBD
  2866                           	global	_ECCP1DEL
  2867  0000                     _ECCP1DEL	set	0xFB7
  2868                           	global	_ECCP1DELbits
  2869  0000                     _ECCP1DELbits	set	0xFB7
  2870                           	global	_EECON1
  2871  0000                     _EECON1	set	0xFA6
  2872                           	global	_EECON1bits
  2873  0000                     _EECON1bits	set	0xFA6
  2874                           	global	_EECON2
  2875  0000                     _EECON2	set	0xFA7
  2876                           	global	_FSR0H
  2877  0000                     _FSR0H	set	0xFEA
  2878                           	global	_FSR0L
  2879  0000                     _FSR0L	set	0xFE9
  2880                           	global	_FSR1H
  2881  0000                     _FSR1H	set	0xFE2
  2882                           	global	_FSR1L
  2883  0000                     _FSR1L	set	0xFE1
  2884                           	global	_FSR2H
  2885  0000                     _FSR2H	set	0xFDA
  2886                           	global	_FSR2L
  2887  0000                     _FSR2L	set	0xFD9
  2888                           	global	_INDF0
  2889  0000                     _INDF0	set	0xFEF
  2890                           	global	_INDF1
  2891  0000                     _INDF1	set	0xFE7
  2892                           	global	_INDF2
  2893  0000                     _INDF2	set	0xFDF
  2894                           	global	_INTCON
  2895  0000                     _INTCON	set	0xFF2
  2896                           	global	_INTCON2
  2897  0000                     _INTCON2	set	0xFF1
  2898                           	global	_INTCON2bits
  2899  0000                     _INTCON2bits	set	0xFF1
  2900                           	global	_INTCON3
  2901  0000                     _INTCON3	set	0xFF0
  2902                           	global	_INTCON3bits
  2903  0000                     _INTCON3bits	set	0xFF0
  2904                           	global	_INTCONbits
  2905  0000                     _INTCONbits	set	0xFF2
  2906                           	global	_IPR1
  2907  0000                     _IPR1	set	0xF9F
  2908                           	global	_IPR1bits
  2909  0000                     _IPR1bits	set	0xF9F
  2910                           	global	_IPR2
  2911  0000                     _IPR2	set	0xFA2
  2912                           	global	_IPR2bits
  2913  0000                     _IPR2bits	set	0xFA2
  2914                           	global	_IPR3
  2915  0000                     _IPR3	set	0xFA5
  2916                           	global	_IPR3bits
  2917  0000                     _IPR3bits	set	0xFA5
  2918                           	global	_LATA
  2919  0000                     _LATA	set	0xF89
  2920                           	global	_LATAbits
  2921  0000                     _LATAbits	set	0xF89
  2922                           	global	_LATB
  2923  0000                     _LATB	set	0xF8A
  2924                           	global	_LATBbits
  2925  0000                     _LATBbits	set	0xF8A
  2926                           	global	_LATC
  2927  0000                     _LATC	set	0xF8B
  2928                           	global	_LATCbits
  2929  0000                     _LATCbits	set	0xF8B
  2930                           	global	_LATD
  2931  0000                     _LATD	set	0xF8C
  2932                           	global	_LATDbits
  2933  0000                     _LATDbits	set	0xF8C
  2934                           	global	_LATE
  2935  0000                     _LATE	set	0xF8D
  2936                           	global	_LATEbits
  2937  0000                     _LATEbits	set	0xF8D
  2938                           	global	_MEMCON
  2939  0000                     _MEMCON	set	0xFCB
  2940                           	global	_OSCCON
  2941  0000                     _OSCCON	set	0xFD3
  2942                           	global	_OSCCONbits
  2943  0000                     _OSCCONbits	set	0xFD3
  2944                           	global	_OSCTUNE
  2945  0000                     _OSCTUNE	set	0xF9B
  2946                           	global	_OSCTUNEbits
  2947  0000                     _OSCTUNEbits	set	0xF9B
  2948                           	global	_PCL
  2949  0000                     _PCL	set	0xFF9
  2950                           	global	_PCLATH
  2951  0000                     _PCLATH	set	0xFFA
  2952                           	global	_PCLATU
  2953  0000                     _PCLATU	set	0xFFB
  2954                           	global	_PIE1
  2955  0000                     _PIE1	set	0xF9D
  2956                           	global	_PIE1bits
  2957  0000                     _PIE1bits	set	0xF9D
  2958                           	global	_PIE2
  2959  0000                     _PIE2	set	0xFA0
  2960                           	global	_PIE2bits
  2961  0000                     _PIE2bits	set	0xFA0
  2962                           	global	_PIE3
  2963  0000                     _PIE3	set	0xFA3
  2964                           	global	_PIE3bits
  2965  0000                     _PIE3bits	set	0xFA3
  2966                           	global	_PIR1
  2967  0000                     _PIR1	set	0xF9E
  2968                           	global	_PIR1bits
  2969  0000                     _PIR1bits	set	0xF9E
  2970                           	global	_PIR2
  2971  0000                     _PIR2	set	0xFA1
  2972                           	global	_PIR2bits
  2973  0000                     _PIR2bits	set	0xFA1
  2974                           	global	_PIR3
  2975  0000                     _PIR3	set	0xFA4
  2976                           	global	_PIR3bits
  2977  0000                     _PIR3bits	set	0xFA4
  2978                           	global	_PLUSW0
  2979  0000                     _PLUSW0	set	0xFEB
  2980                           	global	_PLUSW1
  2981  0000                     _PLUSW1	set	0xFE3
  2982                           	global	_PLUSW2
  2983  0000                     _PLUSW2	set	0xFDB
  2984                           	global	_PORTA
  2985  0000                     _PORTA	set	0xF80
  2986                           	global	_PORTAbits
  2987  0000                     _PORTAbits	set	0xF80
  2988                           	global	_PORTB
  2989  0000                     _PORTB	set	0xF81
  2990                           	global	_PORTBbits
  2991  0000                     _PORTBbits	set	0xF81
  2992                           	global	_PORTC
  2993  0000                     _PORTC	set	0xF82
  2994                           	global	_PORTCbits
  2995  0000                     _PORTCbits	set	0xF82
  2996                           	global	_PORTD
  2997  0000                     _PORTD	set	0xF83
  2998                           	global	_PORTDbits
  2999  0000                     _PORTDbits	set	0xF83
  3000                           	global	_PORTE
  3001  0000                     _PORTE	set	0xF84
  3002                           	global	_PORTEbits
  3003  0000                     _PORTEbits	set	0xF84
  3004                           	global	_POSTDEC0
  3005  0000                     _POSTDEC0	set	0xFED
  3006                           	global	_POSTDEC1
  3007  0000                     _POSTDEC1	set	0xFE5
  3008                           	global	_POSTDEC2
  3009  0000                     _POSTDEC2	set	0xFDD
  3010                           	global	_POSTINC0
  3011  0000                     _POSTINC0	set	0xFEE
  3012                           	global	_POSTINC1
  3013  0000                     _POSTINC1	set	0xFE6
  3014                           	global	_POSTINC2
  3015  0000                     _POSTINC2	set	0xFDE
  3016                           	global	_PR2
  3017  0000                     _PR2	set	0xFCB
  3018                           	global	_PREINC0
  3019  0000                     _PREINC0	set	0xFEC
  3020                           	global	_PREINC1
  3021  0000                     _PREINC1	set	0xFE4
  3022                           	global	_PREINC2
  3023  0000                     _PREINC2	set	0xFDC
  3024                           	global	_PRODH
  3025  0000                     _PRODH	set	0xFF4
  3026                           	global	_PRODL
  3027  0000                     _PRODL	set	0xFF3
  3028                           	global	_PWM1CON
  3029  0000                     _PWM1CON	set	0xFB7
  3030                           	global	_PWM1CONbits
  3031  0000                     _PWM1CONbits	set	0xFB7
  3032                           	global	_RCON
  3033  0000                     _RCON	set	0xFD0
  3034                           	global	_RCONbits
  3035  0000                     _RCONbits	set	0xFD0
  3036                           	global	_RCREG
  3037  0000                     _RCREG	set	0xFAE
  3038                           	global	_RCREG1
  3039  0000                     _RCREG1	set	0xFAE
  3040                           	global	_RCSTA
  3041  0000                     _RCSTA	set	0xFAB
  3042                           	global	_RCSTA1
  3043  0000                     _RCSTA1	set	0xFAB
  3044                           	global	_RCSTA1bits
  3045  0000                     _RCSTA1bits	set	0xFAB
  3046                           	global	_RCSTAbits
  3047  0000                     _RCSTAbits	set	0xFAB
  3048                           	global	_SPBRG
  3049  0000                     _SPBRG	set	0xFAF
  3050                           	global	_SPBRG1
  3051  0000                     _SPBRG1	set	0xFAF
  3052                           	global	_SPBRGH
  3053  0000                     _SPBRGH	set	0xFB0
  3054                           	global	_SSP1ADD
  3055  0000                     _SSP1ADD	set	0xFC8
  3056                           	global	_SSP1ADDbits
  3057  0000                     _SSP1ADDbits	set	0xFC8
  3058                           	global	_SSP1BUF
  3059  0000                     _SSP1BUF	set	0xFC9
  3060                           	global	_SSP1CON1bits
  3061  0000                     _SSP1CON1bits	set	0xFC6
  3062                           	global	_SSP1CON2
  3063  0000                     _SSP1CON2	set	0xFC5
  3064                           	global	_SSP1CON2bits
  3065  0000                     _SSP1CON2bits	set	0xFC5
  3066                           	global	_SSP1STAT
  3067  0000                     _SSP1STAT	set	0xFC7
  3068                           	global	_SSP1STATbits
  3069  0000                     _SSP1STATbits	set	0xFC7
  3070                           	global	_SSP2ADD
  3071  0000                     _SSP2ADD	set	0xF88
  3072                           	global	_SSP2ADDbits
  3073  0000                     _SSP2ADDbits	set	0xF88
  3074                           	global	_SSP2BUF
  3075  0000                     _SSP2BUF	set	0xF8E
  3076                           	global	_SSP2CON1
  3077  0000                     _SSP2CON1	set	0xF86
  3078                           	global	_SSP2CON1bits
  3079  0000                     _SSP2CON1bits	set	0xF86
  3080                           	global	_SSP2CON2
  3081  0000                     _SSP2CON2	set	0xF85
  3082                           	global	_SSP2CON2bits
  3083  0000                     _SSP2CON2bits	set	0xF85
  3084                           	global	_SSP2STAT
  3085  0000                     _SSP2STAT	set	0xF87
  3086                           	global	_SSP2STATbits
  3087  0000                     _SSP2STATbits	set	0xF87
  3088                           	global	_SSPADD
  3089  0000                     _SSPADD	set	0xFC8
  3090                           	global	_SSPADDbits
  3091  0000                     _SSPADDbits	set	0xFC8
  3092                           	global	_SSPBUF
  3093  0000                     _SSPBUF	set	0xFC9
  3094                           	global	_SSPCON1
  3095  0000                     _SSPCON1	set	0xFC6
  3096                           	global	_SSPCON1bits
  3097  0000                     _SSPCON1bits	set	0xFC6
  3098                           	global	_SSPCON2
  3099  0000                     _SSPCON2	set	0xFC5
  3100                           	global	_SSPCON2bits
  3101  0000                     _SSPCON2bits	set	0xFC5
  3102                           	global	_SSPSTAT
  3103  0000                     _SSPSTAT	set	0xFC7
  3104                           	global	_SSPSTATbits
  3105  0000                     _SSPSTATbits	set	0xFC7
  3106                           	global	_STATUS
  3107  0000                     _STATUS	set	0xFD8
  3108                           	global	_STATUSbits
  3109  0000                     _STATUSbits	set	0xFD8
  3110                           	global	_STKPTR
  3111  0000                     _STKPTR	set	0xFFC
  3112                           	global	_STKPTRbits
  3113  0000                     _STKPTRbits	set	0xFFC
  3114                           	global	_T0CON
  3115  0000                     _T0CON	set	0xFD5
  3116                           	global	_T0CONbits
  3117  0000                     _T0CONbits	set	0xFD5
  3118                           	global	_T1CON
  3119  0000                     _T1CON	set	0xFCD
  3120                           	global	_T1CONbits
  3121  0000                     _T1CONbits	set	0xFCD
  3122                           	global	_T2CON
  3123  0000                     _T2CON	set	0xFCA
  3124                           	global	_T2CONbits
  3125  0000                     _T2CONbits	set	0xFCA
  3126                           	global	_TABLAT
  3127  0000                     _TABLAT	set	0xFF5
  3128                           	global	_TBLPTRH
  3129  0000                     _TBLPTRH	set	0xFF7
  3130                           	global	_TBLPTRL
  3131  0000                     _TBLPTRL	set	0xFF6
  3132                           	global	_TBLPTRU
  3133  0000                     _TBLPTRU	set	0xFF8
  3134                           	global	_TMR0H
  3135  0000                     _TMR0H	set	0xFD7
  3136                           	global	_TMR0L
  3137  0000                     _TMR0L	set	0xFD6
  3138                           	global	_TMR1H
  3139  0000                     _TMR1H	set	0xFCF
  3140                           	global	_TMR1L
  3141  0000                     _TMR1L	set	0xFCE
  3142                           	global	_TMR2
  3143  0000                     _TMR2	set	0xFCC
  3144                           	global	_TOSH
  3145  0000                     _TOSH	set	0xFFE
  3146                           	global	_TOSL
  3147  0000                     _TOSL	set	0xFFD
  3148                           	global	_TOSU
  3149  0000                     _TOSU	set	0xFFF
  3150                           	global	_TRISA
  3151  0000                     _TRISA	set	0xF92
  3152                           	global	_TRISAbits
  3153  0000                     _TRISAbits	set	0xF92
  3154                           	global	_TRISB
  3155  0000                     _TRISB	set	0xF93
  3156                           	global	_TRISBbits
  3157  0000                     _TRISBbits	set	0xF93
  3158                           	global	_TRISC
  3159  0000                     _TRISC	set	0xF94
  3160                           	global	_TRISCbits
  3161  0000                     _TRISCbits	set	0xF94
  3162                           	global	_TRISD
  3163  0000                     _TRISD	set	0xF95
  3164                           	global	_TRISDbits
  3165  0000                     _TRISDbits	set	0xF95
  3166                           	global	_TRISE
  3167  0000                     _TRISE	set	0xF96
  3168                           	global	_TRISEbits
  3169  0000                     _TRISEbits	set	0xF96
  3170                           	global	_TXREG
  3171  0000                     _TXREG	set	0xFAD
  3172                           	global	_TXREG1
  3173  0000                     _TXREG1	set	0xFAD
  3174                           	global	_TXSTA
  3175  0000                     _TXSTA	set	0xFAC
  3176                           	global	_TXSTA1
  3177  0000                     _TXSTA1	set	0xFAC
  3178                           	global	_TXSTA1bits
  3179  0000                     _TXSTA1bits	set	0xFAC
  3180                           	global	_TXSTAbits
  3181  0000                     _TXSTAbits	set	0xFAC
  3182                           	global	_WDTCON
  3183  0000                     _WDTCON	set	0xFD1
  3184                           	global	_WDTCONbits
  3185  0000                     _WDTCONbits	set	0xFD1
  3186                           	global	_WREG
  3187  0000                     _WREG	set	0xFE8
  3188                           	global	_ABDEN
  3189  0000                     _ABDEN	set	0x7DC0
  3190                           	global	_ABDOVF
  3191  0000                     _ABDOVF	set	0x7DC7
  3192                           	global	_ACKDT
  3193  0000                     _ACKDT	set	0x7E2D
  3194                           	global	_ACKDT1
  3195  0000                     _ACKDT1	set	0x7E2D
  3196                           	global	_ACKDT2
  3197  0000                     _ACKDT2	set	0x7C2D
  3198                           	global	_ACKEN
  3199  0000                     _ACKEN	set	0x7E2C
  3200                           	global	_ACKEN1
  3201  0000                     _ACKEN1	set	0x7E2C
  3202                           	global	_ACKEN2
  3203  0000                     _ACKEN2	set	0x7C2C
  3204                           	global	_ACKSTAT
  3205  0000                     _ACKSTAT	set	0x7E2E
  3206                           	global	_ACKSTAT1
  3207  0000                     _ACKSTAT1	set	0x7E2E
  3208                           	global	_ACKSTAT2
  3209  0000                     _ACKSTAT2	set	0x7C2E
  3210                           	global	_ACQT0
  3211  0000                     _ACQT0	set	0x7E03
  3212                           	global	_ACQT1
  3213  0000                     _ACQT1	set	0x7E04
  3214                           	global	_ACQT2
  3215  0000                     _ACQT2	set	0x7E05
  3216                           	global	_ADCAL
  3217  0000                     _ADCAL	set	0x7E17
  3218                           	global	_ADCS0
  3219  0000                     _ADCS0	set	0x7E00
  3220                           	global	_ADCS1
  3221  0000                     _ADCS1	set	0x7E01
  3222                           	global	_ADCS2
  3223  0000                     _ADCS2	set	0x7E02
  3224                           	global	_ADDEN
  3225  0000                     _ADDEN	set	0x7D5B
  3226                           	global	_ADDEN1
  3227  0000                     _ADDEN1	set	0x7D5B
  3228                           	global	_ADEN
  3229  0000                     _ADEN	set	0x7D5B
  3230                           	global	_ADFM
  3231  0000                     _ADFM	set	0x7E07
  3232                           	global	_ADIE
  3233  0000                     _ADIE	set	0x7CEE
  3234                           	global	_ADIF
  3235  0000                     _ADIF	set	0x7CF6
  3236                           	global	_ADIP
  3237  0000                     _ADIP	set	0x7CFE
  3238                           	global	_ADMSK1
  3239  0000                     _ADMSK1	set	0x7E29
  3240                           	global	_ADMSK11
  3241  0000                     _ADMSK11	set	0x7E29
  3242                           	global	_ADMSK12
  3243  0000                     _ADMSK12	set	0x7C29
  3244                           	global	_ADMSK2
  3245  0000                     _ADMSK2	set	0x7E2A
  3246                           	global	_ADMSK21
  3247  0000                     _ADMSK21	set	0x7E2A
  3248                           	global	_ADMSK22
  3249  0000                     _ADMSK22	set	0x7C2A
  3250                           	global	_ADMSK3
  3251  0000                     _ADMSK3	set	0x7E2B
  3252                           	global	_ADMSK31
  3253  0000                     _ADMSK31	set	0x7E2B
  3254                           	global	_ADMSK32
  3255  0000                     _ADMSK32	set	0x7C2B
  3256                           	global	_ADMSK4
  3257  0000                     _ADMSK4	set	0x7E2C
  3258                           	global	_ADMSK41
  3259  0000                     _ADMSK41	set	0x7E2C
  3260                           	global	_ADMSK42
  3261  0000                     _ADMSK42	set	0x7C2C
  3262                           	global	_ADMSK5
  3263  0000                     _ADMSK5	set	0x7E2D
  3264                           	global	_ADMSK51
  3265  0000                     _ADMSK51	set	0x7E2D
  3266                           	global	_ADMSK52
  3267  0000                     _ADMSK52	set	0x7C2D
  3268                           	global	_ADON
  3269  0000                     _ADON	set	0x7E10
  3270                           	global	_AN0
  3271  0000                     _AN0	set	0x7C00
  3272                           	global	_AN1
  3273  0000                     _AN1	set	0x7C01
  3274                           	global	_AN10
  3275  0000                     _AN10	set	0x7C09
  3276                           	global	_AN11
  3277  0000                     _AN11	set	0x7C0C
  3278                           	global	_AN12
  3279  0000                     _AN12	set	0x7C08
  3280                           	global	_AN2
  3281  0000                     _AN2	set	0x7C02
  3282                           	global	_AN3
  3283  0000                     _AN3	set	0x7C03
  3284                           	global	_AN4
  3285  0000                     _AN4	set	0x7C05
  3286                           	global	_AN5
  3287  0000                     _AN5	set	0x7C20
  3288                           	global	_AN6
  3289  0000                     _AN6	set	0x7C21
  3290                           	global	_AN7
  3291  0000                     _AN7	set	0x7C22
  3292                           	global	_AN8
  3293  0000                     _AN8	set	0x7C0A
  3294                           	global	_AN9
  3295  0000                     _AN9	set	0x7C0B
  3296                           	global	_BCL1IE
  3297  0000                     _BCL1IE	set	0x7D03
  3298                           	global	_BCL1IF
  3299  0000                     _BCL1IF	set	0x7D0B
  3300                           	global	_BCL1IP
  3301  0000                     _BCL1IP	set	0x7D13
  3302                           	global	_BCL2IE
  3303  0000                     _BCL2IE	set	0x7D1E
  3304                           	global	_BCL2IF
  3305  0000                     _BCL2IF	set	0x7D26
  3306                           	global	_BCL2IP
  3307  0000                     _BCL2IP	set	0x7D2E
  3308                           	global	_BCLIE
  3309  0000                     _BCLIE	set	0x7D03
  3310                           	global	_BCLIF
  3311  0000                     _BCLIF	set	0x7D0B
  3312                           	global	_BCLIP
  3313  0000                     _BCLIP	set	0x7D13
  3314                           	global	_BF
  3315  0000                     _BF	set	0x7E38
  3316                           	global	_BF1
  3317  0000                     _BF1	set	0x7E38
  3318                           	global	_BF2
  3319  0000                     _BF2	set	0x7C38
  3320                           	global	_BOR
  3321  0000                     _BOR	set	0x7E80
  3322                           	global	_BRG16
  3323  0000                     _BRG16	set	0x7DC3
  3324                           	global	_BRGH
  3325  0000                     _BRGH	set	0x7D62
  3326                           	global	_BRGH1
  3327  0000                     _BRGH1	set	0x7D62
  3328                           	global	_C1INV
  3329  0000                     _C1INV	set	0x7DA4
  3330                           	global	_C1OUT
  3331  0000                     _C1OUT	set	0x7DA6
  3332                           	global	_C2INV
  3333  0000                     _C2INV	set	0x7DA5
  3334                           	global	_C2OUT
  3335  0000                     _C2OUT	set	0x7DA7
  3336                           	global	_CARRY
  3337  0000                     _CARRY	set	0x7EC0
  3338                           	global	_CCP1
  3339  0000                     _CCP1	set	0x7C12
  3340                           	global	_CCP10
  3341  0000                     _CCP10	set	0x7C22
  3342                           	global	_CCP1IE
  3343  0000                     _CCP1IE	set	0x7CEA
  3344                           	global	_CCP1IF
  3345  0000                     _CCP1IF	set	0x7CF2
  3346                           	global	_CCP1IP
  3347  0000                     _CCP1IP	set	0x7CFA
  3348                           	global	_CCP1M0
  3349  0000                     _CCP1M0	set	0x7DE8
  3350                           	global	_CCP1M1
  3351  0000                     _CCP1M1	set	0x7DE9
  3352                           	global	_CCP1M2
  3353  0000                     _CCP1M2	set	0x7DEA
  3354                           	global	_CCP1M3
  3355  0000                     _CCP1M3	set	0x7DEB
  3356                           	global	_CCP1X
  3357  0000                     _CCP1X	set	0x7DED
  3358                           	global	_CCP1Y
  3359  0000                     _CCP1Y	set	0x7DEC
  3360                           	global	_CCP2E
  3361  0000                     _CCP2E	set	0x7C27
  3362                           	global	_CCP2IE
  3363  0000                     _CCP2IE	set	0x7D00
  3364                           	global	_CCP2IF
  3365  0000                     _CCP2IF	set	0x7D08
  3366                           	global	_CCP2IP
  3367  0000                     _CCP2IP	set	0x7D10
  3368                           	global	_CCP2M0
  3369  0000                     _CCP2M0	set	0x7DD0
  3370                           	global	_CCP2M1
  3371  0000                     _CCP2M1	set	0x7DD1
  3372                           	global	_CCP2M2
  3373  0000                     _CCP2M2	set	0x7DD2
  3374                           	global	_CCP2M3
  3375  0000                     _CCP2M3	set	0x7DD3
  3376                           	global	_CCP2X
  3377  0000                     _CCP2X	set	0x7DD5
  3378                           	global	_CCP2Y
  3379  0000                     _CCP2Y	set	0x7DD4
  3380                           	global	_CCP2_PA2
  3381  0000                     _CCP2_PA2	set	0x7C0B
  3382                           	global	_CCP6E
  3383  0000                     _CCP6E	set	0x7C26
  3384                           	global	_CCP7E
  3385  0000                     _CCP7E	set	0x7C25
  3386                           	global	_CCP8E
  3387  0000                     _CCP8E	set	0x7C24
  3388                           	global	_CCP9E
  3389  0000                     _CCP9E	set	0x7C23
  3390                           	global	_CHS0
  3391  0000                     _CHS0	set	0x7E12
  3392                           	global	_CHS1
  3393  0000                     _CHS1	set	0x7E13
  3394                           	global	_CHS2
  3395  0000                     _CHS2	set	0x7E14
  3396                           	global	_CHS3
  3397  0000                     _CHS3	set	0x7E15
  3398                           	global	_CHSN3
  3399  0000                     _CHSN3	set	0x7E0B
  3400                           	global	_CIS
  3401  0000                     _CIS	set	0x7DA3
  3402                           	global	_CK
  3403  0000                     _CK	set	0x7C16
  3404                           	global	_CKE
  3405  0000                     _CKE	set	0x7E3E
  3406                           	global	_CKE1
  3407  0000                     _CKE1	set	0x7E3E
  3408                           	global	_CKE2
  3409  0000                     _CKE2	set	0x7C3E
  3410                           	global	_CKP
  3411  0000                     _CKP	set	0x7E34
  3412                           	global	_CKP1
  3413  0000                     _CKP1	set	0x7E34
  3414                           	global	_CKP2
  3415  0000                     _CKP2	set	0x7C34
  3416                           	global	_CM0
  3417  0000                     _CM0	set	0x7DA0
  3418                           	global	_CM1
  3419  0000                     _CM1	set	0x7DA1
  3420                           	global	_CM2
  3421  0000                     _CM2	set	0x7DA2
  3422                           	global	_CMEN0
  3423  0000                     _CMEN0	set	0x7DA0
  3424                           	global	_CMEN1
  3425  0000                     _CMEN1	set	0x7DA1
  3426                           	global	_CMEN2
  3427  0000                     _CMEN2	set	0x7DA2
  3428                           	global	_CMIE
  3429  0000                     _CMIE	set	0x7D06
  3430                           	global	_CMIF
  3431  0000                     _CMIF	set	0x7D0E
  3432                           	global	_CMIP
  3433  0000                     _CMIP	set	0x7D16
  3434                           	global	_CREN
  3435  0000                     _CREN	set	0x7D5C
  3436                           	global	_CREN1
  3437  0000                     _CREN1	set	0x7D5C
  3438                           	global	_CS
  3439  0000                     _CS	set	0x7C22
  3440                           	global	_CSRC
  3441  0000                     _CSRC	set	0x7D67
  3442                           	global	_CSRC1
  3443  0000                     _CSRC1	set	0x7D67
  3444                           	global	_CVR0
  3445  0000                     _CVR0	set	0x7DA8
  3446                           	global	_CVR1
  3447  0000                     _CVR1	set	0x7DA9
  3448                           	global	_CVR2
  3449  0000                     _CVR2	set	0x7DAA
  3450                           	global	_CVR3
  3451  0000                     _CVR3	set	0x7DAB
  3452                           	global	_CVREF
  3453  0000                     _CVREF	set	0x7C02
  3454                           	global	_CVREN
  3455  0000                     _CVREN	set	0x7DAF
  3456                           	global	_CVROE
  3457  0000                     _CVROE	set	0x7DAE
  3458                           	global	_CVROEN
  3459  0000                     _CVROEN	set	0x7DAE
  3460                           	global	_CVRR
  3461  0000                     _CVRR	set	0x7DAD
  3462                           	global	_CVRSS
  3463  0000                     _CVRSS	set	0x7DAC
  3464                           	global	_DA
  3465  0000                     _DA	set	0x7E3D
  3466                           	global	_DA1
  3467  0000                     _DA1	set	0x7E3D
  3468                           	global	_DA2
  3469  0000                     _DA2	set	0x7C3D
  3470                           	global	_DATA_ADDRESS2
  3471  0000                     _DATA_ADDRESS2	set	0x7C3D
  3472                           	global	_DC
  3473  0000                     _DC	set	0x7EC1
  3474                           	global	_DC1B0
  3475  0000                     _DC1B0	set	0x7DEC
  3476                           	global	_DC1B1
  3477  0000                     _DC1B1	set	0x7DED
  3478                           	global	_DC2B0
  3479  0000                     _DC2B0	set	0x7DD4
  3480                           	global	_DC2B1
  3481  0000                     _DC2B1	set	0x7DD5
  3482                           	global	_DONE
  3483  0000                     _DONE	set	0x7E11
  3484                           	global	_DT
  3485  0000                     _DT	set	0x7C17
  3486                           	global	_D_A2
  3487  0000                     _D_A2	set	0x7C3D
  3488                           	global	_D_nA2
  3489  0000                     _D_nA2	set	0x7C3D
  3490                           	global	_ECCPAS0
  3491  0000                     _ECCPAS0	set	0x7DB4
  3492                           	global	_ECCPAS1
  3493  0000                     _ECCPAS1	set	0x7DB5
  3494                           	global	_ECCPAS2
  3495  0000                     _ECCPAS2	set	0x7DB6
  3496                           	global	_ECCPASE
  3497  0000                     _ECCPASE	set	0x7DB7
  3498                           	global	_FERR
  3499  0000                     _FERR	set	0x7D5A
  3500                           	global	_FERR1
  3501  0000                     _FERR1	set	0x7D5A
  3502                           	global	_FLT0
  3503  0000                     _FLT0	set	0x7C08
  3504                           	global	_FREE
  3505  0000                     _FREE	set	0x7D34
  3506                           	global	_GCEN
  3507  0000                     _GCEN	set	0x7E2F
  3508                           	global	_GCEN1
  3509  0000                     _GCEN1	set	0x7E2F
  3510                           	global	_GCEN2
  3511  0000                     _GCEN2	set	0x7C2F
  3512                           	global	_GIE
  3513  0000                     _GIE	set	0x7F97
  3514                           	global	_GIEH
  3515  0000                     _GIEH	set	0x7F97
  3516                           	global	_GIEL
  3517  0000                     _GIEL	set	0x7F96
  3518                           	global	_GIE_GIEH
  3519  0000                     _GIE_GIEH	set	0x7F97
  3520                           	global	_GO
  3521  0000                     _GO	set	0x7E11
  3522                           	global	_GODONE
  3523  0000                     _GODONE	set	0x7E11
  3524                           	global	_GO_DONE
  3525  0000                     _GO_DONE	set	0x7E11
  3526                           	global	_GO_NOT_DONE
  3527  0000                     _GO_NOT_DONE	set	0x7E11
  3528                           	global	_GO_nDONE
  3529  0000                     _GO_nDONE	set	0x7E11
  3530                           	global	_I2C_DAT2
  3531  0000                     _I2C_DAT2	set	0x7C3D
  3532                           	global	_I2C_READ2
  3533  0000                     _I2C_READ2	set	0x7C3A
  3534                           	global	_I2C_START2
  3535  0000                     _I2C_START2	set	0x7C3B
  3536                           	global	_I2C_STOP2
  3537  0000                     _I2C_STOP2	set	0x7C3C
  3538                           	global	_IBF
  3539  0000                     _IBF	set	0x7CB7
  3540                           	global	_IBOV
  3541  0000                     _IBOV	set	0x7CB5
  3542                           	global	_IDLEN
  3543  0000                     _IDLEN	set	0x7E9F
  3544                           	global	_INT0
  3545  0000                     _INT0	set	0x7C08
  3546                           	global	_INT0E
  3547  0000                     _INT0E	set	0x7F94
  3548                           	global	_INT0F
  3549  0000                     _INT0F	set	0x7F91
  3550                           	global	_INT0IE
  3551  0000                     _INT0IE	set	0x7F94
  3552                           	global	_INT0IF
  3553  0000                     _INT0IF	set	0x7F91
  3554                           	global	_INT1
  3555  0000                     _INT1	set	0x7C09
  3556                           	global	_INT1E
  3557  0000                     _INT1E	set	0x7F83
  3558                           	global	_INT1F
  3559  0000                     _INT1F	set	0x7F80
  3560                           	global	_INT1IE
  3561  0000                     _INT1IE	set	0x7F83
  3562                           	global	_INT1IF
  3563  0000                     _INT1IF	set	0x7F80
  3564                           	global	_INT1IP
  3565  0000                     _INT1IP	set	0x7F86
  3566                           	global	_INT1P
  3567  0000                     _INT1P	set	0x7F86
  3568                           	global	_INT2
  3569  0000                     _INT2	set	0x7C0A
  3570                           	global	_INT2E
  3571  0000                     _INT2E	set	0x7F84
  3572                           	global	_INT2F
  3573  0000                     _INT2F	set	0x7F81
  3574                           	global	_INT2IE
  3575  0000                     _INT2IE	set	0x7F84
  3576                           	global	_INT2IF
  3577  0000                     _INT2IF	set	0x7F81
  3578                           	global	_INT2IP
  3579  0000                     _INT2IP	set	0x7F87
  3580                           	global	_INT2P
  3581  0000                     _INT2P	set	0x7F87
  3582                           	global	_INTEDG0
  3583  0000                     _INTEDG0	set	0x7F8E
  3584                           	global	_INTEDG1
  3585  0000                     _INTEDG1	set	0x7F8D
  3586                           	global	_INTEDG2
  3587  0000                     _INTEDG2	set	0x7F8C
  3588                           	global	_IPEN
  3589  0000                     _IPEN	set	0x7E87
  3590                           	global	_KBI0
  3591  0000                     _KBI0	set	0x7C0C
  3592                           	global	_KBI1
  3593  0000                     _KBI1	set	0x7C0D
  3594                           	global	_KBI2
  3595  0000                     _KBI2	set	0x7C0E
  3596                           	global	_KBI3
  3597  0000                     _KBI3	set	0x7C0F
  3598                           	global	_LA0
  3599  0000                     _LA0	set	0x7C48
  3600                           	global	_LA1
  3601  0000                     _LA1	set	0x7C49
  3602                           	global	_LA2
  3603  0000                     _LA2	set	0x7C4A
  3604                           	global	_LA3
  3605  0000                     _LA3	set	0x7C4B
  3606                           	global	_LA4
  3607  0000                     _LA4	set	0x7C4C
  3608                           	global	_LA5
  3609  0000                     _LA5	set	0x7C4D
  3610                           	global	_LA6
  3611  0000                     _LA6	set	0x7C4E
  3612                           	global	_LA7
  3613  0000                     _LA7	set	0x7C4F
  3614                           	global	_LATA0
  3615  0000                     _LATA0	set	0x7C48
  3616                           	global	_LATA1
  3617  0000                     _LATA1	set	0x7C49
  3618                           	global	_LATA2
  3619  0000                     _LATA2	set	0x7C4A
  3620                           	global	_LATA3
  3621  0000                     _LATA3	set	0x7C4B
  3622                           	global	_LATA5
  3623  0000                     _LATA5	set	0x7C4D
  3624                           	global	_LATA7
  3625  0000                     _LATA7	set	0x7C4F
  3626                           	global	_LATB0
  3627  0000                     _LATB0	set	0x7C50
  3628                           	global	_LATB1
  3629  0000                     _LATB1	set	0x7C51
  3630                           	global	_LATB2
  3631  0000                     _LATB2	set	0x7C52
  3632                           	global	_LATB3
  3633  0000                     _LATB3	set	0x7C53
  3634                           	global	_LATB4
  3635  0000                     _LATB4	set	0x7C54
  3636                           	global	_LATB5
  3637  0000                     _LATB5	set	0x7C55
  3638                           	global	_LATB6
  3639  0000                     _LATB6	set	0x7C56
  3640                           	global	_LATB7
  3641  0000                     _LATB7	set	0x7C57
  3642                           	global	_LATC0
  3643  0000                     _LATC0	set	0x7C58
  3644                           	global	_LATC1
  3645  0000                     _LATC1	set	0x7C59
  3646                           	global	_LATC2
  3647  0000                     _LATC2	set	0x7C5A
  3648                           	global	_LATC3
  3649  0000                     _LATC3	set	0x7C5B
  3650                           	global	_LATC4
  3651  0000                     _LATC4	set	0x7C5C
  3652                           	global	_LATC5
  3653  0000                     _LATC5	set	0x7C5D
  3654                           	global	_LATC6
  3655  0000                     _LATC6	set	0x7C5E
  3656                           	global	_LATC7
  3657  0000                     _LATC7	set	0x7C5F
  3658                           	global	_LATD0
  3659  0000                     _LATD0	set	0x7C60
  3660                           	global	_LATD1
  3661  0000                     _LATD1	set	0x7C61
  3662                           	global	_LATD2
  3663  0000                     _LATD2	set	0x7C62
  3664                           	global	_LATD3
  3665  0000                     _LATD3	set	0x7C63
  3666                           	global	_LATD4
  3667  0000                     _LATD4	set	0x7C64
  3668                           	global	_LATD5
  3669  0000                     _LATD5	set	0x7C65
  3670                           	global	_LATD6
  3671  0000                     _LATD6	set	0x7C66
  3672                           	global	_LATD7
  3673  0000                     _LATD7	set	0x7C67
  3674                           	global	_LATE0
  3675  0000                     _LATE0	set	0x7C68
  3676                           	global	_LATE1
  3677  0000                     _LATE1	set	0x7C69
  3678                           	global	_LATE2
  3679  0000                     _LATE2	set	0x7C6A
  3680                           	global	_LB0
  3681  0000                     _LB0	set	0x7C50
  3682                           	global	_LB1
  3683  0000                     _LB1	set	0x7C51
  3684                           	global	_LB2
  3685  0000                     _LB2	set	0x7C52
  3686                           	global	_LB3
  3687  0000                     _LB3	set	0x7C53
  3688                           	global	_LB4
  3689  0000                     _LB4	set	0x7C54
  3690                           	global	_LB5
  3691  0000                     _LB5	set	0x7C55
  3692                           	global	_LB6
  3693  0000                     _LB6	set	0x7C56
  3694                           	global	_LB7
  3695  0000                     _LB7	set	0x7C57
  3696                           	global	_LC0
  3697  0000                     _LC0	set	0x7C58
  3698                           	global	_LC1
  3699  0000                     _LC1	set	0x7C59
  3700                           	global	_LC2
  3701  0000                     _LC2	set	0x7C5A
  3702                           	global	_LC3
  3703  0000                     _LC3	set	0x7C5B
  3704                           	global	_LC4
  3705  0000                     _LC4	set	0x7C5C
  3706                           	global	_LC5
  3707  0000                     _LC5	set	0x7C5D
  3708                           	global	_LC6
  3709  0000                     _LC6	set	0x7C5E
  3710                           	global	_LC7
  3711  0000                     _LC7	set	0x7C5F
  3712                           	global	_LD0
  3713  0000                     _LD0	set	0x7C60
  3714                           	global	_LD1
  3715  0000                     _LD1	set	0x7C61
  3716                           	global	_LD2
  3717  0000                     _LD2	set	0x7C62
  3718                           	global	_LD3
  3719  0000                     _LD3	set	0x7C63
  3720                           	global	_LD4
  3721  0000                     _LD4	set	0x7C64
  3722                           	global	_LD5
  3723  0000                     _LD5	set	0x7C65
  3724                           	global	_LD6
  3725  0000                     _LD6	set	0x7C66
  3726                           	global	_LD7
  3727  0000                     _LD7	set	0x7C67
  3728                           	global	_LE0
  3729  0000                     _LE0	set	0x7C68
  3730                           	global	_LE1
  3731  0000                     _LE1	set	0x7C69
  3732                           	global	_LE2
  3733  0000                     _LE2	set	0x7C6A
  3734                           	global	_LE3
  3735  0000                     _LE3	set	0x7C6B
  3736                           	global	_LE4
  3737  0000                     _LE4	set	0x7C6C
  3738                           	global	_LE5
  3739  0000                     _LE5	set	0x7C6D
  3740                           	global	_LE6
  3741  0000                     _LE6	set	0x7C6E
  3742                           	global	_LE7
  3743  0000                     _LE7	set	0x7C6F
  3744                           	global	_LVDIN
  3745  0000                     _LVDIN	set	0x7C05
  3746                           	global	_MSK0
  3747  0000                     _MSK0	set	0x7E40
  3748                           	global	_MSK01
  3749  0000                     _MSK01	set	0x7E40
  3750                           	global	_MSK02
  3751  0000                     _MSK02	set	0x7C40
  3752                           	global	_MSK1
  3753  0000                     _MSK1	set	0x7E41
  3754                           	global	_MSK11
  3755  0000                     _MSK11	set	0x7E41
  3756                           	global	_MSK12
  3757  0000                     _MSK12	set	0x7C41
  3758                           	global	_MSK2
  3759  0000                     _MSK2	set	0x7E42
  3760                           	global	_MSK21
  3761  0000                     _MSK21	set	0x7E42
  3762                           	global	_MSK22
  3763  0000                     _MSK22	set	0x7C42
  3764                           	global	_MSK3
  3765  0000                     _MSK3	set	0x7E43
  3766                           	global	_MSK31
  3767  0000                     _MSK31	set	0x7E43
  3768                           	global	_MSK32
  3769  0000                     _MSK32	set	0x7C43
  3770                           	global	_MSK4
  3771  0000                     _MSK4	set	0x7E44
  3772                           	global	_MSK41
  3773  0000                     _MSK41	set	0x7E44
  3774                           	global	_MSK42
  3775  0000                     _MSK42	set	0x7C44
  3776                           	global	_MSK5
  3777  0000                     _MSK5	set	0x7E45
  3778                           	global	_MSK51
  3779  0000                     _MSK51	set	0x7E45
  3780                           	global	_MSK52
  3781  0000                     _MSK52	set	0x7C45
  3782                           	global	_MSK6
  3783  0000                     _MSK6	set	0x7E46
  3784                           	global	_MSK61
  3785  0000                     _MSK61	set	0x7E46
  3786                           	global	_MSK62
  3787  0000                     _MSK62	set	0x7C46
  3788                           	global	_MSK7
  3789  0000                     _MSK7	set	0x7E47
  3790                           	global	_MSK71
  3791  0000                     _MSK71	set	0x7E47
  3792                           	global	_MSK72
  3793  0000                     _MSK72	set	0x7C47
  3794                           	global	_NEGATIVE
  3795  0000                     _NEGATIVE	set	0x7EC4
  3796                           	global	_NOT_A
  3797  0000                     _NOT_A	set	0x7E3D
  3798                           	global	_NOT_BOR
  3799  0000                     _NOT_BOR	set	0x7E80
  3800                           	global	_NOT_CS
  3801  0000                     _NOT_CS	set	0x7C22
  3802                           	global	_NOT_DONE
  3803  0000                     _NOT_DONE	set	0x7E11
  3804                           	global	_NOT_PD
  3805  0000                     _NOT_PD	set	0x7E82
  3806                           	global	_NOT_POR
  3807  0000                     _NOT_POR	set	0x7E81
  3808                           	global	_NOT_RBPU
  3809  0000                     _NOT_RBPU	set	0x7F8F
  3810                           	global	_NOT_RC8
  3811  0000                     _NOT_RC8	set	0x7D5E
  3812                           	global	_NOT_RD
  3813  0000                     _NOT_RD	set	0x7C20
  3814                           	global	_NOT_RI
  3815  0000                     _NOT_RI	set	0x7E84
  3816                           	global	_NOT_SS1
  3817  0000                     _NOT_SS1	set	0x7C05
  3818                           	global	_NOT_SS2
  3819  0000                     _NOT_SS2	set	0x7C1B
  3820                           	global	_NOT_T1SYNC
  3821  0000                     _NOT_T1SYNC	set	0x7E6A
  3822                           	global	_NOT_TO
  3823  0000                     _NOT_TO	set	0x7E83
  3824                           	global	_NOT_TX8
  3825  0000                     _NOT_TX8	set	0x7D66
  3826                           	global	_NOT_W
  3827  0000                     _NOT_W	set	0x7E3A
  3828                           	global	_NOT_WR
  3829  0000                     _NOT_WR	set	0x7C21
  3830                           	global	_OBF
  3831  0000                     _OBF	set	0x7CB6
  3832                           	global	_OERR
  3833  0000                     _OERR	set	0x7D59
  3834                           	global	_OERR1
  3835  0000                     _OERR1	set	0x7D59
  3836                           	global	_OSCFIE
  3837  0000                     _OSCFIE	set	0x7D07
  3838                           	global	_OSCFIF
  3839  0000                     _OSCFIF	set	0x7D0F
  3840                           	global	_OSCFIP
  3841  0000                     _OSCFIP	set	0x7D17
  3842                           	global	_OSTS
  3843  0000                     _OSTS	set	0x7E9B
  3844                           	global	_OV
  3845  0000                     _OV	set	0x7EC3
  3846                           	global	_OVERFLOW
  3847  0000                     _OVERFLOW	set	0x7EC3
  3848                           	global	_P1A
  3849  0000                     _P1A	set	0x7C12
  3850                           	global	_P1B
  3851  0000                     _P1B	set	0x7C1D
  3852                           	global	_P1C
  3853  0000                     _P1C	set	0x7C1E
  3854                           	global	_P1D
  3855  0000                     _P1D	set	0x7C1F
  3856                           	global	_P1M0
  3857  0000                     _P1M0	set	0x7DEE
  3858                           	global	_P1M1
  3859  0000                     _P1M1	set	0x7DEF
  3860                           	global	_P2
  3861  0000                     _P2	set	0x7C3C
  3862                           	global	_PA1
  3863  0000                     _PA1	set	0x7C12
  3864                           	global	_PA2
  3865  0000                     _PA2	set	0x7C11
  3866                           	global	_PA2E
  3867  0000                     _PA2E	set	0x7C27
  3868                           	global	_PB1E
  3869  0000                     _PB1E	set	0x7C26
  3870                           	global	_PB2
  3871  0000                     _PB2	set	0x7C22
  3872                           	global	_PB3E
  3873  0000                     _PB3E	set	0x7C24
  3874                           	global	_PC1E
  3875  0000                     _PC1E	set	0x7C25
  3876                           	global	_PC2
  3877  0000                     _PC2	set	0x7C21
  3878                           	global	_PC3E
  3879  0000                     _PC3E	set	0x7C23
  3880                           	global	_PCFG0
  3881  0000                     _PCFG0	set	0x7E08
  3882                           	global	_PCFG1
  3883  0000                     _PCFG1	set	0x7E09
  3884                           	global	_PCFG2
  3885  0000                     _PCFG2	set	0x7E0A
  3886                           	global	_PCFG3
  3887  0000                     _PCFG3	set	0x7E0B
  3888                           	global	_PD
  3889  0000                     _PD	set	0x7E82
  3890                           	global	_PD2
  3891  0000                     _PD2	set	0x7C20
  3892                           	global	_PDC0
  3893  0000                     _PDC0	set	0x7DB8
  3894                           	global	_PDC1
  3895  0000                     _PDC1	set	0x7DB9
  3896                           	global	_PDC2
  3897  0000                     _PDC2	set	0x7DBA
  3898                           	global	_PDC3
  3899  0000                     _PDC3	set	0x7DBB
  3900                           	global	_PDC4
  3901  0000                     _PDC4	set	0x7DBC
  3902                           	global	_PDC5
  3903  0000                     _PDC5	set	0x7DBD
  3904                           	global	_PDC6
  3905  0000                     _PDC6	set	0x7DBE
  3906                           	global	_PEIE
  3907  0000                     _PEIE	set	0x7F96
  3908                           	global	_PEIE_GIEL
  3909  0000                     _PEIE_GIEL	set	0x7F96
  3910                           	global	_PEN
  3911  0000                     _PEN	set	0x7E2A
  3912                           	global	_PEN1
  3913  0000                     _PEN1	set	0x7E2A
  3914                           	global	_PEN2
  3915  0000                     _PEN2	set	0x7C2A
  3916                           	global	_PGC
  3917  0000                     _PGC	set	0x7C0E
  3918                           	global	_PGD
  3919  0000                     _PGD	set	0x7C0F
  3920                           	global	_PLLEN
  3921  0000                     _PLLEN	set	0x7CDE
  3922                           	global	_POR
  3923  0000                     _POR	set	0x7E81
  3924                           	global	_PRSEN
  3925  0000                     _PRSEN	set	0x7DBF
  3926                           	global	_PSA
  3927  0000                     _PSA	set	0x7EAB
  3928                           	global	_PSP0
  3929  0000                     _PSP0	set	0x7C18
  3930                           	global	_PSP1
  3931  0000                     _PSP1	set	0x7C19
  3932                           	global	_PSP2
  3933  0000                     _PSP2	set	0x7C1A
  3934                           	global	_PSP3
  3935  0000                     _PSP3	set	0x7C1B
  3936                           	global	_PSP4
  3937  0000                     _PSP4	set	0x7C1C
  3938                           	global	_PSP5
  3939  0000                     _PSP5	set	0x7C1D
  3940                           	global	_PSP6
  3941  0000                     _PSP6	set	0x7C1E
  3942                           	global	_PSP7
  3943  0000                     _PSP7	set	0x7C1F
  3944                           	global	_PSPIE
  3945  0000                     _PSPIE	set	0x7CEF
  3946                           	global	_PSPIF
  3947  0000                     _PSPIF	set	0x7CF7
  3948                           	global	_PSPIP
  3949  0000                     _PSPIP	set	0x7CFF
  3950                           	global	_PSPMODE
  3951  0000                     _PSPMODE	set	0x7CB4
  3952                           	global	_PSSAC0
  3953  0000                     _PSSAC0	set	0x7DB2
  3954                           	global	_PSSAC1
  3955  0000                     _PSSAC1	set	0x7DB3
  3956                           	global	_PSSBD0
  3957  0000                     _PSSBD0	set	0x7DB0
  3958                           	global	_PSSBD1
  3959  0000                     _PSSBD1	set	0x7DB1
  3960                           	global	_RA0
  3961  0000                     _RA0	set	0x7C00
  3962                           	global	_RA1
  3963  0000                     _RA1	set	0x7C01
  3964                           	global	_RA2
  3965  0000                     _RA2	set	0x7C02
  3966                           	global	_RA3
  3967  0000                     _RA3	set	0x7C03
  3968                           	global	_RA4
  3969  0000                     _RA4	set	0x7C04
  3970                           	global	_RA5
  3971  0000                     _RA5	set	0x7C05
  3972                           	global	_RA6
  3973  0000                     _RA6	set	0x7C06
  3974                           	global	_RA7
  3975  0000                     _RA7	set	0x7C07
  3976                           	global	_RB0
  3977  0000                     _RB0	set	0x7C08
  3978                           	global	_RB1
  3979  0000                     _RB1	set	0x7C09
  3980                           	global	_RB2
  3981  0000                     _RB2	set	0x7C0A
  3982                           	global	_RB3
  3983  0000                     _RB3	set	0x7C0B
  3984                           	global	_RB4
  3985  0000                     _RB4	set	0x7C0C
  3986                           	global	_RB5
  3987  0000                     _RB5	set	0x7C0D
  3988                           	global	_RB6
  3989  0000                     _RB6	set	0x7C0E
  3990                           	global	_RB7
  3991  0000                     _RB7	set	0x7C0F
  3992                           	global	_RBIE
  3993  0000                     _RBIE	set	0x7F93
  3994                           	global	_RBIF
  3995  0000                     _RBIF	set	0x7F90
  3996                           	global	_RBIP
  3997  0000                     _RBIP	set	0x7F88
  3998                           	global	_RBPU
  3999  0000                     _RBPU	set	0x7F8F
  4000                           	global	_RC0
  4001  0000                     _RC0	set	0x7C10
  4002                           	global	_RC1
  4003  0000                     _RC1	set	0x7C11
  4004                           	global	_RC1IE
  4005  0000                     _RC1IE	set	0x7CED
  4006                           	global	_RC1IF
  4007  0000                     _RC1IF	set	0x7CF5
  4008                           	global	_RC1IP
  4009  0000                     _RC1IP	set	0x7CFD
  4010                           	global	_RC2
  4011  0000                     _RC2	set	0x7C12
  4012                           	global	_RC3
  4013  0000                     _RC3	set	0x7C13
  4014                           	global	_RC4
  4015  0000                     _RC4	set	0x7C14
  4016                           	global	_RC5
  4017  0000                     _RC5	set	0x7C15
  4018                           	global	_RC6
  4019  0000                     _RC6	set	0x7C16
  4020                           	global	_RC7
  4021  0000                     _RC7	set	0x7C17
  4022                           	global	_RC8_9
  4023  0000                     _RC8_9	set	0x7D5E
  4024                           	global	_RC9
  4025  0000                     _RC9	set	0x7D5E
  4026                           	global	_RCD8
  4027  0000                     _RCD8	set	0x7D58
  4028                           	global	_RCEN
  4029  0000                     _RCEN	set	0x7E2B
  4030                           	global	_RCEN1
  4031  0000                     _RCEN1	set	0x7E2B
  4032                           	global	_RCEN2
  4033  0000                     _RCEN2	set	0x7C2B
  4034                           	global	_RCIDL
  4035  0000                     _RCIDL	set	0x7DC6
  4036                           	global	_RCIE
  4037  0000                     _RCIE	set	0x7CED
  4038                           	global	_RCIF
  4039  0000                     _RCIF	set	0x7CF5
  4040                           	global	_RCIP
  4041  0000                     _RCIP	set	0x7CFD
  4042                           	global	_RCMT
  4043  0000                     _RCMT	set	0x7DC6
  4044                           	global	_RD
  4045  0000                     _RD	set	0x7C20
  4046                           	global	_RD0
  4047  0000                     _RD0	set	0x7C18
  4048                           	global	_RD1
  4049  0000                     _RD1	set	0x7C19
  4050                           	global	_RD16
  4051  0000                     _RD16	set	0x7E6F
  4052                           	global	_RD2
  4053  0000                     _RD2	set	0x7C1A
  4054                           	global	_RD3
  4055  0000                     _RD3	set	0x7C1B
  4056                           	global	_RD4
  4057  0000                     _RD4	set	0x7C1C
  4058                           	global	_RD5
  4059  0000                     _RD5	set	0x7C1D
  4060                           	global	_RD6
  4061  0000                     _RD6	set	0x7C1E
  4062                           	global	_RD7
  4063  0000                     _RD7	set	0x7C1F
  4064                           	global	_RDE
  4065  0000                     _RDE	set	0x7C20
  4066                           	global	_RE0
  4067  0000                     _RE0	set	0x7C20
  4068                           	global	_RE1
  4069  0000                     _RE1	set	0x7C21
  4070                           	global	_RE2
  4071  0000                     _RE2	set	0x7C22
  4072                           	global	_RE3
  4073  0000                     _RE3	set	0x7CB3
  4074                           	global	_RE4
  4075  0000                     _RE4	set	0x7C24
  4076                           	global	_RE5
  4077  0000                     _RE5	set	0x7C25
  4078                           	global	_RE6
  4079  0000                     _RE6	set	0x7C26
  4080                           	global	_RE7
  4081  0000                     _RE7	set	0x7C27
  4082                           	global	_READ_WRITE2
  4083  0000                     _READ_WRITE2	set	0x7C3A
  4084                           	global	_RI
  4085  0000                     _RI	set	0x7E84
  4086                           	global	_RJPU
  4087  0000                     _RJPU	set	0x7C07
  4088                           	global	_RSEN
  4089  0000                     _RSEN	set	0x7E29
  4090                           	global	_RSEN1
  4091  0000                     _RSEN1	set	0x7E29
  4092                           	global	_RSEN2
  4093  0000                     _RSEN2	set	0x7C29
  4094                           	global	_RW
  4095  0000                     _RW	set	0x7E3A
  4096                           	global	_RW1
  4097  0000                     _RW1	set	0x7E3A
  4098                           	global	_RW2
  4099  0000                     _RW2	set	0x7C3A
  4100                           	global	_RX
  4101  0000                     _RX	set	0x7C17
  4102                           	global	_RX9
  4103  0000                     _RX9	set	0x7D5E
  4104                           	global	_RX91
  4105  0000                     _RX91	set	0x7D5E
  4106                           	global	_RX9D
  4107  0000                     _RX9D	set	0x7D58
  4108                           	global	_RX9D1
  4109  0000                     _RX9D1	set	0x7D58
  4110                           	global	_R_W2
  4111  0000                     _R_W2	set	0x7C3A
  4112                           	global	_R_nW2
  4113  0000                     _R_nW2	set	0x7C3A
  4114                           	global	_S2
  4115  0000                     _S2	set	0x7C3B
  4116                           	global	_SCK
  4117  0000                     _SCK	set	0x7C13
  4118                           	global	_SCK1
  4119  0000                     _SCK1	set	0x7C13
  4120                           	global	_SCK2
  4121  0000                     _SCK2	set	0x7C18
  4122                           	global	_SCKP
  4123  0000                     _SCKP	set	0x7DC4
  4124                           	global	_SCL
  4125  0000                     _SCL	set	0x7C13
  4126                           	global	_SCL1
  4127  0000                     _SCL1	set	0x7C13
  4128                           	global	_SCL2
  4129  0000                     _SCL2	set	0x7C18
  4130                           	global	_SCS0
  4131  0000                     _SCS0	set	0x7E98
  4132                           	global	_SCS1
  4133  0000                     _SCS1	set	0x7E99
  4134                           	global	_SDA
  4135  0000                     _SDA	set	0x7C14
  4136                           	global	_SDA1
  4137  0000                     _SDA1	set	0x7C14
  4138                           	global	_SDA2
  4139  0000                     _SDA2	set	0x7C19
  4140                           	global	_SDI
  4141  0000                     _SDI	set	0x7C14
  4142                           	global	_SDI1
  4143  0000                     _SDI1	set	0x7C14
  4144                           	global	_SDI2
  4145  0000                     _SDI2	set	0x7C19
  4146                           	global	_SDO
  4147  0000                     _SDO	set	0x7C15
  4148                           	global	_SDO1
  4149  0000                     _SDO1	set	0x7C15
  4150                           	global	_SDO2
  4151  0000                     _SDO2	set	0x7C1A
  4152                           	global	_SEN
  4153  0000                     _SEN	set	0x7E28
  4154                           	global	_SEN1
  4155  0000                     _SEN1	set	0x7E28
  4156                           	global	_SEN2
  4157  0000                     _SEN2	set	0x7C28
  4158                           	global	_SENDB
  4159  0000                     _SENDB	set	0x7D63
  4160                           	global	_SENDB1
  4161  0000                     _SENDB1	set	0x7D63
  4162                           	global	_SMP
  4163  0000                     _SMP	set	0x7E3F
  4164                           	global	_SMP1
  4165  0000                     _SMP1	set	0x7E3F
  4166                           	global	_SMP2
  4167  0000                     _SMP2	set	0x7C3F
  4168                           	global	_SOSCEN
  4169  0000                     _SOSCEN	set	0x7E6B
  4170                           	global	_SPEN
  4171  0000                     _SPEN	set	0x7D5F
  4172                           	global	_SPEN1
  4173  0000                     _SPEN1	set	0x7D5F
  4174                           	global	_SREN
  4175  0000                     _SREN	set	0x7D5D
  4176                           	global	_SREN1
  4177  0000                     _SREN1	set	0x7D5D
  4178                           	global	_SRENA
  4179  0000                     _SRENA	set	0x7D5D
  4180                           	global	_SS1
  4181  0000                     _SS1	set	0x7C05
  4182                           	global	_SS2
  4183  0000                     _SS2	set	0x7C1B
  4184                           	global	_SSP1IE
  4185  0000                     _SSP1IE	set	0x7CEB
  4186                           	global	_SSP1IF
  4187  0000                     _SSP1IF	set	0x7CF3
  4188                           	global	_SSP1IP
  4189  0000                     _SSP1IP	set	0x7CFB
  4190                           	global	_SSP2IE
  4191  0000                     _SSP2IE	set	0x7D1F
  4192                           	global	_SSP2IF
  4193  0000                     _SSP2IF	set	0x7D27
  4194                           	global	_SSP2IP
  4195  0000                     _SSP2IP	set	0x7D2F
  4196                           	global	_SSPEN
  4197  0000                     _SSPEN	set	0x7E35
  4198                           	global	_SSPEN1
  4199  0000                     _SSPEN1	set	0x7E35
  4200                           	global	_SSPEN2
  4201  0000                     _SSPEN2	set	0x7C35
  4202                           	global	_SSPIE
  4203  0000                     _SSPIE	set	0x7CEB
  4204                           	global	_SSPIF
  4205  0000                     _SSPIF	set	0x7CF3
  4206                           	global	_SSPIP
  4207  0000                     _SSPIP	set	0x7CFB
  4208                           	global	_SSPM0
  4209  0000                     _SSPM0	set	0x7E30
  4210                           	global	_SSPM01
  4211  0000                     _SSPM01	set	0x7E30
  4212                           	global	_SSPM02
  4213  0000                     _SSPM02	set	0x7C30
  4214                           	global	_SSPM1
  4215  0000                     _SSPM1	set	0x7E31
  4216                           	global	_SSPM11
  4217  0000                     _SSPM11	set	0x7E31
  4218                           	global	_SSPM12
  4219  0000                     _SSPM12	set	0x7C31
  4220                           	global	_SSPM2
  4221  0000                     _SSPM2	set	0x7E32
  4222                           	global	_SSPM21
  4223  0000                     _SSPM21	set	0x7E32
  4224                           	global	_SSPM22
  4225  0000                     _SSPM22	set	0x7C32
  4226                           	global	_SSPM3
  4227  0000                     _SSPM3	set	0x7E33
  4228                           	global	_SSPM31
  4229  0000                     _SSPM31	set	0x7E33
  4230                           	global	_SSPM32
  4231  0000                     _SSPM32	set	0x7C33
  4232                           	global	_SSPOV
  4233  0000                     _SSPOV	set	0x7E36
  4234                           	global	_SSPOV1
  4235  0000                     _SSPOV1	set	0x7E36
  4236                           	global	_SSPOV2
  4237  0000                     _SSPOV2	set	0x7C36
  4238                           	global	_START
  4239  0000                     _START	set	0x7E3B
  4240                           	global	_START1
  4241  0000                     _START1	set	0x7E3B
  4242                           	global	_START2
  4243  0000                     _START2	set	0x7C3B
  4244                           	global	_STKFUL
  4245  0000                     _STKFUL	set	0x7FE7
  4246                           	global	_STKOVF
  4247  0000                     _STKOVF	set	0x7FE7
  4248                           	global	_STKPTR0
  4249  0000                     _STKPTR0	set	0x7FE0
  4250                           	global	_STKPTR1
  4251  0000                     _STKPTR1	set	0x7FE1
  4252                           	global	_STKPTR2
  4253  0000                     _STKPTR2	set	0x7FE2
  4254                           	global	_STKPTR3
  4255  0000                     _STKPTR3	set	0x7FE3
  4256                           	global	_STKPTR4
  4257  0000                     _STKPTR4	set	0x7FE4
  4258                           	global	_STKUNF
  4259  0000                     _STKUNF	set	0x7FE6
  4260                           	global	_STOP
  4261  0000                     _STOP	set	0x7E3C
  4262                           	global	_STOP1
  4263  0000                     _STOP1	set	0x7E3C
  4264                           	global	_STOP2
  4265  0000                     _STOP2	set	0x7C3C
  4266                           	global	_SWDTE
  4267  0000                     _SWDTE	set	0x7E88
  4268                           	global	_SWDTEN
  4269  0000                     _SWDTEN	set	0x7E88
  4270                           	global	_SYNC
  4271  0000                     _SYNC	set	0x7D64
  4272                           	global	_SYNC1
  4273  0000                     _SYNC1	set	0x7D64
  4274                           	global	_T08BIT
  4275  0000                     _T08BIT	set	0x7EAE
  4276                           	global	_T0CKI
  4277  0000                     _T0CKI	set	0x7C0D
  4278                           	global	_T0CS
  4279  0000                     _T0CS	set	0x7EAD
  4280                           	global	_T0IE
  4281  0000                     _T0IE	set	0x7F95
  4282                           	global	_T0IF
  4283  0000                     _T0IF	set	0x7F92
  4284                           	global	_T0IP
  4285  0000                     _T0IP	set	0x7F8A
  4286                           	global	_T0PS0
  4287  0000                     _T0PS0	set	0x7EA8
  4288                           	global	_T0PS1
  4289  0000                     _T0PS1	set	0x7EA9
  4290                           	global	_T0PS2
  4291  0000                     _T0PS2	set	0x7EAA
  4292                           	global	_T0SE
  4293  0000                     _T0SE	set	0x7EAC
  4294                           	global	_T1CKI
  4295  0000                     _T1CKI	set	0x7C10
  4296                           	global	_T1CKPS0
  4297  0000                     _T1CKPS0	set	0x7E6C
  4298                           	global	_T1CKPS1
  4299  0000                     _T1CKPS1	set	0x7E6D
  4300                           	global	_T1INSYNC
  4301  0000                     _T1INSYNC	set	0x7E6A
  4302                           	global	_T1OSCEN
  4303  0000                     _T1OSCEN	set	0x7E6B
  4304                           	global	_T1OSI
  4305  0000                     _T1OSI	set	0x7C11
  4306                           	global	_T1OSO
  4307  0000                     _T1OSO	set	0x7C10
  4308                           	global	_T1RD16
  4309  0000                     _T1RD16	set	0x7E6F
  4310                           	global	_T1RUN
  4311  0000                     _T1RUN	set	0x7E6E
  4312                           	global	_T1SYNC
  4313  0000                     _T1SYNC	set	0x7E6A
  4314                           	global	_T2CKPS0
  4315  0000                     _T2CKPS0	set	0x7E50
  4316                           	global	_T2CKPS1
  4317  0000                     _T2CKPS1	set	0x7E51
  4318                           	global	_T2OUTPS0
  4319  0000                     _T2OUTPS0	set	0x7E53
  4320                           	global	_T2OUTPS1
  4321  0000                     _T2OUTPS1	set	0x7E54
  4322                           	global	_T2OUTPS2
  4323  0000                     _T2OUTPS2	set	0x7E55
  4324                           	global	_T2OUTPS3
  4325  0000                     _T2OUTPS3	set	0x7E56
  4326                           	global	_TMR0IE
  4327  0000                     _TMR0IE	set	0x7F95
  4328                           	global	_TMR0IF
  4329  0000                     _TMR0IF	set	0x7F92
  4330                           	global	_TMR0IP
  4331  0000                     _TMR0IP	set	0x7F8A
  4332                           	global	_TMR0ON
  4333  0000                     _TMR0ON	set	0x7EAF
  4334                           	global	_TMR1CS
  4335  0000                     _TMR1CS	set	0x7E69
  4336                           	global	_TMR1IE
  4337  0000                     _TMR1IE	set	0x7CE8
  4338                           	global	_TMR1IF
  4339  0000                     _TMR1IF	set	0x7CF0
  4340                           	global	_TMR1IP
  4341  0000                     _TMR1IP	set	0x7CF8
  4342                           	global	_TMR1ON
  4343  0000                     _TMR1ON	set	0x7E68
  4344                           	global	_TMR2IE
  4345  0000                     _TMR2IE	set	0x7CE9
  4346                           	global	_TMR2IF
  4347  0000                     _TMR2IF	set	0x7CF1
  4348                           	global	_TMR2IP
  4349  0000                     _TMR2IP	set	0x7CF9
  4350                           	global	_TMR2ON
  4351  0000                     _TMR2ON	set	0x7E52
  4352                           	global	_TO
  4353  0000                     _TO	set	0x7E83
  4354                           	global	_TOUTPS0
  4355  0000                     _TOUTPS0	set	0x7E53
  4356                           	global	_TOUTPS1
  4357  0000                     _TOUTPS1	set	0x7E54
  4358                           	global	_TOUTPS2
  4359  0000                     _TOUTPS2	set	0x7E55
  4360                           	global	_TOUTPS3
  4361  0000                     _TOUTPS3	set	0x7E56
  4362                           	global	_TRISA0
  4363  0000                     _TRISA0	set	0x7C90
  4364                           	global	_TRISA1
  4365  0000                     _TRISA1	set	0x7C91
  4366                           	global	_TRISA2
  4367  0000                     _TRISA2	set	0x7C92
  4368                           	global	_TRISA3
  4369  0000                     _TRISA3	set	0x7C93
  4370                           	global	_TRISA5
  4371  0000                     _TRISA5	set	0x7C95
  4372                           	global	_TRISB0
  4373  0000                     _TRISB0	set	0x7C98
  4374                           	global	_TRISB1
  4375  0000                     _TRISB1	set	0x7C99
  4376                           	global	_TRISB2
  4377  0000                     _TRISB2	set	0x7C9A
  4378                           	global	_TRISB3
  4379  0000                     _TRISB3	set	0x7C9B
  4380                           	global	_TRISB4
  4381  0000                     _TRISB4	set	0x7C9C
  4382                           	global	_TRISB5
  4383  0000                     _TRISB5	set	0x7C9D
  4384                           	global	_TRISB6
  4385  0000                     _TRISB6	set	0x7C9E
  4386                           	global	_TRISB7
  4387  0000                     _TRISB7	set	0x7C9F
  4388                           	global	_TRISC0
  4389  0000                     _TRISC0	set	0x7CA0
  4390                           	global	_TRISC1
  4391  0000                     _TRISC1	set	0x7CA1
  4392                           	global	_TRISC2
  4393  0000                     _TRISC2	set	0x7CA2
  4394                           	global	_TRISC3
  4395  0000                     _TRISC3	set	0x7CA3
  4396                           	global	_TRISC4
  4397  0000                     _TRISC4	set	0x7CA4
  4398                           	global	_TRISC5
  4399  0000                     _TRISC5	set	0x7CA5
  4400                           	global	_TRISC6
  4401  0000                     _TRISC6	set	0x7CA6
  4402                           	global	_TRISC7
  4403  0000                     _TRISC7	set	0x7CA7
  4404                           	global	_TRISD0
  4405  0000                     _TRISD0	set	0x7CA8
  4406                           	global	_TRISD1
  4407  0000                     _TRISD1	set	0x7CA9
  4408                           	global	_TRISD2
  4409  0000                     _TRISD2	set	0x7CAA
  4410                           	global	_TRISD3
  4411  0000                     _TRISD3	set	0x7CAB
  4412                           	global	_TRISD4
  4413  0000                     _TRISD4	set	0x7CAC
  4414                           	global	_TRISD5
  4415  0000                     _TRISD5	set	0x7CAD
  4416                           	global	_TRISD6
  4417  0000                     _TRISD6	set	0x7CAE
  4418                           	global	_TRISD7
  4419  0000                     _TRISD7	set	0x7CAF
  4420                           	global	_TRISE0
  4421  0000                     _TRISE0	set	0x7CB0
  4422                           	global	_TRISE1
  4423  0000                     _TRISE1	set	0x7CB1
  4424                           	global	_TRISE2
  4425  0000                     _TRISE2	set	0x7CB2
  4426                           	global	_TRMT
  4427  0000                     _TRMT	set	0x7D61
  4428                           	global	_TRMT1
  4429  0000                     _TRMT1	set	0x7D61
  4430                           	global	_TX
  4431  0000                     _TX	set	0x7C16
  4432                           	global	_TX1IE
  4433  0000                     _TX1IE	set	0x7CEC
  4434                           	global	_TX1IF
  4435  0000                     _TX1IF	set	0x7CF4
  4436                           	global	_TX1IP
  4437  0000                     _TX1IP	set	0x7CFC
  4438                           	global	_TX8_9
  4439  0000                     _TX8_9	set	0x7D66
  4440                           	global	_TX9
  4441  0000                     _TX9	set	0x7D66
  4442                           	global	_TX91
  4443  0000                     _TX91	set	0x7D66
  4444                           	global	_TX9D
  4445  0000                     _TX9D	set	0x7D60
  4446                           	global	_TX9D1
  4447  0000                     _TX9D1	set	0x7D60
  4448                           	global	_TXD8
  4449  0000                     _TXD8	set	0x7D60
  4450                           	global	_TXEN
  4451  0000                     _TXEN	set	0x7D65
  4452                           	global	_TXEN1
  4453  0000                     _TXEN1	set	0x7D65
  4454                           	global	_TXIE
  4455  0000                     _TXIE	set	0x7CEC
  4456                           	global	_TXIF
  4457  0000                     _TXIF	set	0x7CF4
  4458                           	global	_TXIP
  4459  0000                     _TXIP	set	0x7CFC
  4460                           	global	_UA
  4461  0000                     _UA	set	0x7E39
  4462                           	global	_UA1
  4463  0000                     _UA1	set	0x7E39
  4464                           	global	_UA2
  4465  0000                     _UA2	set	0x7C39
  4466                           	global	_ULPWUIN
  4467  0000                     _ULPWUIN	set	0x7C00
  4468                           	global	_VCFG0
  4469  0000                     _VCFG0	set	0x7E0C
  4470                           	global	_VCFG01
  4471  0000                     _VCFG01	set	0x7E0C
  4472                           	global	_VCFG1
  4473  0000                     _VCFG1	set	0x7E0D
  4474                           	global	_VCFG11
  4475  0000                     _VCFG11	set	0x7E0D
  4476                           	global	_VREFM
  4477  0000                     _VREFM	set	0x7C02
  4478                           	global	_VREFP
  4479  0000                     _VREFP	set	0x7C03
  4480                           	global	_W4E
  4481  0000                     _W4E	set	0x7DC1
  4482                           	global	_WCOL
  4483  0000                     _WCOL	set	0x7E37
  4484                           	global	_WCOL1
  4485  0000                     _WCOL1	set	0x7E37
  4486                           	global	_WCOL2
  4487  0000                     _WCOL2	set	0x7C37
  4488                           	global	_WR
  4489  0000                     _WR	set	0x7D31
  4490                           	global	_WRE
  4491  0000                     _WRE	set	0x7C21
  4492                           	global	_WREN
  4493  0000                     _WREN	set	0x7D32
  4494                           	global	_WRERR
  4495  0000                     _WRERR	set	0x7D33
  4496                           	global	_WUE
  4497  0000                     _WUE	set	0x7DC1
  4498                           	global	_ZERO
  4499  0000                     _ZERO	set	0x7EC2
  4500                           	global	_nA2
  4501  0000                     _nA2	set	0x7C3D
  4502                           	global	_nADDRESS2
  4503  0000                     _nADDRESS2	set	0x7C3D
  4504                           	global	_nBOR
  4505  0000                     _nBOR	set	0x7E80
  4506                           	global	_nCS
  4507  0000                     _nCS	set	0x7C22
  4508                           	global	_nDONE
  4509  0000                     _nDONE	set	0x7E11
  4510                           	global	_nPD
  4511  0000                     _nPD	set	0x7E82
  4512                           	global	_nPOR
  4513  0000                     _nPOR	set	0x7E81
  4514                           	global	_nRBPU
  4515  0000                     _nRBPU	set	0x7F8F
  4516                           	global	_nRC8
  4517  0000                     _nRC8	set	0x7D5E
  4518                           	global	_nRD
  4519  0000                     _nRD	set	0x7C20
  4520                           	global	_nRI
  4521  0000                     _nRI	set	0x7E84
  4522                           	global	_nSS1
  4523  0000                     _nSS1	set	0x7C05
  4524                           	global	_nSS2
  4525  0000                     _nSS2	set	0x7C1B
  4526                           	global	_nT1SYNC
  4527  0000                     _nT1SYNC	set	0x7E6A
  4528                           	global	_nTO
  4529  0000                     _nTO	set	0x7E83
  4530                           	global	_nTX8
  4531  0000                     _nTX8	set	0x7D66
  4532                           	global	_nW2
  4533  0000                     _nW2	set	0x7C3A
  4534                           	global	_nWR
  4535  0000                     _nWR	set	0x7C21
  4536                           	global	_nWRITE2
  4537  0000                     _nWRITE2	set	0x7C3A
  4538                           	global	_SSP1CON1
  4539  0000                     _SSP1CON1	set	0xFC6
  4540                           	global	_ic_ptr
  4541                           psect	nvCOMRAM,class=COMRAM,space=1
  4542                           global __pnvCOMRAM
  4543  000048                     __pnvCOMRAM:
  4544  000048                     _ic_ptr:
  4545  000048                            ds      2
  4546                           	global	_uc_ptr
  4547  00004A                     _uc_ptr:
  4548  00004A                            ds      2
  4549                           ; #config settings
  4550                           global __CFG_WDTEN$OFF
  4551  0000                     __CFG_WDTEN$OFF equ 0x0
  4552                           global __CFG_STVREN$OFF
  4553  0000                     __CFG_STVREN$OFF equ 0x0
  4554                           global __CFG_XINST$OFF
  4555  0000                     __CFG_XINST$OFF equ 0x0
  4556                           global __CFG_CP0$OFF
  4557  0000                     __CFG_CP0$OFF equ 0x0
  4558                           global __CFG_IESO$ON
  4559  0000                     __CFG_IESO$ON equ 0x0
  4560                           global __CFG_FOSC2$ON
  4561  0000                     __CFG_FOSC2$ON equ 0x0
  4562                           global __CFG_FOSC$HSPLL
  4563  0000                     __CFG_FOSC$HSPLL equ 0x0
  4564                           global __CFG_FCMEN$ON
  4565  0000                     __CFG_FCMEN$ON equ 0x0
  4566                           global __CFG_WDTPS$32768
  4567  0000                     __CFG_WDTPS$32768 equ 0x0
  4568                           global __CFG_CCP2MX$DEFAULT
  4569  0000                     __CFG_CCP2MX$DEFAULT equ 0x0
  4570                           	file	"/tmp/cgtDpucsW"
  4571                           	line	#
  4572                           psect	cinit,class=CODE,delta=1,reloc=2
  4573                           global __pcinit
  4574  001B44                     __pcinit:
  4575                           global start_initialization
  4576  001B44                     start_initialization:
  4577                           
  4578                           global __initialization
  4579  001B44                     __initialization:
  4580                           psect	bssCOMRAM,class=COMRAM,space=1
  4581                           global __pbssCOMRAM
  4582  000042                     __pbssCOMRAM:
  4583                           	global	_errno
  4584                           	global	_errno
  4585  000042                     _errno:
  4586  000042                            ds      2
  4587                           	global	_CapStatus
  4588                           	global	_CapStatus
  4589  000044                     _CapStatus:
  4590  000044                            ds      1
  4591  000045                     _MQ_Main_Willing_to_block:
  4592  000045                            ds      1
  4593                           	global	_USART_Status
  4594  000046                     _USART_Status:
  4595  000046                            ds      1
  4596  000047                     _adcMsgCount:
  4597  000047                            ds      1
  4598                           psect	bssBANK0,class=BANK0,space=1
  4599                           global __pbssBANK0
  4600  0000C5                     __pbssBANK0:
  4601  0000C5                     _emptyMsgCount:
  4602  0000C5                            ds      1
  4603  0000C6                     _i2cMode:
  4604  0000C6                            ds      1
  4605                           psect	bssBANK1,class=BANK1,space=1
  4606                           global __pbssBANK1
  4607  000100                     __pbssBANK1:
  4608  000100                     _FromMainLow_MQ:
  4609  000100                            ds      54
  4610  000136                     _ToMainHigh_MQ:
  4611  000136                            ds      54
  4612  00016C                     _ToMainLow_MQ:
  4613  00016C                            ds      54
  4614                           psect	bssBANK2,class=BANK2,space=1
  4615                           global __pbssBANK2
  4616  000200                     __pbssBANK2:
  4617  000200                     _FromMainHigh_MQ:
  4618  000200                            ds      54
  4619                           psect	cinit
  4620                           ; Clear objects allocated to BANK2 (54 bytes)
  4621                           	global __pbssBANK2
  4622  001B44  EE02  F000         lfsr	0,__pbssBANK2
  4623  001B48  0E36               movlw	54
  4624  001B4A                     clear_0:
  4625  001B4A  6AEE               clrf	postinc0,c
  4626  001B4C  06E8               decf	wreg
  4627  001B4E  E1FD               bnz	clear_0
  4628                           ; Clear objects allocated to BANK1 (162 bytes)
  4629                           	global __pbssBANK1
  4630  001B50  EE01  F000         lfsr	0,__pbssBANK1
  4631  001B54  0EA2               movlw	162
  4632  001B56                     clear_1:
  4633  001B56  6AEE               clrf	postinc0,c
  4634  001B58  06E8               decf	wreg
  4635  001B5A  E1FD               bnz	clear_1
  4636                           ; Clear objects allocated to BANK0 (2 bytes)
  4637                           	global __pbssBANK0
  4638  001B5C  0100               movlb	0
  4639  001B5E  6BC6               clrf	(__pbssBANK0+1)&0xffh,b
  4640  001B60  6BC5               clrf	(__pbssBANK0+0)&0xffh,b
  4641                           ; Clear objects allocated to COMRAM (6 bytes)
  4642                           	global __pbssCOMRAM
  4643  001B62  6A47               clrf	(__pbssCOMRAM+5)&0xffh,c
  4644  001B64  6A46               clrf	(__pbssCOMRAM+4)&0xffh,c
  4645  001B66  6A45               clrf	(__pbssCOMRAM+3)&0xffh,c
  4646  001B68  6A44               clrf	(__pbssCOMRAM+2)&0xffh,c
  4647  001B6A  6A43               clrf	(__pbssCOMRAM+1)&0xffh,c
  4648  001B6C  6A42               clrf	(__pbssCOMRAM+0)&0xffh,c
  4649                           psect cinit,class=CODE,delta=1
  4650                           global end_of_initialization,__end_of__initialization
  4651                           
  4652                           ;End of C runtime variable initialization code
  4653                           
  4654  001B6E                     end_of_initialization:
  4655  001B6E                     __end_of__initialization:movlb 0
  4656  001B70  EF85  F003         goto _main	;jump to C main() function
  4657                           psect	cstackBANK1,class=BANK1,space=1
  4658                           global __pcstackBANK1
  4659  0001A2                     __pcstackBANK1:
  4660                           	global	?_send_msg
  4661  0001A2                     ?_send_msg:	; 1 bytes @ 0x0
  4662                           	global	?_recv_msg
  4663  0001A2                     ?_recv_msg:	; 1 bytes @ 0x0
  4664                           	global	send_msg@qptr
  4665  0001A2                     send_msg@qptr:	; 2 bytes @ 0x0
  4666                           	global	recv_msg@qptr
  4667  0001A2                     recv_msg@qptr:	; 2 bytes @ 0x0
  4668  0001A2                     	ds   2
  4669                           	global	send_msg@length
  4670  0001A4                     send_msg@length:	; 1 bytes @ 0x2
  4671                           	global	recv_msg@maxlength
  4672  0001A4                     recv_msg@maxlength:	; 1 bytes @ 0x2
  4673  0001A4                     	ds   1
  4674                           	global	send_msg@msgtype
  4675  0001A5                     send_msg@msgtype:	; 1 bytes @ 0x3
  4676                           	global	recv_msg@msgtype
  4677  0001A5                     recv_msg@msgtype:	; 2 bytes @ 0x3
  4678  0001A5                     	ds   1
  4679                           	global	send_msg@data
  4680  0001A6                     send_msg@data:	; 2 bytes @ 0x4
  4681  0001A6                     	ds   1
  4682                           	global	recv_msg@data
  4683  0001A7                     recv_msg@data:	; 2 bytes @ 0x5
  4684  0001A7                     	ds   1
  4685                           	global	send_msg@tlength
  4686  0001A8                     send_msg@tlength:	; 2 bytes @ 0x6
  4687  0001A8                     	ds   1
  4688                           	global	recv_msg@slot
  4689  0001A9                     recv_msg@slot:	; 1 bytes @ 0x7
  4690  0001A9                     	ds   1
  4691                           	global	send_msg@slot
  4692  0001AA                     send_msg@slot:	; 1 bytes @ 0x8
  4693                           	global	recv_msg@tlength
  4694  0001AA                     recv_msg@tlength:	; 2 bytes @ 0x8
  4695  0001AA                     	ds   1
  4696                           	global	send_msg@qmsg
  4697  0001AB                     send_msg@qmsg:	; 2 bytes @ 0x9
  4698  0001AB                     	ds   1
  4699                           	global	recv_msg@qmsg
  4700  0001AC                     recv_msg@qmsg:	; 2 bytes @ 0xA
  4701  0001AC                     	ds   1
  4702                           	global	?_FromMainLow_sendmsg
  4703  0001AD                     ?_FromMainLow_sendmsg:	; 1 bytes @ 0xB
  4704                           	global	FromMainLow_sendmsg@length
  4705  0001AD                     FromMainLow_sendmsg@length:	; 1 bytes @ 0xB
  4706  0001AD                     	ds   1
  4707                           	global	?_ToMainHigh_recvmsg
  4708  0001AE                     ?_ToMainHigh_recvmsg:	; 1 bytes @ 0xC
  4709                           	global	?_ToMainLow_recvmsg
  4710  0001AE                     ?_ToMainLow_recvmsg:	; 1 bytes @ 0xC
  4711                           	global	ToMainLow_recvmsg@maxlength
  4712  0001AE                     ToMainLow_recvmsg@maxlength:	; 1 bytes @ 0xC
  4713                           	global	ToMainHigh_recvmsg@maxlength
  4714  0001AE                     ToMainHigh_recvmsg@maxlength:	; 1 bytes @ 0xC
  4715                           	global	FromMainLow_sendmsg@msgtype
  4716  0001AE                     FromMainLow_sendmsg@msgtype:	; 1 bytes @ 0xC
  4717  0001AE                     	ds   1
  4718                           	global	ToMainLow_recvmsg@msgtype
  4719  0001AF                     ToMainLow_recvmsg@msgtype:	; 2 bytes @ 0xD
  4720                           	global	ToMainHigh_recvmsg@msgtype
  4721  0001AF                     ToMainHigh_recvmsg@msgtype:	; 2 bytes @ 0xD
  4722                           	global	FromMainLow_sendmsg@data
  4723  0001AF                     FromMainLow_sendmsg@data:	; 2 bytes @ 0xD
  4724  0001AF                     	ds   2
  4725                           	global	ToMainLow_recvmsg@data
  4726  0001B1                     ToMainLow_recvmsg@data:	; 2 bytes @ 0xF
  4727                           	global	ToMainHigh_recvmsg@data
  4728  0001B1                     ToMainHigh_recvmsg@data:	; 2 bytes @ 0xF
  4729  0001B1                     	ds   2
  4730  0001B3                     ??_main:	; 0 bytes @ 0x11
  4731  0001B3                     	ds   1
  4732                           	global	main@msgbuffer
  4733  0001B4                     main@msgbuffer:	; 11 bytes @ 0x12
  4734  0001B4                     	ds   11
  4735                           	global	main@uthread_data
  4736  0001BF                     main@uthread_data:	; 2 bytes @ 0x1D
  4737  0001BF                     	ds   2
  4738                           	global	main@t0thread_data
  4739  0001C1                     main@t0thread_data:	; 2 bytes @ 0x1F
  4740  0001C1                     	ds   2
  4741                           	global	main@last_reg_recvd
  4742  0001C3                     main@last_reg_recvd:	; 1 bytes @ 0x21
  4743  0001C3                     	ds   1
  4744                           	global	main@t1thread_data
  4745  0001C4                     main@t1thread_data:	; 2 bytes @ 0x22
  4746  0001C4                     	ds   2
  4747                           	global	main@uc
  4748  0001C6                     main@uc:	; 5 bytes @ 0x24
  4749  0001C6                     	ds   5
  4750                           	global	main@length
  4751  0001CB                     main@length:	; 1 bytes @ 0x29
  4752  0001CB                     	ds   1
  4753                           	global	main@msgtype
  4754  0001CC                     main@msgtype:	; 1 bytes @ 0x2A
  4755  0001CC                     	ds   1
  4756                           	global	main@ic
  4757  0001CD                     main@ic:	; 28 bytes @ 0x2B
  4758  0001CD                     	ds   28
  4759                           psect	cstackBANK0,class=BANK0,space=1
  4760                           global __pcstackBANK0
  4761  000080                     __pcstackBANK0:
  4762                           	global	?i2_send_msg
  4763  000080                     ?i2_send_msg:	; 1 bytes @ 0x0
  4764                           	global	?i2_recv_msg
  4765  000080                     ?i2_recv_msg:	; 1 bytes @ 0x0
  4766                           	global	i2send_msg@qptr
  4767  000080                     i2send_msg@qptr:	; 2 bytes @ 0x0
  4768                           	global	i2recv_msg@qptr
  4769  000080                     i2recv_msg@qptr:	; 2 bytes @ 0x0
  4770  000080                     	ds   2
  4771                           	global	i2send_msg@length
  4772  000082                     i2send_msg@length:	; 1 bytes @ 0x2
  4773                           	global	i2recv_msg@maxlength
  4774  000082                     i2recv_msg@maxlength:	; 1 bytes @ 0x2
  4775  000082                     	ds   1
  4776                           	global	i2send_msg@msgtype
  4777  000083                     i2send_msg@msgtype:	; 1 bytes @ 0x3
  4778                           	global	i2recv_msg@msgtype
  4779  000083                     i2recv_msg@msgtype:	; 2 bytes @ 0x3
  4780  000083                     	ds   1
  4781                           	global	i2send_msg@data
  4782  000084                     i2send_msg@data:	; 2 bytes @ 0x4
  4783  000084                     	ds   1
  4784                           	global	i2recv_msg@data
  4785  000085                     i2recv_msg@data:	; 2 bytes @ 0x5
  4786  000085                     	ds   1
  4787                           	global	i2send_msg@tlength
  4788  000086                     i2send_msg@tlength:	; 2 bytes @ 0x6
  4789  000086                     	ds   1
  4790                           	global	i2recv_msg@slot
  4791  000087                     i2recv_msg@slot:	; 1 bytes @ 0x7
  4792  000087                     	ds   1
  4793                           	global	i2send_msg@slot
  4794  000088                     i2send_msg@slot:	; 1 bytes @ 0x8
  4795                           	global	i2recv_msg@tlength
  4796  000088                     i2recv_msg@tlength:	; 2 bytes @ 0x8
  4797  000088                     	ds   1
  4798                           	global	i2send_msg@qmsg
  4799  000089                     i2send_msg@qmsg:	; 2 bytes @ 0x9
  4800  000089                     	ds   1
  4801                           	global	i2recv_msg@qmsg
  4802  00008A                     i2recv_msg@qmsg:	; 2 bytes @ 0xA
  4803  00008A                     	ds   1
  4804                           	global	?_ToMainHigh_sendmsg
  4805  00008B                     ?_ToMainHigh_sendmsg:	; 1 bytes @ 0xB
  4806                           	global	ToMainHigh_sendmsg@length
  4807  00008B                     ToMainHigh_sendmsg@length:	; 1 bytes @ 0xB
  4808  00008B                     	ds   1
  4809                           	global	?_FromMainLow_recvmsg
  4810  00008C                     ?_FromMainLow_recvmsg:	; 1 bytes @ 0xC
  4811                           	global	?_FromMainHigh_recvmsg
  4812  00008C                     ?_FromMainHigh_recvmsg:	; 1 bytes @ 0xC
  4813                           	global	ToMainHigh_sendmsg@msgtype
  4814  00008C                     ToMainHigh_sendmsg@msgtype:	; 1 bytes @ 0xC
  4815                           	global	FromMainLow_recvmsg@maxlength
  4816  00008C                     FromMainLow_recvmsg@maxlength:	; 1 bytes @ 0xC
  4817                           	global	FromMainHigh_recvmsg@maxlength
  4818  00008C                     FromMainHigh_recvmsg@maxlength:	; 1 bytes @ 0xC
  4819  00008C                     	ds   1
  4820                           	global	ToMainHigh_sendmsg@data
  4821  00008D                     ToMainHigh_sendmsg@data:	; 2 bytes @ 0xD
  4822                           	global	FromMainLow_recvmsg@msgtype
  4823  00008D                     FromMainLow_recvmsg@msgtype:	; 2 bytes @ 0xD
  4824                           	global	FromMainHigh_recvmsg@msgtype
  4825  00008D                     FromMainHigh_recvmsg@msgtype:	; 2 bytes @ 0xD
  4826  00008D                     	ds   2
  4827                           	global	FromMainLow_recvmsg@data
  4828  00008F                     FromMainLow_recvmsg@data:	; 2 bytes @ 0xF
  4829                           	global	FromMainHigh_recvmsg@data
  4830  00008F                     FromMainHigh_recvmsg@data:	; 2 bytes @ 0xF
  4831  00008F                     	ds   2
  4832                           	global	timer0_int_handler@msgtype
  4833  000091                     timer0_int_handler@msgtype:	; 2 bytes @ 0x11
  4834                           	global	i2c_slave_int_handler@data
  4835  000091                     i2c_slave_int_handler@data:	; 10 bytes @ 0x11
  4836  000091                     	ds   2
  4837                           	global	timer0_int_handler@length
  4838  000093                     timer0_int_handler@length:	; 2 bytes @ 0x13
  4839  000093                     	ds   2
  4840                           	global	timer0_int_handler@val
  4841  000095                     timer0_int_handler@val:	; 2 bytes @ 0x15
  4842  000095                     	ds   6
  4843                           	global	i2c_slave_int_handler@empty
  4844  00009B                     i2c_slave_int_handler@empty:	; 4 bytes @ 0x1B
  4845  00009B                     	ds   4
  4846                           	global	i2c_slave_int_handler@error_buf
  4847  00009F                     i2c_slave_int_handler@error_buf:	; 3 bytes @ 0x1F
  4848  00009F                     	ds   3
  4849                           	global	i2c_slave_int_handler@data_written
  4850  0000A2                     i2c_slave_int_handler@data_written:	; 1 bytes @ 0x22
  4851  0000A2                     	ds   1
  4852                           	global	i2c_slave_int_handler@overrun_error
  4853  0000A3                     i2c_slave_int_handler@overrun_error:	; 1 bytes @ 0x23
  4854  0000A3                     	ds   1
  4855                           	global	i2c_slave_int_handler@length
  4856  0000A4                     i2c_slave_int_handler@length:	; 2 bytes @ 0x24
  4857  0000A4                     	ds   2
  4858                           	global	i2c_slave_int_handler@i2c_data
  4859  0000A6                     i2c_slave_int_handler@i2c_data:	; 1 bytes @ 0x26
  4860  0000A6                     	ds   1
  4861                           	global	i2c_slave_int_handler@msgtype
  4862  0000A7                     i2c_slave_int_handler@msgtype:	; 1 bytes @ 0x27
  4863  0000A7                     	ds   1
  4864                           	global	i2c_slave_int_handler@msg_to_send
  4865  0000A8                     i2c_slave_int_handler@msg_to_send:	; 1 bytes @ 0x28
  4866  0000A8                     	ds   1
  4867                           	global	i2c_slave_int_handler@msg_ready
  4868  0000A9                     i2c_slave_int_handler@msg_ready:	; 1 bytes @ 0x29
  4869  0000A9                     	ds   1
  4870                           	global	i2c_slave_int_handler@data_read
  4871  0000AA                     i2c_slave_int_handler@data_read:	; 1 bytes @ 0x2A
  4872  0000AA                     	ds   1
  4873  0000AB                     ??_InterruptHandlerHigh:	; 0 bytes @ 0x2B
  4874  0000AB                     	ds   14
  4875                           	global	?_init_uart_recv
  4876  0000B9                     ?_init_uart_recv:	; 0 bytes @ 0x39
  4877                           	global	?_init_i2c
  4878  0000B9                     ?_init_i2c:	; 0 bytes @ 0x39
  4879                           	global	?_OpenTimer1
  4880  0000B9                     ?_OpenTimer1:	; 0 bytes @ 0x39
  4881                           	global	?_i2c_configure_slave
  4882  0000B9                     ?_i2c_configure_slave:	; 0 bytes @ 0x39
  4883                           	global	?_OpenUSART
  4884  0000B9                     ?_OpenUSART:	; 0 bytes @ 0x39
  4885                           	global	?_Delay1KTCYx
  4886  0000B9                     ?_Delay1KTCYx:	; 0 bytes @ 0x39
  4887                           	global	?_OpenADC
  4888  0000B9                     ?_OpenADC:	; 0 bytes @ 0x39
  4889                           	global	?_SetChanADC
  4890  0000B9                     ?_SetChanADC:	; 0 bytes @ 0x39
  4891  0000B9                     ??_ConvertADC:	; 0 bytes @ 0x39
  4892  0000B9                     ??_enable_interrupts:	; 0 bytes @ 0x39
  4893                           	global	?_init_queue
  4894  0000B9                     ?_init_queue:	; 0 bytes @ 0x39
  4895                           	global	?_check_msg
  4896  0000B9                     ?_check_msg:	; 1 bytes @ 0x39
  4897                           	global	?_timer0_lthread
  4898  0000B9                     ?_timer0_lthread:	; 2 bytes @ 0x39
  4899                           	global	?_timer1_lthread
  4900  0000B9                     ?_timer1_lthread:	; 2 bytes @ 0x39
  4901                           	global	?_uart_lthread
  4902  0000B9                     ?_uart_lthread:	; 2 bytes @ 0x39
  4903                           	global	?_memcpy
  4904  0000B9                     ?_memcpy:	; 2 bytes @ 0x39
  4905                           	global	?_in_high_int
  4906  0000B9                     ?_in_high_int:	; 2 bytes @ 0x39
  4907                           	global	i2c_configure_slave@addr
  4908  0000B9                     i2c_configure_slave@addr:	; 1 bytes @ 0x39
  4909                           	global	OpenADC@config
  4910  0000B9                     OpenADC@config:	; 1 bytes @ 0x39
  4911                           	global	SetChanADC@channel
  4912  0000B9                     SetChanADC@channel:	; 1 bytes @ 0x39
  4913                           	global	OpenTimer1@config
  4914  0000B9                     OpenTimer1@config:	; 1 bytes @ 0x39
  4915                           	global	OpenUSART@config
  4916  0000B9                     OpenUSART@config:	; 1 bytes @ 0x39
  4917                           	global	Delay1KTCYx@unit
  4918  0000B9                     Delay1KTCYx@unit:	; 1 bytes @ 0x39
  4919                           	global	init_queue@qptr
  4920  0000B9                     init_queue@qptr:	; 2 bytes @ 0x39
  4921                           	global	check_msg@qptr
  4922  0000B9                     check_msg@qptr:	; 2 bytes @ 0x39
  4923                           	global	init_i2c@ic
  4924  0000B9                     init_i2c@ic:	; 2 bytes @ 0x39
  4925                           	global	init_uart_recv@uc
  4926  0000B9                     init_uart_recv@uc:	; 2 bytes @ 0x39
  4927  0000B9                     timer0_lthread@tptr:	; 2 bytes @ 0x39
  4928                           	global	timer1_lthread@tptr
  4929  0000B9                     timer1_lthread@tptr:	; 2 bytes @ 0x39
  4930  0000B9                     uart_lthread@uptr:	; 2 bytes @ 0x39
  4931                           	global	memcpy@d1
  4932  0000B9                     memcpy@d1:	; 2 bytes @ 0x39
  4933  0000B9                     	ds   1
  4934  0000BA                     ??_OpenTimer1:	; 0 bytes @ 0x3A
  4935  0000BA                     ??_i2c_configure_slave:	; 0 bytes @ 0x3A
  4936  0000BA                     ??_Delay1KTCYx:	; 0 bytes @ 0x3A
  4937  0000BA                     ??_SetChanADC:	; 0 bytes @ 0x3A
  4938                           	global	OpenADC@config2
  4939  0000BA                     OpenADC@config2:	; 1 bytes @ 0x3A
  4940                           	global	OpenUSART@spbrg
  4941  0000BA                     OpenUSART@spbrg:	; 2 bytes @ 0x3A
  4942  0000BA                     	ds   1
  4943  0000BB                     ??_init_uart_recv:	; 0 bytes @ 0x3B
  4944  0000BB                     ??_init_i2c:	; 0 bytes @ 0x3B
  4945  0000BB                     ??_in_high_int:	; 0 bytes @ 0x3B
  4946  0000BB                     ??_init_queue:	; 0 bytes @ 0x3B
  4947  0000BB                     ??_check_msg:	; 0 bytes @ 0x3B
  4948                           	global	?_in_low_int
  4949  0000BB                     ?_in_low_int:	; 2 bytes @ 0x3B
  4950                           	global	OpenADC@portconfig
  4951  0000BB                     OpenADC@portconfig:	; 1 bytes @ 0x3B
  4952  0000BB                     timer0_lthread@msgtype:	; 2 bytes @ 0x3B
  4953  0000BB                     timer1_lthread@msgtype:	; 2 bytes @ 0x3B
  4954                           	global	uart_lthread@msgtype
  4955  0000BB                     uart_lthread@msgtype:	; 2 bytes @ 0x3B
  4956                           	global	memcpy@s1
  4957  0000BB                     memcpy@s1:	; 2 bytes @ 0x3B
  4958  0000BB                     	ds   1
  4959  0000BC                     ??_OpenUSART:	; 0 bytes @ 0x3C
  4960  0000BC                     ??_OpenADC:	; 0 bytes @ 0x3C
  4961                           	global	init_queue@i
  4962  0000BC                     init_queue@i:	; 1 bytes @ 0x3C
  4963  0000BC                     	ds   1
  4964  0000BD                     ??_init_queues:	; 0 bytes @ 0x3D
  4965  0000BD                     ??_in_low_int:	; 0 bytes @ 0x3D
  4966                           	global	?_in_main
  4967  0000BD                     ?_in_main:	; 2 bytes @ 0x3D
  4968  0000BD                     timer0_lthread@length:	; 2 bytes @ 0x3D
  4969  0000BD                     timer1_lthread@length:	; 2 bytes @ 0x3D
  4970                           	global	uart_lthread@length
  4971  0000BD                     uart_lthread@length:	; 2 bytes @ 0x3D
  4972                           	global	memcpy@n
  4973  0000BD                     memcpy@n:	; 2 bytes @ 0x3D
  4974  0000BD                     	ds   1
  4975                           	global	?_init_timer1_lthread
  4976  0000BE                     ?_init_timer1_lthread:	; 0 bytes @ 0x3E
  4977                           	global	init_timer1_lthread@tptr
  4978  0000BE                     init_timer1_lthread@tptr:	; 2 bytes @ 0x3E
  4979  0000BE                     	ds   1
  4980  0000BF                     ??_block_on_To_msgqueues:	; 0 bytes @ 0x3F
  4981  0000BF                     ??_memcpy:	; 0 bytes @ 0x3F
  4982  0000BF                     ??_in_main:	; 0 bytes @ 0x3F
  4983                           	global	timer0_lthread@msgbuffer
  4984  0000BF                     timer0_lthread@msgbuffer:	; 2 bytes @ 0x3F
  4985                           	global	timer1_lthread@msgbuffer
  4986  0000BF                     timer1_lthread@msgbuffer:	; 2 bytes @ 0x3F
  4987                           	global	uart_lthread@msgbuffer
  4988  0000BF                     uart_lthread@msgbuffer:	; 2 bytes @ 0x3F
  4989                           	global	memcpy@d
  4990  0000BF                     memcpy@d:	; 2 bytes @ 0x3F
  4991  0000BF                     	ds   1
  4992  0000C0                     ??_init_timer1_lthread:	; 0 bytes @ 0x40
  4993  0000C0                     	ds   1
  4994  0000C1                     ??_timer0_lthread:	; 0 bytes @ 0x41
  4995  0000C1                     ??_timer1_lthread:	; 0 bytes @ 0x41
  4996  0000C1                     ??_uart_lthread:	; 0 bytes @ 0x41
  4997                           	global	timer0_lthread@msgval
  4998  0000C1                     timer0_lthread@msgval:	; 2 bytes @ 0x41
  4999                           	global	memcpy@s
  5000  0000C1                     memcpy@s:	; 2 bytes @ 0x41
  5001  0000C1                     	ds   2
  5002  0000C3                     ??_send_msg:	; 0 bytes @ 0x43
  5003  0000C3                     ??_recv_msg:	; 0 bytes @ 0x43
  5004  0000C3                     	ds   1
  5005  0000C4                     ??_FromMainLow_sendmsg:	; 0 bytes @ 0x44
  5006  0000C4                     	ds   1
  5007  0000C5                     ??_ToMainHigh_recvmsg:	; 0 bytes @ 0x45
  5008  0000C5                     ??_ToMainLow_recvmsg:	; 0 bytes @ 0x45
  5009                           psect	cstackCOMRAM,class=COMRAM,space=1
  5010                           global __pcstackCOMRAM
  5011  000001                     __pcstackCOMRAM:
  5012  000001                     ?_i2c_int_handler:	; 0 bytes @ 0x0
  5013  000001                     ?_timer0_int_handler:	; 0 bytes @ 0x0
  5014  000001                     ?_SleepIfOkay:	; 0 bytes @ 0x0
  5015  000001                     ?_timer1_int_handler:	; 0 bytes @ 0x0
  5016  000001                     ?_adc_int_handler:	; 0 bytes @ 0x0
  5017  000001                     ?_uart_recv_int_handler:	; 0 bytes @ 0x0
  5018  000001                     ?_init_queues:	; 0 bytes @ 0x0
  5019  000001                     ?_block_on_To_msgqueues:	; 0 bytes @ 0x0
  5020  000001                     ?_i2c_slave_int_handler:	; 0 bytes @ 0x0
  5021  000001                     ?_i2c_master_int_handler:	; 0 bytes @ 0x0
  5022  000001                     ??_ReadUSART:	; 0 bytes @ 0x0
  5023  000001                     ?_ConvertADC:	; 0 bytes @ 0x0
  5024                           	global	?_WriteTimer1
  5025  000001                     ?_WriteTimer1:	; 0 bytes @ 0x0
  5026  000001                     ?_enable_interrupts:	; 0 bytes @ 0x0
  5027  000001                     ?_InterruptHandlerHigh:	; 0 bytes @ 0x0
  5028  000001                     ?_InterruptHandlerLow:	; 0 bytes @ 0x0
  5029  000001                     ?_main:	; 0 bytes @ 0x0
  5030  000001                     ?_enter_sleep_mode:	; 0 bytes @ 0x0
  5031  000001                     ?_ReadUSART:	; 1 bytes @ 0x0
  5032                           	global	?_ReadTimer1
  5033  000001                     ?_ReadTimer1:	; 2 bytes @ 0x0
  5034                           	global	?_ReadADC
  5035  000001                     ?_ReadADC:	; 2 bytes @ 0x0
  5036                           	global	?i1_memcpy
  5037  000001                     ?i1_memcpy:	; 2 bytes @ 0x0
  5038                           	global	ReadUSART@data
  5039  000001                     ReadUSART@data:	; 1 bytes @ 0x0
  5040                           	global	WriteTimer1@timer1
  5041  000001                     WriteTimer1@timer1:	; 2 bytes @ 0x0
  5042                           	global	i1memcpy@d1
  5043  000001                     i1memcpy@d1:	; 2 bytes @ 0x0
  5044  000001                     	ds   2
  5045  000003                     ??_ReadTimer1:	; 0 bytes @ 0x2
  5046  000003                     ??_WriteTimer1:	; 0 bytes @ 0x2
  5047  000003                     ??_ReadADC:	; 0 bytes @ 0x2
  5048                           	global	ReadTimer1@timer
  5049  000003                     ReadTimer1@timer:	; 2 bytes @ 0x2
  5050                           	global	WriteTimer1@timer
  5051  000003                     WriteTimer1@timer:	; 2 bytes @ 0x2
  5052                           	global	i1memcpy@s1
  5053  000003                     i1memcpy@s1:	; 2 bytes @ 0x2
  5054  000003                     	ds   2
  5055                           	global	i1memcpy@n
  5056  000005                     i1memcpy@n:	; 2 bytes @ 0x4
  5057  000005                     	ds   2
  5058  000007                     ??i1_memcpy:	; 0 bytes @ 0x6
  5059                           	global	i1memcpy@d
  5060  000007                     i1memcpy@d:	; 2 bytes @ 0x6
  5061  000007                     	ds   2
  5062                           	global	i1memcpy@s
  5063  000009                     i1memcpy@s:	; 2 bytes @ 0x8
  5064  000009                     	ds   2
  5065                           	global	?i1_send_msg
  5066  00000B                     ?i1_send_msg:	; 1 bytes @ 0xA
  5067                           	global	i1send_msg@qptr
  5068  00000B                     i1send_msg@qptr:	; 2 bytes @ 0xA
  5069  00000B                     	ds   2
  5070                           	global	i1send_msg@length
  5071  00000D                     i1send_msg@length:	; 1 bytes @ 0xC
  5072  00000D                     	ds   1
  5073                           	global	i1send_msg@msgtype
  5074  00000E                     i1send_msg@msgtype:	; 1 bytes @ 0xD
  5075  00000E                     	ds   1
  5076                           	global	i1send_msg@data
  5077  00000F                     i1send_msg@data:	; 2 bytes @ 0xE
  5078  00000F                     	ds   2
  5079  000011                     ??i1_send_msg:	; 0 bytes @ 0x10
  5080  000011                     	ds   1
  5081                           	global	i1send_msg@tlength
  5082  000012                     i1send_msg@tlength:	; 2 bytes @ 0x11
  5083  000012                     	ds   2
  5084                           	global	i1send_msg@slot
  5085  000014                     i1send_msg@slot:	; 1 bytes @ 0x13
  5086  000014                     	ds   1
  5087                           	global	i1send_msg@qmsg
  5088  000015                     i1send_msg@qmsg:	; 2 bytes @ 0x14
  5089  000015                     	ds   2
  5090                           	global	?_ToMainLow_sendmsg
  5091  000017                     ?_ToMainLow_sendmsg:	; 1 bytes @ 0x16
  5092                           	global	ToMainLow_sendmsg@length
  5093  000017                     ToMainLow_sendmsg@length:	; 1 bytes @ 0x16
  5094  000017                     	ds   1
  5095                           	global	ToMainLow_sendmsg@msgtype
  5096  000018                     ToMainLow_sendmsg@msgtype:	; 1 bytes @ 0x17
  5097  000018                     	ds   1
  5098                           	global	ToMainLow_sendmsg@data
  5099  000019                     ToMainLow_sendmsg@data:	; 2 bytes @ 0x18
  5100  000019                     	ds   2
  5101  00001B                     ??_timer1_int_handler:	; 0 bytes @ 0x1A
  5102  00001B                     ??_adc_int_handler:	; 0 bytes @ 0x1A
  5103  00001B                     ??_uart_recv_int_handler:	; 0 bytes @ 0x1A
  5104  00001B                     ??_ToMainLow_sendmsg:	; 0 bytes @ 0x1A
  5105  00001B                     	ds   2
  5106                           	global	timer1_int_handler@temp
  5107  00001D                     timer1_int_handler@temp:	; 2 bytes @ 0x1C
  5108                           	global	adc_int_handler@message
  5109  00001D                     adc_int_handler@message:	; 4 bytes @ 0x1C
  5110  00001D                     	ds   2
  5111                           	global	timer1_int_handler@result
  5112  00001F                     timer1_int_handler@result:	; 2 bytes @ 0x1E
  5113  00001F                     	ds   2
  5114                           	global	adc_int_handler@value
  5115  000021                     adc_int_handler@value:	; 2 bytes @ 0x20
  5116  000021                     	ds   2
  5117  000023                     ??_InterruptHandlerLow:	; 0 bytes @ 0x22
  5118  000023                     	ds   17
  5119  000034                     ??_i2c_master_int_handler:	; 0 bytes @ 0x33
  5120                           	global	?_WriteTimer0
  5121  000034                     ?_WriteTimer0:	; 0 bytes @ 0x33
  5122  000034                     ??_enter_sleep_mode:	; 0 bytes @ 0x33
  5123                           	global	?_start_i2c_slave_reply
  5124  000034                     ?_start_i2c_slave_reply:	; 0 bytes @ 0x33
  5125                           	global	?_handle_start
  5126  000034                     ?_handle_start:	; 0 bytes @ 0x33
  5127                           	global	?i2_check_msg
  5128  000034                     ?i2_check_msg:	; 1 bytes @ 0x33
  5129                           	global	?i2_in_high_int
  5130  000034                     ?i2_in_high_int:	; 2 bytes @ 0x33
  5131                           	global	?i2_memcpy
  5132  000034                     ?i2_memcpy:	; 2 bytes @ 0x33
  5133                           	global	start_i2c_slave_reply@length
  5134  000034                     start_i2c_slave_reply@length:	; 1 bytes @ 0x33
  5135                           	global	handle_start@data_read
  5136  000034                     handle_start@data_read:	; 1 bytes @ 0x33
  5137                           	global	WriteTimer0@timer0
  5138  000034                     WriteTimer0@timer0:	; 2 bytes @ 0x33
  5139                           	global	i2check_msg@qptr
  5140  000034                     i2check_msg@qptr:	; 2 bytes @ 0x33
  5141                           	global	i2memcpy@d1
  5142  000034                     i2memcpy@d1:	; 2 bytes @ 0x33
  5143  000034                     	ds   1
  5144  000035                     ??_handle_start:	; 0 bytes @ 0x34
  5145                           	global	start_i2c_slave_reply@msg
  5146  000035                     start_i2c_slave_reply@msg:	; 2 bytes @ 0x34
  5147  000035                     	ds   1
  5148  000036                     ??_WriteTimer0:	; 0 bytes @ 0x35
  5149  000036                     ??i2_in_high_int:	; 0 bytes @ 0x35
  5150  000036                     ??i2_check_msg:	; 0 bytes @ 0x35
  5151                           	global	?i2_in_low_int
  5152  000036                     ?i2_in_low_int:	; 2 bytes @ 0x35
  5153                           	global	WriteTimer0@timer
  5154  000036                     WriteTimer0@timer:	; 2 bytes @ 0x35
  5155                           	global	i2memcpy@s1
  5156  000036                     i2memcpy@s1:	; 2 bytes @ 0x35
  5157  000036                     	ds   1
  5158  000037                     ??_start_i2c_slave_reply:	; 0 bytes @ 0x36
  5159  000037                     	ds   1
  5160  000038                     ??_SleepIfOkay:	; 0 bytes @ 0x37
  5161  000038                     ??i2_in_low_int:	; 0 bytes @ 0x37
  5162                           	global	i2memcpy@n
  5163  000038                     i2memcpy@n:	; 2 bytes @ 0x37
  5164  000038                     	ds   2
  5165  00003A                     ??i2_memcpy:	; 0 bytes @ 0x39
  5166                           	global	i2memcpy@d
  5167  00003A                     i2memcpy@d:	; 2 bytes @ 0x39
  5168  00003A                     	ds   2
  5169                           	global	i2memcpy@s
  5170  00003C                     i2memcpy@s:	; 2 bytes @ 0x3B
  5171  00003C                     	ds   2
  5172  00003E                     ??i2_send_msg:	; 0 bytes @ 0x3D
  5173  00003E                     ??i2_recv_msg:	; 0 bytes @ 0x3D
  5174  00003E                     	ds   1
  5175  00003F                     ??_ToMainHigh_sendmsg:	; 0 bytes @ 0x3E
  5176  00003F                     	ds   1
  5177  000040                     ??_timer0_int_handler:	; 0 bytes @ 0x3F
  5178  000040                     ??_i2c_slave_int_handler:	; 0 bytes @ 0x3F
  5179  000040                     ??_FromMainLow_recvmsg:	; 0 bytes @ 0x3F
  5180  000040                     ??_FromMainHigh_recvmsg:	; 0 bytes @ 0x3F
  5181  000040                     	ds   2
  5182  000042                     ??_i2c_int_handler:	; 0 bytes @ 0x41
  5183                           ;!
  5184                           ;!Data Sizes:
  5185                           ;!    Strings     0
  5186                           ;!    Constant    0
  5187                           ;!    Data        0
  5188                           ;!    BSS         224
  5189                           ;!    Persistent  4
  5190                           ;!    Stack       0
  5191                           ;!
  5192                           ;!Auto Spaces:
  5193                           ;!    Space          Size  Autos    Used
  5194                           ;!    COMRAM          127     65      75
  5195                           ;!    BANK0           128     69      71
  5196                           ;!    BANK1           256     71     233
  5197                           ;!    BANK2           256      0      54
  5198                           ;!    BANK3           256      0       0
  5199                           
  5200                           ;!
  5201                           ;!Pointer List with Targets:
  5202                           ;!
  5203                           ;!    ?_ReadTimer1	unsigned int  size(2) Largest target is 2
  5204                           ;!		 -> WriteTimer1@timer(COMRAM[2]), ReadTimer1@timer(COMRAM[2]), 
  5205                           ;!
  5206                           ;!    ?_ReadADC	int  size(2) Largest target is 0
  5207                           ;!
  5208                           ;!    ?_memcpy	PTR void  size(2) Largest target is 54
  5209                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@data(BANK0[10]), FromMai
                                 nHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
  5210                           ;!		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 
  5211                           ;!
  5212                           ;!    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
  5213                           ;!		 -> main@uthread_data(BANK1[2]), 
  5214                           ;!
  5215                           ;!    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
  5216                           ;!		 -> main@t0thread_data(BANK1[2]), 
  5217                           ;!
  5218                           ;!    ?_in_high_int	int  size(2) Largest target is 0
  5219                           ;!
  5220                           ;!    memcpy@d1	PTR void  size(2) Largest target is 54
  5221                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@data(BANK0[10]), FromMai
                                 nHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
  5222                           ;!		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 
  5223                           ;!
  5224                           ;!    memcpy@d	PTR unsigned char  size(2) Largest target is 54
  5225                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@data(BANK0[10]), FromMai
                                 nHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
  5226                           ;!		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 
  5227                           ;!
  5228                           ;!    memcpy@s1	PTR const void  size(2) Largest target is 54
  5229                           ;!		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), timer0
                                 _int_handler@val(BANK0[2]), NULL(NULL[0]), 
  5230                           ;!		 -> i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[54]), FromMainL
                                 ow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
  5231                           ;!		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), main@uc(BANK1[5]), 
  5232                           ;!
  5233                           ;!    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
  5234                           ;!		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), timer0
                                 _int_handler@val(BANK0[2]), NULL(NULL[0]), 
  5235                           ;!		 -> i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[54]), FromMainL
                                 ow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
  5236                           ;!		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), main@uc(BANK1[5]), 
  5237                           ;!
  5238                           ;!    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
  5239                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5240                           ;!
  5241                           ;!    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
  5242                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5243                           ;!
  5244                           ;!    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
  5245                           ;!		 -> main@t1thread_data(BANK1[2]), 
  5246                           ;!
  5247                           ;!    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target 
                                 is 2
  5248                           ;!		 -> main@t1thread_data(BANK1[2]), 
  5249                           ;!
  5250                           ;!    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
  5251                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5252                           ;!
  5253                           ;!    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
  5254                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5255                           ;!
  5256                           ;!    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
  5257                           ;!		 -> main@uc(BANK1[5]), 
  5258                           ;!
  5259                           ;!    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
  5260                           ;!		 -> NULL(NULL[0]), main@uc(BANK1[5]), 
  5261                           ;!
  5262                           ;!    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
  5263                           ;!		 -> main@ic(BANK1[28]), 
  5264                           ;!
  5265                           ;!    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 10
  5266                           ;!		 -> i2c_slave_int_handler@empty(BANK0[4]), i2c_slave_int_handler@data(BANK0[10]), 
  5267                           ;!
  5268                           ;!    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
  5269                           ;!		 -> NULL(NULL[0]), main@ic(BANK1[28]), 
  5270                           ;!
  5271                           ;!    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
  5272                           ;!		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
  5273                           ;!
  5274                           ;!    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
  5275                           ;!		 -> timer0_int_handler@val(BANK0[2]), 
  5276                           ;!
  5277                           ;!    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1023
  5278                           ;!		 -> RAM(DATA[1023]), 
  5279                           ;!
  5280                           ;!    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 10
  5281                           ;!		 -> i2c_slave_int_handler@data(BANK0[10]), 
  5282                           ;!
  5283                           ;!    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
  5284                           ;!		 -> i2c_slave_int_handler@msgtype(BANK0[1]), 
  5285                           ;!
  5286                           ;!    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 11
  5287                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5288                           ;!
  5289                           ;!    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
  5290                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5291                           ;!
  5292                           ;!    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
  5293                           ;!		 -> main@msgtype(BANK1[1]), 
  5294                           ;!
  5295                           ;!    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 3
  5296                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@error_buf(BANK0[3]), 
  5297                           ;!
  5298                           ;!    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
  5299                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5300                           ;!
  5301                           ;!    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
  5302                           ;!		 -> main@msgtype(BANK1[1]), 
  5303                           ;!
  5304                           ;!    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
  5305                           ;!		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), NULL(N
                                 ULL[0]), main@uc(BANK1[5]), 
  5306                           ;!
  5307                           ;!    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1023
  5308                           ;!		 -> RAM(DATA[1023]), i2c_slave_int_handler@msgtype(BANK0[1]), main@msgtype(BANK1[1])
                                 , 
  5309                           ;!
  5310                           ;!    recv_msg@data	PTR void  size(2) Largest target is 11
  5311                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@data(BANK0[10]), main@ms
                                 gbuffer(BANK1[11]), 
  5312                           ;!
  5313                           ;!    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
  5314                           ;!		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK1[54]), 
  5315                           ;!
  5316                           ;!    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
  5317                           ;!		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK1[54]), 
  5318                           ;!
  5319                           ;!    sp__memcpy	PTR void  size(2) Largest target is 54
  5320                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@data(BANK0[10]), FromMai
                                 nHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
  5321                           ;!		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 
  5322                           ;!
  5323                           ;!    send_msg@data	PTR void  size(2) Largest target is 11
  5324                           ;!		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), timer0
                                 _int_handler@val(BANK0[2]), NULL(NULL[0]), 
  5325                           ;!		 -> i2c_slave_int_handler@error_buf(BANK0[3]), main@msgbuffer(BANK1[11]), main@uc(BA
                                 NK1[5]), 
  5326                           ;!
  5327                           ;!    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
  5328                           ;!		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK1[54]), 
  5329                           ;!
  5330                           ;!    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
  5331                           ;!		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK1[54]), 
  5332                           ;!
  5333                           ;!    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
  5334                           ;!		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK1[54]), 
  5335                           ;!
  5336                           
  5337                           
  5338                           ;!
  5339                           ;!Critical Paths under _main in COMRAM
  5340                           ;!
  5341                           ;!    None.
  5342                           ;!
  5343                           ;!Critical Paths under _InterruptHandlerHigh in COMRAM
  5344                           ;!
  5345                           ;!    _InterruptHandlerHigh->_timer0_int_handler
  5346                           ;!    _i2c_int_handler->_i2c_slave_int_handler
  5347                           ;!    _SleepIfOkay->i2_in_low_int
  5348                           ;!    _FromMainHigh_recvmsg->i2_recv_msg
  5349                           ;!    _ToMainHigh_sendmsg->i2_send_msg
  5350                           ;!    _FromMainLow_recvmsg->i2_recv_msg
  5351                           ;!    i2_in_low_int->i2_in_high_int
  5352                           ;!    i2_send_msg->i2_memcpy
  5353                           ;!    i2_recv_msg->i2_memcpy
  5354                           ;!    _InterruptHandlerLow->_adc_int_handler
  5355                           ;!    _timer1_int_handler->_ToMainLow_sendmsg
  5356                           ;!    _adc_int_handler->_ToMainLow_sendmsg
  5357                           ;!    _uart_recv_int_handler->_ToMainLow_sendmsg
  5358                           ;!    _ToMainLow_sendmsg->i1_send_msg
  5359                           ;!    i1_send_msg->i1_memcpy
  5360                           ;!
  5361                           ;!Critical Paths under _main in BANK0
  5362                           ;!
  5363                           ;!    _init_timer1_lthread->_OpenADC
  5364                           ;!    _init_queues->_init_queue
  5365                           ;!    _block_on_To_msgqueues->_in_main
  5366                           ;!    _in_main->_in_low_int
  5367                           ;!    _in_low_int->_in_high_int
  5368                           ;!    _ToMainHigh_recvmsg->_recv_msg
  5369                           ;!    _ToMainLow_recvmsg->_recv_msg
  5370                           ;!    _FromMainLow_sendmsg->_send_msg
  5371                           ;!    _send_msg->_memcpy
  5372                           ;!    _recv_msg->_memcpy
  5373                           ;!
  5374                           ;!Critical Paths under _InterruptHandlerHigh in BANK0
  5375                           ;!
  5376                           ;!    _i2c_int_handler->_i2c_slave_int_handler
  5377                           ;!    _timer0_int_handler->_FromMainHigh_recvmsg
  5378                           ;!    _FromMainHigh_recvmsg->i2_recv_msg
  5379                           ;!    _i2c_slave_int_handler->_FromMainLow_recvmsg
  5380                           ;!    _ToMainHigh_sendmsg->i2_send_msg
  5381                           ;!    _FromMainLow_recvmsg->i2_recv_msg
  5382                           ;!
  5383                           ;!Critical Paths under _main in BANK1
  5384                           ;!
  5385                           ;!    _main->_ToMainHigh_recvmsg
  5386                           ;!    _main->_ToMainLow_recvmsg
  5387                           ;!    _ToMainHigh_recvmsg->_recv_msg
  5388                           ;!    _ToMainLow_recvmsg->_recv_msg
  5389                           ;!    _FromMainLow_sendmsg->_send_msg
  5390                           ;!
  5391                           ;!Critical Paths under _InterruptHandlerHigh in BANK1
  5392                           ;!
  5393                           ;!    None.
  5394                           ;!
  5395                           ;!Critical Paths under _main in BANK2
  5396                           ;!
  5397                           ;!    None.
  5398                           ;!
  5399                           ;!Critical Paths under _InterruptHandlerHigh in BANK2
  5400                           ;!
  5401                           ;!    None.
  5402                           ;!
  5403                           ;!Critical Paths under _main in BANK3
  5404                           ;!
  5405                           ;!    None.
  5406                           ;!
  5407                           ;!Critical Paths under _InterruptHandlerHigh in BANK3
  5408                           ;!
  5409                           ;!    None.
  5410                           
  5411 ;;
  5412 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  5413 ;;
  5414                           
  5415                           ;!
  5416                           ;!Call Graph Tables:
  5417                           ;!
  5418                           ;! ---------------------------------------------------------------------------------
  5419                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  5420                           ;! ---------------------------------------------------------------------------------
  5421                           ;! (0) _main                                                56    56      0    4704
  5422                           ;!                                             17 BANK1     54    54      0
  5423                           ;!                     _init_uart_recv
  5424                           ;!                           _init_i2c
  5425                           ;!                _init_timer1_lthread
  5426                           ;!                        _init_queues
  5427                           ;!                         _OpenTimer1
  5428                           ;!                  _enable_interrupts
  5429                           ;!                _i2c_configure_slave
  5430                           ;!                          _OpenUSART
  5431                           ;!              _block_on_To_msgqueues
  5432                           ;!                 _ToMainHigh_recvmsg
  5433                           ;!                     _timer0_lthread
  5434                           ;!                  _ToMainLow_recvmsg
  5435                           ;!                     _timer1_lthread
  5436                           ;!                _FromMainLow_sendmsg
  5437                           ;!                       _uart_lthread
  5438                           ;! ---------------------------------------------------------------------------------
  5439                           ;! (1) _enable_interrupts                                    0     0      0       0
  5440                           ;! ---------------------------------------------------------------------------------
  5441                           ;! (1) _init_uart_recv                                       2     0      2      22
  5442                           ;!                                             57 BANK0      2     0      2
  5443                           ;! ---------------------------------------------------------------------------------
  5444                           ;! (1) _init_i2c                                             2     0      2      22
  5445                           ;!                                             57 BANK0      2     0      2
  5446                           ;! ---------------------------------------------------------------------------------
  5447                           ;! (1) _init_timer1_lthread                                  5     3      2     198
  5448                           ;!                                             62 BANK0      5     3      2
  5449                           ;!                            _OpenADC
  5450                           ;!                         _SetChanADC
  5451                           ;! ---------------------------------------------------------------------------------
  5452                           ;! (1) _init_queues                                          1     1      0     134
  5453                           ;!                                             61 BANK0      1     1      0
  5454                           ;!                         _init_queue
  5455                           ;! ---------------------------------------------------------------------------------
  5456                           ;! (1) _OpenTimer1                                           1     0      1      66
  5457                           ;!                                             57 BANK0      1     0      1
  5458                           ;! ---------------------------------------------------------------------------------
  5459                           ;! (1) _i2c_configure_slave                                  2     1      1      22
  5460                           ;!                                             57 BANK0      2     1      1
  5461                           ;! ---------------------------------------------------------------------------------
  5462                           ;! (1) _OpenUSART                                            3     0      3     220
  5463                           ;!                                             57 BANK0      3     0      3
  5464                           ;! ---------------------------------------------------------------------------------
  5465                           ;! (1) _block_on_To_msgqueues                                1     1      0      66
  5466                           ;!                                             63 BANK0      1     1      0
  5467                           ;!                            _in_main
  5468                           ;!                          _check_msg
  5469                           ;!                        _Delay1KTCYx
  5470                           ;! ---------------------------------------------------------------------------------
  5471                           ;! (2) _in_main                                              2     0      2       0
  5472                           ;!                                             61 BANK0      2     0      2
  5473                           ;!                         _in_low_int
  5474                           ;!                        _in_high_int
  5475                           ;! ---------------------------------------------------------------------------------
  5476                           ;! (3) _in_low_int                                           2     0      2       0
  5477                           ;!                                             59 BANK0      2     0      2
  5478                           ;!                        _in_high_int
  5479                           ;! ---------------------------------------------------------------------------------
  5480                           ;! (3) _in_high_int                                          2     0      2       0
  5481                           ;!                                             57 BANK0      2     0      2
  5482                           ;! ---------------------------------------------------------------------------------
  5483                           ;! (1) _ToMainHigh_recvmsg                                   5     0      5     772
  5484                           ;!                                             12 BANK1      5     0      5
  5485                           ;!                           _recv_msg
  5486                           ;! ---------------------------------------------------------------------------------
  5487                           ;! (1) _timer0_lthread                                      10     2      8      23
  5488                           ;!                                             57 BANK0     10     2      8
  5489                           ;! ---------------------------------------------------------------------------------
  5490                           ;! (1) _ToMainLow_recvmsg                                    5     0      5     772
  5491                           ;!                                             12 BANK1      5     0      5
  5492                           ;!                           _recv_msg
  5493                           ;! ---------------------------------------------------------------------------------
  5494                           ;! (1) _timer1_lthread                                      10     2      8      44
  5495                           ;!                                             57 BANK0     10     2      8
  5496                           ;!                         _ConvertADC
  5497                           ;! ---------------------------------------------------------------------------------
  5498                           ;! (1) _FromMainLow_sendmsg                                  4     0      4     741
  5499                           ;!                                             11 BANK1      4     0      4
  5500                           ;!                           _send_msg
  5501                           ;! ---------------------------------------------------------------------------------
  5502                           ;! (1) _uart_lthread                                         8     0      8      88
  5503                           ;!                                             57 BANK0      8     0      8
  5504                           ;! ---------------------------------------------------------------------------------
  5505                           ;! (2) _init_queue                                           4     2      2     134
  5506                           ;!                                             57 BANK0      4     2      2
  5507                           ;! ---------------------------------------------------------------------------------
  5508                           ;! (2) _send_msg                                            12     6      6     648
  5509                           ;!                                             67 BANK0      1     1      0
  5510                           ;!                                              0 BANK1     11     5      6
  5511                           ;!                             _memcpy
  5512                           ;! ---------------------------------------------------------------------------------
  5513                           ;! (2) _recv_msg                                            14     7      7     679
  5514                           ;!                                             67 BANK0      2     2      0
  5515                           ;!                                              0 BANK1     12     5      7
  5516                           ;!                             _memcpy
  5517                           ;! ---------------------------------------------------------------------------------
  5518                           ;! (3) _memcpy                                              10     4      6     174
  5519                           ;!                                             57 BANK0     10     4      6
  5520                           ;! ---------------------------------------------------------------------------------
  5521                           ;! (2) _check_msg                                            3     1      2      44
  5522                           ;!                                             57 BANK0      3     1      2
  5523                           ;! ---------------------------------------------------------------------------------
  5524                           ;! (2) _Delay1KTCYx                                          1     0      1      22
  5525                           ;!                                             57 BANK0      1     0      1
  5526                           ;! ---------------------------------------------------------------------------------
  5527                           ;! (2) _OpenADC                                              5     2      3     154
  5528                           ;!                                             57 BANK0      5     2      3
  5529                           ;! ---------------------------------------------------------------------------------
  5530                           ;! (2) _SetChanADC                                           2     1      1      22
  5531                           ;!                                             57 BANK0      2     1      1
  5532                           ;! ---------------------------------------------------------------------------------
  5533                           ;! (2) _ConvertADC                                           0     0      0       0
  5534                           ;! ---------------------------------------------------------------------------------
  5535                           ;! Estimated maximum stack depth 3
  5536                           ;! ---------------------------------------------------------------------------------
  5537                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  5538                           ;! ---------------------------------------------------------------------------------
  5539                           ;! (5) _InterruptHandlerLow                                 17    17      0    4980
  5540                           ;!                                             34 COMRAM    17    17      0
  5541                           ;!                 _timer1_int_handler
  5542                           ;!                    _adc_int_handler
  5543                           ;!              _uart_recv_int_handler
  5544                           ;! ---------------------------------------------------------------------------------
  5545                           ;! (6) _timer1_int_handler                                   6     6      0    1688
  5546                           ;!                                             26 COMRAM     6     6      0
  5547                           ;!                         _ReadTimer1
  5548                           ;!                        _WriteTimer1
  5549                           ;!                  _ToMainLow_sendmsg
  5550                           ;! ---------------------------------------------------------------------------------
  5551                           ;! (6) _adc_int_handler                                      8     8      0    1707
  5552                           ;!                                             26 COMRAM     8     8      0
  5553                           ;!                            _ReadADC
  5554                           ;!                  _ToMainLow_sendmsg
  5555                           ;! ---------------------------------------------------------------------------------
  5556                           ;! (6) _uart_recv_int_handler                                2     2      0    1585
  5557                           ;!                                             26 COMRAM     2     2      0
  5558                           ;!                          _ReadUSART
  5559                           ;!                  _ToMainLow_sendmsg
  5560                           ;! ---------------------------------------------------------------------------------
  5561                           ;! (7) _ToMainLow_sendmsg                                    4     0      4    1562
  5562                           ;!                                             22 COMRAM     4     0      4
  5563                           ;!                         i1_send_msg
  5564                           ;! ---------------------------------------------------------------------------------
  5565                           ;! (7) _ReadUSART                                            1     1      0      23
  5566                           ;!                                              0 COMRAM     1     1      0
  5567                           ;! ---------------------------------------------------------------------------------
  5568                           ;! (7) _ReadTimer1                                           4     2      2      30
  5569                           ;!                                              0 COMRAM     4     2      2
  5570                           ;! ---------------------------------------------------------------------------------
  5571                           ;! (7) _WriteTimer1                                          4     2      2      45
  5572                           ;!                                              0 COMRAM     4     2      2
  5573                           ;! ---------------------------------------------------------------------------------
  5574                           ;! (7) _ReadADC                                              2     0      2       0
  5575                           ;!                                              0 COMRAM     2     0      2
  5576                           ;! ---------------------------------------------------------------------------------
  5577                           ;! (8) i1_send_msg                                          12     6      6    1496
  5578                           ;!                                             10 COMRAM    12     6      6
  5579                           ;!                           i1_memcpy
  5580                           ;! ---------------------------------------------------------------------------------
  5581                           ;! (9) i1_memcpy                                            10     4      6     395
  5582                           ;!                                              0 COMRAM    10     4      6
  5583                           ;! ---------------------------------------------------------------------------------
  5584                           ;! (10) _InterruptHandlerHigh                               14    14      0    9227
  5585                           ;!                                             43 BANK0     14    14      0
  5586                           ;!                    _i2c_int_handler
  5587                           ;!                 _timer0_int_handler
  5588                           ;!                        _SleepIfOkay
  5589                           ;! ---------------------------------------------------------------------------------
  5590                           ;! (11) _i2c_int_handler                                     0     0      0    4935
  5591                           ;!              _i2c_slave_int_handler
  5592                           ;!             _i2c_master_int_handler
  5593                           ;! ---------------------------------------------------------------------------------
  5594                           ;! (11) _timer0_int_handler                                  8     8      0    4146
  5595                           ;!                                             63 COMRAM     2     2      0
  5596                           ;!                                             17 BANK0      6     6      0
  5597                           ;!                        _WriteTimer0
  5598                           ;!               _FromMainHigh_recvmsg
  5599                           ;!                 _ToMainHigh_sendmsg
  5600                           ;! ---------------------------------------------------------------------------------
  5601                           ;! (11) _SleepIfOkay                                         0     0      0     146
  5602                           ;!                       i2_in_low_int
  5603                           ;!                      i2_in_high_int
  5604                           ;!                        i2_check_msg
  5605                           ;!                   _enter_sleep_mode
  5606                           ;! ---------------------------------------------------------------------------------
  5607                           ;! (12) _FromMainHigh_recvmsg                                5     0      5    2000
  5608                           ;!                                             12 BANK0      5     0      5
  5609                           ;!                         i2_recv_msg
  5610                           ;! ---------------------------------------------------------------------------------
  5611                           ;! (12) _enter_sleep_mode                                    0     0      0       0
  5612                           ;! ---------------------------------------------------------------------------------
  5613                           ;! (12) _i2c_slave_int_handler                              28    28      0    4935
  5614                           ;!                                             63 COMRAM     2     2      0
  5615                           ;!                                             17 BANK0     26    26      0
  5616                           ;!                       _handle_start
  5617                           ;!                _FromMainLow_recvmsg
  5618                           ;!              _start_i2c_slave_reply
  5619                           ;!                 _ToMainHigh_sendmsg
  5620                           ;! ---------------------------------------------------------------------------------
  5621                           ;! (12) _ToMainHigh_sendmsg                                  4     0      4    1912
  5622                           ;!                                             11 BANK0      4     0      4
  5623                           ;!                         i2_send_msg
  5624                           ;! ---------------------------------------------------------------------------------
  5625                           ;! (13) _FromMainLow_recvmsg                                 5     0      5    2000
  5626                           ;!                                             12 BANK0      5     0      5
  5627                           ;!                         i2_recv_msg
  5628                           ;! ---------------------------------------------------------------------------------
  5629                           ;! (13) _start_i2c_slave_reply                               5     2      3      66
  5630                           ;!                                             51 COMRAM     5     2      3
  5631                           ;! ---------------------------------------------------------------------------------
  5632                           ;! (13) _handle_start                                        1     0      1      22
  5633                           ;!                                             51 COMRAM     1     0      1
  5634                           ;! ---------------------------------------------------------------------------------
  5635                           ;! (12) _i2c_master_int_handler                              1     1      0       0
  5636                           ;!                                             51 COMRAM     1     1      0
  5637                           ;! ---------------------------------------------------------------------------------
  5638                           ;! (12) _WriteTimer0                                         4     2      2      68
  5639                           ;!                                             51 COMRAM     4     2      2
  5640                           ;! ---------------------------------------------------------------------------------
  5641                           ;! (12) i2_in_low_int                                        2     0      2       0
  5642                           ;!                                             53 COMRAM     2     0      2
  5643                           ;!                      i2_in_high_int
  5644                           ;! ---------------------------------------------------------------------------------
  5645                           ;! (12) i2_in_high_int                                       2     0      2       0
  5646                           ;!                                             51 COMRAM     2     0      2
  5647                           ;! ---------------------------------------------------------------------------------
  5648                           ;! (13) i2_send_msg                                         12     6      6    1819
  5649                           ;!                                             61 COMRAM     1     1      0
  5650                           ;!                                              0 BANK0     11     5      6
  5651                           ;!                           i2_memcpy
  5652                           ;! ---------------------------------------------------------------------------------
  5653                           ;! (13) i2_recv_msg                                         14     7      7    1907
  5654                           ;!                                             61 COMRAM     2     2      0
  5655                           ;!                                              0 BANK0     12     5      7
  5656                           ;!                           i2_memcpy
  5657                           ;! ---------------------------------------------------------------------------------
  5658                           ;! (12) i2_check_msg                                         3     1      2     146
  5659                           ;!                                             51 COMRAM     3     1      2
  5660                           ;! ---------------------------------------------------------------------------------
  5661                           ;! (14) i2_memcpy                                           10     4      6     484
  5662                           ;!                                             51 COMRAM    10     4      6
  5663                           ;! ---------------------------------------------------------------------------------
  5664                           ;! Estimated maximum stack depth 14
  5665                           ;! ---------------------------------------------------------------------------------
  5666                           ;!
  5667                           ;! Call Graph Graphs:
  5668                           ;!
  5669                           ;! _main (ROOT)
  5670                           ;!   _init_uart_recv
  5671                           ;!   _init_i2c
  5672                           ;!   _init_timer1_lthread
  5673                           ;!     _OpenADC
  5674                           ;!     _SetChanADC
  5675                           ;!   _init_queues
  5676                           ;!     _init_queue
  5677                           ;!   _OpenTimer1
  5678                           ;!   _enable_interrupts
  5679                           ;!   _i2c_configure_slave
  5680                           ;!   _OpenUSART
  5681                           ;!   _block_on_To_msgqueues
  5682                           ;!     _in_main
  5683                           ;!       _in_low_int
  5684                           ;!         _in_high_int
  5685                           ;!       _in_high_int
  5686                           ;!     _check_msg
  5687                           ;!     _Delay1KTCYx
  5688                           ;!   _ToMainHigh_recvmsg
  5689                           ;!     _recv_msg
  5690                           ;!       _memcpy
  5691                           ;!   _timer0_lthread
  5692                           ;!   _ToMainLow_recvmsg
  5693                           ;!     _recv_msg
  5694                           ;!       _memcpy
  5695                           ;!   _timer1_lthread
  5696                           ;!     _ConvertADC
  5697                           ;!   _FromMainLow_sendmsg
  5698                           ;!     _send_msg
  5699                           ;!       _memcpy
  5700                           ;!   _uart_lthread
  5701                           ;!
  5702                           ;! _InterruptHandlerLow (ROOT)
  5703                           ;!   _timer1_int_handler
  5704                           ;!     _ReadTimer1
  5705                           ;!     _WriteTimer1
  5706                           ;!     _ToMainLow_sendmsg
  5707                           ;!       i1_send_msg
  5708                           ;!         i1_memcpy
  5709                           ;!   _adc_int_handler
  5710                           ;!     _ReadADC
  5711                           ;!     _ToMainLow_sendmsg
  5712                           ;!       i1_send_msg
  5713                           ;!         i1_memcpy
  5714                           ;!   _uart_recv_int_handler
  5715                           ;!     _ReadUSART
  5716                           ;!     _ToMainLow_sendmsg
  5717                           ;!       i1_send_msg
  5718                           ;!         i1_memcpy
  5719                           ;!
  5720                           
  5721                           ;! Address spaces:
  5722                           
  5723                           ;!Name               Size   Autos  Total    Cost      Usage
  5724                           ;!BIGRAM             3FF      0       0      12        0.0%
  5725                           ;!BITBANK3           100      0       0       9        0.0%
  5726                           ;!BANK3              100      0       0      10        0.0%
  5727                           ;!BITBANK2           100      0       0       7        0.0%
  5728                           ;!BANK2              100      0      36       8       21.1%
  5729                           ;!BITBANK1           100      0       0       5        0.0%
  5730                           ;!BANK1              100     47      E9       6       91.0%
  5731                           ;!BITBANK0            80      0       0       3        0.0%
  5732                           ;!BANK0               80     45      47       4       55.5%
  5733                           ;!BITCOMRAM           7F      0       0       0        0.0%
  5734                           ;!COMRAM              7F     41      4B       1       59.1%
  5735                           ;!BITSFR               0      0       0      40        0.0%
  5736                           ;!SFR                  0      0       0      40        0.0%
  5737                           ;!STACK                0      0      24       2        0.0%
  5738                           ;!NULL                 0      0       0       0        0.0%
  5739                           ;!ABS                  0      0     1B1      11        0.0%
  5740                           ;!DATA                 0      0     1D5      13        0.0%
  5741                           ;!CODE                 0      0       0       0        0.0%
  5742                           
  5743                           	global	_main
  5744                           
  5745 ;; *************** function _main *****************
  5746 ;; Defined at:
  5747 ;;		line 79 in file "../src/main.c"
  5748 ;; Parameters:    Size  Location     Type
  5749 ;;		None
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;  ic             28   43[BANK1 ] struct __i2c_comm
  5752 ;;  msgbuffer      11   18[BANK1 ] unsigned char [11]
  5753 ;;  uc              5   36[BANK1 ] struct __uart_comm
  5754 ;;  t1thread_dat    2   34[BANK1 ] struct __timer1_thread_s
  5755 ;;  t0thread_dat    2   31[BANK1 ] struct __timer0_thread_s
  5756 ;;  uthread_data    2   29[BANK1 ] struct __uart_thread_str
  5757 ;;  msgtype         1   42[BANK1 ] unsigned char 
  5758 ;;  length          1   41[BANK1 ] char 
  5759 ;;  last_reg_rec    1   33[BANK1 ] unsigned char 
  5760 ;;  i               1    0        unsigned char 
  5761 ;;  c               1    0        unsigned char 
  5762 ;; Return value:  Size  Location     Type
  5763 ;;		None               void
  5764 ;; Registers used:
  5765 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, structret, tblptrl, tblptrh, tblptr
       u, prodl, prodh, bsr, cstack
  5766 ;; Tracked objects:
  5767 ;;		On entry : 0/0
  5768 ;;		On exit  : 0/0
  5769 ;;		Unchanged: 0/0
  5770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5771 ;;      Params:         0       0       0       0       0
  5772 ;;      Locals:         0       0      53       0       0
  5773 ;;      Temps:          0       0       1       0       0
  5774 ;;      Totals:         0       0      54       0       0
  5775 ;;Total ram usage:       54 bytes
  5776 ;; Hardware stack levels required when called:   15
  5777 ;; This function calls:
  5778 ;;		_init_uart_recv
  5779 ;;		_init_i2c
  5780 ;;		_init_timer1_lthread
  5781 ;;		_init_queues
  5782 ;;		_OpenTimer1
  5783 ;;		_enable_interrupts
  5784 ;;		_i2c_configure_slave
  5785 ;;		_OpenUSART
  5786 ;;		_block_on_To_msgqueues
  5787 ;;		_ToMainHigh_recvmsg
  5788 ;;		_timer0_lthread
  5789 ;;		_ToMainLow_recvmsg
  5790 ;;		_timer1_lthread
  5791 ;;		_FromMainLow_sendmsg
  5792 ;;		_uart_lthread
  5793 ;; This function is called by:
  5794 ;;		Startup code after reset
  5795 ;; This function uses a non-reentrant model
  5796 ;;
  5797                           psect	text0,class=CODE,space=0,reloc=2
  5798                           global __ptext0
  5799  00070A                     __ptext0:
  5800                           psect	text0
  5801                           	file	"../src/main.c"
  5802                           	line	79
  5803                           	global	__size_of_main
  5804  0000                     	__size_of_main	equ	__end_of_main-_main
  5805                           	
  5806  00070A                     _main:; BSR set to: 0
  5807                           
  5808                           	opt	stack 16
  5809                           	line	99
  5810                           	
  5811  00070A                     l19071:
  5812                           ;main.c: 80: char c;
  5813                           ;main.c: 81: signed char length;
  5814                           ;main.c: 82: unsigned char msgtype;
  5815                           ;main.c: 83: unsigned char last_reg_recvd;
  5816                           ;main.c: 84: uart_comm uc;
  5817                           ;main.c: 85: i2c_comm ic;
  5818                           ;main.c: 86: unsigned char msgbuffer[10 + 1];
  5819                           ;main.c: 87: unsigned char i;
  5820                           ;main.c: 88: uart_thread_struct uthread_data;
  5821                           ;main.c: 91: timer1_thread_struct t1thread_data;
  5822                           ;main.c: 92: timer0_thread_struct t0thread_data;
  5823                           ;main.c: 99: OSCCON = 0x82;
  5824  00070A  0E82               	movlw	low(082h)
  5825  00070C  6ED3               	movwf	((c:4051)),c	;volatile
  5826                           	line	100
  5827                           	
  5828  00070E                     l19073:
  5829                           ;main.c: 100: OSCTUNEbits.PLLEN = 0;
  5830  00070E  9C9B               	bcf	((c:3995)),c,6	;volatile
  5831                           	line	105
  5832                           	
  5833  000710                     l19075:
  5834                           ;main.c: 105: init_uart_recv(&uc);
  5835  000710  0101               	movlb	1	; () banked
  5836  000712  0E01               	movlw	high(main@uc)
  5837  000714  0100               	movlb	0	; () banked
  5838  000716  0100               	movlb	0	; () banked
  5839  000718  6FBA               	movwf	((?_init_uart_recv+1))&0ffh
  5840  00071A  0101               	movlb	1	; () banked
  5841  00071C  0EC6               	movlw	low(main@uc)
  5842  00071E  0100               	movlb	0	; () banked
  5843  000720  6FB9               	movwf	((?_init_uart_recv))&0ffh
  5844  000722  0100               	movlb	0	; () banked
  5845  000724  EC9F  F00E         	call	_init_uart_recv	;wreg free
  5846                           	line	109
  5847                           	
  5848  000728                     l19077:
  5849                           ;main.c: 109: init_i2c(&ic);
  5850  000728  0101               	movlb	1	; () banked
  5851  00072A  0E01               	movlw	high(main@ic)
  5852  00072C  0100               	movlb	0	; () banked
  5853  00072E  0100               	movlb	0	; () banked
  5854  000730  6FBA               	movwf	((?_init_i2c+1))&0ffh
  5855  000732  0101               	movlb	1	; () banked
  5856  000734  0ECD               	movlw	low(main@ic)
  5857  000736  0100               	movlb	0	; () banked
  5858  000738  6FB9               	movwf	((?_init_i2c))&0ffh
  5859  00073A  0100               	movlb	0	; () banked
  5860  00073C  EC63  F00C         	call	_init_i2c	;wreg free
  5861                           	line	112
  5862                           	
  5863  000740                     l19079:
  5864                           ;main.c: 112: init_timer1_lthread(&t1thread_data);
  5865  000740  0101               	movlb	1	; () banked
  5866  000742  0E01               	movlw	high(main@t1thread_data)
  5867  000744  0100               	movlb	0	; () banked
  5868  000746  0100               	movlb	0	; () banked
  5869  000748  6FBF               	movwf	((?_init_timer1_lthread+1))&0ffh
  5870  00074A  0101               	movlb	1	; () banked
  5871  00074C  0EC4               	movlw	low(main@t1thread_data)
  5872  00074E  0100               	movlb	0	; () banked
  5873  000750  6FBE               	movwf	((?_init_timer1_lthread))&0ffh
  5874  000752  0100               	movlb	0	; () banked
  5875  000754  EC84  F00B         	call	_init_timer1_lthread	;wreg free
  5876                           	line	115
  5877                           	
  5878  000758                     l19081:
  5879                           ;main.c: 115: init_queues();
  5880  000758  EC4D  F00B         	call	_init_queues	;wreg free
  5881                           	line	118
  5882                           	
  5883  00075C                     l19083:
  5884                           ;main.c: 118: TRISB = 0x0;
  5885  00075C  0E00               	movlw	low(0)
  5886  00075E  6E93               	movwf	((c:3987)),c	;volatile
  5887                           	line	119
  5888                           	
  5889  000760                     l19085:
  5890                           ;main.c: 119: LATB = 0x0;
  5891  000760  0E00               	movlw	low(0)
  5892  000762  6E8A               	movwf	((c:3978)),c	;volatile
  5893                           	line	123
  5894                           	
  5895  000764                     l19087:
  5896                           ;main.c: 123: PORTA = 0x0;
  5897  000764  0E00               	movlw	low(0)
  5898  000766  6E80               	movwf	((c:3968)),c	;volatile
  5899                           	line	124
  5900                           	
  5901  000768                     l19089:
  5902                           ;main.c: 124: LATA = 0x0;
  5903  000768  0E00               	movlw	low(0)
  5904  00076A  6E89               	movwf	((c:3977)),c	;volatile
  5905                           	line	125
  5906                           	
  5907  00076C                     l19091:
  5908                           ;main.c: 125: ADCON1 = 0x0F;
  5909  00076C  0E0F               	movlw	low(0Fh)
  5910  00076E  6EC1               	movwf	((c:4033)),c	;volatile
  5911                           	line	127
  5912                           	
  5913  000770                     l19093:
  5914                           ;main.c: 127: TRISA = 0x0F;
  5915  000770  0E0F               	movlw	low(0Fh)
  5916  000772  6E92               	movwf	((c:3986)),c	;volatile
  5917                           	line	135
  5918                           	
  5919  000774                     l19095:
  5920                           ;main.c: 135: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
                                 & 0b11111111);
  5921  000774  0101               	movlb	1	; () banked
  5922  000776  6FB3               	movwf	(??_main+0+0)&0ffh
  5923  000778  0EF5               	movlw	low(0F5h)
  5924  00077A  0100               	movlb	0	; () banked
  5925  00077C  0100               	movlb	0	; () banked
  5926  00077E  6FB9               	movwf	((?_OpenTimer1))&0ffh
  5927  000780  0101               	movlb	1	; () banked
  5928  000782  51B3               	movf	(??_main+0+0)&0ffh,w
  5929  000784  0100               	movlb	0	; () banked
  5930  000786  EC12  F00D         	call	_OpenTimer1	;wreg free
  5931                           	line	144
  5932                           	
  5933  00078A                     l19097:
  5934                           ;main.c: 144: enable_interrupts();
  5935  00078A  ECED  F00E         	call	_enable_interrupts	;wreg free
  5936                           	line	158
  5937                           	
  5938  00078E                     l19099:
  5939                           ;main.c: 158: IPR1bits.TMR1IP = 0;
  5940  00078E  909F               	bcf	((c:3999)),c,0	;volatile
  5941                           	line	160
  5942                           	
  5943  000790                     l19101:
  5944                           ;main.c: 160: IPR1bits.ADIP = 0;
  5945  000790  9C9F               	bcf	((c:3999)),c,6	;volatile
  5946                           	line	162
  5947                           	
  5948  000792                     l19103:
  5949                           ;main.c: 162: IPR1bits.RCIP = 0;
  5950  000792  9A9F               	bcf	((c:3999)),c,5	;volatile
  5951                           	line	164
  5952                           	
  5953  000794                     l19105:
  5954                           ;main.c: 164: IPR1bits.SSPIP = 1;
  5955  000794  869F               	bsf	((c:3999)),c,3	;volatile
  5956                           	line	176
  5957                           	
  5958  000796                     l19107:
  5959                           ;main.c: 176: i2c_configure_slave(0x9C);
  5960  000796  0101               	movlb	1	; () banked
  5961  000798  6FB3               	movwf	(??_main+0+0)&0ffh
  5962  00079A  0E9C               	movlw	low(09Ch)
  5963  00079C  0100               	movlb	0	; () banked
  5964  00079E  0100               	movlb	0	; () banked
  5965  0007A0  6FB9               	movwf	((?_i2c_configure_slave))&0ffh
  5966  0007A2  0101               	movlb	1	; () banked
  5967  0007A4  51B3               	movf	(??_main+0+0)&0ffh,w
  5968  0007A6  0100               	movlb	0	; () banked
  5969  0007A8  EC88  F00D         	call	_i2c_configure_slave	;wreg free
  5970                           	line	199
  5971                           	
  5972  0007AC                     l19109:
  5973                           ;main.c: 199: PIE1bits.SSPIE = 1;
  5974  0007AC  869D               	bsf	((c:3997)),c,3	;volatile
  5975                           	line	205
  5976                           	
  5977  0007AE                     l19111:
  5978                           ;main.c: 204: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  5979                           ;main.c: 205: 0b11111111 & 0b11101111, 0x19);
  5980  0007AE  0101               	movlb	1	; () banked
  5981  0007B0  6FB3               	movwf	(??_main+0+0)&0ffh
  5982  0007B2  0E6C               	movlw	low(06Ch)
  5983  0007B4  0100               	movlb	0	; () banked
  5984  0007B6  0100               	movlb	0	; () banked
  5985  0007B8  6FB9               	movwf	((?_OpenUSART))&0ffh
  5986  0007BA  0101               	movlb	1	; () banked
  5987  0007BC  51B3               	movf	(??_main+0+0)&0ffh,w
  5988  0007BE  0E00               	movlw	high(019h)
  5989  0007C0  0100               	movlb	0	; () banked
  5990  0007C2  0100               	movlb	0	; () banked
  5991  0007C4  6FBB               	movwf	(1+(?_OpenUSART+01h))&0ffh
  5992  0007C6  0E19               	movlw	low(019h)
  5993  0007C8  0100               	movlb	0	; () banked
  5994  0007CA  6FBA               	movwf	(0+(?_OpenUSART+01h))&0ffh
  5995  0007CC  0100               	movlb	0	; () banked
  5996  0007CE  ECEA  F008         	call	_OpenUSART	;wreg free
  5997  0007D2  D000               	goto	l19113
  5998                           	line	226
  5999                           ;main.c: 226: while (1) {
  6000                           	
  6001  0007D4                     l3645:
  6002                           	line	230
  6003                           	
  6004  0007D4                     l19113:
  6005                           ;main.c: 230: block_on_To_msgqueues();
  6006  0007D4  ECC5  F007         	call	_block_on_To_msgqueues	;wreg free
  6007                           	line	237
  6008                           	
  6009  0007D8                     l19115:
  6010                           ;main.c: 237: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  6011  0007D8  0101               	movlb	1	; () banked
  6012  0007DA  6FB3               	movwf	(??_main+0+0)&0ffh
  6013  0007DC  0E0A               	movlw	low(0Ah)
  6014  0007DE  0101               	movlb	1	; () banked
  6015  0007E0  0101               	movlb	1	; () banked
  6016  0007E2  6FAE               	movwf	((?_ToMainHigh_recvmsg))&0ffh
  6017  0007E4  0101               	movlb	1	; () banked
  6018  0007E6  51B3               	movf	(??_main+0+0)&0ffh,w
  6019  0007E8  0101               	movlb	1	; () banked
  6020  0007EA  0E01               	movlw	high(main@msgtype)
  6021  0007EC  0101               	movlb	1	; () banked
  6022  0007EE  0101               	movlb	1	; () banked
  6023  0007F0  6FB0               	movwf	(1+(?_ToMainHigh_recvmsg+01h))&0ffh
  6024  0007F2  0101               	movlb	1	; () banked
  6025  0007F4  0ECC               	movlw	low(main@msgtype)
  6026  0007F6  0101               	movlb	1	; () banked
  6027  0007F8  6FAF               	movwf	(0+(?_ToMainHigh_recvmsg+01h))&0ffh
  6028  0007FA  0101               	movlb	1	; () banked
  6029  0007FC  0E01               	movlw	high(main@msgbuffer)
  6030  0007FE  0101               	movlb	1	; () banked
  6031  000800  0101               	movlb	1	; () banked
  6032  000802  6FB2               	movwf	(1+(?_ToMainHigh_recvmsg+03h))&0ffh
  6033  000804  0101               	movlb	1	; () banked
  6034  000806  0EB4               	movlw	low(main@msgbuffer)
  6035  000808  0101               	movlb	1	; () banked
  6036  00080A  6FB1               	movwf	(0+(?_ToMainHigh_recvmsg+03h))&0ffh
  6037  00080C  0101               	movlb	1	; () banked
  6038  00080E  ECBA  F00D         	call	_ToMainHigh_recvmsg	;wreg free
  6039  000812  0101               	movlb	1	; () banked
  6040  000814  0101               	movlb	1	; () banked
  6041  000816  6FCB               	movwf	((main@length))&0ffh
  6042                           	line	238
  6043                           	
  6044  000818                     l19117:; BSR set to: 1
  6045                           
  6046                           ;main.c: 238: if (length < 0) {
  6047  000818  0101               	movlb	1	; () banked
  6048  00081A  0101               	movlb	1	; () banked
  6049  00081C  AFCB               	btfss	((main@length))&0ffh,7
  6050  00081E  D001               	goto	u1991
  6051  000820  D001               	goto	u1990
  6052  000822                     u1991:
  6053  000822  D03C               	goto	l19129
  6054  000824                     u1990:
  6055  000824  D04C               	goto	l19131
  6056                           	line	240
  6057                           	
  6058  000826                     l19119:; BSR set to: 1
  6059                           
  6060  000826  D04B               	goto	l19131
  6061                           	line	242
  6062                           	
  6063  000828                     l3647:; BSR set to: 1
  6064                           
  6065                           	line	243
  6066                           ;main.c: 242: }
  6067                           ;main.c: 243: } else {
  6068  000828  D04A               	goto	l19131
  6069                           	
  6070  00082A                     l3646:; BSR set to: 1
  6071                           
  6072                           	line	244
  6073                           ;main.c: 244: switch (msgtype) {
  6074  00082A  D038               	goto	l19129
  6075                           	line	248
  6076                           ;main.c: 248: case 10:
  6077                           	
  6078  00082C                     l3650:; BSR set to: 1
  6079                           
  6080                           	line	250
  6081                           	
  6082  00082C                     l19121:; BSR set to: 1
  6083                           
  6084                           ;main.c: 249: {
  6085                           ;main.c: 250: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  6086  00082C  0101               	movlb	1	; () banked
  6087  00082E  0E01               	movlw	high(main@t0thread_data)
  6088  000830  0100               	movlb	0	; () banked
  6089  000832  0100               	movlb	0	; () banked
  6090  000834  6FBA               	movwf	((?_timer0_lthread+1))&0ffh
  6091  000836  0101               	movlb	1	; () banked
  6092  000838  0EC1               	movlw	low(main@t0thread_data)
  6093  00083A  0100               	movlb	0	; () banked
  6094  00083C  6FB9               	movwf	((?_timer0_lthread))&0ffh
  6095  00083E  0101               	movlb	1	; () banked
  6096  000840  0100               	movlb	0	; () banked
  6097  000842  C1CC  F0BB         	movff	(main@msgtype),0+(?_timer0_lthread+02h)
  6098  000846  0100               	movlb	0	; () banked
  6099  000848  0100               	movlb	0	; () banked
  6100  00084A  6BBC               	clrf	(1+(?_timer0_lthread+02h))&0ffh
  6101  00084C  0101               	movlb	1	; () banked
  6102  00084E  0101               	movlb	1	; () banked
  6103  000850  51CB               	movf	((main@length))&0ffh,w
  6104  000852  0100               	movlb	0	; () banked
  6105  000854  0100               	movlb	0	; () banked
  6106  000856  6FBD               	movwf	(0+(?_timer0_lthread+04h))&0ffh
  6107  000858  0100               	movlb	0	; () banked
  6108  00085A  6BBE               	clrf	(1+(?_timer0_lthread+04h))&0ffh
  6109  00085C  0100               	movlb	0	; () banked
  6110  00085E  BFBD               	btfsc	(0+(?_timer0_lthread+04h))&0ffh,7
  6111  000860  07BE               	decf	(1+(?_timer0_lthread+04h))&0ffh
  6112  000862  0101               	movlb	1	; () banked
  6113  000864  0E01               	movlw	high(main@msgbuffer)
  6114  000866  0100               	movlb	0	; () banked
  6115  000868  0100               	movlb	0	; () banked
  6116  00086A  6FC0               	movwf	(1+(?_timer0_lthread+06h))&0ffh
  6117  00086C  0101               	movlb	1	; () banked
  6118  00086E  0EB4               	movlw	low(main@msgbuffer)
  6119  000870  0100               	movlb	0	; () banked
  6120  000872  6FBF               	movwf	(0+(?_timer0_lthread+06h))&0ffh
  6121  000874  0100               	movlb	0	; () banked
  6122  000876  ECE8  F00E         	call	_timer0_lthread	;wreg free
  6123                           	line	251
  6124                           ;main.c: 251: break;
  6125  00087A  D021               	goto	l19131
  6126                           	line	253
  6127                           ;main.c: 252: };
  6128                           ;main.c: 253: case 40:
  6129                           	
  6130  00087C                     l3652:
  6131                           	line	255
  6132                           	
  6133  00087C                     l3653:
  6134                           	line	259
  6135                           ;main.c: 255: case 41:
  6136                           ;main.c: 256: {
  6137                           ;main.c: 259: last_reg_recvd = msgbuffer[0];
  6138  00087C  C1B4  F1C3         	movff	(main@msgbuffer),(main@last_reg_recvd)
  6139                           	line	260
  6140                           ;main.c: 260: break;
  6141  000880  D01E               	goto	l19131
  6142                           	line	262
  6143                           ;main.c: 261: };
  6144                           ;main.c: 262: case 42:
  6145                           	
  6146  000882                     l3654:
  6147                           	line	271
  6148                           ;main.c: 263: {
  6149                           ;main.c: 271: switch (last_reg_recvd) {
  6150  000882  D002               	goto	l19125
  6151                           	line	272
  6152                           ;main.c: 272: case 0xaa:
  6153                           	
  6154  000884                     l3656:
  6155                           	line	277
  6156                           ;main.c: 273: {
  6157                           ;main.c: 277: break;
  6158  000884  D01C               	goto	l19131
  6159                           	line	291
  6160                           	
  6161  000886                     l19123:
  6162                           ;main.c: 278: }
  6163                           ;main.c: 291: };
  6164  000886  D01B               	goto	l19131
  6165                           	line	271
  6166                           	
  6167  000888                     l3655:
  6168                           	
  6169  000888                     l19125:
  6170  000888  0101               	movlb	1	; () banked
  6171  00088A  0101               	movlb	1	; () banked
  6172  00088C  51C3               	movf	((main@last_reg_recvd))&0ffh,w
  6173                           	; Switch size 1, requested type "space"
  6174                           ; Number of cases is 1, Range of values is 170 to 170
  6175                           ; switch strategies available:
  6176                           ; Name         Instructions Cycles
  6177                           ; simple_byte            4     3 (average)
  6178                           ;	Chosen strategy is simple_byte
  6179                           
  6180  00088E  0AAA               	xorlw	170^0	; case 170
  6181  000890  B4D8               	skipnz
  6182  000892  D015               	goto	l19131
  6183  000894  D014               	goto	l19131
  6184                           
  6185                           	line	291
  6186                           	
  6187  000896                     l3657:; BSR set to: 1
  6188                           
  6189                           	line	293
  6190                           ;main.c: 293: break;
  6191  000896  D013               	goto	l19131
  6192                           	line	295
  6193                           ;main.c: 294: };
  6194                           ;main.c: 295: default:
  6195                           	
  6196  000898                     l3658:; BSR set to: 1
  6197                           
  6198                           	line	298
  6199                           ;main.c: 296: {
  6200                           ;main.c: 298: break;
  6201  000898  D012               	goto	l19131
  6202                           	line	300
  6203                           	
  6204  00089A                     l19127:; BSR set to: 1
  6205                           
  6206                           ;main.c: 299: };
  6207                           ;main.c: 300: };
  6208  00089A  D011               	goto	l19131
  6209                           	line	244
  6210                           	
  6211  00089C                     l3649:; BSR set to: 1
  6212                           
  6213                           	
  6214  00089C                     l19129:; BSR set to: 1
  6215                           
  6216  00089C  0101               	movlb	1	; () banked
  6217  00089E  0101               	movlb	1	; () banked
  6218  0008A0  51CC               	movf	((main@msgtype))&0ffh,w
  6219                           	; Switch size 1, requested type "space"
  6220                           ; Number of cases is 4, Range of values is 10 to 42
  6221                           ; switch strategies available:
  6222                           ; Name         Instructions Cycles
  6223                           ; simple_byte           13     7 (average)
  6224                           ;	Chosen strategy is simple_byte
  6225                           
  6226  0008A2  0A0A               	xorlw	10^0	; case 10
  6227  0008A4  B4D8               	skipnz
  6228  0008A6  D7C2               	goto	l19121
  6229  0008A8  0A22               	xorlw	40^10	; case 40
  6230  0008AA  B4D8               	skipnz
  6231  0008AC  D7E7               	goto	l3653
  6232  0008AE  0A01               	xorlw	41^40	; case 41
  6233  0008B0  B4D8               	skipnz
  6234  0008B2  D7E4               	goto	l3653
  6235  0008B4  0A03               	xorlw	42^41	; case 42
  6236  0008B6  B4D8               	skipnz
  6237  0008B8  D7E7               	goto	l19125
  6238  0008BA  D001               	goto	l19131
  6239                           
  6240                           	line	300
  6241                           	
  6242  0008BC                     l3651:; BSR set to: 1
  6243                           
  6244  0008BC  D000               	goto	l19131
  6245                           	line	301
  6246                           	
  6247  0008BE                     l3648:; BSR set to: 1
  6248                           
  6249                           	line	304
  6250                           	
  6251  0008BE                     l19131:
  6252                           ;main.c: 301: }
  6253                           ;main.c: 304: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  6254  0008BE  0101               	movlb	1	; () banked
  6255  0008C0  6FB3               	movwf	(??_main+0+0)&0ffh
  6256  0008C2  0E0A               	movlw	low(0Ah)
  6257  0008C4  0101               	movlb	1	; () banked
  6258  0008C6  0101               	movlb	1	; () banked
  6259  0008C8  6FAE               	movwf	((?_ToMainLow_recvmsg))&0ffh
  6260  0008CA  0101               	movlb	1	; () banked
  6261  0008CC  51B3               	movf	(??_main+0+0)&0ffh,w
  6262  0008CE  0101               	movlb	1	; () banked
  6263  0008D0  0E01               	movlw	high(main@msgtype)
  6264  0008D2  0101               	movlb	1	; () banked
  6265  0008D4  0101               	movlb	1	; () banked
  6266  0008D6  6FB0               	movwf	(1+(?_ToMainLow_recvmsg+01h))&0ffh
  6267  0008D8  0101               	movlb	1	; () banked
  6268  0008DA  0ECC               	movlw	low(main@msgtype)
  6269  0008DC  0101               	movlb	1	; () banked
  6270  0008DE  6FAF               	movwf	(0+(?_ToMainLow_recvmsg+01h))&0ffh
  6271  0008E0  0101               	movlb	1	; () banked
  6272  0008E2  0E01               	movlw	high(main@msgbuffer)
  6273  0008E4  0101               	movlb	1	; () banked
  6274  0008E6  0101               	movlb	1	; () banked
  6275  0008E8  6FB2               	movwf	(1+(?_ToMainLow_recvmsg+03h))&0ffh
  6276  0008EA  0101               	movlb	1	; () banked
  6277  0008EC  0EB4               	movlw	low(main@msgbuffer)
  6278  0008EE  0101               	movlb	1	; () banked
  6279  0008F0  6FB1               	movwf	(0+(?_ToMainLow_recvmsg+03h))&0ffh
  6280  0008F2  0101               	movlb	1	; () banked
  6281  0008F4  ECD2  F00D         	call	_ToMainLow_recvmsg	;wreg free
  6282  0008F8  0101               	movlb	1	; () banked
  6283  0008FA  0101               	movlb	1	; () banked
  6284  0008FC  6FCB               	movwf	((main@length))&0ffh
  6285                           	line	305
  6286                           	
  6287  0008FE                     l19133:; BSR set to: 1
  6288                           
  6289                           ;main.c: 305: if (length < 0) {
  6290  0008FE  0101               	movlb	1	; () banked
  6291  000900  0101               	movlb	1	; () banked
  6292  000902  AFCB               	btfss	((main@length))&0ffh,7
  6293  000904  D001               	goto	u2001
  6294  000906  D001               	goto	u2000
  6295  000908                     u2001:
  6296  000908  D068               	goto	l19145
  6297  00090A                     u2000:
  6298  00090A  D764               	goto	l19113
  6299                           	line	307
  6300                           	
  6301  00090C                     l19135:; BSR set to: 1
  6302                           
  6303  00090C  D763               	goto	l19113
  6304                           	line	309
  6305                           	
  6306  00090E                     l3660:; BSR set to: 1
  6307                           
  6308                           	line	310
  6309                           ;main.c: 309: }
  6310                           ;main.c: 310: } else {
  6311  00090E  D762               	goto	l19113
  6312                           	
  6313  000910                     l3659:; BSR set to: 1
  6314                           
  6315                           	line	311
  6316                           ;main.c: 311: switch (msgtype) {
  6317  000910  D064               	goto	l19145
  6318                           	line	312
  6319                           ;main.c: 312: case 11:
  6320                           	
  6321  000912                     l3663:; BSR set to: 1
  6322                           
  6323                           	line	314
  6324                           	
  6325  000912                     l19137:; BSR set to: 1
  6326                           
  6327                           ;main.c: 313: {
  6328                           ;main.c: 314: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  6329  000912  0101               	movlb	1	; () banked
  6330  000914  0E01               	movlw	high(main@t1thread_data)
  6331  000916  0100               	movlb	0	; () banked
  6332  000918  0100               	movlb	0	; () banked
  6333  00091A  6FBA               	movwf	((?_timer1_lthread+1))&0ffh
  6334  00091C  0101               	movlb	1	; () banked
  6335  00091E  0EC4               	movlw	low(main@t1thread_data)
  6336  000920  0100               	movlb	0	; () banked
  6337  000922  6FB9               	movwf	((?_timer1_lthread))&0ffh
  6338  000924  0101               	movlb	1	; () banked
  6339  000926  0100               	movlb	0	; () banked
  6340  000928  C1CC  F0BB         	movff	(main@msgtype),0+(?_timer1_lthread+02h)
  6341  00092C  0100               	movlb	0	; () banked
  6342  00092E  0100               	movlb	0	; () banked
  6343  000930  6BBC               	clrf	(1+(?_timer1_lthread+02h))&0ffh
  6344  000932  0101               	movlb	1	; () banked
  6345  000934  0101               	movlb	1	; () banked
  6346  000936  51CB               	movf	((main@length))&0ffh,w
  6347  000938  0100               	movlb	0	; () banked
  6348  00093A  0100               	movlb	0	; () banked
  6349  00093C  6FBD               	movwf	(0+(?_timer1_lthread+04h))&0ffh
  6350  00093E  0100               	movlb	0	; () banked
  6351  000940  6BBE               	clrf	(1+(?_timer1_lthread+04h))&0ffh
  6352  000942  0100               	movlb	0	; () banked
  6353  000944  BFBD               	btfsc	(0+(?_timer1_lthread+04h))&0ffh,7
  6354  000946  07BE               	decf	(1+(?_timer1_lthread+04h))&0ffh
  6355  000948  0101               	movlb	1	; () banked
  6356  00094A  0E01               	movlw	high(main@msgbuffer)
  6357  00094C  0100               	movlb	0	; () banked
  6358  00094E  0100               	movlb	0	; () banked
  6359  000950  6FC0               	movwf	(1+(?_timer1_lthread+06h))&0ffh
  6360  000952  0101               	movlb	1	; () banked
  6361  000954  0EB4               	movlw	low(main@msgbuffer)
  6362  000956  0100               	movlb	0	; () banked
  6363  000958  6FBF               	movwf	(0+(?_timer1_lthread+06h))&0ffh
  6364  00095A  0100               	movlb	0	; () banked
  6365  00095C  EC46  F00E         	call	_timer1_lthread	;wreg free
  6366                           	line	315
  6367                           ;main.c: 315: break;
  6368  000960  D739               	goto	l19113
  6369                           	line	317
  6370                           ;main.c: 316: };
  6371                           ;main.c: 317: case 40:
  6372                           	
  6373  000962                     l3665:
  6374                           	line	320
  6375                           	
  6376  000962                     l19139:
  6377                           ;main.c: 318: {
  6378                           ;main.c: 320: FromMainLow_sendmsg(length, msgtype, (void *) msgbuffer);
  6379  000962  C1CB  F1AD         	movff	(main@length),(?_FromMainLow_sendmsg)
  6380  000966  C1CC  F1AE         	movff	(main@msgtype),0+(?_FromMainLow_sendmsg+01h)
  6381  00096A  0101               	movlb	1	; () banked
  6382  00096C  0E01               	movlw	high(main@msgbuffer)
  6383  00096E  0101               	movlb	1	; () banked
  6384  000970  0101               	movlb	1	; () banked
  6385  000972  6FB0               	movwf	(1+(?_FromMainLow_sendmsg+02h))&0ffh
  6386  000974  0101               	movlb	1	; () banked
  6387  000976  0EB4               	movlw	low(main@msgbuffer)
  6388  000978  0101               	movlb	1	; () banked
  6389  00097A  6FAF               	movwf	(0+(?_FromMainLow_sendmsg+02h))&0ffh
  6390  00097C  0101               	movlb	1	; () banked
  6391  00097E  EC1A  F00E         	call	_FromMainLow_sendmsg	;wreg free
  6392  000982  D001               	goto	l19141
  6393                           	line	322
  6394                           ;main.c: 321: };
  6395                           ;main.c: 322: case 30:
  6396                           	
  6397  000984                     l3666:
  6398  000984  D000               	goto	l19141
  6399                           	line	323
  6400                           	
  6401  000986                     l3667:
  6402                           	line	325
  6403                           	
  6404  000986                     l19141:
  6405                           ;main.c: 323: case 31:
  6406                           ;main.c: 324: {
  6407                           ;main.c: 325: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  6408  000986  0101               	movlb	1	; () banked
  6409  000988  0E01               	movlw	high(main@uthread_data)
  6410  00098A  0100               	movlb	0	; () banked
  6411  00098C  0100               	movlb	0	; () banked
  6412  00098E  6FBA               	movwf	((?_uart_lthread+1))&0ffh
  6413  000990  0101               	movlb	1	; () banked
  6414  000992  0EBF               	movlw	low(main@uthread_data)
  6415  000994  0100               	movlb	0	; () banked
  6416  000996  6FB9               	movwf	((?_uart_lthread))&0ffh
  6417  000998  0101               	movlb	1	; () banked
  6418  00099A  0100               	movlb	0	; () banked
  6419  00099C  C1CC  F0BB         	movff	(main@msgtype),0+(?_uart_lthread+02h)
  6420  0009A0  0100               	movlb	0	; () banked
  6421  0009A2  0100               	movlb	0	; () banked
  6422  0009A4  6BBC               	clrf	(1+(?_uart_lthread+02h))&0ffh
  6423  0009A6  0101               	movlb	1	; () banked
  6424  0009A8  0101               	movlb	1	; () banked
  6425  0009AA  51CB               	movf	((main@length))&0ffh,w
  6426  0009AC  0100               	movlb	0	; () banked
  6427  0009AE  0100               	movlb	0	; () banked
  6428  0009B0  6FBD               	movwf	(0+(?_uart_lthread+04h))&0ffh
  6429  0009B2  0100               	movlb	0	; () banked
  6430  0009B4  6BBE               	clrf	(1+(?_uart_lthread+04h))&0ffh
  6431  0009B6  0100               	movlb	0	; () banked
  6432  0009B8  BFBD               	btfsc	(0+(?_uart_lthread+04h))&0ffh,7
  6433  0009BA  07BE               	decf	(1+(?_uart_lthread+04h))&0ffh
  6434  0009BC  0101               	movlb	1	; () banked
  6435  0009BE  0E01               	movlw	high(main@msgbuffer)
  6436  0009C0  0100               	movlb	0	; () banked
  6437  0009C2  0100               	movlb	0	; () banked
  6438  0009C4  6FC0               	movwf	(1+(?_uart_lthread+06h))&0ffh
  6439  0009C6  0101               	movlb	1	; () banked
  6440  0009C8  0EB4               	movlw	low(main@msgbuffer)
  6441  0009CA  0100               	movlb	0	; () banked
  6442  0009CC  6FBF               	movwf	(0+(?_uart_lthread+06h))&0ffh
  6443  0009CE  0100               	movlb	0	; () banked
  6444  0009D0  EC3C  F00C         	call	_uart_lthread	;wreg free
  6445                           	line	326
  6446                           ;main.c: 326: break;
  6447  0009D4  D6FF               	goto	l19113
  6448                           	line	328
  6449                           ;main.c: 327: };
  6450                           ;main.c: 328: default:
  6451                           	
  6452  0009D6                     l3668:
  6453                           	line	331
  6454                           ;main.c: 329: {
  6455                           ;main.c: 331: break;
  6456  0009D6  D6FE               	goto	l19113
  6457                           	line	333
  6458                           	
  6459  0009D8                     l19143:
  6460                           ;main.c: 332: };
  6461                           ;main.c: 333: };
  6462  0009D8  D6FD               	goto	l19113
  6463                           	line	311
  6464                           	
  6465  0009DA                     l3662:
  6466                           	
  6467  0009DA                     l19145:
  6468  0009DA  0101               	movlb	1	; () banked
  6469  0009DC  0101               	movlb	1	; () banked
  6470  0009DE  51CC               	movf	((main@msgtype))&0ffh,w
  6471                           	; Switch size 1, requested type "space"
  6472                           ; Number of cases is 4, Range of values is 11 to 40
  6473                           ; switch strategies available:
  6474                           ; Name         Instructions Cycles
  6475                           ; simple_byte           13     7 (average)
  6476                           ;	Chosen strategy is simple_byte
  6477                           
  6478  0009E0  0A0B               	xorlw	11^0	; case 11
  6479  0009E2  B4D8               	skipnz
  6480  0009E4  D796               	goto	l19137
  6481  0009E6  0A15               	xorlw	30^11	; case 30
  6482  0009E8  B4D8               	skipnz
  6483  0009EA  D7CD               	goto	l19141
  6484  0009EC  0A01               	xorlw	31^30	; case 31
  6485  0009EE  B4D8               	skipnz
  6486  0009F0  D7CA               	goto	l19141
  6487  0009F2  0A37               	xorlw	40^31	; case 40
  6488  0009F4  B4D8               	skipnz
  6489  0009F6  D7B5               	goto	l19139
  6490  0009F8  D6ED               	goto	l19113
  6491                           
  6492                           	line	333
  6493                           	
  6494  0009FA                     l3664:; BSR set to: 1
  6495                           
  6496  0009FA  D6EC               	goto	l19113
  6497                           	line	334
  6498                           	
  6499  0009FC                     l3661:; BSR set to: 1
  6500                           
  6501  0009FC  D6EB               	goto	l19113
  6502                           	line	335
  6503                           	
  6504  0009FE                     l3669:; BSR set to: 1
  6505                           
  6506                           	line	226
  6507  0009FE  D6EA               	goto	l19113
  6508                           	
  6509  000A00                     l3670:; BSR set to: 1
  6510                           
  6511                           	line	337
  6512                           	
  6513  000A00                     l3671:; BSR set to: 1
  6514                           
  6515                           	global	start
  6516  000A00  EF69  F000         	goto	start
  6517                           	opt stack 0
  6518                           GLOBAL	__end_of_main
  6519  000A04                     	__end_of_main:
  6520                           	signat	_main,88
  6521                           	global	_enable_interrupts
  6522                           
  6523 ;; *************** function _enable_interrupts *****************
  6524 ;; Defined at:
  6525 ;;		line 14 in file "../src/interrupts.c"
  6526 ;; Parameters:    Size  Location     Type
  6527 ;;		None
  6528 ;; Auto vars:     Size  Location     Type
  6529 ;;		None
  6530 ;; Return value:  Size  Location     Type
  6531 ;;		None               void
  6532 ;; Registers used:
  6533 ;;		None
  6534 ;; Tracked objects:
  6535 ;;		On entry : 0/0
  6536 ;;		On exit  : 0/0
  6537 ;;		Unchanged: 0/0
  6538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6539 ;;      Params:         0       0       0       0       0
  6540 ;;      Locals:         0       0       0       0       0
  6541 ;;      Temps:          0       0       0       0       0
  6542 ;;      Totals:         0       0       0       0       0
  6543 ;;Total ram usage:        0 bytes
  6544 ;; Hardware stack levels used:    1
  6545 ;; Hardware stack levels required when called:   11
  6546 ;; This function calls:
  6547 ;;		Nothing
  6548 ;; This function is called by:
  6549 ;;		_main
  6550 ;; This function uses a non-reentrant model
  6551 ;;
  6552                           psect	text1,class=CODE,space=0,reloc=2
  6553                           global __ptext1
  6554  001DDA                     __ptext1:
  6555                           psect	text1
  6556                           	file	"../src/interrupts.c"
  6557                           	line	14
  6558                           	global	__size_of_enable_interrupts
  6559  0000                     	__size_of_enable_interrupts	equ	__end_of_enable_interrupts-_enable_interrupts
  6560                           	
  6561  001DDA                     _enable_interrupts:; BSR set to: 1
  6562                           
  6563                           	opt	stack 19
  6564                           	line	17
  6565                           	
  6566  001DDA                     l18169:
  6567                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  6568  001DDA  8ED0               	bsf	((c:4048)),c,7	;volatile
  6569                           	line	18
  6570                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  6571  001DDC  8EF2               	bsf	((c:4082)),c,7	;volatile
  6572                           	line	19
  6573                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  6574  001DDE  8CF2               	bsf	((c:4082)),c,6	;volatile
  6575                           	line	20
  6576                           	
  6577  001DE0                     l1799:
  6578  001DE0  0012               	return
  6579                           	opt stack 0
  6580                           GLOBAL	__end_of_enable_interrupts
  6581  001DE2                     	__end_of_enable_interrupts:
  6582                           	signat	_enable_interrupts,88
  6583                           	global	_init_uart_recv
  6584                           
  6585 ;; *************** function _init_uart_recv *****************
  6586 ;; Defined at:
  6587 ;;		line 31 in file "../src/my_uart.c"
  6588 ;; Parameters:    Size  Location     Type
  6589 ;;  uc              2   57[BANK0 ] PTR struct __uart_comm
  6590 ;;		 -> main@uc(5), 
  6591 ;; Auto vars:     Size  Location     Type
  6592 ;;		None
  6593 ;; Return value:  Size  Location     Type
  6594 ;;		None               void
  6595 ;; Registers used:
  6596 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6597 ;; Tracked objects:
  6598 ;;		On entry : 0/0
  6599 ;;		On exit  : 0/0
  6600 ;;		Unchanged: 0/0
  6601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6602 ;;      Params:         0       2       0       0       0
  6603 ;;      Locals:         0       0       0       0       0
  6604 ;;      Temps:          0       0       0       0       0
  6605 ;;      Totals:         0       2       0       0       0
  6606 ;;Total ram usage:        2 bytes
  6607 ;; Hardware stack levels used:    1
  6608 ;; Hardware stack levels required when called:   11
  6609 ;; This function calls:
  6610 ;;		Nothing
  6611 ;; This function is called by:
  6612 ;;		_main
  6613 ;; This function uses a non-reentrant model
  6614 ;;
  6615                           psect	text2,class=CODE,space=0,reloc=2
  6616                           global __ptext2
  6617  001D3E                     __ptext2:
  6618                           psect	text2
  6619                           	file	"../src/my_uart.c"
  6620                           	line	31
  6621                           	global	__size_of_init_uart_recv
  6622  0000                     	__size_of_init_uart_recv	equ	__end_of_init_uart_recv-_init_uart_recv
  6623                           	
  6624  001D3E                     _init_uart_recv:
  6625                           	opt	stack 19
  6626                           	line	32
  6627                           	
  6628  001D3E                     l18321:
  6629                           ;my_uart.c: 32: uc_ptr = uc;
  6630  001D3E  C0B9  F04A         	movff	(init_uart_recv@uc),(c:_uc_ptr)
  6631  001D42  C0BA  F04B         	movff	(init_uart_recv@uc+1),(c:_uc_ptr+1)
  6632                           	line	33
  6633                           	
  6634  001D46                     l18323:
  6635                           ;my_uart.c: 33: uc_ptr->buflen = 0;
  6636  001D46  EE20 F004          	lfsr	2,04h
  6637  001D4A  504A               	movf	((c:_uc_ptr)),c,w
  6638  001D4C  26D9               	addwf	fsr2l
  6639  001D4E  504B               	movf	((c:_uc_ptr+1)),c,w
  6640  001D50  22DA               	addwfc	fsr2h
  6641  001D52  0E00               	movlw	low(0)
  6642  001D54  6EDF               	movwf	indf2
  6643                           	line	34
  6644                           	
  6645  001D56                     l9239:
  6646  001D56  0012               	return
  6647                           	opt stack 0
  6648                           GLOBAL	__end_of_init_uart_recv
  6649  001D58                     	__end_of_init_uart_recv:
  6650                           	signat	_init_uart_recv,4216
  6651                           	global	_init_i2c
  6652                           
  6653 ;; *************** function _init_i2c *****************
  6654 ;; Defined at:
  6655 ;;		line 437 in file "../src/my_i2c.c"
  6656 ;; Parameters:    Size  Location     Type
  6657 ;;  ic              2   57[BANK0 ] PTR struct __i2c_comm
  6658 ;;		 -> main@ic(28), 
  6659 ;; Auto vars:     Size  Location     Type
  6660 ;;		None
  6661 ;; Return value:  Size  Location     Type
  6662 ;;		None               void
  6663 ;; Registers used:
  6664 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6665 ;; Tracked objects:
  6666 ;;		On entry : 0/0
  6667 ;;		On exit  : 0/0
  6668 ;;		Unchanged: 0/0
  6669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6670 ;;      Params:         0       2       0       0       0
  6671 ;;      Locals:         0       0       0       0       0
  6672 ;;      Temps:          0       0       0       0       0
  6673 ;;      Totals:         0       2       0       0       0
  6674 ;;Total ram usage:        2 bytes
  6675 ;; Hardware stack levels used:    1
  6676 ;; Hardware stack levels required when called:   11
  6677 ;; This function calls:
  6678 ;;		Nothing
  6679 ;; This function is called by:
  6680 ;;		_main
  6681 ;; This function uses a non-reentrant model
  6682 ;;
  6683                           psect	text3,class=CODE,space=0,reloc=2
  6684                           global __ptext3
  6685  0018C6                     __ptext3:
  6686                           psect	text3
  6687                           	file	"../src/my_i2c.c"
  6688                           	line	437
  6689                           	global	__size_of_init_i2c
  6690  0000                     	__size_of_init_i2c	equ	__end_of_init_i2c-_init_i2c
  6691                           	
  6692  0018C6                     _init_i2c:
  6693                           	opt	stack 19
  6694                           	line	438
  6695                           	
  6696  0018C6                     l18325:
  6697                           ;my_i2c.c: 438: ic_ptr = ic;
  6698  0018C6  C0B9  F048         	movff	(init_i2c@ic),(c:_ic_ptr)
  6699  0018CA  C0BA  F049         	movff	(init_i2c@ic+1),(c:_ic_ptr+1)
  6700                           	line	439
  6701                           	
  6702  0018CE                     l18327:
  6703                           ;my_i2c.c: 439: ic_ptr->buflen = 0;
  6704  0018CE  EE20 F00A          	lfsr	2,0Ah
  6705  0018D2  5048               	movf	((c:_ic_ptr)),c,w
  6706  0018D4  26D9               	addwf	fsr2l
  6707  0018D6  5049               	movf	((c:_ic_ptr+1)),c,w
  6708  0018D8  22DA               	addwfc	fsr2h
  6709  0018DA  0E00               	movlw	low(0)
  6710  0018DC  6EDF               	movwf	indf2
  6711                           	line	440
  6712                           ;my_i2c.c: 440: ic_ptr->event_count = 0;
  6713  0018DE  EE20 F00B          	lfsr	2,0Bh
  6714  0018E2  5048               	movf	((c:_ic_ptr)),c,w
  6715  0018E4  26D9               	addwf	fsr2l
  6716  0018E6  5049               	movf	((c:_ic_ptr+1)),c,w
  6717  0018E8  22DA               	addwfc	fsr2h
  6718  0018EA  0E00               	movlw	low(0)
  6719  0018EC  6EDF               	movwf	indf2
  6720                           	line	441
  6721                           ;my_i2c.c: 441: ic_ptr->status = 0x5;
  6722  0018EE  EE20 F00C          	lfsr	2,0Ch
  6723  0018F2  5048               	movf	((c:_ic_ptr)),c,w
  6724  0018F4  26D9               	addwf	fsr2l
  6725  0018F6  5049               	movf	((c:_ic_ptr+1)),c,w
  6726  0018F8  22DA               	addwfc	fsr2h
  6727  0018FA  0E05               	movlw	low(05h)
  6728  0018FC  6EDF               	movwf	indf2
  6729                           	line	442
  6730                           ;my_i2c.c: 442: ic_ptr->error_count = 0;
  6731  0018FE  EE20 F00E          	lfsr	2,0Eh
  6732  001902  5048               	movf	((c:_ic_ptr)),c,w
  6733  001904  26D9               	addwf	fsr2l
  6734  001906  5049               	movf	((c:_ic_ptr+1)),c,w
  6735  001908  22DA               	addwfc	fsr2h
  6736  00190A  0E00               	movlw	low(0)
  6737  00190C  6EDF               	movwf	indf2
  6738                           	line	443
  6739                           	
  6740  00190E                     l7437:
  6741  00190E  0012               	return
  6742                           	opt stack 0
  6743                           GLOBAL	__end_of_init_i2c
  6744  001910                     	__end_of_init_i2c:
  6745                           	signat	_init_i2c,4216
  6746                           	global	_init_timer1_lthread
  6747                           
  6748 ;; *************** function _init_timer1_lthread *****************
  6749 ;; Defined at:
  6750 ;;		line 9 in file "../src/timer1_thread.c"
  6751 ;; Parameters:    Size  Location     Type
  6752 ;;  tptr            2   62[BANK0 ] PTR struct __timer1_thre
  6753 ;;		 -> main@t1thread_data(2), 
  6754 ;; Auto vars:     Size  Location     Type
  6755 ;;		None
  6756 ;; Return value:  Size  Location     Type
  6757 ;;		None               void
  6758 ;; Registers used:
  6759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6760 ;; Tracked objects:
  6761 ;;		On entry : 0/0
  6762 ;;		On exit  : 0/0
  6763 ;;		Unchanged: 0/0
  6764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6765 ;;      Params:         0       2       0       0       0
  6766 ;;      Locals:         0       0       0       0       0
  6767 ;;      Temps:          0       3       0       0       0
  6768 ;;      Totals:         0       5       0       0       0
  6769 ;;Total ram usage:        5 bytes
  6770 ;; Hardware stack levels used:    1
  6771 ;; Hardware stack levels required when called:   12
  6772 ;; This function calls:
  6773 ;;		_OpenADC
  6774 ;;		_SetChanADC
  6775 ;; This function is called by:
  6776 ;;		_main
  6777 ;; This function uses a non-reentrant model
  6778 ;;
  6779                           psect	text4,class=CODE,space=0,reloc=2
  6780                           global __ptext4
  6781  001708                     __ptext4:
  6782                           psect	text4
  6783                           	file	"../src/timer1_thread.c"
  6784                           	line	9
  6785                           	global	__size_of_init_timer1_lthread
  6786  0000                     	__size_of_init_timer1_lthread	equ	__end_of_init_timer1_lthread-_init_timer1_lthread
  6787                           	
  6788  001708                     _init_timer1_lthread:
  6789                           	opt	stack 18
  6790                           	line	14
  6791                           	
  6792  001708                     l18329:
  6793                           ;timer1_thread.c: 11: OpenADC(0b10011111 & 0b11111111 & 0b11110001,
  6794                           ;timer1_thread.c: 12: 0b10000111 & 0b10001111 &
  6795                           ;timer1_thread.c: 13: 0b01111111 & 0b11111110 &
  6796                           ;timer1_thread.c: 14: 0b11111101, 0b1011);
  6797  001708  0100               	movlb	0	; () banked
  6798  00170A  6FC0               	movwf	(??_init_timer1_lthread+0+0)&0ffh
  6799  00170C  0E91               	movlw	low(091h)
  6800  00170E  0100               	movlb	0	; () banked
  6801  001710  0100               	movlb	0	; () banked
  6802  001712  6FB9               	movwf	((?_OpenADC))&0ffh
  6803  001714  0100               	movlb	0	; () banked
  6804  001716  51C0               	movf	(??_init_timer1_lthread+0+0)&0ffh,w
  6805  001718  0100               	movlb	0	; () banked
  6806  00171A  6FC1               	movwf	(??_init_timer1_lthread+1+0)&0ffh
  6807  00171C  0E04               	movlw	low(04h)
  6808  00171E  0100               	movlb	0	; () banked
  6809  001720  0100               	movlb	0	; () banked
  6810  001722  6FBA               	movwf	(0+(?_OpenADC+01h))&0ffh
  6811  001724  0100               	movlb	0	; () banked
  6812  001726  51C1               	movf	(??_init_timer1_lthread+1+0)&0ffh,w
  6813  001728  0100               	movlb	0	; () banked
  6814  00172A  6FC2               	movwf	(??_init_timer1_lthread+2+0)&0ffh
  6815  00172C  0E0B               	movlw	low(0Bh)
  6816  00172E  0100               	movlb	0	; () banked
  6817  001730  0100               	movlb	0	; () banked
  6818  001732  6FBB               	movwf	(0+(?_OpenADC+02h))&0ffh
  6819  001734  0100               	movlb	0	; () banked
  6820  001736  51C2               	movf	(??_init_timer1_lthread+2+0)&0ffh,w
  6821  001738  0100               	movlb	0	; () banked
  6822  00173A  ECD0  F00A         	call	_OpenADC	;wreg free
  6823                           	line	15
  6824                           ;timer1_thread.c: 15: SetChanADC(0b10000111);
  6825  00173E  0100               	movlb	0	; () banked
  6826  001740  6FC0               	movwf	(??_init_timer1_lthread+0+0)&0ffh
  6827  001742  0E87               	movlw	low(087h)
  6828  001744  0100               	movlb	0	; () banked
  6829  001746  0100               	movlb	0	; () banked
  6830  001748  6FB9               	movwf	((?_SetChanADC))&0ffh
  6831  00174A  0100               	movlb	0	; () banked
  6832  00174C  51C0               	movf	(??_init_timer1_lthread+0+0)&0ffh,w
  6833  00174E  0100               	movlb	0	; () banked
  6834  001750  EC91  F00E         	call	_SetChanADC	;wreg free
  6835                           	line	17
  6836                           	
  6837  001754                     l18331:
  6838                           ;timer1_thread.c: 17: (PIR1bits.ADIF=0,INTCONbits.PEIE=1,PIE1bits.ADIE=1);
  6839  001754  9C9E               	bcf	((c:3998)),c,6	;volatile
  6840                           	
  6841  001756                     l18333:
  6842  001756  8CF2               	bsf	((c:4082)),c,6	;volatile
  6843                           	
  6844  001758                     l18335:
  6845  001758  8C9D               	bsf	((c:3997)),c,6	;volatile
  6846                           	line	18
  6847                           	
  6848  00175A                     l18337:
  6849                           ;timer1_thread.c: 18: tptr->timerval = 0;
  6850  00175A  C0BE  FFD9         	movff	(init_timer1_lthread@tptr),fsr2l
  6851  00175E  C0BF  FFDA         	movff	(init_timer1_lthread@tptr+1),fsr2h
  6852  001762  0E00               	movlw	low(0)
  6853  001764  6EDE               	movwf	postinc2
  6854  001766  0E00               	movlw	high(0)
  6855  001768  6EDD               	movwf	postdec2
  6856                           	line	19
  6857                           	
  6858  00176A                     l12819:
  6859  00176A  0012               	return
  6860                           	opt stack 0
  6861                           GLOBAL	__end_of_init_timer1_lthread
  6862  00176C                     	__end_of_init_timer1_lthread:
  6863                           	signat	_init_timer1_lthread,4216
  6864                           	global	_init_queues
  6865                           
  6866 ;; *************** function _init_queues *****************
  6867 ;; Defined at:
  6868 ;;		line 194 in file "../src/messages.c"
  6869 ;; Parameters:    Size  Location     Type
  6870 ;;		None
  6871 ;; Auto vars:     Size  Location     Type
  6872 ;;		None
  6873 ;; Return value:  Size  Location     Type
  6874 ;;		None               void
  6875 ;; Registers used:
  6876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6877 ;; Tracked objects:
  6878 ;;		On entry : 0/0
  6879 ;;		On exit  : 0/0
  6880 ;;		Unchanged: 0/0
  6881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6882 ;;      Params:         0       0       0       0       0
  6883 ;;      Locals:         0       0       0       0       0
  6884 ;;      Temps:          0       1       0       0       0
  6885 ;;      Totals:         0       1       0       0       0
  6886 ;;Total ram usage:        1 bytes
  6887 ;; Hardware stack levels used:    1
  6888 ;; Hardware stack levels required when called:   12
  6889 ;; This function calls:
  6890 ;;		_init_queue
  6891 ;; This function is called by:
  6892 ;;		_main
  6893 ;; This function uses a non-reentrant model
  6894 ;;
  6895                           psect	text5,class=CODE,space=0,reloc=2
  6896                           global __ptext5
  6897  00169A                     __ptext5:
  6898                           psect	text5
  6899                           	file	"../src/messages.c"
  6900                           	line	194
  6901                           	global	__size_of_init_queues
  6902  0000                     	__size_of_init_queues	equ	__end_of_init_queues-_init_queues
  6903                           	
  6904  00169A                     _init_queues:
  6905                           	opt	stack 18
  6906                           	line	195
  6907                           	
  6908  00169A                     l18339:
  6909                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  6910  00169A  0100               	movlb	0	; () banked
  6911  00169C  6FBD               	movwf	(??_init_queues+0+0)&0ffh
  6912  00169E  0E00               	movlw	low(0)
  6913  0016A0  6E45               	movwf	((c:_MQ_Main_Willing_to_block)),c
  6914  0016A2  0100               	movlb	0	; () banked
  6915  0016A4  51BD               	movf	(??_init_queues+0+0)&0ffh,w
  6916                           	line	196
  6917                           	
  6918  0016A6                     l18341:; BSR set to: 0
  6919                           
  6920                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  6921  0016A6  0101               	movlb	1	; () banked
  6922  0016A8  0E01               	movlw	high(_ToMainLow_MQ)
  6923  0016AA  0100               	movlb	0	; () banked
  6924  0016AC  0100               	movlb	0	; () banked
  6925  0016AE  6FBA               	movwf	((?_init_queue+1))&0ffh
  6926  0016B0  0101               	movlb	1	; () banked
  6927  0016B2  0E6C               	movlw	low(_ToMainLow_MQ)
  6928  0016B4  0100               	movlb	0	; () banked
  6929  0016B6  6FB9               	movwf	((?_init_queue))&0ffh
  6930  0016B8  0100               	movlb	0	; () banked
  6931  0016BA  EC8D  F00A         	call	_init_queue	;wreg free
  6932                           	line	197
  6933                           	
  6934  0016BE                     l18343:
  6935                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  6936  0016BE  0101               	movlb	1	; () banked
  6937  0016C0  0E01               	movlw	high(_ToMainHigh_MQ)
  6938  0016C2  0100               	movlb	0	; () banked
  6939  0016C4  0100               	movlb	0	; () banked
  6940  0016C6  6FBA               	movwf	((?_init_queue+1))&0ffh
  6941  0016C8  0101               	movlb	1	; () banked
  6942  0016CA  0E36               	movlw	low(_ToMainHigh_MQ)
  6943  0016CC  0100               	movlb	0	; () banked
  6944  0016CE  6FB9               	movwf	((?_init_queue))&0ffh
  6945  0016D0  0100               	movlb	0	; () banked
  6946  0016D2  EC8D  F00A         	call	_init_queue	;wreg free
  6947                           	line	198
  6948                           	
  6949  0016D6                     l18345:
  6950                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  6951  0016D6  0101               	movlb	1	; () banked
  6952  0016D8  0E01               	movlw	high(_FromMainLow_MQ)
  6953  0016DA  0100               	movlb	0	; () banked
  6954  0016DC  0100               	movlb	0	; () banked
  6955  0016DE  6FBA               	movwf	((?_init_queue+1))&0ffh
  6956  0016E0  0101               	movlb	1	; () banked
  6957  0016E2  0E00               	movlw	low(_FromMainLow_MQ)
  6958  0016E4  0100               	movlb	0	; () banked
  6959  0016E6  6FB9               	movwf	((?_init_queue))&0ffh
  6960  0016E8  0100               	movlb	0	; () banked
  6961  0016EA  EC8D  F00A         	call	_init_queue	;wreg free
  6962                           	line	199
  6963                           	
  6964  0016EE                     l18347:
  6965                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  6966  0016EE  0102               	movlb	2	; () banked
  6967  0016F0  0E02               	movlw	high(_FromMainHigh_MQ)
  6968  0016F2  0100               	movlb	0	; () banked
  6969  0016F4  0100               	movlb	0	; () banked
  6970  0016F6  6FBA               	movwf	((?_init_queue+1))&0ffh
  6971  0016F8  0102               	movlb	2	; () banked
  6972  0016FA  0E00               	movlw	low(_FromMainHigh_MQ)
  6973  0016FC  0100               	movlb	0	; () banked
  6974  0016FE  6FB9               	movwf	((?_init_queue))&0ffh
  6975  001700  0100               	movlb	0	; () banked
  6976  001702  EC8D  F00A         	call	_init_queue	;wreg free
  6977                           	line	200
  6978                           	
  6979  001706                     l5517:
  6980  001706  0012               	return
  6981                           	opt stack 0
  6982                           GLOBAL	__end_of_init_queues
  6983  001708                     	__end_of_init_queues:
  6984                           	signat	_init_queues,88
  6985                           	global	_OpenTimer1
  6986                           
  6987 ;; *************** function _OpenTimer1 *****************
  6988 ;; Defined at:
  6989 ;;		line 17 in file "plib/Timers/t1open.c"
  6990 ;; Parameters:    Size  Location     Type
  6991 ;;  config          1   57[BANK0 ] unsigned char 
  6992 ;; Auto vars:     Size  Location     Type
  6993 ;;		None
  6994 ;; Return value:  Size  Location     Type
  6995 ;;		None               void
  6996 ;; Registers used:
  6997 ;;		wreg, status,2, status,0
  6998 ;; Tracked objects:
  6999 ;;		On entry : 0/0
  7000 ;;		On exit  : 0/0
  7001 ;;		Unchanged: 0/0
  7002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7003 ;;      Params:         0       1       0       0       0
  7004 ;;      Locals:         0       0       0       0       0
  7005 ;;      Temps:          0       0       0       0       0
  7006 ;;      Totals:         0       1       0       0       0
  7007 ;;Total ram usage:        1 bytes
  7008 ;; Hardware stack levels used:    1
  7009 ;; Hardware stack levels required when called:   11
  7010 ;; This function calls:
  7011 ;;		Nothing
  7012 ;; This function is called by:
  7013 ;;		_main
  7014 ;; This function uses a non-reentrant model
  7015 ;;
  7016                           psect	text6,class=CODE,space=0,reloc=2
  7017                           global __ptext6
  7018  001A24                     __ptext6:
  7019                           psect	text6
  7020                           	file	"plib/Timers/t1open.c"
  7021                           	line	17
  7022                           	global	__size_of_OpenTimer1
  7023  0000                     	__size_of_OpenTimer1	equ	__end_of_OpenTimer1-_OpenTimer1
  7024                           	
  7025  001A24                     _OpenTimer1:
  7026                           	opt	stack 19
  7027                           	line	18
  7028                           	
  7029  001A24                     l18349:
  7030  001A24  0100               	movlb	0	; () banked
  7031  001A26  0100               	movlb	0	; () banked
  7032  001A28  51B9               	movf	((OpenTimer1@config))&0ffh,w
  7033  001A2A  0B7E               	andlw	low(07Eh)
  7034  001A2C  6ECD               	movwf	((c:4045)),c	;volatile
  7035                           	line	21
  7036                           	
  7037  001A2E                     l18351:; BSR set to: 0
  7038                           
  7039  001A2E  0100               	movlb	0	; () banked
  7040                           	
  7041  001A30  0100               	movlb	0	; () banked
  7042  001A32  ADB9               	btfss	((OpenTimer1@config))&0ffh,(6)&7
  7043  001A34  D001               	goto	u1171
  7044  001A36  D001               	goto	u1170
  7045  001A38                     u1171:
  7046  001A38  D002               	goto	l16481
  7047  001A3A                     u1170:
  7048                           	line	22
  7049                           	
  7050  001A3A                     l18353:; BSR set to: 0
  7051                           
  7052  001A3A  8ECD               	bsf	((c:4045)),c,7	;volatile
  7053  001A3C  D002               	goto	l18355
  7054                           	line	23
  7055                           	
  7056  001A3E                     l16481:; BSR set to: 0
  7057                           
  7058                           	line	24
  7059  001A3E  9ECD               	bcf	((c:4045)),c,7	;volatile
  7060  001A40  D000               	goto	l18355
  7061                           	
  7062  001A42                     l16482:; BSR set to: 0
  7063                           
  7064                           	line	26
  7065                           	
  7066  001A42                     l18355:; BSR set to: 0
  7067                           
  7068  001A42  0E00               	movlw	low(0)
  7069  001A44  6ECF               	movwf	((c:4047)),c	;volatile
  7070                           	line	27
  7071  001A46  0E00               	movlw	low(0)
  7072  001A48  6ECE               	movwf	((c:4046)),c	;volatile
  7073                           	line	28
  7074                           	
  7075  001A4A                     l18357:; BSR set to: 0
  7076                           
  7077  001A4A  909E               	bcf	((c:3998)),c,0	;volatile
  7078                           	line	30
  7079                           	
  7080  001A4C                     l18359:; BSR set to: 0
  7081                           
  7082  001A4C  0100               	movlb	0	; () banked
  7083                           	
  7084  001A4E  0100               	movlb	0	; () banked
  7085  001A50  AFB9               	btfss	((OpenTimer1@config))&0ffh,(7)&7
  7086  001A52  D001               	goto	u1181
  7087  001A54  D001               	goto	u1180
  7088  001A56                     u1181:
  7089  001A56  D002               	goto	l16483
  7090  001A58                     u1180:
  7091                           	line	31
  7092                           	
  7093  001A58                     l18361:; BSR set to: 0
  7094                           
  7095  001A58  809D               	bsf	((c:3997)),c,0	;volatile
  7096  001A5A  D001               	goto	l16484
  7097                           	line	32
  7098                           	
  7099  001A5C                     l16483:; BSR set to: 0
  7100                           
  7101                           	line	33
  7102  001A5C  909D               	bcf	((c:3997)),c,0	;volatile
  7103                           	
  7104  001A5E                     l16484:; BSR set to: 0
  7105                           
  7106                           	line	35
  7107  001A5E  80CD               	bsf	((c:4045)),c,0	;volatile
  7108                           	line	36
  7109                           	
  7110  001A60                     l16485:; BSR set to: 0
  7111                           
  7112  001A60  0012               	return
  7113                           	opt stack 0
  7114                           GLOBAL	__end_of_OpenTimer1
  7115  001A62                     	__end_of_OpenTimer1:
  7116                           	signat	_OpenTimer1,4216
  7117                           	global	_i2c_configure_slave
  7118                           
  7119 ;; *************** function _i2c_configure_slave *****************
  7120 ;; Defined at:
  7121 ;;		line 448 in file "../src/my_i2c.c"
  7122 ;; Parameters:    Size  Location     Type
  7123 ;;  addr            1   57[BANK0 ] unsigned char 
  7124 ;; Auto vars:     Size  Location     Type
  7125 ;;		None
  7126 ;; Return value:  Size  Location     Type
  7127 ;;		None               void
  7128 ;; Registers used:
  7129 ;;		wreg, status,2, status,0
  7130 ;; Tracked objects:
  7131 ;;		On entry : 0/0
  7132 ;;		On exit  : 0/0
  7133 ;;		Unchanged: 0/0
  7134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7135 ;;      Params:         0       1       0       0       0
  7136 ;;      Locals:         0       0       0       0       0
  7137 ;;      Temps:          0       1       0       0       0
  7138 ;;      Totals:         0       2       0       0       0
  7139 ;;Total ram usage:        2 bytes
  7140 ;; Hardware stack levels used:    1
  7141 ;; Hardware stack levels required when called:   11
  7142 ;; This function calls:
  7143 ;;		Nothing
  7144 ;; This function is called by:
  7145 ;;		_main
  7146 ;; This function uses a non-reentrant model
  7147 ;;
  7148                           psect	text7,class=CODE,space=0,reloc=2
  7149                           global __ptext7
  7150  001B10                     __ptext7:
  7151                           psect	text7
  7152                           	file	"../src/my_i2c.c"
  7153                           	line	448
  7154                           	global	__size_of_i2c_configure_slave
  7155  0000                     	__size_of_i2c_configure_slave	equ	__end_of_i2c_configure_slave-_i2c_configure_slave
  7156                           	
  7157  001B10                     _i2c_configure_slave:; BSR set to: 0
  7158                           
  7159                           	opt	stack 19
  7160                           	line	449
  7161                           	
  7162  001B10                     l18363:
  7163                           ;my_i2c.c: 449: i2cMode = 1;
  7164  001B10  0100               	movlb	0	; () banked
  7165  001B12  6FBA               	movwf	(??_i2c_configure_slave+0+0)&0ffh
  7166  001B14  0E01               	movlw	low(01h)
  7167  001B16  0100               	movlb	0	; () banked
  7168  001B18  0100               	movlb	0	; () banked
  7169  001B1A  6FC6               	movwf	((_i2cMode))&0ffh
  7170  001B1C  0100               	movlb	0	; () banked
  7171  001B1E  51BA               	movf	(??_i2c_configure_slave+0+0)&0ffh,w
  7172                           	line	452
  7173                           	
  7174  001B20                     l18365:; BSR set to: 0
  7175                           
  7176                           ;my_i2c.c: 452: TRISCbits.TRISC3 = 1;
  7177  001B20  8694               	bsf	((c:3988)),c,3	;volatile
  7178                           	line	453
  7179                           	
  7180  001B22                     l18367:; BSR set to: 0
  7181                           
  7182                           ;my_i2c.c: 453: TRISCbits.TRISC4 = 1;
  7183  001B22  8894               	bsf	((c:3988)),c,4	;volatile
  7184                           	line	455
  7185                           	
  7186  001B24                     l18369:; BSR set to: 0
  7187                           
  7188                           ;my_i2c.c: 455: SSPADD = addr;
  7189  001B24  C0B9  FFC8         	movff	(i2c_configure_slave@addr),(c:4040)	;volatile
  7190                           	line	457
  7191                           	
  7192  001B28                     l18371:; BSR set to: 0
  7193                           
  7194                           ;my_i2c.c: 457: SSPSTAT = 0x0;
  7195  001B28  0E00               	movlw	low(0)
  7196  001B2A  6EC7               	movwf	((c:4039)),c	;volatile
  7197                           	line	458
  7198                           	
  7199  001B2C                     l18373:; BSR set to: 0
  7200                           
  7201                           ;my_i2c.c: 458: SSPCON1 = 0x0;
  7202  001B2C  0E00               	movlw	low(0)
  7203  001B2E  6EC6               	movwf	((c:4038)),c	;volatile
  7204                           	line	459
  7205                           	
  7206  001B30                     l18375:; BSR set to: 0
  7207                           
  7208                           ;my_i2c.c: 459: SSPCON2 = 0x0;
  7209  001B30  0E00               	movlw	low(0)
  7210  001B32  6EC5               	movwf	((c:4037)),c	;volatile
  7211                           	line	460
  7212                           	
  7213  001B34                     l18377:; BSR set to: 0
  7214                           
  7215                           ;my_i2c.c: 460: SSPCON1 |= 0x0E;
  7216  001B34  0E0E               	movlw	(0Eh)&0ffh
  7217  001B36  12C6               	iorwf	((c:4038)),c	;volatile
  7218                           	line	461
  7219                           ;my_i2c.c: 461: SSPSTAT |= 0b10000000;
  7220  001B38  8EC7               	bsf	(0+(7/8)+(c:4039)),c,(7)&7	;volatile
  7221                           	line	463
  7222                           	
  7223  001B3A                     l18379:; BSR set to: 0
  7224                           
  7225                           ;my_i2c.c: 463: TRISCbits.TRISC3 = 1;
  7226  001B3A  8694               	bsf	((c:3988)),c,3	;volatile
  7227                           	line	464
  7228                           	
  7229  001B3C                     l18381:; BSR set to: 0
  7230                           
  7231                           ;my_i2c.c: 464: TRISCbits.TRISC4 = 1;
  7232  001B3C  8894               	bsf	((c:3988)),c,4	;volatile
  7233                           	line	479
  7234                           	
  7235  001B3E                     l18383:; BSR set to: 0
  7236                           
  7237                           ;my_i2c.c: 479: SSPCON2bits.SEN = 1;
  7238  001B3E  80C5               	bsf	((c:4037)),c,0	;volatile
  7239                           	line	480
  7240                           ;my_i2c.c: 480: SSPCON1 |= 0b00100000;
  7241  001B40  8AC6               	bsf	(0+(5/8)+(c:4038)),c,(5)&7	;volatile
  7242                           	line	482
  7243                           	
  7244  001B42                     l7440:; BSR set to: 0
  7245                           
  7246  001B42  0012               	return
  7247                           	opt stack 0
  7248                           GLOBAL	__end_of_i2c_configure_slave
  7249  001B44                     	__end_of_i2c_configure_slave:
  7250                           	signat	_i2c_configure_slave,4216
  7251                           	global	_OpenUSART
  7252                           
  7253 ;; *************** function _OpenUSART *****************
  7254 ;; Defined at:
  7255 ;;		line 74 in file "plib/USART/uopen.c"
  7256 ;; Parameters:    Size  Location     Type
  7257 ;;  config          1   57[BANK0 ] unsigned char 
  7258 ;;  spbrg           2   58[BANK0 ] unsigned int 
  7259 ;; Auto vars:     Size  Location     Type
  7260 ;;		None
  7261 ;; Return value:  Size  Location     Type
  7262 ;;		None               void
  7263 ;; Registers used:
  7264 ;;		wreg, status,2
  7265 ;; Tracked objects:
  7266 ;;		On entry : 0/0
  7267 ;;		On exit  : 0/0
  7268 ;;		Unchanged: 0/0
  7269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7270 ;;      Params:         0       3       0       0       0
  7271 ;;      Locals:         0       0       0       0       0
  7272 ;;      Temps:          0       0       0       0       0
  7273 ;;      Totals:         0       3       0       0       0
  7274 ;;Total ram usage:        3 bytes
  7275 ;; Hardware stack levels used:    1
  7276 ;; Hardware stack levels required when called:   11
  7277 ;; This function calls:
  7278 ;;		Nothing
  7279 ;; This function is called by:
  7280 ;;		_main
  7281 ;; This function uses a non-reentrant model
  7282 ;;
  7283                           psect	text8,class=CODE,space=0,reloc=2
  7284                           global __ptext8
  7285  0011D4                     __ptext8:
  7286                           psect	text8
  7287                           	file	"plib/USART/uopen.c"
  7288                           	line	74
  7289                           	global	__size_of_OpenUSART
  7290  0000                     	__size_of_OpenUSART	equ	__end_of_OpenUSART-_OpenUSART
  7291                           	
  7292  0011D4                     _OpenUSART:; BSR set to: 0
  7293                           
  7294                           	opt	stack 19
  7295                           	line	75
  7296                           	
  7297  0011D4                     l18385:
  7298  0011D4  0E00               	movlw	low(0)
  7299  0011D6  6EAC               	movwf	((c:4012)),c	;volatile
  7300                           	line	76
  7301  0011D8  0E00               	movlw	low(0)
  7302  0011DA  6EAB               	movwf	((c:4011)),c	;volatile
  7303                           	line	78
  7304                           	
  7305  0011DC                     l18387:
  7306  0011DC  0100               	movlb	0	; () banked
  7307                           	
  7308  0011DE  0100               	movlb	0	; () banked
  7309  0011E0  A1B9               	btfss	((OpenUSART@config))&0ffh,(0)&7
  7310  0011E2  D001               	goto	u1191
  7311  0011E4  D001               	goto	u1190
  7312  0011E6                     u1191:
  7313  0011E6  D001               	goto	l16522
  7314  0011E8                     u1190:
  7315                           	line	79
  7316                           	
  7317  0011E8                     l18389:; BSR set to: 0
  7318                           
  7319  0011E8  88AC               	bsf	((c:4012)),c,4	;volatile
  7320                           	
  7321  0011EA                     l16522:; BSR set to: 0
  7322                           
  7323                           	line	81
  7324  0011EA  0100               	movlb	0	; () banked
  7325                           	
  7326  0011EC  0100               	movlb	0	; () banked
  7327  0011EE  A3B9               	btfss	((OpenUSART@config))&0ffh,(1)&7
  7328  0011F0  D001               	goto	u1201
  7329  0011F2  D001               	goto	u1200
  7330  0011F4                     u1201:
  7331  0011F4  D002               	goto	l16523
  7332  0011F6                     u1200:
  7333                           	line	83
  7334                           	
  7335  0011F6                     l18391:; BSR set to: 0
  7336                           
  7337  0011F6  8CAC               	bsf	((c:4012)),c,6	;volatile
  7338                           	line	84
  7339  0011F8  8CAB               	bsf	((c:4011)),c,6	;volatile
  7340                           	line	85
  7341                           	
  7342  0011FA                     l16523:; BSR set to: 0
  7343                           
  7344                           	line	87
  7345  0011FA  0100               	movlb	0	; () banked
  7346                           	
  7347  0011FC  0100               	movlb	0	; () banked
  7348  0011FE  A5B9               	btfss	((OpenUSART@config))&0ffh,(2)&7
  7349  001200  D001               	goto	u1211
  7350  001202  D001               	goto	u1210
  7351  001204                     u1211:
  7352  001204  D001               	goto	l16524
  7353  001206                     u1210:
  7354                           	line	88
  7355                           	
  7356  001206                     l18393:; BSR set to: 0
  7357                           
  7358  001206  8EAC               	bsf	((c:4012)),c,7	;volatile
  7359                           	
  7360  001208                     l16524:; BSR set to: 0
  7361                           
  7362                           	line	90
  7363  001208  0100               	movlb	0	; () banked
  7364                           	
  7365  00120A  0100               	movlb	0	; () banked
  7366  00120C  A7B9               	btfss	((OpenUSART@config))&0ffh,(3)&7
  7367  00120E  D001               	goto	u1221
  7368  001210  D001               	goto	u1220
  7369  001212                     u1221:
  7370  001212  D002               	goto	l16525
  7371  001214                     u1220:
  7372                           	line	91
  7373                           	
  7374  001214                     l18395:; BSR set to: 0
  7375                           
  7376  001214  88AB               	bsf	((c:4011)),c,4	;volatile
  7377  001216  D001               	goto	l16526
  7378                           	line	92
  7379                           	
  7380  001218                     l16525:; BSR set to: 0
  7381                           
  7382                           	line	93
  7383  001218  8AAB               	bsf	((c:4011)),c,5	;volatile
  7384                           	
  7385  00121A                     l16526:; BSR set to: 0
  7386                           
  7387                           	line	95
  7388  00121A  0100               	movlb	0	; () banked
  7389                           	
  7390  00121C  0100               	movlb	0	; () banked
  7391  00121E  A9B9               	btfss	((OpenUSART@config))&0ffh,(4)&7
  7392  001220  D001               	goto	u1231
  7393  001222  D001               	goto	u1230
  7394  001224                     u1231:
  7395  001224  D001               	goto	l16527
  7396  001226                     u1230:
  7397                           	line	96
  7398                           	
  7399  001226                     l18397:; BSR set to: 0
  7400                           
  7401  001226  84AC               	bsf	((c:4012)),c,2	;volatile
  7402                           	
  7403  001228                     l16527:; BSR set to: 0
  7404                           
  7405                           	line	98
  7406  001228  989E               	bcf	((c:3998)),c,4	;volatile
  7407                           	line	100
  7408  00122A  0100               	movlb	0	; () banked
  7409                           	
  7410  00122C  0100               	movlb	0	; () banked
  7411  00122E  ABB9               	btfss	((OpenUSART@config))&0ffh,(5)&7
  7412  001230  D001               	goto	u1241
  7413  001232  D001               	goto	u1240
  7414  001234                     u1241:
  7415  001234  D001               	goto	l16528
  7416  001236                     u1240:
  7417                           	line	101
  7418                           	
  7419  001236                     l18399:; BSR set to: 0
  7420                           
  7421  001236  86AB               	bsf	((c:4011)),c,3	;volatile
  7422                           	
  7423  001238                     l16528:; BSR set to: 0
  7424                           
  7425                           	line	103
  7426  001238  0100               	movlb	0	; () banked
  7427                           	
  7428  00123A  0100               	movlb	0	; () banked
  7429  00123C  ADB9               	btfss	((OpenUSART@config))&0ffh,(6)&7
  7430  00123E  D001               	goto	u1251
  7431  001240  D001               	goto	u1250
  7432  001242                     u1251:
  7433  001242  D002               	goto	l16529
  7434  001244                     u1250:
  7435                           	line	104
  7436                           	
  7437  001244                     l18401:; BSR set to: 0
  7438                           
  7439  001244  8A9D               	bsf	((c:3997)),c,5	;volatile
  7440  001246  D001               	goto	l16530
  7441                           	line	105
  7442                           	
  7443  001248                     l16529:; BSR set to: 0
  7444                           
  7445                           	line	106
  7446  001248  9A9D               	bcf	((c:3997)),c,5	;volatile
  7447                           	
  7448  00124A                     l16530:; BSR set to: 0
  7449                           
  7450                           	line	108
  7451  00124A  9A9E               	bcf	((c:3998)),c,5	;volatile
  7452                           	line	110
  7453  00124C  0100               	movlb	0	; () banked
  7454                           	
  7455  00124E  0100               	movlb	0	; () banked
  7456  001250  AFB9               	btfss	((OpenUSART@config))&0ffh,(7)&7
  7457  001252  D001               	goto	u1261
  7458  001254  D001               	goto	u1260
  7459  001256                     u1261:
  7460  001256  D002               	goto	l16531
  7461  001258                     u1260:
  7462                           	line	111
  7463                           	
  7464  001258                     l18403:; BSR set to: 0
  7465                           
  7466  001258  889D               	bsf	((c:3997)),c,4	;volatile
  7467  00125A  D001               	goto	l16532
  7468                           	line	112
  7469                           	
  7470  00125C                     l16531:; BSR set to: 0
  7471                           
  7472                           	line	113
  7473  00125C  989D               	bcf	((c:3997)),c,4	;volatile
  7474                           	
  7475  00125E                     l16532:; BSR set to: 0
  7476                           
  7477                           	line	115
  7478  00125E  C0BA  FFAF         	movff	(OpenUSART@spbrg),(c:4015)	;volatile
  7479                           	line	116
  7480                           	
  7481  001262                     l18405:; BSR set to: 0
  7482                           
  7483  001262  0100               	movlb	0	; () banked
  7484  001264  0100               	movlb	0	; () banked
  7485  001266  51BB               	movf	((OpenUSART@spbrg+1))&0ffh,w
  7486  001268  6EB0               	movwf	((c:4016)),c	;volatile
  7487                           	line	118
  7488                           	
  7489  00126A                     l18407:; BSR set to: 0
  7490                           
  7491  00126A  8AAC               	bsf	((c:4012)),c,5	;volatile
  7492                           	line	119
  7493                           	
  7494  00126C                     l18409:; BSR set to: 0
  7495                           
  7496  00126C  8EAB               	bsf	((c:4011)),c,7	;volatile
  7497                           	line	137
  7498                           	
  7499  00126E                     l18411:; BSR set to: 0
  7500                           
  7501  00126E  9C94               	bcf	((c:3988)),c,6	;volatile
  7502                           	
  7503  001270                     l18413:; BSR set to: 0
  7504                           
  7505  001270  8E94               	bsf	((c:3988)),c,7	;volatile
  7506                           	line	138
  7507                           	
  7508  001272                     l18415:; BSR set to: 0
  7509                           
  7510                           	
  7511  001272  A8AC               	btfss	((c:4012)),c,4	;volatile
  7512  001274  D001               	goto	u1271
  7513  001276  D001               	goto	u1270
  7514  001278                     u1271:
  7515  001278  D006               	goto	l16534
  7516  00127A                     u1270:
  7517                           	
  7518  00127A                     l18417:; BSR set to: 0
  7519                           
  7520                           	
  7521  00127A  BEAC               	btfsc	((c:4012)),c,7	;volatile
  7522  00127C  D001               	goto	u1281
  7523  00127E  D001               	goto	u1280
  7524  001280                     u1281:
  7525  001280  D002               	goto	l16534
  7526  001282                     u1280:
  7527                           	line	139
  7528                           	
  7529  001282                     l18419:; BSR set to: 0
  7530                           
  7531  001282  8C94               	bsf	((c:3988)),c,6	;volatile
  7532  001284  D000               	goto	l16534
  7533                           	
  7534  001286                     l16533:; BSR set to: 0
  7535                           
  7536                           	line	143
  7537                           	
  7538  001286                     l16534:; BSR set to: 0
  7539                           
  7540  001286  0012               	return
  7541                           	opt stack 0
  7542                           GLOBAL	__end_of_OpenUSART
  7543  001288                     	__end_of_OpenUSART:
  7544                           	signat	_OpenUSART,8312
  7545                           	global	_block_on_To_msgqueues
  7546                           
  7547 ;; *************** function _block_on_To_msgqueues *****************
  7548 ;; Defined at:
  7549 ;;		line 258 in file "../src/messages.c"
  7550 ;; Parameters:    Size  Location     Type
  7551 ;;		None
  7552 ;; Auto vars:     Size  Location     Type
  7553 ;;		None
  7554 ;; Return value:  Size  Location     Type
  7555 ;;		None               void
  7556 ;; Registers used:
  7557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7558 ;; Tracked objects:
  7559 ;;		On entry : 0/0
  7560 ;;		On exit  : 0/0
  7561 ;;		Unchanged: 0/0
  7562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7563 ;;      Params:         0       0       0       0       0
  7564 ;;      Locals:         0       0       0       0       0
  7565 ;;      Temps:          0       1       0       0       0
  7566 ;;      Totals:         0       1       0       0       0
  7567 ;;Total ram usage:        1 bytes
  7568 ;; Hardware stack levels used:    1
  7569 ;; Hardware stack levels required when called:   14
  7570 ;; This function calls:
  7571 ;;		_in_main
  7572 ;;		_check_msg
  7573 ;;		_Delay1KTCYx
  7574 ;; This function is called by:
  7575 ;;		_main
  7576 ;; This function uses a non-reentrant model
  7577 ;;
  7578                           psect	text9,class=CODE,space=0,reloc=2
  7579                           global __ptext9
  7580  000F8A                     __ptext9:
  7581                           psect	text9
  7582                           	file	"../src/messages.c"
  7583                           	line	258
  7584                           	global	__size_of_block_on_To_msgqueues
  7585  0000                     	__size_of_block_on_To_msgqueues	equ	__end_of_block_on_To_msgqueues-_block_on_To_msgqueu
                                 es
  7586                           	
  7587  000F8A                     _block_on_To_msgqueues:; BSR set to: 0
  7588                           
  7589                           	opt	stack 16
  7590                           	line	259
  7591                           	
  7592  000F8A                     l18421:
  7593                           ;messages.c: 259: if (!in_main()) {
  7594  000F8A  0100               	movlb	0	; () banked
  7595  000F8C  ECE5  F00B         	call	_in_main	;wreg free
  7596  000F90  0100               	movlb	0	; () banked
  7597  000F92  0100               	movlb	0	; () banked
  7598  000F94  51BE               	movf	(1+?_in_main)&0ffh,w
  7599  000F96  0100               	movlb	0	; () banked
  7600  000F98  11BD               	iorwf (0+?_in_main)&0ffh,w
  7601                           
  7602  000F9A  A4D8               	btfss	status,2
  7603  000F9C  D001               	goto	u1291
  7604  000F9E  D001               	goto	u1290
  7605  000FA0                     u1291:
  7606  000FA0  D002               	goto	l5534
  7607  000FA2                     u1290:
  7608  000FA2  D05C               	goto	l5535
  7609                           	line	260
  7610                           	
  7611  000FA4                     l18423:; BSR set to: 0
  7612                           
  7613                           ;messages.c: 260: return;
  7614  000FA4  D05B               	goto	l5535
  7615                           	line	261
  7616                           	
  7617  000FA6                     l5534:; BSR set to: 0
  7618                           
  7619                           	line	262
  7620                           ;messages.c: 261: }
  7621                           ;messages.c: 262: LATBbits.LATB3 = 1;
  7622  000FA6  868A               	bsf	((c:3978)),c,3	;volatile
  7623                           	line	263
  7624                           	
  7625  000FA8                     l18425:; BSR set to: 0
  7626                           
  7627                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  7628  000FA8  0100               	movlb	0	; () banked
  7629  000FAA  6FBF               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7630  000FAC  0E01               	movlw	low(01h)
  7631  000FAE  6E45               	movwf	((c:_MQ_Main_Willing_to_block)),c
  7632  000FB0  0100               	movlb	0	; () banked
  7633  000FB2  51BF               	movf	(??_block_on_To_msgqueues+0+0)&0ffh,w
  7634  000FB4  D000               	goto	l18427
  7635                           	line	264
  7636                           ;messages.c: 264: while (1) {
  7637                           	
  7638  000FB6                     l5536:; BSR set to: 0
  7639                           
  7640                           	line	265
  7641                           	
  7642  000FB6                     l18427:; BSR set to: 0
  7643                           
  7644                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  7645  000FB6  0101               	movlb	1	; () banked
  7646  000FB8  0E01               	movlw	high(_ToMainHigh_MQ)
  7647  000FBA  0100               	movlb	0	; () banked
  7648  000FBC  0100               	movlb	0	; () banked
  7649  000FBE  6FBA               	movwf	((?_check_msg+1))&0ffh
  7650  000FC0  0101               	movlb	1	; () banked
  7651  000FC2  0E36               	movlw	low(_ToMainHigh_MQ)
  7652  000FC4  0100               	movlb	0	; () banked
  7653  000FC6  6FB9               	movwf	((?_check_msg))&0ffh
  7654  000FC8  0100               	movlb	0	; () banked
  7655  000FCA  EC50  F00D         	call	_check_msg	;wreg free
  7656  000FCE  0900               	iorlw	0
  7657  000FD0  B4D8               	btfsc	status,2
  7658  000FD2  D001               	goto	u1301
  7659  000FD4  D001               	goto	u1300
  7660  000FD6                     u1301:
  7661  000FD6  D009               	goto	l18435
  7662  000FD8                     u1300:
  7663                           	line	266
  7664                           	
  7665  000FD8                     l18429:
  7666                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  7667  000FD8  0100               	movlb	0	; () banked
  7668  000FDA  6FBF               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7669  000FDC  0E00               	movlw	low(0)
  7670  000FDE  6E45               	movwf	((c:_MQ_Main_Willing_to_block)),c
  7671  000FE0  0100               	movlb	0	; () banked
  7672  000FE2  51BF               	movf	(??_block_on_To_msgqueues+0+0)&0ffh,w
  7673                           	line	267
  7674                           	
  7675  000FE4                     l18431:; BSR set to: 0
  7676                           
  7677                           ;messages.c: 267: LATBbits.LATB3 = 0;
  7678  000FE4  968A               	bcf	((c:3978)),c,3	;volatile
  7679  000FE6  D03A               	goto	l5535
  7680                           	line	268
  7681                           	
  7682  000FE8                     l18433:; BSR set to: 0
  7683                           
  7684                           ;messages.c: 268: return;
  7685  000FE8  D039               	goto	l5535
  7686                           	line	269
  7687                           	
  7688  000FEA                     l5537:; BSR set to: 0
  7689                           
  7690                           	line	270
  7691                           	
  7692  000FEA                     l18435:
  7693                           ;messages.c: 269: }
  7694                           ;messages.c: 270: if (check_msg(&ToMainLow_MQ)) {
  7695  000FEA  0101               	movlb	1	; () banked
  7696  000FEC  0E01               	movlw	high(_ToMainLow_MQ)
  7697  000FEE  0100               	movlb	0	; () banked
  7698  000FF0  0100               	movlb	0	; () banked
  7699  000FF2  6FBA               	movwf	((?_check_msg+1))&0ffh
  7700  000FF4  0101               	movlb	1	; () banked
  7701  000FF6  0E6C               	movlw	low(_ToMainLow_MQ)
  7702  000FF8  0100               	movlb	0	; () banked
  7703  000FFA  6FB9               	movwf	((?_check_msg))&0ffh
  7704  000FFC  0100               	movlb	0	; () banked
  7705  000FFE  EC50  F00D         	call	_check_msg	;wreg free
  7706  001002  0900               	iorlw	0
  7707  001004  B4D8               	btfsc	status,2
  7708  001006  D001               	goto	u1311
  7709  001008  D001               	goto	u1310
  7710  00100A                     u1311:
  7711  00100A  D009               	goto	l18443
  7712  00100C                     u1310:
  7713                           	line	271
  7714                           	
  7715  00100C                     l18437:
  7716                           ;messages.c: 271: MQ_Main_Willing_to_block = 0;
  7717  00100C  0100               	movlb	0	; () banked
  7718  00100E  6FBF               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7719  001010  0E00               	movlw	low(0)
  7720  001012  6E45               	movwf	((c:_MQ_Main_Willing_to_block)),c
  7721  001014  0100               	movlb	0	; () banked
  7722  001016  51BF               	movf	(??_block_on_To_msgqueues+0+0)&0ffh,w
  7723                           	line	272
  7724                           	
  7725  001018                     l18439:; BSR set to: 0
  7726                           
  7727                           ;messages.c: 272: LATBbits.LATB3 = 0;
  7728  001018  968A               	bcf	((c:3978)),c,3	;volatile
  7729  00101A  D020               	goto	l5535
  7730                           	line	273
  7731                           	
  7732  00101C                     l18441:; BSR set to: 0
  7733                           
  7734                           ;messages.c: 273: return;
  7735  00101C  D01F               	goto	l5535
  7736                           	line	274
  7737                           	
  7738  00101E                     l5538:; BSR set to: 0
  7739                           
  7740                           	line	275
  7741                           	
  7742  00101E                     l18443:
  7743                           ;messages.c: 274: }
  7744                           ;messages.c: 275: Delay1KTCYx(10);
  7745  00101E  0100               	movlb	0	; () banked
  7746  001020  6FBF               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7747  001022  0E0A               	movlw	low(0Ah)
  7748  001024  0100               	movlb	0	; () banked
  7749  001026  0100               	movlb	0	; () banked
  7750  001028  6FB9               	movwf	((?_Delay1KTCYx))&0ffh
  7751  00102A  0100               	movlb	0	; () banked
  7752  00102C  51BF               	movf	(??_block_on_To_msgqueues+0+0)&0ffh,w
  7753  00102E  0100               	movlb	0	; () banked
  7754  001030  ECB6  F00E         	call	_Delay1KTCYx	;wreg free
  7755                           	line	276
  7756                           	
  7757  001034                     l18445:
  7758                           ;messages.c: 276: LATBbits.LATB3 = !LATBbits.LATB3;
  7759                           	
  7760  001034  A68A               	btfss	((c:3978)),c,3	;volatile
  7761  001036  D001               	goto	u1321
  7762  001038  D002               	goto	u1320
  7763  00103A                     u1321:
  7764  00103A  0E01               	movlw	1
  7765  00103C  D001               	goto	u1326
  7766  00103E                     u1320:
  7767  00103E  0E00               	movlw	0
  7768  001040                     u1326:
  7769  001040  0100               	movlb	0	; () banked
  7770  001042  6FBF               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7771  001044  0100               	movlb	0	; () banked
  7772  001046  47BF               	rlncf	((??_block_on_To_msgqueues+0+0))&0ffh
  7773  001048  47BF               	rlncf	((??_block_on_To_msgqueues+0+0))&0ffh
  7774  00104A  47BF               	rlncf	((??_block_on_To_msgqueues+0+0))&0ffh
  7775  00104C  508A               	movf	((c:3978)),c,w	;volatile
  7776  00104E  0100               	movlb	0	; () banked
  7777  001050  19BF               	xorwf	((??_block_on_To_msgqueues+0+0))&0ffh,w
  7778  001052  0BF7               	andlw	not (((1<<1)-1)<<3)
  7779  001054  19BF               	xorwf	((??_block_on_To_msgqueues+0+0))&0ffh,w
  7780  001056  6E8A               	movwf	((c:3978)),c	;volatile
  7781  001058  D7AE               	goto	l18427
  7782                           	line	277
  7783                           	
  7784  00105A                     l5539:; BSR set to: 0
  7785                           
  7786                           	line	264
  7787  00105A  D7AD               	goto	l18427
  7788                           	
  7789  00105C                     l5540:; BSR set to: 0
  7790                           
  7791                           	line	278
  7792                           	
  7793  00105C                     l5535:; BSR set to: 0
  7794                           
  7795  00105C  0012               	return
  7796                           	opt stack 0
  7797                           GLOBAL	__end_of_block_on_To_msgqueues
  7798  00105E                     	__end_of_block_on_To_msgqueues:
  7799                           	signat	_block_on_To_msgqueues,88
  7800                           	global	_in_main
  7801                           
  7802 ;; *************** function _in_main *****************
  7803 ;; Defined at:
  7804 ;;		line 40 in file "../src/interrupts.c"
  7805 ;; Parameters:    Size  Location     Type
  7806 ;;		None
  7807 ;; Auto vars:     Size  Location     Type
  7808 ;;		None
  7809 ;; Return value:  Size  Location     Type
  7810 ;;                  2   61[BANK0 ] int 
  7811 ;; Registers used:
  7812 ;;		wreg, status,2, status,0, cstack
  7813 ;; Tracked objects:
  7814 ;;		On entry : 0/0
  7815 ;;		On exit  : 0/0
  7816 ;;		Unchanged: 0/0
  7817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7818 ;;      Params:         0       2       0       0       0
  7819 ;;      Locals:         0       0       0       0       0
  7820 ;;      Temps:          0       0       0       0       0
  7821 ;;      Totals:         0       2       0       0       0
  7822 ;;Total ram usage:        2 bytes
  7823 ;; Hardware stack levels used:    1
  7824 ;; Hardware stack levels required when called:   13
  7825 ;; This function calls:
  7826 ;;		_in_low_int
  7827 ;;		_in_high_int
  7828 ;; This function is called by:
  7829 ;;		_block_on_To_msgqueues
  7830 ;; This function uses a non-reentrant model
  7831 ;;
  7832                           psect	text10,class=CODE,space=0,reloc=2
  7833                           global __ptext10
  7834  0017CA                     __ptext10:
  7835                           psect	text10
  7836                           	file	"../src/interrupts.c"
  7837                           	line	40
  7838                           	global	__size_of_in_main
  7839  0000                     	__size_of_in_main	equ	__end_of_in_main-_in_main
  7840                           	
  7841  0017CA                     _in_main:; BSR set to: 0
  7842                           
  7843                           	opt	stack 16
  7844                           	line	41
  7845                           	
  7846  0017CA                     l18195:
  7847                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  7848  0017CA  0100               	movlb	0	; () banked
  7849  0017CC  ECB6  F00B         	call	_in_low_int	;wreg free
  7850  0017D0  0100               	movlb	0	; () banked
  7851  0017D2  0100               	movlb	0	; () banked
  7852  0017D4  51BC               	movf	(1+?_in_low_int)&0ffh,w
  7853  0017D6  0100               	movlb	0	; () banked
  7854  0017D8  11BB               	iorwf (0+?_in_low_int)&0ffh,w
  7855                           
  7856  0017DA  A4D8               	btfss	status,2
  7857  0017DC  D001               	goto	u1041
  7858  0017DE  D001               	goto	u1040
  7859  0017E0                     u1041:
  7860  0017E0  D016               	goto	l18205
  7861  0017E2                     u1040:
  7862                           	
  7863  0017E2                     l18197:; BSR set to: 0
  7864                           
  7865  0017E2  0100               	movlb	0	; () banked
  7866  0017E4  ECAC  F00E         	call	_in_high_int	;wreg free
  7867  0017E8  0100               	movlb	0	; () banked
  7868  0017EA  0100               	movlb	0	; () banked
  7869  0017EC  51BA               	movf	(1+?_in_high_int)&0ffh,w
  7870  0017EE  0100               	movlb	0	; () banked
  7871  0017F0  11B9               	iorwf (0+?_in_high_int)&0ffh,w
  7872                           
  7873  0017F2  A4D8               	btfss	status,2
  7874  0017F4  D001               	goto	u1051
  7875  0017F6  D001               	goto	u1050
  7876  0017F8                     u1051:
  7877  0017F8  D00A               	goto	l18205
  7878  0017FA                     u1050:
  7879                           	line	42
  7880                           	
  7881  0017FA                     l18199:; BSR set to: 0
  7882                           
  7883                           ;interrupts.c: 42: return (1);
  7884  0017FA  0E00               	movlw	high(01h)
  7885  0017FC  0100               	movlb	0	; () banked
  7886  0017FE  0100               	movlb	0	; () banked
  7887  001800  6FBE               	movwf	((?_in_main+1))&0ffh
  7888  001802  0E01               	movlw	low(01h)
  7889  001804  0100               	movlb	0	; () banked
  7890  001806  6FBD               	movwf	((?_in_main))&0ffh
  7891  001808  D00B               	goto	l1816
  7892                           	
  7893  00180A                     l18201:; BSR set to: 0
  7894                           
  7895  00180A  D00A               	goto	l1816
  7896                           	line	43
  7897                           	
  7898  00180C                     l18203:; BSR set to: 0
  7899                           
  7900                           ;interrupts.c: 43: } else {
  7901  00180C  D009               	goto	l1816
  7902                           	
  7903  00180E                     l1815:; BSR set to: 0
  7904                           
  7905                           	line	44
  7906                           	
  7907  00180E                     l18205:; BSR set to: 0
  7908                           
  7909                           ;interrupts.c: 44: return (0);
  7910  00180E  0E00               	movlw	high(0)
  7911  001810  0100               	movlb	0	; () banked
  7912  001812  0100               	movlb	0	; () banked
  7913  001814  6FBE               	movwf	((?_in_main+1))&0ffh
  7914  001816  0E00               	movlw	low(0)
  7915  001818  0100               	movlb	0	; () banked
  7916  00181A  6FBD               	movwf	((?_in_main))&0ffh
  7917  00181C  D001               	goto	l1816
  7918                           	
  7919  00181E                     l18207:; BSR set to: 0
  7920                           
  7921  00181E  D000               	goto	l1816
  7922                           	line	45
  7923                           	
  7924  001820                     l1817:; BSR set to: 0
  7925                           
  7926                           	line	46
  7927                           	
  7928  001820                     l1816:; BSR set to: 0
  7929                           
  7930  001820  0012               	return
  7931                           	opt stack 0
  7932                           GLOBAL	__end_of_in_main
  7933  001822                     	__end_of_in_main:
  7934                           	signat	_in_main,90
  7935                           	global	_in_low_int
  7936                           
  7937 ;; *************** function _in_low_int *****************
  7938 ;; Defined at:
  7939 ;;		line 30 in file "../src/interrupts.c"
  7940 ;; Parameters:    Size  Location     Type
  7941 ;;		None
  7942 ;; Auto vars:     Size  Location     Type
  7943 ;;		None
  7944 ;; Return value:  Size  Location     Type
  7945 ;;                  2   59[BANK0 ] int 
  7946 ;; Registers used:
  7947 ;;		wreg, status,2, status,0, cstack
  7948 ;; Tracked objects:
  7949 ;;		On entry : 0/0
  7950 ;;		On exit  : 0/0
  7951 ;;		Unchanged: 0/0
  7952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7953 ;;      Params:         0       2       0       0       0
  7954 ;;      Locals:         0       0       0       0       0
  7955 ;;      Temps:          0       0       0       0       0
  7956 ;;      Totals:         0       2       0       0       0
  7957 ;;Total ram usage:        2 bytes
  7958 ;; Hardware stack levels used:    1
  7959 ;; Hardware stack levels required when called:   12
  7960 ;; This function calls:
  7961 ;;		_in_high_int
  7962 ;; This function is called by:
  7963 ;;		_in_main
  7964 ;; This function uses a non-reentrant model
  7965 ;;
  7966                           psect	text11,class=CODE,space=0,reloc=2
  7967                           global __ptext11
  7968  00176C                     __ptext11:
  7969                           psect	text11
  7970                           	file	"../src/interrupts.c"
  7971                           	line	30
  7972                           	global	__size_of_in_low_int
  7973  0000                     	__size_of_in_low_int	equ	__end_of_in_low_int-_in_low_int
  7974                           	
  7975  00176C                     _in_low_int:; BSR set to: 0
  7976                           
  7977                           	opt	stack 16
  7978                           	line	31
  7979                           	
  7980  00176C                     l18175:
  7981                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  7982                           	
  7983  00176C  ACF2               	btfss	((c:4082)),c,6	;volatile
  7984  00176E  D001               	goto	u1021
  7985  001770  D001               	goto	u1020
  7986  001772                     u1021:
  7987  001772  D00A               	goto	l18183
  7988  001774                     u1020:
  7989                           	line	32
  7990                           	
  7991  001774                     l18177:
  7992                           ;interrupts.c: 32: return (0);
  7993  001774  0E00               	movlw	high(0)
  7994  001776  0100               	movlb	0	; () banked
  7995  001778  0100               	movlb	0	; () banked
  7996  00177A  6FBC               	movwf	((?_in_low_int+1))&0ffh
  7997  00177C  0E00               	movlw	low(0)
  7998  00177E  0100               	movlb	0	; () banked
  7999  001780  6FBB               	movwf	((?_in_low_int))&0ffh
  8000  001782  D022               	goto	l1809
  8001                           	
  8002  001784                     l18179:; BSR set to: 0
  8003                           
  8004  001784  D021               	goto	l1809
  8005                           	line	33
  8006                           	
  8007  001786                     l18181:; BSR set to: 0
  8008                           
  8009                           ;interrupts.c: 33: } else if (in_high_int()) {
  8010  001786  D020               	goto	l1809
  8011                           	
  8012  001788                     l1808:; BSR set to: 0
  8013                           
  8014                           	
  8015  001788                     l18183:
  8016  001788  0100               	movlb	0	; () banked
  8017  00178A  ECAC  F00E         	call	_in_high_int	;wreg free
  8018  00178E  0100               	movlb	0	; () banked
  8019  001790  0100               	movlb	0	; () banked
  8020  001792  51BA               	movf	(1+?_in_high_int)&0ffh,w
  8021  001794  0100               	movlb	0	; () banked
  8022  001796  11B9               	iorwf (0+?_in_high_int)&0ffh,w
  8023                           
  8024  001798  B4D8               	btfsc	status,2
  8025  00179A  D001               	goto	u1031
  8026  00179C  D001               	goto	u1030
  8027  00179E                     u1031:
  8028  00179E  D00A               	goto	l18191
  8029  0017A0                     u1030:
  8030                           	line	34
  8031                           	
  8032  0017A0                     l18185:; BSR set to: 0
  8033                           
  8034                           ;interrupts.c: 34: return (0);
  8035  0017A0  0E00               	movlw	high(0)
  8036  0017A2  0100               	movlb	0	; () banked
  8037  0017A4  0100               	movlb	0	; () banked
  8038  0017A6  6FBC               	movwf	((?_in_low_int+1))&0ffh
  8039  0017A8  0E00               	movlw	low(0)
  8040  0017AA  0100               	movlb	0	; () banked
  8041  0017AC  6FBB               	movwf	((?_in_low_int))&0ffh
  8042  0017AE  D00C               	goto	l1809
  8043                           	
  8044  0017B0                     l18187:; BSR set to: 0
  8045                           
  8046  0017B0  D00B               	goto	l1809
  8047                           	line	35
  8048                           	
  8049  0017B2                     l18189:; BSR set to: 0
  8050                           
  8051                           ;interrupts.c: 35: } else {
  8052  0017B2  D00A               	goto	l1809
  8053                           	
  8054  0017B4                     l1811:; BSR set to: 0
  8055                           
  8056                           	line	36
  8057                           	
  8058  0017B4                     l18191:; BSR set to: 0
  8059                           
  8060                           ;interrupts.c: 36: return (1);
  8061  0017B4  0E00               	movlw	high(01h)
  8062  0017B6  0100               	movlb	0	; () banked
  8063  0017B8  0100               	movlb	0	; () banked
  8064  0017BA  6FBC               	movwf	((?_in_low_int+1))&0ffh
  8065  0017BC  0E01               	movlw	low(01h)
  8066  0017BE  0100               	movlb	0	; () banked
  8067  0017C0  6FBB               	movwf	((?_in_low_int))&0ffh
  8068  0017C2  D002               	goto	l1809
  8069                           	
  8070  0017C4                     l18193:; BSR set to: 0
  8071                           
  8072  0017C4  D001               	goto	l1809
  8073                           	line	37
  8074                           	
  8075  0017C6                     l1812:; BSR set to: 0
  8076                           
  8077  0017C6  D000               	goto	l1809
  8078                           	
  8079  0017C8                     l1810:; BSR set to: 0
  8080                           
  8081                           	line	38
  8082                           	
  8083  0017C8                     l1809:; BSR set to: 0
  8084                           
  8085  0017C8  0012               	return
  8086                           	opt stack 0
  8087                           GLOBAL	__end_of_in_low_int
  8088  0017CA                     	__end_of_in_low_int:
  8089                           	signat	_in_low_int,90
  8090                           	global	_in_high_int
  8091                           
  8092 ;; *************** function _in_high_int *****************
  8093 ;; Defined at:
  8094 ;;		line 22 in file "../src/interrupts.c"
  8095 ;; Parameters:    Size  Location     Type
  8096 ;;		None
  8097 ;; Auto vars:     Size  Location     Type
  8098 ;;		None
  8099 ;; Return value:  Size  Location     Type
  8100 ;;                  2   57[BANK0 ] int 
  8101 ;; Registers used:
  8102 ;;		wreg, status,2
  8103 ;; Tracked objects:
  8104 ;;		On entry : 0/0
  8105 ;;		On exit  : 0/0
  8106 ;;		Unchanged: 0/0
  8107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8108 ;;      Params:         0       2       0       0       0
  8109 ;;      Locals:         0       0       0       0       0
  8110 ;;      Temps:          0       0       0       0       0
  8111 ;;      Totals:         0       2       0       0       0
  8112 ;;Total ram usage:        2 bytes
  8113 ;; Hardware stack levels used:    1
  8114 ;; Hardware stack levels required when called:   11
  8115 ;; This function calls:
  8116 ;;		Nothing
  8117 ;; This function is called by:
  8118 ;;		_in_low_int
  8119 ;;		_in_main
  8120 ;; This function uses a non-reentrant model
  8121 ;;
  8122                           psect	text12,class=CODE,space=0,reloc=2
  8123                           global __ptext12
  8124  001D58                     __ptext12:
  8125                           psect	text12
  8126                           	file	"../src/interrupts.c"
  8127                           	line	22
  8128                           	global	__size_of_in_high_int
  8129  0000                     	__size_of_in_high_int	equ	__end_of_in_high_int-_in_high_int
  8130                           	
  8131  001D58                     _in_high_int:; BSR set to: 0
  8132                           
  8133                           	opt	stack 17
  8134                           	line	23
  8135                           	
  8136  001D58                     l18171:
  8137                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  8138                           	
  8139  001D58  0E00               	movlw	0
  8140  001D5A  AEF2               	btfss	((c:4082)),c,7	;volatile
  8141  001D5C  0E01               	movlw	1
  8142  001D5E  0100               	movlb	0	; () banked
  8143  001D60  0100               	movlb	0	; () banked
  8144  001D62  6FB9               	movwf	((?_in_high_int))&0ffh
  8145  001D64  0100               	movlb	0	; () banked
  8146  001D66  6BBA               	clrf	((?_in_high_int+1))&0ffh
  8147  001D68  D000               	goto	l1802
  8148                           	
  8149  001D6A                     l18173:; BSR set to: 0
  8150                           
  8151                           	line	24
  8152                           	
  8153  001D6A                     l1802:; BSR set to: 0
  8154                           
  8155  001D6A  0012               	return
  8156                           	opt stack 0
  8157                           GLOBAL	__end_of_in_high_int
  8158  001D6C                     	__end_of_in_high_int:
  8159                           	signat	_in_high_int,90
  8160                           	global	_ToMainHigh_recvmsg
  8161                           
  8162 ;; *************** function _ToMainHigh_recvmsg *****************
  8163 ;; Defined at:
  8164 ;;		line 135 in file "../src/messages.c"
  8165 ;; Parameters:    Size  Location     Type
  8166 ;;  maxlength       1   12[BANK1 ] unsigned char 
  8167 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  8168 ;;		 -> main@msgtype(1), 
  8169 ;;  data            2   15[BANK1 ] PTR void 
  8170 ;;		 -> main@msgbuffer(11), 
  8171 ;; Auto vars:     Size  Location     Type
  8172 ;;		None
  8173 ;; Return value:  Size  Location     Type
  8174 ;;                  1    wreg      char 
  8175 ;; Registers used:
  8176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8177 ;; Tracked objects:
  8178 ;;		On entry : 0/0
  8179 ;;		On exit  : 0/0
  8180 ;;		Unchanged: 0/0
  8181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8182 ;;      Params:         0       0       5       0       0
  8183 ;;      Locals:         0       0       0       0       0
  8184 ;;      Temps:          0       0       0       0       0
  8185 ;;      Totals:         0       0       5       0       0
  8186 ;;Total ram usage:        5 bytes
  8187 ;; Hardware stack levels used:    1
  8188 ;; Hardware stack levels required when called:   13
  8189 ;; This function calls:
  8190 ;;		_recv_msg
  8191 ;; This function is called by:
  8192 ;;		_main
  8193 ;; This function uses a non-reentrant model
  8194 ;;
  8195                           psect	text13,class=CODE,space=0,reloc=2
  8196                           global __ptext13
  8197  001B74                     __ptext13:
  8198                           psect	text13
  8199                           	file	"../src/messages.c"
  8200                           	line	135
  8201                           	global	__size_of_ToMainHigh_recvmsg
  8202  0000                     	__size_of_ToMainHigh_recvmsg	equ	__end_of_ToMainHigh_recvmsg-_ToMainHigh_recvmsg
  8203                           	
  8204  001B74                     _ToMainHigh_recvmsg:; BSR set to: 0
  8205                           
  8206                           	opt	stack 17
  8207                           	line	141
  8208                           	
  8209  001B74                     l19147:
  8210                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  8211  001B74  0101               	movlb	1	; () banked
  8212  001B76  0E01               	movlw	high(_ToMainHigh_MQ)
  8213  001B78  0101               	movlb	1	; () banked
  8214  001B7A  0101               	movlb	1	; () banked
  8215  001B7C  6FA3               	movwf	((?_recv_msg+1))&0ffh
  8216  001B7E  0101               	movlb	1	; () banked
  8217  001B80  0E36               	movlw	low(_ToMainHigh_MQ)
  8218  001B82  0101               	movlb	1	; () banked
  8219  001B84  6FA2               	movwf	((?_recv_msg))&0ffh
  8220  001B86  C1AE  F1A4         	movff	(ToMainHigh_recvmsg@maxlength),0+(?_recv_msg+02h)
  8221  001B8A  C1AF  F1A5         	movff	(ToMainHigh_recvmsg@msgtype),0+(?_recv_msg+03h)
  8222  001B8E  C1B0  F1A6         	movff	(ToMainHigh_recvmsg@msgtype+1),1+(?_recv_msg+03h)
  8223  001B92  C1B1  F1A7         	movff	(ToMainHigh_recvmsg@data),0+(?_recv_msg+05h)
  8224  001B96  C1B2  F1A8         	movff	(ToMainHigh_recvmsg@data+1),1+(?_recv_msg+05h)
  8225  001B9A  0101               	movlb	1	; () banked
  8226  001B9C  EC02  F005         	call	_recv_msg	;wreg free
  8227  001BA0  D000               	goto	l5496
  8228                           	
  8229  001BA2                     l19149:
  8230                           	line	142
  8231                           	
  8232  001BA2                     l5496:
  8233  001BA2  0012               	return
  8234                           	opt stack 0
  8235                           GLOBAL	__end_of_ToMainHigh_recvmsg
  8236  001BA4                     	__end_of_ToMainHigh_recvmsg:
  8237                           	signat	_ToMainHigh_recvmsg,12409
  8238                           	global	_timer0_lthread
  8239                           
  8240 ;; *************** function _timer0_lthread *****************
  8241 ;; Defined at:
  8242 ;;		line 9 in file "../src/timer0_thread.c"
  8243 ;; Parameters:    Size  Location     Type
  8244 ;;  tptr            2   57[BANK0 ] PTR struct __timer0_thre
  8245 ;;		 -> main@t0thread_data(2), 
  8246 ;;  msgtype         2   59[BANK0 ] int 
  8247 ;;  length          2   61[BANK0 ] int 
  8248 ;;  msgbuffer       2   63[BANK0 ] PTR unsigned char 
  8249 ;;		 -> main@msgbuffer(11), 
  8250 ;; Auto vars:     Size  Location     Type
  8251 ;;  msgval          2   65[BANK0 ] PTR unsigned int 
  8252 ;;		 -> main@msgbuffer(11), 
  8253 ;; Return value:  Size  Location     Type
  8254 ;;                  2   57[BANK0 ] int 
  8255 ;; Registers used:
  8256 ;;		None
  8257 ;; Tracked objects:
  8258 ;;		On entry : 0/0
  8259 ;;		On exit  : 0/0
  8260 ;;		Unchanged: 0/0
  8261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8262 ;;      Params:         0       8       0       0       0
  8263 ;;      Locals:         0       2       0       0       0
  8264 ;;      Temps:          0       0       0       0       0
  8265 ;;      Totals:         0      10       0       0       0
  8266 ;;Total ram usage:       10 bytes
  8267 ;; Hardware stack levels used:    1
  8268 ;; Hardware stack levels required when called:   11
  8269 ;; This function calls:
  8270 ;;		Nothing
  8271 ;; This function is called by:
  8272 ;;		_main
  8273 ;; This function uses a non-reentrant model
  8274 ;;
  8275                           psect	text14,class=CODE,space=0,reloc=2
  8276                           global __ptext14
  8277  001DD0                     __ptext14:
  8278                           psect	text14
  8279                           	file	"../src/timer0_thread.c"
  8280                           	line	9
  8281                           	global	__size_of_timer0_lthread
  8282  0000                     	__size_of_timer0_lthread	equ	__end_of_timer0_lthread-_timer0_lthread
  8283                           	
  8284  001DD0                     _timer0_lthread:
  8285                           	opt	stack 19
  8286                           	line	12
  8287                           	
  8288  001DD0                     l18451:
  8289                           ;timer0_thread.c: 10: unsigned int *msgval;
  8290                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  8291  001DD0  C0BF  F0C1         	movff	(timer0_lthread@msgbuffer),(timer0_lthread@msgval)
  8292  001DD4  C0C0  F0C2         	movff	(timer0_lthread@msgbuffer+1),(timer0_lthread@msgval+1)
  8293                           	line	16
  8294                           	
  8295  001DD8                     l11026:
  8296  001DD8  0012               	return
  8297                           	opt stack 0
  8298                           GLOBAL	__end_of_timer0_lthread
  8299  001DDA                     	__end_of_timer0_lthread:
  8300                           	signat	_timer0_lthread,16506
  8301                           	global	_ToMainLow_recvmsg
  8302                           
  8303 ;; *************** function _ToMainLow_recvmsg *****************
  8304 ;; Defined at:
  8305 ;;		line 112 in file "../src/messages.c"
  8306 ;; Parameters:    Size  Location     Type
  8307 ;;  maxlength       1   12[BANK1 ] unsigned char 
  8308 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  8309 ;;		 -> main@msgtype(1), 
  8310 ;;  data            2   15[BANK1 ] PTR void 
  8311 ;;		 -> main@msgbuffer(11), 
  8312 ;; Auto vars:     Size  Location     Type
  8313 ;;		None
  8314 ;; Return value:  Size  Location     Type
  8315 ;;                  1    wreg      char 
  8316 ;; Registers used:
  8317 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8318 ;; Tracked objects:
  8319 ;;		On entry : 0/0
  8320 ;;		On exit  : 0/0
  8321 ;;		Unchanged: 0/0
  8322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8323 ;;      Params:         0       0       5       0       0
  8324 ;;      Locals:         0       0       0       0       0
  8325 ;;      Temps:          0       0       0       0       0
  8326 ;;      Totals:         0       0       5       0       0
  8327 ;;Total ram usage:        5 bytes
  8328 ;; Hardware stack levels used:    1
  8329 ;; Hardware stack levels required when called:   13
  8330 ;; This function calls:
  8331 ;;		_recv_msg
  8332 ;; This function is called by:
  8333 ;;		_main
  8334 ;; This function uses a non-reentrant model
  8335 ;;
  8336                           psect	text15,class=CODE,space=0,reloc=2
  8337                           global __ptext15
  8338  001BA4                     __ptext15:
  8339                           psect	text15
  8340                           	file	"../src/messages.c"
  8341                           	line	112
  8342                           	global	__size_of_ToMainLow_recvmsg
  8343  0000                     	__size_of_ToMainLow_recvmsg	equ	__end_of_ToMainLow_recvmsg-_ToMainLow_recvmsg
  8344                           	
  8345  001BA4                     _ToMainLow_recvmsg:
  8346                           	opt	stack 17
  8347                           	line	118
  8348                           	
  8349  001BA4                     l19151:
  8350                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  8351  001BA4  0101               	movlb	1	; () banked
  8352  001BA6  0E01               	movlw	high(_ToMainLow_MQ)
  8353  001BA8  0101               	movlb	1	; () banked
  8354  001BAA  0101               	movlb	1	; () banked
  8355  001BAC  6FA3               	movwf	((?_recv_msg+1))&0ffh
  8356  001BAE  0101               	movlb	1	; () banked
  8357  001BB0  0E6C               	movlw	low(_ToMainLow_MQ)
  8358  001BB2  0101               	movlb	1	; () banked
  8359  001BB4  6FA2               	movwf	((?_recv_msg))&0ffh
  8360  001BB6  C1AE  F1A4         	movff	(ToMainLow_recvmsg@maxlength),0+(?_recv_msg+02h)
  8361  001BBA  C1AF  F1A5         	movff	(ToMainLow_recvmsg@msgtype),0+(?_recv_msg+03h)
  8362  001BBE  C1B0  F1A6         	movff	(ToMainLow_recvmsg@msgtype+1),1+(?_recv_msg+03h)
  8363  001BC2  C1B1  F1A7         	movff	(ToMainLow_recvmsg@data),0+(?_recv_msg+05h)
  8364  001BC6  C1B2  F1A8         	movff	(ToMainLow_recvmsg@data+1),1+(?_recv_msg+05h)
  8365  001BCA  0101               	movlb	1	; () banked
  8366  001BCC  EC02  F005         	call	_recv_msg	;wreg free
  8367  001BD0  D000               	goto	l5488
  8368                           	
  8369  001BD2                     l19153:
  8370                           	line	119
  8371                           	
  8372  001BD2                     l5488:
  8373  001BD2  0012               	return
  8374                           	opt stack 0
  8375                           GLOBAL	__end_of_ToMainLow_recvmsg
  8376  001BD4                     	__end_of_ToMainLow_recvmsg:
  8377                           	signat	_ToMainLow_recvmsg,12409
  8378                           	global	_timer1_lthread
  8379                           
  8380 ;; *************** function _timer1_lthread *****************
  8381 ;; Defined at:
  8382 ;;		line 25 in file "../src/timer1_thread.c"
  8383 ;; Parameters:    Size  Location     Type
  8384 ;;  tptr            2   57[BANK0 ] PTR struct __timer1_thre
  8385 ;;		 -> main@t1thread_data(2), 
  8386 ;;  msgtype         2   59[BANK0 ] int 
  8387 ;;  length          2   61[BANK0 ] int 
  8388 ;;  msgbuffer       2   63[BANK0 ] PTR unsigned char 
  8389 ;;		 -> main@msgbuffer(11), 
  8390 ;; Auto vars:     Size  Location     Type
  8391 ;;		None
  8392 ;; Return value:  Size  Location     Type
  8393 ;;                  2   57[BANK0 ] int 
  8394 ;; Registers used:
  8395 ;;		wreg, fsr2l, fsr2h, cstack
  8396 ;; Tracked objects:
  8397 ;;		On entry : 0/0
  8398 ;;		On exit  : 0/0
  8399 ;;		Unchanged: 0/0
  8400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8401 ;;      Params:         0       8       0       0       0
  8402 ;;      Locals:         0       0       0       0       0
  8403 ;;      Temps:          0       2       0       0       0
  8404 ;;      Totals:         0      10       0       0       0
  8405 ;;Total ram usage:       10 bytes
  8406 ;; Hardware stack levels used:    1
  8407 ;; Hardware stack levels required when called:   12
  8408 ;; This function calls:
  8409 ;;		_ConvertADC
  8410 ;; This function is called by:
  8411 ;;		_main
  8412 ;; This function uses a non-reentrant model
  8413 ;;
  8414                           psect	text16,class=CODE,space=0,reloc=2
  8415                           global __ptext16
  8416  001C8C                     __ptext16:
  8417                           psect	text16
  8418                           	file	"../src/timer1_thread.c"
  8419                           	line	25
  8420                           	global	__size_of_timer1_lthread
  8421  0000                     	__size_of_timer1_lthread	equ	__end_of_timer1_lthread-_timer1_lthread
  8422                           	
  8423  001C8C                     _timer1_lthread:
  8424                           	opt	stack 18
  8425                           	line	27
  8426                           	
  8427  001C8C                     l18457:
  8428                           ;timer1_thread.c: 27: tptr->timerval = msgbuffer[0];
  8429  001C8C  C0BF  FFD9         	movff	(timer1_lthread@msgbuffer),fsr2l
  8430  001C90  C0C0  FFDA         	movff	(timer1_lthread@msgbuffer+1),fsr2h
  8431  001C94  50DF               	movf	indf2,w
  8432  001C96  0100               	movlb	0	; () banked
  8433  001C98  6FC1               	movwf	(??_timer1_lthread+0+0)&0ffh
  8434  001C9A  6BC2               	clrf	(??_timer1_lthread+0+0+1)&0ffh
  8435                           
  8436  001C9C  C0B9  FFD9         	movff	(timer1_lthread@tptr),fsr2l
  8437  001CA0  C0BA  FFDA         	movff	(timer1_lthread@tptr+1),fsr2h
  8438  001CA4  C0C1  FFDE         	movff	??_timer1_lthread+0+0,postinc2
  8439  001CA8  C0C2  FFDD         	movff	??_timer1_lthread+0+1,postdec2
  8440                           
  8441                           	line	33
  8442                           	
  8443  001CAC                     l18459:; BSR set to: 0
  8444                           
  8445                           ;timer1_thread.c: 33: ConvertADC();
  8446  001CAC  ECF4  F00E         	call	_ConvertADC	;wreg free
  8447                           	line	35
  8448                           	
  8449  001CB0                     l12822:
  8450  001CB0  0012               	return
  8451                           	opt stack 0
  8452                           GLOBAL	__end_of_timer1_lthread
  8453  001CB2                     	__end_of_timer1_lthread:
  8454                           	signat	_timer1_lthread,16506
  8455                           	global	_FromMainLow_sendmsg
  8456                           
  8457 ;; *************** function _FromMainLow_sendmsg *****************
  8458 ;; Defined at:
  8459 ;;		line 150 in file "../src/messages.c"
  8460 ;; Parameters:    Size  Location     Type
  8461 ;;  length          1   11[BANK1 ] unsigned char 
  8462 ;;  msgtype         1   12[BANK1 ] unsigned char 
  8463 ;;  data            2   13[BANK1 ] PTR void 
  8464 ;;		 -> main@msgbuffer(11), 
  8465 ;; Auto vars:     Size  Location     Type
  8466 ;;		None
  8467 ;; Return value:  Size  Location     Type
  8468 ;;                  1    wreg      char 
  8469 ;; Registers used:
  8470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8471 ;; Tracked objects:
  8472 ;;		On entry : 0/0
  8473 ;;		On exit  : 0/0
  8474 ;;		Unchanged: 0/0
  8475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8476 ;;      Params:         0       0       4       0       0
  8477 ;;      Locals:         0       0       0       0       0
  8478 ;;      Temps:          0       0       0       0       0
  8479 ;;      Totals:         0       0       4       0       0
  8480 ;;Total ram usage:        4 bytes
  8481 ;; Hardware stack levels used:    1
  8482 ;; Hardware stack levels required when called:   13
  8483 ;; This function calls:
  8484 ;;		_send_msg
  8485 ;; This function is called by:
  8486 ;;		_main
  8487 ;; This function uses a non-reentrant model
  8488 ;;
  8489                           psect	text17,class=CODE,space=0,reloc=2
  8490                           global __ptext17
  8491  001C34                     __ptext17:
  8492                           psect	text17
  8493                           	file	"../src/messages.c"
  8494                           	line	150
  8495                           	global	__size_of_FromMainLow_sendmsg
  8496  0000                     	__size_of_FromMainLow_sendmsg	equ	__end_of_FromMainLow_sendmsg-_FromMainLow_sendmsg
  8497                           	
  8498  001C34                     _FromMainLow_sendmsg:
  8499                           	opt	stack 17
  8500                           	line	156
  8501                           	
  8502  001C34                     l19155:
  8503                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  8504                           ;	Return value of _FromMainLow_sendmsg is never used
  8505  001C34  0101               	movlb	1	; () banked
  8506  001C36  0E01               	movlw	high(_FromMainLow_MQ)
  8507  001C38  0101               	movlb	1	; () banked
  8508  001C3A  0101               	movlb	1	; () banked
  8509  001C3C  6FA3               	movwf	((?_send_msg+1))&0ffh
  8510  001C3E  0101               	movlb	1	; () banked
  8511  001C40  0E00               	movlw	low(_FromMainLow_MQ)
  8512  001C42  0101               	movlb	1	; () banked
  8513  001C44  6FA2               	movwf	((?_send_msg))&0ffh
  8514  001C46  C1AD  F1A4         	movff	(FromMainLow_sendmsg@length),0+(?_send_msg+02h)
  8515  001C4A  C1AE  F1A5         	movff	(FromMainLow_sendmsg@msgtype),0+(?_send_msg+03h)
  8516  001C4E  C1AF  F1A6         	movff	(FromMainLow_sendmsg@data),0+(?_send_msg+04h)
  8517  001C52  C1B0  F1A7         	movff	(FromMainLow_sendmsg@data+1),1+(?_send_msg+04h)
  8518  001C56  0101               	movlb	1	; () banked
  8519  001C58  ECC5  F006         	call	_send_msg	;wreg free
  8520  001C5C  D000               	goto	l5501
  8521                           	
  8522  001C5E                     l19157:
  8523                           	line	157
  8524                           	
  8525  001C5E                     l5501:
  8526  001C5E  0012               	return
  8527                           	opt stack 0
  8528                           GLOBAL	__end_of_FromMainLow_sendmsg
  8529  001C60                     	__end_of_FromMainLow_sendmsg:
  8530                           	signat	_FromMainLow_sendmsg,12409
  8531                           	global	_uart_lthread
  8532                           
  8533 ;; *************** function _uart_lthread *****************
  8534 ;; Defined at:
  8535 ;;		line 9 in file "../src/uart_thread.c"
  8536 ;; Parameters:    Size  Location     Type
  8537 ;;  uptr            2   57[BANK0 ] PTR struct __uart_thread
  8538 ;;		 -> main@uthread_data(2), 
  8539 ;;  msgtype         2   59[BANK0 ] int 
  8540 ;;  length          2   61[BANK0 ] int 
  8541 ;;  msgbuffer       2   63[BANK0 ] PTR unsigned char 
  8542 ;;		 -> main@msgbuffer(11), 
  8543 ;; Auto vars:     Size  Location     Type
  8544 ;;		None
  8545 ;; Return value:  Size  Location     Type
  8546 ;;                  2   57[BANK0 ] int 
  8547 ;; Registers used:
  8548 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8549 ;; Tracked objects:
  8550 ;;		On entry : 0/0
  8551 ;;		On exit  : 0/0
  8552 ;;		Unchanged: 0/0
  8553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8554 ;;      Params:         0       8       0       0       0
  8555 ;;      Locals:         0       0       0       0       0
  8556 ;;      Temps:          0       0       0       0       0
  8557 ;;      Totals:         0       8       0       0       0
  8558 ;;Total ram usage:        8 bytes
  8559 ;; Hardware stack levels used:    1
  8560 ;; Hardware stack levels required when called:   11
  8561 ;; This function calls:
  8562 ;;		Nothing
  8563 ;; This function is called by:
  8564 ;;		_main
  8565 ;; This function uses a non-reentrant model
  8566 ;;
  8567                           psect	text18,class=CODE,space=0,reloc=2
  8568                           global __ptext18
  8569  001878                     __ptext18:
  8570                           psect	text18
  8571                           	file	"../src/uart_thread.c"
  8572                           	line	9
  8573                           	global	__size_of_uart_lthread
  8574  0000                     	__size_of_uart_lthread	equ	__end_of_uart_lthread-_uart_lthread
  8575                           	
  8576  001878                     _uart_lthread:
  8577                           	opt	stack 19
  8578                           	line	10
  8579                           	
  8580  001878                     l18465:
  8581                           ;uart_thread.c: 10: if (msgtype == 30) {
  8582  001878  0100               	movlb	0	; () banked
  8583  00187A  0100               	movlb	0	; () banked
  8584  00187C  51BB               	movf	((uart_lthread@msgtype))&0ffh,w
  8585  00187E  0A1E               	xorlw	30
  8586  001880  11BC               	iorwf ((uart_lthread@msgtype+1))&0ffh,w
  8587                           
  8588  001882  A4D8               	btfss	status,2
  8589  001884  D001               	goto	u1331
  8590  001886  D001               	goto	u1330
  8591  001888                     u1331:
  8592  001888  D002               	goto	l18469
  8593  00188A                     u1330:
  8594  00188A  D01C               	goto	l14612
  8595                           	line	11
  8596                           	
  8597  00188C                     l18467:; BSR set to: 0
  8598                           
  8599                           ;uart_thread.c: 11: } else if (msgtype == 31) {
  8600  00188C  D01B               	goto	l14612
  8601                           	
  8602  00188E                     l14609:; BSR set to: 0
  8603                           
  8604                           	
  8605  00188E                     l18469:; BSR set to: 0
  8606                           
  8607  00188E  0100               	movlb	0	; () banked
  8608  001890  0100               	movlb	0	; () banked
  8609  001892  51BB               	movf	((uart_lthread@msgtype))&0ffh,w
  8610  001894  0A1F               	xorlw	31
  8611  001896  11BC               	iorwf ((uart_lthread@msgtype+1))&0ffh,w
  8612                           
  8613  001898  A4D8               	btfss	status,2
  8614  00189A  D001               	goto	u1341
  8615  00189C  D001               	goto	u1340
  8616  00189E                     u1341:
  8617  00189E  D012               	goto	l14612
  8618  0018A0                     u1340:
  8619                           	line	14
  8620                           	
  8621  0018A0                     l18471:; BSR set to: 0
  8622                           
  8623                           ;uart_thread.c: 14: msgbuffer[length] = '\0';
  8624  0018A0  0100               	movlb	0	; () banked
  8625  0018A2  0100               	movlb	0	; () banked
  8626  0018A4  51BD               	movf	((uart_lthread@length))&0ffh,w
  8627  0018A6  0100               	movlb	0	; () banked
  8628  0018A8  0100               	movlb	0	; () banked
  8629  0018AA  25BF               	addwf	((uart_lthread@msgbuffer))&0ffh,w
  8630  0018AC  6ED9               	movwf	c:fsr2l
  8631  0018AE  0100               	movlb	0	; () banked
  8632  0018B0  0100               	movlb	0	; () banked
  8633  0018B2  51BE               	movf	((uart_lthread@length+1))&0ffh,w
  8634  0018B4  0100               	movlb	0	; () banked
  8635  0018B6  0100               	movlb	0	; () banked
  8636  0018B8  21C0               	addwfc	((uart_lthread@msgbuffer+1))&0ffh,w
  8637  0018BA  6EDA               	movwf	1+c:fsr2l
  8638  0018BC  0E00               	movlw	low(0)
  8639  0018BE  6EDF               	movwf	indf2
  8640  0018C0  D001               	goto	l14612
  8641                           	line	16
  8642                           	
  8643  0018C2                     l14611:; BSR set to: 0
  8644                           
  8645  0018C2  D000               	goto	l14612
  8646                           	line	17
  8647                           	
  8648  0018C4                     l14610:; BSR set to: 0
  8649                           
  8650                           	
  8651  0018C4                     l14612:; BSR set to: 0
  8652                           
  8653  0018C4  0012               	return
  8654                           	opt stack 0
  8655                           GLOBAL	__end_of_uart_lthread
  8656  0018C6                     	__end_of_uart_lthread:
  8657                           	signat	_uart_lthread,16506
  8658                           	global	_init_queue
  8659                           
  8660 ;; *************** function _init_queue *****************
  8661 ;; Defined at:
  8662 ;;		line 14 in file "../src/messages.c"
  8663 ;; Parameters:    Size  Location     Type
  8664 ;;  qptr            2   57[BANK0 ] PTR struct __msg_queue
  8665 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8666 ;; Auto vars:     Size  Location     Type
  8667 ;;  i               1   60[BANK0 ] unsigned char 
  8668 ;; Return value:  Size  Location     Type
  8669 ;;		None               void
  8670 ;; Registers used:
  8671 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8672 ;; Tracked objects:
  8673 ;;		On entry : 0/0
  8674 ;;		On exit  : 0/0
  8675 ;;		Unchanged: 0/0
  8676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8677 ;;      Params:         0       2       0       0       0
  8678 ;;      Locals:         0       1       0       0       0
  8679 ;;      Temps:          0       1       0       0       0
  8680 ;;      Totals:         0       4       0       0       0
  8681 ;;Total ram usage:        4 bytes
  8682 ;; Hardware stack levels used:    1
  8683 ;; Hardware stack levels required when called:   11
  8684 ;; This function calls:
  8685 ;;		Nothing
  8686 ;; This function is called by:
  8687 ;;		_init_queues
  8688 ;; This function uses a non-reentrant model
  8689 ;;
  8690                           psect	text19,class=CODE,space=0,reloc=2
  8691                           global __ptext19
  8692  00151A                     __ptext19:
  8693                           psect	text19
  8694                           	file	"../src/messages.c"
  8695                           	line	14
  8696                           	global	__size_of_init_queue
  8697  0000                     	__size_of_init_queue	equ	__end_of_init_queue-_init_queue
  8698                           	
  8699  00151A                     _init_queue:; BSR set to: 0
  8700                           
  8701                           	opt	stack 18
  8702                           	line	17
  8703                           	
  8704  00151A                     l18473:
  8705                           ;messages.c: 15: unsigned char i;
  8706                           ;messages.c: 17: qptr->cur_write_ind = 0;
  8707  00151A  0100               	movlb	0	; () banked
  8708  00151C  EE20 F034          	lfsr	2,034h
  8709  001520  0100               	movlb	0	; () banked
  8710  001522  51B9               	movf	((init_queue@qptr))&0ffh,w
  8711  001524  26D9               	addwf	fsr2l
  8712  001526  0100               	movlb	0	; () banked
  8713  001528  51BA               	movf	((init_queue@qptr+1))&0ffh,w
  8714  00152A  22DA               	addwfc	fsr2h
  8715  00152C  0E00               	movlw	low(0)
  8716  00152E  6EDF               	movwf	indf2
  8717                           	line	18
  8718                           ;messages.c: 18: qptr->cur_read_ind = 0;
  8719  001530  0100               	movlb	0	; () banked
  8720  001532  EE20 F035          	lfsr	2,035h
  8721  001536  0100               	movlb	0	; () banked
  8722  001538  51B9               	movf	((init_queue@qptr))&0ffh,w
  8723  00153A  26D9               	addwf	fsr2l
  8724  00153C  0100               	movlb	0	; () banked
  8725  00153E  51BA               	movf	((init_queue@qptr+1))&0ffh,w
  8726  001540  22DA               	addwfc	fsr2h
  8727  001542  0E00               	movlw	low(0)
  8728  001544  6EDF               	movwf	indf2
  8729                           	line	19
  8730                           	
  8731  001546                     l18475:; BSR set to: 0
  8732                           
  8733                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  8734  001546  0100               	movlb	0	; () banked
  8735  001548  6FBB               	movwf	(??_init_queue+0+0)&0ffh
  8736  00154A  0E00               	movlw	low(0)
  8737  00154C  0100               	movlb	0	; () banked
  8738  00154E  0100               	movlb	0	; () banked
  8739  001550  6FBC               	movwf	((init_queue@i))&0ffh
  8740  001552  0100               	movlb	0	; () banked
  8741  001554  51BB               	movf	(??_init_queue+0+0)&0ffh,w
  8742                           	
  8743  001556                     l18477:; BSR set to: 0
  8744                           
  8745  001556  0E03               	movlw	(04h-1)
  8746  001558  0100               	movlb	0	; () banked
  8747  00155A  0100               	movlb	0	; () banked
  8748  00155C  65BC               	cpfsgt	((init_queue@i))&0ffh
  8749  00155E  D001               	goto	u1351
  8750  001560  D001               	goto	u1350
  8751  001562                     u1351:
  8752  001562  D002               	goto	l18481
  8753  001564                     u1350:
  8754  001564  D01C               	goto	l5470
  8755                           	
  8756  001566                     l18479:; BSR set to: 0
  8757                           
  8758  001566  D01B               	goto	l5470
  8759                           	
  8760  001568                     l5468:; BSR set to: 0
  8761                           
  8762                           	line	20
  8763                           	
  8764  001568                     l18481:; BSR set to: 0
  8765                           
  8766                           ;messages.c: 20: qptr->queue[i].full = 0;
  8767  001568  0100               	movlb	0	; () banked
  8768  00156A  0100               	movlb	0	; () banked
  8769  00156C  51BC               	movf	((init_queue@i))&0ffh,w
  8770  00156E  0D0D               	mullw	0Dh
  8771  001570  50F3               	movf	(prodl),c,w
  8772  001572  0100               	movlb	0	; () banked
  8773  001574  0100               	movlb	0	; () banked
  8774  001576  25B9               	addwf	((init_queue@qptr))&0ffh,w
  8775  001578  6ED9               	movwf	c:fsr2l
  8776  00157A  50F4               	movf	(prodh),c,w
  8777  00157C  0100               	movlb	0	; () banked
  8778  00157E  0100               	movlb	0	; () banked
  8779  001580  21BA               	addwfc	((init_queue@qptr+1))&0ffh,w
  8780  001582  6EDA               	movwf	1+c:fsr2l
  8781  001584  0E00               	movlw	low(0)
  8782  001586  6EDF               	movwf	indf2
  8783                           	line	19
  8784                           	
  8785  001588                     l18483:; BSR set to: 0
  8786                           
  8787  001588  0100               	movlb	0	; () banked
  8788  00158A  0100               	movlb	0	; () banked
  8789  00158C  2BBC               	incf	((init_queue@i))&0ffh
  8790                           	
  8791  00158E                     l18485:; BSR set to: 0
  8792                           
  8793  00158E  0E03               	movlw	(04h-1)
  8794  001590  0100               	movlb	0	; () banked
  8795  001592  0100               	movlb	0	; () banked
  8796  001594  65BC               	cpfsgt	((init_queue@i))&0ffh
  8797  001596  D001               	goto	u1361
  8798  001598  D001               	goto	u1360
  8799  00159A                     u1361:
  8800  00159A  D7E6               	goto	l18481
  8801  00159C                     u1360:
  8802  00159C  D000               	goto	l5470
  8803                           	
  8804  00159E                     l5469:; BSR set to: 0
  8805                           
  8806                           	line	22
  8807                           	
  8808  00159E                     l5470:; BSR set to: 0
  8809                           
  8810  00159E  0012               	return
  8811                           	opt stack 0
  8812                           GLOBAL	__end_of_init_queue
  8813  0015A0                     	__end_of_init_queue:
  8814                           	signat	_init_queue,4216
  8815                           	global	_send_msg
  8816                           
  8817 ;; *************** function _send_msg *****************
  8818 ;; Defined at:
  8819 ;;		line 24 in file "../src/messages.c"
  8820 ;; Parameters:    Size  Location     Type
  8821 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  8822 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8823 ;;  length          1    2[BANK1 ] unsigned char 
  8824 ;;  msgtype         1    3[BANK1 ] unsigned char 
  8825 ;;  data            2    4[BANK1 ] PTR void 
  8826 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
  8827 ;;		 -> i2c_slave_int_handler@error_buf(3), main@msgbuffer(11), main@uc(5), 
  8828 ;; Auto vars:     Size  Location     Type
  8829 ;;  qmsg            2    9[BANK1 ] PTR struct __msg
  8830 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8831 ;;  tlength         2    6[BANK1 ] unsigned int 
  8832 ;;  slot            1    8[BANK1 ] unsigned char 
  8833 ;; Return value:  Size  Location     Type
  8834 ;;                  1    wreg      char 
  8835 ;; Registers used:
  8836 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8837 ;; Tracked objects:
  8838 ;;		On entry : 0/0
  8839 ;;		On exit  : 0/0
  8840 ;;		Unchanged: 0/0
  8841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8842 ;;      Params:         0       0       6       0       0
  8843 ;;      Locals:         0       0       5       0       0
  8844 ;;      Temps:          0       1       0       0       0
  8845 ;;      Totals:         0       1      11       0       0
  8846 ;;Total ram usage:       12 bytes
  8847 ;; Hardware stack levels used:    1
  8848 ;; Hardware stack levels required when called:   12
  8849 ;; This function calls:
  8850 ;;		_memcpy
  8851 ;; This function is called by:
  8852 ;;		_FromMainLow_sendmsg
  8853 ;;		_FromMainHigh_sendmsg
  8854 ;; This function uses a non-reentrant model
  8855 ;;
  8856                           psect	text20,class=CODE,space=0,reloc=2
  8857                           global __ptext20
  8858  000D8A                     __ptext20:
  8859                           psect	text20
  8860                           	file	"../src/messages.c"
  8861                           	line	24
  8862                           	global	__size_of_send_msg
  8863  0000                     	__size_of_send_msg	equ	__end_of_send_msg-_send_msg
  8864                           	
  8865  000D8A                     _send_msg:; BSR set to: 0
  8866                           
  8867                           	opt	stack 17
  8868                           	line	28
  8869                           	
  8870  000D8A                     l19159:
  8871                           ;messages.c: 25: unsigned char slot;
  8872                           ;messages.c: 27: msg *qmsg;
  8873                           ;messages.c: 28: size_t tlength = length;
  8874  000D8A  0101               	movlb	1	; () banked
  8875  000D8C  0101               	movlb	1	; () banked
  8876  000D8E  C1A4  F1A8         	movff	(send_msg@length),(send_msg@tlength)
  8877  000D92  0101               	movlb	1	; () banked
  8878  000D94  0101               	movlb	1	; () banked
  8879  000D96  6BA9               	clrf	((send_msg@tlength+1))&0ffh
  8880                           	line	38
  8881                           	
  8882  000D98                     l19161:; BSR set to: 1
  8883                           
  8884                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8885  000D98  0101               	movlb	1	; () banked
  8886  000D9A  EE20 F034          	lfsr	2,034h
  8887  000D9E  0101               	movlb	1	; () banked
  8888  000DA0  51A2               	movf	((send_msg@qptr))&0ffh,w
  8889  000DA2  26D9               	addwf	fsr2l
  8890  000DA4  0101               	movlb	1	; () banked
  8891  000DA6  51A3               	movf	((send_msg@qptr+1))&0ffh,w
  8892  000DA8  22DA               	addwfc	fsr2h
  8893  000DAA  50DF               	movf	indf2,w
  8894  000DAC  0101               	movlb	1	; () banked
  8895  000DAE  0101               	movlb	1	; () banked
  8896  000DB0  6FAA               	movwf	((send_msg@slot))&0ffh
  8897                           	line	39
  8898                           	
  8899  000DB2                     l19163:; BSR set to: 1
  8900                           
  8901                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8902  000DB2  0101               	movlb	1	; () banked
  8903  000DB4  0101               	movlb	1	; () banked
  8904  000DB6  51AA               	movf	((send_msg@slot))&0ffh,w
  8905  000DB8  0D0D               	mullw	0Dh
  8906  000DBA  50F3               	movf	(prodl),c,w
  8907  000DBC  0101               	movlb	1	; () banked
  8908  000DBE  0101               	movlb	1	; () banked
  8909  000DC0  25A2               	addwf	((send_msg@qptr))&0ffh,w
  8910  000DC2  0101               	movlb	1	; () banked
  8911                           	
  8912  000DC4  0101               	movlb	1	; () banked
  8913  000DC6  6FAB               	movwf	((send_msg@qmsg))&0ffh
  8914  000DC8  50F4               	movf	(prodh),c,w
  8915  000DCA  0101               	movlb	1	; () banked
  8916  000DCC  0101               	movlb	1	; () banked
  8917  000DCE  21A3               	addwfc	((send_msg@qptr+1))&0ffh,w
  8918  000DD0  0101               	movlb	1	; () banked
  8919  000DD2  6FAC               	movwf	1+((send_msg@qmsg))&0ffh
  8920                           	line	41
  8921                           	
  8922  000DD4                     l19165:; BSR set to: 1
  8923                           
  8924                           ;messages.c: 41: if (qmsg->full != 0) {
  8925  000DD4  C1AB  FFD9         	movff	(send_msg@qmsg),fsr2l
  8926  000DD8  C1AC  FFDA         	movff	(send_msg@qmsg+1),fsr2h
  8927  000DDC  50DF               	movf	indf2,w
  8928  000DDE  B4D8               	btfsc	status,2
  8929  000DE0  D001               	goto	u2011
  8930  000DE2  D001               	goto	u2010
  8931  000DE4                     u2011:
  8932  000DE4  D003               	goto	l19171
  8933  000DE6                     u2010:
  8934                           	line	42
  8935                           	
  8936  000DE6                     l19167:; BSR set to: 1
  8937                           
  8938                           ;messages.c: 42: return (-1);
  8939  000DE6  0EFF               	movlw	(-1)&0ffh
  8940  000DE8  D052               	goto	l5474
  8941                           	
  8942  000DEA                     l19169:; BSR set to: 1
  8943                           
  8944  000DEA  D051               	goto	l5474
  8945                           	line	43
  8946                           	
  8947  000DEC                     l5473:; BSR set to: 1
  8948                           
  8949                           	line	46
  8950                           	
  8951  000DEC                     l19171:; BSR set to: 1
  8952                           
  8953                           ;messages.c: 43: }
  8954                           ;messages.c: 46: qmsg->length = length;
  8955  000DEC  0101               	movlb	1	; () banked
  8956  000DEE  EE20 F001          	lfsr	2,01h
  8957  000DF2  0101               	movlb	1	; () banked
  8958  000DF4  51AB               	movf	((send_msg@qmsg))&0ffh,w
  8959  000DF6  26D9               	addwf	fsr2l
  8960  000DF8  0101               	movlb	1	; () banked
  8961  000DFA  51AC               	movf	((send_msg@qmsg+1))&0ffh,w
  8962  000DFC  22DA               	addwfc	fsr2h
  8963  000DFE  0101               	movlb	1	; () banked
  8964  000E00  C1A4  FFDF         	movff	(send_msg@length),indf2
  8965                           
  8966                           	line	47
  8967                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8968  000E04  0101               	movlb	1	; () banked
  8969  000E06  EE20 F002          	lfsr	2,02h
  8970  000E0A  0101               	movlb	1	; () banked
  8971  000E0C  51AB               	movf	((send_msg@qmsg))&0ffh,w
  8972  000E0E  26D9               	addwf	fsr2l
  8973  000E10  0101               	movlb	1	; () banked
  8974  000E12  51AC               	movf	((send_msg@qmsg+1))&0ffh,w
  8975  000E14  22DA               	addwfc	fsr2h
  8976  000E16  0101               	movlb	1	; () banked
  8977  000E18  C1A5  FFDF         	movff	(send_msg@msgtype),indf2
  8978                           
  8979                           	line	55
  8980                           	
  8981  000E1C                     l19173:; BSR set to: 1
  8982                           
  8983                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8984  000E1C  0E03               	movlw	low(03h)
  8985  000E1E  0101               	movlb	1	; () banked
  8986  000E20  0101               	movlb	1	; () banked
  8987  000E22  25AB               	addwf	((send_msg@qmsg))&0ffh,w
  8988  000E24  0100               	movlb	0	; () banked
  8989                           	
  8990  000E26  0100               	movlb	0	; () banked
  8991  000E28  6FB9               	movwf	((?_memcpy))&0ffh
  8992  000E2A  0E00               	movlw	high(03h)
  8993  000E2C  0101               	movlb	1	; () banked
  8994  000E2E  0101               	movlb	1	; () banked
  8995  000E30  21AC               	addwfc	((send_msg@qmsg+1))&0ffh,w
  8996  000E32  0100               	movlb	0	; () banked
  8997  000E34  6FBA               	movwf	1+((?_memcpy))&0ffh
  8998  000E36  C1A6  F0BB         	movff	(send_msg@data),0+(?_memcpy+02h)
  8999  000E3A  C1A7  F0BC         	movff	(send_msg@data+1),1+(?_memcpy+02h)
  9000  000E3E  C1A8  F0BD         	movff	(send_msg@tlength),0+(?_memcpy+04h)
  9001  000E42  C1A9  F0BE         	movff	(send_msg@tlength+1),1+(?_memcpy+04h)
  9002  000E46  0100               	movlb	0	; () banked
  9003  000E48  EC11  F00C         	call	_memcpy	;wreg free
  9004                           	line	56
  9005                           	
  9006  000E4C                     l19175:
  9007                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  9008  000E4C  0101               	movlb	1	; () banked
  9009  000E4E  EE20 F034          	lfsr	2,034h
  9010  000E52  0101               	movlb	1	; () banked
  9011  000E54  51A2               	movf	((send_msg@qptr))&0ffh,w
  9012  000E56  26D9               	addwf	fsr2l
  9013  000E58  0101               	movlb	1	; () banked
  9014  000E5A  51A3               	movf	((send_msg@qptr+1))&0ffh,w
  9015  000E5C  22DA               	addwfc	fsr2h
  9016  000E5E  0101               	movlb	1	; () banked
  9017  000E60  EE10 F034          	lfsr	1,034h
  9018  000E64  0101               	movlb	1	; () banked
  9019  000E66  51A2               	movf	((send_msg@qptr))&0ffh,w
  9020  000E68  26E1               	addwf	fsr1l
  9021  000E6A  0101               	movlb	1	; () banked
  9022  000E6C  51A3               	movf	((send_msg@qptr+1))&0ffh,w
  9023  000E6E  22E2               	addwfc	fsr1h
  9024  000E70  50E7               	movf	indf1,w
  9025  000E72  0100               	movlb	0	; () banked
  9026  000E74  6FC3               	movwf	(??_send_msg+0+0)&0ffh
  9027  000E76  0100               	movlb	0	; () banked
  9028  000E78  29C3               	incf	((??_send_msg+0+0))&0ffh,w
  9029  000E7A  0B03               	andlw	low(03h)
  9030  000E7C  6EDF               	movwf	indf2
  9031                           
  9032                           	line	59
  9033                           	
  9034  000E7E                     l19177:; BSR set to: 0
  9035                           
  9036                           ;messages.c: 59: qmsg->full = 1;
  9037  000E7E  C1AB  FFD9         	movff	(send_msg@qmsg),fsr2l
  9038  000E82  C1AC  FFDA         	movff	(send_msg@qmsg+1),fsr2h
  9039  000E86  0E01               	movlw	low(01h)
  9040  000E88  6EDF               	movwf	indf2
  9041                           	line	60
  9042                           	
  9043  000E8A                     l19179:; BSR set to: 0
  9044                           
  9045                           ;messages.c: 60: return (1);
  9046  000E8A  0E01               	movlw	(01h)&0ffh
  9047  000E8C  D000               	goto	l5474
  9048                           	
  9049  000E8E                     l19181:; BSR set to: 0
  9050                           
  9051                           	line	61
  9052                           	
  9053  000E8E                     l5474:
  9054  000E8E  0012               	return
  9055                           	opt stack 0
  9056                           GLOBAL	__end_of_send_msg
  9057  000E90                     	__end_of_send_msg:
  9058                           	signat	_send_msg,16505
  9059                           	global	_recv_msg
  9060                           
  9061 ;; *************** function _recv_msg *****************
  9062 ;; Defined at:
  9063 ;;		line 63 in file "../src/messages.c"
  9064 ;; Parameters:    Size  Location     Type
  9065 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  9066 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9067 ;;  maxlength       1    2[BANK1 ] unsigned char 
  9068 ;;  msgtype         2    3[BANK1 ] PTR unsigned char 
  9069 ;;		 -> RAM(1023), i2c_slave_int_handler@msgtype(1), main@msgtype(1), 
  9070 ;;  data            2    5[BANK1 ] PTR void 
  9071 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@data(10), main@msgbuffer(11), 
  9072 ;; Auto vars:     Size  Location     Type
  9073 ;;  qmsg            2   10[BANK1 ] PTR struct __msg
  9074 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9075 ;;  tlength         2    8[BANK1 ] unsigned int 
  9076 ;;  slot            1    7[BANK1 ] unsigned char 
  9077 ;; Return value:  Size  Location     Type
  9078 ;;                  1    wreg      char 
  9079 ;; Registers used:
  9080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9081 ;; Tracked objects:
  9082 ;;		On entry : 0/0
  9083 ;;		On exit  : 0/0
  9084 ;;		Unchanged: 0/0
  9085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9086 ;;      Params:         0       0       7       0       0
  9087 ;;      Locals:         0       0       5       0       0
  9088 ;;      Temps:          0       2       0       0       0
  9089 ;;      Totals:         0       2      12       0       0
  9090 ;;Total ram usage:       14 bytes
  9091 ;; Hardware stack levels used:    1
  9092 ;; Hardware stack levels required when called:   12
  9093 ;; This function calls:
  9094 ;;		_memcpy
  9095 ;; This function is called by:
  9096 ;;		_ToMainLow_recvmsg
  9097 ;;		_ToMainHigh_recvmsg
  9098 ;; This function uses a non-reentrant model
  9099 ;;
  9100                           psect	text21,class=CODE,space=0,reloc=2
  9101                           global __ptext21
  9102  000A04                     __ptext21:
  9103                           psect	text21
  9104                           	file	"../src/messages.c"
  9105                           	line	63
  9106                           	global	__size_of_recv_msg
  9107  0000                     	__size_of_recv_msg	equ	__end_of_recv_msg-_recv_msg
  9108                           	
  9109  000A04                     _recv_msg:
  9110                           	opt	stack 17
  9111                           	line	72
  9112                           	
  9113  000A04                     l19193:
  9114                           ;messages.c: 64: unsigned char slot;
  9115                           ;messages.c: 68: msg *qmsg;
  9116                           ;messages.c: 69: size_t tlength;
  9117                           ;messages.c: 72: slot = qptr->cur_read_ind;
  9118  000A04  0101               	movlb	1	; () banked
  9119  000A06  EE20 F035          	lfsr	2,035h
  9120  000A0A  0101               	movlb	1	; () banked
  9121  000A0C  51A2               	movf	((recv_msg@qptr))&0ffh,w
  9122  000A0E  26D9               	addwf	fsr2l
  9123  000A10  0101               	movlb	1	; () banked
  9124  000A12  51A3               	movf	((recv_msg@qptr+1))&0ffh,w
  9125  000A14  22DA               	addwfc	fsr2h
  9126  000A16  50DF               	movf	indf2,w
  9127  000A18  0101               	movlb	1	; () banked
  9128  000A1A  0101               	movlb	1	; () banked
  9129  000A1C  6FA9               	movwf	((recv_msg@slot))&0ffh
  9130                           	line	73
  9131                           	
  9132  000A1E                     l19195:; BSR set to: 1
  9133                           
  9134                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  9135  000A1E  0101               	movlb	1	; () banked
  9136  000A20  0101               	movlb	1	; () banked
  9137  000A22  51A9               	movf	((recv_msg@slot))&0ffh,w
  9138  000A24  0D0D               	mullw	0Dh
  9139  000A26  50F3               	movf	(prodl),c,w
  9140  000A28  0101               	movlb	1	; () banked
  9141  000A2A  0101               	movlb	1	; () banked
  9142  000A2C  25A2               	addwf	((recv_msg@qptr))&0ffh,w
  9143  000A2E  0101               	movlb	1	; () banked
  9144                           	
  9145  000A30  0101               	movlb	1	; () banked
  9146  000A32  6FAC               	movwf	((recv_msg@qmsg))&0ffh
  9147  000A34  50F4               	movf	(prodh),c,w
  9148  000A36  0101               	movlb	1	; () banked
  9149  000A38  0101               	movlb	1	; () banked
  9150  000A3A  21A3               	addwfc	((recv_msg@qptr+1))&0ffh,w
  9151  000A3C  0101               	movlb	1	; () banked
  9152  000A3E  6FAD               	movwf	1+((recv_msg@qmsg))&0ffh
  9153                           	line	74
  9154                           	
  9155  000A40                     l19197:; BSR set to: 1
  9156                           
  9157                           ;messages.c: 74: if (qmsg->full == 1) {
  9158  000A40  0E01               	movlw	(01h)&0ffh
  9159  000A42  C1AC  FFD9         	movff	(recv_msg@qmsg),fsr2l
  9160  000A46  C1AD  FFDA         	movff	(recv_msg@qmsg+1),fsr2h
  9161  000A4A  62DF               	cpfseq	indf2
  9162  000A4C  D001               	goto	u2031
  9163  000A4E  D001               	goto	u2030
  9164  000A50                     u2031:
  9165  000A50  D075               	goto	l19221
  9166  000A52                     u2030:
  9167                           	line	76
  9168                           	
  9169  000A52                     l19199:; BSR set to: 1
  9170                           
  9171                           ;messages.c: 76: if (qmsg->length > maxlength) {
  9172  000A52  0101               	movlb	1	; () banked
  9173  000A54  EE20 F001          	lfsr	2,01h
  9174  000A58  0101               	movlb	1	; () banked
  9175  000A5A  51AC               	movf	((recv_msg@qmsg))&0ffh,w
  9176  000A5C  26D9               	addwf	fsr2l
  9177  000A5E  0101               	movlb	1	; () banked
  9178  000A60  51AD               	movf	((recv_msg@qmsg+1))&0ffh,w
  9179  000A62  22DA               	addwfc	fsr2h
  9180  000A64  50DF               	movf	indf2,w
  9181  000A66  0101               	movlb	1	; () banked
  9182  000A68  0101               	movlb	1	; () banked
  9183  000A6A  61A4               	cpfslt	((recv_msg@maxlength))&0ffh
  9184  000A6C  D001               	goto	u2041
  9185  000A6E  D001               	goto	u2040
  9186  000A70                     u2041:
  9187  000A70  D003               	goto	l19205
  9188  000A72                     u2040:
  9189                           	line	77
  9190                           	
  9191  000A72                     l19201:; BSR set to: 1
  9192                           
  9193                           ;messages.c: 77: return (-3);
  9194  000A72  0EFD               	movlw	(-3)&0ffh
  9195  000A74  D066               	goto	l5479
  9196                           	
  9197  000A76                     l19203:; BSR set to: 1
  9198                           
  9199  000A76  D065               	goto	l5479
  9200                           	line	78
  9201                           	
  9202  000A78                     l5478:; BSR set to: 1
  9203                           
  9204                           	line	80
  9205                           	
  9206  000A78                     l19205:; BSR set to: 1
  9207                           
  9208                           ;messages.c: 78: }
  9209                           ;messages.c: 80: tlength = qmsg->length;
  9210  000A78  0101               	movlb	1	; () banked
  9211  000A7A  EE20 F001          	lfsr	2,01h
  9212  000A7E  0101               	movlb	1	; () banked
  9213  000A80  51AC               	movf	((recv_msg@qmsg))&0ffh,w
  9214  000A82  26D9               	addwf	fsr2l
  9215  000A84  0101               	movlb	1	; () banked
  9216  000A86  51AD               	movf	((recv_msg@qmsg+1))&0ffh,w
  9217  000A88  22DA               	addwfc	fsr2h
  9218  000A8A  50DF               	movf	indf2,w
  9219  000A8C  0100               	movlb	0	; () banked
  9220  000A8E  6FC3               	movwf	(??_recv_msg+0+0)&0ffh
  9221  000A90  0100               	movlb	0	; () banked
  9222  000A92  51C3               	movf	((??_recv_msg+0+0))&0ffh,w
  9223  000A94  0101               	movlb	1	; () banked
  9224  000A96  0101               	movlb	1	; () banked
  9225  000A98  6FAA               	movwf	((recv_msg@tlength))&0ffh
  9226  000A9A  0101               	movlb	1	; () banked
  9227  000A9C  6BAB               	clrf	((recv_msg@tlength+1))&0ffh
  9228                           	line	81
  9229                           	
  9230  000A9E                     l19207:; BSR set to: 1
  9231                           
  9232                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  9233  000A9E  C1A7  F0B9         	movff	(recv_msg@data),(?_memcpy)
  9234  000AA2  C1A8  F0BA         	movff	(recv_msg@data+1),(?_memcpy+1)
  9235  000AA6  0E03               	movlw	03h
  9236  000AA8  0101               	movlb	1	; () banked
  9237  000AAA  0101               	movlb	1	; () banked
  9238  000AAC  25AC               	addwf	((recv_msg@qmsg))&0ffh,w
  9239  000AAE  0100               	movlb	0	; () banked
  9240  000AB0  6FC3               	movwf	(??_recv_msg+0+0)&0ffh
  9241  000AB2  0E00               	movlw	0
  9242  000AB4  0101               	movlb	1	; () banked
  9243  000AB6  0101               	movlb	1	; () banked
  9244  000AB8  21AD               	addwfc	((recv_msg@qmsg+1))&0ffh,w
  9245  000ABA  0100               	movlb	0	; () banked
  9246  000ABC  6FC4               	movwf	(??_recv_msg+0+0+1)&0ffh
  9247  000ABE  C0C3  F0BB         	movff	??_recv_msg+0+0,0+(?_memcpy+02h)
  9248  000AC2  C0C4  F0BC         	movff	??_recv_msg+0+1,1+(?_memcpy+02h)
  9249  000AC6  C1AA  F0BD         	movff	(recv_msg@tlength),0+(?_memcpy+04h)
  9250  000ACA  C1AB  F0BE         	movff	(recv_msg@tlength+1),1+(?_memcpy+04h)
  9251  000ACE  0100               	movlb	0	; () banked
  9252  000AD0  EC11  F00C         	call	_memcpy	;wreg free
  9253                           	line	87
  9254                           	
  9255  000AD4                     l19209:
  9256                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  9257  000AD4  0101               	movlb	1	; () banked
  9258  000AD6  EE20 F035          	lfsr	2,035h
  9259  000ADA  0101               	movlb	1	; () banked
  9260  000ADC  51A2               	movf	((recv_msg@qptr))&0ffh,w
  9261  000ADE  26D9               	addwf	fsr2l
  9262  000AE0  0101               	movlb	1	; () banked
  9263  000AE2  51A3               	movf	((recv_msg@qptr+1))&0ffh,w
  9264  000AE4  22DA               	addwfc	fsr2h
  9265  000AE6  0101               	movlb	1	; () banked
  9266  000AE8  EE10 F035          	lfsr	1,035h
  9267  000AEC  0101               	movlb	1	; () banked
  9268  000AEE  51A2               	movf	((recv_msg@qptr))&0ffh,w
  9269  000AF0  26E1               	addwf	fsr1l
  9270  000AF2  0101               	movlb	1	; () banked
  9271  000AF4  51A3               	movf	((recv_msg@qptr+1))&0ffh,w
  9272  000AF6  22E2               	addwfc	fsr1h
  9273  000AF8  50E7               	movf	indf1,w
  9274  000AFA  0100               	movlb	0	; () banked
  9275  000AFC  6FC3               	movwf	(??_recv_msg+0+0)&0ffh
  9276  000AFE  0100               	movlb	0	; () banked
  9277  000B00  29C3               	incf	((??_recv_msg+0+0))&0ffh,w
  9278  000B02  0B03               	andlw	low(03h)
  9279  000B04  6EDF               	movwf	indf2
  9280                           
  9281                           	line	89
  9282                           	
  9283  000B06                     l19211:; BSR set to: 0
  9284                           
  9285                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  9286  000B06  0101               	movlb	1	; () banked
  9287  000B08  EE20 F002          	lfsr	2,02h
  9288  000B0C  0101               	movlb	1	; () banked
  9289  000B0E  51AC               	movf	((recv_msg@qmsg))&0ffh,w
  9290  000B10  26D9               	addwf	fsr2l
  9291  000B12  0101               	movlb	1	; () banked
  9292  000B14  51AD               	movf	((recv_msg@qmsg+1))&0ffh,w
  9293  000B16  22DA               	addwfc	fsr2h
  9294  000B18  C1A5  FFE1         	movff	(recv_msg@msgtype),fsr1l
  9295  000B1C  C1A6  FFE2         	movff	(recv_msg@msgtype+1),fsr1h
  9296  000B20  CFDF FFE7          	movff	indf2,indf1
  9297                           	line	91
  9298                           	
  9299  000B24                     l19213:; BSR set to: 1
  9300                           
  9301                           ;messages.c: 91: qmsg->full = 0;
  9302  000B24  C1AC  FFD9         	movff	(recv_msg@qmsg),fsr2l
  9303  000B28  C1AD  FFDA         	movff	(recv_msg@qmsg+1),fsr2h
  9304  000B2C  0E00               	movlw	low(0)
  9305  000B2E  6EDF               	movwf	indf2
  9306                           	line	92
  9307                           	
  9308  000B30                     l19215:; BSR set to: 1
  9309                           
  9310                           ;messages.c: 92: return (tlength);
  9311  000B30  0101               	movlb	1	; () banked
  9312  000B32  0101               	movlb	1	; () banked
  9313  000B34  51AA               	movf	((recv_msg@tlength))&0ffh,w
  9314  000B36  D005               	goto	l5479
  9315                           	
  9316  000B38                     l19217:; BSR set to: 1
  9317                           
  9318  000B38  D004               	goto	l5479
  9319                           	line	93
  9320                           	
  9321  000B3A                     l19219:; BSR set to: 1
  9322                           
  9323                           ;messages.c: 93: } else {
  9324  000B3A  D003               	goto	l5479
  9325                           	
  9326  000B3C                     l5477:; BSR set to: 1
  9327                           
  9328                           	line	94
  9329                           	
  9330  000B3C                     l19221:; BSR set to: 1
  9331                           
  9332                           ;messages.c: 94: return (-4);
  9333  000B3C  0EFC               	movlw	(-4)&0ffh
  9334  000B3E  D001               	goto	l5479
  9335                           	
  9336  000B40                     l19223:; BSR set to: 1
  9337                           
  9338  000B40  D000               	goto	l5479
  9339                           	line	95
  9340                           	
  9341  000B42                     l5480:; BSR set to: 1
  9342                           
  9343                           	line	96
  9344                           	
  9345  000B42                     l5479:; BSR set to: 1
  9346                           
  9347  000B42  0012               	return
  9348                           	opt stack 0
  9349                           GLOBAL	__end_of_recv_msg
  9350  000B44                     	__end_of_recv_msg:
  9351                           	signat	_recv_msg,16505
  9352                           	global	_memcpy
  9353                           
  9354 ;; *************** function _memcpy *****************
  9355 ;; Defined at:
  9356 ;;		line 13 in file "/opt/microchip/xc8/v1.10/sources/memcpy.c"
  9357 ;; Parameters:    Size  Location     Type
  9358 ;;  d1              2   57[BANK0 ] PTR void 
  9359 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  9360 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  9361 ;;  s1              2   59[BANK0 ] PTR const void 
  9362 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
  9363 ;;		 -> i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  9364 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(5), 
  9365 ;;  n               2   61[BANK0 ] unsigned int 
  9366 ;; Auto vars:     Size  Location     Type
  9367 ;;  s               2   65[BANK0 ] PTR const unsigned char 
  9368 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
  9369 ;;		 -> i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  9370 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(5), 
  9371 ;;  d               2   63[BANK0 ] PTR unsigned char 
  9372 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  9373 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  9374 ;; Return value:  Size  Location     Type
  9375 ;;                  2   57[BANK0 ] PTR void 
  9376 ;; Registers used:
  9377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9378 ;; Tracked objects:
  9379 ;;		On entry : 0/0
  9380 ;;		On exit  : 0/0
  9381 ;;		Unchanged: 0/0
  9382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9383 ;;      Params:         0       6       0       0       0
  9384 ;;      Locals:         0       4       0       0       0
  9385 ;;      Temps:          0       0       0       0       0
  9386 ;;      Totals:         0      10       0       0       0
  9387 ;;Total ram usage:       10 bytes
  9388 ;; Hardware stack levels used:    1
  9389 ;; Hardware stack levels required when called:   11
  9390 ;; This function calls:
  9391 ;;		Nothing
  9392 ;; This function is called by:
  9393 ;;		_send_msg
  9394 ;;		_recv_msg
  9395 ;; This function uses a non-reentrant model
  9396 ;;
  9397                           psect	text22,class=CODE,space=0,reloc=2
  9398                           global __ptext22
  9399  001822                     __ptext22:
  9400                           psect	text22
  9401                           	file	"/opt/microchip/xc8/v1.10/sources/memcpy.c"
  9402                           	line	13
  9403                           	global	__size_of_memcpy
  9404  0000                     	__size_of_memcpy	equ	__end_of_memcpy-_memcpy
  9405                           	
  9406  001822                     _memcpy:; BSR set to: 1
  9407                           
  9408                           	opt	stack 17
  9409                           	line	24
  9410                           	
  9411  001822                     l19183:
  9412  001822  C0BB  F0C1         	movff	(memcpy@s1),(memcpy@s)
  9413  001826  C0BC  F0C2         	movff	(memcpy@s1+1),(memcpy@s+1)
  9414                           	line	25
  9415  00182A  C0B9  F0BF         	movff	(memcpy@d1),(memcpy@d)
  9416  00182E  C0BA  F0C0         	movff	(memcpy@d1+1),(memcpy@d+1)
  9417                           	line	26
  9418  001832  D013               	goto	l19191
  9419                           	
  9420  001834                     l17041:
  9421                           	line	27
  9422                           	
  9423  001834                     l19185:
  9424  001834  C0C1  FFD9         	movff	(memcpy@s),fsr2l
  9425  001838  C0C2  FFDA         	movff	(memcpy@s+1),fsr2h
  9426  00183C  C0BF  FFE1         	movff	(memcpy@d),fsr1l
  9427  001840  C0C0  FFE2         	movff	(memcpy@d+1),fsr1h
  9428  001844  CFDF FFE7          	movff	indf2,indf1
  9429                           	
  9430  001848                     l19187:
  9431  001848  0100               	movlb	0	; () banked
  9432  00184A  0100               	movlb	0	; () banked
  9433  00184C  4BC1               	infsnz	((memcpy@s))&0ffh
  9434  00184E  2BC2               	incf	((memcpy@s+1))&0ffh
  9435                           	
  9436  001850                     l19189:; BSR set to: 0
  9437                           
  9438  001850  0100               	movlb	0	; () banked
  9439  001852  0100               	movlb	0	; () banked
  9440  001854  4BBF               	infsnz	((memcpy@d))&0ffh
  9441  001856  2BC0               	incf	((memcpy@d+1))&0ffh
  9442  001858  D000               	goto	l19191
  9443                           	
  9444  00185A                     l17040:; BSR set to: 0
  9445                           
  9446                           	line	26
  9447                           	
  9448  00185A                     l19191:
  9449  00185A  0100               	movlb	0	; () banked
  9450  00185C  0100               	movlb	0	; () banked
  9451  00185E  07BD               	decf	((memcpy@n))&0ffh
  9452  001860  A0D8               	btfss	status,0
  9453  001862  07BE               	decf	((memcpy@n+1))&0ffh
  9454  001864  0100               	movlb	0	; () banked
  9455  001866  29BD               	incf	((memcpy@n))&0ffh,w
  9456  001868  B4D8               	btfsc	status,2
  9457  00186A  29BE               	incf ((memcpy@n+1))&0ffh,w
  9458                           
  9459  00186C  A4D8               	btfss	status,2
  9460  00186E  D001               	goto	u2021
  9461  001870  D001               	goto	u2020
  9462  001872                     u2021:
  9463  001872  D7E0               	goto	l19185
  9464  001874                     u2020:
  9465  001874  D000               	goto	l17043
  9466                           	
  9467  001876                     l17042:; BSR set to: 0
  9468                           
  9469                           	line	32
  9470                           ;	Return value of _memcpy is never used
  9471                           	
  9472  001876                     l17043:; BSR set to: 0
  9473                           
  9474  001876  0012               	return
  9475                           	opt stack 0
  9476                           GLOBAL	__end_of_memcpy
  9477  001878                     	__end_of_memcpy:
  9478                           	signat	_memcpy,12410
  9479                           	global	_check_msg
  9480                           
  9481 ;; *************** function _check_msg *****************
  9482 ;; Defined at:
  9483 ;;		line 222 in file "../src/messages.c"
  9484 ;; Parameters:    Size  Location     Type
  9485 ;;  qptr            2   57[BANK0 ] PTR struct __msg_queue
  9486 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9487 ;; Auto vars:     Size  Location     Type
  9488 ;;		None
  9489 ;; Return value:  Size  Location     Type
  9490 ;;                  1    wreg      unsigned char 
  9491 ;; Registers used:
  9492 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9493 ;; Tracked objects:
  9494 ;;		On entry : 0/0
  9495 ;;		On exit  : 0/0
  9496 ;;		Unchanged: 0/0
  9497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9498 ;;      Params:         0       2       0       0       0
  9499 ;;      Locals:         0       0       0       0       0
  9500 ;;      Temps:          0       1       0       0       0
  9501 ;;      Totals:         0       3       0       0       0
  9502 ;;Total ram usage:        3 bytes
  9503 ;; Hardware stack levels used:    1
  9504 ;; Hardware stack levels required when called:   11
  9505 ;; This function calls:
  9506 ;;		Nothing
  9507 ;; This function is called by:
  9508 ;;		_block_on_To_msgqueues
  9509 ;; This function uses a non-reentrant model
  9510 ;;
  9511                           psect	text23,class=CODE,space=0,reloc=2
  9512                           global __ptext23
  9513  001AA0                     __ptext23:
  9514                           psect	text23
  9515                           	file	"../src/messages.c"
  9516                           	line	222
  9517                           	global	__size_of_check_msg
  9518  0000                     	__size_of_check_msg	equ	__end_of_check_msg-_check_msg
  9519                           	
  9520  001AA0                     _check_msg:; BSR set to: 0
  9521                           
  9522                           	opt	stack 18
  9523                           	line	223
  9524                           	
  9525  001AA0                     l18571:
  9526                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  9527  001AA0  0100               	movlb	0	; () banked
  9528  001AA2  EE20 F035          	lfsr	2,035h
  9529  001AA6  0100               	movlb	0	; () banked
  9530  001AA8  51B9               	movf	((check_msg@qptr))&0ffh,w
  9531  001AAA  26D9               	addwf	fsr2l
  9532  001AAC  0100               	movlb	0	; () banked
  9533  001AAE  51BA               	movf	((check_msg@qptr+1))&0ffh,w
  9534  001AB0  22DA               	addwfc	fsr2h
  9535  001AB2  50DF               	movf	indf2,w
  9536  001AB4  0100               	movlb	0	; () banked
  9537  001AB6  6FBB               	movwf	(??_check_msg+0+0)&0ffh
  9538  001AB8  0100               	movlb	0	; () banked
  9539  001ABA  51BB               	movf	((??_check_msg+0+0))&0ffh,w
  9540  001ABC  0D0D               	mullw	0Dh
  9541  001ABE  50F3               	movf	(prodl),c,w
  9542  001AC0  0100               	movlb	0	; () banked
  9543  001AC2  0100               	movlb	0	; () banked
  9544  001AC4  25B9               	addwf	((check_msg@qptr))&0ffh,w
  9545  001AC6  6ED9               	movwf	c:fsr2l
  9546  001AC8  50F4               	movf	(prodh),c,w
  9547  001ACA  0100               	movlb	0	; () banked
  9548  001ACC  0100               	movlb	0	; () banked
  9549  001ACE  21BA               	addwfc	((check_msg@qptr+1))&0ffh,w
  9550  001AD0  6EDA               	movwf	1+c:fsr2l
  9551  001AD2  50DF               	movf	indf2,w
  9552  001AD4  D000               	goto	l5523
  9553                           	
  9554  001AD6                     l18573:; BSR set to: 0
  9555                           
  9556                           	line	224
  9557                           	
  9558  001AD6                     l5523:; BSR set to: 0
  9559                           
  9560  001AD6  0012               	return
  9561                           	opt stack 0
  9562                           GLOBAL	__end_of_check_msg
  9563  001AD8                     	__end_of_check_msg:
  9564                           	signat	_check_msg,4217
  9565                           	global	_Delay1KTCYx
  9566                           
  9567 ;; *************** function _Delay1KTCYx *****************
  9568 ;; Defined at:
  9569 ;;		line 9 in file "../common/d1ktcyx.c"
  9570 ;; Parameters:    Size  Location     Type
  9571 ;;  unit            1   57[BANK0 ] unsigned char 
  9572 ;; Auto vars:     Size  Location     Type
  9573 ;;		None
  9574 ;; Return value:  Size  Location     Type
  9575 ;;		None               void
  9576 ;; Registers used:
  9577 ;;		wreg
  9578 ;; Tracked objects:
  9579 ;;		On entry : 0/0
  9580 ;;		On exit  : 0/0
  9581 ;;		Unchanged: 0/0
  9582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9583 ;;      Params:         0       1       0       0       0
  9584 ;;      Locals:         0       0       0       0       0
  9585 ;;      Temps:          0       0       0       0       0
  9586 ;;      Totals:         0       1       0       0       0
  9587 ;;Total ram usage:        1 bytes
  9588 ;; Hardware stack levels used:    1
  9589 ;; Hardware stack levels required when called:   11
  9590 ;; This function calls:
  9591 ;;		Nothing
  9592 ;; This function is called by:
  9593 ;;		_block_on_To_msgqueues
  9594 ;; This function uses a non-reentrant model
  9595 ;;
  9596                           psect	text24,class=CODE,space=0,reloc=2
  9597                           global __ptext24
  9598  001D6C                     __ptext24:
  9599                           psect	text24
  9600                           	file	"../common/d1ktcyx.c"
  9601                           	line	9
  9602                           	global	__size_of_Delay1KTCYx
  9603  0000                     	__size_of_Delay1KTCYx	equ	__end_of_Delay1KTCYx-_Delay1KTCYx
  9604                           	
  9605  001D6C                     _Delay1KTCYx:; BSR set to: 0
  9606                           
  9607                           	opt	stack 18
  9608                           	line	10
  9609                           	
  9610  001D6C                     l17105:
  9611                           	line	11
  9612                           	
  9613  001D6C                     l18575:
  9614  001D6C  0EFA               	movlw	250
  9615  001D6E                     u2367:
  9616  001D6E  F000               	nop
  9617  001D70  2EE8               decfsz	wreg,f
  9618  001D72  D7FD               	goto	u2367
  9619                           
  9620                           	line	12
  9621                           	
  9622  001D74                     l18577:
  9623  001D74  0100               	movlb	0	; () banked
  9624  001D76  0100               	movlb	0	; () banked
  9625  001D78  2FB9               	decfsz	((Delay1KTCYx@unit))&0ffh
  9626                           	
  9627  001D7A  D7F8               	goto	l17105
  9628  001D7C  D000               	goto	l17107
  9629                           	
  9630  001D7E                     l17106:; BSR set to: 0
  9631                           
  9632                           	line	13
  9633                           	
  9634  001D7E                     l17107:; BSR set to: 0
  9635                           
  9636  001D7E  0012               	return
  9637                           	opt stack 0
  9638                           GLOBAL	__end_of_Delay1KTCYx
  9639  001D80                     	__end_of_Delay1KTCYx:
  9640                           	signat	_Delay1KTCYx,4216
  9641                           	global	_OpenADC
  9642                           
  9643 ;; *************** function _OpenADC *****************
  9644 ;; Defined at:
  9645 ;;		line 71 in file "plib/ADC/adcopen.c"
  9646 ;; Parameters:    Size  Location     Type
  9647 ;;  config          1   57[BANK0 ] unsigned char 
  9648 ;;  config2         1   58[BANK0 ] unsigned char 
  9649 ;;  portconfig      1   59[BANK0 ] unsigned char 
  9650 ;; Auto vars:     Size  Location     Type
  9651 ;;		None
  9652 ;; Return value:  Size  Location     Type
  9653 ;;		None               void
  9654 ;; Registers used:
  9655 ;;		wreg, status,2, status,0
  9656 ;; Tracked objects:
  9657 ;;		On entry : 0/0
  9658 ;;		On exit  : 0/0
  9659 ;;		Unchanged: 0/0
  9660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9661 ;;      Params:         0       3       0       0       0
  9662 ;;      Locals:         0       0       0       0       0
  9663 ;;      Temps:          0       2       0       0       0
  9664 ;;      Totals:         0       5       0       0       0
  9665 ;;Total ram usage:        5 bytes
  9666 ;; Hardware stack levels used:    1
  9667 ;; Hardware stack levels required when called:   11
  9668 ;; This function calls:
  9669 ;;		Nothing
  9670 ;; This function is called by:
  9671 ;;		_init_timer1_lthread
  9672 ;; This function uses a non-reentrant model
  9673 ;;
  9674                           psect	text25,class=CODE,space=0,reloc=2
  9675                           global __ptext25
  9676  0015A0                     __ptext25:
  9677                           psect	text25
  9678                           	file	"plib/ADC/adcopen.c"
  9679                           	line	71
  9680                           	global	__size_of_OpenADC
  9681  0000                     	__size_of_OpenADC	equ	__end_of_OpenADC-_OpenADC
  9682                           	
  9683  0015A0                     _OpenADC:; BSR set to: 0
  9684                           
  9685                           	opt	stack 18
  9686                           	line	72
  9687                           	
  9688  0015A0                     l18831:
  9689  0015A0  0E00               	movlw	low(0)
  9690  0015A2  6EC2               	movwf	((c:4034)),c	;volatile
  9691                           	line	73
  9692  0015A4  0E00               	movlw	low(0)
  9693  0015A6  6EC0               	movwf	((c:4032)),c	;volatile
  9694                           	line	75
  9695                           	
  9696  0015A8                     l18833:
  9697  0015A8  0100               	movlb	0	; () banked
  9698  0015AA  0100               	movlb	0	; () banked
  9699  0015AC  90D8               	bcf	status,0
  9700  0015AE  31BA               	rrcf	((OpenADC@config2))&0ffh,w
  9701  0015B0  0B3C               	andlw	low(03Ch)
  9702  0015B2  6EC2               	movwf	((c:4034)),c	;volatile
  9703                           	line	77
  9704                           	
  9705  0015B4                     l18835:; BSR set to: 0
  9706                           
  9707  0015B4  C0BA  F0BC         	movff	(OpenADC@config2),??_OpenADC+0+0
  9708  0015B8  0100               	movlb	0	; () banked
  9709  0015BA  3BBC               	swapf	(??_OpenADC+0+0)&0ffh
  9710  0015BC  0EF0               	movlw	(0ffh shl 4) & 0ffh
  9711  0015BE  17BC               	andwf	(??_OpenADC+0+0)&0ffh
  9712  0015C0  0E30               	movlw	030h
  9713  0015C2  0100               	movlb	0	; () banked
  9714  0015C4  17BC               	andwf	(??_OpenADC+0+0)&0ffh
  9715  0015C6  0100               	movlb	0	; () banked
  9716  0015C8  0100               	movlb	0	; () banked
  9717  0015CA  51BB               	movf	((OpenADC@portconfig))&0ffh,w
  9718  0015CC  0B0F               	andlw	low(0Fh)
  9719  0015CE  0100               	movlb	0	; () banked
  9720  0015D0  11BC               	iorwf	(??_OpenADC+0+0)&0ffh,w
  9721  0015D2  6EC1               	movwf	((c:4033)),c	;volatile
  9722                           	line	80
  9723                           	
  9724  0015D4                     l18837:; BSR set to: 0
  9725                           
  9726  0015D4  C0B9  F0BC         	movff	(OpenADC@config),??_OpenADC+0+0
  9727  0015D8  0100               	movlb	0	; () banked
  9728  0015DA  90D8               	bcf	status,0
  9729  0015DC  37BC               	rlcf	(??_OpenADC+0+0)&0ffh
  9730  0015DE  0100               	movlb	0	; () banked
  9731  0015E0  90D8               	bcf	status,0
  9732  0015E2  37BC               	rlcf	(??_OpenADC+0+0)&0ffh
  9733                           
  9734  0015E4  0E38               	movlw	038h
  9735  0015E6  0100               	movlb	0	; () banked
  9736  0015E8  17BC               	andwf	(??_OpenADC+0+0)&0ffh
  9737  0015EA  C0B9  F0BD         	movff	(OpenADC@config),??_OpenADC+1+0
  9738  0015EE  0100               	movlb	0	; () banked
  9739  0015F0  3BBD               	swapf	(??_OpenADC+1+0)&0ffh
  9740  0015F2  0E0F               	movlw	(0ffh shr 4) & 0ffh
  9741  0015F4  17BD               	andwf	(??_OpenADC+1+0)&0ffh
  9742  0015F6  0E07               	movlw	07h
  9743  0015F8  0100               	movlb	0	; () banked
  9744  0015FA  17BD               	andwf	(??_OpenADC+1+0)&0ffh
  9745  0015FC  0100               	movlb	0	; () banked
  9746  0015FE  0100               	movlb	0	; () banked
  9747  001600  51B9               	movf	((OpenADC@config))&0ffh,w
  9748  001602  0B80               	andlw	low(080h)
  9749  001604  0100               	movlb	0	; () banked
  9750  001606  11BD               	iorwf	(??_OpenADC+1+0)&0ffh,w
  9751  001608  0100               	movlb	0	; () banked
  9752  00160A  11BC               	iorwf	(??_OpenADC+0+0)&0ffh,w
  9753  00160C  6EC0               	movwf	((c:4032)),c	;volatile
  9754                           	line	82
  9755                           	
  9756  00160E                     l18839:; BSR set to: 0
  9757                           
  9758  00160E  0100               	movlb	0	; () banked
  9759                           	
  9760  001610  0100               	movlb	0	; () banked
  9761  001612  AFBA               	btfss	((OpenADC@config2))&0ffh,(7)&7
  9762  001614  D001               	goto	u1801
  9763  001616  D001               	goto	u1800
  9764  001618                     u1801:
  9765  001618  D003               	goto	l16444
  9766  00161A                     u1800:
  9767                           	line	84
  9768                           	
  9769  00161A                     l18841:; BSR set to: 0
  9770                           
  9771  00161A  9C9E               	bcf	((c:3998)),c,6	;volatile
  9772                           	line	85
  9773  00161C  8C9D               	bsf	((c:3997)),c,6	;volatile
  9774                           	line	86
  9775  00161E  8CF2               	bsf	((c:4082)),c,6	;volatile
  9776                           	line	87
  9777                           	
  9778  001620                     l16444:; BSR set to: 0
  9779                           
  9780                           	line	88
  9781  001620  80C2               	bsf	((c:4034)),c,0	;volatile
  9782                           	line	89
  9783                           	
  9784  001622                     l16445:; BSR set to: 0
  9785                           
  9786  001622  0012               	return
  9787                           	opt stack 0
  9788                           GLOBAL	__end_of_OpenADC
  9789  001624                     	__end_of_OpenADC:
  9790                           	signat	_OpenADC,12408
  9791                           	global	_SetChanADC
  9792                           
  9793 ;; *************** function _SetChanADC *****************
  9794 ;; Defined at:
  9795 ;;		line 31 in file "plib/ADC/adcsetch.c"
  9796 ;; Parameters:    Size  Location     Type
  9797 ;;  channel         1   57[BANK0 ] unsigned char 
  9798 ;; Auto vars:     Size  Location     Type
  9799 ;;		None
  9800 ;; Return value:  Size  Location     Type
  9801 ;;		None               void
  9802 ;; Registers used:
  9803 ;;		wreg, status,2, status,0
  9804 ;; Tracked objects:
  9805 ;;		On entry : 0/0
  9806 ;;		On exit  : 0/0
  9807 ;;		Unchanged: 0/0
  9808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9809 ;;      Params:         0       1       0       0       0
  9810 ;;      Locals:         0       0       0       0       0
  9811 ;;      Temps:          0       1       0       0       0
  9812 ;;      Totals:         0       2       0       0       0
  9813 ;;Total ram usage:        2 bytes
  9814 ;; Hardware stack levels used:    1
  9815 ;; Hardware stack levels required when called:   11
  9816 ;; This function calls:
  9817 ;;		Nothing
  9818 ;; This function is called by:
  9819 ;;		_init_timer1_lthread
  9820 ;; This function uses a non-reentrant model
  9821 ;;
  9822                           psect	text26,class=CODE,space=0,reloc=2
  9823                           global __ptext26
  9824  001D22                     __ptext26:
  9825                           psect	text26
  9826                           	file	"plib/ADC/adcsetch.c"
  9827                           	line	31
  9828                           	global	__size_of_SetChanADC
  9829  0000                     	__size_of_SetChanADC	equ	__end_of_SetChanADC-_SetChanADC
  9830                           	
  9831  001D22                     _SetChanADC:; BSR set to: 0
  9832                           
  9833                           	opt	stack 18
  9834                           	line	34
  9835                           	
  9836  001D22                     l18843:
  9837  001D22  CFC2 F0BA          	movff	(c:4034),??_SetChanADC+0+0	;volatile
  9838  001D26  0EC3               	movlw	0C3h
  9839  001D28  0100               	movlb	0	; () banked
  9840  001D2A  17BA               	andwf	(??_SetChanADC+0+0)&0ffh
  9841  001D2C  0100               	movlb	0	; () banked
  9842  001D2E  0100               	movlb	0	; () banked
  9843  001D30  90D8               	bcf	status,0
  9844  001D32  31B9               	rrcf	((SetChanADC@channel))&0ffh,w
  9845  001D34  0B3C               	andlw	low(03Ch)
  9846  001D36  0100               	movlb	0	; () banked
  9847  001D38  11BA               	iorwf	(??_SetChanADC+0+0)&0ffh,w
  9848  001D3A  6EC2               	movwf	((c:4034)),c	;volatile
  9849                           	line	36
  9850                           	
  9851  001D3C                     l16457:; BSR set to: 0
  9852                           
  9853  001D3C  0012               	return
  9854                           	opt stack 0
  9855                           GLOBAL	__end_of_SetChanADC
  9856  001D3E                     	__end_of_SetChanADC:
  9857                           	signat	_SetChanADC,4216
  9858                           	global	_ConvertADC
  9859                           
  9860 ;; *************** function _ConvertADC *****************
  9861 ;; Defined at:
  9862 ;;		line 23 in file "plib/ADC/adcconv.c"
  9863 ;; Parameters:    Size  Location     Type
  9864 ;;		None
  9865 ;; Auto vars:     Size  Location     Type
  9866 ;;		None
  9867 ;; Return value:  Size  Location     Type
  9868 ;;		None               void
  9869 ;; Registers used:
  9870 ;;		None
  9871 ;; Tracked objects:
  9872 ;;		On entry : 0/0
  9873 ;;		On exit  : 0/0
  9874 ;;		Unchanged: 0/0
  9875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9876 ;;      Params:         0       0       0       0       0
  9877 ;;      Locals:         0       0       0       0       0
  9878 ;;      Temps:          0       0       0       0       0
  9879 ;;      Totals:         0       0       0       0       0
  9880 ;;Total ram usage:        0 bytes
  9881 ;; Hardware stack levels used:    1
  9882 ;; Hardware stack levels required when called:   11
  9883 ;; This function calls:
  9884 ;;		Nothing
  9885 ;; This function is called by:
  9886 ;;		_timer1_lthread
  9887 ;; This function uses a non-reentrant model
  9888 ;;
  9889                           psect	text27,class=CODE,space=0,reloc=2
  9890                           global __ptext27
  9891  001DE8                     __ptext27:
  9892                           psect	text27
  9893                           	file	"plib/ADC/adcconv.c"
  9894                           	line	23
  9895                           	global	__size_of_ConvertADC
  9896  0000                     	__size_of_ConvertADC	equ	__end_of_ConvertADC-_ConvertADC
  9897                           	
  9898  001DE8                     _ConvertADC:; BSR set to: 0
  9899                           
  9900                           	opt	stack 18
  9901                           	line	24
  9902                           	
  9903  001DE8                     l18845:
  9904  001DE8  82C2               	bsf	((c:4034)),c,1	;volatile
  9905                           	line	25
  9906                           	
  9907  001DEA                     l16427:
  9908  001DEA  0012               	return
  9909                           	opt stack 0
  9910                           GLOBAL	__end_of_ConvertADC
  9911  001DEC                     	__end_of_ConvertADC:
  9912                           	signat	_ConvertADC,88
  9913                           	global	_InterruptHandlerLow
  9914                           
  9915 ;; *************** function _InterruptHandlerLow *****************
  9916 ;; Defined at:
  9917 ;;		line 132 in file "../src/interrupts.c"
  9918 ;; Parameters:    Size  Location     Type
  9919 ;;		None
  9920 ;; Auto vars:     Size  Location     Type
  9921 ;;		None
  9922 ;; Return value:  Size  Location     Type
  9923 ;;		None               void
  9924 ;; Registers used:
  9925 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9926 ;; Tracked objects:
  9927 ;;		On entry : 0/0
  9928 ;;		On exit  : 0/0
  9929 ;;		Unchanged: 0/0
  9930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9931 ;;      Params:         0       0       0       0       0
  9932 ;;      Locals:         0       0       0       0       0
  9933 ;;      Temps:         17       0       0       0       0
  9934 ;;      Totals:        17       0       0       0       0
  9935 ;;Total ram usage:       17 bytes
  9936 ;; Hardware stack levels used:    1
  9937 ;; Hardware stack levels required when called:   10
  9938 ;; This function calls:
  9939 ;;		_timer1_int_handler
  9940 ;;		_adc_int_handler
  9941 ;;		_uart_recv_int_handler
  9942 ;; This function is called by:
  9943 ;;		Interrupt level 1
  9944 ;; This function uses a non-reentrant model
  9945 ;;
  9946                           psect	intcodelo,class=CODE,space=0,reloc=2
  9947                           global __pintcodelo
  9948  000018                     __pintcodelo:
  9949                           psect	intcodelo
  9950                           	file	"../src/interrupts.c"
  9951                           	line	132
  9952                           	global	__size_of_InterruptHandlerLow
  9953  0000                     	__size_of_InterruptHandlerLow	equ	__end_of_InterruptHandlerLow-_InterruptHandlerLow
  9954                           	
  9955  000018                     _InterruptHandlerLow:
  9956                           	opt	stack 16
  9957  000018  CFD8 F023          	movff	status+0,??_InterruptHandlerLow+0
  9958  00001C  CFE8 F024          	movff	wreg+0,??_InterruptHandlerLow+1
  9959  000020  CFE0 F025          	movff	bsr+0,??_InterruptHandlerLow+2
  9960  000024  CFFA F026          	movff	pclat+0,??_InterruptHandlerLow+3
  9961  000028  CFFB F027          	movff	pclat+1,??_InterruptHandlerLow+4
  9962  00002C  CFE9 F028          	movff	fsr0l+0,??_InterruptHandlerLow+5
  9963  000030  CFEA F029          	movff	fsr0h+0,??_InterruptHandlerLow+6
  9964  000034  CFE1 F02A          	movff	fsr1l+0,??_InterruptHandlerLow+7
  9965  000038  CFE2 F02B          	movff	fsr1h+0,??_InterruptHandlerLow+8
  9966  00003C  CFD9 F02C          	movff	fsr2l+0,??_InterruptHandlerLow+9
  9967  000040  CFDA F02D          	movff	fsr2h+0,??_InterruptHandlerLow+10
  9968  000044  CFF3 F02E          	movff	prodl+0,??_InterruptHandlerLow+11
  9969  000048  CFF4 F02F          	movff	prodh+0,??_InterruptHandlerLow+12
  9970  00004C  CFF6 F030          	movff	tblptrl+0,??_InterruptHandlerLow+13
  9971  000050  CFF7 F031          	movff	tblptrh+0,??_InterruptHandlerLow+14
  9972  000054  CFF8 F032          	movff	tblptru+0,??_InterruptHandlerLow+15
  9973  000058  CFF5 F033          	movff	tablat+0,??_InterruptHandlerLow+16
  9974                           	line	134
  9975                           	
  9976  00005C                     i1l19021:
  9977                           ;interrupts.c: 134: if (PIR1bits.TMR1IF) {
  9978                           	
  9979  00005C  A09E               	btfss	((c:3998)),c,0	;volatile
  9980  00005E  D001               	goto	i1u192_21
  9981  000060  D001               	goto	i1u192_20
  9982  000062                     i1u192_21:
  9983  000062  D004               	goto	i1l19027
  9984  000064                     i1u192_20:
  9985                           	line	135
  9986                           	
  9987  000064                     i1l19023:
  9988                           ;interrupts.c: 135: PIR1bits.TMR1IF = 0;
  9989  000064  909E               	bcf	((c:3998)),c,0	;volatile
  9990                           	line	136
  9991                           	
  9992  000066                     i1l19025:
  9993                           ;interrupts.c: 136: timer1_int_handler();
  9994  000066  EC31  F00D         	call	_timer1_int_handler	;wreg free
  9995  00006A  D000               	goto	i1l19027
  9996                           	line	137
  9997                           	
  9998  00006C                     i1l1825:
  9999                           	line	140
 10000                           	
 10001  00006C                     i1l19027:
 10002                           ;interrupts.c: 137: }
 10003                           ;interrupts.c: 140: if(PIR1bits.ADIF){
 10004                           	
 10005  00006C  AC9E               	btfss	((c:3998)),c,6	;volatile
 10006  00006E  D001               	goto	i1u193_21
 10007  000070  D001               	goto	i1u193_20
 10008  000072                     i1u193_21:
 10009  000072  D004               	goto	i1l19033
 10010  000074                     i1u193_20:
 10011                           	line	141
 10012                           	
 10013  000074                     i1l19029:
 10014                           ;interrupts.c: 141: PIR1bits.ADIF = 0;
 10015  000074  9C9E               	bcf	((c:3998)),c,6	;volatile
 10016                           	line	142
 10017                           	
 10018  000076                     i1l19031:
 10019                           ;interrupts.c: 142: adc_int_handler();
 10020  000076  ECF2  F00C         	call	_adc_int_handler	;wreg free
 10021  00007A  D000               	goto	i1l19033
 10022                           	line	143
 10023                           	
 10024  00007C                     i1l1826:
 10025                           	line	147
 10026                           	
 10027  00007C                     i1l19033:
 10028                           ;interrupts.c: 143: }
 10029                           ;interrupts.c: 147: if (PIR1bits.RCIF) {
 10030                           	
 10031  00007C  AA9E               	btfss	((c:3998)),c,5	;volatile
 10032  00007E  D001               	goto	i1u194_21
 10033  000080  D001               	goto	i1u194_20
 10034  000082                     i1u194_21:
 10035  000082  D004               	goto	i1l1828
 10036  000084                     i1u194_20:
 10037                           	line	148
 10038                           	
 10039  000084                     i1l19035:
 10040                           ;interrupts.c: 148: PIR1bits.RCIF = 0;
 10041  000084  9A9E               	bcf	((c:3998)),c,5	;volatile
 10042                           	line	149
 10043                           	
 10044  000086                     i1l19037:
 10045                           ;interrupts.c: 149: uart_recv_int_handler();
 10046  000086  EC8F  F008         	call	_uart_recv_int_handler	;wreg free
 10047  00008A  D000               	goto	i1l1828
 10048                           	line	150
 10049                           	
 10050  00008C                     i1l1827:
 10051                           	line	152
 10052                           	
 10053  00008C                     i1l1828:
 10054  00008C  C033  FFF5         	movff	??_InterruptHandlerLow+16,tablat+0
 10055  000090  C032  FFF8         	movff	??_InterruptHandlerLow+15,tblptru+0
 10056  000094  C031  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh+0
 10057  000098  C030  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl+0
 10058  00009C  C02F  FFF4         	movff	??_InterruptHandlerLow+12,prodh+0
 10059  0000A0  C02E  FFF3         	movff	??_InterruptHandlerLow+11,prodl+0
 10060  0000A4  C02D  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h+0
 10061  0000A8  C02C  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l+0
 10062  0000AC  C02B  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h+0
 10063  0000B0  C02A  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l+0
 10064  0000B4  C029  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h+0
 10065  0000B8  C028  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l+0
 10066  0000BC  C027  FFFB         	movff	??_InterruptHandlerLow+4,pclat+1
 10067  0000C0  C026  FFFA         	movff	??_InterruptHandlerLow+3,pclat+0
 10068  0000C4  C025  FFE0         	movff	??_InterruptHandlerLow+2,bsr+0
 10069  0000C8  C024  FFE8         	movff	??_InterruptHandlerLow+1,wreg+0
 10070  0000CC  C023  FFD8         	movff	??_InterruptHandlerLow+0,status+0
 10071  0000D0  0010               	retfie
 10072                           	opt stack 0
 10073                           GLOBAL	__end_of_InterruptHandlerLow
 10074  0000D2                     	__end_of_InterruptHandlerLow:
 10075                           	signat	_InterruptHandlerLow,1112
 10076                           	global	_timer1_int_handler
 10077                           
 10078 ;; *************** function _timer1_int_handler *****************
 10079 ;; Defined at:
 10080 ;;		line 37 in file "../src/user_interrupts.c"
 10081 ;; Parameters:    Size  Location     Type
 10082 ;;		None
 10083 ;; Auto vars:     Size  Location     Type
 10084 ;;  result          2   30[COMRAM] unsigned int 
 10085 ;;  temp            2   28[COMRAM] unsigned int 
 10086 ;; Return value:  Size  Location     Type
 10087 ;;		None               void
 10088 ;; Registers used:
 10089 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10090 ;; Tracked objects:
 10091 ;;		On entry : 0/0
 10092 ;;		On exit  : 0/0
 10093 ;;		Unchanged: 0/0
 10094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10095 ;;      Params:         0       0       0       0       0
 10096 ;;      Locals:         4       0       0       0       0
 10097 ;;      Temps:          2       0       0       0       0
 10098 ;;      Totals:         6       0       0       0       0
 10099 ;;Total ram usage:        6 bytes
 10100 ;; Hardware stack levels used:    1
 10101 ;; Hardware stack levels required when called:    9
 10102 ;; This function calls:
 10103 ;;		_ReadTimer1
 10104 ;;		_WriteTimer1
 10105 ;;		_ToMainLow_sendmsg
 10106 ;; This function is called by:
 10107 ;;		_InterruptHandlerLow
 10108 ;; This function uses a non-reentrant model
 10109 ;;
 10110                           psect	text29,class=CODE,space=0,reloc=2
 10111                           global __ptext29
 10112  001A62                     __ptext29:
 10113                           psect	text29
 10114                           	file	"../src/user_interrupts.c"
 10115                           	line	37
 10116                           	global	__size_of_timer1_int_handler
 10117  0000                     	__size_of_timer1_int_handler	equ	__end_of_timer1_int_handler-_timer1_int_handler
 10118                           	
 10119  001A62                     _timer1_int_handler:
 10120                           	opt	stack 16
 10121                           	line	42
 10122                           	
 10123  001A62                     i1l18981:
 10124                           ;user_interrupts.c: 38: unsigned int result;
 10125                           ;user_interrupts.c: 42: result = ReadTimer1();
 10126  001A62  ECC0  F00E         	call	_ReadTimer1	;wreg free
 10127  001A66  C001  F01F         	movff	0+?_ReadTimer1,(c:timer1_int_handler@result)
 10128  001A6A  C002  F020         	movff	1+?_ReadTimer1,(c:timer1_int_handler@result+1)
 10129                           	line	44
 10130                           	
 10131  001A6E                     i1l18983:
 10132                           ;user_interrupts.c: 44: unsigned int temp = 0x1;
 10133  001A6E  0E00               	movlw	high(01h)
 10134  001A70  6E1E               	movwf	((c:timer1_int_handler@temp+1)),c
 10135  001A72  0E01               	movlw	low(01h)
 10136  001A74  6E1D               	movwf	((c:timer1_int_handler@temp)),c
 10137                           	line	45
 10138                           	
 10139  001A76                     i1l18985:
 10140                           ;user_interrupts.c: 45: WriteTimer1(temp);
 10141  001A76  C01D  F001         	movff	(c:timer1_int_handler@temp),(c:?_WriteTimer1)
 10142  001A7A  C01E  F002         	movff	(c:timer1_int_handler@temp+1),(c:?_WriteTimer1+1)
 10143  001A7E  ECC9  F00E         	call	_WriteTimer1	;wreg free
 10144                           	line	46
 10145                           	
 10146  001A82                     i1l18987:
 10147                           ;user_interrupts.c: 46: ToMainLow_sendmsg(sizeof(result), 11, (void *) &result);
 10148  001A82  6E1B               	movwf	(??_timer1_int_handler+0+0)&0ffh,c
 10149  001A84  0E02               	movlw	low(02h)
 10150  001A86  6E17               	movwf	((c:?_ToMainLow_sendmsg)),c
 10151  001A88  501B               	movf	(??_timer1_int_handler+0+0)&0ffh,c,w
 10152  001A8A  6E1C               	movwf	(??_timer1_int_handler+1+0)&0ffh,c
 10153  001A8C  0E0B               	movlw	low(0Bh)
 10154  001A8E  6E18               	movwf	(0+((c:?_ToMainLow_sendmsg)+01h)),c
 10155  001A90  501C               	movf	(??_timer1_int_handler+1+0)&0ffh,c,w
 10156  001A92  0E00               	movlw	high((c:timer1_int_handler@result))
 10157  001A94  6E1A               	movwf	(1+((c:?_ToMainLow_sendmsg)+02h)),c
 10158  001A96  0E1F               	movlw	low((c:timer1_int_handler@result))
 10159  001A98  6E19               	movwf	(0+((c:?_ToMainLow_sendmsg)+02h)),c
 10160  001A9A  EC7F  F00E         	call	_ToMainLow_sendmsg	;wreg free
 10161                           	line	47
 10162                           	
 10163  001A9E                     i1l16419:
 10164  001A9E  0012               	return
 10165                           	opt stack 0
 10166                           GLOBAL	__end_of_timer1_int_handler
 10167  001AA0                     	__end_of_timer1_int_handler:
 10168                           	signat	_timer1_int_handler,88
 10169                           	global	_adc_int_handler
 10170                           
 10171 ;; *************** function _adc_int_handler *****************
 10172 ;; Defined at:
 10173 ;;		line 49 in file "../src/user_interrupts.c"
 10174 ;; Parameters:    Size  Location     Type
 10175 ;;		None
 10176 ;; Auto vars:     Size  Location     Type
 10177 ;;  message         4   28[COMRAM] unsigned char [4]
 10178 ;;  value           2   32[COMRAM] unsigned int 
 10179 ;; Return value:  Size  Location     Type
 10180 ;;		None               void
 10181 ;; Registers used:
 10182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10183 ;; Tracked objects:
 10184 ;;		On entry : 0/0
 10185 ;;		On exit  : 0/0
 10186 ;;		Unchanged: 0/0
 10187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10188 ;;      Params:         0       0       0       0       0
 10189 ;;      Locals:         6       0       0       0       0
 10190 ;;      Temps:          2       0       0       0       0
 10191 ;;      Totals:         8       0       0       0       0
 10192 ;;Total ram usage:        8 bytes
 10193 ;; Hardware stack levels used:    1
 10194 ;; Hardware stack levels required when called:    9
 10195 ;; This function calls:
 10196 ;;		_ReadADC
 10197 ;;		_ToMainLow_sendmsg
 10198 ;; This function is called by:
 10199 ;;		_InterruptHandlerLow
 10200 ;; This function uses a non-reentrant model
 10201 ;;
 10202                           psect	text30,class=CODE,space=0,reloc=2
 10203                           global __ptext30
 10204  0019E4                     __ptext30:
 10205                           psect	text30
 10206                           	file	"../src/user_interrupts.c"
 10207                           	line	49
 10208                           	global	__size_of_adc_int_handler
 10209  0000                     	__size_of_adc_int_handler	equ	__end_of_adc_int_handler-_adc_int_handler
 10210                           	
 10211  0019E4                     _adc_int_handler:
 10212                           	opt	stack 16
 10213                           	line	50
 10214                           	
 10215  0019E4                     i1l18989:
 10216                           ;user_interrupts.c: 50: unsigned int value = ReadADC();
 10217  0019E4  ECE2  F00E         	call	_ReadADC	;wreg free
 10218  0019E8  C001  F021         	movff	0+?_ReadADC,(c:adc_int_handler@value)
 10219  0019EC  C002  F022         	movff	1+?_ReadADC,(c:adc_int_handler@value+1)
 10220                           	line	52
 10221                           	
 10222  0019F0                     i1l18991:
 10223                           ;user_interrupts.c: 51: unsigned char message[4];
 10224                           ;user_interrupts.c: 52: message[2] = (unsigned char)(0xFF & value);
 10225  0019F0  C021  F01F         	movff	(c:adc_int_handler@value),0+((c:adc_int_handler@message)+02h)
 10226                           	line	53
 10227                           	
 10228  0019F4                     i1l18993:
 10229                           ;user_interrupts.c: 53: message[3] = (unsigned char)(0xFF & (value>>8));
 10230  0019F4  5022               	movf	((c:adc_int_handler@value+1)),c,w
 10231  0019F6  6E20               	movwf	(0+((c:adc_int_handler@message)+03h)),c
 10232                           	line	54
 10233                           	
 10234  0019F8                     i1l18995:
 10235                           ;user_interrupts.c: 54: message[0] = 0x11;
 10236  0019F8  6E1B               	movwf	(??_adc_int_handler+0+0)&0ffh,c
 10237  0019FA  0E11               	movlw	low(011h)
 10238  0019FC  6E1D               	movwf	((c:adc_int_handler@message)),c
 10239  0019FE  501B               	movf	(??_adc_int_handler+0+0)&0ffh,c,w
 10240                           	line	55
 10241                           	
 10242  001A00                     i1l18997:
 10243                           ;user_interrupts.c: 55: message[1] = adcMsgCount;
 10244  001A00  C047  F01E         	movff	(c:_adcMsgCount),0+((c:adc_int_handler@message)+01h)
 10245                           	line	56
 10246                           	
 10247  001A04                     i1l18999:
 10248                           ;user_interrupts.c: 56: adcMsgCount++;
 10249  001A04  2A47               	incf	((c:_adcMsgCount)),c
 10250                           	line	57
 10251                           	
 10252  001A06                     i1l19001:
 10253                           ;user_interrupts.c: 57: ToMainLow_sendmsg(4,40,(void *) message);
 10254  001A06  6E1B               	movwf	(??_adc_int_handler+0+0)&0ffh,c
 10255  001A08  0E04               	movlw	low(04h)
 10256  001A0A  6E17               	movwf	((c:?_ToMainLow_sendmsg)),c
 10257  001A0C  501B               	movf	(??_adc_int_handler+0+0)&0ffh,c,w
 10258  001A0E  6E1C               	movwf	(??_adc_int_handler+1+0)&0ffh,c
 10259  001A10  0E28               	movlw	low(028h)
 10260  001A12  6E18               	movwf	(0+((c:?_ToMainLow_sendmsg)+01h)),c
 10261  001A14  501C               	movf	(??_adc_int_handler+1+0)&0ffh,c,w
 10262  001A16  0E00               	movlw	high((c:adc_int_handler@message))
 10263  001A18  6E1A               	movwf	(1+((c:?_ToMainLow_sendmsg)+02h)),c
 10264  001A1A  0E1D               	movlw	low((c:adc_int_handler@message))
 10265  001A1C  6E19               	movwf	(0+((c:?_ToMainLow_sendmsg)+02h)),c
 10266  001A1E  EC7F  F00E         	call	_ToMainLow_sendmsg	;wreg free
 10267                           	line	58
 10268                           	
 10269  001A22                     i1l16422:
 10270  001A22  0012               	return
 10271                           	opt stack 0
 10272                           GLOBAL	__end_of_adc_int_handler
 10273  001A24                     	__end_of_adc_int_handler:
 10274                           	signat	_adc_int_handler,88
 10275                           	global	_uart_recv_int_handler
 10276                           
 10277 ;; *************** function _uart_recv_int_handler *****************
 10278 ;; Defined at:
 10279 ;;		line 12 in file "../src/my_uart.c"
 10280 ;; Parameters:    Size  Location     Type
 10281 ;;		None
 10282 ;; Auto vars:     Size  Location     Type
 10283 ;;		None
 10284 ;; Return value:  Size  Location     Type
 10285 ;;		None               void
 10286 ;; Registers used:
 10287 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10288 ;; Tracked objects:
 10289 ;;		On entry : 0/0
 10290 ;;		On exit  : 0/0
 10291 ;;		Unchanged: 0/0
 10292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10293 ;;      Params:         0       0       0       0       0
 10294 ;;      Locals:         0       0       0       0       0
 10295 ;;      Temps:          2       0       0       0       0
 10296 ;;      Totals:         2       0       0       0       0
 10297 ;;Total ram usage:        2 bytes
 10298 ;; Hardware stack levels used:    1
 10299 ;; Hardware stack levels required when called:    9
 10300 ;; This function calls:
 10301 ;;		_ReadUSART
 10302 ;;		_ToMainLow_sendmsg
 10303 ;; This function is called by:
 10304 ;;		_InterruptHandlerLow
 10305 ;; This function uses a non-reentrant model
 10306 ;;
 10307                           psect	text31,class=CODE,space=0,reloc=2
 10308                           global __ptext31
 10309  00111E                     __ptext31:
 10310                           psect	text31
 10311                           	file	"../src/my_uart.c"
 10312                           	line	12
 10313                           	global	__size_of_uart_recv_int_handler
 10314  0000                     	__size_of_uart_recv_int_handler	equ	__end_of_uart_recv_int_handler-_uart_recv_int_handl
                                 er
 10315                           	
 10316  00111E                     _uart_recv_int_handler:
 10317                           	opt	stack 16
 10318                           	line	13
 10319                           	
 10320  00111E                     i1l19003:
 10321                           ;my_uart.c: 13: if ((PIR1bits.RCIF)) {
 10322                           	
 10323  00111E  AA9E               	btfss	((c:3998)),c,5	;volatile
 10324  001120  D001               	goto	i1u189_21
 10325  001122  D001               	goto	i1u189_20
 10326  001124                     i1u189_21:
 10327  001124  D041               	goto	i1l19015
 10328  001126                     i1u189_20:
 10329                           	line	14
 10330                           	
 10331  001126                     i1l19005:
 10332                           ;my_uart.c: 14: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
 10333  001126  EE20 F004          	lfsr	2,04h
 10334  00112A  504A               	movf	((c:_uc_ptr)),c,w
 10335  00112C  26D9               	addwf	fsr2l
 10336  00112E  504B               	movf	((c:_uc_ptr+1)),c,w
 10337  001130  22DA               	addwfc	fsr2h
 10338  001132  50DF               	movf	indf2,w
 10339  001134  6E1B               	movwf	(??_uart_recv_int_handler+0+0)&0ffh,c
 10340  001136  501B               	movf	((??_uart_recv_int_handler+0+0)),c,w
 10341  001138  0D01               	mullw	01h
 10342  00113A  50F3               	movf	(prodl),c,w
 10343  00113C  244A               	addwf	((c:_uc_ptr)),c,w
 10344  00113E  6ED9               	movwf	c:fsr2l
 10345  001140  50F4               	movf	(prodh),c,w
 10346  001142  204B               	addwfc	((c:_uc_ptr+1)),c,w
 10347  001144  6EDA               	movwf	1+c:fsr2l
 10348  001146  EC6C  F00D         	call	_ReadUSART	;wreg free
 10349  00114A  6EDF               	movwf	indf2
 10350                           
 10351                           	line	15
 10352                           	
 10353  00114C                     i1l19007:
 10354                           ;my_uart.c: 15: uc_ptr->buflen++;
 10355  00114C  EE20 F004          	lfsr	2,04h
 10356  001150  504A               	movf	((c:_uc_ptr)),c,w
 10357  001152  26D9               	addwf	fsr2l
 10358  001154  504B               	movf	((c:_uc_ptr+1)),c,w
 10359  001156  22DA               	addwfc	fsr2h
 10360  001158  2ADF               	incf	indf2
 10361                           
 10362                           	line	17
 10363                           	
 10364  00115A                     i1l19009:
 10365                           ;my_uart.c: 17: if (uc_ptr->buflen == 4) {
 10366  00115A  EE20 F004          	lfsr	2,04h
 10367  00115E  504A               	movf	((c:_uc_ptr)),c,w
 10368  001160  26D9               	addwf	fsr2l
 10369  001162  504B               	movf	((c:_uc_ptr+1)),c,w
 10370  001164  22DA               	addwfc	fsr2h
 10371  001166  0E04               	movlw	(04h)&0ffh
 10372  001168  62DF               	cpfseq	indf2
 10373  00116A  D001               	goto	i1u190_21
 10374  00116C  D001               	goto	i1u190_20
 10375  00116E                     i1u190_21:
 10376  00116E  D01C               	goto	i1l19015
 10377  001170                     i1u190_20:
 10378                           	line	18
 10379                           	
 10380  001170                     i1l19011:
 10381                           ;my_uart.c: 18: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
 10382  001170  EE20 F004          	lfsr	2,04h
 10383  001174  504A               	movf	((c:_uc_ptr)),c,w
 10384  001176  26D9               	addwf	fsr2l
 10385  001178  504B               	movf	((c:_uc_ptr+1)),c,w
 10386  00117A  22DA               	addwfc	fsr2h
 10387  00117C  50DF               	movf	indf2,w
 10388  00117E  6E17               	movwf	((c:?_ToMainLow_sendmsg)),c
 10389  001180  6E1B               	movwf	(??_uart_recv_int_handler+0+0)&0ffh,c
 10390  001182  0E1F               	movlw	low(01Fh)
 10391  001184  6E18               	movwf	(0+((c:?_ToMainLow_sendmsg)+01h)),c
 10392  001186  501B               	movf	(??_uart_recv_int_handler+0+0)&0ffh,c,w
 10393  001188  C04A  F019         	movff	(c:_uc_ptr),0+((c:?_ToMainLow_sendmsg)+02h)
 10394  00118C  C04B  F01A         	movff	(c:_uc_ptr+1),1+((c:?_ToMainLow_sendmsg)+02h)
 10395  001190  EC7F  F00E         	call	_ToMainLow_sendmsg	;wreg free
 10396                           	line	19
 10397                           	
 10398  001194                     i1l19013:
 10399                           ;my_uart.c: 19: uc_ptr->buflen = 0;
 10400  001194  EE20 F004          	lfsr	2,04h
 10401  001198  504A               	movf	((c:_uc_ptr)),c,w
 10402  00119A  26D9               	addwf	fsr2l
 10403  00119C  504B               	movf	((c:_uc_ptr+1)),c,w
 10404  00119E  22DA               	addwfc	fsr2h
 10405  0011A0  0E00               	movlw	low(0)
 10406  0011A2  6EDF               	movwf	indf2
 10407  0011A4  D001               	goto	i1l19015
 10408                           	line	20
 10409                           	
 10410  0011A6                     i1l9234:
 10411  0011A6  D000               	goto	i1l19015
 10412                           	line	21
 10413                           	
 10414  0011A8                     i1l9233:
 10415                           	line	22
 10416                           	
 10417  0011A8                     i1l19015:
 10418                           ;my_uart.c: 20: }
 10419                           ;my_uart.c: 21: }
 10420                           ;my_uart.c: 22: if (USART_Status.OVERRUN_ERROR == 1) {
 10421                           	
 10422  0011A8  A646               	btfss	((c:_USART_Status)),c,3
 10423  0011AA  D001               	goto	i1u191_21
 10424  0011AC  D001               	goto	i1u191_20
 10425  0011AE                     i1u191_21:
 10426  0011AE  D011               	goto	i1l9236
 10427  0011B0                     i1u191_20:
 10428                           	line	25
 10429                           	
 10430  0011B0                     i1l19017:
 10431                           ;my_uart.c: 25: RCSTAbits.CREN = 0;
 10432  0011B0  98AB               	bcf	((c:4011)),c,4	;volatile
 10433                           	line	26
 10434                           ;my_uart.c: 26: RCSTAbits.CREN = 1;
 10435  0011B2  88AB               	bsf	((c:4011)),c,4	;volatile
 10436                           	line	27
 10437                           	
 10438  0011B4                     i1l19019:
 10439                           ;my_uart.c: 27: ToMainLow_sendmsg(0, 30, (void *) 0);
 10440  0011B4  6E1B               	movwf	(??_uart_recv_int_handler+0+0)&0ffh,c
 10441  0011B6  0E00               	movlw	low(0)
 10442  0011B8  6E17               	movwf	((c:?_ToMainLow_sendmsg)),c
 10443  0011BA  501B               	movf	(??_uart_recv_int_handler+0+0)&0ffh,c,w
 10444  0011BC  6E1C               	movwf	(??_uart_recv_int_handler+1+0)&0ffh,c
 10445  0011BE  0E1E               	movlw	low(01Eh)
 10446  0011C0  6E18               	movwf	(0+((c:?_ToMainLow_sendmsg)+01h)),c
 10447  0011C2  501C               	movf	(??_uart_recv_int_handler+1+0)&0ffh,c,w
 10448  0011C4  0E00               	movlw	high(0)
 10449  0011C6  6E1A               	movwf	(1+((c:?_ToMainLow_sendmsg)+02h)),c
 10450  0011C8  0E00               	movlw	low(0)
 10451  0011CA  6E19               	movwf	(0+((c:?_ToMainLow_sendmsg)+02h)),c
 10452  0011CC  EC7F  F00E         	call	_ToMainLow_sendmsg	;wreg free
 10453  0011D0  D000               	goto	i1l9236
 10454                           	line	28
 10455                           	
 10456  0011D2                     i1l9235:
 10457                           	line	29
 10458                           	
 10459  0011D2                     i1l9236:
 10460  0011D2  0012               	return
 10461                           	opt stack 0
 10462                           GLOBAL	__end_of_uart_recv_int_handler
 10463  0011D4                     	__end_of_uart_recv_int_handler:
 10464                           	signat	_uart_recv_int_handler,88
 10465                           	global	_ToMainLow_sendmsg
 10466                           
 10467 ;; *************** function _ToMainLow_sendmsg *****************
 10468 ;; Defined at:
 10469 ;;		line 103 in file "../src/messages.c"
 10470 ;; Parameters:    Size  Location     Type
 10471 ;;  length          1   22[COMRAM] unsigned char 
 10472 ;;  msgtype         1   23[COMRAM] unsigned char 
 10473 ;;  data            2   24[COMRAM] PTR void 
 10474 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), NULL(0), main@uc(5), 
 10475 ;; Auto vars:     Size  Location     Type
 10476 ;;		None
 10477 ;; Return value:  Size  Location     Type
 10478 ;;                  1    wreg      char 
 10479 ;; Registers used:
 10480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10481 ;; Tracked objects:
 10482 ;;		On entry : 0/0
 10483 ;;		On exit  : 0/0
 10484 ;;		Unchanged: 0/0
 10485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10486 ;;      Params:         4       0       0       0       0
 10487 ;;      Locals:         0       0       0       0       0
 10488 ;;      Temps:          0       0       0       0       0
 10489 ;;      Totals:         4       0       0       0       0
 10490 ;;Total ram usage:        4 bytes
 10491 ;; Hardware stack levels used:    1
 10492 ;; Hardware stack levels required when called:    8
 10493 ;; This function calls:
 10494 ;;		i1_send_msg
 10495 ;; This function is called by:
 10496 ;;		_uart_recv_int_handler
 10497 ;;		_timer1_int_handler
 10498 ;;		_adc_int_handler
 10499 ;; This function uses a non-reentrant model
 10500 ;;
 10501                           psect	text32,class=CODE,space=0,reloc=2
 10502                           global __ptext32
 10503  001CFE                     __ptext32:
 10504                           psect	text32
 10505                           	file	"../src/messages.c"
 10506                           	line	103
 10507                           	global	__size_of_ToMainLow_sendmsg
 10508  0000                     	__size_of_ToMainLow_sendmsg	equ	__end_of_ToMainLow_sendmsg-_ToMainLow_sendmsg
 10509                           	
 10510  001CFE                     _ToMainLow_sendmsg:
 10511                           	opt	stack 16
 10512                           	line	109
 10513                           	
 10514  001CFE                     i1l18977:
 10515                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
 10516                           ;	Return value of _ToMainLow_sendmsg is never used
 10517  001CFE  0101               	movlb	1	; () banked
 10518  001D00  0E01               	movlw	high(_ToMainLow_MQ)
 10519  001D02  6E0C               	movwf	((c:?i1_send_msg+1)),c
 10520  001D04  0101               	movlb	1	; () banked
 10521  001D06  0E6C               	movlw	low(_ToMainLow_MQ)
 10522  001D08  6E0B               	movwf	((c:?i1_send_msg)),c
 10523  001D0A  C017  F00D         	movff	(c:ToMainLow_sendmsg@length),0+((c:?i1_send_msg)+02h)
 10524  001D0E  C018  F00E         	movff	(c:ToMainLow_sendmsg@msgtype),0+((c:?i1_send_msg)+03h)
 10525  001D12  C019  F00F         	movff	(c:ToMainLow_sendmsg@data),0+((c:?i1_send_msg)+04h)
 10526  001D16  C01A  F010         	movff	(c:ToMainLow_sendmsg@data+1),1+((c:?i1_send_msg)+04h)
 10527  001D1A  EC44  F009         	call	i1_send_msg	;wreg free
 10528  001D1E  D000               	goto	i1l5485
 10529                           	
 10530  001D20                     i1l18979:
 10531                           	line	110
 10532                           	
 10533  001D20                     i1l5485:
 10534  001D20  0012               	return
 10535                           	opt stack 0
 10536                           GLOBAL	__end_of_ToMainLow_sendmsg
 10537  001D22                     	__end_of_ToMainLow_sendmsg:
 10538                           	signat	_ToMainLow_sendmsg,12409
 10539                           	global	_ReadUSART
 10540                           
 10541 ;; *************** function _ReadUSART *****************
 10542 ;; Defined at:
 10543 ;;		line 16 in file "plib/USART/uread.c"
 10544 ;; Parameters:    Size  Location     Type
 10545 ;;		None
 10546 ;; Auto vars:     Size  Location     Type
 10547 ;;  data            1    0[COMRAM] unsigned char 
 10548 ;; Return value:  Size  Location     Type
 10549 ;;                  1    wreg      unsigned char 
 10550 ;; Registers used:
 10551 ;;		wreg, status,2, status,0
 10552 ;; Tracked objects:
 10553 ;;		On entry : 0/0
 10554 ;;		On exit  : 0/0
 10555 ;;		Unchanged: 0/0
 10556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10557 ;;      Params:         0       0       0       0       0
 10558 ;;      Locals:         1       0       0       0       0
 10559 ;;      Temps:          0       0       0       0       0
 10560 ;;      Totals:         1       0       0       0       0
 10561 ;;Total ram usage:        1 bytes
 10562 ;; Hardware stack levels used:    1
 10563 ;; Hardware stack levels required when called:    6
 10564 ;; This function calls:
 10565 ;;		Nothing
 10566 ;; This function is called by:
 10567 ;;		_uart_recv_int_handler
 10568 ;; This function uses a non-reentrant model
 10569 ;;
 10570                           psect	text33,class=CODE,space=0,reloc=2
 10571                           global __ptext33
 10572  001AD8                     __ptext33:
 10573                           psect	text33
 10574                           	file	"plib/USART/uread.c"
 10575                           	line	16
 10576                           	global	__size_of_ReadUSART
 10577  0000                     	__size_of_ReadUSART	equ	__end_of_ReadUSART-_ReadUSART
 10578                           	
 10579  001AD8                     _ReadUSART:
 10580                           	opt	stack 18
 10581                           	line	19
 10582                           	
 10583  001AD8                     i1l18815:
 10584  001AD8  0EF2               	movlw	(0F2h)&0ffh
 10585  001ADA  1646               	andwf	((c:_USART_Status)),c
 10586                           	line	21
 10587                           	
 10588  001ADC                     i1l18817:
 10589                           	
 10590  001ADC  ACAB               	btfss	((c:4011)),c,6	;volatile
 10591  001ADE  D001               	goto	i1u176_21
 10592  001AE0  D001               	goto	i1u176_20
 10593  001AE2                     i1u176_21:
 10594  001AE2  D007               	goto	i1l16543
 10595  001AE4                     i1u176_20:
 10596                           	line	23
 10597                           	
 10598  001AE4                     i1l18819:
 10599  001AE4  9046               	bcf	((c:_USART_Status)),c,0
 10600                           	line	24
 10601                           	
 10602  001AE6  A0AB               	btfss	((c:4011)),c,0	;volatile
 10603  001AE8  D001               	goto	i1u177_21
 10604  001AEA  D001               	goto	i1u177_20
 10605  001AEC                     i1u177_21:
 10606  001AEC  D002               	goto	i1l16543
 10607  001AEE                     i1u177_20:
 10608                           	line	25
 10609                           	
 10610  001AEE                     i1l18821:
 10611  001AEE  8046               	bsf	((c:_USART_Status)),c,0
 10612  001AF0  D000               	goto	i1l16543
 10613                           	
 10614  001AF2                     i1l16544:
 10615                           	line	26
 10616                           	
 10617  001AF2                     i1l16543:
 10618                           	line	28
 10619                           	
 10620  001AF2  A4AB               	btfss	((c:4011)),c,2	;volatile
 10621  001AF4  D001               	goto	i1u178_21
 10622  001AF6  D001               	goto	i1u178_20
 10623  001AF8                     i1u178_21:
 10624  001AF8  D001               	goto	i1l16545
 10625  001AFA                     i1u178_20:
 10626                           	line	29
 10627                           	
 10628  001AFA                     i1l18823:
 10629  001AFA  8446               	bsf	((c:_USART_Status)),c,2
 10630                           	
 10631  001AFC                     i1l16545:
 10632                           	line	31
 10633                           	
 10634  001AFC  A2AB               	btfss	((c:4011)),c,1	;volatile
 10635  001AFE  D001               	goto	i1u179_21
 10636  001B00  D001               	goto	i1u179_20
 10637  001B02                     i1u179_21:
 10638  001B02  D001               	goto	i1l16546
 10639  001B04                     i1u179_20:
 10640                           	line	32
 10641                           	
 10642  001B04                     i1l18825:
 10643  001B04  8646               	bsf	((c:_USART_Status)),c,3
 10644                           	
 10645  001B06                     i1l16546:
 10646                           	line	34
 10647  001B06  CFAE F001          	movff	(c:4014),(c:ReadUSART@data)	;volatile
 10648                           	line	36
 10649                           	
 10650  001B0A                     i1l18827:
 10651  001B0A  5001               	movf	((c:ReadUSART@data)),c,w
 10652  001B0C  D000               	goto	i1l16547
 10653                           	
 10654  001B0E                     i1l18829:
 10655                           	line	37
 10656                           	
 10657  001B0E                     i1l16547:
 10658  001B0E  0012               	return
 10659                           	opt stack 0
 10660                           GLOBAL	__end_of_ReadUSART
 10661  001B10                     	__end_of_ReadUSART:
 10662                           	signat	_ReadUSART,89
 10663                           	global	_ReadTimer1
 10664                           
 10665 ;; *************** function _ReadTimer1 *****************
 10666 ;; Defined at:
 10667 ;;		line 16 in file "plib/Timers/t1read.c"
 10668 ;; Parameters:    Size  Location     Type
 10669 ;;		None
 10670 ;; Auto vars:     Size  Location     Type
 10671 ;;  timer           2    2[COMRAM] struct Timers
 10672 ;; Return value:  Size  Location     Type
 10673 ;;                  2    0[COMRAM] unsigned int 
 10674 ;; Registers used:
 10675 ;;		None
 10676 ;; Tracked objects:
 10677 ;;		On entry : 0/0
 10678 ;;		On exit  : 0/0
 10679 ;;		Unchanged: 0/0
 10680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10681 ;;      Params:         2       0       0       0       0
 10682 ;;      Locals:         2       0       0       0       0
 10683 ;;      Temps:          0       0       0       0       0
 10684 ;;      Totals:         4       0       0       0       0
 10685 ;;Total ram usage:        4 bytes
 10686 ;; Hardware stack levels used:    1
 10687 ;; Hardware stack levels required when called:    6
 10688 ;; This function calls:
 10689 ;;		Nothing
 10690 ;; This function is called by:
 10691 ;;		_timer1_int_handler
 10692 ;; This function uses a non-reentrant model
 10693 ;;
 10694                           psect	text34,class=CODE,space=0,reloc=2
 10695                           global __ptext34
 10696  001D80                     __ptext34:
 10697                           psect	text34
 10698                           	file	"plib/Timers/t1read.c"
 10699                           	line	16
 10700                           	global	__size_of_ReadTimer1
 10701  0000                     	__size_of_ReadTimer1	equ	__end_of_ReadTimer1-_ReadTimer1
 10702                           	
 10703  001D80                     _ReadTimer1:
 10704                           	opt	stack 18
 10705                           	line	19
 10706                           	
 10707  001D80                     i1l17843:
 10708  001D80  CFCE F003          	movff	(c:4046),(c:ReadTimer1@timer)	;volatile
 10709                           	line	20
 10710  001D84  CFCF F004          	movff	(c:4047),0+((c:ReadTimer1@timer)+01h)	;volatile
 10711                           	line	22
 10712  001D88  C003  F001         	movff	(c:ReadTimer1@timer),(c:?_ReadTimer1)
 10713  001D8C  C004  F002         	movff	(c:ReadTimer1@timer+1),(c:?_ReadTimer1+1)
 10714                           	line	23
 10715                           	
 10716  001D90                     i1l16492:
 10717  001D90  0012               	return
 10718                           	opt stack 0
 10719                           GLOBAL	__end_of_ReadTimer1
 10720  001D92                     	__end_of_ReadTimer1:
 10721                           	signat	_ReadTimer1,90
 10722                           	global	_WriteTimer1
 10723                           
 10724 ;; *************** function _WriteTimer1 *****************
 10725 ;; Defined at:
 10726 ;;		line 15 in file "plib/Timers/t1write.c"
 10727 ;; Parameters:    Size  Location     Type
 10728 ;;  timer1          2    0[COMRAM] unsigned int 
 10729 ;; Auto vars:     Size  Location     Type
 10730 ;;  timer           2    2[COMRAM] struct Timers
 10731 ;; Return value:  Size  Location     Type
 10732 ;;		None               void
 10733 ;; Registers used:
 10734 ;;		None
 10735 ;; Tracked objects:
 10736 ;;		On entry : 0/0
 10737 ;;		On exit  : 0/0
 10738 ;;		Unchanged: 0/0
 10739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10740 ;;      Params:         2       0       0       0       0
 10741 ;;      Locals:         2       0       0       0       0
 10742 ;;      Temps:          0       0       0       0       0
 10743 ;;      Totals:         4       0       0       0       0
 10744 ;;Total ram usage:        4 bytes
 10745 ;; Hardware stack levels used:    1
 10746 ;; Hardware stack levels required when called:    6
 10747 ;; This function calls:
 10748 ;;		Nothing
 10749 ;; This function is called by:
 10750 ;;		_timer1_int_handler
 10751 ;; This function uses a non-reentrant model
 10752 ;;
 10753                           psect	text35,class=CODE,space=0,reloc=2
 10754                           global __ptext35
 10755  001D92                     __ptext35:
 10756                           psect	text35
 10757                           	file	"plib/Timers/t1write.c"
 10758                           	line	15
 10759                           	global	__size_of_WriteTimer1
 10760  0000                     	__size_of_WriteTimer1	equ	__end_of_WriteTimer1-_WriteTimer1
 10761                           	
 10762  001D92                     _WriteTimer1:
 10763                           	opt	stack 18
 10764                           	line	18
 10765                           	
 10766  001D92                     i1l17845:
 10767  001D92  C001  F003         	movff	(c:WriteTimer1@timer1),(c:WriteTimer1@timer)
 10768  001D96  C002  F004         	movff	(c:WriteTimer1@timer1+1),(c:WriteTimer1@timer+1)
 10769                           	line	20
 10770  001D9A  C004  FFCF         	movff	0+((c:WriteTimer1@timer)+01h),(c:4047)	;volatile
 10771                           	line	21
 10772  001D9E  C003  FFCE         	movff	(c:WriteTimer1@timer),(c:4046)	;volatile
 10773                           	line	22
 10774                           	
 10775  001DA2                     i1l16499:
 10776  001DA2  0012               	return
 10777                           	opt stack 0
 10778                           GLOBAL	__end_of_WriteTimer1
 10779  001DA4                     	__end_of_WriteTimer1:
 10780                           	signat	_WriteTimer1,4216
 10781                           	global	_ReadADC
 10782                           
 10783 ;; *************** function _ReadADC *****************
 10784 ;; Defined at:
 10785 ;;		line 25 in file "plib/ADC/adcread.c"
 10786 ;; Parameters:    Size  Location     Type
 10787 ;;		None
 10788 ;; Auto vars:     Size  Location     Type
 10789 ;;		None
 10790 ;; Return value:  Size  Location     Type
 10791 ;;                  2    0[COMRAM] int 
 10792 ;; Registers used:
 10793 ;;		wreg, status,2
 10794 ;; Tracked objects:
 10795 ;;		On entry : 0/0
 10796 ;;		On exit  : 0/0
 10797 ;;		Unchanged: 0/0
 10798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10799 ;;      Params:         2       0       0       0       0
 10800 ;;      Locals:         0       0       0       0       0
 10801 ;;      Temps:          0       0       0       0       0
 10802 ;;      Totals:         2       0       0       0       0
 10803 ;;Total ram usage:        2 bytes
 10804 ;; Hardware stack levels used:    1
 10805 ;; Hardware stack levels required when called:    6
 10806 ;; This function calls:
 10807 ;;		Nothing
 10808 ;; This function is called by:
 10809 ;;		_adc_int_handler
 10810 ;; This function uses a non-reentrant model
 10811 ;;
 10812                           psect	text36,class=CODE,space=0,reloc=2
 10813                           global __ptext36
 10814  001DC4                     __ptext36:
 10815                           psect	text36
 10816                           	file	"plib/ADC/adcread.c"
 10817                           	line	25
 10818                           	global	__size_of_ReadADC
 10819  0000                     	__size_of_ReadADC	equ	__end_of_ReadADC-_ReadADC
 10820                           	
 10821  001DC4                     _ReadADC:
 10822                           	opt	stack 18
 10823                           	line	26
 10824                           	
 10825  001DC4                     i1l17847:
 10826  001DC4  50C4               	movf	((c:4036)),c,w	;volatile
 10827  001DC6  6E02               	movwf	((c:?_ReadADC+1)),c
 10828  001DC8  50C3               	movf	((c:4035)),c,w	;volatile
 10829  001DCA  6E01               	movwf	((c:?_ReadADC)),c
 10830  001DCC  D000               	goto	i1l16452
 10831                           	
 10832  001DCE                     i1l17849:
 10833                           	line	27
 10834                           	
 10835  001DCE                     i1l16452:
 10836  001DCE  0012               	return
 10837                           	opt stack 0
 10838                           GLOBAL	__end_of_ReadADC
 10839  001DD0                     	__end_of_ReadADC:
 10840                           	signat	_ReadADC,90
 10841                           	global	i1_send_msg
 10842                           
 10843 ;; *************** function i1_send_msg *****************
 10844 ;; Defined at:
 10845 ;;		line 24 in file "../src/messages.c"
 10846 ;; Parameters:    Size  Location     Type
 10847 ;;  send_msg        2   10[COMRAM] PTR struct __msg_queue
 10848 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 10849 ;;  send_msg        1   12[COMRAM] unsigned char 
 10850 ;;  send_msg        1   13[COMRAM] unsigned char 
 10851 ;;  send_msg        2   14[COMRAM] PTR void 
 10852 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 10853 ;;		 -> i2c_slave_int_handler@error_buf(3), main@msgbuffer(11), main@uc(5), 
 10854 ;; Auto vars:     Size  Location     Type
 10855 ;;  send_msg        2   20[COMRAM] PTR struct __msg
 10856 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 10857 ;;  send_msg        2   17[COMRAM] unsigned int 
 10858 ;;  send_msg        1   19[COMRAM] unsigned char 
 10859 ;; Return value:  Size  Location     Type
 10860 ;;                  1    wreg      char 
 10861 ;; Registers used:
 10862 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10863 ;; Tracked objects:
 10864 ;;		On entry : 0/0
 10865 ;;		On exit  : 0/0
 10866 ;;		Unchanged: 0/0
 10867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10868 ;;      Params:         6       0       0       0       0
 10869 ;;      Locals:         5       0       0       0       0
 10870 ;;      Temps:          1       0       0       0       0
 10871 ;;      Totals:        12       0       0       0       0
 10872 ;;Total ram usage:       12 bytes
 10873 ;; Hardware stack levels used:    1
 10874 ;; Hardware stack levels required when called:    7
 10875 ;; This function calls:
 10876 ;;		i1_memcpy
 10877 ;; This function is called by:
 10878 ;;		_ToMainLow_sendmsg
 10879 ;; This function uses a non-reentrant model
 10880 ;;
 10881                           psect	text37,class=CODE,space=0,reloc=2
 10882                           global __ptext37
 10883  001288                     __ptext37:
 10884                           psect	text37
 10885                           	file	"../src/messages.c"
 10886                           	line	24
 10887                           	global	__size_ofi1_send_msg
 10888  0000                     	__size_ofi1_send_msg	equ	__end_ofi1_send_msg-i1_send_msg
 10889                           	
 10890  001288                     i1_send_msg:
 10891                           	opt	stack 16
 10892                           	line	28
 10893                           	
 10894  001288                     i1l18953:
 10895                           ;messages.c: 25: unsigned char slot;
 10896                           ;messages.c: 27: msg *qmsg;
 10897                           ;messages.c: 28: size_t tlength = length;
 10898  001288  C00D  F012         	movff	(c:i1send_msg@length),(c:i1send_msg@tlength)
 10899  00128C  6A13               	clrf	((c:i1send_msg@tlength+1)),c
 10900                           	line	38
 10901                           	
 10902  00128E                     i1l18955:
 10903                           ;messages.c: 38: slot = qptr->cur_write_ind;
 10904  00128E  EE20 F034          	lfsr	2,034h
 10905  001292  500B               	movf	((c:i1send_msg@qptr)),c,w
 10906  001294  26D9               	addwf	fsr2l
 10907  001296  500C               	movf	((c:i1send_msg@qptr+1)),c,w
 10908  001298  22DA               	addwfc	fsr2h
 10909  00129A  50DF               	movf	indf2,w
 10910  00129C  6E14               	movwf	((c:i1send_msg@slot)),c
 10911                           	line	39
 10912                           	
 10913  00129E                     i1l18957:
 10914                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
 10915  00129E  5014               	movf	((c:i1send_msg@slot)),c,w
 10916  0012A0  0D0D               	mullw	0Dh
 10917  0012A2  50F3               	movf	(prodl),c,w
 10918  0012A4  240B               	addwf	((c:i1send_msg@qptr)),c,w
 10919                           	
 10920  0012A6  6E15               	movwf	((c:i1send_msg@qmsg)),c
 10921  0012A8  50F4               	movf	(prodh),c,w
 10922  0012AA  200C               	addwfc	((c:i1send_msg@qptr+1)),c,w
 10923  0012AC  6E16               	movwf	1+((c:i1send_msg@qmsg)),c
 10924                           	line	41
 10925                           	
 10926  0012AE                     i1l18959:
 10927                           ;messages.c: 41: if (qmsg->full != 0) {
 10928  0012AE  C015  FFD9         	movff	(c:i1send_msg@qmsg),fsr2l
 10929  0012B2  C016  FFDA         	movff	(c:i1send_msg@qmsg+1),fsr2h
 10930  0012B6  50DF               	movf	indf2,w
 10931  0012B8  B4D8               	btfsc	status,2
 10932  0012BA  D001               	goto	i1u188_21
 10933  0012BC  D001               	goto	i1u188_20
 10934  0012BE                     i1u188_21:
 10935  0012BE  D003               	goto	i1l18965
 10936  0012C0                     i1u188_20:
 10937                           	line	42
 10938                           	
 10939  0012C0                     i1l18961:
 10940                           ;messages.c: 42: return (-1);
 10941  0012C0  0EFF               	movlw	(-1)&0ffh
 10942  0012C2  D03A               	goto	i1l5474
 10943                           	
 10944  0012C4                     i1l18963:
 10945  0012C4  D039               	goto	i1l5474
 10946                           	line	43
 10947                           	
 10948  0012C6                     i1l5473:
 10949                           	line	46
 10950                           	
 10951  0012C6                     i1l18965:
 10952                           ;messages.c: 43: }
 10953                           ;messages.c: 46: qmsg->length = length;
 10954  0012C6  EE20 F001          	lfsr	2,01h
 10955  0012CA  5015               	movf	((c:i1send_msg@qmsg)),c,w
 10956  0012CC  26D9               	addwf	fsr2l
 10957  0012CE  5016               	movf	((c:i1send_msg@qmsg+1)),c,w
 10958  0012D0  22DA               	addwfc	fsr2h
 10959  0012D2  C00D  FFDF         	movff	(c:i1send_msg@length),indf2
 10960                           
 10961                           	line	47
 10962                           ;messages.c: 47: qmsg->msgtype = msgtype;
 10963  0012D6  EE20 F002          	lfsr	2,02h
 10964  0012DA  5015               	movf	((c:i1send_msg@qmsg)),c,w
 10965  0012DC  26D9               	addwf	fsr2l
 10966  0012DE  5016               	movf	((c:i1send_msg@qmsg+1)),c,w
 10967  0012E0  22DA               	addwfc	fsr2h
 10968  0012E2  C00E  FFDF         	movff	(c:i1send_msg@msgtype),indf2
 10969                           
 10970                           	line	55
 10971                           	
 10972  0012E6                     i1l18967:
 10973                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
 10974  0012E6  0E03               	movlw	low(03h)
 10975  0012E8  2415               	addwf	((c:i1send_msg@qmsg)),c,w
 10976                           	
 10977  0012EA  6E01               	movwf	((c:?i1_memcpy)),c
 10978  0012EC  0E00               	movlw	high(03h)
 10979  0012EE  2016               	addwfc	((c:i1send_msg@qmsg+1)),c,w
 10980  0012F0  6E02               	movwf	1+((c:?i1_memcpy)),c
 10981  0012F2  C00F  F003         	movff	(c:i1send_msg@data),0+((c:?i1_memcpy)+02h)
 10982  0012F6  C010  F004         	movff	(c:i1send_msg@data+1),1+((c:?i1_memcpy)+02h)
 10983  0012FA  C012  F005         	movff	(c:i1send_msg@tlength),0+((c:?i1_memcpy)+04h)
 10984  0012FE  C013  F006         	movff	(c:i1send_msg@tlength+1),1+((c:?i1_memcpy)+04h)
 10985  001302  EC88  F00C         	call	i1_memcpy	;wreg free
 10986                           	line	56
 10987                           	
 10988  001306                     i1l18969:
 10989                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
 10990  001306  EE20 F034          	lfsr	2,034h
 10991  00130A  500B               	movf	((c:i1send_msg@qptr)),c,w
 10992  00130C  26D9               	addwf	fsr2l
 10993  00130E  500C               	movf	((c:i1send_msg@qptr+1)),c,w
 10994  001310  22DA               	addwfc	fsr2h
 10995  001312  EE10 F034          	lfsr	1,034h
 10996  001316  500B               	movf	((c:i1send_msg@qptr)),c,w
 10997  001318  26E1               	addwf	fsr1l
 10998  00131A  500C               	movf	((c:i1send_msg@qptr+1)),c,w
 10999  00131C  22E2               	addwfc	fsr1h
 11000  00131E  50E7               	movf	indf1,w
 11001  001320  6E11               	movwf	(??i1_send_msg+0+0)&0ffh,c
 11002  001322  2811               	incf	((??i1_send_msg+0+0)),c,w
 11003  001324  0B03               	andlw	low(03h)
 11004  001326  6EDF               	movwf	indf2
 11005                           
 11006                           	line	59
 11007                           	
 11008  001328                     i1l18971:
 11009                           ;messages.c: 59: qmsg->full = 1;
 11010  001328  C015  FFD9         	movff	(c:i1send_msg@qmsg),fsr2l
 11011  00132C  C016  FFDA         	movff	(c:i1send_msg@qmsg+1),fsr2h
 11012  001330  0E01               	movlw	low(01h)
 11013  001332  6EDF               	movwf	indf2
 11014                           	line	60
 11015                           	
 11016  001334                     i1l18973:
 11017                           ;messages.c: 60: return (1);
 11018  001334  0E01               	movlw	(01h)&0ffh
 11019  001336  D000               	goto	i1l5474
 11020                           	
 11021  001338                     i1l18975:
 11022                           	line	61
 11023                           	
 11024  001338                     i1l5474:
 11025  001338  0012               	return
 11026                           	opt stack 0
 11027                           GLOBAL	__end_ofi1_send_msg
 11028  00133A                     	__end_ofi1_send_msg:
 11029                           	signat	i1_send_msg,89
 11030                           	global	i1_memcpy
 11031                           
 11032 ;; *************** function i1_memcpy *****************
 11033 ;; Defined at:
 11034 ;;		line 13 in file "/opt/microchip/xc8/v1.10/sources/memcpy.c"
 11035 ;; Parameters:    Size  Location     Type
 11036 ;;  memcpy          2    0[COMRAM] PTR void 
 11037 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
 11038 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
 11039 ;;  memcpy          2    2[COMRAM] PTR const void 
 11040 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 11041 ;;		 -> i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 11042 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(5), 
 11043 ;;  memcpy          2    4[COMRAM] unsigned int 
 11044 ;; Auto vars:     Size  Location     Type
 11045 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 11046 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 11047 ;;		 -> i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 11048 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(5), 
 11049 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 11050 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
 11051 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
 11052 ;; Return value:  Size  Location     Type
 11053 ;;                  2    0[COMRAM] PTR void 
 11054 ;; Registers used:
 11055 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11056 ;; Tracked objects:
 11057 ;;		On entry : 0/0
 11058 ;;		On exit  : 0/0
 11059 ;;		Unchanged: 0/0
 11060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11061 ;;      Params:         6       0       0       0       0
 11062 ;;      Locals:         4       0       0       0       0
 11063 ;;      Temps:          0       0       0       0       0
 11064 ;;      Totals:        10       0       0       0       0
 11065 ;;Total ram usage:       10 bytes
 11066 ;; Hardware stack levels used:    1
 11067 ;; Hardware stack levels required when called:    6
 11068 ;; This function calls:
 11069 ;;		Nothing
 11070 ;; This function is called by:
 11071 ;;		i1_send_msg
 11072 ;; This function uses a non-reentrant model
 11073 ;;
 11074                           psect	text38,class=CODE,space=0,reloc=2
 11075                           global __ptext38
 11076  001910                     __ptext38:
 11077                           psect	text38
 11078                           	file	"/opt/microchip/xc8/v1.10/sources/memcpy.c"
 11079                           	line	13
 11080                           	global	__size_ofi1_memcpy
 11081  0000                     	__size_ofi1_memcpy	equ	__end_ofi1_memcpy-i1_memcpy
 11082                           	
 11083  001910                     i1_memcpy:
 11084                           	opt	stack 16
 11085                           	line	24
 11086                           	
 11087  001910                     i1l18933:
 11088  001910  C003  F009         	movff	(c:i1memcpy@s1),(c:i1memcpy@s)
 11089  001914  C004  F00A         	movff	(c:i1memcpy@s1+1),(c:i1memcpy@s+1)
 11090                           	line	25
 11091  001918  C001  F007         	movff	(c:i1memcpy@d1),(c:i1memcpy@d)
 11092  00191C  C002  F008         	movff	(c:i1memcpy@d1+1),(c:i1memcpy@d+1)
 11093                           	line	26
 11094  001920  D00F               	goto	i1l18941
 11095                           	
 11096  001922                     i1l17041:
 11097                           	line	27
 11098                           	
 11099  001922                     i1l18935:
 11100  001922  C009  FFD9         	movff	(c:i1memcpy@s),fsr2l
 11101  001926  C00A  FFDA         	movff	(c:i1memcpy@s+1),fsr2h
 11102  00192A  C007  FFE1         	movff	(c:i1memcpy@d),fsr1l
 11103  00192E  C008  FFE2         	movff	(c:i1memcpy@d+1),fsr1h
 11104  001932  CFDF FFE7          	movff	indf2,indf1
 11105                           	
 11106  001936                     i1l18937:
 11107  001936  4A09               	infsnz	((c:i1memcpy@s)),c
 11108  001938  2A0A               	incf	((c:i1memcpy@s+1)),c
 11109                           	
 11110  00193A                     i1l18939:
 11111  00193A  4A07               	infsnz	((c:i1memcpy@d)),c
 11112  00193C  2A08               	incf	((c:i1memcpy@d+1)),c
 11113  00193E  D000               	goto	i1l18941
 11114                           	
 11115  001940                     i1l17040:
 11116                           	line	26
 11117                           	
 11118  001940                     i1l18941:
 11119  001940  0605               	decf	((c:i1memcpy@n)),c
 11120  001942  A0D8               	btfss	status,0
 11121  001944  0606               	decf	((c:i1memcpy@n+1)),c
 11122  001946  2805               	incf	((c:i1memcpy@n))&0ffh,w
 11123  001948  B4D8               	btfsc	status,2
 11124  00194A  2806               	incf ((c:i1memcpy@n+1))&0ffh,w
 11125                           
 11126  00194C  A4D8               	btfss	status,2
 11127  00194E  D001               	goto	i1u186_21
 11128  001950  D001               	goto	i1u186_20
 11129  001952                     i1u186_21:
 11130  001952  D7E7               	goto	i1l18935
 11131  001954                     i1u186_20:
 11132  001954  D000               	goto	i1l17043
 11133                           	
 11134  001956                     i1l17042:
 11135                           	line	32
 11136                           ;	Return value of i1_memcpy is never used
 11137                           	
 11138  001956                     i1l17043:
 11139  001956  0012               	return
 11140                           	opt stack 0
 11141                           GLOBAL	__end_ofi1_memcpy
 11142  001958                     	__end_ofi1_memcpy:
 11143                           	signat	i1_memcpy,90
 11144                           	global	_InterruptHandlerHigh
 11145                           
 11146 ;; *************** function _InterruptHandlerHigh *****************
 11147 ;; Defined at:
 11148 ;;		line 83 in file "../src/interrupts.c"
 11149 ;; Parameters:    Size  Location     Type
 11150 ;;		None
 11151 ;; Auto vars:     Size  Location     Type
 11152 ;;		None
 11153 ;; Return value:  Size  Location     Type
 11154 ;;		None               void
 11155 ;; Registers used:
 11156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11157 ;; Tracked objects:
 11158 ;;		On entry : 0/0
 11159 ;;		On exit  : 0/0
 11160 ;;		Unchanged: 0/0
 11161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11162 ;;      Params:         0       0       0       0       0
 11163 ;;      Locals:         0       0       0       0       0
 11164 ;;      Temps:          0      14       0       0       0
 11165 ;;      Totals:         0      14       0       0       0
 11166 ;;Total ram usage:       14 bytes
 11167 ;; Hardware stack levels used:    1
 11168 ;; Hardware stack levels required when called:    5
 11169 ;; This function calls:
 11170 ;;		_i2c_int_handler
 11171 ;;		_timer0_int_handler
 11172 ;;		_SleepIfOkay
 11173 ;; This function is called by:
 11174 ;;		Interrupt level 2
 11175 ;; This function uses a non-reentrant model
 11176 ;;
 11177                           psect	intcode,class=CODE,space=0,reloc=2
 11178                           global __pintcode
 11179  000008                     __pintcode:
 11180                           psect	intcode
 11181                           	file	"../src/interrupts.c"
 11182                           	line	83
 11183                           	global	__size_of_InterruptHandlerHigh
 11184  0000                     	__size_of_InterruptHandlerHigh	equ	__end_of_InterruptHandlerHigh-_InterruptHandlerHigh
 11185                           	
 11186  000008                     _InterruptHandlerHigh:
 11187                           	opt	stack 16
 11188  000008  CFFA F0AB          	movff	pclat+0,??_InterruptHandlerHigh+0
 11189  00000C  CFFB F0AC          	movff	pclat+1,??_InterruptHandlerHigh+1
 11190  000010  CFE9 F0AD          	movff	fsr0l+0,??_InterruptHandlerHigh+2
 11191                           	global	int_func
 11192  000014  EF48  F00A         	goto	int_func
 11193                           psect	intcode_body,class=CODE,space=0,reloc=2
 11194                           global __pintcode_body
 11195  001490                     __pintcode_body:
 11196  001490                     int_func:
 11197  001490  CFEA F0AE          	movff	fsr0h+0,??_InterruptHandlerHigh+3
 11198  001494  CFE1 F0AF          	movff	fsr1l+0,??_InterruptHandlerHigh+4
 11199  001498  CFE2 F0B0          	movff	fsr1h+0,??_InterruptHandlerHigh+5
 11200  00149C  CFD9 F0B1          	movff	fsr2l+0,??_InterruptHandlerHigh+6
 11201  0014A0  CFDA F0B2          	movff	fsr2h+0,??_InterruptHandlerHigh+7
 11202  0014A4  CFF3 F0B3          	movff	prodl+0,??_InterruptHandlerHigh+8
 11203  0014A8  CFF4 F0B4          	movff	prodh+0,??_InterruptHandlerHigh+9
 11204  0014AC  CFF6 F0B5          	movff	tblptrl+0,??_InterruptHandlerHigh+10
 11205  0014B0  CFF7 F0B6          	movff	tblptrh+0,??_InterruptHandlerHigh+11
 11206  0014B4  CFF8 F0B7          	movff	tblptru+0,??_InterruptHandlerHigh+12
 11207  0014B8  CFF5 F0B8          	movff	tablat+0,??_InterruptHandlerHigh+13
 11208                           	line	97
 11209                           	
 11210  0014BC                     i2l19039:
 11211                           ;interrupts.c: 97: if (PIR1bits.SSPIF) {
 11212                           	
 11213  0014BC  A69E               	btfss	((c:3998)),c,3	;volatile
 11214  0014BE  D001               	goto	i2u195_41
 11215  0014C0  D001               	goto	i2u195_40
 11216  0014C2                     i2u195_41:
 11217  0014C2  D004               	goto	i2l19045
 11218  0014C4                     i2u195_40:
 11219                           	line	99
 11220                           	
 11221  0014C4                     i2l19041:
 11222                           ;interrupts.c: 99: PIR1bits.SSPIF = 0;
 11223  0014C4  969E               	bcf	((c:3998)),c,3	;volatile
 11224                           	line	101
 11225                           	
 11226  0014C6                     i2l19043:
 11227                           ;interrupts.c: 101: i2c_int_handler();
 11228  0014C6  EC59  F00E         	call	_i2c_int_handler	;wreg free
 11229  0014CA  D000               	goto	i2l19045
 11230                           	line	102
 11231                           	
 11232  0014CC                     i2l1820:
 11233                           	line	106
 11234                           	
 11235  0014CC                     i2l19045:
 11236                           ;interrupts.c: 102: }
 11237                           ;interrupts.c: 106: if (INTCONbits.TMR0IF) {
 11238                           	
 11239  0014CC  A4F2               	btfss	((c:4082)),c,2	;volatile
 11240  0014CE  D001               	goto	i2u196_41
 11241  0014D0  D001               	goto	i2u196_40
 11242  0014D2                     i2u196_41:
 11243  0014D2  D004               	goto	i2l19051
 11244  0014D4                     i2u196_40:
 11245                           	line	107
 11246                           	
 11247  0014D4                     i2l19047:
 11248                           ;interrupts.c: 107: INTCONbits.TMR0IF = 0;
 11249  0014D4  94F2               	bcf	((c:4082)),c,2	;volatile
 11250                           	line	109
 11251                           	
 11252  0014D6                     i2l19049:
 11253                           ;interrupts.c: 109: timer0_int_handler();
 11254  0014D6  EC9D  F009         	call	_timer0_int_handler	;wreg free
 11255  0014DA  D000               	goto	i2l19051
 11256                           	line	110
 11257                           	
 11258  0014DC                     i2l1821:
 11259                           	line	119
 11260                           	
 11261  0014DC                     i2l19051:
 11262                           ;interrupts.c: 110: }
 11263                           ;interrupts.c: 119: SleepIfOkay();
 11264  0014DC  EC12  F00B         	call	_SleepIfOkay	;wreg free
 11265                           	line	120
 11266                           	
 11267  0014E0                     i2l1822:
 11268  0014E0  C0B8  FFF5         	movff	??_InterruptHandlerHigh+13,tablat+0
 11269  0014E4  C0B7  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru+0
 11270  0014E8  C0B6  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh+0
 11271  0014EC  C0B5  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl+0
 11272  0014F0  C0B4  FFF4         	movff	??_InterruptHandlerHigh+9,prodh+0
 11273  0014F4  C0B3  FFF3         	movff	??_InterruptHandlerHigh+8,prodl+0
 11274  0014F8  C0B2  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h+0
 11275  0014FC  C0B1  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l+0
 11276  001500  C0B0  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h+0
 11277  001504  C0AF  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l+0
 11278  001508  C0AE  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h+0
 11279  00150C  C0AD  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l+0
 11280  001510  C0AC  FFFB         	movff	??_InterruptHandlerHigh+1,pclat+1
 11281  001514  C0AB  FFFA         	movff	??_InterruptHandlerHigh+0,pclat+0
 11282  001518  0011               	retfie f
 11283                           	opt stack 0
 11284                           GLOBAL	__end_of_InterruptHandlerHigh
 11285  00151A                     	__end_of_InterruptHandlerHigh:
 11286                           	signat	_InterruptHandlerHigh,88
 11287                           	global	_i2c_int_handler
 11288                           
 11289 ;; *************** function _i2c_int_handler *****************
 11290 ;; Defined at:
 11291 ;;		line 168 in file "../src/my_i2c.c"
 11292 ;; Parameters:    Size  Location     Type
 11293 ;;		None
 11294 ;; Auto vars:     Size  Location     Type
 11295 ;;		None
 11296 ;; Return value:  Size  Location     Type
 11297 ;;		None               void
 11298 ;; Registers used:
 11299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11300 ;; Tracked objects:
 11301 ;;		On entry : 0/0
 11302 ;;		On exit  : 0/0
 11303 ;;		Unchanged: 0/0
 11304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11305 ;;      Params:         0       0       0       0       0
 11306 ;;      Locals:         0       0       0       0       0
 11307 ;;      Temps:          0       0       0       0       0
 11308 ;;      Totals:         0       0       0       0       0
 11309 ;;Total ram usage:        0 bytes
 11310 ;; Hardware stack levels used:    1
 11311 ;; Hardware stack levels required when called:    4
 11312 ;; This function calls:
 11313 ;;		_i2c_slave_int_handler
 11314 ;;		_i2c_master_int_handler
 11315 ;; This function is called by:
 11316 ;;		_InterruptHandlerHigh
 11317 ;; This function uses a non-reentrant model
 11318 ;;
 11319                           psect	text40,class=CODE,space=0,reloc=2
 11320                           global __ptext40
 11321  001CB2                     __ptext40:
 11322                           psect	text40
 11323                           	file	"../src/my_i2c.c"
 11324                           	line	168
 11325                           	global	__size_of_i2c_int_handler
 11326  0000                     	__size_of_i2c_int_handler	equ	__end_of_i2c_int_handler-_i2c_int_handler
 11327                           	
 11328  001CB2                     _i2c_int_handler:
 11329                           	opt	stack 16
 11330                           	line	169
 11331                           	
 11332  001CB2                     i2l19053:
 11333                           ;my_i2c.c: 169: switch(i2cMode){
 11334  001CB2  D007               	goto	i2l19059
 11335                           	line	170
 11336                           ;my_i2c.c: 170: case 1:{
 11337                           	
 11338  001CB4                     i2l7370:
 11339                           	line	171
 11340                           	
 11341  001CB4                     i2l19055:
 11342                           ;my_i2c.c: 171: i2c_slave_int_handler();
 11343  001CB4  EC6B  F000         	call	_i2c_slave_int_handler	;wreg free
 11344                           	line	172
 11345                           ;my_i2c.c: 172: break;
 11346  001CB8  D00E               	goto	i2l7374
 11347                           	line	174
 11348                           ;my_i2c.c: 173: }
 11349                           ;my_i2c.c: 174: case 2:{
 11350                           	
 11351  001CBA                     i2l7372:
 11352                           	line	175
 11353                           	
 11354  001CBA                     i2l19057:
 11355                           ;my_i2c.c: 175: i2c_master_int_handler();
 11356  001CBA  EC3B  F006         	call	_i2c_master_int_handler	;wreg free
 11357                           	line	176
 11358                           ;my_i2c.c: 176: break;
 11359  001CBE  D00B               	goto	i2l7374
 11360                           	line	178
 11361                           ;my_i2c.c: 177: }
 11362                           ;my_i2c.c: 178: default:{
 11363                           	
 11364  001CC0                     i2l7373:
 11365                           	line	181
 11366                           ;my_i2c.c: 180: }
 11367                           ;my_i2c.c: 181: }
 11368  001CC0  D00A               	goto	i2l7374
 11369                           	line	169
 11370                           	
 11371  001CC2                     i2l7369:
 11372                           	
 11373  001CC2                     i2l19059:
 11374  001CC2  0100               	movlb	0	; () banked
 11375  001CC4  0100               	movlb	0	; () banked
 11376  001CC6  51C6               	movf	((_i2cMode))&0ffh,w
 11377                           	; Switch size 1, requested type "space"
 11378                           ; Number of cases is 2, Range of values is 1 to 2
 11379                           ; switch strategies available:
 11380                           ; Name         Instructions Cycles
 11381                           ; simple_byte            7     4 (average)
 11382                           ;	Chosen strategy is simple_byte
 11383                           
 11384  001CC8  0A01               	xorlw	1^0	; case 1
 11385  001CCA  B4D8               	skipnz
 11386  001CCC  D7F3               	goto	i2l19055
 11387  001CCE  0A03               	xorlw	2^1	; case 2
 11388  001CD0  B4D8               	skipnz
 11389  001CD2  D7F3               	goto	i2l19057
 11390  001CD4  D000               	goto	i2l7374
 11391                           
 11392                           	line	181
 11393                           	
 11394  001CD6                     i2l7371:; BSR set to: 0
 11395                           
 11396                           	line	182
 11397                           	
 11398  001CD6                     i2l7374:
 11399  001CD6  0012               	return
 11400                           	opt stack 0
 11401                           GLOBAL	__end_of_i2c_int_handler
 11402  001CD8                     	__end_of_i2c_int_handler:
 11403                           	signat	_i2c_int_handler,88
 11404                           	global	_timer0_int_handler
 11405                           
 11406 ;; *************** function _timer0_int_handler *****************
 11407 ;; Defined at:
 11408 ;;		line 19 in file "../src/user_interrupts.c"
 11409 ;; Parameters:    Size  Location     Type
 11410 ;;		None
 11411 ;; Auto vars:     Size  Location     Type
 11412 ;;  val             2   21[BANK0 ] unsigned int 
 11413 ;;  length          2   19[BANK0 ] int 
 11414 ;;  msgtype         2   17[BANK0 ] int 
 11415 ;; Return value:  Size  Location     Type
 11416 ;;		None               void
 11417 ;; Registers used:
 11418 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11419 ;; Tracked objects:
 11420 ;;		On entry : 0/0
 11421 ;;		On exit  : 0/0
 11422 ;;		Unchanged: 0/0
 11423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11424 ;;      Params:         0       0       0       0       0
 11425 ;;      Locals:         0       6       0       0       0
 11426 ;;      Temps:          2       0       0       0       0
 11427 ;;      Totals:         2       6       0       0       0
 11428 ;;Total ram usage:        8 bytes
 11429 ;; Hardware stack levels used:    1
 11430 ;; Hardware stack levels required when called:    3
 11431 ;; This function calls:
 11432 ;;		_WriteTimer0
 11433 ;;		_FromMainHigh_recvmsg
 11434 ;;		_ToMainHigh_sendmsg
 11435 ;; This function is called by:
 11436 ;;		_InterruptHandlerHigh
 11437 ;; This function uses a non-reentrant model
 11438 ;;
 11439                           psect	text41,class=CODE,space=0,reloc=2
 11440                           global __ptext41
 11441  00133A                     __ptext41:
 11442                           psect	text41
 11443                           	file	"../src/user_interrupts.c"
 11444                           	line	19
 11445                           	global	__size_of_timer0_int_handler
 11446  0000                     	__size_of_timer0_int_handler	equ	__end_of_timer0_int_handler-_timer0_int_handler
 11447                           	
 11448  00133A                     _timer0_int_handler:
 11449                           	opt	stack 17
 11450                           	line	24
 11451                           	
 11452  00133A                     i2l19061:
 11453                           ;user_interrupts.c: 20: unsigned int val;
 11454                           ;user_interrupts.c: 21: int length, msgtype;
 11455                           ;user_interrupts.c: 24: LATBbits.LATB0 = !LATBbits.LATB0;
 11456                           	
 11457  00133A  A08A               	btfss	((c:3978)),c,0	;volatile
 11458  00133C  D001               	goto	i2u197_41
 11459  00133E  D002               	goto	i2u197_40
 11460  001340                     i2u197_41:
 11461  001340  0E01               	movlw	1
 11462  001342  D001               	goto	i2u197_46
 11463  001344                     i2u197_40:
 11464  001344  0E00               	movlw	0
 11465  001346                     i2u197_46:
 11466  001346  6E40               	movwf	(??_timer0_int_handler+0+0)&0ffh,c
 11467  001348  508A               	movf	((c:3978)),c,w	;volatile
 11468  00134A  1840               	xorwf	((??_timer0_int_handler+0+0)),c,w
 11469  00134C  0BFE               	andlw	not ((1<<1)-1)
 11470  00134E  1840               	xorwf	((??_timer0_int_handler+0+0)),c,w
 11471  001350  6E8A               	movwf	((c:3978)),c	;volatile
 11472                           	line	26
 11473                           	
 11474  001352                     i2l19063:
 11475                           ;user_interrupts.c: 26: WriteTimer0(0);
 11476  001352  0E00               	movlw	high(0)
 11477  001354  6E35               	movwf	((c:?_WriteTimer0+1)),c
 11478  001356  0E00               	movlw	low(0)
 11479  001358  6E34               	movwf	((c:?_WriteTimer0)),c
 11480  00135A  ECD2  F00E         	call	_WriteTimer0	;wreg free
 11481                           	line	28
 11482                           	
 11483  00135E                     i2l19065:
 11484                           ;user_interrupts.c: 28: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)(uns
                                 igned int)&msgtype, (void *) &val);
 11485  00135E  6E40               	movwf	(??_timer0_int_handler+0+0)&0ffh,c
 11486  001360  0E02               	movlw	low(02h)
 11487  001362  0100               	movlb	0	; () banked
 11488  001364  0100               	movlb	0	; () banked
 11489  001366  6F8C               	movwf	((?_FromMainHigh_recvmsg))&0ffh
 11490  001368  5040               	movf	(??_timer0_int_handler+0+0)&0ffh,c,w
 11491  00136A  0100               	movlb	0	; () banked
 11492  00136C  0E00               	movlw	high(timer0_int_handler@msgtype)
 11493  00136E  0100               	movlb	0	; () banked
 11494  001370  0100               	movlb	0	; () banked
 11495  001372  6F8E               	movwf	(1+(?_FromMainHigh_recvmsg+01h))&0ffh
 11496  001374  0100               	movlb	0	; () banked
 11497  001376  0E91               	movlw	low(timer0_int_handler@msgtype)
 11498  001378  0100               	movlb	0	; () banked
 11499  00137A  6F8D               	movwf	(0+(?_FromMainHigh_recvmsg+01h))&0ffh
 11500  00137C  0100               	movlb	0	; () banked
 11501  00137E  0E00               	movlw	high(timer0_int_handler@val)
 11502  001380  0100               	movlb	0	; () banked
 11503  001382  0100               	movlb	0	; () banked
 11504  001384  6F90               	movwf	(1+(?_FromMainHigh_recvmsg+03h))&0ffh
 11505  001386  0100               	movlb	0	; () banked
 11506  001388  0E95               	movlw	low(timer0_int_handler@val)
 11507  00138A  0100               	movlb	0	; () banked
 11508  00138C  6F8F               	movwf	(0+(?_FromMainHigh_recvmsg+03h))&0ffh
 11509  00138E  0100               	movlb	0	; () banked
 11510  001390  ECEA  F00D         	call	_FromMainHigh_recvmsg	;wreg free
 11511  001394  0100               	movlb	0	; () banked
 11512  001396  0100               	movlb	0	; () banked
 11513  001398  6F93               	movwf	((timer0_int_handler@length))&0ffh
 11514  00139A  0100               	movlb	0	; () banked
 11515  00139C  6B94               	clrf	((timer0_int_handler@length+1))&0ffh
 11516  00139E  0100               	movlb	0	; () banked
 11517  0013A0  BF93               	btfsc	((timer0_int_handler@length))&0ffh,7
 11518  0013A2  0794               	decf	((timer0_int_handler@length+1))&0ffh
 11519                           	line	29
 11520                           	
 11521  0013A4                     i2l19067:; BSR set to: 0
 11522                           
 11523                           ;user_interrupts.c: 29: if (length == sizeof (val)) {
 11524  0013A4  0100               	movlb	0	; () banked
 11525  0013A6  0100               	movlb	0	; () banked
 11526  0013A8  5193               	movf	((timer0_int_handler@length))&0ffh,w
 11527  0013AA  0A02               	xorlw	2
 11528  0013AC  1194               	iorwf ((timer0_int_handler@length+1))&0ffh,w
 11529                           
 11530  0013AE  A4D8               	btfss	status,2
 11531  0013B0  D001               	goto	i2u198_41
 11532  0013B2  D001               	goto	i2u198_40
 11533  0013B4                     i2u198_41:
 11534  0013B4  D019               	goto	i2l16416
 11535  0013B6                     i2u198_40:
 11536                           	line	30
 11537                           	
 11538  0013B6                     i2l19069:; BSR set to: 0
 11539                           
 11540                           ;user_interrupts.c: 30: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
 11541  0013B6  6E40               	movwf	(??_timer0_int_handler+0+0)&0ffh,c
 11542  0013B8  0E02               	movlw	low(02h)
 11543  0013BA  0100               	movlb	0	; () banked
 11544  0013BC  0100               	movlb	0	; () banked
 11545  0013BE  6F8B               	movwf	((?_ToMainHigh_sendmsg))&0ffh
 11546  0013C0  5040               	movf	(??_timer0_int_handler+0+0)&0ffh,c,w
 11547  0013C2  6E41               	movwf	(??_timer0_int_handler+1+0)&0ffh,c
 11548  0013C4  0E0A               	movlw	low(0Ah)
 11549  0013C6  0100               	movlb	0	; () banked
 11550  0013C8  0100               	movlb	0	; () banked
 11551  0013CA  6F8C               	movwf	(0+(?_ToMainHigh_sendmsg+01h))&0ffh
 11552  0013CC  5041               	movf	(??_timer0_int_handler+1+0)&0ffh,c,w
 11553  0013CE  0100               	movlb	0	; () banked
 11554  0013D0  0E00               	movlw	high(timer0_int_handler@val)
 11555  0013D2  0100               	movlb	0	; () banked
 11556  0013D4  0100               	movlb	0	; () banked
 11557  0013D6  6F8E               	movwf	(1+(?_ToMainHigh_sendmsg+02h))&0ffh
 11558  0013D8  0100               	movlb	0	; () banked
 11559  0013DA  0E95               	movlw	low(timer0_int_handler@val)
 11560  0013DC  0100               	movlb	0	; () banked
 11561  0013DE  6F8D               	movwf	(0+(?_ToMainHigh_sendmsg+02h))&0ffh
 11562  0013E0  0100               	movlb	0	; () banked
 11563  0013E2  EC30  F00E         	call	_ToMainHigh_sendmsg	;wreg free
 11564  0013E6  D000               	goto	i2l16416
 11565                           	line	31
 11566                           	
 11567  0013E8                     i2l16415:
 11568                           	line	32
 11569                           	
 11570  0013E8                     i2l16416:
 11571  0013E8  0012               	return
 11572                           	opt stack 0
 11573                           GLOBAL	__end_of_timer0_int_handler
 11574  0013EA                     	__end_of_timer0_int_handler:
 11575                           	signat	_timer0_int_handler,88
 11576                           	global	_SleepIfOkay
 11577                           
 11578 ;; *************** function _SleepIfOkay *****************
 11579 ;; Defined at:
 11580 ;;		line 228 in file "../src/messages.c"
 11581 ;; Parameters:    Size  Location     Type
 11582 ;;		None
 11583 ;; Auto vars:     Size  Location     Type
 11584 ;;		None
 11585 ;; Return value:  Size  Location     Type
 11586 ;;		None               void
 11587 ;; Registers used:
 11588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11589 ;; Tracked objects:
 11590 ;;		On entry : 0/0
 11591 ;;		On exit  : 0/0
 11592 ;;		Unchanged: 0/0
 11593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11594 ;;      Params:         0       0       0       0       0
 11595 ;;      Locals:         0       0       0       0       0
 11596 ;;      Temps:          0       0       0       0       0
 11597 ;;      Totals:         0       0       0       0       0
 11598 ;;Total ram usage:        0 bytes
 11599 ;; Hardware stack levels used:    1
 11600 ;; Hardware stack levels required when called:    2
 11601 ;; This function calls:
 11602 ;;		i2_in_low_int
 11603 ;;		i2_in_high_int
 11604 ;;		i2_check_msg
 11605 ;;		_enter_sleep_mode
 11606 ;; This function is called by:
 11607 ;;		_InterruptHandlerHigh
 11608 ;; This function uses a non-reentrant model
 11609 ;;
 11610                           psect	text42,class=CODE,space=0,reloc=2
 11611                           global __ptext42
 11612  001624                     __ptext42:
 11613                           psect	text42
 11614                           	file	"../src/messages.c"
 11615                           	line	228
 11616                           	global	__size_of_SleepIfOkay
 11617  0000                     	__size_of_SleepIfOkay	equ	__end_of_SleepIfOkay-_SleepIfOkay
 11618                           	
 11619  001624                     _SleepIfOkay:
 11620                           	opt	stack 18
 11621                           	line	230
 11622                           	
 11623  001624                     i2l18237:
 11624                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
 11625  001624  6645               	tstfsz	((c:_MQ_Main_Willing_to_block)),c
 11626  001626  D001               	goto	i2u110_41
 11627  001628  D001               	goto	i2u110_40
 11628  00162A                     i2u110_41:
 11629  00162A  D002               	goto	i2l18241
 11630  00162C                     i2u110_40:
 11631  00162C  D035               	goto	i2l5527
 11632                           	line	231
 11633                           	
 11634  00162E                     i2l18239:
 11635                           ;messages.c: 231: return;
 11636  00162E  D034               	goto	i2l5527
 11637                           	line	232
 11638                           	
 11639  001630                     i2l5526:
 11640                           	line	235
 11641                           	
 11642  001630                     i2l18241:
 11643                           ;messages.c: 232: }
 11644                           ;messages.c: 235: if (in_low_int()) {
 11645  001630  ECD0  F00C         	call	i2_in_low_int	;wreg free
 11646  001634  5037               	movf	(1+?i2_in_low_int),c,w
 11647  001636  1036               	iorwf (0+?i2_in_low_int),c,w
 11648                           
 11649  001638  B4D8               	btfsc	status,2
 11650  00163A  D001               	goto	i2u111_41
 11651  00163C  D001               	goto	i2u111_40
 11652  00163E                     i2u111_41:
 11653  00163E  D002               	goto	i2l18245
 11654  001640                     i2u111_40:
 11655  001640  D02B               	goto	i2l5527
 11656                           	line	236
 11657                           	
 11658  001642                     i2l18243:
 11659                           ;messages.c: 236: return;
 11660  001642  D02A               	goto	i2l5527
 11661                           	line	237
 11662                           	
 11663  001644                     i2l5528:
 11664                           	line	240
 11665                           	
 11666  001644                     i2l18245:
 11667                           ;messages.c: 237: }
 11668                           ;messages.c: 240: if (!in_high_int()) {
 11669  001644  ECDB  F00E         	call	i2_in_high_int	;wreg free
 11670  001648  5035               	movf	(1+?i2_in_high_int),c,w
 11671  00164A  1034               	iorwf (0+?i2_in_high_int),c,w
 11672                           
 11673  00164C  A4D8               	btfss	status,2
 11674  00164E  D001               	goto	i2u112_41
 11675  001650  D001               	goto	i2u112_40
 11676  001652                     i2u112_41:
 11677  001652  D002               	goto	i2l18249
 11678  001654                     i2u112_40:
 11679  001654  D021               	goto	i2l5527
 11680                           	line	241
 11681                           	
 11682  001656                     i2l18247:
 11683                           ;messages.c: 241: return;
 11684  001656  D020               	goto	i2l5527
 11685                           	line	242
 11686                           	
 11687  001658                     i2l5529:
 11688                           	line	247
 11689                           	
 11690  001658                     i2l18249:
 11691                           ;messages.c: 242: }
 11692                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
 11693  001658  0101               	movlb	1	; () banked
 11694  00165A  0E01               	movlw	high(_ToMainHigh_MQ)
 11695  00165C  6E35               	movwf	((c:?i2_check_msg+1)),c
 11696  00165E  0101               	movlb	1	; () banked
 11697  001660  0E36               	movlw	low(_ToMainHigh_MQ)
 11698  001662  6E34               	movwf	((c:?i2_check_msg)),c
 11699  001664  EC6C  F00E         	call	i2_check_msg	;wreg free
 11700  001668  0900               	iorlw	0
 11701  00166A  B4D8               	btfsc	status,2
 11702  00166C  D001               	goto	i2u113_41
 11703  00166E  D001               	goto	i2u113_40
 11704  001670                     i2u113_41:
 11705  001670  D002               	goto	i2l18253
 11706  001672                     i2u113_40:
 11707  001672  D012               	goto	i2l5527
 11708                           	line	248
 11709                           	
 11710  001674                     i2l18251:
 11711                           ;messages.c: 248: return;
 11712  001674  D011               	goto	i2l5527
 11713                           	line	249
 11714                           	
 11715  001676                     i2l5530:
 11716                           	line	250
 11717                           	
 11718  001676                     i2l18253:
 11719                           ;messages.c: 249: }
 11720                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
 11721  001676  0101               	movlb	1	; () banked
 11722  001678  0E01               	movlw	high(_ToMainLow_MQ)
 11723  00167A  6E35               	movwf	((c:?i2_check_msg+1)),c
 11724  00167C  0101               	movlb	1	; () banked
 11725  00167E  0E6C               	movlw	low(_ToMainLow_MQ)
 11726  001680  6E34               	movwf	((c:?i2_check_msg)),c
 11727  001682  EC6C  F00E         	call	i2_check_msg	;wreg free
 11728  001686  0900               	iorlw	0
 11729  001688  B4D8               	btfsc	status,2
 11730  00168A  D001               	goto	i2u114_41
 11731  00168C  D001               	goto	i2u114_40
 11732  00168E                     i2u114_41:
 11733  00168E  D002               	goto	i2l18257
 11734  001690                     i2u114_40:
 11735  001690  D003               	goto	i2l5527
 11736                           	line	251
 11737                           	
 11738  001692                     i2l18255:
 11739                           ;messages.c: 251: return;
 11740  001692  D002               	goto	i2l5527
 11741                           	line	252
 11742                           	
 11743  001694                     i2l5531:
 11744                           	line	253
 11745                           	
 11746  001694                     i2l18257:
 11747                           ;messages.c: 252: }
 11748                           ;messages.c: 253: enter_sleep_mode();
 11749  001694  ECF1  F00E         	call	_enter_sleep_mode	;wreg free
 11750                           	line	254
 11751                           	
 11752  001698                     i2l5527:
 11753  001698  0012               	return
 11754                           	opt stack 0
 11755                           GLOBAL	__end_of_SleepIfOkay
 11756  00169A                     	__end_of_SleepIfOkay:
 11757                           	signat	_SleepIfOkay,88
 11758                           	global	_FromMainHigh_recvmsg
 11759                           
 11760 ;; *************** function _FromMainHigh_recvmsg *****************
 11761 ;; Defined at:
 11762 ;;		line 183 in file "../src/messages.c"
 11763 ;; Parameters:    Size  Location     Type
 11764 ;;  maxlength       1   12[BANK0 ] unsigned char 
 11765 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
 11766 ;;		 -> RAM(1023), 
 11767 ;;  data            2   15[BANK0 ] PTR void 
 11768 ;;		 -> timer0_int_handler@val(2), 
 11769 ;; Auto vars:     Size  Location     Type
 11770 ;;		None
 11771 ;; Return value:  Size  Location     Type
 11772 ;;                  1    wreg      char 
 11773 ;; Registers used:
 11774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11775 ;; Tracked objects:
 11776 ;;		On entry : 0/0
 11777 ;;		On exit  : 0/0
 11778 ;;		Unchanged: 0/0
 11779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11780 ;;      Params:         0       5       0       0       0
 11781 ;;      Locals:         0       0       0       0       0
 11782 ;;      Temps:          0       0       0       0       0
 11783 ;;      Totals:         0       5       0       0       0
 11784 ;;Total ram usage:        5 bytes
 11785 ;; Hardware stack levels used:    1
 11786 ;; Hardware stack levels required when called:    2
 11787 ;; This function calls:
 11788 ;;		i2_recv_msg
 11789 ;; This function is called by:
 11790 ;;		_timer0_int_handler
 11791 ;; This function uses a non-reentrant model
 11792 ;;
 11793                           psect	text43,class=CODE,space=0,reloc=2
 11794                           global __ptext43
 11795  001BD4                     __ptext43:
 11796                           psect	text43
 11797                           	file	"../src/messages.c"
 11798                           	line	183
 11799                           	global	__size_of_FromMainHigh_recvmsg
 11800  0000                     	__size_of_FromMainHigh_recvmsg	equ	__end_of_FromMainHigh_recvmsg-_FromMainHigh_recvmsg
 11801                           	
 11802  001BD4                     _FromMainHigh_recvmsg:
 11803                           	opt	stack 17
 11804                           	line	189
 11805                           	
 11806  001BD4                     i2l19237:
 11807                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
 11808  001BD4  0102               	movlb	2	; () banked
 11809  001BD6  0E02               	movlw	high(_FromMainHigh_MQ)
 11810  001BD8  0100               	movlb	0	; () banked
 11811  001BDA  0100               	movlb	0	; () banked
 11812  001BDC  6F81               	movwf	((?i2_recv_msg+1))&0ffh
 11813  001BDE  0102               	movlb	2	; () banked
 11814  001BE0  0E00               	movlw	low(_FromMainHigh_MQ)
 11815  001BE2  0100               	movlb	0	; () banked
 11816  001BE4  6F80               	movwf	((?i2_recv_msg))&0ffh
 11817  001BE6  C08C  F082         	movff	(FromMainHigh_recvmsg@maxlength),0+(?i2_recv_msg+02h)
 11818  001BEA  C08D  F083         	movff	(FromMainHigh_recvmsg@msgtype),0+(?i2_recv_msg+03h)
 11819  001BEE  C08E  F084         	movff	(FromMainHigh_recvmsg@msgtype+1),1+(?i2_recv_msg+03h)
 11820  001BF2  C08F  F085         	movff	(FromMainHigh_recvmsg@data),0+(?i2_recv_msg+05h)
 11821  001BF6  C090  F086         	movff	(FromMainHigh_recvmsg@data+1),1+(?i2_recv_msg+05h)
 11822  001BFA  0100               	movlb	0	; () banked
 11823  001BFC  ECA2  F005         	call	i2_recv_msg	;wreg free
 11824  001C00  D000               	goto	i2l5512
 11825                           	
 11826  001C02                     i2l19239:
 11827                           	line	190
 11828                           	
 11829  001C02                     i2l5512:
 11830  001C02  0012               	return
 11831                           	opt stack 0
 11832                           GLOBAL	__end_of_FromMainHigh_recvmsg
 11833  001C04                     	__end_of_FromMainHigh_recvmsg:
 11834                           	signat	_FromMainHigh_recvmsg,12409
 11835                           	global	_enter_sleep_mode
 11836                           
 11837 ;; *************** function _enter_sleep_mode *****************
 11838 ;; Defined at:
 11839 ;;		line 202 in file "../src/messages.c"
 11840 ;; Parameters:    Size  Location     Type
 11841 ;;		None
 11842 ;; Auto vars:     Size  Location     Type
 11843 ;;		None
 11844 ;; Return value:  Size  Location     Type
 11845 ;;		None               void
 11846 ;; Registers used:
 11847 ;;		None
 11848 ;; Tracked objects:
 11849 ;;		On entry : 0/0
 11850 ;;		On exit  : 0/0
 11851 ;;		Unchanged: 0/0
 11852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11853 ;;      Params:         0       0       0       0       0
 11854 ;;      Locals:         0       0       0       0       0
 11855 ;;      Temps:          0       0       0       0       0
 11856 ;;      Totals:         0       0       0       0       0
 11857 ;;Total ram usage:        0 bytes
 11858 ;; Hardware stack levels used:    1
 11859 ;; This function calls:
 11860 ;;		Nothing
 11861 ;; This function is called by:
 11862 ;;		_SleepIfOkay
 11863 ;; This function uses a non-reentrant model
 11864 ;;
 11865                           psect	text44,class=CODE,space=0,reloc=2
 11866                           global __ptext44
 11867  001DE2                     __ptext44:
 11868                           psect	text44
 11869                           	file	"../src/messages.c"
 11870                           	line	202
 11871                           	global	__size_of_enter_sleep_mode
 11872  0000                     	__size_of_enter_sleep_mode	equ	__end_of_enter_sleep_mode-_enter_sleep_mode
 11873                           	
 11874  001DE2                     _enter_sleep_mode:
 11875                           	opt	stack 19
 11876                           	line	204
 11877                           	
 11878  001DE2                     i2l18569:
 11879                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
 11880  001DE2  8ED3               	bsf	((c:4051)),c,7	;volatile
 11881                           	line	213
 11882                           # 213 "../src/messages.c"
 11883  001DE4  0003               SLEEP ;# 
 11884                           	line	215
 11885                           # 215 "../src/messages.c"
 11886                           # 214 ;# 
 11887                           psect	text44
 11888                           	line	218
 11889                           	
 11890  001DE6                     i2l5520:
 11891  001DE6  0012               	return
 11892                           	opt stack 0
 11893                           GLOBAL	__end_of_enter_sleep_mode
 11894  001DE8                     	__end_of_enter_sleep_mode:
 11895                           	signat	_enter_sleep_mode,88
 11896                           	global	_i2c_slave_int_handler
 11897                           
 11898 ;; *************** function _i2c_slave_int_handler *****************
 11899 ;; Defined at:
 11900 ;;		line 246 in file "../src/my_i2c.c"
 11901 ;; Parameters:    Size  Location     Type
 11902 ;;		None
 11903 ;; Auto vars:     Size  Location     Type
 11904 ;;  empty           4   27[BANK0 ] unsigned char [4]
 11905 ;;  data           10   17[BANK0 ] unsigned char [10]
 11906 ;;  length          2   36[BANK0 ] int 
 11907 ;;  msgtype         1   39[BANK0 ] unsigned char 
 11908 ;;  error_buf       3   31[BANK0 ] unsigned char [3]
 11909 ;;  data_read       1   42[BANK0 ] unsigned char 
 11910 ;;  msg_ready       1   41[BANK0 ] unsigned char 
 11911 ;;  msg_to_send     1   40[BANK0 ] unsigned char 
 11912 ;;  i2c_data        1   38[BANK0 ] unsigned char 
 11913 ;;  overrun_erro    1   35[BANK0 ] unsigned char 
 11914 ;;  data_written    1   34[BANK0 ] unsigned char 
 11915 ;; Return value:  Size  Location     Type
 11916 ;;		None               void
 11917 ;; Registers used:
 11918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11919 ;; Tracked objects:
 11920 ;;		On entry : 0/0
 11921 ;;		On exit  : 0/0
 11922 ;;		Unchanged: 0/0
 11923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11924 ;;      Params:         0       0       0       0       0
 11925 ;;      Locals:         0      26       0       0       0
 11926 ;;      Temps:          2       0       0       0       0
 11927 ;;      Totals:         2      26       0       0       0
 11928 ;;Total ram usage:       28 bytes
 11929 ;; Hardware stack levels used:    1
 11930 ;; Hardware stack levels required when called:    3
 11931 ;; This function calls:
 11932 ;;		_handle_start
 11933 ;;		_FromMainLow_recvmsg
 11934 ;;		_start_i2c_slave_reply
 11935 ;;		_ToMainHigh_sendmsg
 11936 ;; This function is called by:
 11937 ;;		_i2c_int_handler
 11938 ;; This function uses a non-reentrant model
 11939 ;;
 11940                           psect	text45,class=CODE,space=0,reloc=2
 11941                           global __ptext45
 11942  0000D6                     __ptext45:
 11943                           psect	text45
 11944                           	file	"../src/my_i2c.c"
 11945                           	line	246
 11946                           	global	__size_of_i2c_slave_int_handler
 11947  0000                     	__size_of_i2c_slave_int_handler	equ	__end_of_i2c_slave_int_handler-_i2c_slave_int_handl
                                 er
 11948                           	
 11949  0000D6                     _i2c_slave_int_handler:
 11950                           	opt	stack 16
 11951                           	line	248
 11952                           	
 11953  0000D6                     i2l19241:
 11954                           ;my_i2c.c: 247: unsigned char i2c_data;
 11955                           ;my_i2c.c: 248: unsigned char data_read = 0;
 11956  0000D6  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 11957  0000D8  0E00               	movlw	low(0)
 11958  0000DA  0100               	movlb	0	; () banked
 11959  0000DC  0100               	movlb	0	; () banked
 11960  0000DE  6FAA               	movwf	((i2c_slave_int_handler@data_read))&0ffh
 11961  0000E0  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 11962                           	line	249
 11963                           ;my_i2c.c: 249: unsigned char data_written = 0;
 11964  0000E2  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 11965  0000E4  0E00               	movlw	low(0)
 11966  0000E6  0100               	movlb	0	; () banked
 11967  0000E8  0100               	movlb	0	; () banked
 11968  0000EA  6FA2               	movwf	((i2c_slave_int_handler@data_written))&0ffh
 11969  0000EC  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 11970                           	line	250
 11971                           ;my_i2c.c: 250: unsigned char msg_ready = 0;
 11972  0000EE  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 11973  0000F0  0E00               	movlw	low(0)
 11974  0000F2  0100               	movlb	0	; () banked
 11975  0000F4  0100               	movlb	0	; () banked
 11976  0000F6  6FA9               	movwf	((i2c_slave_int_handler@msg_ready))&0ffh
 11977  0000F8  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 11978                           	line	251
 11979                           ;my_i2c.c: 251: unsigned char msg_to_send = 0;
 11980  0000FA  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 11981  0000FC  0E00               	movlw	low(0)
 11982  0000FE  0100               	movlb	0	; () banked
 11983  000100  0100               	movlb	0	; () banked
 11984  000102  6FA8               	movwf	((i2c_slave_int_handler@msg_to_send))&0ffh
 11985  000104  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 11986                           	line	252
 11987                           ;my_i2c.c: 252: unsigned char overrun_error = 0;
 11988  000106  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 11989  000108  0E00               	movlw	low(0)
 11990  00010A  0100               	movlb	0	; () banked
 11991  00010C  0100               	movlb	0	; () banked
 11992  00010E  6FA3               	movwf	((i2c_slave_int_handler@overrun_error))&0ffh
 11993  000110  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 11994                           	line	256
 11995                           	
 11996  000112                     i2l19243:; BSR set to: 0
 11997                           
 11998                           ;my_i2c.c: 253: unsigned char error_buf[3];
 11999                           ;my_i2c.c: 256: if (SSPCON1bits.SSPOV == 1) {
 12000                           	
 12001  000112  ACC6               	btfss	((c:4038)),c,6	;volatile
 12002  000114  D001               	goto	i2u205_41
 12003  000116  D001               	goto	i2u205_40
 12004  000118                     i2u205_41:
 12005  000118  D01F               	goto	i2l19255
 12006  00011A                     i2u205_40:
 12007                           	line	257
 12008                           	
 12009  00011A                     i2l19245:; BSR set to: 0
 12010                           
 12011                           ;my_i2c.c: 257: SSPCON1bits.SSPOV = 0;
 12012  00011A  9CC6               	bcf	((c:4038)),c,6	;volatile
 12013                           	line	261
 12014                           	
 12015  00011C                     i2l19247:; BSR set to: 0
 12016                           
 12017                           ;my_i2c.c: 261: ic_ptr->status = 0x5;
 12018  00011C  EE20 F00C          	lfsr	2,0Ch
 12019  000120  5048               	movf	((c:_ic_ptr)),c,w
 12020  000122  26D9               	addwf	fsr2l
 12021  000124  5049               	movf	((c:_ic_ptr+1)),c,w
 12022  000126  22DA               	addwfc	fsr2h
 12023  000128  0E05               	movlw	low(05h)
 12024  00012A  6EDF               	movwf	indf2
 12025                           	line	262
 12026                           	
 12027  00012C                     i2l19249:; BSR set to: 0
 12028                           
 12029                           ;my_i2c.c: 262: overrun_error = 1;
 12030  00012C  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12031  00012E  0E01               	movlw	low(01h)
 12032  000130  0100               	movlb	0	; () banked
 12033  000132  0100               	movlb	0	; () banked
 12034  000134  6FA3               	movwf	((i2c_slave_int_handler@overrun_error))&0ffh
 12035  000136  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 12036                           	line	263
 12037                           	
 12038  000138                     i2l19251:; BSR set to: 0
 12039                           
 12040                           ;my_i2c.c: 263: ic_ptr->error_count++;
 12041  000138  EE20 F00E          	lfsr	2,0Eh
 12042  00013C  5048               	movf	((c:_ic_ptr)),c,w
 12043  00013E  26D9               	addwf	fsr2l
 12044  000140  5049               	movf	((c:_ic_ptr+1)),c,w
 12045  000142  22DA               	addwfc	fsr2h
 12046  000144  2ADF               	incf	indf2
 12047                           
 12048                           	line	264
 12049                           	
 12050  000146                     i2l19253:; BSR set to: 0
 12051                           
 12052                           ;my_i2c.c: 264: ic_ptr->error_code = 0x4;
 12053  000146  EE20 F00D          	lfsr	2,0Dh
 12054  00014A  5048               	movf	((c:_ic_ptr)),c,w
 12055  00014C  26D9               	addwf	fsr2l
 12056  00014E  5049               	movf	((c:_ic_ptr+1)),c,w
 12057  000150  22DA               	addwfc	fsr2h
 12058  000152  0E04               	movlw	low(04h)
 12059  000154  6EDF               	movwf	indf2
 12060  000156  D000               	goto	i2l19255
 12061                           	line	265
 12062                           	
 12063  000158                     i2l7389:; BSR set to: 0
 12064                           
 12065                           	line	267
 12066                           	
 12067  000158                     i2l19255:; BSR set to: 0
 12068                           
 12069                           ;my_i2c.c: 265: }
 12070                           ;my_i2c.c: 267: if (SSPSTATbits.BF == 1) {
 12071                           	
 12072  000158  A0C7               	btfss	((c:4039)),c,0	;volatile
 12073  00015A  D001               	goto	i2u206_41
 12074  00015C  D001               	goto	i2u206_40
 12075  00015E                     i2u206_41:
 12076  00015E  D009               	goto	i2l19261
 12077  000160                     i2u206_40:
 12078                           	line	268
 12079                           	
 12080  000160                     i2l19257:; BSR set to: 0
 12081                           
 12082                           ;my_i2c.c: 268: i2c_data = SSPBUF;
 12083  000160  CFC9 F0A6          	movff	(c:4041),(i2c_slave_int_handler@i2c_data)	;volatile
 12084                           	line	269
 12085                           	
 12086  000164                     i2l19259:; BSR set to: 0
 12087                           
 12088                           ;my_i2c.c: 269: data_read = 1;
 12089  000164  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12090  000166  0E01               	movlw	low(01h)
 12091  000168  0100               	movlb	0	; () banked
 12092  00016A  0100               	movlb	0	; () banked
 12093  00016C  6FAA               	movwf	((i2c_slave_int_handler@data_read))&0ffh
 12094  00016E  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 12095  000170  D000               	goto	i2l19261
 12096                           	line	270
 12097                           	
 12098  000172                     i2l7390:; BSR set to: 0
 12099                           
 12100                           	line	275
 12101                           	
 12102  000172                     i2l19261:; BSR set to: 0
 12103                           
 12104                           ;my_i2c.c: 270: }
 12105                           ;my_i2c.c: 275: if (!overrun_error) {
 12106  000172  0100               	movlb	0	; () banked
 12107  000174  0100               	movlb	0	; () banked
 12108  000176  67A3               	tstfsz	((i2c_slave_int_handler@overrun_error))&0ffh
 12109  000178  D001               	goto	i2u207_41
 12110  00017A  D001               	goto	i2u207_40
 12111  00017C                     i2u207_41:
 12112  00017C  D1C9               	goto	i2l7391
 12113  00017E                     i2u207_40:
 12114  00017E  D1B4               	goto	i2l19349
 12115                           	line	276
 12116                           	
 12117  000180                     i2l19263:; BSR set to: 0
 12118                           
 12119                           ;my_i2c.c: 276: switch (ic_ptr->status) {
 12120  000180  D1B3               	goto	i2l19349
 12121                           	line	277
 12122                           ;my_i2c.c: 277: case 0x5:
 12123                           	
 12124  000182                     i2l7393:; BSR set to: 0
 12125                           
 12126                           	line	280
 12127                           ;my_i2c.c: 278: {
 12128                           ;my_i2c.c: 280: if (SSPSTATbits.S == 1) {
 12129                           	
 12130  000182  A6C7               	btfss	((c:4039)),c,3	;volatile
 12131  000184  D001               	goto	i2u208_41
 12132  000186  D001               	goto	i2u208_40
 12133  000188                     i2u208_41:
 12134  000188  D1C3               	goto	i2l7391
 12135  00018A                     i2u208_40:
 12136                           	line	281
 12137                           	
 12138  00018A                     i2l19265:; BSR set to: 0
 12139                           
 12140                           ;my_i2c.c: 281: handle_start(data_read);
 12141  00018A  C0AA  F034         	movff	(i2c_slave_int_handler@data_read),(c:?_handle_start)
 12142  00018E  ECF5  F009         	call	_handle_start	;wreg free
 12143                           	line	283
 12144                           	
 12145  000192                     i2l19267:
 12146                           ;my_i2c.c: 283: if (ic_ptr->status == 0x8) {
 12147  000192  EE20 F00C          	lfsr	2,0Ch
 12148  000196  5048               	movf	((c:_ic_ptr)),c,w
 12149  000198  26D9               	addwf	fsr2l
 12150  00019A  5049               	movf	((c:_ic_ptr+1)),c,w
 12151  00019C  22DA               	addwfc	fsr2h
 12152  00019E  0E08               	movlw	(08h)&0ffh
 12153  0001A0  62DF               	cpfseq	indf2
 12154  0001A2  D001               	goto	i2u209_41
 12155  0001A4  D001               	goto	i2u209_40
 12156  0001A6                     i2u209_41:
 12157  0001A6  D1B4               	goto	i2l7391
 12158  0001A8                     i2u209_40:
 12159                           	line	284
 12160                           	
 12161  0001A8                     i2l19269:
 12162                           ;my_i2c.c: 284: data_read = 0;
 12163  0001A8  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12164  0001AA  0E00               	movlw	low(0)
 12165  0001AC  0100               	movlb	0	; () banked
 12166  0001AE  0100               	movlb	0	; () banked
 12167  0001B0  6FAA               	movwf	((i2c_slave_int_handler@data_read))&0ffh
 12168  0001B2  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 12169                           	line	285
 12170                           ;my_i2c.c: 285: msg_to_send = 1;
 12171  0001B4  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12172  0001B6  0E01               	movlw	low(01h)
 12173  0001B8  0100               	movlb	0	; () banked
 12174  0001BA  0100               	movlb	0	; () banked
 12175  0001BC  6FA8               	movwf	((i2c_slave_int_handler@msg_to_send))&0ffh
 12176  0001BE  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 12177  0001C0  D1A7               	goto	i2l7391
 12178                           	line	286
 12179                           	
 12180  0001C2                     i2l7395:; BSR set to: 0
 12181                           
 12182  0001C2  D1A6               	goto	i2l7391
 12183                           	line	287
 12184                           	
 12185  0001C4                     i2l7394:; BSR set to: 0
 12186                           
 12187                           	line	288
 12188                           ;my_i2c.c: 286: }
 12189                           ;my_i2c.c: 287: }
 12190                           ;my_i2c.c: 288: break;
 12191  0001C4  D1A5               	goto	i2l7391
 12192                           	line	290
 12193                           ;my_i2c.c: 289: }
 12194                           ;my_i2c.c: 290: case 0x6:
 12195                           	
 12196  0001C6                     i2l7397:; BSR set to: 0
 12197                           
 12198                           	line	293
 12199                           ;my_i2c.c: 291: {
 12200                           ;my_i2c.c: 293: if (SSPSTATbits.P == 1) {
 12201                           	
 12202  0001C6  A8C7               	btfss	((c:4039)),c,4	;volatile
 12203  0001C8  D001               	goto	i2u210_41
 12204  0001CA  D001               	goto	i2u210_40
 12205  0001CC                     i2u210_41:
 12206  0001CC  D032               	goto	i2l19281
 12207  0001CE                     i2u210_40:
 12208                           	line	296
 12209                           	
 12210  0001CE                     i2l19271:; BSR set to: 0
 12211                           
 12212                           ;my_i2c.c: 296: ic_ptr->event_count++;
 12213  0001CE  EE20 F00B          	lfsr	2,0Bh
 12214  0001D2  5048               	movf	((c:_ic_ptr)),c,w
 12215  0001D4  26D9               	addwf	fsr2l
 12216  0001D6  5049               	movf	((c:_ic_ptr+1)),c,w
 12217  0001D8  22DA               	addwfc	fsr2h
 12218  0001DA  2ADF               	incf	indf2
 12219                           
 12220                           	line	297
 12221                           	
 12222  0001DC                     i2l19273:; BSR set to: 0
 12223                           
 12224                           ;my_i2c.c: 297: if (data_read) {
 12225  0001DC  0100               	movlb	0	; () banked
 12226  0001DE  0100               	movlb	0	; () banked
 12227  0001E0  51AA               	movf	((i2c_slave_int_handler@data_read))&0ffh,w
 12228  0001E2  B4D8               	btfsc	status,2
 12229  0001E4  D001               	goto	i2u211_41
 12230  0001E6  D001               	goto	i2u211_40
 12231  0001E8                     i2u211_41:
 12232  0001E8  D01B               	goto	i2l7399
 12233  0001EA                     i2u211_40:
 12234                           	line	298
 12235                           	
 12236  0001EA                     i2l19275:; BSR set to: 0
 12237                           
 12238                           ;my_i2c.c: 298: if (SSPSTATbits.D_A == 0) {
 12239                           	
 12240  0001EA  BAC7               	btfsc	((c:4039)),c,5	;volatile
 12241  0001EC  D001               	goto	i2u212_41
 12242  0001EE  D001               	goto	i2u212_40
 12243  0001F0                     i2u212_41:
 12244  0001F0  D007               	goto	i2l19279
 12245  0001F2                     i2u212_40:
 12246                           	line	299
 12247                           	
 12248  0001F2                     i2l19277:; BSR set to: 0
 12249                           
 12250                           ;my_i2c.c: 299: msg_ready = 1;
 12251  0001F2  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12252  0001F4  0E01               	movlw	low(01h)
 12253  0001F6  0100               	movlb	0	; () banked
 12254  0001F8  0100               	movlb	0	; () banked
 12255  0001FA  6FA9               	movwf	((i2c_slave_int_handler@msg_ready))&0ffh
 12256  0001FC  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 12257                           	line	300
 12258                           ;my_i2c.c: 300: } else {
 12259  0001FE  D010               	goto	i2l7399
 12260                           	
 12261  000200                     i2l7400:; BSR set to: 0
 12262                           
 12263                           	line	301
 12264                           	
 12265  000200                     i2l19279:; BSR set to: 0
 12266                           
 12267                           ;my_i2c.c: 301: ic_ptr->error_count++;
 12268  000200  EE20 F00E          	lfsr	2,0Eh
 12269  000204  5048               	movf	((c:_ic_ptr)),c,w
 12270  000206  26D9               	addwf	fsr2l
 12271  000208  5049               	movf	((c:_ic_ptr+1)),c,w
 12272  00020A  22DA               	addwfc	fsr2h
 12273  00020C  2ADF               	incf	indf2
 12274                           
 12275                           	line	302
 12276                           ;my_i2c.c: 302: ic_ptr->error_code = 0x6;
 12277  00020E  EE20 F00D          	lfsr	2,0Dh
 12278  000212  5048               	movf	((c:_ic_ptr)),c,w
 12279  000214  26D9               	addwf	fsr2l
 12280  000216  5049               	movf	((c:_ic_ptr+1)),c,w
 12281  000218  22DA               	addwfc	fsr2h
 12282  00021A  0E06               	movlw	low(06h)
 12283  00021C  6EDF               	movwf	indf2
 12284  00021E  D000               	goto	i2l7399
 12285                           	line	303
 12286                           	
 12287  000220                     i2l7401:; BSR set to: 0
 12288                           
 12289                           	line	304
 12290                           	
 12291  000220                     i2l7399:; BSR set to: 0
 12292                           
 12293                           	line	305
 12294                           ;my_i2c.c: 303: }
 12295                           ;my_i2c.c: 304: }
 12296                           ;my_i2c.c: 305: ic_ptr->status = 0x5;
 12297  000220  EE20 F00C          	lfsr	2,0Ch
 12298  000224  5048               	movf	((c:_ic_ptr)),c,w
 12299  000226  26D9               	addwf	fsr2l
 12300  000228  5049               	movf	((c:_ic_ptr+1)),c,w
 12301  00022A  22DA               	addwfc	fsr2h
 12302  00022C  0E05               	movlw	low(05h)
 12303  00022E  6EDF               	movwf	indf2
 12304                           	line	306
 12305                           ;my_i2c.c: 306: } else if (data_read) {
 12306  000230  D16F               	goto	i2l7391
 12307                           	
 12308  000232                     i2l7398:; BSR set to: 0
 12309                           
 12310                           	
 12311  000232                     i2l19281:; BSR set to: 0
 12312                           
 12313  000232  0100               	movlb	0	; () banked
 12314  000234  0100               	movlb	0	; () banked
 12315  000236  51AA               	movf	((i2c_slave_int_handler@data_read))&0ffh,w
 12316  000238  B4D8               	btfsc	status,2
 12317  00023A  D001               	goto	i2u213_41
 12318  00023C  D001               	goto	i2u213_40
 12319  00023E                     i2u213_41:
 12320  00023E  D168               	goto	i2l7391
 12321  000240                     i2u213_40:
 12322                           	line	307
 12323                           	
 12324  000240                     i2l19283:; BSR set to: 0
 12325                           
 12326                           ;my_i2c.c: 307: ic_ptr->event_count++;
 12327  000240  EE20 F00B          	lfsr	2,0Bh
 12328  000244  5048               	movf	((c:_ic_ptr)),c,w
 12329  000246  26D9               	addwf	fsr2l
 12330  000248  5049               	movf	((c:_ic_ptr+1)),c,w
 12331  00024A  22DA               	addwfc	fsr2h
 12332  00024C  2ADF               	incf	indf2
 12333                           
 12334                           	line	308
 12335                           	
 12336  00024E                     i2l19285:; BSR set to: 0
 12337                           
 12338                           ;my_i2c.c: 308: if (SSPSTATbits.D_A == 0) {
 12339                           	
 12340  00024E  BAC7               	btfsc	((c:4039)),c,5	;volatile
 12341  000250  D001               	goto	i2u214_41
 12342  000252  D001               	goto	i2u214_40
 12343  000254                     i2u214_41:
 12344  000254  D023               	goto	i2l19297
 12345  000256                     i2u214_40:
 12346                           	line	309
 12347                           	
 12348  000256                     i2l19287:; BSR set to: 0
 12349                           
 12350                           ;my_i2c.c: 309: if (SSPSTATbits.R_W == 0) {
 12351                           	
 12352  000256  B4C7               	btfsc	((c:4039)),c,2	;volatile
 12353  000258  D001               	goto	i2u215_41
 12354  00025A  D001               	goto	i2u215_40
 12355  00025C                     i2u215_41:
 12356  00025C  D009               	goto	i2l19291
 12357  00025E                     i2u215_40:
 12358                           	line	310
 12359                           	
 12360  00025E                     i2l19289:; BSR set to: 0
 12361                           
 12362                           ;my_i2c.c: 310: ic_ptr->status = 0x7;
 12363  00025E  EE20 F00C          	lfsr	2,0Ch
 12364  000262  5048               	movf	((c:_ic_ptr)),c,w
 12365  000264  26D9               	addwf	fsr2l
 12366  000266  5049               	movf	((c:_ic_ptr+1)),c,w
 12367  000268  22DA               	addwfc	fsr2h
 12368  00026A  0E07               	movlw	low(07h)
 12369  00026C  6EDF               	movwf	indf2
 12370                           	line	311
 12371                           ;my_i2c.c: 311: } else {
 12372  00026E  D150               	goto	i2l7391
 12373                           	
 12374  000270                     i2l7405:; BSR set to: 0
 12375                           
 12376                           	line	312
 12377                           	
 12378  000270                     i2l19291:; BSR set to: 0
 12379                           
 12380                           ;my_i2c.c: 312: ic_ptr->status = 0x8;
 12381  000270  EE20 F00C          	lfsr	2,0Ch
 12382  000274  5048               	movf	((c:_ic_ptr)),c,w
 12383  000276  26D9               	addwf	fsr2l
 12384  000278  5049               	movf	((c:_ic_ptr+1)),c,w
 12385  00027A  22DA               	addwfc	fsr2h
 12386  00027C  0E08               	movlw	low(08h)
 12387  00027E  6EDF               	movwf	indf2
 12388                           	line	313
 12389                           	
 12390  000280                     i2l19293:; BSR set to: 0
 12391                           
 12392                           ;my_i2c.c: 313: msg_to_send = 1;
 12393  000280  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12394  000282  0E01               	movlw	low(01h)
 12395  000284  0100               	movlb	0	; () banked
 12396  000286  0100               	movlb	0	; () banked
 12397  000288  6FA8               	movwf	((i2c_slave_int_handler@msg_to_send))&0ffh
 12398  00028A  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 12399                           	line	315
 12400                           	
 12401  00028C                     i2l19295:; BSR set to: 0
 12402                           
 12403                           ;my_i2c.c: 315: data_read = 0;
 12404  00028C  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12405  00028E  0E00               	movlw	low(0)
 12406  000290  0100               	movlb	0	; () banked
 12407  000292  0100               	movlb	0	; () banked
 12408  000294  6FAA               	movwf	((i2c_slave_int_handler@data_read))&0ffh
 12409  000296  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 12410  000298  D13B               	goto	i2l7391
 12411                           	line	316
 12412                           	
 12413  00029A                     i2l7406:; BSR set to: 0
 12414                           
 12415                           	line	317
 12416                           ;my_i2c.c: 316: }
 12417                           ;my_i2c.c: 317: } else {
 12418  00029A  D13A               	goto	i2l7391
 12419                           	
 12420  00029C                     i2l7404:; BSR set to: 0
 12421                           
 12422                           	line	318
 12423                           	
 12424  00029C                     i2l19297:; BSR set to: 0
 12425                           
 12426                           ;my_i2c.c: 318: ic_ptr->error_count++;
 12427  00029C  EE20 F00E          	lfsr	2,0Eh
 12428  0002A0  5048               	movf	((c:_ic_ptr)),c,w
 12429  0002A2  26D9               	addwf	fsr2l
 12430  0002A4  5049               	movf	((c:_ic_ptr+1)),c,w
 12431  0002A6  22DA               	addwfc	fsr2h
 12432  0002A8  2ADF               	incf	indf2
 12433                           
 12434                           	line	319
 12435                           ;my_i2c.c: 319: ic_ptr->status = 0x5;
 12436  0002AA  EE20 F00C          	lfsr	2,0Ch
 12437  0002AE  5048               	movf	((c:_ic_ptr)),c,w
 12438  0002B0  26D9               	addwf	fsr2l
 12439  0002B2  5049               	movf	((c:_ic_ptr+1)),c,w
 12440  0002B4  22DA               	addwfc	fsr2h
 12441  0002B6  0E05               	movlw	low(05h)
 12442  0002B8  6EDF               	movwf	indf2
 12443                           	line	320
 12444                           ;my_i2c.c: 320: ic_ptr->error_code = 0x6;
 12445  0002BA  EE20 F00D          	lfsr	2,0Dh
 12446  0002BE  5048               	movf	((c:_ic_ptr)),c,w
 12447  0002C0  26D9               	addwf	fsr2l
 12448  0002C2  5049               	movf	((c:_ic_ptr+1)),c,w
 12449  0002C4  22DA               	addwfc	fsr2h
 12450  0002C6  0E06               	movlw	low(06h)
 12451  0002C8  6EDF               	movwf	indf2
 12452  0002CA  D122               	goto	i2l7391
 12453                           	line	321
 12454                           	
 12455  0002CC                     i2l7407:; BSR set to: 0
 12456                           
 12457  0002CC  D121               	goto	i2l7391
 12458                           	line	322
 12459                           	
 12460  0002CE                     i2l7403:; BSR set to: 0
 12461                           
 12462  0002CE  D120               	goto	i2l7391
 12463                           	line	323
 12464                           	
 12465  0002D0                     i2l7402:; BSR set to: 0
 12466                           
 12467                           ;my_i2c.c: 321: }
 12468                           ;my_i2c.c: 322: }
 12469                           ;my_i2c.c: 323: break;
 12470  0002D0  D11F               	goto	i2l7391
 12471                           	line	325
 12472                           ;my_i2c.c: 324: }
 12473                           ;my_i2c.c: 325: case 0x8:
 12474                           	
 12475  0002D2                     i2l7408:; BSR set to: 0
 12476                           
 12477                           	line	327
 12478                           	
 12479  0002D2                     i2l19299:; BSR set to: 0
 12480                           
 12481                           ;my_i2c.c: 326: {
 12482                           ;my_i2c.c: 327: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
 12483  0002D2  EE20 F01A          	lfsr	2,01Ah
 12484  0002D6  5048               	movf	((c:_ic_ptr)),c,w
 12485  0002D8  26D9               	addwf	fsr2l
 12486  0002DA  5049               	movf	((c:_ic_ptr+1)),c,w
 12487  0002DC  22DA               	addwfc	fsr2h
 12488  0002DE  50DF               	movf	indf2,w
 12489  0002E0  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12490  0002E2  EE20 F019          	lfsr	2,019h
 12491  0002E6  5048               	movf	((c:_ic_ptr)),c,w
 12492  0002E8  26D9               	addwf	fsr2l
 12493  0002EA  5049               	movf	((c:_ic_ptr+1)),c,w
 12494  0002EC  22DA               	addwfc	fsr2h
 12495  0002EE  50DF               	movf	indf2,w
 12496  0002F0  5C40               	subwf	((??_i2c_slave_int_handler+0+0)),c,w
 12497  0002F2  B0D8               	btfsc	status,0
 12498  0002F4  D001               	goto	i2u216_41
 12499  0002F6  D001               	goto	i2u216_40
 12500  0002F8                     i2u216_41:
 12501  0002F8  D024               	goto	i2l19307
 12502  0002FA                     i2u216_40:
 12503                           	line	328
 12504                           	
 12505  0002FA                     i2l19301:; BSR set to: 0
 12506                           
 12507                           ;my_i2c.c: 328: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
 12508  0002FA  EE20 F01A          	lfsr	2,01Ah
 12509  0002FE  5048               	movf	((c:_ic_ptr)),c,w
 12510  000300  26D9               	addwf	fsr2l
 12511  000302  5049               	movf	((c:_ic_ptr+1)),c,w
 12512  000304  22DA               	addwfc	fsr2h
 12513  000306  50DF               	movf	indf2,w
 12514  000308  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12515  00030A  5040               	movf	((??_i2c_slave_int_handler+0+0)),c,w
 12516  00030C  0D01               	mullw	01h
 12517  00030E  0E0F               	movlw	0Fh
 12518  000310  26F3               	addwf	(prodl),c
 12519  000312  0E00               	movlw	0
 12520  000314  22F4               	addwfc	(prodh),c
 12521  000316  50F3               	movf	(prodl),c,w
 12522  000318  2448               	addwf	((c:_ic_ptr)),c,w
 12523  00031A  6ED9               	movwf	c:fsr2l
 12524  00031C  50F4               	movf	(prodh),c,w
 12525  00031E  2049               	addwfc	((c:_ic_ptr+1)),c,w
 12526  000320  6EDA               	movwf	1+c:fsr2l
 12527  000322  50DF               	movf	indf2,w
 12528  000324  6EC9               	movwf	((c:4041)),c	;volatile
 12529                           	line	329
 12530                           	
 12531  000326                     i2l19303:; BSR set to: 0
 12532                           
 12533                           ;my_i2c.c: 329: ic_ptr->outbufind++;
 12534  000326  EE20 F01A          	lfsr	2,01Ah
 12535  00032A  5048               	movf	((c:_ic_ptr)),c,w
 12536  00032C  26D9               	addwf	fsr2l
 12537  00032E  5049               	movf	((c:_ic_ptr+1)),c,w
 12538  000330  22DA               	addwfc	fsr2h
 12539  000332  2ADF               	incf	indf2
 12540                           
 12541                           	line	330
 12542                           	
 12543  000334                     i2l19305:; BSR set to: 0
 12544                           
 12545                           ;my_i2c.c: 330: data_written = 1;
 12546  000334  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12547  000336  0E01               	movlw	low(01h)
 12548  000338  0100               	movlb	0	; () banked
 12549  00033A  0100               	movlb	0	; () banked
 12550  00033C  6FA2               	movwf	((i2c_slave_int_handler@data_written))&0ffh
 12551  00033E  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 12552                           	line	331
 12553                           ;my_i2c.c: 331: } else {
 12554  000340  D0E7               	goto	i2l7391
 12555                           	
 12556  000342                     i2l7409:; BSR set to: 0
 12557                           
 12558                           	line	333
 12559                           	
 12560  000342                     i2l19307:; BSR set to: 0
 12561                           
 12562                           ;my_i2c.c: 333: ic_ptr->status = 0x5;
 12563  000342  EE20 F00C          	lfsr	2,0Ch
 12564  000346  5048               	movf	((c:_ic_ptr)),c,w
 12565  000348  26D9               	addwf	fsr2l
 12566  00034A  5049               	movf	((c:_ic_ptr+1)),c,w
 12567  00034C  22DA               	addwfc	fsr2h
 12568  00034E  0E05               	movlw	low(05h)
 12569  000350  6EDF               	movwf	indf2
 12570  000352  D0DE               	goto	i2l7391
 12571                           	line	334
 12572                           	
 12573  000354                     i2l7410:; BSR set to: 0
 12574                           
 12575                           	line	335
 12576                           ;my_i2c.c: 334: }
 12577                           ;my_i2c.c: 335: break;
 12578  000354  D0DD               	goto	i2l7391
 12579                           	line	337
 12580                           ;my_i2c.c: 336: }
 12581                           ;my_i2c.c: 337: case 0x7:
 12582                           	
 12583  000356                     i2l7411:; BSR set to: 0
 12584                           
 12585                           	line	340
 12586                           ;my_i2c.c: 338: {
 12587                           ;my_i2c.c: 340: if (SSPSTATbits.P == 1) {
 12588                           	
 12589  000356  A8C7               	btfss	((c:4039)),c,4	;volatile
 12590  000358  D001               	goto	i2u217_41
 12591  00035A  D001               	goto	i2u217_40
 12592  00035C                     i2u217_41:
 12593  00035C  D05C               	goto	i2l19327
 12594  00035E                     i2u217_40:
 12595                           	line	342
 12596                           	
 12597  00035E                     i2l19309:; BSR set to: 0
 12598                           
 12599                           ;my_i2c.c: 342: ic_ptr->event_count++;
 12600  00035E  EE20 F00B          	lfsr	2,0Bh
 12601  000362  5048               	movf	((c:_ic_ptr)),c,w
 12602  000364  26D9               	addwf	fsr2l
 12603  000366  5049               	movf	((c:_ic_ptr+1)),c,w
 12604  000368  22DA               	addwfc	fsr2h
 12605  00036A  2ADF               	incf	indf2
 12606                           
 12607                           	line	343
 12608                           	
 12609  00036C                     i2l19311:; BSR set to: 0
 12610                           
 12611                           ;my_i2c.c: 343: if (data_read) {
 12612  00036C  0100               	movlb	0	; () banked
 12613  00036E  0100               	movlb	0	; () banked
 12614  000370  51AA               	movf	((i2c_slave_int_handler@data_read))&0ffh,w
 12615  000372  B4D8               	btfsc	status,2
 12616  000374  D001               	goto	i2u218_41
 12617  000376  D001               	goto	i2u218_40
 12618  000378                     i2u218_41:
 12619  000378  D03E               	goto	i2l19323
 12620  00037A                     i2u218_40:
 12621                           	line	344
 12622                           	
 12623  00037A                     i2l19313:; BSR set to: 0
 12624                           
 12625                           ;my_i2c.c: 344: if (SSPSTATbits.D_A == 1) {
 12626                           	
 12627  00037A  AAC7               	btfss	((c:4039)),c,5	;volatile
 12628  00037C  D001               	goto	i2u219_41
 12629  00037E  D001               	goto	i2u219_40
 12630  000380                     i2u219_41:
 12631  000380  D021               	goto	i2l19321
 12632  000382                     i2u219_40:
 12633                           	line	345
 12634                           	
 12635  000382                     i2l19315:; BSR set to: 0
 12636                           
 12637                           ;my_i2c.c: 345: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
 12638  000382  EE20 F00A          	lfsr	2,0Ah
 12639  000386  5048               	movf	((c:_ic_ptr)),c,w
 12640  000388  26D9               	addwf	fsr2l
 12641  00038A  5049               	movf	((c:_ic_ptr+1)),c,w
 12642  00038C  22DA               	addwfc	fsr2h
 12643  00038E  50DF               	movf	indf2,w
 12644  000390  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12645  000392  5040               	movf	((??_i2c_slave_int_handler+0+0)),c,w
 12646  000394  0D01               	mullw	01h
 12647  000396  50F3               	movf	(prodl),c,w
 12648  000398  2448               	addwf	((c:_ic_ptr)),c,w
 12649  00039A  6ED9               	movwf	c:fsr2l
 12650  00039C  50F4               	movf	(prodh),c,w
 12651  00039E  2049               	addwfc	((c:_ic_ptr+1)),c,w
 12652  0003A0  6EDA               	movwf	1+c:fsr2l
 12653  0003A2  0100               	movlb	0	; () banked
 12654  0003A4  C0A6  FFDF         	movff	(i2c_slave_int_handler@i2c_data),indf2
 12655                           
 12656                           	line	346
 12657                           	
 12658  0003A8                     i2l19317:; BSR set to: 0
 12659                           
 12660                           ;my_i2c.c: 346: ic_ptr->buflen++;
 12661  0003A8  EE20 F00A          	lfsr	2,0Ah
 12662  0003AC  5048               	movf	((c:_ic_ptr)),c,w
 12663  0003AE  26D9               	addwf	fsr2l
 12664  0003B0  5049               	movf	((c:_ic_ptr+1)),c,w
 12665  0003B2  22DA               	addwfc	fsr2h
 12666  0003B4  2ADF               	incf	indf2
 12667                           
 12668                           	line	347
 12669                           	
 12670  0003B6                     i2l19319:; BSR set to: 0
 12671                           
 12672                           ;my_i2c.c: 347: msg_ready = 1;
 12673  0003B6  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12674  0003B8  0E01               	movlw	low(01h)
 12675  0003BA  0100               	movlb	0	; () banked
 12676  0003BC  0100               	movlb	0	; () banked
 12677  0003BE  6FA9               	movwf	((i2c_slave_int_handler@msg_ready))&0ffh
 12678  0003C0  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 12679                           	line	348
 12680                           ;my_i2c.c: 348: } else {
 12681  0003C2  D020               	goto	i2l19325
 12682                           	
 12683  0003C4                     i2l7414:; BSR set to: 0
 12684                           
 12685                           	line	349
 12686                           	
 12687  0003C4                     i2l19321:; BSR set to: 0
 12688                           
 12689                           ;my_i2c.c: 349: ic_ptr->error_count++;
 12690  0003C4  EE20 F00E          	lfsr	2,0Eh
 12691  0003C8  5048               	movf	((c:_ic_ptr)),c,w
 12692  0003CA  26D9               	addwf	fsr2l
 12693  0003CC  5049               	movf	((c:_ic_ptr+1)),c,w
 12694  0003CE  22DA               	addwfc	fsr2h
 12695  0003D0  2ADF               	incf	indf2
 12696                           
 12697                           	line	350
 12698                           ;my_i2c.c: 350: ic_ptr->error_code = 0x6;
 12699  0003D2  EE20 F00D          	lfsr	2,0Dh
 12700  0003D6  5048               	movf	((c:_ic_ptr)),c,w
 12701  0003D8  26D9               	addwf	fsr2l
 12702  0003DA  5049               	movf	((c:_ic_ptr+1)),c,w
 12703  0003DC  22DA               	addwfc	fsr2h
 12704  0003DE  0E06               	movlw	low(06h)
 12705  0003E0  6EDF               	movwf	indf2
 12706                           	line	351
 12707                           ;my_i2c.c: 351: ic_ptr->status = 0x5;
 12708  0003E2  EE20 F00C          	lfsr	2,0Ch
 12709  0003E6  5048               	movf	((c:_ic_ptr)),c,w
 12710  0003E8  26D9               	addwf	fsr2l
 12711  0003EA  5049               	movf	((c:_ic_ptr+1)),c,w
 12712  0003EC  22DA               	addwfc	fsr2h
 12713  0003EE  0E05               	movlw	low(05h)
 12714  0003F0  6EDF               	movwf	indf2
 12715  0003F2  D008               	goto	i2l19325
 12716                           	line	352
 12717                           	
 12718  0003F4                     i2l7415:; BSR set to: 0
 12719                           
 12720                           	line	353
 12721                           ;my_i2c.c: 352: }
 12722                           ;my_i2c.c: 353: } else {
 12723  0003F4  D007               	goto	i2l19325
 12724                           	
 12725  0003F6                     i2l7413:; BSR set to: 0
 12726                           
 12727                           	line	354
 12728                           	
 12729  0003F6                     i2l19323:; BSR set to: 0
 12730                           
 12731                           ;my_i2c.c: 354: msg_ready = 1;
 12732  0003F6  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12733  0003F8  0E01               	movlw	low(01h)
 12734  0003FA  0100               	movlb	0	; () banked
 12735  0003FC  0100               	movlb	0	; () banked
 12736  0003FE  6FA9               	movwf	((i2c_slave_int_handler@msg_ready))&0ffh
 12737  000400  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 12738  000402  D000               	goto	i2l19325
 12739                           	line	355
 12740                           	
 12741  000404                     i2l7416:; BSR set to: 0
 12742                           
 12743                           	line	356
 12744                           	
 12745  000404                     i2l19325:; BSR set to: 0
 12746                           
 12747                           ;my_i2c.c: 355: }
 12748                           ;my_i2c.c: 356: ic_ptr->status = 0x5;
 12749  000404  EE20 F00C          	lfsr	2,0Ch
 12750  000408  5048               	movf	((c:_ic_ptr)),c,w
 12751  00040A  26D9               	addwf	fsr2l
 12752  00040C  5049               	movf	((c:_ic_ptr+1)),c,w
 12753  00040E  22DA               	addwfc	fsr2h
 12754  000410  0E05               	movlw	low(05h)
 12755  000412  6EDF               	movwf	indf2
 12756                           	line	357
 12757                           ;my_i2c.c: 357: } else if (data_read) {
 12758  000414  D07D               	goto	i2l7391
 12759                           	
 12760  000416                     i2l7412:; BSR set to: 0
 12761                           
 12762                           	
 12763  000416                     i2l19327:; BSR set to: 0
 12764                           
 12765  000416  0100               	movlb	0	; () banked
 12766  000418  0100               	movlb	0	; () banked
 12767  00041A  51AA               	movf	((i2c_slave_int_handler@data_read))&0ffh,w
 12768  00041C  B4D8               	btfsc	status,2
 12769  00041E  D001               	goto	i2u220_41
 12770  000420  D001               	goto	i2u220_40
 12771  000422                     i2u220_41:
 12772  000422  D076               	goto	i2l7391
 12773  000424                     i2u220_40:
 12774                           	line	358
 12775                           	
 12776  000424                     i2l19329:; BSR set to: 0
 12777                           
 12778                           ;my_i2c.c: 358: ic_ptr->event_count++;
 12779  000424  EE20 F00B          	lfsr	2,0Bh
 12780  000428  5048               	movf	((c:_ic_ptr)),c,w
 12781  00042A  26D9               	addwf	fsr2l
 12782  00042C  5049               	movf	((c:_ic_ptr+1)),c,w
 12783  00042E  22DA               	addwfc	fsr2h
 12784  000430  2ADF               	incf	indf2
 12785                           
 12786                           	line	359
 12787                           	
 12788  000432                     i2l19331:; BSR set to: 0
 12789                           
 12790                           ;my_i2c.c: 359: if (SSPSTATbits.D_A == 1) {
 12791                           	
 12792  000432  AAC7               	btfss	((c:4039)),c,5	;volatile
 12793  000434  D001               	goto	i2u221_41
 12794  000436  D001               	goto	i2u221_40
 12795  000438                     i2u221_41:
 12796  000438  D01B               	goto	i2l7419
 12797  00043A                     i2u221_40:
 12798                           	line	360
 12799                           	
 12800  00043A                     i2l19333:; BSR set to: 0
 12801                           
 12802                           ;my_i2c.c: 360: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
 12803  00043A  EE20 F00A          	lfsr	2,0Ah
 12804  00043E  5048               	movf	((c:_ic_ptr)),c,w
 12805  000440  26D9               	addwf	fsr2l
 12806  000442  5049               	movf	((c:_ic_ptr+1)),c,w
 12807  000444  22DA               	addwfc	fsr2h
 12808  000446  50DF               	movf	indf2,w
 12809  000448  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12810  00044A  5040               	movf	((??_i2c_slave_int_handler+0+0)),c,w
 12811  00044C  0D01               	mullw	01h
 12812  00044E  50F3               	movf	(prodl),c,w
 12813  000450  2448               	addwf	((c:_ic_ptr)),c,w
 12814  000452  6ED9               	movwf	c:fsr2l
 12815  000454  50F4               	movf	(prodh),c,w
 12816  000456  2049               	addwfc	((c:_ic_ptr+1)),c,w
 12817  000458  6EDA               	movwf	1+c:fsr2l
 12818  00045A  0100               	movlb	0	; () banked
 12819  00045C  C0A6  FFDF         	movff	(i2c_slave_int_handler@i2c_data),indf2
 12820                           
 12821                           	line	361
 12822                           	
 12823  000460                     i2l19335:; BSR set to: 0
 12824                           
 12825                           ;my_i2c.c: 361: ic_ptr->buflen++;
 12826  000460  EE20 F00A          	lfsr	2,0Ah
 12827  000464  5048               	movf	((c:_ic_ptr)),c,w
 12828  000466  26D9               	addwf	fsr2l
 12829  000468  5049               	movf	((c:_ic_ptr+1)),c,w
 12830  00046A  22DA               	addwfc	fsr2h
 12831  00046C  2ADF               	incf	indf2
 12832                           
 12833                           	line	362
 12834                           ;my_i2c.c: 362: } else {
 12835  00046E  D050               	goto	i2l7391
 12836                           	
 12837  000470                     i2l7419:; BSR set to: 0
 12838                           
 12839                           	line	363
 12840                           ;my_i2c.c: 363: if (SSPSTATbits.R_W == 1) {
 12841                           	
 12842  000470  A4C7               	btfss	((c:4039)),c,2	;volatile
 12843  000472  D001               	goto	i2u222_41
 12844  000474  D001               	goto	i2u222_40
 12845  000476                     i2u222_41:
 12846  000476  D01B               	goto	i2l19345
 12847  000478                     i2u222_40:
 12848                           	line	364
 12849                           	
 12850  000478                     i2l19337:; BSR set to: 0
 12851                           
 12852                           ;my_i2c.c: 364: ic_ptr->status = 0x8;
 12853  000478  EE20 F00C          	lfsr	2,0Ch
 12854  00047C  5048               	movf	((c:_ic_ptr)),c,w
 12855  00047E  26D9               	addwf	fsr2l
 12856  000480  5049               	movf	((c:_ic_ptr+1)),c,w
 12857  000482  22DA               	addwfc	fsr2h
 12858  000484  0E08               	movlw	low(08h)
 12859  000486  6EDF               	movwf	indf2
 12860                           	line	365
 12861                           	
 12862  000488                     i2l19339:; BSR set to: 0
 12863                           
 12864                           ;my_i2c.c: 365: msg_ready = 1;
 12865  000488  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12866  00048A  0E01               	movlw	low(01h)
 12867  00048C  0100               	movlb	0	; () banked
 12868  00048E  0100               	movlb	0	; () banked
 12869  000490  6FA9               	movwf	((i2c_slave_int_handler@msg_ready))&0ffh
 12870  000492  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 12871                           	line	366
 12872                           	
 12873  000494                     i2l19341:; BSR set to: 0
 12874                           
 12875                           ;my_i2c.c: 366: msg_to_send = 1;
 12876  000494  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12877  000496  0E01               	movlw	low(01h)
 12878  000498  0100               	movlb	0	; () banked
 12879  00049A  0100               	movlb	0	; () banked
 12880  00049C  6FA8               	movwf	((i2c_slave_int_handler@msg_to_send))&0ffh
 12881  00049E  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 12882                           	line	368
 12883                           	
 12884  0004A0                     i2l19343:; BSR set to: 0
 12885                           
 12886                           ;my_i2c.c: 368: data_read = 0;
 12887  0004A0  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12888  0004A2  0E00               	movlw	low(0)
 12889  0004A4  0100               	movlb	0	; () banked
 12890  0004A6  0100               	movlb	0	; () banked
 12891  0004A8  6FAA               	movwf	((i2c_slave_int_handler@data_read))&0ffh
 12892  0004AA  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 12893                           	line	369
 12894                           ;my_i2c.c: 369: } else {
 12895  0004AC  D031               	goto	i2l7391
 12896                           	
 12897  0004AE                     i2l7421:; BSR set to: 0
 12898                           
 12899                           	line	370
 12900                           	
 12901  0004AE                     i2l19345:; BSR set to: 0
 12902                           
 12903                           ;my_i2c.c: 370: ic_ptr->error_count++;
 12904  0004AE  EE20 F00E          	lfsr	2,0Eh
 12905  0004B2  5048               	movf	((c:_ic_ptr)),c,w
 12906  0004B4  26D9               	addwf	fsr2l
 12907  0004B6  5049               	movf	((c:_ic_ptr+1)),c,w
 12908  0004B8  22DA               	addwfc	fsr2h
 12909  0004BA  2ADF               	incf	indf2
 12910                           
 12911                           	line	371
 12912                           ;my_i2c.c: 371: ic_ptr->error_code = 0x6;
 12913  0004BC  EE20 F00D          	lfsr	2,0Dh
 12914  0004C0  5048               	movf	((c:_ic_ptr)),c,w
 12915  0004C2  26D9               	addwf	fsr2l
 12916  0004C4  5049               	movf	((c:_ic_ptr+1)),c,w
 12917  0004C6  22DA               	addwfc	fsr2h
 12918  0004C8  0E06               	movlw	low(06h)
 12919  0004CA  6EDF               	movwf	indf2
 12920                           	line	372
 12921                           ;my_i2c.c: 372: ic_ptr->status = 0x5;
 12922  0004CC  EE20 F00C          	lfsr	2,0Ch
 12923  0004D0  5048               	movf	((c:_ic_ptr)),c,w
 12924  0004D2  26D9               	addwf	fsr2l
 12925  0004D4  5049               	movf	((c:_ic_ptr+1)),c,w
 12926  0004D6  22DA               	addwfc	fsr2h
 12927  0004D8  0E05               	movlw	low(05h)
 12928  0004DA  6EDF               	movwf	indf2
 12929  0004DC  D019               	goto	i2l7391
 12930                           	line	373
 12931                           	
 12932  0004DE                     i2l7422:; BSR set to: 0
 12933                           
 12934  0004DE  D018               	goto	i2l7391
 12935                           	line	374
 12936                           	
 12937  0004E0                     i2l7420:; BSR set to: 0
 12938                           
 12939  0004E0  D017               	goto	i2l7391
 12940                           	line	375
 12941                           	
 12942  0004E2                     i2l7418:; BSR set to: 0
 12943                           
 12944  0004E2  D016               	goto	i2l7391
 12945                           	line	376
 12946                           	
 12947  0004E4                     i2l7417:; BSR set to: 0
 12948                           
 12949                           ;my_i2c.c: 373: }
 12950                           ;my_i2c.c: 374: }
 12951                           ;my_i2c.c: 375: }
 12952                           ;my_i2c.c: 376: break;
 12953  0004E4  D015               	goto	i2l7391
 12954                           	line	378
 12955                           	
 12956  0004E6                     i2l19347:; BSR set to: 0
 12957                           
 12958                           ;my_i2c.c: 377: }
 12959                           ;my_i2c.c: 378: }
 12960  0004E6  D014               	goto	i2l7391
 12961                           	line	276
 12962                           	
 12963  0004E8                     i2l7392:; BSR set to: 0
 12964                           
 12965                           	
 12966  0004E8                     i2l19349:; BSR set to: 0
 12967                           
 12968  0004E8  EE20 F00C          	lfsr	2,0Ch
 12969  0004EC  5048               	movf	((c:_ic_ptr)),c,w
 12970  0004EE  26D9               	addwf	fsr2l
 12971  0004F0  5049               	movf	((c:_ic_ptr+1)),c,w
 12972  0004F2  22DA               	addwfc	fsr2h
 12973  0004F4  50DF               	movf	indf2,w
 12974                           	; Switch size 1, requested type "space"
 12975                           ; Number of cases is 4, Range of values is 5 to 8
 12976                           ; switch strategies available:
 12977                           ; Name         Instructions Cycles
 12978                           ; simple_byte           13     7 (average)
 12979                           ;	Chosen strategy is simple_byte
 12980                           
 12981  0004F6  0A05               	xorlw	5^0	; case 5
 12982  0004F8  B4D8               	skipnz
 12983  0004FA  D643               	goto	i2l7393
 12984  0004FC  0A03               	xorlw	6^5	; case 6
 12985  0004FE  B4D8               	skipnz
 12986  000500  D662               	goto	i2l7397
 12987  000502  0A01               	xorlw	7^6	; case 7
 12988  000504  B4D8               	skipnz
 12989  000506  D727               	goto	i2l7411
 12990  000508  0A0F               	xorlw	8^7	; case 8
 12991  00050A  B4D8               	skipnz
 12992  00050C  D6E2               	goto	i2l19299
 12993  00050E  D000               	goto	i2l7391
 12994                           
 12995                           	line	378
 12996                           	
 12997  000510                     i2l7396:; BSR set to: 0
 12998                           
 12999                           	line	379
 13000                           	
 13001  000510                     i2l7391:
 13002                           	line	382
 13003                           ;my_i2c.c: 379: }
 13004                           ;my_i2c.c: 382: if (data_read || data_written) {
 13005  000510  0100               	movlb	0	; () banked
 13006  000512  0100               	movlb	0	; () banked
 13007  000514  67AA               	tstfsz	((i2c_slave_int_handler@data_read))&0ffh
 13008  000516  D001               	goto	i2u223_41
 13009  000518  D001               	goto	i2u223_40
 13010  00051A                     i2u223_41:
 13011  00051A  D007               	goto	i2l7425
 13012  00051C                     i2u223_40:
 13013                           	
 13014  00051C                     i2l19351:; BSR set to: 0
 13015                           
 13016  00051C  0100               	movlb	0	; () banked
 13017  00051E  0100               	movlb	0	; () banked
 13018  000520  51A2               	movf	((i2c_slave_int_handler@data_written))&0ffh,w
 13019  000522  B4D8               	btfsc	status,2
 13020  000524  D001               	goto	i2u224_41
 13021  000526  D001               	goto	i2u224_40
 13022  000528                     i2u224_41:
 13023  000528  D007               	goto	i2l19355
 13024  00052A                     i2u224_40:
 13025                           	
 13026  00052A                     i2l7425:; BSR set to: 0
 13027                           
 13028                           	line	384
 13029                           ;my_i2c.c: 384: if (SSPCON1bits.CKP == 0) {
 13030                           	
 13031  00052A  B8C6               	btfsc	((c:4038)),c,4	;volatile
 13032  00052C  D001               	goto	i2u225_41
 13033  00052E  D001               	goto	i2u225_40
 13034  000530                     i2u225_41:
 13035  000530  D003               	goto	i2l19355
 13036  000532                     i2u225_40:
 13037                           	line	385
 13038                           	
 13039  000532                     i2l19353:; BSR set to: 0
 13040                           
 13041                           ;my_i2c.c: 385: SSPCON1bits.CKP = 1;
 13042  000532  88C6               	bsf	((c:4038)),c,4	;volatile
 13043  000534  D001               	goto	i2l19355
 13044                           	line	386
 13045                           	
 13046  000536                     i2l7426:; BSR set to: 0
 13047                           
 13048  000536  D000               	goto	i2l19355
 13049                           	line	387
 13050                           	
 13051  000538                     i2l7423:; BSR set to: 0
 13052                           
 13053                           	line	390
 13054                           	
 13055  000538                     i2l19355:; BSR set to: 0
 13056                           
 13057                           ;my_i2c.c: 386: }
 13058                           ;my_i2c.c: 387: }
 13059                           ;my_i2c.c: 390: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
 13060  000538  EE20 F00A          	lfsr	2,0Ah
 13061  00053C  5048               	movf	((c:_ic_ptr)),c,w
 13062  00053E  26D9               	addwf	fsr2l
 13063  000540  5049               	movf	((c:_ic_ptr+1)),c,w
 13064  000542  22DA               	addwfc	fsr2h
 13065  000544  0E08               	movlw	(09h-1)
 13066  000546  64DF               	cpfsgt	indf2
 13067  000548  D001               	goto	i2u226_41
 13068  00054A  D001               	goto	i2u226_40
 13069  00054C                     i2u226_41:
 13070  00054C  D01E               	goto	i2l19361
 13071  00054E                     i2u226_40:
 13072                           	
 13073  00054E                     i2l19357:; BSR set to: 0
 13074                           
 13075  00054E  0100               	movlb	0	; () banked
 13076  000550  0100               	movlb	0	; () banked
 13077  000552  67A9               	tstfsz	((i2c_slave_int_handler@msg_ready))&0ffh
 13078  000554  D001               	goto	i2u227_41
 13079  000556  D001               	goto	i2u227_40
 13080  000558                     i2u227_41:
 13081  000558  D018               	goto	i2l19361
 13082  00055A                     i2u227_40:
 13083                           	line	391
 13084                           	
 13085  00055A                     i2l19359:; BSR set to: 0
 13086                           
 13087                           ;my_i2c.c: 391: ic_ptr->status = 0x5;
 13088  00055A  EE20 F00C          	lfsr	2,0Ch
 13089  00055E  5048               	movf	((c:_ic_ptr)),c,w
 13090  000560  26D9               	addwf	fsr2l
 13091  000562  5049               	movf	((c:_ic_ptr+1)),c,w
 13092  000564  22DA               	addwfc	fsr2h
 13093  000566  0E05               	movlw	low(05h)
 13094  000568  6EDF               	movwf	indf2
 13095                           	line	392
 13096                           ;my_i2c.c: 392: ic_ptr->error_count++;
 13097  00056A  EE20 F00E          	lfsr	2,0Eh
 13098  00056E  5048               	movf	((c:_ic_ptr)),c,w
 13099  000570  26D9               	addwf	fsr2l
 13100  000572  5049               	movf	((c:_ic_ptr+1)),c,w
 13101  000574  22DA               	addwfc	fsr2h
 13102  000576  2ADF               	incf	indf2
 13103                           
 13104                           	line	393
 13105                           ;my_i2c.c: 393: ic_ptr->error_code = 0x7;
 13106  000578  EE20 F00D          	lfsr	2,0Dh
 13107  00057C  5048               	movf	((c:_ic_ptr)),c,w
 13108  00057E  26D9               	addwf	fsr2l
 13109  000580  5049               	movf	((c:_ic_ptr+1)),c,w
 13110  000582  22DA               	addwfc	fsr2h
 13111  000584  0E07               	movlw	low(07h)
 13112  000586  6EDF               	movwf	indf2
 13113  000588  D000               	goto	i2l19361
 13114                           	line	394
 13115                           	
 13116  00058A                     i2l7427:; BSR set to: 0
 13117                           
 13118                           	line	396
 13119                           	
 13120  00058A                     i2l19361:; BSR set to: 0
 13121                           
 13122                           ;my_i2c.c: 394: }
 13123                           ;my_i2c.c: 396: if (msg_ready) {
 13124  00058A  0100               	movlb	0	; () banked
 13125  00058C  0100               	movlb	0	; () banked
 13126  00058E  51A9               	movf	((i2c_slave_int_handler@msg_ready))&0ffh,w
 13127  000590  B4D8               	btfsc	status,2
 13128  000592  D001               	goto	i2u228_41
 13129  000594  D001               	goto	i2u228_40
 13130  000596                     i2u228_41:
 13131  000596  D05F               	goto	i2l19377
 13132  000598                     i2u228_40:
 13133                           	line	400
 13134                           	
 13135  000598                     i2l19363:; BSR set to: 0
 13136                           
 13137                           ;my_i2c.c: 398: unsigned char data[10];
 13138                           ;my_i2c.c: 399: unsigned char msgtype;
 13139                           ;my_i2c.c: 400: int length = FromMainLow_recvmsg(10, &msgtype, (void *) data);
 13140  000598  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 13141  00059A  0E0A               	movlw	low(0Ah)
 13142  00059C  0100               	movlb	0	; () banked
 13143  00059E  0100               	movlb	0	; () banked
 13144  0005A0  6F8C               	movwf	((?_FromMainLow_recvmsg))&0ffh
 13145  0005A2  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 13146  0005A4  0100               	movlb	0	; () banked
 13147  0005A6  0E00               	movlw	high(i2c_slave_int_handler@msgtype)
 13148  0005A8  0100               	movlb	0	; () banked
 13149  0005AA  0100               	movlb	0	; () banked
 13150  0005AC  6F8E               	movwf	(1+(?_FromMainLow_recvmsg+01h))&0ffh
 13151  0005AE  0100               	movlb	0	; () banked
 13152  0005B0  0EA7               	movlw	low(i2c_slave_int_handler@msgtype)
 13153  0005B2  0100               	movlb	0	; () banked
 13154  0005B4  6F8D               	movwf	(0+(?_FromMainLow_recvmsg+01h))&0ffh
 13155  0005B6  0100               	movlb	0	; () banked
 13156  0005B8  0E00               	movlw	high(i2c_slave_int_handler@data)
 13157  0005BA  0100               	movlb	0	; () banked
 13158  0005BC  0100               	movlb	0	; () banked
 13159  0005BE  6F90               	movwf	(1+(?_FromMainLow_recvmsg+03h))&0ffh
 13160  0005C0  0100               	movlb	0	; () banked
 13161  0005C2  0E91               	movlw	low(i2c_slave_int_handler@data)
 13162  0005C4  0100               	movlb	0	; () banked
 13163  0005C6  6F8F               	movwf	(0+(?_FromMainLow_recvmsg+03h))&0ffh
 13164  0005C8  0100               	movlb	0	; () banked
 13165  0005CA  EC02  F00E         	call	_FromMainLow_recvmsg	;wreg free
 13166  0005CE  0100               	movlb	0	; () banked
 13167  0005D0  0100               	movlb	0	; () banked
 13168  0005D2  6FA4               	movwf	((i2c_slave_int_handler@length))&0ffh
 13169  0005D4  0100               	movlb	0	; () banked
 13170  0005D6  6BA5               	clrf	((i2c_slave_int_handler@length+1))&0ffh
 13171  0005D8  0100               	movlb	0	; () banked
 13172  0005DA  BFA4               	btfsc	((i2c_slave_int_handler@length))&0ffh,7
 13173  0005DC  07A5               	decf	((i2c_slave_int_handler@length+1))&0ffh
 13174                           	line	401
 13175                           	
 13176  0005DE                     i2l19365:; BSR set to: 0
 13177                           
 13178                           ;my_i2c.c: 401: if(length > 0){
 13179  0005DE  0100               	movlb	0	; () banked
 13180  0005E0  0100               	movlb	0	; () banked
 13181  0005E2  51A5               	movf	((i2c_slave_int_handler@length+1))&0ffh,w
 13182  0005E4  0A80               	xorlw	80h
 13183  0005E6  0F80               	addlw	-((0)^80h)
 13184  0005E8  0E01               	movlw	01h
 13185  0005EA  B4D8               	btfsc	status,2
 13186  0005EC  5DA4               	subwf	((i2c_slave_int_handler@length))&0ffh,w
 13187  0005EE  A0D8               	btfss	status,0
 13188  0005F0  D001               	goto	i2u229_41
 13189  0005F2  D001               	goto	i2u229_40
 13190  0005F4                     i2u229_41:
 13191  0005F4  D00B               	goto	i2l19369
 13192  0005F6                     i2u229_40:
 13193                           	line	402
 13194                           	
 13195  0005F6                     i2l19367:; BSR set to: 0
 13196                           
 13197                           ;my_i2c.c: 402: start_i2c_slave_reply(length, data);
 13198  0005F6  C0A4  F034         	movff	(i2c_slave_int_handler@length),(c:?_start_i2c_slave_reply)
 13199  0005FA  0100               	movlb	0	; () banked
 13200  0005FC  0E00               	movlw	high(i2c_slave_int_handler@data)
 13201  0005FE  6E36               	movwf	(1+((c:?_start_i2c_slave_reply)+01h)),c
 13202  000600  0100               	movlb	0	; () banked
 13203  000602  0E91               	movlw	low(i2c_slave_int_handler@data)
 13204  000604  6E35               	movwf	(0+((c:?_start_i2c_slave_reply)+01h)),c
 13205  000606  EC2F  F008         	call	_start_i2c_slave_reply	;wreg free
 13206                           	line	403
 13207                           ;my_i2c.c: 403: }
 13208  00060A  D070               	goto	i2l19385
 13209                           	line	404
 13210                           	
 13211  00060C                     i2l7429:
 13212                           	line	407
 13213                           	
 13214  00060C                     i2l19369:
 13215                           ;my_i2c.c: 404: else {
 13216                           ;my_i2c.c: 406: unsigned char empty[4];
 13217                           ;my_i2c.c: 407: empty[0] = 0x51;
 13218  00060C  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 13219  00060E  0E51               	movlw	low(051h)
 13220  000610  0100               	movlb	0	; () banked
 13221  000612  0100               	movlb	0	; () banked
 13222  000614  6F9B               	movwf	((i2c_slave_int_handler@empty))&0ffh
 13223  000616  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 13224                           	line	408
 13225                           	
 13226  000618                     i2l19371:; BSR set to: 0
 13227                           
 13228                           ;my_i2c.c: 408: empty[1] = emptyMsgCount;
 13229  000618  C0C5  F09C         	movff	(_emptyMsgCount),0+(i2c_slave_int_handler@empty+01h)
 13230                           	line	409
 13231                           ;my_i2c.c: 409: empty[2] = 0x0;
 13232  00061C  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 13233  00061E  0E00               	movlw	low(0)
 13234  000620  0100               	movlb	0	; () banked
 13235  000622  0100               	movlb	0	; () banked
 13236  000624  6F9D               	movwf	(0+(i2c_slave_int_handler@empty+02h))&0ffh
 13237  000626  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 13238                           	line	410
 13239                           ;my_i2c.c: 410: empty[3] = 0x0;
 13240  000628  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 13241  00062A  0E00               	movlw	low(0)
 13242  00062C  0100               	movlb	0	; () banked
 13243  00062E  0100               	movlb	0	; () banked
 13244  000630  6F9E               	movwf	(0+(i2c_slave_int_handler@empty+03h))&0ffh
 13245  000632  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 13246                           	line	411
 13247                           	
 13248  000634                     i2l19373:; BSR set to: 0
 13249                           
 13250                           ;my_i2c.c: 411: emptyMsgCount++;
 13251  000634  0100               	movlb	0	; () banked
 13252  000636  0100               	movlb	0	; () banked
 13253  000638  2BC5               	incf	((_emptyMsgCount))&0ffh
 13254                           	line	412
 13255                           	
 13256  00063A                     i2l19375:; BSR set to: 0
 13257                           
 13258                           ;my_i2c.c: 412: start_i2c_slave_reply(4,empty);
 13259  00063A  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 13260  00063C  0E04               	movlw	low(04h)
 13261  00063E  6E34               	movwf	((c:?_start_i2c_slave_reply)),c
 13262  000640  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 13263  000642  0100               	movlb	0	; () banked
 13264  000644  0E00               	movlw	high(i2c_slave_int_handler@empty)
 13265  000646  6E36               	movwf	(1+((c:?_start_i2c_slave_reply)+01h)),c
 13266  000648  0100               	movlb	0	; () banked
 13267  00064A  0E9B               	movlw	low(i2c_slave_int_handler@empty)
 13268  00064C  6E35               	movwf	(0+((c:?_start_i2c_slave_reply)+01h)),c
 13269  00064E  EC2F  F008         	call	_start_i2c_slave_reply	;wreg free
 13270  000652  D04C               	goto	i2l19385
 13271                           	line	413
 13272                           	
 13273  000654                     i2l7430:
 13274                           	line	416
 13275                           ;my_i2c.c: 413: }
 13276                           ;my_i2c.c: 416: } else if (ic_ptr->error_count >= 1) {
 13277  000654  D04B               	goto	i2l19385
 13278                           	
 13279  000656                     i2l7428:
 13280                           	
 13281  000656                     i2l19377:
 13282  000656  EE20 F00E          	lfsr	2,0Eh
 13283  00065A  5048               	movf	((c:_ic_ptr)),c,w
 13284  00065C  26D9               	addwf	fsr2l
 13285  00065E  5049               	movf	((c:_ic_ptr+1)),c,w
 13286  000660  22DA               	addwfc	fsr2h
 13287  000662  50DF               	movf	indf2,w
 13288  000664  B4D8               	btfsc	status,2
 13289  000666  D001               	goto	i2u230_41
 13290  000668  D001               	goto	i2u230_40
 13291  00066A                     i2u230_41:
 13292  00066A  D040               	goto	i2l19385
 13293  00066C                     i2u230_40:
 13294                           	line	417
 13295                           	
 13296  00066C                     i2l19379:
 13297                           ;my_i2c.c: 417: error_buf[0] = ic_ptr->error_count;
 13298  00066C  EE20 F00E          	lfsr	2,0Eh
 13299  000670  5048               	movf	((c:_ic_ptr)),c,w
 13300  000672  26D9               	addwf	fsr2l
 13301  000674  5049               	movf	((c:_ic_ptr+1)),c,w
 13302  000676  22DA               	addwfc	fsr2h
 13303  000678  50DF               	movf	indf2,w
 13304  00067A  0100               	movlb	0	; () banked
 13305  00067C  0100               	movlb	0	; () banked
 13306  00067E  6F9F               	movwf	((i2c_slave_int_handler@error_buf))&0ffh
 13307                           	line	418
 13308                           ;my_i2c.c: 418: error_buf[1] = ic_ptr->error_code;
 13309  000680  EE20 F00D          	lfsr	2,0Dh
 13310  000684  5048               	movf	((c:_ic_ptr)),c,w
 13311  000686  26D9               	addwf	fsr2l
 13312  000688  5049               	movf	((c:_ic_ptr+1)),c,w
 13313  00068A  22DA               	addwfc	fsr2h
 13314  00068C  50DF               	movf	indf2,w
 13315  00068E  0100               	movlb	0	; () banked
 13316  000690  0100               	movlb	0	; () banked
 13317  000692  6FA0               	movwf	(0+(i2c_slave_int_handler@error_buf+01h))&0ffh
 13318                           	line	419
 13319                           ;my_i2c.c: 419: error_buf[2] = ic_ptr->event_count;
 13320  000694  EE20 F00B          	lfsr	2,0Bh
 13321  000698  5048               	movf	((c:_ic_ptr)),c,w
 13322  00069A  26D9               	addwf	fsr2l
 13323  00069C  5049               	movf	((c:_ic_ptr+1)),c,w
 13324  00069E  22DA               	addwfc	fsr2h
 13325  0006A0  50DF               	movf	indf2,w
 13326  0006A2  0100               	movlb	0	; () banked
 13327  0006A4  0100               	movlb	0	; () banked
 13328  0006A6  6FA1               	movwf	(0+(i2c_slave_int_handler@error_buf+02h))&0ffh
 13329                           	line	420
 13330                           	
 13331  0006A8                     i2l19381:; BSR set to: 0
 13332                           
 13333                           ;my_i2c.c: 420: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
 13334  0006A8  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 13335  0006AA  0E03               	movlw	low(03h)
 13336  0006AC  0100               	movlb	0	; () banked
 13337  0006AE  0100               	movlb	0	; () banked
 13338  0006B0  6F8B               	movwf	((?_ToMainHigh_sendmsg))&0ffh
 13339  0006B2  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 13340  0006B4  6E41               	movwf	(??_i2c_slave_int_handler+1+0)&0ffh,c
 13341  0006B6  0E29               	movlw	low(029h)
 13342  0006B8  0100               	movlb	0	; () banked
 13343  0006BA  0100               	movlb	0	; () banked
 13344  0006BC  6F8C               	movwf	(0+(?_ToMainHigh_sendmsg+01h))&0ffh
 13345  0006BE  5041               	movf	(??_i2c_slave_int_handler+1+0)&0ffh,c,w
 13346  0006C0  0100               	movlb	0	; () banked
 13347  0006C2  0E00               	movlw	high(i2c_slave_int_handler@error_buf)
 13348  0006C4  0100               	movlb	0	; () banked
 13349  0006C6  0100               	movlb	0	; () banked
 13350  0006C8  6F8E               	movwf	(1+(?_ToMainHigh_sendmsg+02h))&0ffh
 13351  0006CA  0100               	movlb	0	; () banked
 13352  0006CC  0E9F               	movlw	low(i2c_slave_int_handler@error_buf)
 13353  0006CE  0100               	movlb	0	; () banked
 13354  0006D0  6F8D               	movwf	(0+(?_ToMainHigh_sendmsg+02h))&0ffh
 13355  0006D2  0100               	movlb	0	; () banked
 13356  0006D4  EC30  F00E         	call	_ToMainHigh_sendmsg	;wreg free
 13357                           	line	421
 13358                           	
 13359  0006D8                     i2l19383:
 13360                           ;my_i2c.c: 421: ic_ptr->error_count = 0;
 13361  0006D8  EE20 F00E          	lfsr	2,0Eh
 13362  0006DC  5048               	movf	((c:_ic_ptr)),c,w
 13363  0006DE  26D9               	addwf	fsr2l
 13364  0006E0  5049               	movf	((c:_ic_ptr+1)),c,w
 13365  0006E2  22DA               	addwfc	fsr2h
 13366  0006E4  0E00               	movlw	low(0)
 13367  0006E6  6EDF               	movwf	indf2
 13368  0006E8  D001               	goto	i2l19385
 13369                           	line	422
 13370                           	
 13371  0006EA                     i2l7432:
 13372  0006EA  D000               	goto	i2l19385
 13373                           	line	423
 13374                           	
 13375  0006EC                     i2l7431:
 13376                           	
 13377  0006EC                     i2l19385:
 13378                           ;my_i2c.c: 422: }
 13379                           ;my_i2c.c: 423: if (msg_to_send) {
 13380  0006EC  0100               	movlb	0	; () banked
 13381  0006EE  0100               	movlb	0	; () banked
 13382  0006F0  51A8               	movf	((i2c_slave_int_handler@msg_to_send))&0ffh,w
 13383  0006F2  B4D8               	btfsc	status,2
 13384  0006F4  D001               	goto	i2u231_41
 13385  0006F6  D001               	goto	i2u231_40
 13386  0006F8                     i2u231_41:
 13387  0006F8  D007               	goto	i2l7434
 13388  0006FA                     i2u231_40:
 13389                           	line	430
 13390                           	
 13391  0006FA                     i2l19387:; BSR set to: 0
 13392                           
 13393                           ;my_i2c.c: 430: msg_to_send = 0;
 13394  0006FA  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 13395  0006FC  0E00               	movlw	low(0)
 13396  0006FE  0100               	movlb	0	; () banked
 13397  000700  0100               	movlb	0	; () banked
 13398  000702  6FA8               	movwf	((i2c_slave_int_handler@msg_to_send))&0ffh
 13399  000704  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 13400  000706  D000               	goto	i2l7434
 13401                           	line	431
 13402                           	
 13403  000708                     i2l7433:; BSR set to: 0
 13404                           
 13405                           	line	432
 13406                           	
 13407  000708                     i2l7434:; BSR set to: 0
 13408                           
 13409  000708  0012               	return
 13410                           	opt stack 0
 13411                           GLOBAL	__end_of_i2c_slave_int_handler
 13412  00070A                     	__end_of_i2c_slave_int_handler:
 13413                           	signat	_i2c_slave_int_handler,88
 13414                           	global	_ToMainHigh_sendmsg
 13415                           
 13416 ;; *************** function _ToMainHigh_sendmsg *****************
 13417 ;; Defined at:
 13418 ;;		line 126 in file "../src/messages.c"
 13419 ;; Parameters:    Size  Location     Type
 13420 ;;  length          1   11[BANK0 ] unsigned char 
 13421 ;;  msgtype         1   12[BANK0 ] unsigned char 
 13422 ;;  data            2   13[BANK0 ] PTR void 
 13423 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@error_buf(3), 
 13424 ;; Auto vars:     Size  Location     Type
 13425 ;;		None
 13426 ;; Return value:  Size  Location     Type
 13427 ;;                  1    wreg      char 
 13428 ;; Registers used:
 13429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13430 ;; Tracked objects:
 13431 ;;		On entry : 0/0
 13432 ;;		On exit  : 0/0
 13433 ;;		Unchanged: 0/0
 13434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13435 ;;      Params:         0       4       0       0       0
 13436 ;;      Locals:         0       0       0       0       0
 13437 ;;      Temps:          0       0       0       0       0
 13438 ;;      Totals:         0       4       0       0       0
 13439 ;;Total ram usage:        4 bytes
 13440 ;; Hardware stack levels used:    1
 13441 ;; Hardware stack levels required when called:    2
 13442 ;; This function calls:
 13443 ;;		i2_send_msg
 13444 ;; This function is called by:
 13445 ;;		_i2c_slave_int_handler
 13446 ;;		_timer0_int_handler
 13447 ;; This function uses a non-reentrant model
 13448 ;;
 13449                           psect	text46,class=CODE,space=0,reloc=2
 13450                           global __ptext46
 13451  001C60                     __ptext46:
 13452                           psect	text46
 13453                           	file	"../src/messages.c"
 13454                           	line	126
 13455                           	global	__size_of_ToMainHigh_sendmsg
 13456  0000                     	__size_of_ToMainHigh_sendmsg	equ	__end_of_ToMainHigh_sendmsg-_ToMainHigh_sendmsg
 13457                           	
 13458  001C60                     _ToMainHigh_sendmsg:; BSR set to: 0
 13459                           
 13460                           	opt	stack 17
 13461                           	line	132
 13462                           	
 13463  001C60                     i2l19225:
 13464                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
 13465                           ;	Return value of _ToMainHigh_sendmsg is never used
 13466  001C60  0101               	movlb	1	; () banked
 13467  001C62  0E01               	movlw	high(_ToMainHigh_MQ)
 13468  001C64  0100               	movlb	0	; () banked
 13469  001C66  0100               	movlb	0	; () banked
 13470  001C68  6F81               	movwf	((?i2_send_msg+1))&0ffh
 13471  001C6A  0101               	movlb	1	; () banked
 13472  001C6C  0E36               	movlw	low(_ToMainHigh_MQ)
 13473  001C6E  0100               	movlb	0	; () banked
 13474  001C70  6F80               	movwf	((?i2_send_msg))&0ffh
 13475  001C72  C08B  F082         	movff	(ToMainHigh_sendmsg@length),0+(?i2_send_msg+02h)
 13476  001C76  C08C  F083         	movff	(ToMainHigh_sendmsg@msgtype),0+(?i2_send_msg+03h)
 13477  001C7A  C08D  F084         	movff	(ToMainHigh_sendmsg@data),0+(?i2_send_msg+04h)
 13478  001C7E  C08E  F085         	movff	(ToMainHigh_sendmsg@data+1),1+(?i2_send_msg+04h)
 13479  001C82  0100               	movlb	0	; () banked
 13480  001C84  EC48  F007         	call	i2_send_msg	;wreg free
 13481  001C88  D000               	goto	i2l5493
 13482                           	
 13483  001C8A                     i2l19227:
 13484                           	line	133
 13485                           	
 13486  001C8A                     i2l5493:
 13487  001C8A  0012               	return
 13488                           	opt stack 0
 13489                           GLOBAL	__end_of_ToMainHigh_sendmsg
 13490  001C8C                     	__end_of_ToMainHigh_sendmsg:
 13491                           	signat	_ToMainHigh_sendmsg,12409
 13492                           	global	_FromMainLow_recvmsg
 13493                           
 13494 ;; *************** function _FromMainLow_recvmsg *****************
 13495 ;; Defined at:
 13496 ;;		line 159 in file "../src/messages.c"
 13497 ;; Parameters:    Size  Location     Type
 13498 ;;  maxlength       1   12[BANK0 ] unsigned char 
 13499 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
 13500 ;;		 -> i2c_slave_int_handler@msgtype(1), 
 13501 ;;  data            2   15[BANK0 ] PTR void 
 13502 ;;		 -> i2c_slave_int_handler@data(10), 
 13503 ;; Auto vars:     Size  Location     Type
 13504 ;;		None
 13505 ;; Return value:  Size  Location     Type
 13506 ;;                  1    wreg      char 
 13507 ;; Registers used:
 13508 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13509 ;; Tracked objects:
 13510 ;;		On entry : 0/0
 13511 ;;		On exit  : 0/0
 13512 ;;		Unchanged: 0/0
 13513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13514 ;;      Params:         0       5       0       0       0
 13515 ;;      Locals:         0       0       0       0       0
 13516 ;;      Temps:          0       0       0       0       0
 13517 ;;      Totals:         0       5       0       0       0
 13518 ;;Total ram usage:        5 bytes
 13519 ;; Hardware stack levels used:    1
 13520 ;; Hardware stack levels required when called:    2
 13521 ;; This function calls:
 13522 ;;		i2_recv_msg
 13523 ;; This function is called by:
 13524 ;;		_i2c_slave_int_handler
 13525 ;; This function uses a non-reentrant model
 13526 ;;
 13527                           psect	text47,class=CODE,space=0,reloc=2
 13528                           global __ptext47
 13529  001C04                     __ptext47:
 13530                           psect	text47
 13531                           	file	"../src/messages.c"
 13532                           	line	159
 13533                           	global	__size_of_FromMainLow_recvmsg
 13534  0000                     	__size_of_FromMainLow_recvmsg	equ	__end_of_FromMainLow_recvmsg-_FromMainLow_recvmsg
 13535                           	
 13536  001C04                     _FromMainLow_recvmsg:
 13537                           	opt	stack 16
 13538                           	line	165
 13539                           	
 13540  001C04                     i2l19229:
 13541                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
 13542  001C04  0101               	movlb	1	; () banked
 13543  001C06  0E01               	movlw	high(_FromMainLow_MQ)
 13544  001C08  0100               	movlb	0	; () banked
 13545  001C0A  0100               	movlb	0	; () banked
 13546  001C0C  6F81               	movwf	((?i2_recv_msg+1))&0ffh
 13547  001C0E  0101               	movlb	1	; () banked
 13548  001C10  0E00               	movlw	low(_FromMainLow_MQ)
 13549  001C12  0100               	movlb	0	; () banked
 13550  001C14  6F80               	movwf	((?i2_recv_msg))&0ffh
 13551  001C16  C08C  F082         	movff	(FromMainLow_recvmsg@maxlength),0+(?i2_recv_msg+02h)
 13552  001C1A  C08D  F083         	movff	(FromMainLow_recvmsg@msgtype),0+(?i2_recv_msg+03h)
 13553  001C1E  C08E  F084         	movff	(FromMainLow_recvmsg@msgtype+1),1+(?i2_recv_msg+03h)
 13554  001C22  C08F  F085         	movff	(FromMainLow_recvmsg@data),0+(?i2_recv_msg+05h)
 13555  001C26  C090  F086         	movff	(FromMainLow_recvmsg@data+1),1+(?i2_recv_msg+05h)
 13556  001C2A  0100               	movlb	0	; () banked
 13557  001C2C  ECA2  F005         	call	i2_recv_msg	;wreg free
 13558  001C30  D000               	goto	i2l5504
 13559                           	
 13560  001C32                     i2l19231:
 13561                           	line	166
 13562                           	
 13563  001C32                     i2l5504:
 13564  001C32  0012               	return
 13565                           	opt stack 0
 13566                           GLOBAL	__end_of_FromMainLow_recvmsg
 13567  001C34                     	__end_of_FromMainLow_recvmsg:
 13568                           	signat	_FromMainLow_recvmsg,12409
 13569                           	global	_start_i2c_slave_reply
 13570                           
 13571 ;; *************** function _start_i2c_slave_reply *****************
 13572 ;; Defined at:
 13573 ;;		line 121 in file "../src/my_i2c.c"
 13574 ;; Parameters:    Size  Location     Type
 13575 ;;  length          1   51[COMRAM] unsigned char 
 13576 ;;  msg             2   52[COMRAM] PTR unsigned char 
 13577 ;;		 -> i2c_slave_int_handler@empty(4), i2c_slave_int_handler@data(10), 
 13578 ;; Auto vars:     Size  Location     Type
 13579 ;;		None
 13580 ;; Return value:  Size  Location     Type
 13581 ;;		None               void
 13582 ;; Registers used:
 13583 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13584 ;; Tracked objects:
 13585 ;;		On entry : 0/0
 13586 ;;		On exit  : 0/0
 13587 ;;		Unchanged: 0/0
 13588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13589 ;;      Params:         3       0       0       0       0
 13590 ;;      Locals:         0       0       0       0       0
 13591 ;;      Temps:          2       0       0       0       0
 13592 ;;      Totals:         5       0       0       0       0
 13593 ;;Total ram usage:        5 bytes
 13594 ;; Hardware stack levels used:    1
 13595 ;; This function calls:
 13596 ;;		Nothing
 13597 ;; This function is called by:
 13598 ;;		_i2c_slave_int_handler
 13599 ;; This function uses a non-reentrant model
 13600 ;;
 13601                           psect	text48,class=CODE,space=0,reloc=2
 13602                           global __ptext48
 13603  00105E                     __ptext48:
 13604                           psect	text48
 13605                           	file	"../src/my_i2c.c"
 13606                           	line	121
 13607                           	global	__size_of_start_i2c_slave_reply
 13608  0000                     	__size_of_start_i2c_slave_reply	equ	__end_of_start_i2c_slave_reply-_start_i2c_slave_rep
                                 ly
 13609                           	
 13610  00105E                     _start_i2c_slave_reply:
 13611                           	opt	stack 18
 13612                           	line	123
 13613                           	
 13614  00105E                     i2l18621:
 13615                           ;my_i2c.c: 123: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbufle
                                 n++) {
 13616  00105E  EE20 F019          	lfsr	2,019h
 13617  001062  5048               	movf	((c:_ic_ptr)),c,w
 13618  001064  26D9               	addwf	fsr2l
 13619  001066  5049               	movf	((c:_ic_ptr+1)),c,w
 13620  001068  22DA               	addwfc	fsr2h
 13621  00106A  0E00               	movlw	low(0)
 13622  00106C  6EDF               	movwf	indf2
 13623  00106E  D02E               	goto	i2l18627
 13624                           	
 13625  001070                     i2l7355:
 13626                           	line	124
 13627                           	
 13628  001070                     i2l18623:
 13629                           ;my_i2c.c: 124: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
 13630  001070  EE20 F019          	lfsr	2,019h
 13631  001074  5048               	movf	((c:_ic_ptr)),c,w
 13632  001076  26D9               	addwf	fsr2l
 13633  001078  5049               	movf	((c:_ic_ptr+1)),c,w
 13634  00107A  22DA               	addwfc	fsr2h
 13635  00107C  50DF               	movf	indf2,w
 13636  00107E  6E37               	movwf	(??_start_i2c_slave_reply+0+0)&0ffh,c
 13637  001080  5037               	movf	((??_start_i2c_slave_reply+0+0)),c,w
 13638  001082  0D01               	mullw	01h
 13639  001084  50F3               	movf	(prodl),c,w
 13640  001086  2435               	addwf	((c:start_i2c_slave_reply@msg)),c,w
 13641  001088  6ED9               	movwf	c:fsr2l
 13642  00108A  50F4               	movf	(prodh),c,w
 13643  00108C  2036               	addwfc	((c:start_i2c_slave_reply@msg+1)),c,w
 13644  00108E  6EDA               	movwf	1+c:fsr2l
 13645  001090  EE10 F019          	lfsr	1,019h
 13646  001094  5048               	movf	((c:_ic_ptr)),c,w
 13647  001096  26E1               	addwf	fsr1l
 13648  001098  5049               	movf	((c:_ic_ptr+1)),c,w
 13649  00109A  22E2               	addwfc	fsr1h
 13650  00109C  50E7               	movf	indf1,w
 13651  00109E  6E38               	movwf	(??_start_i2c_slave_reply+1+0)&0ffh,c
 13652  0010A0  5038               	movf	((??_start_i2c_slave_reply+1+0)),c,w
 13653  0010A2  0D01               	mullw	01h
 13654  0010A4  0E0F               	movlw	0Fh
 13655  0010A6  26F3               	addwf	(prodl),c
 13656  0010A8  0E00               	movlw	0
 13657  0010AA  22F4               	addwfc	(prodh),c
 13658  0010AC  50F3               	movf	(prodl),c,w
 13659  0010AE  2448               	addwf	((c:_ic_ptr)),c,w
 13660  0010B0  6EE1               	movwf	c:fsr1l
 13661  0010B2  50F4               	movf	(prodh),c,w
 13662  0010B4  2049               	addwfc	((c:_ic_ptr+1)),c,w
 13663  0010B6  6EE2               	movwf	1+c:fsr1l
 13664  0010B8  CFDF FFE7          	movff	indf2,indf1
 13665                           	line	123
 13666                           	
 13667  0010BC                     i2l18625:
 13668  0010BC  EE20 F019          	lfsr	2,019h
 13669  0010C0  5048               	movf	((c:_ic_ptr)),c,w
 13670  0010C2  26D9               	addwf	fsr2l
 13671  0010C4  5049               	movf	((c:_ic_ptr+1)),c,w
 13672  0010C6  22DA               	addwfc	fsr2h
 13673  0010C8  2ADF               	incf	indf2
 13674                           
 13675  0010CA  D000               	goto	i2l18627
 13676                           	
 13677  0010CC                     i2l7354:
 13678                           	
 13679  0010CC                     i2l18627:
 13680  0010CC  EE20 F019          	lfsr	2,019h
 13681  0010D0  5048               	movf	((c:_ic_ptr)),c,w
 13682  0010D2  26D9               	addwf	fsr2l
 13683  0010D4  5049               	movf	((c:_ic_ptr+1)),c,w
 13684  0010D6  22DA               	addwfc	fsr2h
 13685  0010D8  50DF               	movf	indf2,w
 13686  0010DA  6E37               	movwf	(??_start_i2c_slave_reply+0+0)&0ffh,c
 13687  0010DC  5034               	movf	((c:start_i2c_slave_reply@length)),c,w
 13688  0010DE  5C37               	subwf	((??_start_i2c_slave_reply+0+0)),c,w
 13689  0010E0  A0D8               	btfss	status,0
 13690  0010E2  D001               	goto	i2u143_41
 13691  0010E4  D001               	goto	i2u143_40
 13692  0010E6                     i2u143_41:
 13693  0010E6  D7C4               	goto	i2l18623
 13694  0010E8                     i2u143_40:
 13695  0010E8  D000               	goto	i2l18629
 13696                           	
 13697  0010EA                     i2l7356:
 13698                           	line	126
 13699                           	
 13700  0010EA                     i2l18629:
 13701                           ;my_i2c.c: 125: }
 13702                           ;my_i2c.c: 126: ic_ptr->outbuflen = length;
 13703  0010EA  EE20 F019          	lfsr	2,019h
 13704  0010EE  5048               	movf	((c:_ic_ptr)),c,w
 13705  0010F0  26D9               	addwf	fsr2l
 13706  0010F2  5049               	movf	((c:_ic_ptr+1)),c,w
 13707  0010F4  22DA               	addwfc	fsr2h
 13708  0010F6  C034  FFDF         	movff	(c:start_i2c_slave_reply@length),indf2
 13709                           
 13710                           	line	127
 13711                           ;my_i2c.c: 127: ic_ptr->outbufind = 1;
 13712  0010FA  EE20 F01A          	lfsr	2,01Ah
 13713  0010FE  5048               	movf	((c:_ic_ptr)),c,w
 13714  001100  26D9               	addwf	fsr2l
 13715  001102  5049               	movf	((c:_ic_ptr+1)),c,w
 13716  001104  22DA               	addwfc	fsr2h
 13717  001106  0E01               	movlw	low(01h)
 13718  001108  6EDF               	movwf	indf2
 13719                           	line	130
 13720                           ;my_i2c.c: 130: SSPBUF = ic_ptr->outbuffer[0];
 13721  00110A  EE20 F00F          	lfsr	2,0Fh
 13722  00110E  5048               	movf	((c:_ic_ptr)),c,w
 13723  001110  26D9               	addwf	fsr2l
 13724  001112  5049               	movf	((c:_ic_ptr+1)),c,w
 13725  001114  22DA               	addwfc	fsr2h
 13726  001116  50DF               	movf	indf2,w
 13727  001118  6EC9               	movwf	((c:4041)),c	;volatile
 13728                           	line	133
 13729                           	
 13730  00111A                     i2l18631:
 13731                           ;my_i2c.c: 133: SSPCON1bits.CKP = 1;
 13732  00111A  88C6               	bsf	((c:4038)),c,4	;volatile
 13733                           	line	135
 13734                           	
 13735  00111C                     i2l7357:
 13736  00111C  0012               	return
 13737                           	opt stack 0
 13738                           GLOBAL	__end_of_start_i2c_slave_reply
 13739  00111E                     	__end_of_start_i2c_slave_reply:
 13740                           	signat	_start_i2c_slave_reply,8312
 13741                           	global	_handle_start
 13742                           
 13743 ;; *************** function _handle_start *****************
 13744 ;; Defined at:
 13745 ;;		line 139 in file "../src/my_i2c.c"
 13746 ;; Parameters:    Size  Location     Type
 13747 ;;  data_read       1   51[COMRAM] unsigned char 
 13748 ;; Auto vars:     Size  Location     Type
 13749 ;;		None
 13750 ;; Return value:  Size  Location     Type
 13751 ;;		None               void
 13752 ;; Registers used:
 13753 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13754 ;; Tracked objects:
 13755 ;;		On entry : 0/0
 13756 ;;		On exit  : 0/0
 13757 ;;		Unchanged: 0/0
 13758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13759 ;;      Params:         1       0       0       0       0
 13760 ;;      Locals:         0       0       0       0       0
 13761 ;;      Temps:          0       0       0       0       0
 13762 ;;      Totals:         1       0       0       0       0
 13763 ;;Total ram usage:        1 bytes
 13764 ;; Hardware stack levels used:    1
 13765 ;; This function calls:
 13766 ;;		Nothing
 13767 ;; This function is called by:
 13768 ;;		_i2c_slave_int_handler
 13769 ;; This function uses a non-reentrant model
 13770 ;;
 13771                           psect	text49,class=CODE,space=0,reloc=2
 13772                           global __ptext49
 13773  0013EA                     __ptext49:
 13774                           psect	text49
 13775                           	file	"../src/my_i2c.c"
 13776                           	line	139
 13777                           	global	__size_of_handle_start
 13778  0000                     	__size_of_handle_start	equ	__end_of_handle_start-_handle_start
 13779                           	
 13780  0013EA                     _handle_start:
 13781                           	opt	stack 18
 13782                           	line	140
 13783                           	
 13784  0013EA                     i2l18633:
 13785                           ;my_i2c.c: 140: ic_ptr->event_count = 1;
 13786  0013EA  EE20 F00B          	lfsr	2,0Bh
 13787  0013EE  5048               	movf	((c:_ic_ptr)),c,w
 13788  0013F0  26D9               	addwf	fsr2l
 13789  0013F2  5049               	movf	((c:_ic_ptr+1)),c,w
 13790  0013F4  22DA               	addwfc	fsr2h
 13791  0013F6  0E01               	movlw	low(01h)
 13792  0013F8  6EDF               	movwf	indf2
 13793                           	line	141
 13794                           ;my_i2c.c: 141: ic_ptr->buflen = 0;
 13795  0013FA  EE20 F00A          	lfsr	2,0Ah
 13796  0013FE  5048               	movf	((c:_ic_ptr)),c,w
 13797  001400  26D9               	addwf	fsr2l
 13798  001402  5049               	movf	((c:_ic_ptr+1)),c,w
 13799  001404  22DA               	addwfc	fsr2h
 13800  001406  0E00               	movlw	low(0)
 13801  001408  6EDF               	movwf	indf2
 13802                           	line	143
 13803                           	
 13804  00140A                     i2l18635:
 13805                           ;my_i2c.c: 143: if (data_read) {
 13806  00140A  5034               	movf	((c:handle_start@data_read)),c,w
 13807  00140C  B4D8               	btfsc	status,2
 13808  00140E  D001               	goto	i2u144_41
 13809  001410  D001               	goto	i2u144_40
 13810  001412                     i2u144_41:
 13811  001412  D034               	goto	i2l18645
 13812  001414                     i2u144_40:
 13813                           	line	144
 13814                           	
 13815  001414                     i2l18637:
 13816                           ;my_i2c.c: 144: if (SSPSTATbits.D_A == 1) {
 13817                           	
 13818  001414  AAC7               	btfss	((c:4039)),c,5	;volatile
 13819  001416  D001               	goto	i2u145_41
 13820  001418  D001               	goto	i2u145_40
 13821  00141A                     i2u145_41:
 13822  00141A  D018               	goto	i2l7361
 13823  00141C                     i2u145_40:
 13824                           	line	147
 13825                           	
 13826  00141C                     i2l18639:
 13827                           ;my_i2c.c: 147: ic_ptr->status = 0x5;
 13828  00141C  EE20 F00C          	lfsr	2,0Ch
 13829  001420  5048               	movf	((c:_ic_ptr)),c,w
 13830  001422  26D9               	addwf	fsr2l
 13831  001424  5049               	movf	((c:_ic_ptr+1)),c,w
 13832  001426  22DA               	addwfc	fsr2h
 13833  001428  0E05               	movlw	low(05h)
 13834  00142A  6EDF               	movwf	indf2
 13835                           	line	148
 13836                           ;my_i2c.c: 148: ic_ptr->error_count++;
 13837  00142C  EE20 F00E          	lfsr	2,0Eh
 13838  001430  5048               	movf	((c:_ic_ptr)),c,w
 13839  001432  26D9               	addwf	fsr2l
 13840  001434  5049               	movf	((c:_ic_ptr+1)),c,w
 13841  001436  22DA               	addwfc	fsr2h
 13842  001438  2ADF               	incf	indf2
 13843                           
 13844                           	line	149
 13845                           ;my_i2c.c: 149: ic_ptr->error_code = 0x5;
 13846  00143A  EE20 F00D          	lfsr	2,0Dh
 13847  00143E  5048               	movf	((c:_ic_ptr)),c,w
 13848  001440  26D9               	addwf	fsr2l
 13849  001442  5049               	movf	((c:_ic_ptr+1)),c,w
 13850  001444  22DA               	addwfc	fsr2h
 13851  001446  0E05               	movlw	low(05h)
 13852  001448  6EDF               	movwf	indf2
 13853                           	line	150
 13854                           ;my_i2c.c: 150: } else {
 13855  00144A  D021               	goto	i2l7366
 13856                           	
 13857  00144C                     i2l7361:
 13858                           	line	151
 13859                           ;my_i2c.c: 151: if (SSPSTATbits.R_W == 1) {
 13860                           	
 13861  00144C  A4C7               	btfss	((c:4039)),c,2	;volatile
 13862  00144E  D001               	goto	i2u146_41
 13863  001450  D001               	goto	i2u146_40
 13864  001452                     i2u146_41:
 13865  001452  D009               	goto	i2l18643
 13866  001454                     i2u146_40:
 13867                           	line	152
 13868                           	
 13869  001454                     i2l18641:
 13870                           ;my_i2c.c: 152: ic_ptr->status = 0x8;
 13871  001454  EE20 F00C          	lfsr	2,0Ch
 13872  001458  5048               	movf	((c:_ic_ptr)),c,w
 13873  00145A  26D9               	addwf	fsr2l
 13874  00145C  5049               	movf	((c:_ic_ptr+1)),c,w
 13875  00145E  22DA               	addwfc	fsr2h
 13876  001460  0E08               	movlw	low(08h)
 13877  001462  6EDF               	movwf	indf2
 13878                           	line	153
 13879                           ;my_i2c.c: 153: } else {
 13880  001464  D014               	goto	i2l7366
 13881                           	
 13882  001466                     i2l7363:
 13883                           	line	154
 13884                           	
 13885  001466                     i2l18643:
 13886                           ;my_i2c.c: 154: ic_ptr->status = 0x7;
 13887  001466  EE20 F00C          	lfsr	2,0Ch
 13888  00146A  5048               	movf	((c:_ic_ptr)),c,w
 13889  00146C  26D9               	addwf	fsr2l
 13890  00146E  5049               	movf	((c:_ic_ptr+1)),c,w
 13891  001470  22DA               	addwfc	fsr2h
 13892  001472  0E07               	movlw	low(07h)
 13893  001474  6EDF               	movwf	indf2
 13894  001476  D00B               	goto	i2l7366
 13895                           	line	155
 13896                           	
 13897  001478                     i2l7364:
 13898  001478  D00A               	goto	i2l7366
 13899                           	line	156
 13900                           	
 13901  00147A                     i2l7362:
 13902                           	line	157
 13903                           ;my_i2c.c: 155: }
 13904                           ;my_i2c.c: 156: }
 13905                           ;my_i2c.c: 157: } else {
 13906  00147A  D009               	goto	i2l7366
 13907                           	
 13908  00147C                     i2l7360:
 13909                           	line	158
 13910                           	
 13911  00147C                     i2l18645:
 13912                           ;my_i2c.c: 158: ic_ptr->status = 0x6;
 13913  00147C  EE20 F00C          	lfsr	2,0Ch
 13914  001480  5048               	movf	((c:_ic_ptr)),c,w
 13915  001482  26D9               	addwf	fsr2l
 13916  001484  5049               	movf	((c:_ic_ptr+1)),c,w
 13917  001486  22DA               	addwfc	fsr2h
 13918  001488  0E06               	movlw	low(06h)
 13919  00148A  6EDF               	movwf	indf2
 13920  00148C  D000               	goto	i2l7366
 13921                           	line	159
 13922                           	
 13923  00148E                     i2l7365:
 13924                           	line	160
 13925                           	
 13926  00148E                     i2l7366:
 13927  00148E  0012               	return
 13928                           	opt stack 0
 13929                           GLOBAL	__end_of_handle_start
 13930  001490                     	__end_of_handle_start:
 13931                           	signat	_handle_start,4216
 13932                           	global	_i2c_master_int_handler
 13933                           
 13934 ;; *************** function _i2c_master_int_handler *****************
 13935 ;; Defined at:
 13936 ;;		line 184 in file "../src/my_i2c.c"
 13937 ;; Parameters:    Size  Location     Type
 13938 ;;		None
 13939 ;; Auto vars:     Size  Location     Type
 13940 ;;		None
 13941 ;; Return value:  Size  Location     Type
 13942 ;;		None               void
 13943 ;; Registers used:
 13944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13945 ;; Tracked objects:
 13946 ;;		On entry : 0/0
 13947 ;;		On exit  : 0/0
 13948 ;;		Unchanged: 0/0
 13949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13950 ;;      Params:         0       0       0       0       0
 13951 ;;      Locals:         0       0       0       0       0
 13952 ;;      Temps:          1       0       0       0       0
 13953 ;;      Totals:         1       0       0       0       0
 13954 ;;Total ram usage:        1 bytes
 13955 ;; Hardware stack levels used:    1
 13956 ;; This function calls:
 13957 ;;		Nothing
 13958 ;; This function is called by:
 13959 ;;		_i2c_int_handler
 13960 ;; This function uses a non-reentrant model
 13961 ;;
 13962                           psect	text50,class=CODE,space=0,reloc=2
 13963                           global __ptext50
 13964  000C76                     __ptext50:
 13965                           psect	text50
 13966                           	file	"../src/my_i2c.c"
 13967                           	line	184
 13968                           	global	__size_of_i2c_master_int_handler
 13969  0000                     	__size_of_i2c_master_int_handler	equ	__end_of_i2c_master_int_handler-_i2c_master_int_ha
                                 ndler
 13970                           	
 13971  000C76                     _i2c_master_int_handler:
 13972                           	opt	stack 19
 13973                           	line	186
 13974                           	
 13975  000C76                     i2l18795:
 13976                           ;my_i2c.c: 186: switch(ic_ptr->status){
 13977  000C76  D077               	goto	i2l18813
 13978                           	line	187
 13979                           ;my_i2c.c: 187: case 0x6:{
 13980                           	
 13981  000C78                     i2l7378:
 13982                           	line	188
 13983                           	
 13984  000C78                     i2l18797:
 13985                           ;my_i2c.c: 188: SSP1BUF = (0xFE & ic_ptr->slave_addr);
 13986  000C78  EE20 F01B          	lfsr	2,01Bh
 13987  000C7C  5048               	movf	((c:_ic_ptr)),c,w
 13988  000C7E  26D9               	addwf	fsr2l
 13989  000C80  5049               	movf	((c:_ic_ptr+1)),c,w
 13990  000C82  22DA               	addwfc	fsr2h
 13991  000C84  50DF               	movf	indf2,w
 13992  000C86  0BFE               	andlw	low(0FEh)
 13993  000C88  6EC9               	movwf	((c:4041)),c	;volatile
 13994                           	line	189
 13995                           ;my_i2c.c: 189: ic_ptr->status = 0x9;
 13996  000C8A  EE20 F00C          	lfsr	2,0Ch
 13997  000C8E  5048               	movf	((c:_ic_ptr)),c,w
 13998  000C90  26D9               	addwf	fsr2l
 13999  000C92  5049               	movf	((c:_ic_ptr+1)),c,w
 14000  000C94  22DA               	addwfc	fsr2h
 14001  000C96  0E09               	movlw	low(09h)
 14002  000C98  6EDF               	movwf	indf2
 14003                           	line	190
 14004                           ;my_i2c.c: 190: break;
 14005  000C9A  D076               	goto	i2l7386
 14006                           	line	192
 14007                           ;my_i2c.c: 191: }
 14008                           ;my_i2c.c: 192: case 0x9:{
 14009                           	
 14010  000C9C                     i2l7380:
 14011                           	line	193
 14012                           ;my_i2c.c: 193: if(SSP1CON2bits.ACKSTAT == 0){
 14013                           	
 14014  000C9C  BCC5               	btfsc	((c:4037)),c,6	;volatile
 14015  000C9E  D001               	goto	i2u174_41
 14016  000CA0  D001               	goto	i2u174_40
 14017  000CA2                     i2u174_41:
 14018  000CA2  D044               	goto	i2l18807
 14019  000CA4                     i2u174_40:
 14020                           	line	194
 14021                           	
 14022  000CA4                     i2l18799:
 14023                           ;my_i2c.c: 194: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
 14024  000CA4  EE20 F01A          	lfsr	2,01Ah
 14025  000CA8  5048               	movf	((c:_ic_ptr)),c,w
 14026  000CAA  26D9               	addwf	fsr2l
 14027  000CAC  5049               	movf	((c:_ic_ptr+1)),c,w
 14028  000CAE  22DA               	addwfc	fsr2h
 14029  000CB0  50DF               	movf	indf2,w
 14030  000CB2  6E34               	movwf	(??_i2c_master_int_handler+0+0)&0ffh,c
 14031  000CB4  EE20 F019          	lfsr	2,019h
 14032  000CB8  5048               	movf	((c:_ic_ptr)),c,w
 14033  000CBA  26D9               	addwf	fsr2l
 14034  000CBC  5049               	movf	((c:_ic_ptr+1)),c,w
 14035  000CBE  22DA               	addwfc	fsr2h
 14036  000CC0  50DF               	movf	indf2,w
 14037  000CC2  5C34               	subwf	((??_i2c_master_int_handler+0+0)),c,w
 14038  000CC4  B0D8               	btfsc	status,0
 14039  000CC6  D001               	goto	i2u175_41
 14040  000CC8  D001               	goto	i2u175_40
 14041  000CCA                     i2u175_41:
 14042  000CCA  D01E               	goto	i2l18805
 14043  000CCC                     i2u175_40:
 14044                           	line	195
 14045                           	
 14046  000CCC                     i2l18801:
 14047                           ;my_i2c.c: 195: SSP1BUF = ic_ptr->outbuffer[ic_ptr->outbufind];
 14048  000CCC  EE20 F01A          	lfsr	2,01Ah
 14049  000CD0  5048               	movf	((c:_ic_ptr)),c,w
 14050  000CD2  26D9               	addwf	fsr2l
 14051  000CD4  5049               	movf	((c:_ic_ptr+1)),c,w
 14052  000CD6  22DA               	addwfc	fsr2h
 14053  000CD8  50DF               	movf	indf2,w
 14054  000CDA  6E34               	movwf	(??_i2c_master_int_handler+0+0)&0ffh,c
 14055  000CDC  5034               	movf	((??_i2c_master_int_handler+0+0)),c,w
 14056  000CDE  0D01               	mullw	01h
 14057  000CE0  0E0F               	movlw	0Fh
 14058  000CE2  26F3               	addwf	(prodl),c
 14059  000CE4  0E00               	movlw	0
 14060  000CE6  22F4               	addwfc	(prodh),c
 14061  000CE8  50F3               	movf	(prodl),c,w
 14062  000CEA  2448               	addwf	((c:_ic_ptr)),c,w
 14063  000CEC  6ED9               	movwf	c:fsr2l
 14064  000CEE  50F4               	movf	(prodh),c,w
 14065  000CF0  2049               	addwfc	((c:_ic_ptr+1)),c,w
 14066  000CF2  6EDA               	movwf	1+c:fsr2l
 14067  000CF4  50DF               	movf	indf2,w
 14068  000CF6  6EC9               	movwf	((c:4041)),c	;volatile
 14069                           	line	196
 14070                           	
 14071  000CF8                     i2l18803:
 14072                           ;my_i2c.c: 196: ic_ptr->outbufind++;
 14073  000CF8  EE20 F01A          	lfsr	2,01Ah
 14074  000CFC  5048               	movf	((c:_ic_ptr)),c,w
 14075  000CFE  26D9               	addwf	fsr2l
 14076  000D00  5049               	movf	((c:_ic_ptr+1)),c,w
 14077  000D02  22DA               	addwfc	fsr2h
 14078  000D04  2ADF               	incf	indf2
 14079                           
 14080                           	line	197
 14081                           ;my_i2c.c: 197: } else {
 14082  000D06  D040               	goto	i2l7386
 14083                           	
 14084  000D08                     i2l7382:
 14085                           	line	199
 14086                           	
 14087  000D08                     i2l18805:
 14088                           ;my_i2c.c: 199: ic_ptr->status = 0x10;
 14089  000D08  EE20 F00C          	lfsr	2,0Ch
 14090  000D0C  5048               	movf	((c:_ic_ptr)),c,w
 14091  000D0E  26D9               	addwf	fsr2l
 14092  000D10  5049               	movf	((c:_ic_ptr+1)),c,w
 14093  000D12  22DA               	addwfc	fsr2h
 14094  000D14  0E10               	movlw	low(010h)
 14095  000D16  6EDF               	movwf	indf2
 14096                           	line	200
 14097                           ;my_i2c.c: 200: ic_ptr->outbufind = 0;
 14098  000D18  EE20 F01A          	lfsr	2,01Ah
 14099  000D1C  5048               	movf	((c:_ic_ptr)),c,w
 14100  000D1E  26D9               	addwf	fsr2l
 14101  000D20  5049               	movf	((c:_ic_ptr+1)),c,w
 14102  000D22  22DA               	addwfc	fsr2h
 14103  000D24  0E00               	movlw	low(0)
 14104  000D26  6EDF               	movwf	indf2
 14105  000D28  D02F               	goto	i2l7386
 14106                           	line	201
 14107                           	
 14108  000D2A                     i2l7383:
 14109                           	line	202
 14110                           ;my_i2c.c: 201: }
 14111                           ;my_i2c.c: 202: }else{
 14112  000D2A  D02E               	goto	i2l7386
 14113                           	
 14114  000D2C                     i2l7381:
 14115                           	line	203
 14116                           	
 14117  000D2C                     i2l18807:
 14118                           ;my_i2c.c: 203: ic_ptr->status = 0x5;
 14119  000D2C  EE20 F00C          	lfsr	2,0Ch
 14120  000D30  5048               	movf	((c:_ic_ptr)),c,w
 14121  000D32  26D9               	addwf	fsr2l
 14122  000D34  5049               	movf	((c:_ic_ptr+1)),c,w
 14123  000D36  22DA               	addwfc	fsr2h
 14124  000D38  0E05               	movlw	low(05h)
 14125  000D3A  6EDF               	movwf	indf2
 14126                           	line	204
 14127                           ;my_i2c.c: 204: ic_ptr->outbufind = 0;
 14128  000D3C  EE20 F01A          	lfsr	2,01Ah
 14129  000D40  5048               	movf	((c:_ic_ptr)),c,w
 14130  000D42  26D9               	addwf	fsr2l
 14131  000D44  5049               	movf	((c:_ic_ptr+1)),c,w
 14132  000D46  22DA               	addwfc	fsr2h
 14133  000D48  0E00               	movlw	low(0)
 14134  000D4A  6EDF               	movwf	indf2
 14135  000D4C  D01D               	goto	i2l7386
 14136                           	line	205
 14137                           	
 14138  000D4E                     i2l7384:
 14139                           	line	206
 14140                           ;my_i2c.c: 205: }
 14141                           ;my_i2c.c: 206: break;
 14142  000D4E  D01C               	goto	i2l7386
 14143                           	line	208
 14144                           ;my_i2c.c: 207: }
 14145                           ;my_i2c.c: 208: case 0x10:{
 14146                           	
 14147  000D50                     i2l7385:
 14148                           	line	209
 14149                           ;my_i2c.c: 209: SSP1CON2bits.PEN = 1;
 14150  000D50  84C5               	bsf	((c:4037)),c,2	;volatile
 14151                           	line	210
 14152                           	
 14153  000D52                     i2l18809:
 14154                           ;my_i2c.c: 210: ic_ptr->status = 0x5;
 14155  000D52  EE20 F00C          	lfsr	2,0Ch
 14156  000D56  5048               	movf	((c:_ic_ptr)),c,w
 14157  000D58  26D9               	addwf	fsr2l
 14158  000D5A  5049               	movf	((c:_ic_ptr+1)),c,w
 14159  000D5C  22DA               	addwfc	fsr2h
 14160  000D5E  0E05               	movlw	low(05h)
 14161  000D60  6EDF               	movwf	indf2
 14162                           	line	211
 14163                           ;my_i2c.c: 211: break;
 14164  000D62  D012               	goto	i2l7386
 14165                           	line	213
 14166                           	
 14167  000D64                     i2l18811:
 14168                           ;my_i2c.c: 212: }
 14169                           ;my_i2c.c: 213: }
 14170  000D64  D011               	goto	i2l7386
 14171                           	line	186
 14172                           	
 14173  000D66                     i2l7377:
 14174                           	
 14175  000D66                     i2l18813:
 14176  000D66  EE20 F00C          	lfsr	2,0Ch
 14177  000D6A  5048               	movf	((c:_ic_ptr)),c,w
 14178  000D6C  26D9               	addwf	fsr2l
 14179  000D6E  5049               	movf	((c:_ic_ptr+1)),c,w
 14180  000D70  22DA               	addwfc	fsr2h
 14181  000D72  50DF               	movf	indf2,w
 14182                           	; Switch size 1, requested type "space"
 14183                           ; Number of cases is 3, Range of values is 6 to 16
 14184                           ; switch strategies available:
 14185                           ; Name         Instructions Cycles
 14186                           ; simple_byte           10     6 (average)
 14187                           ;	Chosen strategy is simple_byte
 14188                           
 14189  000D74  0A06               	xorlw	6^0	; case 6
 14190  000D76  B4D8               	skipnz
 14191  000D78  D77F               	goto	i2l18797
 14192  000D7A  0A0F               	xorlw	9^6	; case 9
 14193  000D7C  B4D8               	skipnz
 14194  000D7E  D78E               	goto	i2l7380
 14195  000D80  0A19               	xorlw	16^9	; case 16
 14196  000D82  B4D8               	skipnz
 14197  000D84  D7E5               	goto	i2l7385
 14198  000D86  D000               	goto	i2l7386
 14199                           
 14200                           	line	213
 14201                           	
 14202  000D88                     i2l7379:
 14203                           	line	244
 14204                           	
 14205  000D88                     i2l7386:
 14206  000D88  0012               	return
 14207                           	opt stack 0
 14208                           GLOBAL	__end_of_i2c_master_int_handler
 14209  000D8A                     	__end_of_i2c_master_int_handler:
 14210                           	signat	_i2c_master_int_handler,88
 14211                           	global	_WriteTimer0
 14212                           
 14213 ;; *************** function _WriteTimer0 *****************
 14214 ;; Defined at:
 14215 ;;		line 17 in file "plib/Timers/t0write.c"
 14216 ;; Parameters:    Size  Location     Type
 14217 ;;  timer0          2   51[COMRAM] unsigned int 
 14218 ;; Auto vars:     Size  Location     Type
 14219 ;;  timer           2   53[COMRAM] struct Timers
 14220 ;; Return value:  Size  Location     Type
 14221 ;;		None               void
 14222 ;; Registers used:
 14223 ;;		None
 14224 ;; Tracked objects:
 14225 ;;		On entry : 0/0
 14226 ;;		On exit  : 0/0
 14227 ;;		Unchanged: 0/0
 14228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14229 ;;      Params:         2       0       0       0       0
 14230 ;;      Locals:         2       0       0       0       0
 14231 ;;      Temps:          0       0       0       0       0
 14232 ;;      Totals:         4       0       0       0       0
 14233 ;;Total ram usage:        4 bytes
 14234 ;; Hardware stack levels used:    1
 14235 ;; This function calls:
 14236 ;;		Nothing
 14237 ;; This function is called by:
 14238 ;;		_timer0_int_handler
 14239 ;; This function uses a non-reentrant model
 14240 ;;
 14241                           psect	text51,class=CODE,space=0,reloc=2
 14242                           global __ptext51
 14243  001DA4                     __ptext51:
 14244                           psect	text51
 14245                           	file	"plib/Timers/t0write.c"
 14246                           	line	17
 14247                           	global	__size_of_WriteTimer0
 14248  0000                     	__size_of_WriteTimer0	equ	__end_of_WriteTimer0-_WriteTimer0
 14249                           	
 14250  001DA4                     _WriteTimer0:
 14251                           	opt	stack 19
 14252                           	line	20
 14253                           	
 14254  001DA4                     i2l18847:
 14255  001DA4  C034  F036         	movff	(c:WriteTimer0@timer0),(c:WriteTimer0@timer)
 14256  001DA8  C035  F037         	movff	(c:WriteTimer0@timer0+1),(c:WriteTimer0@timer+1)
 14257                           	line	22
 14258  001DAC  C037  FFD7         	movff	0+((c:WriteTimer0@timer)+01h),(c:4055)	;volatile
 14259                           	line	23
 14260  001DB0  C036  FFD6         	movff	(c:WriteTimer0@timer),(c:4054)	;volatile
 14261                           	line	24
 14262                           	
 14263  001DB4                     i2l16466:
 14264  001DB4  0012               	return
 14265                           	opt stack 0
 14266                           GLOBAL	__end_of_WriteTimer0
 14267  001DB6                     	__end_of_WriteTimer0:
 14268                           	signat	_WriteTimer0,4216
 14269                           	global	i2_in_low_int
 14270                           
 14271 ;; *************** function i2_in_low_int *****************
 14272 ;; Defined at:
 14273 ;;		line 30 in file "../src/interrupts.c"
 14274 ;; Parameters:    Size  Location     Type
 14275 ;;		None
 14276 ;; Auto vars:     Size  Location     Type
 14277 ;;		None
 14278 ;; Return value:  Size  Location     Type
 14279 ;;                  2   53[COMRAM] int 
 14280 ;; Registers used:
 14281 ;;		wreg, status,2, status,0, cstack
 14282 ;; Tracked objects:
 14283 ;;		On entry : 0/0
 14284 ;;		On exit  : 0/0
 14285 ;;		Unchanged: 0/0
 14286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14287 ;;      Params:         2       0       0       0       0
 14288 ;;      Locals:         0       0       0       0       0
 14289 ;;      Temps:          0       0       0       0       0
 14290 ;;      Totals:         2       0       0       0       0
 14291 ;;Total ram usage:        2 bytes
 14292 ;; Hardware stack levels used:    1
 14293 ;; Hardware stack levels required when called:    1
 14294 ;; This function calls:
 14295 ;;		i2_in_high_int
 14296 ;; This function is called by:
 14297 ;;		_SleepIfOkay
 14298 ;; This function uses a non-reentrant model
 14299 ;;
 14300                           psect	text52,class=CODE,space=0,reloc=2
 14301                           global __ptext52
 14302  0019A0                     __ptext52:
 14303                           psect	text52
 14304                           	file	"../src/interrupts.c"
 14305                           	line	30
 14306                           	global	__size_ofi2_in_low_int
 14307  0000                     	__size_ofi2_in_low_int	equ	__end_ofi2_in_low_int-i2_in_low_int
 14308                           	
 14309  0019A0                     i2_in_low_int:
 14310                           	opt	stack 18
 14311                           	line	31
 14312                           	
 14313  0019A0                     i2l18853:
 14314                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
 14315                           	
 14316  0019A0  ACF2               	btfss	((c:4082)),c,6	;volatile
 14317  0019A2  D001               	goto	i2u181_41
 14318  0019A4  D001               	goto	i2u181_40
 14319  0019A6                     i2u181_41:
 14320  0019A6  D007               	goto	i2l18861
 14321  0019A8                     i2u181_40:
 14322                           	line	32
 14323                           	
 14324  0019A8                     i2l18855:
 14325                           ;interrupts.c: 32: return (0);
 14326  0019A8  0E00               	movlw	high(0)
 14327  0019AA  6E37               	movwf	((c:?i2_in_low_int+1)),c
 14328  0019AC  0E00               	movlw	low(0)
 14329  0019AE  6E36               	movwf	((c:?i2_in_low_int)),c
 14330  0019B0  D018               	goto	i2l1809
 14331                           	
 14332  0019B2                     i2l18857:
 14333  0019B2  D017               	goto	i2l1809
 14334                           	line	33
 14335                           	
 14336  0019B4                     i2l18859:
 14337                           ;interrupts.c: 33: } else if (in_high_int()) {
 14338  0019B4  D016               	goto	i2l1809
 14339                           	
 14340  0019B6                     i2l1808:
 14341                           	
 14342  0019B6                     i2l18861:
 14343  0019B6  ECDB  F00E         	call	i2_in_high_int	;wreg free
 14344  0019BA  5035               	movf	(1+?i2_in_high_int),c,w
 14345  0019BC  1034               	iorwf (0+?i2_in_high_int),c,w
 14346                           
 14347  0019BE  B4D8               	btfsc	status,2
 14348  0019C0  D001               	goto	i2u182_41
 14349  0019C2  D001               	goto	i2u182_40
 14350  0019C4                     i2u182_41:
 14351  0019C4  D007               	goto	i2l18869
 14352  0019C6                     i2u182_40:
 14353                           	line	34
 14354                           	
 14355  0019C6                     i2l18863:
 14356                           ;interrupts.c: 34: return (0);
 14357  0019C6  0E00               	movlw	high(0)
 14358  0019C8  6E37               	movwf	((c:?i2_in_low_int+1)),c
 14359  0019CA  0E00               	movlw	low(0)
 14360  0019CC  6E36               	movwf	((c:?i2_in_low_int)),c
 14361  0019CE  D009               	goto	i2l1809
 14362                           	
 14363  0019D0                     i2l18865:
 14364  0019D0  D008               	goto	i2l1809
 14365                           	line	35
 14366                           	
 14367  0019D2                     i2l18867:
 14368                           ;interrupts.c: 35: } else {
 14369  0019D2  D007               	goto	i2l1809
 14370                           	
 14371  0019D4                     i2l1811:
 14372                           	line	36
 14373                           	
 14374  0019D4                     i2l18869:
 14375                           ;interrupts.c: 36: return (1);
 14376  0019D4  0E00               	movlw	high(01h)
 14377  0019D6  6E37               	movwf	((c:?i2_in_low_int+1)),c
 14378  0019D8  0E01               	movlw	low(01h)
 14379  0019DA  6E36               	movwf	((c:?i2_in_low_int)),c
 14380  0019DC  D002               	goto	i2l1809
 14381                           	
 14382  0019DE                     i2l18871:
 14383  0019DE  D001               	goto	i2l1809
 14384                           	line	37
 14385                           	
 14386  0019E0                     i2l1812:
 14387  0019E0  D000               	goto	i2l1809
 14388                           	
 14389  0019E2                     i2l1810:
 14390                           	line	38
 14391                           	
 14392  0019E2                     i2l1809:
 14393  0019E2  0012               	return
 14394                           	opt stack 0
 14395                           GLOBAL	__end_ofi2_in_low_int
 14396  0019E4                     	__end_ofi2_in_low_int:
 14397                           	signat	i2_in_low_int,90
 14398                           	global	i2_in_high_int
 14399                           
 14400 ;; *************** function i2_in_high_int *****************
 14401 ;; Defined at:
 14402 ;;		line 22 in file "../src/interrupts.c"
 14403 ;; Parameters:    Size  Location     Type
 14404 ;;		None
 14405 ;; Auto vars:     Size  Location     Type
 14406 ;;		None
 14407 ;; Return value:  Size  Location     Type
 14408 ;;                  2   51[COMRAM] int 
 14409 ;; Registers used:
 14410 ;;		wreg, status,2
 14411 ;; Tracked objects:
 14412 ;;		On entry : 0/0
 14413 ;;		On exit  : 0/0
 14414 ;;		Unchanged: 0/0
 14415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14416 ;;      Params:         2       0       0       0       0
 14417 ;;      Locals:         0       0       0       0       0
 14418 ;;      Temps:          0       0       0       0       0
 14419 ;;      Totals:         2       0       0       0       0
 14420 ;;Total ram usage:        2 bytes
 14421 ;; Hardware stack levels used:    1
 14422 ;; This function calls:
 14423 ;;		Nothing
 14424 ;; This function is called by:
 14425 ;;		_SleepIfOkay
 14426 ;;		i2_in_low_int
 14427 ;; This function uses a non-reentrant model
 14428 ;;
 14429                           psect	text53,class=CODE,space=0,reloc=2
 14430                           global __ptext53
 14431  001DB6                     __ptext53:
 14432                           psect	text53
 14433                           	file	"../src/interrupts.c"
 14434                           	line	22
 14435                           	global	__size_ofi2_in_high_int
 14436  0000                     	__size_ofi2_in_high_int	equ	__end_ofi2_in_high_int-i2_in_high_int
 14437                           	
 14438  001DB6                     i2_in_high_int:
 14439                           	opt	stack 19
 14440                           	line	23
 14441                           	
 14442  001DB6                     i2l18849:
 14443                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
 14444                           	
 14445  001DB6  0E00               	movlw	0
 14446  001DB8  AEF2               	btfss	((c:4082)),c,7	;volatile
 14447  001DBA  0E01               	movlw	1
 14448  001DBC  6E34               	movwf	((c:?i2_in_high_int)),c
 14449  001DBE  6A35               	clrf	((c:?i2_in_high_int+1)),c
 14450  001DC0  D000               	goto	i2l1802
 14451                           	
 14452  001DC2                     i2l18851:
 14453                           	line	24
 14454                           	
 14455  001DC2                     i2l1802:
 14456  001DC2  0012               	return
 14457                           	opt stack 0
 14458                           GLOBAL	__end_ofi2_in_high_int
 14459  001DC4                     	__end_ofi2_in_high_int:
 14460                           	signat	i2_in_high_int,90
 14461                           	global	i2_send_msg
 14462                           
 14463 ;; *************** function i2_send_msg *****************
 14464 ;; Defined at:
 14465 ;;		line 24 in file "../src/messages.c"
 14466 ;; Parameters:    Size  Location     Type
 14467 ;;  send_msg        2    0[BANK0 ] PTR struct __msg_queue
 14468 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 14469 ;;  send_msg        1    2[BANK0 ] unsigned char 
 14470 ;;  send_msg        1    3[BANK0 ] unsigned char 
 14471 ;;  send_msg        2    4[BANK0 ] PTR void 
 14472 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 14473 ;;		 -> i2c_slave_int_handler@error_buf(3), main@msgbuffer(11), main@uc(5), 
 14474 ;; Auto vars:     Size  Location     Type
 14475 ;;  send_msg        2    9[BANK0 ] PTR struct __msg
 14476 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 14477 ;;  send_msg        2    6[BANK0 ] unsigned int 
 14478 ;;  send_msg        1    8[BANK0 ] unsigned char 
 14479 ;; Return value:  Size  Location     Type
 14480 ;;                  1    wreg      char 
 14481 ;; Registers used:
 14482 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14483 ;; Tracked objects:
 14484 ;;		On entry : 0/0
 14485 ;;		On exit  : 0/0
 14486 ;;		Unchanged: 0/0
 14487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14488 ;;      Params:         0       6       0       0       0
 14489 ;;      Locals:         0       5       0       0       0
 14490 ;;      Temps:          1       0       0       0       0
 14491 ;;      Totals:         1      11       0       0       0
 14492 ;;Total ram usage:       12 bytes
 14493 ;; Hardware stack levels used:    1
 14494 ;; Hardware stack levels required when called:    1
 14495 ;; This function calls:
 14496 ;;		i2_memcpy
 14497 ;; This function is called by:
 14498 ;;		_ToMainHigh_sendmsg
 14499 ;; This function uses a non-reentrant model
 14500 ;;
 14501                           psect	text54,class=CODE,space=0,reloc=2
 14502                           global __ptext54
 14503  000E90                     __ptext54:
 14504                           psect	text54
 14505                           	file	"../src/messages.c"
 14506                           	global	__size_ofi2_send_msg
 14507  0000                     	__size_ofi2_send_msg	equ	__end_ofi2_send_msg-i2_send_msg
 14508                           	
 14509  000E90                     i2_send_msg:
 14510                           	opt	stack 17
 14511                           	line	28
 14512                           	
 14513  000E90                     i2l19389:
 14514                           ;messages.c: 25: unsigned char slot;
 14515                           ;messages.c: 27: msg *qmsg;
 14516                           ;messages.c: 28: size_t tlength = length;
 14517  000E90  0100               	movlb	0	; () banked
 14518  000E92  0100               	movlb	0	; () banked
 14519  000E94  C082  F086         	movff	(i2send_msg@length),(i2send_msg@tlength)
 14520  000E98  0100               	movlb	0	; () banked
 14521  000E9A  0100               	movlb	0	; () banked
 14522  000E9C  6B87               	clrf	((i2send_msg@tlength+1))&0ffh
 14523                           	line	38
 14524                           	
 14525  000E9E                     i2l19391:; BSR set to: 0
 14526                           
 14527                           ;messages.c: 38: slot = qptr->cur_write_ind;
 14528  000E9E  0100               	movlb	0	; () banked
 14529  000EA0  EE20 F034          	lfsr	2,034h
 14530  000EA4  0100               	movlb	0	; () banked
 14531  000EA6  5180               	movf	((i2send_msg@qptr))&0ffh,w
 14532  000EA8  26D9               	addwf	fsr2l
 14533  000EAA  0100               	movlb	0	; () banked
 14534  000EAC  5181               	movf	((i2send_msg@qptr+1))&0ffh,w
 14535  000EAE  22DA               	addwfc	fsr2h
 14536  000EB0  50DF               	movf	indf2,w
 14537  000EB2  0100               	movlb	0	; () banked
 14538  000EB4  0100               	movlb	0	; () banked
 14539  000EB6  6F88               	movwf	((i2send_msg@slot))&0ffh
 14540                           	line	39
 14541                           	
 14542  000EB8                     i2l19393:; BSR set to: 0
 14543                           
 14544                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
 14545  000EB8  0100               	movlb	0	; () banked
 14546  000EBA  0100               	movlb	0	; () banked
 14547  000EBC  5188               	movf	((i2send_msg@slot))&0ffh,w
 14548  000EBE  0D0D               	mullw	0Dh
 14549  000EC0  50F3               	movf	(prodl),c,w
 14550  000EC2  0100               	movlb	0	; () banked
 14551  000EC4  0100               	movlb	0	; () banked
 14552  000EC6  2580               	addwf	((i2send_msg@qptr))&0ffh,w
 14553  000EC8  0100               	movlb	0	; () banked
 14554                           	
 14555  000ECA  0100               	movlb	0	; () banked
 14556  000ECC  6F89               	movwf	((i2send_msg@qmsg))&0ffh
 14557  000ECE  50F4               	movf	(prodh),c,w
 14558  000ED0  0100               	movlb	0	; () banked
 14559  000ED2  0100               	movlb	0	; () banked
 14560  000ED4  2181               	addwfc	((i2send_msg@qptr+1))&0ffh,w
 14561  000ED6  0100               	movlb	0	; () banked
 14562  000ED8  6F8A               	movwf	1+((i2send_msg@qmsg))&0ffh
 14563                           	line	41
 14564                           	
 14565  000EDA                     i2l19395:; BSR set to: 0
 14566                           
 14567                           ;messages.c: 41: if (qmsg->full != 0) {
 14568  000EDA  C089  FFD9         	movff	(i2send_msg@qmsg),fsr2l
 14569  000EDE  C08A  FFDA         	movff	(i2send_msg@qmsg+1),fsr2h
 14570  000EE2  50DF               	movf	indf2,w
 14571  000EE4  B4D8               	btfsc	status,2
 14572  000EE6  D001               	goto	i2u232_41
 14573  000EE8  D001               	goto	i2u232_40
 14574  000EEA                     i2u232_41:
 14575  000EEA  D003               	goto	i2l19401
 14576  000EEC                     i2u232_40:
 14577                           	line	42
 14578                           	
 14579  000EEC                     i2l19397:; BSR set to: 0
 14580                           
 14581                           ;messages.c: 42: return (-1);
 14582  000EEC  0EFF               	movlw	(-1)&0ffh
 14583  000EEE  D04C               	goto	i2l5474
 14584                           	
 14585  000EF0                     i2l19399:; BSR set to: 0
 14586                           
 14587  000EF0  D04B               	goto	i2l5474
 14588                           	line	43
 14589                           	
 14590  000EF2                     i2l5473:; BSR set to: 0
 14591                           
 14592                           	line	46
 14593                           	
 14594  000EF2                     i2l19401:; BSR set to: 0
 14595                           
 14596                           ;messages.c: 43: }
 14597                           ;messages.c: 46: qmsg->length = length;
 14598  000EF2  0100               	movlb	0	; () banked
 14599  000EF4  EE20 F001          	lfsr	2,01h
 14600  000EF8  0100               	movlb	0	; () banked
 14601  000EFA  5189               	movf	((i2send_msg@qmsg))&0ffh,w
 14602  000EFC  26D9               	addwf	fsr2l
 14603  000EFE  0100               	movlb	0	; () banked
 14604  000F00  518A               	movf	((i2send_msg@qmsg+1))&0ffh,w
 14605  000F02  22DA               	addwfc	fsr2h
 14606  000F04  0100               	movlb	0	; () banked
 14607  000F06  C082  FFDF         	movff	(i2send_msg@length),indf2
 14608                           
 14609                           	line	47
 14610                           ;messages.c: 47: qmsg->msgtype = msgtype;
 14611  000F0A  0100               	movlb	0	; () banked
 14612  000F0C  EE20 F002          	lfsr	2,02h
 14613  000F10  0100               	movlb	0	; () banked
 14614  000F12  5189               	movf	((i2send_msg@qmsg))&0ffh,w
 14615  000F14  26D9               	addwf	fsr2l
 14616  000F16  0100               	movlb	0	; () banked
 14617  000F18  518A               	movf	((i2send_msg@qmsg+1))&0ffh,w
 14618  000F1A  22DA               	addwfc	fsr2h
 14619  000F1C  0100               	movlb	0	; () banked
 14620  000F1E  C083  FFDF         	movff	(i2send_msg@msgtype),indf2
 14621                           
 14622                           	line	55
 14623                           	
 14624  000F22                     i2l19403:; BSR set to: 0
 14625                           
 14626                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
 14627  000F22  0E03               	movlw	low(03h)
 14628  000F24  0100               	movlb	0	; () banked
 14629  000F26  0100               	movlb	0	; () banked
 14630  000F28  2589               	addwf	((i2send_msg@qmsg))&0ffh,w
 14631                           	
 14632  000F2A  6E34               	movwf	((c:?i2_memcpy)),c
 14633  000F2C  0E00               	movlw	high(03h)
 14634  000F2E  0100               	movlb	0	; () banked
 14635  000F30  0100               	movlb	0	; () banked
 14636  000F32  218A               	addwfc	((i2send_msg@qmsg+1))&0ffh,w
 14637  000F34  6E35               	movwf	1+((c:?i2_memcpy)),c
 14638  000F36  C084  F036         	movff	(i2send_msg@data),0+((c:?i2_memcpy)+02h)
 14639  000F3A  C085  F037         	movff	(i2send_msg@data+1),1+((c:?i2_memcpy)+02h)
 14640  000F3E  C086  F038         	movff	(i2send_msg@tlength),0+((c:?i2_memcpy)+04h)
 14641  000F42  C087  F039         	movff	(i2send_msg@tlength+1),1+((c:?i2_memcpy)+04h)
 14642  000F46  ECAC  F00C         	call	i2_memcpy	;wreg free
 14643                           	line	56
 14644                           	
 14645  000F4A                     i2l19405:
 14646                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
 14647  000F4A  0100               	movlb	0	; () banked
 14648  000F4C  EE20 F034          	lfsr	2,034h
 14649  000F50  0100               	movlb	0	; () banked
 14650  000F52  5180               	movf	((i2send_msg@qptr))&0ffh,w
 14651  000F54  26D9               	addwf	fsr2l
 14652  000F56  0100               	movlb	0	; () banked
 14653  000F58  5181               	movf	((i2send_msg@qptr+1))&0ffh,w
 14654  000F5A  22DA               	addwfc	fsr2h
 14655  000F5C  0100               	movlb	0	; () banked
 14656  000F5E  EE10 F034          	lfsr	1,034h
 14657  000F62  0100               	movlb	0	; () banked
 14658  000F64  5180               	movf	((i2send_msg@qptr))&0ffh,w
 14659  000F66  26E1               	addwf	fsr1l
 14660  000F68  0100               	movlb	0	; () banked
 14661  000F6A  5181               	movf	((i2send_msg@qptr+1))&0ffh,w
 14662  000F6C  22E2               	addwfc	fsr1h
 14663  000F6E  50E7               	movf	indf1,w
 14664  000F70  6E3E               	movwf	(??i2_send_msg+0+0)&0ffh,c
 14665  000F72  283E               	incf	((??i2_send_msg+0+0)),c,w
 14666  000F74  0B03               	andlw	low(03h)
 14667  000F76  6EDF               	movwf	indf2
 14668                           
 14669                           	line	59
 14670                           	
 14671  000F78                     i2l19407:; BSR set to: 0
 14672                           
 14673                           ;messages.c: 59: qmsg->full = 1;
 14674  000F78  C089  FFD9         	movff	(i2send_msg@qmsg),fsr2l
 14675  000F7C  C08A  FFDA         	movff	(i2send_msg@qmsg+1),fsr2h
 14676  000F80  0E01               	movlw	low(01h)
 14677  000F82  6EDF               	movwf	indf2
 14678                           	line	60
 14679                           	
 14680  000F84                     i2l19409:; BSR set to: 0
 14681                           
 14682                           ;messages.c: 60: return (1);
 14683  000F84  0E01               	movlw	(01h)&0ffh
 14684  000F86  D000               	goto	i2l5474
 14685                           	
 14686  000F88                     i2l19411:; BSR set to: 0
 14687                           
 14688                           	line	61
 14689                           	
 14690  000F88                     i2l5474:; BSR set to: 0
 14691                           
 14692  000F88  0012               	return
 14693                           	opt stack 0
 14694                           GLOBAL	__end_ofi2_send_msg
 14695  000F8A                     	__end_ofi2_send_msg:
 14696                           	signat	i2_send_msg,89
 14697                           	global	i2_recv_msg
 14698                           
 14699 ;; *************** function i2_recv_msg *****************
 14700 ;; Defined at:
 14701 ;;		line 63 in file "../src/messages.c"
 14702 ;; Parameters:    Size  Location     Type
 14703 ;;  recv_msg        2    0[BANK0 ] PTR struct __msg_queue
 14704 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 14705 ;;  recv_msg        1    2[BANK0 ] unsigned char 
 14706 ;;  recv_msg        2    3[BANK0 ] PTR unsigned char 
 14707 ;;		 -> RAM(1023), i2c_slave_int_handler@msgtype(1), main@msgtype(1), 
 14708 ;;  recv_msg        2    5[BANK0 ] PTR void 
 14709 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@data(10), main@msgbuffer(11), 
 14710 ;; Auto vars:     Size  Location     Type
 14711 ;;  recv_msg        2   10[BANK0 ] PTR struct __msg
 14712 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 14713 ;;  recv_msg        2    8[BANK0 ] unsigned int 
 14714 ;;  recv_msg        1    7[BANK0 ] unsigned char 
 14715 ;; Return value:  Size  Location     Type
 14716 ;;                  1    wreg      char 
 14717 ;; Registers used:
 14718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14719 ;; Tracked objects:
 14720 ;;		On entry : 0/0
 14721 ;;		On exit  : 0/0
 14722 ;;		Unchanged: 0/0
 14723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14724 ;;      Params:         0       7       0       0       0
 14725 ;;      Locals:         0       5       0       0       0
 14726 ;;      Temps:          2       0       0       0       0
 14727 ;;      Totals:         2      12       0       0       0
 14728 ;;Total ram usage:       14 bytes
 14729 ;; Hardware stack levels used:    1
 14730 ;; Hardware stack levels required when called:    1
 14731 ;; This function calls:
 14732 ;;		i2_memcpy
 14733 ;; This function is called by:
 14734 ;;		_FromMainLow_recvmsg
 14735 ;;		_FromMainHigh_recvmsg
 14736 ;; This function uses a non-reentrant model
 14737 ;;
 14738                           psect	text55,class=CODE,space=0,reloc=2
 14739                           global __ptext55
 14740  000B44                     __ptext55:
 14741                           psect	text55
 14742                           	file	"../src/messages.c"
 14743                           	line	63
 14744                           	global	__size_ofi2_recv_msg
 14745  0000                     	__size_ofi2_recv_msg	equ	__end_ofi2_recv_msg-i2_recv_msg
 14746                           	
 14747  000B44                     i2_recv_msg:; BSR set to: 0
 14748                           
 14749                           	opt	stack 17
 14750                           	line	72
 14751                           	
 14752  000B44                     i2l19413:
 14753                           ;messages.c: 64: unsigned char slot;
 14754                           ;messages.c: 68: msg *qmsg;
 14755                           ;messages.c: 69: size_t tlength;
 14756                           ;messages.c: 72: slot = qptr->cur_read_ind;
 14757  000B44  0100               	movlb	0	; () banked
 14758  000B46  EE20 F035          	lfsr	2,035h
 14759  000B4A  0100               	movlb	0	; () banked
 14760  000B4C  5180               	movf	((i2recv_msg@qptr))&0ffh,w
 14761  000B4E  26D9               	addwf	fsr2l
 14762  000B50  0100               	movlb	0	; () banked
 14763  000B52  5181               	movf	((i2recv_msg@qptr+1))&0ffh,w
 14764  000B54  22DA               	addwfc	fsr2h
 14765  000B56  50DF               	movf	indf2,w
 14766  000B58  0100               	movlb	0	; () banked
 14767  000B5A  0100               	movlb	0	; () banked
 14768  000B5C  6F87               	movwf	((i2recv_msg@slot))&0ffh
 14769                           	line	73
 14770                           	
 14771  000B5E                     i2l19415:; BSR set to: 0
 14772                           
 14773                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
 14774  000B5E  0100               	movlb	0	; () banked
 14775  000B60  0100               	movlb	0	; () banked
 14776  000B62  5187               	movf	((i2recv_msg@slot))&0ffh,w
 14777  000B64  0D0D               	mullw	0Dh
 14778  000B66  50F3               	movf	(prodl),c,w
 14779  000B68  0100               	movlb	0	; () banked
 14780  000B6A  0100               	movlb	0	; () banked
 14781  000B6C  2580               	addwf	((i2recv_msg@qptr))&0ffh,w
 14782  000B6E  0100               	movlb	0	; () banked
 14783                           	
 14784  000B70  0100               	movlb	0	; () banked
 14785  000B72  6F8A               	movwf	((i2recv_msg@qmsg))&0ffh
 14786  000B74  50F4               	movf	(prodh),c,w
 14787  000B76  0100               	movlb	0	; () banked
 14788  000B78  0100               	movlb	0	; () banked
 14789  000B7A  2181               	addwfc	((i2recv_msg@qptr+1))&0ffh,w
 14790  000B7C  0100               	movlb	0	; () banked
 14791  000B7E  6F8B               	movwf	1+((i2recv_msg@qmsg))&0ffh
 14792                           	line	74
 14793                           	
 14794  000B80                     i2l19417:; BSR set to: 0
 14795                           
 14796                           ;messages.c: 74: if (qmsg->full == 1) {
 14797  000B80  0E01               	movlw	(01h)&0ffh
 14798  000B82  C08A  FFD9         	movff	(i2recv_msg@qmsg),fsr2l
 14799  000B86  C08B  FFDA         	movff	(i2recv_msg@qmsg+1),fsr2h
 14800  000B8A  62DF               	cpfseq	indf2
 14801  000B8C  D001               	goto	i2u233_41
 14802  000B8E  D001               	goto	i2u233_40
 14803  000B90                     i2u233_41:
 14804  000B90  D06E               	goto	i2l19441
 14805  000B92                     i2u233_40:
 14806                           	line	76
 14807                           	
 14808  000B92                     i2l19419:; BSR set to: 0
 14809                           
 14810                           ;messages.c: 76: if (qmsg->length > maxlength) {
 14811  000B92  0100               	movlb	0	; () banked
 14812  000B94  EE20 F001          	lfsr	2,01h
 14813  000B98  0100               	movlb	0	; () banked
 14814  000B9A  518A               	movf	((i2recv_msg@qmsg))&0ffh,w
 14815  000B9C  26D9               	addwf	fsr2l
 14816  000B9E  0100               	movlb	0	; () banked
 14817  000BA0  518B               	movf	((i2recv_msg@qmsg+1))&0ffh,w
 14818  000BA2  22DA               	addwfc	fsr2h
 14819  000BA4  50DF               	movf	indf2,w
 14820  000BA6  0100               	movlb	0	; () banked
 14821  000BA8  0100               	movlb	0	; () banked
 14822  000BAA  6182               	cpfslt	((i2recv_msg@maxlength))&0ffh
 14823  000BAC  D001               	goto	i2u234_41
 14824  000BAE  D001               	goto	i2u234_40
 14825  000BB0                     i2u234_41:
 14826  000BB0  D003               	goto	i2l19425
 14827  000BB2                     i2u234_40:
 14828                           	line	77
 14829                           	
 14830  000BB2                     i2l19421:; BSR set to: 0
 14831                           
 14832                           ;messages.c: 77: return (-3);
 14833  000BB2  0EFD               	movlw	(-3)&0ffh
 14834  000BB4  D05F               	goto	i2l5479
 14835                           	
 14836  000BB6                     i2l19423:; BSR set to: 0
 14837                           
 14838  000BB6  D05E               	goto	i2l5479
 14839                           	line	78
 14840                           	
 14841  000BB8                     i2l5478:; BSR set to: 0
 14842                           
 14843                           	line	80
 14844                           	
 14845  000BB8                     i2l19425:; BSR set to: 0
 14846                           
 14847                           ;messages.c: 78: }
 14848                           ;messages.c: 80: tlength = qmsg->length;
 14849  000BB8  0100               	movlb	0	; () banked
 14850  000BBA  EE20 F001          	lfsr	2,01h
 14851  000BBE  0100               	movlb	0	; () banked
 14852  000BC0  518A               	movf	((i2recv_msg@qmsg))&0ffh,w
 14853  000BC2  26D9               	addwf	fsr2l
 14854  000BC4  0100               	movlb	0	; () banked
 14855  000BC6  518B               	movf	((i2recv_msg@qmsg+1))&0ffh,w
 14856  000BC8  22DA               	addwfc	fsr2h
 14857  000BCA  50DF               	movf	indf2,w
 14858  000BCC  6E3E               	movwf	(??i2_recv_msg+0+0)&0ffh,c
 14859  000BCE  503E               	movf	((??i2_recv_msg+0+0)),c,w
 14860  000BD0  0100               	movlb	0	; () banked
 14861  000BD2  0100               	movlb	0	; () banked
 14862  000BD4  6F88               	movwf	((i2recv_msg@tlength))&0ffh
 14863  000BD6  0100               	movlb	0	; () banked
 14864  000BD8  6B89               	clrf	((i2recv_msg@tlength+1))&0ffh
 14865                           	line	81
 14866                           	
 14867  000BDA                     i2l19427:; BSR set to: 0
 14868                           
 14869                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
 14870  000BDA  C085  F034         	movff	(i2recv_msg@data),(c:?i2_memcpy)
 14871  000BDE  C086  F035         	movff	(i2recv_msg@data+1),(c:?i2_memcpy+1)
 14872  000BE2  0E03               	movlw	03h
 14873  000BE4  0100               	movlb	0	; () banked
 14874  000BE6  0100               	movlb	0	; () banked
 14875  000BE8  258A               	addwf	((i2recv_msg@qmsg))&0ffh,w
 14876  000BEA  6E3E               	movwf	(??i2_recv_msg+0+0)&0ffh,c
 14877  000BEC  0E00               	movlw	0
 14878  000BEE  0100               	movlb	0	; () banked
 14879  000BF0  0100               	movlb	0	; () banked
 14880  000BF2  218B               	addwfc	((i2recv_msg@qmsg+1))&0ffh,w
 14881  000BF4  6E3F               	movwf	(??i2_recv_msg+0+0+1)&0ffh,c
 14882  000BF6  C03E  F036         	movff	??i2_recv_msg+0+0,0+((c:?i2_memcpy)+02h)
 14883  000BFA  C03F  F037         	movff	??i2_recv_msg+0+1,1+((c:?i2_memcpy)+02h)
 14884  000BFE  C088  F038         	movff	(i2recv_msg@tlength),0+((c:?i2_memcpy)+04h)
 14885  000C02  C089  F039         	movff	(i2recv_msg@tlength+1),1+((c:?i2_memcpy)+04h)
 14886  000C06  ECAC  F00C         	call	i2_memcpy	;wreg free
 14887                           	line	87
 14888                           	
 14889  000C0A                     i2l19429:
 14890                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
 14891  000C0A  0100               	movlb	0	; () banked
 14892  000C0C  EE20 F035          	lfsr	2,035h
 14893  000C10  0100               	movlb	0	; () banked
 14894  000C12  5180               	movf	((i2recv_msg@qptr))&0ffh,w
 14895  000C14  26D9               	addwf	fsr2l
 14896  000C16  0100               	movlb	0	; () banked
 14897  000C18  5181               	movf	((i2recv_msg@qptr+1))&0ffh,w
 14898  000C1A  22DA               	addwfc	fsr2h
 14899  000C1C  0100               	movlb	0	; () banked
 14900  000C1E  EE10 F035          	lfsr	1,035h
 14901  000C22  0100               	movlb	0	; () banked
 14902  000C24  5180               	movf	((i2recv_msg@qptr))&0ffh,w
 14903  000C26  26E1               	addwf	fsr1l
 14904  000C28  0100               	movlb	0	; () banked
 14905  000C2A  5181               	movf	((i2recv_msg@qptr+1))&0ffh,w
 14906  000C2C  22E2               	addwfc	fsr1h
 14907  000C2E  50E7               	movf	indf1,w
 14908  000C30  6E3E               	movwf	(??i2_recv_msg+0+0)&0ffh,c
 14909  000C32  283E               	incf	((??i2_recv_msg+0+0)),c,w
 14910  000C34  0B03               	andlw	low(03h)
 14911  000C36  6EDF               	movwf	indf2
 14912                           
 14913                           	line	89
 14914                           	
 14915  000C38                     i2l19431:; BSR set to: 0
 14916                           
 14917                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
 14918  000C38  0100               	movlb	0	; () banked
 14919  000C3A  EE20 F002          	lfsr	2,02h
 14920  000C3E  0100               	movlb	0	; () banked
 14921  000C40  518A               	movf	((i2recv_msg@qmsg))&0ffh,w
 14922  000C42  26D9               	addwf	fsr2l
 14923  000C44  0100               	movlb	0	; () banked
 14924  000C46  518B               	movf	((i2recv_msg@qmsg+1))&0ffh,w
 14925  000C48  22DA               	addwfc	fsr2h
 14926  000C4A  C083  FFE1         	movff	(i2recv_msg@msgtype),fsr1l
 14927  000C4E  C084  FFE2         	movff	(i2recv_msg@msgtype+1),fsr1h
 14928  000C52  CFDF FFE7          	movff	indf2,indf1
 14929                           	line	91
 14930                           	
 14931  000C56                     i2l19433:; BSR set to: 0
 14932                           
 14933                           ;messages.c: 91: qmsg->full = 0;
 14934  000C56  C08A  FFD9         	movff	(i2recv_msg@qmsg),fsr2l
 14935  000C5A  C08B  FFDA         	movff	(i2recv_msg@qmsg+1),fsr2h
 14936  000C5E  0E00               	movlw	low(0)
 14937  000C60  6EDF               	movwf	indf2
 14938                           	line	92
 14939                           	
 14940  000C62                     i2l19435:; BSR set to: 0
 14941                           
 14942                           ;messages.c: 92: return (tlength);
 14943  000C62  0100               	movlb	0	; () banked
 14944  000C64  0100               	movlb	0	; () banked
 14945  000C66  5188               	movf	((i2recv_msg@tlength))&0ffh,w
 14946  000C68  D005               	goto	i2l5479
 14947                           	
 14948  000C6A                     i2l19437:; BSR set to: 0
 14949                           
 14950  000C6A  D004               	goto	i2l5479
 14951                           	line	93
 14952                           	
 14953  000C6C                     i2l19439:; BSR set to: 0
 14954                           
 14955                           ;messages.c: 93: } else {
 14956  000C6C  D003               	goto	i2l5479
 14957                           	
 14958  000C6E                     i2l5477:; BSR set to: 0
 14959                           
 14960                           	line	94
 14961                           	
 14962  000C6E                     i2l19441:; BSR set to: 0
 14963                           
 14964                           ;messages.c: 94: return (-4);
 14965  000C6E  0EFC               	movlw	(-4)&0ffh
 14966  000C70  D001               	goto	i2l5479
 14967                           	
 14968  000C72                     i2l19443:; BSR set to: 0
 14969                           
 14970  000C72  D000               	goto	i2l5479
 14971                           	line	95
 14972                           	
 14973  000C74                     i2l5480:; BSR set to: 0
 14974                           
 14975                           	line	96
 14976                           	
 14977  000C74                     i2l5479:; BSR set to: 0
 14978                           
 14979  000C74  0012               	return
 14980                           	opt stack 0
 14981                           GLOBAL	__end_ofi2_recv_msg
 14982  000C76                     	__end_ofi2_recv_msg:
 14983                           	signat	i2_recv_msg,89
 14984                           	global	i2_check_msg
 14985                           
 14986 ;; *************** function i2_check_msg *****************
 14987 ;; Defined at:
 14988 ;;		line 222 in file "../src/messages.c"
 14989 ;; Parameters:    Size  Location     Type
 14990 ;;  check_msg       2   51[COMRAM] PTR struct __msg_queue
 14991 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 14992 ;; Auto vars:     Size  Location     Type
 14993 ;;		None
 14994 ;; Return value:  Size  Location     Type
 14995 ;;                  1    wreg      unsigned char 
 14996 ;; Registers used:
 14997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14998 ;; Tracked objects:
 14999 ;;		On entry : 0/0
 15000 ;;		On exit  : 0/0
 15001 ;;		Unchanged: 0/0
 15002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15003 ;;      Params:         2       0       0       0       0
 15004 ;;      Locals:         0       0       0       0       0
 15005 ;;      Temps:          1       0       0       0       0
 15006 ;;      Totals:         3       0       0       0       0
 15007 ;;Total ram usage:        3 bytes
 15008 ;; Hardware stack levels used:    1
 15009 ;; This function calls:
 15010 ;;		Nothing
 15011 ;; This function is called by:
 15012 ;;		_SleepIfOkay
 15013 ;; This function uses a non-reentrant model
 15014 ;;
 15015                           psect	text56,class=CODE,space=0,reloc=2
 15016                           global __ptext56
 15017  001CD8                     __ptext56:
 15018                           psect	text56
 15019                           	file	"../src/messages.c"
 15020                           	line	222
 15021                           	global	__size_ofi2_check_msg
 15022  0000                     	__size_ofi2_check_msg	equ	__end_ofi2_check_msg-i2_check_msg
 15023                           	
 15024  001CD8                     i2_check_msg:; BSR set to: 0
 15025                           
 15026                           	opt	stack 19
 15027                           	line	223
 15028                           	
 15029  001CD8                     i2l18929:
 15030                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
 15031  001CD8  EE20 F035          	lfsr	2,035h
 15032  001CDC  5034               	movf	((c:i2check_msg@qptr)),c,w
 15033  001CDE  26D9               	addwf	fsr2l
 15034  001CE0  5035               	movf	((c:i2check_msg@qptr+1)),c,w
 15035  001CE2  22DA               	addwfc	fsr2h
 15036  001CE4  50DF               	movf	indf2,w
 15037  001CE6  6E36               	movwf	(??i2_check_msg+0+0)&0ffh,c
 15038  001CE8  5036               	movf	((??i2_check_msg+0+0)),c,w
 15039  001CEA  0D0D               	mullw	0Dh
 15040  001CEC  50F3               	movf	(prodl),c,w
 15041  001CEE  2434               	addwf	((c:i2check_msg@qptr)),c,w
 15042  001CF0  6ED9               	movwf	c:fsr2l
 15043  001CF2  50F4               	movf	(prodh),c,w
 15044  001CF4  2035               	addwfc	((c:i2check_msg@qptr+1)),c,w
 15045  001CF6  6EDA               	movwf	1+c:fsr2l
 15046  001CF8  50DF               	movf	indf2,w
 15047  001CFA  D000               	goto	i2l5523
 15048                           	
 15049  001CFC                     i2l18931:
 15050                           	line	224
 15051                           	
 15052  001CFC                     i2l5523:
 15053  001CFC  0012               	return
 15054                           	opt stack 0
 15055                           GLOBAL	__end_ofi2_check_msg
 15056  001CFE                     	__end_ofi2_check_msg:
 15057                           	signat	i2_check_msg,89
 15058                           	global	i2_memcpy
 15059                           
 15060 ;; *************** function i2_memcpy *****************
 15061 ;; Defined at:
 15062 ;;		line 13 in file "/opt/microchip/xc8/v1.10/sources/memcpy.c"
 15063 ;; Parameters:    Size  Location     Type
 15064 ;;  memcpy          2   51[COMRAM] PTR void 
 15065 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
 15066 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
 15067 ;;  memcpy          2   53[COMRAM] PTR const void 
 15068 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 15069 ;;		 -> i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 15070 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(5), 
 15071 ;;  memcpy          2   55[COMRAM] unsigned int 
 15072 ;; Auto vars:     Size  Location     Type
 15073 ;;  memcpy          2   59[COMRAM] PTR const unsigned char 
 15074 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 15075 ;;		 -> i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 15076 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(5), 
 15077 ;;  memcpy          2   57[COMRAM] PTR unsigned char 
 15078 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
 15079 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
 15080 ;; Return value:  Size  Location     Type
 15081 ;;                  2   51[COMRAM] PTR void 
 15082 ;; Registers used:
 15083 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 15084 ;; Tracked objects:
 15085 ;;		On entry : 0/0
 15086 ;;		On exit  : 0/0
 15087 ;;		Unchanged: 0/0
 15088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15089 ;;      Params:         6       0       0       0       0
 15090 ;;      Locals:         4       0       0       0       0
 15091 ;;      Temps:          0       0       0       0       0
 15092 ;;      Totals:        10       0       0       0       0
 15093 ;;Total ram usage:       10 bytes
 15094 ;; Hardware stack levels used:    1
 15095 ;; This function calls:
 15096 ;;		Nothing
 15097 ;; This function is called by:
 15098 ;;		i2_send_msg
 15099 ;;		i2_recv_msg
 15100 ;; This function uses a non-reentrant model
 15101 ;;
 15102                           psect	text57,class=CODE,space=0,reloc=2
 15103                           global __ptext57
 15104  001958                     __ptext57:
 15105                           psect	text57
 15106                           	file	"/opt/microchip/xc8/v1.10/sources/memcpy.c"
 15107                           	line	13
 15108                           	global	__size_ofi2_memcpy
 15109  0000                     	__size_ofi2_memcpy	equ	__end_ofi2_memcpy-i2_memcpy
 15110                           	
 15111  001958                     i2_memcpy:
 15112                           	opt	stack 17
 15113                           	line	24
 15114                           	
 15115  001958                     i2l19445:
 15116  001958  C036  F03C         	movff	(c:i2memcpy@s1),(c:i2memcpy@s)
 15117  00195C  C037  F03D         	movff	(c:i2memcpy@s1+1),(c:i2memcpy@s+1)
 15118                           	line	25
 15119  001960  C034  F03A         	movff	(c:i2memcpy@d1),(c:i2memcpy@d)
 15120  001964  C035  F03B         	movff	(c:i2memcpy@d1+1),(c:i2memcpy@d+1)
 15121                           	line	26
 15122  001968  D00F               	goto	i2l19453
 15123                           	
 15124  00196A                     i2l17041:
 15125                           	line	27
 15126                           	
 15127  00196A                     i2l19447:
 15128  00196A  C03C  FFD9         	movff	(c:i2memcpy@s),fsr2l
 15129  00196E  C03D  FFDA         	movff	(c:i2memcpy@s+1),fsr2h
 15130  001972  C03A  FFE1         	movff	(c:i2memcpy@d),fsr1l
 15131  001976  C03B  FFE2         	movff	(c:i2memcpy@d+1),fsr1h
 15132  00197A  CFDF FFE7          	movff	indf2,indf1
 15133                           	
 15134  00197E                     i2l19449:
 15135  00197E  4A3C               	infsnz	((c:i2memcpy@s)),c
 15136  001980  2A3D               	incf	((c:i2memcpy@s+1)),c
 15137                           	
 15138  001982                     i2l19451:
 15139  001982  4A3A               	infsnz	((c:i2memcpy@d)),c
 15140  001984  2A3B               	incf	((c:i2memcpy@d+1)),c
 15141  001986  D000               	goto	i2l19453
 15142                           	
 15143  001988                     i2l17040:
 15144                           	line	26
 15145                           	
 15146  001988                     i2l19453:
 15147  001988  0638               	decf	((c:i2memcpy@n)),c
 15148  00198A  A0D8               	btfss	status,0
 15149  00198C  0639               	decf	((c:i2memcpy@n+1)),c
 15150  00198E  2838               	incf	((c:i2memcpy@n))&0ffh,w
 15151  001990  B4D8               	btfsc	status,2
 15152  001992  2839               	incf ((c:i2memcpy@n+1))&0ffh,w
 15153                           
 15154  001994  A4D8               	btfss	status,2
 15155  001996  D001               	goto	i2u235_41
 15156  001998  D001               	goto	i2u235_40
 15157  00199A                     i2u235_41:
 15158  00199A  D7E7               	goto	i2l19447
 15159  00199C                     i2u235_40:
 15160  00199C  D000               	goto	i2l17043
 15161                           	
 15162  00199E                     i2l17042:
 15163                           	line	32
 15164                           ;	Return value of i2_memcpy is never used
 15165                           	
 15166  00199E                     i2l17043:
 15167  00199E  0012               	return
 15168                           	opt stack 0
 15169                           GLOBAL	__end_ofi2_memcpy
 15170  0019A0                     	__end_ofi2_memcpy:
 15171                           	signat	i2_memcpy,90
 15172                           	GLOBAL	__activetblptr
 15173  0000                     __activetblptr	EQU	0
 15174                           	psect	intsave_regs,class=BIGRAM,space=1
 15175                           psect	text58,class=CODE,space=0,reloc=2
 15176                           global __ptext58
 15177  000000                     __ptext58:
 15178                           	PSECT	rparam,class=COMRAM,space=1
 15179                           	GLOBAL	__Lrparam
 15180                           	FNCONF	rparam,??,?
 15181                           GLOBAL	__Lparam, __Hparam
 15182                           GLOBAL	__Lrparam, __Hrparam
 15183  0000                     __Lparam	EQU	__Lrparam
 15184  0000                     __Hparam	EQU	__Hrparam


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         224
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     65      75
    BANK0           128     69      71
    BANK1           256     71     233
    BANK2           256      0      54
    BANK3           256      0       0

Pointer List with Targets:

    ?_ReadTimer1	unsigned int  size(2) Largest target is 2
		 -> WriteTimer1@timer(COMRAM[2]), ReadTimer1@timer(COMRAM[2]), 

    ?_ReadADC	int  size(2) Largest target is 0

    ?_memcpy	PTR void  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@data(BANK0[10]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    ?_in_high_int	int  size(2) Largest target is 0

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@data(BANK0[10]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@data(BANK0[10]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), 
		 -> i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), main@uc(BANK1[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), 
		 -> i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), main@uc(BANK1[5]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 10
		 -> i2c_slave_int_handler@empty(BANK0[4]), i2c_slave_int_handler@data(BANK0[10]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK1[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1023
		 -> RAM(DATA[1023]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 10
		 -> i2c_slave_int_handler@data(BANK0[10]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> i2c_slave_int_handler@msgtype(BANK0[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 3
		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@error_buf(BANK0[3]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), NULL(NULL[0]), main@uc(BANK1[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1023
		 -> RAM(DATA[1023]), i2c_slave_int_handler@msgtype(BANK0[1]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@data(BANK0[10]), main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@data(BANK0[10]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 11
		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), 
		 -> i2c_slave_int_handler@error_buf(BANK0[3]), main@msgbuffer(BANK1[11]), main@uc(BANK1[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_timer0_int_handler
    _i2c_int_handler->_i2c_slave_int_handler
    _SleepIfOkay->i2_in_low_int
    _FromMainHigh_recvmsg->i2_recv_msg
    _ToMainHigh_sendmsg->i2_send_msg
    _FromMainLow_recvmsg->i2_recv_msg
    i2_in_low_int->i2_in_high_int
    i2_send_msg->i2_memcpy
    i2_recv_msg->i2_memcpy
    _InterruptHandlerLow->_adc_int_handler
    _timer1_int_handler->_ToMainLow_sendmsg
    _adc_int_handler->_ToMainLow_sendmsg
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _init_timer1_lthread->_OpenADC
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainHigh_recvmsg->_recv_msg
    _ToMainLow_recvmsg->_recv_msg
    _FromMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _i2c_int_handler->_i2c_slave_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    _i2c_slave_int_handler->_FromMainLow_recvmsg
    _ToMainHigh_sendmsg->i2_send_msg
    _FromMainLow_recvmsg->i2_recv_msg

Critical Paths under _main in BANK1

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _ToMainHigh_recvmsg->_recv_msg
    _ToMainLow_recvmsg->_recv_msg
    _FromMainLow_sendmsg->_send_msg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                56    56      0    4704
                                             17 BANK1     54    54      0
                     _init_uart_recv
                           _init_i2c
                _init_timer1_lthread
                        _init_queues
                         _OpenTimer1
                  _enable_interrupts
                _i2c_configure_slave
                          _OpenUSART
              _block_on_To_msgqueues
                 _ToMainHigh_recvmsg
                     _timer0_lthread
                  _ToMainLow_recvmsg
                     _timer1_lthread
                _FromMainLow_sendmsg
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      22
                                             57 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      22
                                             57 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  5     3      2     198
                                             62 BANK0      5     3      2
                            _OpenADC
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     134
                                             61 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     0      1      66
                                             57 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  2     1      1      22
                                             57 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            3     0      3     220
                                             57 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0      66
                                             63 BANK0      1     1      0
                            _in_main
                          _check_msg
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             61 BANK0      2     0      2
                         _in_low_int
                        _in_high_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             59 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (3) _in_high_int                                          2     0      2       0
                                             57 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     0      5     772
                                             12 BANK1      5     0      5
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8      23
                                             57 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     0      5     772
                                             12 BANK1      5     0      5
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8      44
                                             57 BANK0     10     2      8
                         _ConvertADC
 ---------------------------------------------------------------------------------
 (1) _FromMainLow_sendmsg                                  4     0      4     741
                                             11 BANK1      4     0      4
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8      88
                                             57 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     134
                                             57 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _send_msg                                            12     6      6     648
                                             67 BANK0      1     1      0
                                              0 BANK1     11     5      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7     679
                                             67 BANK0      2     2      0
                                              0 BANK1     12     5      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     174
                                             57 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2      44
                                             57 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     0      1      22
                                             57 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     2      3     154
                                             57 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _SetChanADC                                           2     1      1      22
                                             57 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    4980
                                             34 COMRAM    17    17      0
                 _timer1_int_handler
                    _adc_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   6     6      0    1688
                                             26 COMRAM     6     6      0
                         _ReadTimer1
                        _WriteTimer1
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (6) _adc_int_handler                                      8     8      0    1707
                                             26 COMRAM     8     8      0
                            _ReadADC
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                2     2      0    1585
                                             26 COMRAM     2     2      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     0      4    1562
                                             22 COMRAM     4     0      4
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      45
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ReadADC                                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    1496
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     395
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    9227
                                             43 BANK0     14    14      0
                    _i2c_int_handler
                 _timer0_int_handler
                        _SleepIfOkay
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                     0     0      0    4935
              _i2c_slave_int_handler
             _i2c_master_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  8     8      0    4146
                                             63 COMRAM     2     2      0
                                             17 BANK0      6     6      0
                        _WriteTimer0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     146
                       i2_in_low_int
                      i2_in_high_int
                        i2_check_msg
                   _enter_sleep_mode
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     0      5    2000
                                             12 BANK0      5     0      5
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _i2c_slave_int_handler                              28    28      0    4935
                                             63 COMRAM     2     2      0
                                             17 BANK0     26    26      0
                       _handle_start
                _FromMainLow_recvmsg
              _start_i2c_slave_reply
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     0      4    1912
                                             11 BANK0      4     0      4
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) _FromMainLow_recvmsg                                 5     0      5    2000
                                             12 BANK0      5     0      5
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) _start_i2c_slave_reply                               5     2      3      66
                                             51 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     0      1      22
                                             51 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (12) _i2c_master_int_handler                              1     1      0       0
                                             51 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2      68
                                             51 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             53 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (12) i2_in_high_int                                       2     0      2       0
                                             51 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    1819
                                             61 COMRAM     1     1      0
                                              0 BANK0     11     5      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    1907
                                             61 COMRAM     2     2      0
                                              0 BANK0     12     5      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     146
                                             51 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     484
                                             51 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_uart_recv
   _init_i2c
   _init_timer1_lthread
     _OpenADC
     _SetChanADC
   _init_queues
     _init_queue
   _OpenTimer1
   _enable_interrupts
   _i2c_configure_slave
   _OpenUSART
   _block_on_To_msgqueues
     _in_main
       _in_low_int
         _in_high_int
       _in_high_int
     _check_msg
     _Delay1KTCYx
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _timer0_lthread
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _timer1_lthread
     _ConvertADC
   _FromMainLow_sendmsg
     _send_msg
       _memcpy
   _uart_lthread

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _WriteTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _adc_int_handler
     _ReadADC
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      36       8       21.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100     47      E9       6       91.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     45      47       4       55.5%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     41      4B       1       59.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0      24       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B1      11        0.0%
DATA                 0      0     1D5      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.10 build 47796 
Symbol Table                                                                                   Tue Sep 25 13:45:14 2012

                        _STKPTRbits 000FFC                    main@uthread_data 01BF  
          _MQ_Main_Willing_to_block 0045                         _SSPSTATbits 000FC7  
                                _DA 007E3D                                  _BF 007E38  
                                _DC 007EC1                                  _CK 007C16  
                                _P2 007C3C                                  _S2 007C3B  
                                _CS 007C22                                  _DT 007C17  
                                _GO 007E11                                  _PC 000FF9  
                                _PD 007E82                                  _RD 007C20  
                                _UA 007E39                                  _RI 007E84  
                                _OV 007EC3                                  _TO 007E83  
                                _RW 007E3A                                  _RX 007C17  
                                _WR 007D31                                  _TX 007C16  
         __end_of_ToMainLow_recvmsg 1BD4                                  bsr 000FE0  
         __end_of_ToMainLow_sendmsg 1D22                        __CFG_CP0$OFF 000000  
                 i2recv_msg@msgtype 0083                   i2recv_msg@tlength 0088  
              ?_FromMainLow_recvmsg 008C                                 _DA1 007E3D  
                               _DA2 007C3D                                 _BF1 007E38  
                               _BF2 007C38                                 _AN0 007C00  
                               _AN1 007C01                                 _AN2 007C02  
                               _AN3 007C03                                 _AN4 007C05  
                               _AN5 007C20                                 _CM0 007DA0  
                               _AN6 007C21                                 _CM1 007DA1  
                               _AN7 007C22                                 _CM2 007DA2  
                               _AN8 007C0A                                 _AN9 007C0B  
                               _LA0 007C48                                 _P1A 007C12  
                               _LA1 007C49                                 _P1B 007C1D  
                               _LB0 007C50                                 _LA2 007C4A  
                               _P1C 007C1E                                 _LB1 007C51  
                               _LA3 007C4B                                 _P1D 007C1F  
                               _LC0 007C58                                 _LB2 007C52  
                               _LA4 007C4C                                 _LC1 007C59  
                               _LB3 007C53                                 _LA5 007C4D  
                               _CKE 007E3E                ?_FromMainLow_sendmsg 01AD  
                               _LD0 007C60                                 _LC2 007C5A  
                               _LB4 007C54                                 _LA6 007C4E  
                               _LD1 007C61                                 _LC3 007C5B  
                               _LB5 007C55                                 _LA7 007C4F  
                               _LE0 007C68                                 _LD2 007C62  
                               _LC4 007C5C                                 _LB6 007C56  
                               _LE1 007C69                                 _LD3 007C63  
                               _LC5 007C5D                                 _LB7 007C57  
                               _LE2 007C6A                                 _LD4 007C64  
                               _LC6 007C5E                                 _LE3 007C6B  
                               _LD5 007C65                                 _LC7 007C5F  
                               _LE4 007C6C                                 _LD6 007C66  
                               _IBF 007CB7                                 _LE5 007C6D  
                               _LD7 007C67                                 _LE6 007C6E  
                               _LE7 007C6F                                 _CIS 007DA3  
                               _CKP 007E34                                 _PA1 007C12  
                               _GIE 007F97                                 _PA2 007C11  
                               _PB2 007C22                                 _PC2 007C21  
                               _BOR 007E80                                 _RA0 007C00  
                               _PD2 007C20                                 _RA1 007C01  
                               _RB0 007C08                                 _RA2 007C02  
                               _RB1 007C09                                 _RA3 007C03  
                               _RC0 007C10                                 _RB2 007C0A  
                               _RA4 007C04                                 _RC1 007C11  
                               _RB3 007C0B                                 _RA5 007C05  
                               _RD0 007C18                                 _RC2 007C12  
                               _RB4 007C0C                                 _RA6 007C06  
                               _BSR 000FE0                                 _RD1 007C19  
                               _RC3 007C13                                 _RB5 007C0D  
                               _RA7 007C07                                 _RE0 007C20  
                               _RD2 007C1A                                 _RC4 007C14  
                               _RB6 007C0E                                 _RE1 007C21  
                               _RD3 007C1B                                 _RC5 007C15  
                               _RB7 007C0F                                 _RE2 007C22  
                               _RD4 007C1C                                 _RC6 007C16  
                               _RE3 007CB3                                 _RD5 007C1D  
                               _RC7 007C17                                 _RE4 007C24  
                               _RD6 007C1E                                 _OBF 007CB6  
                               _UA1 007E39                                 _RE5 007C25  
                               _RD7 007C1F                                 _RC9 007D5E  
                               _UA2 007C39                                 _RE6 007C26  
                               _W4E 007DC1                                 _RE7 007C27  
                               _PGC 007C0E                                 _PGD 007C0F  
                               _PCL 000FF9                                 _SDA 007C14  
                               _RDE 007C20                                 _PR2 000FCB  
                               _PEN 007E2A                                 _SDI 007C14  
                               _SCK 007C13                                 _SCL 007C13  
                               _SS1 007C05                                 _SDO 007C15  
                               _SS2 007C1B                                 _SEN 007E28  
                               _RW1 007E3A                                 _PSA 007EAB  
                               _RW2 007C3A                                 _POR 007E81  
                               _RX9 007D5E                                 _SMP 007E3F  
                               _TX9 007D66                                 _TOS 000FFD  
                               _WRE 007C21                                 _WUE 007DC1  
                               _nA2 007C3D                                 _nCS 007C22  
                               _nW2 007C3A                                 _nPD 007E82  
              __size_of_WriteTimer0 0012                __size_of_WriteTimer1 0012  
                               _nRD 007C20                                 _nRI 007E84  
                               _nTO 007E83                                 _nWR 007C21  
                    _FromMainLow_MQ 0100                                 wreg 000FE8  
         i2c_slave_int_handler@data 0091                          _TXSTA1bits 000FAC  
                      __CFG_IESO$ON 000000                        ?_in_high_int 00B9  
                  ??_init_uart_recv 00BB        i2c_slave_int_handler@msgtype 00A7  
                   ReadTimer1@timer 0003                 i2recv_msg@maxlength 0082  
                              l1802 1D6A                                l1810 17C8  
                              l1811 17B4                                l1812 17C6  
                              l1815 180E                                l1808 1788  
                              l1816 1820                                l1809 17C8  
                              l1817 1820                                _AN10 007C09  
                              _AN11 007C0C                                _AN12 007C08  
                              l3650 082C                                l3651 08BC  
                              l3660 090E                                l3652 087C  
                              l5501 1C5E                                l3661 09FC  
                              l3653 087C                                l3645 07D4  
                              l3670 0A00                                l3662 09DA  
                              l3654 0882                                l3646 082A  
                              l1799 1DE0                                l3671 0A00  
                              l3663 0912                                l3655 0888  
                              l3647 0828                                l3664 09FA  
                              l3648 08BE                                l3656 0884  
                              l3665 0962                                l3649 089C  
                              l3657 0896                                l3666 0984  
                              l3658 0898                                l5523 1AD6  
                              l3667 0986                                l3659 0910  
                              l5540 105C                                l3668 09D6  
                              l5517 1706                                l3669 09FE  
                              l5470 159E                                l5534 0FA6  
                              l5535 105C                                l5480 0B42  
                              l5536 0FB6                                l5473 0DEC  
                              l5537 0FEA                                l5474 0E8E  
                              l5538 101E                                l5539 105A  
                              l5468 1568                                l5477 0B3C  
                              l5469 159E                                l5478 0A78  
                              l5479 0B42                                _ADIE 007CEE  
                              l5488 1BD2                                l5496 1BA2  
                              l7440 1B42                                _ADIF 007CF6  
                              _ADEN 007D5B                                _ADFM 007E07  
                              l7437 190E                                _CCP1 007C12  
                              _ADIP 007CFE                                l9239 1D56  
                              _CKE1 007E3E                                _CKE2 007C3E  
                              _ADON 007E10                                _P1M0 007DEE  
                              _CHS0 007E12                                _P1M1 007DEF  
                              _CHS1 007E13                                _CHS2 007E14  
                              _CHS3 007E15                                _CKP1 007E34  
                              _DDRA 000F92                                _CKP2 007C34  
                              _DDRB 000F93                                _DDRC 000F94  
                              _DDRD 000F95                                _DDRE 000F96  
                              _GCEN 007E2F                                _KBI0 007C0C  
                              _KBI1 007C0D                                _CMIE 007D06  
                              _KBI2 007C0E                                _CMIF 007D0E  
                              _KBI3 007C0F                                _PA2E 007C27  
                              _GIEH 007F97                                _CMIP 007D16  
                              _BRGH 007D62                                _PB1E 007C26  
                              _GIEL 007F96                                _PC1E 007C25  
                              _PB3E 007C24                                _T0IE 007F95  
                              _PC3E 007C23                                _T0IF 007F92  
                              _RD16 007E6F                                _FLT0 007C08  
                              _CREN 007D5C                                _T0CS 007EAD  
                              _FERR 007D5A                                u1020 1774  
                              u1021 1772                                _DONE 007E11  
                              u1030 17A0                                u1031 179E  
                              u1040 17E2                                u1200 11F6  
                              u2000 090A                                u1041 17E0  
                              u1201 11F4                                u2001 0908  
                              u2010 0DE6                                u1050 17FA  
                              u1210 1206                                _T0IP 007F8A  
                              u2011 0DE4                                u1051 17F8  
                              u1211 1204                                u2020 1874  
                              u1300 0FD8                                u1220 1214  
                              _IBOV 007CB5                                _CVR0 007DA8  
                              u2021 1872                                u1301 0FD6  
                              u1221 1212                                _CVR1 007DA9  
                              u2030 0A52                                u1310 100C  
                              u1230 1226                                _PDC0 007DB8  
                              _CVR2 007DAA                                u2031 0A50  
                              u1311 100A                                u1231 1224  
                              _PDC1 007DB9                                _FREE 007D34  
                              _CVR3 007DAB                                u2040 0A72  
                              u1320 103E                                u1240 1236  
                              _PDC2 007DBA                                u2041 0A70  
                              u1321 103A                                u1241 1234  
                              _PDC3 007DBB                                u1330 188A  
                              u1250 1244                                u1170 1A3A  
                              _PDC4 007DBC                                u1331 1888  
                              u1251 1242                                u1171 1A38  
                              _T0SE 007EAC                                _PDC5 007DBD  
                              _CSRC 007D67                                u1340 18A0  
                              u1260 1258                                u1180 1A58  
                              _PDC6 007DBE                                u1341 189E  
                              u1261 1256                                u1181 1A56  
                              _LATA 000F89                                u1350 1564  
                              u1326 1040                                u1270 127A  
                              u1190 11E8                                _LATB 000F8A  
                              u1351 1562                                u1271 1278  
                              u1191 11E6                                _LATC 000F8B  
                              u1360 159C                                u1280 1282  
                              _D_A2 007C3D                                _LATD 000F8C  
                              _FSR0 000FE9                                u1361 159A  
                              u1281 1280                                _LATE 000F8D  
                              _FSR1 000FE1                                u1290 0FA2  
                              _FSR2 000FD9                                u1291 0FA0  
                              u1800 161A                                _INT0 007C08  
                              u1801 1618                                _INT1 007C09  
                              _INT2 007C0A                                _SDA1 007C14  
                              _SDA2 007C19                                _RCD8 007D58  
                              _IPR1 000F9F                                _IPR2 000FA2  
                              u2367 1D6E                                _PIE1 000F9D  
                              _IPR3 000FA5                                _IPEN 007E87  
                              _PIE2 000FA0                                _PEN1 007E2A  
                              _PIE3 000FA3                                _PEN2 007C2A  
                              _CVRR 007DAD                                _SDI1 007C14  
                              _SCK1 007C13                                _PEIE 007F96  
                              _SDI2 007C19                                _SCK2 007C18  
                              _SCL1 007C13                                u1990 0824  
                              _SCL2 007C18                                u1991 0822  
                              _RBIE 007F93                                _RBIF 007F90  
                              _RCIE 007CED                                _RCIF 007CF5  
                              _RCEN 007E2B                                _SDO1 007C15  
                              _SDO2 007C1A                                _SEN1 007E28  
                              _PIR1 000F9E                                _SEN2 007C28  
                              _SCS0 007E98                                _RBIP 007F88  
                              _MSK0 007E40                                _PIR2 000FA1  
                              _SCS1 007E99                                _MSK1 007E41  
                              _PIR3 000FA4                                _MSK2 007E42  
                              _MSK3 007E43                                _RCIP 007CFD  
                              _MSK4 007E44                                _MSK5 007E45  
                              _MSK6 007E46                                _MSK7 007E47  
                              _OERR 007D59                                _RCON 000FD0  
                              _SCKP 007DC4                                _RCMT 007DC6  
                              _RBPU 007F8F                                _RX91 007D5E  
                              _PSP0 007C18                                _SMP1 007E3F  
                              _PSP1 007C19                                _SMP2 007C3F  
                              _PSP2 007C1A                                _PSP3 007C1B  
                              _PSP4 007C1C                                _PSP5 007C1D  
                              _PSP6 007C1E                                _TX91 007D66  
                              _PSP7 007C1F                                _RX9D 007D58  
                              _TMR0 000FD6                                _TMR1 000FCE  
                              _TMR2 000FCC                                _PROD 000FF3  
                              _RJPU 007C07                                _WCOL 007E37  
                              _SPEN 007D5F                                _RSEN 007E29  
                              _TX9D 007D60                                _SREN 007D5D  
                              _OSTS 007E9B                                _TXD8 007D60  
                              _TOSH 000FFE                                _TOSL 000FFD  
                              _WREG 000FE8                                _TRMT 007D61  
                              _STOP 007E3C                                _ZERO 007EC2  
                              _TXIE 007CEC                                _TOSU 000FFF  
                              _WREN 007D32                                _TXIF 007CF4  
                              _TXEN 007D65                                _SYNC 007D64  
                              _TXIP 007CFC                                _R_W2 007C3A  
                   _FromMainHigh_MQ 0200                                _nBOR 007E80  
                     __CFG_FCMEN$ON 000000                                _nRC8 007D5E  
                              _nSS1 007C05                                _nSS2 007C1B  
                              _nPOR 007E81                                _nTX8 007D66  
            ?_block_on_To_msgqueues 0001                                _main 070A  
                              fsr0h 000FEA                                fsr1h 000FE2  
                              fsr0l 000FE9                                fsr2h 000FDA  
                              indf1 000FE7                                fsr1l 000FE1  
                              indf2 000FDF                                fsr2l 000FD9  
                       main@msgtype 01CC                          i1_send_msg 1288  
                              pclat 000FFA                         i2_check_msg 1CD8  
                              prodh 000FF4                                prodl 000FF3  
             handle_start@data_read 0034                                start 00D2  
                        i2_recv_msg 0B44                       __CFG_FOSC2$ON 000000  
                  ?_adc_int_handler 0001          i2c_slave_int_handler@empty 009B  
                        i2_send_msg 0E90           ToMainHigh_recvmsg@msgtype 01AF  
                      _ECCP1DELbits 000FB7                     __end_of_ReadADC 1DD0  
                      _ECCP1CONbits 000FBD                      send_msg@length 01A4  
                   __end_of_OpenADC 1624         __size_of_timer0_int_handler 00B0  
           ??_i2c_slave_int_handler 0040                         _Delay1KTCYx 1D6C  
                             l11026 1DD8                               l12822 1CB0  
             ??_FromMainLow_recvmsg 0040                               l14610 18C4  
                             l14611 18C2                               l12819 176A  
                             l14612 18C4                               l17040 185A  
                             l17105 1D6C                               l17041 1834  
                             l14609 188E                               l17106 1D7E  
                             l17042 1876                               l17107 1D7E  
                             l17043 1876                               l18201 180A  
                             l16530 124A                               l16522 11EA  
                             l16427 1DEA                               l18203 180C  
                             l16531 125C                               l16523 11FA  
                             l16444 1620                               l16532 125E  
                             l16524 1208                               l16445 1622  
                             l18205 180E                               l16533 1286  
                             l16525 1218                               l19101 0790  
                             l16534 1286                               l16526 121A  
                             _C1INV 007DA4                               l18207 181E  
                             l16527 1228                               l19111 07AE  
                             l19103 0792                               l16528 1238  
                             _DC1B0 007DEC                               l16457 1D3C  
                             l19201 0A72                               l18401 1244  
                             l16529 1248                               l16481 1A3E  
                             l18321 1D3E                               l19121 082C  
                             l19113 07D4                               l19105 0794  
                             _DC1B1 007DED                               l16482 1A42  
                             l19211 0B06                               l19203 0A76  
                             l18171 1D58                               l18411 126E  
                             l18403 1258                               l16483 1A5C  
                             l18331 1754                               l18323 1D46  
                             l19123 0886                               l19131 08BE  
                             l19115 07D8                               l19107 0796  
                             l16484 1A5E                               _DC2B0 007DD4  
                             l19213 0B24                               l19205 0A78  
                             l19221 0B3C                               l18173 1D6A  
                             l18181 1786                               l18421 0F8A  
                             l18413 1270                               l18405 1262  
                             l16485 1A60                               l18341 16A6  
                             l18333 1756                               l18325 18C6  
                             l19141 0986                               l19133 08FE  
                             l19125 0888                               l19117 0818  
                             l19109 07AC                               _DC2B1 007DD5  
                             _C2INV 007DA5                               l19223 0B40  
                             l19215 0B30                               l19207 0A9E  
                             l19151 1BA4                               l18191 17B4  
                             l18183 1788                               l18175 176C  
                             l18431 0FE4                               l18423 0FA4  
                             l18415 1272                               l18407 126A  
                             l18351 1A2E                               l18343 16BE  
                             l18335 1758                               l18327 18CE  
                             l19143 09D8                               l19135 090C  
                             l19127 089A                               l19119 0826  
                             l19071 070A                               l19217 0B38  
                             l19209 0AD4                               l19161 0D98  
                             l19153 1BD2                               l18193 17C4  
                             l18185 17A0                               l18177 1774  
                             l18441 101C                               l18433 0FE8  
                             l18425 0FA8                               l18417 127A  
                             l18409 126C                               l18361 1A58  
                             l18353 1A3A                               l18345 16D6  
                             l18337 175A                               l18329 1708  
                             l18169 1DDA                               l19137 0912  
                             l19145 09DA                               l19129 089C  
                             l19081 0758                               l19073 070E  
                             l19219 0B3A                               l19171 0DEC  
                             l19163 0DB2                               l19155 1C34  
                             l18451 1DD0                               l19147 1B74  
                             l18187 17B0                               l18179 1784  
                             l18195 17CA                               l18443 101E  
                             l18435 0FEA                               l18427 0FB6  
                             l18419 1282                               l18371 1B28  
                             l18363 1B10                               l18355 1A42  
                             l18347 16EE                               l18339 169A  
                             l19139 0962                               l19091 076C  
                             l19083 075C                               l19075 0710  
                             l19181 0E8E                               l19173 0E1C  
                             l19165 0DD4                               l19157 1C5E  
                             l19149 1BA2                               l18189 17B2  
                             l18197 17E2                               l18445 1034  
                             l18437 100C                               l18429 0FD8  
                             l18381 1B3C                               l18373 1B2C  
                             l18365 1B20                               l18357 1A4A  
                             l18349 1A24                               l19093 0770  
                             l19085 0760                               l19077 0728  
                             l19191 185A                               l19183 1822  
                             l19175 0E4C                               l19167 0DE6  
                             l19159 0D8A                               l18471 18A0  
                             l18199 17FA                               l18439 1018  
                             l18391 11F6                               l18383 1B3E  
                             l18375 1B30                               l18367 1B22  
                             l18359 1A4C                               l19095 0774  
                             l19087 0764                               l19079 0740  
                             l19185 1834                               l19193 0A04  
                             l19177 0E7E                               l19169 0DEA  
                             l18481 1568                               l18473 151A  
                             l18465 1878                               l18457 1C8C  
                             l18393 1206                               l18385 11D4  
                             l18377 1B34                               l18369 1B24  
                             l19097 078A                               l19089 0768  
                             l18571 1AA0                               l19187 1848  
                             l19195 0A1E                               l19179 0E8A  
                             l18483 1588                               l18475 1546  
                             l18467 188C                               l18459 1CAC  
                             l18395 1214                               l18387 11DC  
                             l18379 1B3A                               l19099 078E  
                             l18573 1AD6                               l19189 1850  
                             l19197 0A40                               l18485 158E  
                             l18477 1556                               l18469 188E  
                             l18397 1226                               l18389 11E8  
                             l18831 15A0                               l18575 1D6C  
                             l19199 0A52                               l18479 1566  
                             l18399 1236                               l18841 161A  
                             l18833 15A8                               l18577 1D74  
                             l18843 1D22                               l18835 15B4  
                             l18845 1DE8                               l18837 15D4  
                             l18839 160E                               _C1OUT 007DA6  
                             _C2OUT 007DA7                               _ABDEN 007DC0  
                             _ADCAL 007E17                               _ADCS0 007E00  
                             _ADCS1 007E01                               _ADCS2 007E02  
             ??_FromMainLow_sendmsg 00C4                               _ADDEN 007D5B  
                             _CCP10 007C22                               ?_main 0001  
                             _ACKEN 007E2C                               _ACKDT 007E2D  
                             _CCP2E 007C27                               _CCP6E 007C26  
                             _CCP7E 007C25                               _CCP8E 007C24  
                             _CCP9E 007C23                               _BCLIE 007D03  
                             _BCLIF 007D0B                               _CCP1X 007DED  
                             _CCP1Y 007DEC                               _CCP2X 007DD5  
                             _ACQT0 007E03                               _CCP2Y 007DD4  
                             _ACQT1 007E04                               _ACQT2 007E05  
                             _BCLIP 007D13                               _ADRES 000FC3  
                             _CCPR1 000FBE                               _CCPR2 000FBB  
                             _BRG16 007DC3                               _GCEN1 007E2F  
                             _GCEN2 007C2F                               _CMEN0 007DA0  
                             _CMEN1 007DA1                               _CMEN2 007DA2  
                             _CARRY 007EC0                               _CHSN3 007E0B  
                             _BRGH1 007D62                               _CMCON 000FB4  
                             _CREN1 007D5C                               _FERR1 007D5A  
                             _T0CKI 007C0D                               _T1CKI 007C10  
                             _IDLEN 007E9F                               _T0CON 000FD5  
                             _T1CON 000FCD                               _CSRC1 007D67  
                             _T2CON 000FCA                               _LATA0 007C48  
                             _LATA1 007C49                               _LATB0 007C50  
                             _LATA2 007C4A                               _INDF0 000FEF  
                             _LATB1 007C51                               _LATA3 007C4B  
                             _INDF1 000FE7                               _LATC0 007C58  
                             _LATB2 007C52                               _INDF2 000FDF  
                             _LATC1 007C59                               _LATB3 007C53  
                             _LATA5 007C4D                               _LATD0 007C60  
                             _LATC2 007C5A                               _LATB4 007C54  
                             _LATD1 007C61                               _LATC3 007C5B  
                             _LATB5 007C55                               _LATA7 007C4F  
                             _LATE0 007C68                               _LATD2 007C62  
                             _LATC4 007C5C                               _LATB6 007C56  
                             _RC1IE 007CED                               _LATE1 007C69  
                             _LATD3 007C63                               _LATC5 007C5D  
                             _LATB7 007C57                               _RC1IF 007CF5  
                             _LATE2 007C6A                               _LATD4 007C64  
                             _LATC6 007C5E                               _LATD5 007C65  
                             _LATC7 007C5F                               _T0PS0 007EA8  
                             _LATD6 007C66                               _T0PS1 007EA9  
                             _LATD7 007C67                               _T0PS2 007EAA  
                             _RC1IP 007CFD                               _FSR0H 000FEA  
                             _FSR1H 000FE2                               _FSR2H 000FDA  
                             _FSR0L 000FE9                               _PCFG0 007E08  
                             _FSR1L 000FE1                               _PCFG1 007E09  
                             _PCFG2 007E0A                               _FSR2L 000FD9  
                             _PCFG3 007E0B                               _T1OSI 007C11  
                             _INT0E 007F94                               _INT0F 007F91  
                             _INT1E 007F83                               _INT1F 007F80  
                             _CVREF 007C02                               _T1OSO 007C10  
                             _INT2E 007F84                               _INT2F 007F81  
                             _CVREN 007DAF                               _INT1P 007F86  
                             _INT2P 007F87                               _T1RUN 007E6E  
                             _CVROE 007DAE                               _RC8_9 007D5E  
                             _RCEN1 007E2B                          i1memcpy@d1 0001  
                             _RCEN2 007C2B                               _PCLAT 000FF9  
                             _CVRSS 007DAC                               _MSK01 007E40  
                             _MSK02 007C40                               _MSK11 007E41  
                             _MSK12 007C41                               _MSK21 007E42  
                             _MSK22 007C42                               _MSK31 007E43  
                             _MSK32 007C43                               _MSK41 007E44  
                             _MSK42 007C44                               _MSK51 007E45  
                             _RCIDL 007DC6                               _MSK52 007C45  
                             _MSK61 007E46                               _MSK62 007C46  
                             _MSK71 007E47                               _MSK72 007C47  
                             _OERR1 007D59                          i1memcpy@s1 0003  
       FromMainHigh_recvmsg@msgtype 008D                               _VCFG0 007E0C  
                             _VCFG1 007E0D                               _RCREG 000FAE  
                             _SENDB 007D63                               _LVDIN 007C05  
                             _PLLEN 007CDE                               _RCSTA 000FAB  
                             _RX9D1 007D58                               _WCOL1 007E37  
                             _WCOL2 007C37                               _SPEN1 007D5F  
                             _TMR0H 000FD7                               _RSEN1 007E29  
                             _RSEN2 007C29                               _TMR1H 000FCF  
                             _TX1IE 007CEC                               _TX1IF 007CF4  
                             _TMR0L 000FD6                               _PRODH 000FF4  
                             _TX9D1 007D60                               _TMR1L 000FCE  
                             _PRODL 000FF3                               _SREN1 007D5D  
                             _SPBRG 000FAF                               _D_nA2 007C3D  
                             _TX1IP 007CFC                               _NOT_A 007E3D  
                             _PORTA 000F80                               _PORTB 000F81  
                             _PORTC 000F82                               _PORTD 000F83  
                             _PORTE 000F84                               _PSPIE 007CEF  
                             _PSPIF 007CF7                               _SRENA 007D5D  
                             _PRSEN 007DBF                               _PSPIP 007CFF  
                             _NOT_W 007E3A                               _START 007E3B  
                             _SSPM0 007E30                               _SSPM1 007E31  
                             _SSPM2 007E32                               _SSPM3 007E33  
                             _TX8_9 007D66                               _TRISA 000F92  
                             _TRISB 000F93                               _VREFM 007C02  
                             _TRMT1 007D61                               _STOP1 007E3C  
                             _TRISC 000F94                               _STOP2 007C3C  
                             _TRISD 000F95                               _SSPIE 007CEB  
                             _TRISE 000F96                               _VREFP 007C03  
                             _SSPIF 007CF3                               _SSPEN 007E35  
                             _TXEN1 007D65                               _SWDTE 007E88  
                             _SYNC1 007D64                               _SSPIP 007CFB  
                             _SSPOV 007E36                               _WRERR 007D33  
                             _TXREG 000FAD                               _TXSTA 000FAC  
                             _R_nW2 007C3A                          i2memcpy@d1 0034  
                             _nDONE 007E11                          i2memcpy@s1 0036  
                      ?_init_queues 0001                               _nRBPU 007F8F  
         __size_of_enter_sleep_mode 0006                     __end_of_in_main 1822  
                             _errno 0042          ToMainLow_recvmsg@maxlength 01AE  
           timer0_lthread@msgbuffer 00BF                          _ConvertADC 1DE8  
           i2c_configure_slave@addr 00B9                               tablat 000FF5  
                             status 000FD8                    __end_ofi1_memcpy 1958  
                  __end_ofi2_memcpy 19A0                     __initialization 1B44  
                      __end_of_main 0A04                          _ReadTimer1 1D80  
       __size_of_timer1_int_handler 003E          __size_of_ToMainLow_recvmsg 0030  
        __size_of_ToMainLow_sendmsg 0024       __size_of_FromMainHigh_recvmsg 0030  
             __size_ofi2_in_low_int 0044                              ??_main 01B3  
                   send_msg@msgtype 01A5                       __activetblptr 000000  
                   send_msg@tlength 01A8          FromMainLow_sendmsg@msgtype 01AE  
                        _SetChanADC 1D22                __end_of_handle_start 1490  
                     _emptyMsgCount 00C5                              _ADDEN1 007D5B  
                            _BCL1IE 007D03                              _BCL1IF 007D0B  
                            _BCL2IE 007D1E                              _BCL2IF 007D26  
                            _BCL1IP 007D13                              _BCL2IP 007D2E  
                            _ADCON0 000FC2                              _ADCON1 000FC1  
                            _ADCON2 000FC0                              _ACKEN1 007E2C  
                            _ACKEN2 007C2C                              _ABDOVF 007DC7  
                            _ACKDT1 007E2D                              _ACKDT2 007C2D  
                            _CCP1M0 007DE8                              _CCP1M1 007DE9  
                            _CCP1M2 007DEA                              _CCP1M3 007DEB  
                            _CCP2M0 007DD0                              _CCP2M1 007DD1  
                            _CCP2M2 007DD2                              _CCP2M3 007DD3  
                            _CCP1IE 007CEA                              _CCP1IF 007CF2  
                            _CCP2IE 007D00                              _CCP2IF 007D08  
                            _CCP1IP 007CFA                              _CCP2IP 007D10  
                            _ADMSK1 007E29                              _ADMSK2 007E2A  
                            _ADMSK3 007E2B                              _ADMSK4 007E2C  
                            _ADMSK5 007E2D                              _ADRESH 000FC4  
                            _ADRESL 000FC3                              _CCPR1H 000FBF  
                            _CCPR2H 000FBC                              _CCPR1L 000FBE  
                            _CCPR2L 000FBB                              _EECON1 000FA6  
                            _EECON2 000FA7                              _T08BIT 007EAE  
           ??_uart_recv_int_handler 001B                              _T1RD16 007E6F  
                            _GODONE 007E11                              _INT0IE 007F94  
                            _INT0IF 007F91                              _INT1IE 007F83  
                            _INT1IF 007F80                              _INT2IE 007F84  
                            _INT2IF 007F81                              _INT1IP 007F86  
                            _CVRCON 000FB5                              _INT2IP 007F87  
                            _MEMCON 000FCB                              i1l1825 006C  
                            i1l1826 007C                              i1l1827 008C  
                            i1l1828 008C                              _CVROEN 007DAE  
                            _T1SYNC 007E6A                              i1l5473 12C6  
                            i2l1802 1DC2                              i2l1810 19E2  
                            i1l5474 1338                          _OpenTimer1 1A24  
                            i2l1811 19D4                              i2l1812 19E0  
                            i2l1820 14CC                              i2l1821 14DC  
                            i1l5485 1D20                              i2l1822 14E0  
                    __CFG_WDTEN$OFF 000000                              i2l1808 19B6  
                            i2l1809 19E2                              _PCLATH 000FFA  
                            i1l9233 11A8                              i1l9234 11A6  
                            i1l9235 11D2                              i1l9236 11D2  
                            i2l5504 1C32                              i2l5520 1DE6  
                            i2l5512 1C02                              _PCLATU 000FFB  
                            i2l5530 1676                              i2l5523 1CFC  
                            i2l5531 1694                              i2l5526 1630  
                            i2l5527 1698                              i2l5480 0C74  
                            i2l7400 0200                              i2l5528 1644  
                            _INTCON 000FF2                              i2l5473 0EF2  
                            i2l7401 0220                              i2l5529 1658  
                            i2l5474 0F88                              i2l7410 0354  
                            i2l7402 02D0                              i2l7411 0356  
                            i2l7403 02CE                              i2l7420 04E0  
                            i2l7412 0416                              i2l7404 029C  
                            i2l5477 0C6E                              i2l5493 1C8A  
                            i2l7421 04AE                              i2l7413 03F6  
                            i2l7405 0270                              i2l5478 0BB8  
                            i2l7430 0654                              i2l7422 04DE  
                            i2l7414 03C4                              i2l7406 029A  
                            i2l5479 0C74                              i2l7431 06EC  
                            i2l7423 0538                              i2l7415 03F4  
                            i2l7407 02CC                              i2l7360 147C  
                            i2l7432 06EA                              i2l7416 0404  
                            i2l7408 02D2                              i2l7361 144C  
                            i2l7433 0708                              i2l7425 052A  
                            i2l7417 04E4                              i2l7409 0342  
                            i2l7362 147A                              i2l7354 10CC  
                            i2l7434 0708                              i2l7426 0536  
                            i2l7418 04E2                              i2l7370 1CB4  
                            i2l7363 1466                              i2l7355 1070  
                            i2l7427 058A                              i2l7419 0470  
                            i2l7371 1CD6                              i2l7380 0C9C  
                            i2l7364 1478                              i2l7356 10EA  
                            i2l7428 0656                              i2l7372 1CBA  
                            i2l7381 0D2C                              i2l7365 148E  
                            i2l7357 111C                              i2l7429 060C  
                            i2l7373 1CC0                              i2l7382 0D08  
                            i2l7366 148E                              i2l7390 0172  
                            i2l7374 1CD6                              _TABLAT 000FF5  
                            i2l7383 0D2A                              i2l7391 0510  
                            i2l7384 0D4E                              i2l7392 04E8  
                            i2l7377 0D66                              i2l7385 0D50  
                            i2l7393 0182                              i2l7369 1CC2  
                            i2l7386 0D88                              i2l7378 0C78  
                            i2l7394 01C4                              i2l7379 0D88  
                            i2l7395 01C2                              i2l7396 0510  
                            i2l7397 01C6                              i2l7389 0158  
                            i2l7398 0232                              i2l7399 0220  
                            _VCFG01 007E0C                              _VCFG11 007E0D  
                            _RCREG1 000FAE         __end_of_i2c_configure_slave 1B44  
                            _SENDB1 007D63                       ??_SleepIfOkay 0038  
                __size_of_ReadUSART 0038                              _RCSTA1 000FAB  
                            _OSCFIE 007D07                              _OSCFIF 007D0F  
                            _OSCCON 000FD3                              _OSCFIP 007D17  
                            _TBLPTR 000FF6                              _TMR0IE 007F95  
                            _SPBRG1 000FAF                              _TMR0IF 007F92  
                            _TMR1IE 007CE8                              _TMR1IF 007CF0  
                            _TMR1CS 007E69                              _TMR2IE 007CE9  
                            _TMR2IF 007CF1                              _TMR0IP 007F8A  
                            _PSSAC0 007DB2                              _PSSAC1 007DB3  
                            _TMR1IP 007CF8                              _PSSBD0 007DB0  
                            _PSSBD1 007DB1                              _TMR2IP 007CF9  
                            _TMR0ON 007EAF                              _SPBRGH 000FB0  
                            _TMR1ON 007E68                              _PLUSW0 000FEB  
                            _PLUSW1 000FE3                              _TMR2ON 007E52  
                            _PLUSW2 000FDB                              _NOT_CS 007C22  
                            _SSP1IE 007CEB                              _SSP1IF 007CF3  
                            _SSP2IE 007D1F                              _SSP2IF 007D27  
                            _NOT_PD 007E82                              _NOT_RD 007C20  
                            _SSP1IP 007CFB                              _WDTCON 000FD1  
                            _NOT_RI 007E84                              _SSP2IP 007D2F  
                            _NOT_TO 007E83                              _START1 007E3B  
                            _START2 007C3B                              _SOSCEN 007E6B  
                            _NOT_WR 007C21                              _SSPM01 007E30  
                            _SSPM02 007C30                              _SSPM11 007E31  
                            _SSPM12 007C31                              _SSPM21 007E32  
                            _SSPM22 007C32                              _SSPM31 007E33  
                            _SSPM32 007C33                              _SSPADD 000FC8  
                            _TRISA0 007C90                              _TRISA1 007C91  
                            _TRISB0 007C98                              _TRISA2 007C92  
                            _TRISB1 007C99                              _TRISA3 007C93  
                            _TRISC0 007CA0                              _TRISB2 007C9A  
                            _TRISC1 007CA1                              _TRISB3 007C9B  
                            _TRISA5 007C95                              _TRISD0 007CA8  
                            _TRISC2 007CA2                              _TRISB4 007C9C  
                            _TRISD1 007CA9                              _TRISC3 007CA3  
                            _TRISB5 007C9D                              _TRISE0 007CB0  
                            _TRISD2 007CAA                              _TRISC4 007CA4  
                            _TRISB6 007C9E                              _TRISE1 007CB1  
                            _TRISD3 007CAB                              _TRISC5 007CA5  
                            _TRISB7 007C9F                              _TRISE2 007CB2  
                            _TRISD4 007CAC                              _TRISC6 007CA6  
                            _TRISD5 007CAD                              _TRISC7 007CA7  
                            _SSPEN1 007E35                              _TRISD6 007CAE  
                            _SSPEN2 007C35                              _TRISD7 007CAF  
                            _STATUS 000FD8                              _STKFUL 007FE7  
                            _SSPBUF 000FC9                              _SWDTEN 007E88  
                            _STKOVF 007FE7                              _SSPOV1 007E36  
                            _SSPOV2 007C36                              _STKUNF 007FE6  
                            _STKPTR 000FFC      __size_of_start_i2c_slave_reply 00C0  
                            _TXREG1 000FAD                         ?i1_send_msg 000B  
                         ??_ReadADC 0003                              _TXSTA1 000FAC  
     __end_of_start_i2c_slave_reply 111E                  timer0_lthread@tptr 00B9  
           FromMainLow_recvmsg@data 008F                         ?i2_recv_msg 0080  
                         ??_OpenADC 00BC                        i2_in_low_int 19A0  
                       ?i2_send_msg 0080                      __CFG_XINST$OFF 000000  
                __size_of_OpenUSART 00B4                     _i2c_int_handler 1CB2  
 i2c_slave_int_handler@data_written 00A2                              _ic_ptr 0048  
                     main@msgbuffer 01B4                    __end_of_init_i2c 1910  
                  OpenTimer1@config 00B9                              _memcpy 1822  
                            clear_0 1B4A                              clear_1 1B56  
                            _uc_ptr 004A                              main@ic 01CD  
                            main@uc 01C6                    __end_of_recv_msg 0B44  
       start_i2c_slave_reply@length 0034                           ??_in_main 00BF  
                  __end_of_send_msg 0E90               timer0_int_handler@val 0095  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                         init_queue@i 00BC  
          ToMainLow_recvmsg@msgtype 01AF                __size_of_in_high_int 0014  
                       ?_ConvertADC 0001             FromMainLow_sendmsg@data 01AF  
                   __CFG_FOSC$HSPLL 000000                          __accesstop 0080  
           __end_of__initialization 1B6E          __end_of_ToMainHigh_recvmsg 1BA4  
        __end_of_ToMainHigh_sendmsg 1C8C         __end_of_init_timer1_lthread 176C  
               __end_of_SleepIfOkay 169A                      __pcstackCOMRAM 0001  
            __size_ofi2_in_high_int 000E                         ?_ReadTimer1 0001  
                __size_of_check_msg 0038                   __end_of_ReadUSART 1B10  
         timer0_int_handler@msgtype 0091                         ?_SetChanADC 00B9  
               __size_ofi1_send_msg 00B2                           ?i1_memcpy 0001  
     __size_of_InterruptHandlerHigh 1512         __end_of_InterruptHandlerLow 00D2  
                         ?i2_memcpy 0034                       _ToMainHigh_MQ 0136  
               __size_ofi2_recv_msg 0132                    _enter_sleep_mode 1DE2  
               __size_ofi2_send_msg 00FA                timer1_lthread@length 00BD  
                     ReadUSART@data 0001                   __end_of_OpenUSART 1288  
                     check_msg@qptr 00B9             ??_block_on_To_msgqueues 00BF  
              __size_of_init_queues 006E                          __pbssBANK0 00C5  
                        __pbssBANK1 0100                          __pbssBANK2 0200  
                       ?_OpenTimer1 00B9                          __pnvCOMRAM 0048  
           __end_of_i2c_int_handler 1CD8                        ?i2_check_msg 0034  
                timer1_lthread@tptr 00B9            ??_i2c_master_int_handler 0034  
                     _DATA_ADDRESS2 007C3D                   recv_msg@maxlength 01A4  
                   recv_msg@msgtype 01A5                     recv_msg@tlength 01AA  
                           _CCP1CON 000FBD                             _CCP2CON 000FBA  
             __size_of_handle_start 00A6                        ?_Delay1KTCYx 00B9  
                  WriteTimer0@timer 0036                             _ADMSK11 007E29  
                           _ADMSK12 007C29                             _ADMSK21 007E2A  
                           _ECCP1AS 000FB6                             _ADMSK22 007C2A  
                           _ADMSK31 007E2B                             _ADMSK32 007C2B  
                           _ADMSK41 007E2C                             _ADMSK42 007C2C  
                           _ADMSK51 007E2D                             _ADMSK52 007C2D  
                           ?_memcpy 00B9                             _BAUDCON 000FB8  
                           _ACKSTAT 007E2E                             _BAUDCTL 000FB8  
                  WriteTimer1@timer 0003                       ??_WriteTimer0 0036  
                     ??_WriteTimer1 0003                             _ECCPAS0 007DB4  
                           _ECCPAS1 007DB5                             _ECCPAS2 007DB6  
                           _ECCPASE 007DB7                 __size_of_ConvertADC 0004  
    __size_of_i2c_slave_int_handler 0634             __size_of_timer0_lthread 000A  
     __end_of_i2c_slave_int_handler 070A                             _T1CKPS0 007E6C  
                           _T1CKPS1 007E6D                             _T2CKPS0 007E50  
                           _T2CKPS1 007E51             __size_of_timer1_lthread 0026  
                           _T1OSCEN 007E6B                             i1l17040 1940  
                           i1l17041 1922                             i1l17042 1956  
                           i1l17043 1956                             i1l16422 1A22  
                           i1l19001 1A06                             i1l19011 1170  
                           i1l19003 111E                             i1l16419 1A9E  
                           i1l16452 1DCE                             i1l19013 1194  
                           i1l19005 1126                             i1l19021 005C  
                           i1l16543 1AF2                             i1l19007 114C  
                           i1l19015 11A8                             i1l19031 0076  
                           i1l19023 0064                             i1l16544 1AF2  
                           i1l16545 1AFC                             i1l19017 11B0  
                           i1l19009 115A                             i1l19033 007C  
                           i1l19025 0066                             i1l16546 1B06  
                           i1l16547 1B0E                             i1l19019 11B4  
                           i1l19035 0084                             i1l19027 006C  
                           i1l16492 1D90                             i1l19037 0086  
                           i1l19029 0074                             i1l16499 1DA2  
                           i1l17843 1D80                             i1l17845 1D92  
                           i1l18821 1AEE                             i1l17847 1DC4  
                           i1l18823 1AFA                             i1l18815 1AD8  
                           i1l17849 1DCE                             i1l18825 1B04  
                           i1l18817 1ADC                             i1l18827 1B0A  
                           i1l18819 1AE4                             i1l18941 1940  
                           i1l18933 1910                             i1l18829 1B0E  
                           i1l18935 1922                             i1l18937 1936  
                           i1l18961 12C0                             i1l18953 1288  
                           i1l18939 193A                             i1l18971 1328  
                           i1l18963 12C4                             i1l18955 128E  
                           i1l18973 1334                             i1l18965 12C6  
                           i1l18957 129E                             i1l18981 1A62  
                           i1l18975 1338                             i1l18967 12E6  
                           i1l18959 12AE                             i1l18991 19F0  
                           i1l18983 1A6E                             i1l18969 1306  
                           i1l18977 1CFE                             i1l18993 19F4  
                           i1l18985 1A76                             i1l18979 1D20  
                           i1l18995 19F8                             i1l18987 1A82  
                           i1l18997 1A00                             i1l18989 19E4  
                           i1l18999 1A04                             i2l17040 1988  
                           i2l17041 196A                             i2l17042 199E  
                           i2l17043 199E                             i2l16415 13E8  
                           i2l16416 13E8                             i2l18241 1630  
                           i2l19041 14C4                             i2l16466 1DB4  
                           i2l18251 1674                             i2l18243 1642  
                           i2l19051 14DC                             i2l19043 14C6  
                           i2l19301 02FA                             i2l18253 1676  
                           i2l18245 1644                             i2l18237 1624  
                           i2l19061 133A                             i2l19053 1CB2  
                           i2l19045 14CC                             _INTEDG0 007F8E  
                           i2l19231 1C32                             i2l19311 036C  
                           i2l19303 0326                             i2l18255 1692  
                           i2l18247 1656                             i2l18239 162E  
                           i2l19063 1352                             i2l19055 1CB4  
                           i2l19047 14D4                             i2l19039 14BC  
                           _INTEDG1 007F8D                             _INTEDG2 007F8C  
                           i2l19401 0EF2                             i2l19225 1C60  
                           i2l19321 03C4                             i2l19313 037A  
                           i2l19305 0334                             i2l19241 00D6  
                           i2l18257 1694                             i2l18249 1658  
                           i2l19065 135E                             i2l19057 1CBA  
                           i2l19049 14D6                             i2l19411 0F88  
                           i2l19403 0F22                             i2l19227 1C8A  
                           i2l19331 0432                             i2l19315 0382  
                           i2l19323 03F6                             i2l19307 0342  
                           i2l19251 0138                             i2l19243 0112  
                           i2l19067 13A4                             i2l19059 1CC2  
                           i2l19421 0BB2                             i2l19413 0B44  
                           i2l19405 0F4A                             i2l18621 105E  
                           i2l19229 1C04                             i2l19341 0494  
                           i2l19333 043A                             i2l19325 0404  
                           i2l19317 03A8                             i2l19309 035E  
                           i2l19261 0172                             i2l19253 0146  
                           i2l19245 011A                             i2l19237 1BD4  
                           i2l19069 13B6                             i2l19431 0C38  
                           i2l19423 0BB6                             i2l19415 0B5E  
                           i2l19407 0F78                             i2l18631 111A  
                           i2l18623 1070                             i2l19351 051C  
                           i2l19343 04A0                             i2l19335 0460  
                           i2l19319 03B6                             i2l19327 0416  
                           i2l19271 01CE                             i2l19263 0180  
                           i2l19247 011C                             i2l19255 0158  
                           i2l19239 1C02                             i2l19433 0C56  
                           i2l19425 0BB8                             i2l19441 0C6E  
                           i2l19417 0B80                             i2l19409 0F84  
                           i2l18801 0CCC                             i2l18641 1454  
                           i2l18633 13EA                             i2l18625 10BC  
                           i2l19361 058A                             i2l19353 0532  
                           i2l19337 0478                             i2l19345 04AE  
                           i2l19329 0424                             i2l19273 01DC  
                           i2l19281 0232                             i2l19265 018A  
                           i2l19257 0160                             i2l19249 012C  
                           i2l19451 1982                             i2l19443 0C72  
                           i2l19435 0C62                             i2l19427 0BDA  
                           i2l19419 0B92                             i2l18811 0D64  
                           i2l18803 0CF8                             i2l18643 1466  
                           i2l18635 140A                             i2l18627 10CC  
                           i2l19371 0618                             i2l19363 0598  
                           i2l19355 0538                             i2l19347 04E6  
                           i2l19339 0488                             i2l19291 0270  
                           i2l19283 0240                             i2l19275 01EA  
                           i2l19267 0192                             i2l19259 0164  
                           i2l19453 1988                             i2l19445 1958  
                           i2l19437 0C6A                             i2l19429 0C0A  
                           i2l18805 0D08                             i2l18813 0D66  
                           i2l18637 1414                             i2l18645 147C  
                           i2l18629 10EA                             i2l19381 06A8  
                           i2l19373 0634                             i2l19365 05DE  
                           i2l19357 054E                             i2l19293 0280  
                           i2l19285 024E                             i2l19277 01F2  
                           i2l19269 01A8                             i2l19349 04E8  
                           i2l19447 196A                             i2l19439 0C6C  
                           i2l19391 0E9E                             i2l18807 0D2C  
                           i2l18639 141C                             i2l19383 06D8  
                           i2l19375 063A                             i2l19367 05F6  
                           i2l19359 055A                             i2l19295 028C  
                           i2l19287 0256                             i2l19279 0200  
                           i2l19449 197E                             i2l19393 0EB8  
                           i2l18809 0D52                             i2l19385 06EC  
                           i2l19369 060C                             i2l19377 0656  
                           i2l19289 025E                             i2l19297 029C  
                           i2l18569 1DE2                             i2l18931 1CFC  
                           i2l19395 0EDA                             i2l18851 1DC2  
                           i2l19387 06FA                             i2l19379 066C  
                           i2l19299 02D2                             i2l19397 0EEC  
                           i2l19389 0E90                             i2l18861 19B6  
                           i2l18853 19A0                             i2l19399 0EF0  
                           i2l18871 19DE                             i2l18863 19C6  
                           i2l18855 19A8                             i2l18847 1DA4  
                           i2l18929 1CD8                             i2l18849 1DB6  
                           i2l18865 19D0                             i2l18857 19B2  
                           i2l18867 19D2                             i2l18859 19B4  
                           i2l18795 0C76                             i2l18869 19D4  
                           i2l18797 0C78                             i2l18799 0CA4  
                           _INTCON2 000FF1                          ??i1_memcpy 0007  
                           _INTCON3 000FF0                             _GO_DONE 007E11  
                        ??i2_memcpy 003A                             _TBLPTRH 000FF7  
                           _TBLPTRL 000FF6                             _PREINC0 000FEC  
                           _PREINC1 000FE4                             _PREINC2 000FDC  
                           _TBLPTRU 000FF8                             _OSCTUNE 000F9B  
                           _PWM1CON 000FB7                    i1send_msg@length 000D  
                           _SSP1ADD 000FC8                             _SSP2ADD 000F88  
                           _NOT_BOR 007E80                             _NOT_RC8 007D5E  
                           _SSP1BUF 000FC9                             _SSP2BUF 000F8E  
                           _NOT_SS1 007C05                             _NOT_SS2 007C1B  
                           _NOT_POR 007E81                             _NOT_TX8 007D66  
                           _PSPMODE 007CB4                       i2_in_high_int 1DB6  
                           _SSPCON1 000FC6                             _SSPCON2 000FC5  
                           _STKPTR0 007FE0                             _STKPTR1 007FE1  
                           _STKPTR2 007FE2                             _STKPTR3 007FE3  
                           _STKPTR4 007FE4                             _ULPWUIN 007C00  
                           _SSPSTAT 000FC7                             _TOUTPS0 007E53  
                           _TOUTPS1 007E54                             _TOUTPS2 007E55  
                           _TOUTPS3 007E56                 __size_of_ReadTimer1 0012  
                 __end_of_check_msg 1AD8                           _I2C_READ2 007C3A  
                         _I2C_STOP2 007C3C                           ?_init_i2c 00B9  
                       _SleepIfOkay 1624                             _i2cMode 00C6  
                           _ReadADC 1DC4                           ?_recv_msg 01A2  
                           _OpenADC 15A0                          _in_low_int 176C  
                      _handle_start 13EA                             __Hparam 0000  
               __size_of_SetChanADC 001C                             _nT1SYNC 007E6A  
                         ?_send_msg 01A2                             __Lparam 0000  
        __end_of_timer0_int_handler 13EA         __end_of_FromMainLow_recvmsg 1C34  
       __end_of_FromMainLow_sendmsg 1C60                    init_uart_recv@uc 00B9  
                           _nWRITE2 007C3A                           _CMCONbits 000FB4  
                   __CFG_STVREN$OFF 000000  i2c_slave_int_handler@overrun_error 00A3  
                           __pcinit 1B44                     __size_of_memcpy 0056  
          __size_of_adc_int_handler 0040                          _init_queue 151A  
                           __ramtop 0400                 __size_of_OpenTimer1 003E  
                           __ptext0 070A                             __ptext1 1DDA  
                           __ptext2 1D3E                             __ptext3 18C6  
                           __ptext4 1708                             __ptext5 169A  
                           __ptext6 1A24                             __ptext7 1B10  
                           __ptext8 11D4                             __ptext9 0F8A  
                         _T0CONbits 000FD5                             _in_main 17CA  
                         _T1CONbits 000FCD                           _T2CONbits 000FCA  
               __end_of_WriteTimer0 1DB6                 __end_of_WriteTimer1 1DA4  
                    ?i2_in_high_int 0034                      OpenADC@config2 00BA  
                    __pintcode_body 1490        __end_of_FromMainHigh_recvmsg 1C04  
              end_of_initialization 1B6E             timer1_lthread@msgbuffer 00BF  
                         _PEIE_GIEL 007F96      __size_of_uart_recv_int_handler 00B6  
                           memcpy@d 00BF                             memcpy@n 00BD  
                           memcpy@s 00C1       __end_of_uart_recv_int_handler 11D4  
                        ??_init_i2c 00BB                             int_func 1490  
                      ??i1_send_msg 0011                       ?_uart_lthread 00B9  
           __size_of_init_uart_recv 001A                    ?_i2c_int_handler 0001  
                      ??i2_recv_msg 003E                          ??_recv_msg 00C3  
                      ??i2_send_msg 003E                          ??_send_msg 00C3  
              adc_int_handler@value 0021     __size_of_i2c_master_int_handler 0114  
        __end_of_timer1_int_handler 1AA0                           _RCSTAbits 000FAB  
                           postdec2 000FDD                             postinc0 000FEE  
                           postinc2 000FDE           ToMainHigh_sendmsg@msgtype 008C  
                         _PORTAbits 000F80                           _PORTBbits 000F81  
                         _PORTCbits 000F82                           _PORTDbits 000F83  
                         _PORTEbits 000F84                  __end_ofi1_send_msg 133A  
                         _TRISAbits 000F92                           _TRISBbits 000F93  
                         _TRISCbits 000F94                           _TRISDbits 000F95  
                         _TRISEbits 000F96                  __end_ofi2_recv_msg 0C76  
                __end_ofi2_send_msg 0F8A                        ??_ConvertADC 00B9  
                       _adcMsgCount 0047                           _CapStatus 0044  
     FromMainHigh_recvmsg@maxlength 008C            timer1_int_handler@result 001F  
                    ??_uart_lthread 00C1                         _CCP1CONbits 000FBD  
                       _CCP2CONbits 000FBA                           _TXSTAbits 000FAC  
                        main@length 01CB                         ?_in_low_int 00BB  
             timer0_lthread@msgtype 00BB               _start_i2c_slave_reply 105E  
      __size_of_i2c_configure_slave 0034                __size_ofi2_check_msg 0026  
          __end_of_enter_sleep_mode 1DE8                        ??_ReadTimer1 0003  
                       _ECCP1ASbits 000FB6                  _ToMainHigh_recvmsg 1B74  
                         i1memcpy@d 0007                  _ToMainHigh_sendmsg 1C60  
                         i1memcpy@n 0005                           i1memcpy@s 0009  
                       _BAUDCONbits 000FB8                      _timer0_lthread 1DD0  
                       ?_init_queue 00B9                           i2memcpy@d 003A  
                       _BAUDCTLbits 000FB8                         _WriteTimer0 1DA4  
                       _WriteTimer1 1D92                           i2memcpy@n 0038  
                         i2memcpy@s 003C                  __end_of_ConvertADC 1DEC  
                    _timer1_lthread 1C8C                      __end_of_memcpy 1878  
                 _enable_interrupts 1DDA                __size_of_Delay1KTCYx 0014  
                         _nADDRESS2 007C3D                        ??_SetChanADC 00BA  
               ?_ToMainHigh_recvmsg 01AE                     ??i2_in_high_int 0036  
               ?_ToMainHigh_sendmsg 008B                  ?_enable_interrupts 0001  
               start_initialization 1B44              _i2c_master_int_handler 0C76  
                     ??_in_high_int 00BB                           _ReadUSART 1AD8  
                 ??_adc_int_handler 001B                   __size_ofi1_memcpy 0048  
                 __size_ofi2_memcpy 0048           FromMainLow_sendmsg@length 01AD  
               ??_enable_interrupts 00B9                        ??_OpenTimer1 00BA  
    __size_of_block_on_To_msgqueues 00D4                  __end_of_ReadTimer1 1D92  
     __end_of_block_on_To_msgqueues 105E                           _OpenUSART 11D4  
      __end_of_InterruptHandlerHigh 151A                          init_i2c@ic 00B9  
              ??_ToMainHigh_recvmsg 00C5                ??_ToMainHigh_sendmsg 003F  
                __end_of_SetChanADC 1D3E              __end_of_timer0_lthread 1DDA  
            __end_of_timer1_lthread 1CB2           __end_of_enable_interrupts 1DE2  
                          ??_memcpy 00BF               timer1_lthread@msgtype 00BB  
              _FromMainHigh_recvmsg 1BD4        __size_of_init_timer1_lthread 0064  
                __end_of_OpenTimer1 1A62                         __pbssCOMRAM 0042  
            timer1_int_handler@temp 001D                          ?_ReadUSART 0001  
                     ??_init_queues 00BD                       __pcstackBANK0 0080  
                     __pcstackBANK1 01A2                 __size_of_in_low_int 005E  
          start_i2c_slave_reply@msg 0035                 __CFG_CCP2MX$DEFAULT 000000  
                   Delay1KTCYx@unit 00B9            ToMainLow_sendmsg@msgtype 0018  
      __size_of_InterruptHandlerLow 00BA      i2c_slave_int_handler@data_read 00AA  
               __end_of_in_high_int 1D6C                          ?_OpenUSART 00B9  
                      ?_SleepIfOkay 0001               ToMainLow_recvmsg@data 01B1  
                      _ToMainLow_MQ 016C                 __size_of_init_queue 0086  
                    _init_uart_recv 1D3E                            ?_ReadADC 0001  
                         _check_msg 1AA0              ?_start_i2c_slave_reply 0034  
                 __size_of_init_i2c 004A                   OpenADC@portconfig 00BB  
                          ?_OpenADC 00B9                        recv_msg@data 01A7  
                      recv_msg@qmsg 01AC                        recv_msg@slot 01A9  
                      recv_msg@qptr 01A2                   __size_of_recv_msg 0140  
                         __pintcode 0008                   __size_of_send_msg 0106  
                   ?_timer0_lthread 00B9               ?_FromMainHigh_recvmsg 008C  
                   ?_timer1_lthread 00B9                         __pintcodelo 0018  
            ToMainHigh_recvmsg@data 01B1                __end_of_uart_lthread 18C6  
                          _I2C_DAT2 007C3D                            ?_in_main 00BD  
                 WriteTimer0@timer0 0034                            _ECCP1DEL 000FB7  
                          _ECCP1CON 000FBD                            _CCP2_PA2 007C0B  
                          _ACKSTAT1 007E2E                            _ACKSTAT2 007C2E  
                _timer0_int_handler 133A                   WriteTimer1@timer1 0001  
             _i2c_slave_int_handler 00D6                 uart_lthread@msgtype 00BB  
    i2c_slave_int_handler@error_buf 009F               ToMainLow_sendmsg@data 0019  
                          _DDRAbits 000F92                            _DDRBbits 000F93  
                          _DDRCbits 000F94                            _DDRDbits 000F95  
                          _DDREbits 000F96                 ?_timer0_int_handler 0001  
                          _GIE_GIEH 007F97                            _T1INSYNC 007E6A  
                  uart_lthread@uptr 00B9      i2c_slave_int_handler@msg_ready 00A9  
            __end_of_init_uart_recv 1D58                 __end_of_init_queues 1708  
                          _NEGATIVE 007EC4         i2c_slave_int_handler@length 00A4  
                          _T2OUTPS0 007E53                            _T2OUTPS1 007E54  
                          _T2OUTPS2 007E55                            _T2OUTPS3 007E56  
                     OpenADC@config 00B9                            _LATAbits 000F89  
                          _LATBbits 000F8A                            _LATCbits 000F8B  
                          _LATDbits 000F8C                            _LATEbits 000F8D  
                   i2check_msg@qptr 0034                          ?_check_msg 00B9  
                          _IPR1bits 000F9F                            _IPR2bits 000FA2  
                          _PIE1bits 000F9D                            _IPR3bits 000FA5  
                          _PIE2bits 000FA0                            _PIE3bits 000FA3  
                     ?i2_in_low_int 0036                            i1u190_20 1170  
                          i1u190_21 116E                            i2u110_40 162C  
                          i2u110_41 162A                            i1u191_20 11B0  
                          i1u191_21 11AE                            i2u111_40 1640  
                          i2u111_41 163E                            i1u176_20 1AE4  
                          i1u192_20 0064                            i1u176_21 1AE2  
                          i1u192_21 0062                            i2u112_40 1654  
                          i2u112_41 1652                            i1u177_20 1AEE  
                          i1u193_20 0074                            i1u177_21 1AEC  
                          i1u193_21 0072                            i2u113_40 1672  
                          i2u113_41 1670                            i1u186_20 1954  
                          i1u178_20 1AFA                            i1u194_20 0084  
                          i1u186_21 1952                            i1u178_21 1AF8  
                          i1u194_21 0082                            i2u210_40 01CE  
                          i2u114_40 1690                            i2u210_41 01CC  
                          i2u114_41 168E                            i1u179_20 1B04  
                          i1u179_21 1B02                            i2u211_40 01EA  
                          i2u211_41 01E8                            i1u188_20 12C0  
                          i1u188_21 12BE                            i2u220_40 0424  
                          i2u212_40 01F2                            i2u220_41 0422  
                          i2u212_41 01F0                            i1u189_20 1126  
                          i1u189_21 1124                            i2u221_40 043A  
                          i2u213_40 0240                            i2u205_40 011A  
                          i2u221_41 0438                            i2u213_41 023E  
                          i2u205_41 0118                            i2u230_40 066C  
                          i2u222_40 0478                            i2u214_40 0256  
                          i2u206_40 0160                            i2u230_41 066A  
                          i2u222_41 0476                            i2u214_41 0254  
                          i2u206_41 015E                            i2u143_40 10E8  
                          i2u231_40 06FA                            i2u223_40 051C  
                          i2u215_40 025E                            i2u207_40 017E  
                          i2u143_41 10E6                            i2u231_41 06F8  
                          i2u223_41 051A                            i2u215_41 025C  
                          i2u207_41 017C                            i2u232_40 0EEC  
                          i2u144_40 1414                            i2u224_40 052A  
                          i2u216_40 02FA                            i2u208_40 018A  
                          i2u232_41 0EEA                            i2u144_41 1412  
                          i2u224_41 0528                            i2u216_41 02F8  
                          i2u208_41 0188                            i2u233_40 0B92  
                          i2u145_40 141C                            i2u225_40 0532  
                          i2u217_40 035E                            i2u209_40 01A8  
                          i2u233_41 0B90                            i2u145_41 141A  
                          i2u225_41 0530                            i2u217_41 035C  
                          i2u209_41 01A6                            i2u234_40 0BB2  
                          i2u146_40 1454                            i2u226_40 054E  
                          i2u218_40 037A                            i2u234_41 0BB0  
                          i2u146_41 1452                            i2u226_41 054C  
                          i2u218_41 0378                            i2u235_40 199C  
                          i2u227_40 055A                            i2u219_40 0382  
                          i2u235_41 199A                            i2u227_41 0558  
                          i2u219_41 0380                            i2u228_40 0598  
                          i2u228_41 0596                            i2u181_40 19A8  
                          i2u229_40 05F6                            i2u181_41 19A6  
                          i2u229_41 05F4                            i2u182_40 19C6  
                          i2u174_40 0CA4                            i2u182_41 19C4  
                          i2u174_41 0CA2                            i2u175_40 0CCC  
                          i2u175_41 0CCA                            _PIR1bits 000F9E  
                          i2u195_40 14C4                            i2u195_41 14C2  
                          _PIR2bits 000FA1                            i2u196_40 14D4  
                          i2u196_41 14D2                            i2u197_40 1344  
                          i2u197_41 1340                            _PIR3bits 000FA4  
                          i2u197_46 1346                            i2u198_40 13B6  
                          i2u198_41 13B4              ToMainHigh_sendmsg@data 008D  
                          _GO_nDONE 007E11                            _RCONbits 000FD0  
                  __CFG_WDTPS$32768 000000                            _OVERFLOW 007EC3  
                          _POSTDEC0 000FED                            _POSTDEC1 000FE5  
                          _POSTDEC2 000FDD                            _NOT_DONE 007E11  
                          _SSP1CON1 000FC6                            _SSP1CON2 000FC5  
                          _SSP2CON1 000F86                            _SSP2CON2 000F85  
                          _POSTINC0 000FEE                            _POSTINC1 000FE6  
                          _POSTINC2 000FDE                            _NOT_RBPU 007F8F  
              ??_timer0_int_handler 0040                            _SSP1STAT 000FC7  
                          _SSP2STAT 000F87        FromMainLow_recvmsg@maxlength 008C  
        __size_of_enable_interrupts 0008                   i1send_msg@msgtype 000E  
                 i1send_msg@tlength 0012          FromMainLow_recvmsg@msgtype 008D  
                        _ADCON0bits 000FC2                          _ADCON1bits 000FC1  
                        _ADCON2bits 000FC0        __size_of_FromMainLow_recvmsg 0030  
      __size_of_FromMainLow_sendmsg 002C                timer0_lthread@length 00BD  
                _timer1_int_handler 1A62                            i1_memcpy 1910  
              _InterruptHandlerHigh 0008                         ??_ReadUSART 0001  
                          i2_memcpy 1958                timer0_lthread@msgval 00C1  
          FromMainHigh_recvmsg@data 008F                          _I2C_START2 007C3B  
                       _in_high_int 1D58                        send_msg@data 01A6  
               _i2c_configure_slave 1B10                        send_msg@qmsg 01AB  
                      send_msg@slot 01AA                        send_msg@qptr 01A2  
                       _INTCON2bits 000FF1                         _INTCON3bits 000FF0  
             uart_lthread@msgbuffer 00BF                 ?_timer1_int_handler 0001  
                   ?_init_uart_recv 00B9                         ??_OpenUSART 00BC  
                   OpenUSART@config 00B9                          _EECON1bits 000FA6  
                    ??i2_in_low_int 0038               _uart_recv_int_handler 111E  
                      ??_in_low_int 00BD                    __size_of_ReadADC 000C  
                       _READ_WRITE2 007C3A                            __Hrparam 0000  
                  __size_of_OpenADC 0084                ?_i2c_configure_slave 00B9  
                          __Lrparam 0000                   ?_enter_sleep_mode 0001  
            ??_FromMainHigh_recvmsg 0040                ??_timer1_int_handler 001B  
                   _adc_int_handler 19E4            __size_of_i2c_int_handler 0026  
                ??_enter_sleep_mode 0034                        ??_init_queue 00BB  
                      ?_WriteTimer0 0034                        ?_WriteTimer1 0001  
           ToMainLow_sendmsg@length 0017             ?_i2c_master_int_handler 0001  
            ?_i2c_slave_int_handler 0001                   main@t0thread_data 01C1  
             ?_InterruptHandlerHigh 0001                         _GO_NOT_DONE 007E11  
                  __size_of_in_main 0058                   i2send_msg@msgtype 0083  
       ToMainHigh_recvmsg@maxlength 01AE                   i2send_msg@tlength 0086  
           init_timer1_lthread@tptr 00BE                         _init_queues 169A  
                __end_of_in_low_int 17CA                            __ptext10 17CA  
                          __ptext11 176C                            __ptext20 0D8A  
                          __ptext12 1D58                            __ptext21 0A04  
                          __ptext13 1B74                            __ptext30 19E4  
                          __ptext22 1822                            __ptext14 1DD0  
                          __ptext31 111E                            __ptext23 1AA0  
                          __ptext15 1BA4                            __ptext40 1CB2  
                          __ptext32 1CFE                            __ptext24 1D6C  
                          __ptext16 1C8C                            __ptext41 133A  
                          __ptext33 1AD8                            __ptext25 15A0  
                          __ptext17 1C34                            __ptext50 0C76  
                          __ptext42 1624                            __ptext34 1D80  
                          __ptext26 1D22                            __ptext18 1878  
                          __ptext51 1DA4                            __ptext43 1BD4  
                          __ptext35 1D92                            __ptext27 1DE8  
                          __ptext19 151A                            __ptext52 19A0  
                          __ptext44 1DE2                            __ptext36 1DC4  
                          __ptext53 1DB6                            __ptext45 00D6  
                          __ptext37 1288                            __ptext29 1A62  
                          __ptext54 0E90                            __ptext46 1C60  
                          __ptext38 1910                            __ptext55 0B44  
                          __ptext47 1C04                            __ptext56 1CD8  
                          __ptext48 105E                            __ptext57 1958  
                          __ptext49 13EA                            __ptext58 0000  
                      _SSP1CON1bits 000FC6                        _SSP1CON2bits 000FC5  
                    i1send_msg@data 000F                        _SSP2CON1bits 000F86  
                      _SSP2CON2bits 000F85                      i1send_msg@qmsg 0015  
                    i1send_msg@slot 0014                      i1send_msg@qptr 000B  
                uart_lthread@length 00BD            timer0_int_handler@length 0093  
                          _init_i2c 18C6                 _init_timer1_lthread 1708  
                     __size_of_main 02FA              adc_int_handler@message 001D  
                     ??i2_check_msg 0036                   main@t1thread_data 01C4  
                       ??_check_msg 00BB                  __end_of_init_queue 15A0  
              __size_of_SleepIfOkay 0076                            _recv_msg 0A04  
  i2c_slave_int_handler@msg_to_send 00A8               ??_i2c_configure_slave 00BA  
                          _send_msg 0D8A                      init_queue@qptr 00B9  
                        _CVRCONbits 000FB5               __size_of_uart_lthread 004E  
                    i2recv_msg@data 0085                      i2recv_msg@qmsg 008A  
                     ??_Delay1KTCYx 00BA                      i2recv_msg@slot 0087  
                    i2recv_msg@qptr 0080      __end_of_i2c_master_int_handler 0D8A  
                      _SSP1STATbits 000FC7                 _InterruptHandlerLow 0018  
              ?_init_timer1_lthread 00BE                        _SSP2STATbits 000F87  
                       _OSCTUNEbits 000F9B                          _INTCONbits 000FF2  
                       _PWM1CONbits 000FB7                      OpenUSART@spbrg 00BA  
                          memcpy@d1 00B9                            memcpy@s1 00BB  
             __end_ofi2_in_high_int 1DC4                    i2send_msg@length 0082  
                          intlevel1 0000                            intlevel2 0000  
              ?_InterruptHandlerLow 0001             ??_start_i2c_slave_reply 0037  
                       _SSP1ADDbits 000FC8                         _SSP2ADDbits 000F88  
            ?_uart_recv_int_handler 0001                        _uart_lthread 1878  
                 SetChanADC@channel 00B9                          _RCSTA1bits 000FAB  
             _block_on_To_msgqueues 0F8A                       ?_handle_start 0034  
                  ??_timer0_lthread 00C1         __size_of_ToMainHigh_recvmsg 0030  
           __end_of_adc_int_handler 1A24         __size_of_ToMainHigh_sendmsg 002C  
                        _OSCCONbits 000FD3                    ??_timer1_lthread 00C1  
          ToMainHigh_sendmsg@length 008B                 __end_ofi2_check_msg 1CFE  
             ??_init_timer1_lthread 00C0              ??_InterruptHandlerHigh 00AB  
                 _ToMainLow_recvmsg 1BA4                   _ToMainLow_sendmsg 1CFE  
                main@last_reg_recvd 01C3                          _NOT_T1SYNC 007E6A  
              __end_ofi2_in_low_int 19E4                  ?_ToMainLow_recvmsg 01AE  
               __end_of_Delay1KTCYx 1D80                   ??_i2c_int_handler 0042  
                ?_ToMainLow_sendmsg 0017                         _SSPCON1bits 000FC6  
                       _SSPCON2bits 000FC5                          _WDTCONbits 000FD1  
                    i2send_msg@data 0084               ??_InterruptHandlerLow 0023  
               ??_ToMainLow_recvmsg 00C5                      i2send_msg@qmsg 0089  
                    i2send_msg@slot 0088                      i2send_msg@qptr 0080  
               ??_ToMainLow_sendmsg 001B       i2c_slave_int_handler@i2c_data 00A6  
                        _SSPADDbits 000FC8                          _STATUSbits 000FD8  
               _FromMainLow_recvmsg 1C04                      ??_handle_start 0035  
               _FromMainLow_sendmsg 1C34                        _USART_Status 0046  
