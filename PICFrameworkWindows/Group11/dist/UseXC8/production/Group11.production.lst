

Microchip Technology PIC18 LITE Macro Assembler V1.10 build 47796 
                                                                                               Mon Sep 24 02:02:31 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 47796
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 47796"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	18F45J10
     8  0000                     porta	equ	0F80h
     9  0000                     portb	equ	0F81h
    10  0000                     portc	equ	0F82h
    11  0000                     portd	equ	0F83h
    12  0000                     porte	equ	0F84h
    13  0000                     lata	equ	0F89h
    14  0000                     latb	equ	0F8Ah
    15  0000                     latc	equ	0F8Bh
    16  0000                     latd	equ	0F8Ch
    17  0000                     late	equ	0F8Dh
    18  0000                     trisa	equ	0F92h
    19  0000                     trisb	equ	0F93h
    20  0000                     trisc	equ	0F94h
    21  0000                     trisd	equ	0F95h
    22  0000                     trise	equ	0F96h
    23  0000                     pie1	equ	0F9Dh
    24  0000                     pir1	equ	0F9Eh
    25  0000                     ipr1	equ	0F9Fh
    26  0000                     pie2	equ	0FA0h
    27  0000                     pir2	equ	0FA1h
    28  0000                     ipr2	equ	0FA2h
    29  0000                     t3con	equ	0FB1h
    30  0000                     tmr3l	equ	0FB2h
    31  0000                     tmr3h	equ	0FB3h
    32  0000                     ccp1con	equ	0FBDh
    33  0000                     ccpr1l	equ	0FBEh
    34  0000                     ccpr1h	equ	0FBFh
    35  0000                     adcon1	equ	0FC1h
    36  0000                     adcon0	equ	0FC2h
    37  0000                     adresl	equ	0FC3h
    38  0000                     adresh	equ	0FC4h
    39  0000                     sspcon2	equ	0FC5h
    40  0000                     sspcon1	equ	0FC6h
    41  0000                     sspstat	equ	0FC7h
    42  0000                     sspadd	equ	0FC8h
    43  0000                     sspbuf	equ	0FC9h
    44  0000                     t2con	equ	0FCAh
    45  0000                     pr2	equ	0FCBh
    46  0000                     tmr2	equ	0FCCh
    47  0000                     t1con	equ	0FCDh
    48  0000                     tmr1l	equ	0FCEh
    49  0000                     tmr1h	equ	0FCFh
    50  0000                     rcon	equ	0FD0h
    51  0000                     wdtcon	equ	0FD1h
    52  0000                     lvdcon	equ	0FD2h
    53  0000                     osccon	equ	0FD3h
    54  0000                     t0con	equ	0FD5h
    55  0000                     tmr0l	equ	0FD6h
    56  0000                     tmr0h	equ	0FD7h
    57  0000                     status	equ	0FD8h
    58  0000                     fsr2	equ	0FD9h
    59  0000                     fsr2l	equ	0FD9h
    60  0000                     fsr2h	equ	0FDAh
    61  0000                     plusw2	equ	0FDBh
    62  0000                     preinc2	equ	0FDCh
    63  0000                     postdec2	equ	0FDDh
    64  0000                     postinc2	equ	0FDEh
    65  0000                     indf2	equ	0FDFh
    66  0000                     bsr	equ	0FE0h
    67  0000                     fsr1	equ	0FE1h
    68  0000                     fsr1l	equ	0FE1h
    69  0000                     fsr1h	equ	0FE2h
    70  0000                     plusw1	equ	0FE3h
    71  0000                     preinc1	equ	0FE4h
    72  0000                     postdec1	equ	0FE5h
    73  0000                     postinc1	equ	0FE6h
    74  0000                     indf1	equ	0FE7h
    75  0000                     wreg	equ	0FE8h
    76  0000                     fsr0	equ	0FE9h
    77  0000                     fsr0l	equ	0FE9h
    78  0000                     fsr0h	equ	0FEAh
    79  0000                     plusw0	equ	0FEBh
    80  0000                     preinc0	equ	0FECh
    81  0000                     postdec0	equ	0FEDh
    82  0000                     postinc0	equ	0FEEh
    83  0000                     indf0	equ	0FEFh
    84  0000                     intcon3	equ	0FF0h
    85  0000                     intcon2	equ	0FF1h
    86  0000                     intcon	equ	0FF2h
    87  0000                     prod	equ	0FF3h
    88  0000                     prodl	equ	0FF3h
    89  0000                     prodh	equ	0FF4h
    90  0000                     tablat	equ	0FF5h
    91  0000                     tblptr	equ	0FF6h
    92  0000                     tblptrl	equ	0FF6h
    93  0000                     tblptrh	equ	0FF7h
    94  0000                     tblptru	equ	0FF8h
    95  0000                     pcl	equ	0FF9h
    96  0000                     pclat	equ	0FFAh
    97  0000                     pclath	equ	0FFAh
    98  0000                     pclatu	equ	0FFBh
    99  0000                     stkptr	equ	0FFCh
   100  0000                     tosl	equ	0FFDh
   101  0000                     tosh	equ	0FFEh
   102  0000                     tosu	equ	0FFFh
   103                           skipnz macro
   104                           	btfsc	status,2
   105  0000                     	endm
   106                           	global	__ramtop
   107                           	global	__accesstop
   108                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   109  0000                     PORTA equ 0F80h ;# 
   110                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   111  0000                     PORTB equ 0F81h ;# 
   112                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   113  0000                     PORTC equ 0F82h ;# 
   114                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   115  0000                     PORTD equ 0F83h ;# 
   116                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   117  0000                     PORTE equ 0F84h ;# 
   118                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   119  0000                     SSP2CON2 equ 0F85h ;# 
   120                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   121  0000                     SSP2CON1 equ 0F86h ;# 
   122                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   123  0000                     SSP2STAT equ 0F87h ;# 
   124                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   125  0000                     SSP2ADD equ 0F88h ;# 
   126                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   127  0000                     LATA equ 0F89h ;# 
   128                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   129  0000                     LATB equ 0F8Ah ;# 
   130                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   131  0000                     LATC equ 0F8Bh ;# 
   132                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   133  0000                     LATD equ 0F8Ch ;# 
   134                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   135  0000                     LATE equ 0F8Dh ;# 
   136                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   137  0000                     SSP2BUF equ 0F8Eh ;# 
   138                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   139  0000                     TRISA equ 0F92h ;# 
   140                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   141  0000                     DDRA equ 0F92h ;# 
   142                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   143  0000                     TRISB equ 0F93h ;# 
   144                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   145  0000                     DDRB equ 0F93h ;# 
   146                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   147  0000                     TRISC equ 0F94h ;# 
   148                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   149  0000                     DDRC equ 0F94h ;# 
   150                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   151  0000                     TRISD equ 0F95h ;# 
   152                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   153  0000                     DDRD equ 0F95h ;# 
   154                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   155  0000                     TRISE equ 0F96h ;# 
   156                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   157  0000                     DDRE equ 0F96h ;# 
   158                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   159  0000                     OSCTUNE equ 0F9Bh ;# 
   160                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   161  0000                     PIE1 equ 0F9Dh ;# 
   162                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   163  0000                     PIR1 equ 0F9Eh ;# 
   164                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   165  0000                     IPR1 equ 0F9Fh ;# 
   166                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   167  0000                     PIE2 equ 0FA0h ;# 
   168                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   169  0000                     PIR2 equ 0FA1h ;# 
   170                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   171  0000                     IPR2 equ 0FA2h ;# 
   172                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   173  0000                     PIE3 equ 0FA3h ;# 
   174                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   175  0000                     PIR3 equ 0FA4h ;# 
   176                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   177  0000                     IPR3 equ 0FA5h ;# 
   178                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   179  0000                     EECON1 equ 0FA6h ;# 
   180                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   181  0000                     EECON2 equ 0FA7h ;# 
   182                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   183  0000                     RCSTA equ 0FABh ;# 
   184                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   185  0000                     RCSTA1 equ 0FABh ;# 
   186                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   187  0000                     TXSTA equ 0FACh ;# 
   188                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   189  0000                     TXSTA1 equ 0FACh ;# 
   190                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   191  0000                     TXREG equ 0FADh ;# 
   192                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   193  0000                     TXREG1 equ 0FADh ;# 
   194                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   195  0000                     RCREG equ 0FAEh ;# 
   196                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   197  0000                     RCREG1 equ 0FAEh ;# 
   198                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   199  0000                     SPBRG equ 0FAFh ;# 
   200                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   201  0000                     SPBRG1 equ 0FAFh ;# 
   202                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   203  0000                     SPBRGH equ 0FB0h ;# 
   204                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   205  0000                     CMCON equ 0FB4h ;# 
   206                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   207  0000                     CVRCON equ 0FB5h ;# 
   208                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   209  0000                     ECCP1AS equ 0FB6h ;# 
   210                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   211  0000                     ECCP1DEL equ 0FB7h ;# 
   212                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   213  0000                     PWM1CON equ 0FB7h ;# 
   214                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   215  0000                     BAUDCON equ 0FB8h ;# 
   216                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   217  0000                     BAUDCTL equ 0FB8h ;# 
   218                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   219  0000                     CCP2CON equ 0FBAh ;# 
   220                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   221  0000                     CCPR2 equ 0FBBh ;# 
   222                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   223  0000                     CCPR2L equ 0FBBh ;# 
   224                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   225  0000                     CCPR2H equ 0FBCh ;# 
   226                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   227  0000                     ECCP1CON equ 0FBDh ;# 
   228                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   229  0000                     CCP1CON equ 0FBDh ;# 
   230                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   231  0000                     CCPR1 equ 0FBEh ;# 
   232                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   233  0000                     CCPR1L equ 0FBEh ;# 
   234                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   235  0000                     CCPR1H equ 0FBFh ;# 
   236                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   237  0000                     ADCON2 equ 0FC0h ;# 
   238                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   239  0000                     ADCON1 equ 0FC1h ;# 
   240                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   241  0000                     ADCON0 equ 0FC2h ;# 
   242                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   243  0000                     ADRES equ 0FC3h ;# 
   244                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   245  0000                     ADRESL equ 0FC3h ;# 
   246                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   247  0000                     ADRESH equ 0FC4h ;# 
   248                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   249  0000                     SSPCON2 equ 0FC5h ;# 
   250                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   251  0000                     SSP1CON2 equ 0FC5h ;# 
   252                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   253  0000                     SSPCON1 equ 0FC6h ;# 
   254                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   255  0000                     SSP1CON1 equ 0FC6h ;# 
   256                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   257  0000                     SSPSTAT equ 0FC7h ;# 
   258                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   259  0000                     SSP1STAT equ 0FC7h ;# 
   260                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   261  0000                     SSPADD equ 0FC8h ;# 
   262                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   263  0000                     SSP1ADD equ 0FC8h ;# 
   264                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   265  0000                     SSPBUF equ 0FC9h ;# 
   266                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   267  0000                     SSP1BUF equ 0FC9h ;# 
   268                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   269  0000                     T2CON equ 0FCAh ;# 
   270                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   271  0000                     PR2 equ 0FCBh ;# 
   272                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   273  0000                     MEMCON equ 0FCBh ;# 
   274                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   275  0000                     TMR2 equ 0FCCh ;# 
   276                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   277  0000                     T1CON equ 0FCDh ;# 
   278                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   279  0000                     TMR1 equ 0FCEh ;# 
   280                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   281  0000                     TMR1L equ 0FCEh ;# 
   282                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   283  0000                     TMR1H equ 0FCFh ;# 
   284                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   285  0000                     RCON equ 0FD0h ;# 
   286                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   287  0000                     WDTCON equ 0FD1h ;# 
   288                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   289  0000                     OSCCON equ 0FD3h ;# 
   290                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   291  0000                     T0CON equ 0FD5h ;# 
   292                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   293  0000                     TMR0 equ 0FD6h ;# 
   294                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   295  0000                     TMR0L equ 0FD6h ;# 
   296                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   297  0000                     TMR0H equ 0FD7h ;# 
   298                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   299  0000                     STATUS equ 0FD8h ;# 
   300                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   301  0000                     FSR2 equ 0FD9h ;# 
   302                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   303  0000                     FSR2L equ 0FD9h ;# 
   304                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   305  0000                     FSR2H equ 0FDAh ;# 
   306                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   307  0000                     PLUSW2 equ 0FDBh ;# 
   308                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   309  0000                     PREINC2 equ 0FDCh ;# 
   310                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   311  0000                     POSTDEC2 equ 0FDDh ;# 
   312                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   313  0000                     POSTINC2 equ 0FDEh ;# 
   314                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   315  0000                     INDF2 equ 0FDFh ;# 
   316                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   317  0000                     BSR equ 0FE0h ;# 
   318                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   319  0000                     FSR1 equ 0FE1h ;# 
   320                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   321  0000                     FSR1L equ 0FE1h ;# 
   322                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   323  0000                     FSR1H equ 0FE2h ;# 
   324                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   325  0000                     PLUSW1 equ 0FE3h ;# 
   326                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   327  0000                     PREINC1 equ 0FE4h ;# 
   328                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   329  0000                     POSTDEC1 equ 0FE5h ;# 
   330                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   331  0000                     POSTINC1 equ 0FE6h ;# 
   332                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   333  0000                     INDF1 equ 0FE7h ;# 
   334                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   335  0000                     WREG equ 0FE8h ;# 
   336                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   337  0000                     FSR0 equ 0FE9h ;# 
   338                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   339  0000                     FSR0L equ 0FE9h ;# 
   340                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   341  0000                     FSR0H equ 0FEAh ;# 
   342                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   343  0000                     PLUSW0 equ 0FEBh ;# 
   344                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   345  0000                     PREINC0 equ 0FECh ;# 
   346                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   347  0000                     POSTDEC0 equ 0FEDh ;# 
   348                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   349  0000                     POSTINC0 equ 0FEEh ;# 
   350                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   351  0000                     INDF0 equ 0FEFh ;# 
   352                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   353  0000                     INTCON3 equ 0FF0h ;# 
   354                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   355  0000                     INTCON2 equ 0FF1h ;# 
   356                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   357  0000                     INTCON equ 0FF2h ;# 
   358                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   359  0000                     PROD equ 0FF3h ;# 
   360                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   361  0000                     PRODL equ 0FF3h ;# 
   362                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   363  0000                     PRODH equ 0FF4h ;# 
   364                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   365  0000                     TABLAT equ 0FF5h ;# 
   366                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   367  0000                     TBLPTR equ 0FF6h ;# 
   368                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   369  0000                     TBLPTRL equ 0FF6h ;# 
   370                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   371  0000                     TBLPTRH equ 0FF7h ;# 
   372                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   373  0000                     TBLPTRU equ 0FF8h ;# 
   374                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   375  0000                     PCLAT equ 0FF9h ;# 
   376                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   377  0000                     PC equ 0FF9h ;# 
   378                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   379  0000                     PCL equ 0FF9h ;# 
   380                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   381  0000                     PCLATH equ 0FFAh ;# 
   382                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   383  0000                     PCLATU equ 0FFBh ;# 
   384                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   385  0000                     STKPTR equ 0FFCh ;# 
   386                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   387  0000                     TOS equ 0FFDh ;# 
   388                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   389  0000                     TOSL equ 0FFDh ;# 
   390                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   391  0000                     TOSH equ 0FFEh ;# 
   392                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   393  0000                     TOSU equ 0FFFh ;# 
   394                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   395  0000                     PORTA equ 0F80h ;# 
   396                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   397  0000                     PORTB equ 0F81h ;# 
   398                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   399  0000                     PORTC equ 0F82h ;# 
   400                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   401  0000                     PORTD equ 0F83h ;# 
   402                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   403  0000                     PORTE equ 0F84h ;# 
   404                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   405  0000                     SSP2CON2 equ 0F85h ;# 
   406                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   407  0000                     SSP2CON1 equ 0F86h ;# 
   408                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   409  0000                     SSP2STAT equ 0F87h ;# 
   410                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   411  0000                     SSP2ADD equ 0F88h ;# 
   412                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   413  0000                     LATA equ 0F89h ;# 
   414                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   415  0000                     LATB equ 0F8Ah ;# 
   416                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   417  0000                     LATC equ 0F8Bh ;# 
   418                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   419  0000                     LATD equ 0F8Ch ;# 
   420                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   421  0000                     LATE equ 0F8Dh ;# 
   422                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   423  0000                     SSP2BUF equ 0F8Eh ;# 
   424                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   425  0000                     TRISA equ 0F92h ;# 
   426                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   427  0000                     DDRA equ 0F92h ;# 
   428                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   429  0000                     TRISB equ 0F93h ;# 
   430                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   431  0000                     DDRB equ 0F93h ;# 
   432                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   433  0000                     TRISC equ 0F94h ;# 
   434                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   435  0000                     DDRC equ 0F94h ;# 
   436                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   437  0000                     TRISD equ 0F95h ;# 
   438                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   439  0000                     DDRD equ 0F95h ;# 
   440                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   441  0000                     TRISE equ 0F96h ;# 
   442                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   443  0000                     DDRE equ 0F96h ;# 
   444                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   445  0000                     OSCTUNE equ 0F9Bh ;# 
   446                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   447  0000                     PIE1 equ 0F9Dh ;# 
   448                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   449  0000                     PIR1 equ 0F9Eh ;# 
   450                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   451  0000                     IPR1 equ 0F9Fh ;# 
   452                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   453  0000                     PIE2 equ 0FA0h ;# 
   454                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   455  0000                     PIR2 equ 0FA1h ;# 
   456                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   457  0000                     IPR2 equ 0FA2h ;# 
   458                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   459  0000                     PIE3 equ 0FA3h ;# 
   460                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   461  0000                     PIR3 equ 0FA4h ;# 
   462                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   463  0000                     IPR3 equ 0FA5h ;# 
   464                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   465  0000                     EECON1 equ 0FA6h ;# 
   466                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   467  0000                     EECON2 equ 0FA7h ;# 
   468                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   469  0000                     RCSTA equ 0FABh ;# 
   470                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   471  0000                     RCSTA1 equ 0FABh ;# 
   472                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   473  0000                     TXSTA equ 0FACh ;# 
   474                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   475  0000                     TXSTA1 equ 0FACh ;# 
   476                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   477  0000                     TXREG equ 0FADh ;# 
   478                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   479  0000                     TXREG1 equ 0FADh ;# 
   480                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   481  0000                     RCREG equ 0FAEh ;# 
   482                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   483  0000                     RCREG1 equ 0FAEh ;# 
   484                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   485  0000                     SPBRG equ 0FAFh ;# 
   486                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   487  0000                     SPBRG1 equ 0FAFh ;# 
   488                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   489  0000                     SPBRGH equ 0FB0h ;# 
   490                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   491  0000                     CMCON equ 0FB4h ;# 
   492                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   493  0000                     CVRCON equ 0FB5h ;# 
   494                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   495  0000                     ECCP1AS equ 0FB6h ;# 
   496                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   497  0000                     ECCP1DEL equ 0FB7h ;# 
   498                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   499  0000                     PWM1CON equ 0FB7h ;# 
   500                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   501  0000                     BAUDCON equ 0FB8h ;# 
   502                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   503  0000                     BAUDCTL equ 0FB8h ;# 
   504                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   505  0000                     CCP2CON equ 0FBAh ;# 
   506                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   507  0000                     CCPR2 equ 0FBBh ;# 
   508                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   509  0000                     CCPR2L equ 0FBBh ;# 
   510                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   511  0000                     CCPR2H equ 0FBCh ;# 
   512                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   513  0000                     ECCP1CON equ 0FBDh ;# 
   514                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   515  0000                     CCP1CON equ 0FBDh ;# 
   516                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   517  0000                     CCPR1 equ 0FBEh ;# 
   518                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   519  0000                     CCPR1L equ 0FBEh ;# 
   520                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   521  0000                     CCPR1H equ 0FBFh ;# 
   522                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   523  0000                     ADCON2 equ 0FC0h ;# 
   524                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   525  0000                     ADCON1 equ 0FC1h ;# 
   526                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   527  0000                     ADCON0 equ 0FC2h ;# 
   528                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   529  0000                     ADRES equ 0FC3h ;# 
   530                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   531  0000                     ADRESL equ 0FC3h ;# 
   532                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   533  0000                     ADRESH equ 0FC4h ;# 
   534                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   535  0000                     SSPCON2 equ 0FC5h ;# 
   536                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   537  0000                     SSP1CON2 equ 0FC5h ;# 
   538                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   539  0000                     SSPCON1 equ 0FC6h ;# 
   540                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   541  0000                     SSP1CON1 equ 0FC6h ;# 
   542                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   543  0000                     SSPSTAT equ 0FC7h ;# 
   544                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   545  0000                     SSP1STAT equ 0FC7h ;# 
   546                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   547  0000                     SSPADD equ 0FC8h ;# 
   548                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   549  0000                     SSP1ADD equ 0FC8h ;# 
   550                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   551  0000                     SSPBUF equ 0FC9h ;# 
   552                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   553  0000                     SSP1BUF equ 0FC9h ;# 
   554                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   555  0000                     T2CON equ 0FCAh ;# 
   556                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   557  0000                     PR2 equ 0FCBh ;# 
   558                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   559  0000                     MEMCON equ 0FCBh ;# 
   560                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   561  0000                     TMR2 equ 0FCCh ;# 
   562                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   563  0000                     T1CON equ 0FCDh ;# 
   564                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   565  0000                     TMR1 equ 0FCEh ;# 
   566                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   567  0000                     TMR1L equ 0FCEh ;# 
   568                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   569  0000                     TMR1H equ 0FCFh ;# 
   570                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   571  0000                     RCON equ 0FD0h ;# 
   572                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   573  0000                     WDTCON equ 0FD1h ;# 
   574                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   575  0000                     OSCCON equ 0FD3h ;# 
   576                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   577  0000                     T0CON equ 0FD5h ;# 
   578                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   579  0000                     TMR0 equ 0FD6h ;# 
   580                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   581  0000                     TMR0L equ 0FD6h ;# 
   582                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   583  0000                     TMR0H equ 0FD7h ;# 
   584                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   585  0000                     STATUS equ 0FD8h ;# 
   586                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   587  0000                     FSR2 equ 0FD9h ;# 
   588                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   589  0000                     FSR2L equ 0FD9h ;# 
   590                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   591  0000                     FSR2H equ 0FDAh ;# 
   592                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   593  0000                     PLUSW2 equ 0FDBh ;# 
   594                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   595  0000                     PREINC2 equ 0FDCh ;# 
   596                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   597  0000                     POSTDEC2 equ 0FDDh ;# 
   598                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   599  0000                     POSTINC2 equ 0FDEh ;# 
   600                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   601  0000                     INDF2 equ 0FDFh ;# 
   602                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   603  0000                     BSR equ 0FE0h ;# 
   604                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   605  0000                     FSR1 equ 0FE1h ;# 
   606                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   607  0000                     FSR1L equ 0FE1h ;# 
   608                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   609  0000                     FSR1H equ 0FE2h ;# 
   610                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   611  0000                     PLUSW1 equ 0FE3h ;# 
   612                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   613  0000                     PREINC1 equ 0FE4h ;# 
   614                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   615  0000                     POSTDEC1 equ 0FE5h ;# 
   616                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   617  0000                     POSTINC1 equ 0FE6h ;# 
   618                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   619  0000                     INDF1 equ 0FE7h ;# 
   620                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   621  0000                     WREG equ 0FE8h ;# 
   622                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   623  0000                     FSR0 equ 0FE9h ;# 
   624                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   625  0000                     FSR0L equ 0FE9h ;# 
   626                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   627  0000                     FSR0H equ 0FEAh ;# 
   628                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   629  0000                     PLUSW0 equ 0FEBh ;# 
   630                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   631  0000                     PREINC0 equ 0FECh ;# 
   632                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   633  0000                     POSTDEC0 equ 0FEDh ;# 
   634                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   635  0000                     POSTINC0 equ 0FEEh ;# 
   636                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   637  0000                     INDF0 equ 0FEFh ;# 
   638                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   639  0000                     INTCON3 equ 0FF0h ;# 
   640                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   641  0000                     INTCON2 equ 0FF1h ;# 
   642                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   643  0000                     INTCON equ 0FF2h ;# 
   644                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   645  0000                     PROD equ 0FF3h ;# 
   646                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   647  0000                     PRODL equ 0FF3h ;# 
   648                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   649  0000                     PRODH equ 0FF4h ;# 
   650                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   651  0000                     TABLAT equ 0FF5h ;# 
   652                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   653  0000                     TBLPTR equ 0FF6h ;# 
   654                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   655  0000                     TBLPTRL equ 0FF6h ;# 
   656                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   657  0000                     TBLPTRH equ 0FF7h ;# 
   658                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   659  0000                     TBLPTRU equ 0FF8h ;# 
   660                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   661  0000                     PCLAT equ 0FF9h ;# 
   662                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   663  0000                     PC equ 0FF9h ;# 
   664                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   665  0000                     PCL equ 0FF9h ;# 
   666                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   667  0000                     PCLATH equ 0FFAh ;# 
   668                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   669  0000                     PCLATU equ 0FFBh ;# 
   670                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   671  0000                     STKPTR equ 0FFCh ;# 
   672                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   673  0000                     TOS equ 0FFDh ;# 
   674                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   675  0000                     TOSL equ 0FFDh ;# 
   676                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   677  0000                     TOSH equ 0FFEh ;# 
   678                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   679  0000                     TOSU equ 0FFFh ;# 
   680                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   681  0000                     PORTA equ 0F80h ;# 
   682                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   683  0000                     PORTB equ 0F81h ;# 
   684                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   685  0000                     PORTC equ 0F82h ;# 
   686                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   687  0000                     PORTD equ 0F83h ;# 
   688                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   689  0000                     PORTE equ 0F84h ;# 
   690                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   691  0000                     SSP2CON2 equ 0F85h ;# 
   692                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   693  0000                     SSP2CON1 equ 0F86h ;# 
   694                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   695  0000                     SSP2STAT equ 0F87h ;# 
   696                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   697  0000                     SSP2ADD equ 0F88h ;# 
   698                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   699  0000                     LATA equ 0F89h ;# 
   700                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   701  0000                     LATB equ 0F8Ah ;# 
   702                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   703  0000                     LATC equ 0F8Bh ;# 
   704                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   705  0000                     LATD equ 0F8Ch ;# 
   706                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   707  0000                     LATE equ 0F8Dh ;# 
   708                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   709  0000                     SSP2BUF equ 0F8Eh ;# 
   710                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   711  0000                     TRISA equ 0F92h ;# 
   712                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   713  0000                     DDRA equ 0F92h ;# 
   714                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   715  0000                     TRISB equ 0F93h ;# 
   716                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   717  0000                     DDRB equ 0F93h ;# 
   718                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   719  0000                     TRISC equ 0F94h ;# 
   720                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   721  0000                     DDRC equ 0F94h ;# 
   722                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   723  0000                     TRISD equ 0F95h ;# 
   724                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   725  0000                     DDRD equ 0F95h ;# 
   726                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   727  0000                     TRISE equ 0F96h ;# 
   728                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   729  0000                     DDRE equ 0F96h ;# 
   730                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   731  0000                     OSCTUNE equ 0F9Bh ;# 
   732                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   733  0000                     PIE1 equ 0F9Dh ;# 
   734                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   735  0000                     PIR1 equ 0F9Eh ;# 
   736                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   737  0000                     IPR1 equ 0F9Fh ;# 
   738                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   739  0000                     PIE2 equ 0FA0h ;# 
   740                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   741  0000                     PIR2 equ 0FA1h ;# 
   742                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   743  0000                     IPR2 equ 0FA2h ;# 
   744                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   745  0000                     PIE3 equ 0FA3h ;# 
   746                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   747  0000                     PIR3 equ 0FA4h ;# 
   748                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   749  0000                     IPR3 equ 0FA5h ;# 
   750                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   751  0000                     EECON1 equ 0FA6h ;# 
   752                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   753  0000                     EECON2 equ 0FA7h ;# 
   754                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   755  0000                     RCSTA equ 0FABh ;# 
   756                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   757  0000                     RCSTA1 equ 0FABh ;# 
   758                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   759  0000                     TXSTA equ 0FACh ;# 
   760                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   761  0000                     TXSTA1 equ 0FACh ;# 
   762                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   763  0000                     TXREG equ 0FADh ;# 
   764                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   765  0000                     TXREG1 equ 0FADh ;# 
   766                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   767  0000                     RCREG equ 0FAEh ;# 
   768                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   769  0000                     RCREG1 equ 0FAEh ;# 
   770                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   771  0000                     SPBRG equ 0FAFh ;# 
   772                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   773  0000                     SPBRG1 equ 0FAFh ;# 
   774                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   775  0000                     SPBRGH equ 0FB0h ;# 
   776                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   777  0000                     CMCON equ 0FB4h ;# 
   778                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   779  0000                     CVRCON equ 0FB5h ;# 
   780                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   781  0000                     ECCP1AS equ 0FB6h ;# 
   782                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   783  0000                     ECCP1DEL equ 0FB7h ;# 
   784                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   785  0000                     PWM1CON equ 0FB7h ;# 
   786                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   787  0000                     BAUDCON equ 0FB8h ;# 
   788                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   789  0000                     BAUDCTL equ 0FB8h ;# 
   790                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   791  0000                     CCP2CON equ 0FBAh ;# 
   792                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   793  0000                     CCPR2 equ 0FBBh ;# 
   794                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   795  0000                     CCPR2L equ 0FBBh ;# 
   796                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   797  0000                     CCPR2H equ 0FBCh ;# 
   798                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   799  0000                     ECCP1CON equ 0FBDh ;# 
   800                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   801  0000                     CCP1CON equ 0FBDh ;# 
   802                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   803  0000                     CCPR1 equ 0FBEh ;# 
   804                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   805  0000                     CCPR1L equ 0FBEh ;# 
   806                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   807  0000                     CCPR1H equ 0FBFh ;# 
   808                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   809  0000                     ADCON2 equ 0FC0h ;# 
   810                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   811  0000                     ADCON1 equ 0FC1h ;# 
   812                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   813  0000                     ADCON0 equ 0FC2h ;# 
   814                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   815  0000                     ADRES equ 0FC3h ;# 
   816                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   817  0000                     ADRESL equ 0FC3h ;# 
   818                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   819  0000                     ADRESH equ 0FC4h ;# 
   820                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   821  0000                     SSPCON2 equ 0FC5h ;# 
   822                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   823  0000                     SSP1CON2 equ 0FC5h ;# 
   824                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   825  0000                     SSPCON1 equ 0FC6h ;# 
   826                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   827  0000                     SSP1CON1 equ 0FC6h ;# 
   828                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   829  0000                     SSPSTAT equ 0FC7h ;# 
   830                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   831  0000                     SSP1STAT equ 0FC7h ;# 
   832                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   833  0000                     SSPADD equ 0FC8h ;# 
   834                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   835  0000                     SSP1ADD equ 0FC8h ;# 
   836                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   837  0000                     SSPBUF equ 0FC9h ;# 
   838                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   839  0000                     SSP1BUF equ 0FC9h ;# 
   840                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   841  0000                     T2CON equ 0FCAh ;# 
   842                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   843  0000                     PR2 equ 0FCBh ;# 
   844                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   845  0000                     MEMCON equ 0FCBh ;# 
   846                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   847  0000                     TMR2 equ 0FCCh ;# 
   848                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   849  0000                     T1CON equ 0FCDh ;# 
   850                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   851  0000                     TMR1 equ 0FCEh ;# 
   852                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   853  0000                     TMR1L equ 0FCEh ;# 
   854                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   855  0000                     TMR1H equ 0FCFh ;# 
   856                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   857  0000                     RCON equ 0FD0h ;# 
   858                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   859  0000                     WDTCON equ 0FD1h ;# 
   860                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   861  0000                     OSCCON equ 0FD3h ;# 
   862                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   863  0000                     T0CON equ 0FD5h ;# 
   864                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   865  0000                     TMR0 equ 0FD6h ;# 
   866                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   867  0000                     TMR0L equ 0FD6h ;# 
   868                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   869  0000                     TMR0H equ 0FD7h ;# 
   870                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   871  0000                     STATUS equ 0FD8h ;# 
   872                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   873  0000                     FSR2 equ 0FD9h ;# 
   874                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   875  0000                     FSR2L equ 0FD9h ;# 
   876                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   877  0000                     FSR2H equ 0FDAh ;# 
   878                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   879  0000                     PLUSW2 equ 0FDBh ;# 
   880                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   881  0000                     PREINC2 equ 0FDCh ;# 
   882                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   883  0000                     POSTDEC2 equ 0FDDh ;# 
   884                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   885  0000                     POSTINC2 equ 0FDEh ;# 
   886                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   887  0000                     INDF2 equ 0FDFh ;# 
   888                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   889  0000                     BSR equ 0FE0h ;# 
   890                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   891  0000                     FSR1 equ 0FE1h ;# 
   892                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   893  0000                     FSR1L equ 0FE1h ;# 
   894                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   895  0000                     FSR1H equ 0FE2h ;# 
   896                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   897  0000                     PLUSW1 equ 0FE3h ;# 
   898                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   899  0000                     PREINC1 equ 0FE4h ;# 
   900                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   901  0000                     POSTDEC1 equ 0FE5h ;# 
   902                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   903  0000                     POSTINC1 equ 0FE6h ;# 
   904                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   905  0000                     INDF1 equ 0FE7h ;# 
   906                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   907  0000                     WREG equ 0FE8h ;# 
   908                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   909  0000                     FSR0 equ 0FE9h ;# 
   910                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   911  0000                     FSR0L equ 0FE9h ;# 
   912                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   913  0000                     FSR0H equ 0FEAh ;# 
   914                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   915  0000                     PLUSW0 equ 0FEBh ;# 
   916                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   917  0000                     PREINC0 equ 0FECh ;# 
   918                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   919  0000                     POSTDEC0 equ 0FEDh ;# 
   920                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   921  0000                     POSTINC0 equ 0FEEh ;# 
   922                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   923  0000                     INDF0 equ 0FEFh ;# 
   924                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   925  0000                     INTCON3 equ 0FF0h ;# 
   926                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   927  0000                     INTCON2 equ 0FF1h ;# 
   928                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   929  0000                     INTCON equ 0FF2h ;# 
   930                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   931  0000                     PROD equ 0FF3h ;# 
   932                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   933  0000                     PRODL equ 0FF3h ;# 
   934                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   935  0000                     PRODH equ 0FF4h ;# 
   936                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   937  0000                     TABLAT equ 0FF5h ;# 
   938                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   939  0000                     TBLPTR equ 0FF6h ;# 
   940                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   941  0000                     TBLPTRL equ 0FF6h ;# 
   942                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   943  0000                     TBLPTRH equ 0FF7h ;# 
   944                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   945  0000                     TBLPTRU equ 0FF8h ;# 
   946                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   947  0000                     PCLAT equ 0FF9h ;# 
   948                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   949  0000                     PC equ 0FF9h ;# 
   950                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   951  0000                     PCL equ 0FF9h ;# 
   952                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   953  0000                     PCLATH equ 0FFAh ;# 
   954                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   955  0000                     PCLATU equ 0FFBh ;# 
   956                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   957  0000                     STKPTR equ 0FFCh ;# 
   958                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   959  0000                     TOS equ 0FFDh ;# 
   960                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   961  0000                     TOSL equ 0FFDh ;# 
   962                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   963  0000                     TOSH equ 0FFEh ;# 
   964                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   965  0000                     TOSU equ 0FFFh ;# 
   966                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   967  0000                     PORTA equ 0F80h ;# 
   968                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   969  0000                     PORTB equ 0F81h ;# 
   970                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   971  0000                     PORTC equ 0F82h ;# 
   972                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   973  0000                     PORTD equ 0F83h ;# 
   974                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   975  0000                     PORTE equ 0F84h ;# 
   976                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   977  0000                     SSP2CON2 equ 0F85h ;# 
   978                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   979  0000                     SSP2CON1 equ 0F86h ;# 
   980                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   981  0000                     SSP2STAT equ 0F87h ;# 
   982                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   983  0000                     SSP2ADD equ 0F88h ;# 
   984                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   985  0000                     LATA equ 0F89h ;# 
   986                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   987  0000                     LATB equ 0F8Ah ;# 
   988                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   989  0000                     LATC equ 0F8Bh ;# 
   990                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   991  0000                     LATD equ 0F8Ch ;# 
   992                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   993  0000                     LATE equ 0F8Dh ;# 
   994                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   995  0000                     SSP2BUF equ 0F8Eh ;# 
   996                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   997  0000                     TRISA equ 0F92h ;# 
   998                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   999  0000                     DDRA equ 0F92h ;# 
  1000                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1001  0000                     TRISB equ 0F93h ;# 
  1002                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1003  0000                     DDRB equ 0F93h ;# 
  1004                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1005  0000                     TRISC equ 0F94h ;# 
  1006                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1007  0000                     DDRC equ 0F94h ;# 
  1008                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1009  0000                     TRISD equ 0F95h ;# 
  1010                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1011  0000                     DDRD equ 0F95h ;# 
  1012                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1013  0000                     TRISE equ 0F96h ;# 
  1014                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1015  0000                     DDRE equ 0F96h ;# 
  1016                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1017  0000                     OSCTUNE equ 0F9Bh ;# 
  1018                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1019  0000                     PIE1 equ 0F9Dh ;# 
  1020                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1021  0000                     PIR1 equ 0F9Eh ;# 
  1022                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1023  0000                     IPR1 equ 0F9Fh ;# 
  1024                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1025  0000                     PIE2 equ 0FA0h ;# 
  1026                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1027  0000                     PIR2 equ 0FA1h ;# 
  1028                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1029  0000                     IPR2 equ 0FA2h ;# 
  1030                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1031  0000                     PIE3 equ 0FA3h ;# 
  1032                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1033  0000                     PIR3 equ 0FA4h ;# 
  1034                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1035  0000                     IPR3 equ 0FA5h ;# 
  1036                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1037  0000                     EECON1 equ 0FA6h ;# 
  1038                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1039  0000                     EECON2 equ 0FA7h ;# 
  1040                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1041  0000                     RCSTA equ 0FABh ;# 
  1042                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1043  0000                     RCSTA1 equ 0FABh ;# 
  1044                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1045  0000                     TXSTA equ 0FACh ;# 
  1046                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1047  0000                     TXSTA1 equ 0FACh ;# 
  1048                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1049  0000                     TXREG equ 0FADh ;# 
  1050                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1051  0000                     TXREG1 equ 0FADh ;# 
  1052                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1053  0000                     RCREG equ 0FAEh ;# 
  1054                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1055  0000                     RCREG1 equ 0FAEh ;# 
  1056                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1057  0000                     SPBRG equ 0FAFh ;# 
  1058                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1059  0000                     SPBRG1 equ 0FAFh ;# 
  1060                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1061  0000                     SPBRGH equ 0FB0h ;# 
  1062                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1063  0000                     CMCON equ 0FB4h ;# 
  1064                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1065  0000                     CVRCON equ 0FB5h ;# 
  1066                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1067  0000                     ECCP1AS equ 0FB6h ;# 
  1068                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1069  0000                     ECCP1DEL equ 0FB7h ;# 
  1070                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1071  0000                     PWM1CON equ 0FB7h ;# 
  1072                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1073  0000                     BAUDCON equ 0FB8h ;# 
  1074                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1075  0000                     BAUDCTL equ 0FB8h ;# 
  1076                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1077  0000                     CCP2CON equ 0FBAh ;# 
  1078                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1079  0000                     CCPR2 equ 0FBBh ;# 
  1080                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1081  0000                     CCPR2L equ 0FBBh ;# 
  1082                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1083  0000                     CCPR2H equ 0FBCh ;# 
  1084                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1085  0000                     ECCP1CON equ 0FBDh ;# 
  1086                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1087  0000                     CCP1CON equ 0FBDh ;# 
  1088                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1089  0000                     CCPR1 equ 0FBEh ;# 
  1090                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1091  0000                     CCPR1L equ 0FBEh ;# 
  1092                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1093  0000                     CCPR1H equ 0FBFh ;# 
  1094                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1095  0000                     ADCON2 equ 0FC0h ;# 
  1096                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1097  0000                     ADCON1 equ 0FC1h ;# 
  1098                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1099  0000                     ADCON0 equ 0FC2h ;# 
  1100                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1101  0000                     ADRES equ 0FC3h ;# 
  1102                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1103  0000                     ADRESL equ 0FC3h ;# 
  1104                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1105  0000                     ADRESH equ 0FC4h ;# 
  1106                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1107  0000                     SSPCON2 equ 0FC5h ;# 
  1108                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1109  0000                     SSP1CON2 equ 0FC5h ;# 
  1110                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1111  0000                     SSPCON1 equ 0FC6h ;# 
  1112                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1113  0000                     SSP1CON1 equ 0FC6h ;# 
  1114                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1115  0000                     SSPSTAT equ 0FC7h ;# 
  1116                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1117  0000                     SSP1STAT equ 0FC7h ;# 
  1118                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1119  0000                     SSPADD equ 0FC8h ;# 
  1120                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1121  0000                     SSP1ADD equ 0FC8h ;# 
  1122                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1123  0000                     SSPBUF equ 0FC9h ;# 
  1124                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1125  0000                     SSP1BUF equ 0FC9h ;# 
  1126                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1127  0000                     T2CON equ 0FCAh ;# 
  1128                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1129  0000                     PR2 equ 0FCBh ;# 
  1130                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1131  0000                     MEMCON equ 0FCBh ;# 
  1132                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1133  0000                     TMR2 equ 0FCCh ;# 
  1134                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1135  0000                     T1CON equ 0FCDh ;# 
  1136                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1137  0000                     TMR1 equ 0FCEh ;# 
  1138                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1139  0000                     TMR1L equ 0FCEh ;# 
  1140                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1141  0000                     TMR1H equ 0FCFh ;# 
  1142                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1143  0000                     RCON equ 0FD0h ;# 
  1144                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1145  0000                     WDTCON equ 0FD1h ;# 
  1146                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1147  0000                     OSCCON equ 0FD3h ;# 
  1148                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1149  0000                     T0CON equ 0FD5h ;# 
  1150                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1151  0000                     TMR0 equ 0FD6h ;# 
  1152                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1153  0000                     TMR0L equ 0FD6h ;# 
  1154                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1155  0000                     TMR0H equ 0FD7h ;# 
  1156                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1157  0000                     STATUS equ 0FD8h ;# 
  1158                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1159  0000                     FSR2 equ 0FD9h ;# 
  1160                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1161  0000                     FSR2L equ 0FD9h ;# 
  1162                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1163  0000                     FSR2H equ 0FDAh ;# 
  1164                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1165  0000                     PLUSW2 equ 0FDBh ;# 
  1166                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1167  0000                     PREINC2 equ 0FDCh ;# 
  1168                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1169  0000                     POSTDEC2 equ 0FDDh ;# 
  1170                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1171  0000                     POSTINC2 equ 0FDEh ;# 
  1172                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1173  0000                     INDF2 equ 0FDFh ;# 
  1174                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1175  0000                     BSR equ 0FE0h ;# 
  1176                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1177  0000                     FSR1 equ 0FE1h ;# 
  1178                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1179  0000                     FSR1L equ 0FE1h ;# 
  1180                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1181  0000                     FSR1H equ 0FE2h ;# 
  1182                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1183  0000                     PLUSW1 equ 0FE3h ;# 
  1184                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1185  0000                     PREINC1 equ 0FE4h ;# 
  1186                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1187  0000                     POSTDEC1 equ 0FE5h ;# 
  1188                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1189  0000                     POSTINC1 equ 0FE6h ;# 
  1190                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1191  0000                     INDF1 equ 0FE7h ;# 
  1192                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1193  0000                     WREG equ 0FE8h ;# 
  1194                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1195  0000                     FSR0 equ 0FE9h ;# 
  1196                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1197  0000                     FSR0L equ 0FE9h ;# 
  1198                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1199  0000                     FSR0H equ 0FEAh ;# 
  1200                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1201  0000                     PLUSW0 equ 0FEBh ;# 
  1202                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1203  0000                     PREINC0 equ 0FECh ;# 
  1204                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1205  0000                     POSTDEC0 equ 0FEDh ;# 
  1206                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1207  0000                     POSTINC0 equ 0FEEh ;# 
  1208                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1209  0000                     INDF0 equ 0FEFh ;# 
  1210                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1211  0000                     INTCON3 equ 0FF0h ;# 
  1212                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1213  0000                     INTCON2 equ 0FF1h ;# 
  1214                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1215  0000                     INTCON equ 0FF2h ;# 
  1216                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1217  0000                     PROD equ 0FF3h ;# 
  1218                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1219  0000                     PRODL equ 0FF3h ;# 
  1220                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1221  0000                     PRODH equ 0FF4h ;# 
  1222                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1223  0000                     TABLAT equ 0FF5h ;# 
  1224                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1225  0000                     TBLPTR equ 0FF6h ;# 
  1226                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1227  0000                     TBLPTRL equ 0FF6h ;# 
  1228                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1229  0000                     TBLPTRH equ 0FF7h ;# 
  1230                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1231  0000                     TBLPTRU equ 0FF8h ;# 
  1232                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1233  0000                     PCLAT equ 0FF9h ;# 
  1234                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1235  0000                     PC equ 0FF9h ;# 
  1236                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1237  0000                     PCL equ 0FF9h ;# 
  1238                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1239  0000                     PCLATH equ 0FFAh ;# 
  1240                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1241  0000                     PCLATU equ 0FFBh ;# 
  1242                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1243  0000                     STKPTR equ 0FFCh ;# 
  1244                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1245  0000                     TOS equ 0FFDh ;# 
  1246                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1247  0000                     TOSL equ 0FFDh ;# 
  1248                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1249  0000                     TOSH equ 0FFEh ;# 
  1250                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1251  0000                     TOSU equ 0FFFh ;# 
  1252                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1253  0000                     PORTA equ 0F80h ;# 
  1254                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1255  0000                     PORTB equ 0F81h ;# 
  1256                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1257  0000                     PORTC equ 0F82h ;# 
  1258                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1259  0000                     PORTD equ 0F83h ;# 
  1260                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1261  0000                     PORTE equ 0F84h ;# 
  1262                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1263  0000                     SSP2CON2 equ 0F85h ;# 
  1264                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1265  0000                     SSP2CON1 equ 0F86h ;# 
  1266                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1267  0000                     SSP2STAT equ 0F87h ;# 
  1268                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1269  0000                     SSP2ADD equ 0F88h ;# 
  1270                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1271  0000                     LATA equ 0F89h ;# 
  1272                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1273  0000                     LATB equ 0F8Ah ;# 
  1274                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1275  0000                     LATC equ 0F8Bh ;# 
  1276                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1277  0000                     LATD equ 0F8Ch ;# 
  1278                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1279  0000                     LATE equ 0F8Dh ;# 
  1280                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1281  0000                     SSP2BUF equ 0F8Eh ;# 
  1282                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1283  0000                     TRISA equ 0F92h ;# 
  1284                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1285  0000                     DDRA equ 0F92h ;# 
  1286                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1287  0000                     TRISB equ 0F93h ;# 
  1288                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1289  0000                     DDRB equ 0F93h ;# 
  1290                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1291  0000                     TRISC equ 0F94h ;# 
  1292                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1293  0000                     DDRC equ 0F94h ;# 
  1294                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1295  0000                     TRISD equ 0F95h ;# 
  1296                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1297  0000                     DDRD equ 0F95h ;# 
  1298                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1299  0000                     TRISE equ 0F96h ;# 
  1300                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1301  0000                     DDRE equ 0F96h ;# 
  1302                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1303  0000                     OSCTUNE equ 0F9Bh ;# 
  1304                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1305  0000                     PIE1 equ 0F9Dh ;# 
  1306                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1307  0000                     PIR1 equ 0F9Eh ;# 
  1308                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1309  0000                     IPR1 equ 0F9Fh ;# 
  1310                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1311  0000                     PIE2 equ 0FA0h ;# 
  1312                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1313  0000                     PIR2 equ 0FA1h ;# 
  1314                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1315  0000                     IPR2 equ 0FA2h ;# 
  1316                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1317  0000                     PIE3 equ 0FA3h ;# 
  1318                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1319  0000                     PIR3 equ 0FA4h ;# 
  1320                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1321  0000                     IPR3 equ 0FA5h ;# 
  1322                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1323  0000                     EECON1 equ 0FA6h ;# 
  1324                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1325  0000                     EECON2 equ 0FA7h ;# 
  1326                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1327  0000                     RCSTA equ 0FABh ;# 
  1328                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1329  0000                     RCSTA1 equ 0FABh ;# 
  1330                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1331  0000                     TXSTA equ 0FACh ;# 
  1332                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1333  0000                     TXSTA1 equ 0FACh ;# 
  1334                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1335  0000                     TXREG equ 0FADh ;# 
  1336                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1337  0000                     TXREG1 equ 0FADh ;# 
  1338                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1339  0000                     RCREG equ 0FAEh ;# 
  1340                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1341  0000                     RCREG1 equ 0FAEh ;# 
  1342                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1343  0000                     SPBRG equ 0FAFh ;# 
  1344                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1345  0000                     SPBRG1 equ 0FAFh ;# 
  1346                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1347  0000                     SPBRGH equ 0FB0h ;# 
  1348                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1349  0000                     CMCON equ 0FB4h ;# 
  1350                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1351  0000                     CVRCON equ 0FB5h ;# 
  1352                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1353  0000                     ECCP1AS equ 0FB6h ;# 
  1354                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1355  0000                     ECCP1DEL equ 0FB7h ;# 
  1356                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1357  0000                     PWM1CON equ 0FB7h ;# 
  1358                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1359  0000                     BAUDCON equ 0FB8h ;# 
  1360                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1361  0000                     BAUDCTL equ 0FB8h ;# 
  1362                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1363  0000                     CCP2CON equ 0FBAh ;# 
  1364                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1365  0000                     CCPR2 equ 0FBBh ;# 
  1366                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1367  0000                     CCPR2L equ 0FBBh ;# 
  1368                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1369  0000                     CCPR2H equ 0FBCh ;# 
  1370                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1371  0000                     ECCP1CON equ 0FBDh ;# 
  1372                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1373  0000                     CCP1CON equ 0FBDh ;# 
  1374                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1375  0000                     CCPR1 equ 0FBEh ;# 
  1376                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1377  0000                     CCPR1L equ 0FBEh ;# 
  1378                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1379  0000                     CCPR1H equ 0FBFh ;# 
  1380                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1381  0000                     ADCON2 equ 0FC0h ;# 
  1382                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1383  0000                     ADCON1 equ 0FC1h ;# 
  1384                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1385  0000                     ADCON0 equ 0FC2h ;# 
  1386                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1387  0000                     ADRES equ 0FC3h ;# 
  1388                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1389  0000                     ADRESL equ 0FC3h ;# 
  1390                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1391  0000                     ADRESH equ 0FC4h ;# 
  1392                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1393  0000                     SSPCON2 equ 0FC5h ;# 
  1394                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1395  0000                     SSP1CON2 equ 0FC5h ;# 
  1396                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1397  0000                     SSPCON1 equ 0FC6h ;# 
  1398                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1399  0000                     SSP1CON1 equ 0FC6h ;# 
  1400                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1401  0000                     SSPSTAT equ 0FC7h ;# 
  1402                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1403  0000                     SSP1STAT equ 0FC7h ;# 
  1404                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1405  0000                     SSPADD equ 0FC8h ;# 
  1406                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1407  0000                     SSP1ADD equ 0FC8h ;# 
  1408                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1409  0000                     SSPBUF equ 0FC9h ;# 
  1410                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1411  0000                     SSP1BUF equ 0FC9h ;# 
  1412                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1413  0000                     T2CON equ 0FCAh ;# 
  1414                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1415  0000                     PR2 equ 0FCBh ;# 
  1416                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1417  0000                     MEMCON equ 0FCBh ;# 
  1418                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1419  0000                     TMR2 equ 0FCCh ;# 
  1420                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1421  0000                     T1CON equ 0FCDh ;# 
  1422                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1423  0000                     TMR1 equ 0FCEh ;# 
  1424                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1425  0000                     TMR1L equ 0FCEh ;# 
  1426                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1427  0000                     TMR1H equ 0FCFh ;# 
  1428                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1429  0000                     RCON equ 0FD0h ;# 
  1430                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1431  0000                     WDTCON equ 0FD1h ;# 
  1432                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1433  0000                     OSCCON equ 0FD3h ;# 
  1434                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1435  0000                     T0CON equ 0FD5h ;# 
  1436                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1437  0000                     TMR0 equ 0FD6h ;# 
  1438                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1439  0000                     TMR0L equ 0FD6h ;# 
  1440                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1441  0000                     TMR0H equ 0FD7h ;# 
  1442                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1443  0000                     STATUS equ 0FD8h ;# 
  1444                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1445  0000                     FSR2 equ 0FD9h ;# 
  1446                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1447  0000                     FSR2L equ 0FD9h ;# 
  1448                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1449  0000                     FSR2H equ 0FDAh ;# 
  1450                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1451  0000                     PLUSW2 equ 0FDBh ;# 
  1452                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1453  0000                     PREINC2 equ 0FDCh ;# 
  1454                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1455  0000                     POSTDEC2 equ 0FDDh ;# 
  1456                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1457  0000                     POSTINC2 equ 0FDEh ;# 
  1458                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1459  0000                     INDF2 equ 0FDFh ;# 
  1460                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1461  0000                     BSR equ 0FE0h ;# 
  1462                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1463  0000                     FSR1 equ 0FE1h ;# 
  1464                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1465  0000                     FSR1L equ 0FE1h ;# 
  1466                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1467  0000                     FSR1H equ 0FE2h ;# 
  1468                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1469  0000                     PLUSW1 equ 0FE3h ;# 
  1470                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1471  0000                     PREINC1 equ 0FE4h ;# 
  1472                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1473  0000                     POSTDEC1 equ 0FE5h ;# 
  1474                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1475  0000                     POSTINC1 equ 0FE6h ;# 
  1476                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1477  0000                     INDF1 equ 0FE7h ;# 
  1478                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1479  0000                     WREG equ 0FE8h ;# 
  1480                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1481  0000                     FSR0 equ 0FE9h ;# 
  1482                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1483  0000                     FSR0L equ 0FE9h ;# 
  1484                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1485  0000                     FSR0H equ 0FEAh ;# 
  1486                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1487  0000                     PLUSW0 equ 0FEBh ;# 
  1488                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1489  0000                     PREINC0 equ 0FECh ;# 
  1490                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1491  0000                     POSTDEC0 equ 0FEDh ;# 
  1492                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1493  0000                     POSTINC0 equ 0FEEh ;# 
  1494                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1495  0000                     INDF0 equ 0FEFh ;# 
  1496                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1497  0000                     INTCON3 equ 0FF0h ;# 
  1498                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1499  0000                     INTCON2 equ 0FF1h ;# 
  1500                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1501  0000                     INTCON equ 0FF2h ;# 
  1502                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1503  0000                     PROD equ 0FF3h ;# 
  1504                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1505  0000                     PRODL equ 0FF3h ;# 
  1506                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1507  0000                     PRODH equ 0FF4h ;# 
  1508                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1509  0000                     TABLAT equ 0FF5h ;# 
  1510                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1511  0000                     TBLPTR equ 0FF6h ;# 
  1512                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1513  0000                     TBLPTRL equ 0FF6h ;# 
  1514                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1515  0000                     TBLPTRH equ 0FF7h ;# 
  1516                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1517  0000                     TBLPTRU equ 0FF8h ;# 
  1518                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1519  0000                     PCLAT equ 0FF9h ;# 
  1520                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1521  0000                     PC equ 0FF9h ;# 
  1522                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1523  0000                     PCL equ 0FF9h ;# 
  1524                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1525  0000                     PCLATH equ 0FFAh ;# 
  1526                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1527  0000                     PCLATU equ 0FFBh ;# 
  1528                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1529  0000                     STKPTR equ 0FFCh ;# 
  1530                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1531  0000                     TOS equ 0FFDh ;# 
  1532                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1533  0000                     TOSL equ 0FFDh ;# 
  1534                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1535  0000                     TOSH equ 0FFEh ;# 
  1536                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1537  0000                     TOSU equ 0FFFh ;# 
  1538                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1539  0000                     PORTA equ 0F80h ;# 
  1540                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1541  0000                     PORTB equ 0F81h ;# 
  1542                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1543  0000                     PORTC equ 0F82h ;# 
  1544                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1545  0000                     PORTD equ 0F83h ;# 
  1546                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1547  0000                     PORTE equ 0F84h ;# 
  1548                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1549  0000                     SSP2CON2 equ 0F85h ;# 
  1550                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1551  0000                     SSP2CON1 equ 0F86h ;# 
  1552                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1553  0000                     SSP2STAT equ 0F87h ;# 
  1554                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1555  0000                     SSP2ADD equ 0F88h ;# 
  1556                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1557  0000                     LATA equ 0F89h ;# 
  1558                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1559  0000                     LATB equ 0F8Ah ;# 
  1560                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1561  0000                     LATC equ 0F8Bh ;# 
  1562                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1563  0000                     LATD equ 0F8Ch ;# 
  1564                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1565  0000                     LATE equ 0F8Dh ;# 
  1566                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1567  0000                     SSP2BUF equ 0F8Eh ;# 
  1568                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1569  0000                     TRISA equ 0F92h ;# 
  1570                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1571  0000                     DDRA equ 0F92h ;# 
  1572                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1573  0000                     TRISB equ 0F93h ;# 
  1574                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1575  0000                     DDRB equ 0F93h ;# 
  1576                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1577  0000                     TRISC equ 0F94h ;# 
  1578                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1579  0000                     DDRC equ 0F94h ;# 
  1580                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1581  0000                     TRISD equ 0F95h ;# 
  1582                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1583  0000                     DDRD equ 0F95h ;# 
  1584                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1585  0000                     TRISE equ 0F96h ;# 
  1586                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1587  0000                     DDRE equ 0F96h ;# 
  1588                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1589  0000                     OSCTUNE equ 0F9Bh ;# 
  1590                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1591  0000                     PIE1 equ 0F9Dh ;# 
  1592                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1593  0000                     PIR1 equ 0F9Eh ;# 
  1594                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1595  0000                     IPR1 equ 0F9Fh ;# 
  1596                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1597  0000                     PIE2 equ 0FA0h ;# 
  1598                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1599  0000                     PIR2 equ 0FA1h ;# 
  1600                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1601  0000                     IPR2 equ 0FA2h ;# 
  1602                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1603  0000                     PIE3 equ 0FA3h ;# 
  1604                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1605  0000                     PIR3 equ 0FA4h ;# 
  1606                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1607  0000                     IPR3 equ 0FA5h ;# 
  1608                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1609  0000                     EECON1 equ 0FA6h ;# 
  1610                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1611  0000                     EECON2 equ 0FA7h ;# 
  1612                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1613  0000                     RCSTA equ 0FABh ;# 
  1614                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1615  0000                     RCSTA1 equ 0FABh ;# 
  1616                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1617  0000                     TXSTA equ 0FACh ;# 
  1618                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1619  0000                     TXSTA1 equ 0FACh ;# 
  1620                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1621  0000                     TXREG equ 0FADh ;# 
  1622                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1623  0000                     TXREG1 equ 0FADh ;# 
  1624                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1625  0000                     RCREG equ 0FAEh ;# 
  1626                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1627  0000                     RCREG1 equ 0FAEh ;# 
  1628                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1629  0000                     SPBRG equ 0FAFh ;# 
  1630                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1631  0000                     SPBRG1 equ 0FAFh ;# 
  1632                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1633  0000                     SPBRGH equ 0FB0h ;# 
  1634                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1635  0000                     CMCON equ 0FB4h ;# 
  1636                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1637  0000                     CVRCON equ 0FB5h ;# 
  1638                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1639  0000                     ECCP1AS equ 0FB6h ;# 
  1640                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1641  0000                     ECCP1DEL equ 0FB7h ;# 
  1642                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1643  0000                     PWM1CON equ 0FB7h ;# 
  1644                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1645  0000                     BAUDCON equ 0FB8h ;# 
  1646                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1647  0000                     BAUDCTL equ 0FB8h ;# 
  1648                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1649  0000                     CCP2CON equ 0FBAh ;# 
  1650                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1651  0000                     CCPR2 equ 0FBBh ;# 
  1652                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1653  0000                     CCPR2L equ 0FBBh ;# 
  1654                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1655  0000                     CCPR2H equ 0FBCh ;# 
  1656                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1657  0000                     ECCP1CON equ 0FBDh ;# 
  1658                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1659  0000                     CCP1CON equ 0FBDh ;# 
  1660                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1661  0000                     CCPR1 equ 0FBEh ;# 
  1662                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1663  0000                     CCPR1L equ 0FBEh ;# 
  1664                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1665  0000                     CCPR1H equ 0FBFh ;# 
  1666                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1667  0000                     ADCON2 equ 0FC0h ;# 
  1668                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1669  0000                     ADCON1 equ 0FC1h ;# 
  1670                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1671  0000                     ADCON0 equ 0FC2h ;# 
  1672                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1673  0000                     ADRES equ 0FC3h ;# 
  1674                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1675  0000                     ADRESL equ 0FC3h ;# 
  1676                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1677  0000                     ADRESH equ 0FC4h ;# 
  1678                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1679  0000                     SSPCON2 equ 0FC5h ;# 
  1680                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1681  0000                     SSP1CON2 equ 0FC5h ;# 
  1682                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1683  0000                     SSPCON1 equ 0FC6h ;# 
  1684                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1685  0000                     SSP1CON1 equ 0FC6h ;# 
  1686                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1687  0000                     SSPSTAT equ 0FC7h ;# 
  1688                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1689  0000                     SSP1STAT equ 0FC7h ;# 
  1690                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1691  0000                     SSPADD equ 0FC8h ;# 
  1692                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1693  0000                     SSP1ADD equ 0FC8h ;# 
  1694                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1695  0000                     SSPBUF equ 0FC9h ;# 
  1696                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1697  0000                     SSP1BUF equ 0FC9h ;# 
  1698                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1699  0000                     T2CON equ 0FCAh ;# 
  1700                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1701  0000                     PR2 equ 0FCBh ;# 
  1702                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1703  0000                     MEMCON equ 0FCBh ;# 
  1704                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1705  0000                     TMR2 equ 0FCCh ;# 
  1706                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1707  0000                     T1CON equ 0FCDh ;# 
  1708                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1709  0000                     TMR1 equ 0FCEh ;# 
  1710                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1711  0000                     TMR1L equ 0FCEh ;# 
  1712                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1713  0000                     TMR1H equ 0FCFh ;# 
  1714                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1715  0000                     RCON equ 0FD0h ;# 
  1716                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1717  0000                     WDTCON equ 0FD1h ;# 
  1718                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1719  0000                     OSCCON equ 0FD3h ;# 
  1720                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1721  0000                     T0CON equ 0FD5h ;# 
  1722                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1723  0000                     TMR0 equ 0FD6h ;# 
  1724                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1725  0000                     TMR0L equ 0FD6h ;# 
  1726                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1727  0000                     TMR0H equ 0FD7h ;# 
  1728                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1729  0000                     STATUS equ 0FD8h ;# 
  1730                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1731  0000                     FSR2 equ 0FD9h ;# 
  1732                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1733  0000                     FSR2L equ 0FD9h ;# 
  1734                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1735  0000                     FSR2H equ 0FDAh ;# 
  1736                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1737  0000                     PLUSW2 equ 0FDBh ;# 
  1738                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1739  0000                     PREINC2 equ 0FDCh ;# 
  1740                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1741  0000                     POSTDEC2 equ 0FDDh ;# 
  1742                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1743  0000                     POSTINC2 equ 0FDEh ;# 
  1744                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1745  0000                     INDF2 equ 0FDFh ;# 
  1746                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1747  0000                     BSR equ 0FE0h ;# 
  1748                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1749  0000                     FSR1 equ 0FE1h ;# 
  1750                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1751  0000                     FSR1L equ 0FE1h ;# 
  1752                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1753  0000                     FSR1H equ 0FE2h ;# 
  1754                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1755  0000                     PLUSW1 equ 0FE3h ;# 
  1756                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1757  0000                     PREINC1 equ 0FE4h ;# 
  1758                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1759  0000                     POSTDEC1 equ 0FE5h ;# 
  1760                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1761  0000                     POSTINC1 equ 0FE6h ;# 
  1762                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1763  0000                     INDF1 equ 0FE7h ;# 
  1764                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1765  0000                     WREG equ 0FE8h ;# 
  1766                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1767  0000                     FSR0 equ 0FE9h ;# 
  1768                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1769  0000                     FSR0L equ 0FE9h ;# 
  1770                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1771  0000                     FSR0H equ 0FEAh ;# 
  1772                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1773  0000                     PLUSW0 equ 0FEBh ;# 
  1774                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1775  0000                     PREINC0 equ 0FECh ;# 
  1776                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1777  0000                     POSTDEC0 equ 0FEDh ;# 
  1778                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1779  0000                     POSTINC0 equ 0FEEh ;# 
  1780                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1781  0000                     INDF0 equ 0FEFh ;# 
  1782                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1783  0000                     INTCON3 equ 0FF0h ;# 
  1784                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1785  0000                     INTCON2 equ 0FF1h ;# 
  1786                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1787  0000                     INTCON equ 0FF2h ;# 
  1788                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1789  0000                     PROD equ 0FF3h ;# 
  1790                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1791  0000                     PRODL equ 0FF3h ;# 
  1792                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1793  0000                     PRODH equ 0FF4h ;# 
  1794                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1795  0000                     TABLAT equ 0FF5h ;# 
  1796                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1797  0000                     TBLPTR equ 0FF6h ;# 
  1798                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1799  0000                     TBLPTRL equ 0FF6h ;# 
  1800                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1801  0000                     TBLPTRH equ 0FF7h ;# 
  1802                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1803  0000                     TBLPTRU equ 0FF8h ;# 
  1804                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1805  0000                     PCLAT equ 0FF9h ;# 
  1806                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1807  0000                     PC equ 0FF9h ;# 
  1808                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1809  0000                     PCL equ 0FF9h ;# 
  1810                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1811  0000                     PCLATH equ 0FFAh ;# 
  1812                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1813  0000                     PCLATU equ 0FFBh ;# 
  1814                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1815  0000                     STKPTR equ 0FFCh ;# 
  1816                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1817  0000                     TOS equ 0FFDh ;# 
  1818                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1819  0000                     TOSL equ 0FFDh ;# 
  1820                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1821  0000                     TOSH equ 0FFEh ;# 
  1822                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1823  0000                     TOSU equ 0FFFh ;# 
  1824                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1825  0000                     PORTA equ 0F80h ;# 
  1826                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1827  0000                     PORTB equ 0F81h ;# 
  1828                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1829  0000                     PORTC equ 0F82h ;# 
  1830                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1831  0000                     PORTD equ 0F83h ;# 
  1832                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1833  0000                     PORTE equ 0F84h ;# 
  1834                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1835  0000                     SSP2CON2 equ 0F85h ;# 
  1836                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1837  0000                     SSP2CON1 equ 0F86h ;# 
  1838                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1839  0000                     SSP2STAT equ 0F87h ;# 
  1840                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1841  0000                     SSP2ADD equ 0F88h ;# 
  1842                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1843  0000                     LATA equ 0F89h ;# 
  1844                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1845  0000                     LATB equ 0F8Ah ;# 
  1846                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1847  0000                     LATC equ 0F8Bh ;# 
  1848                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1849  0000                     LATD equ 0F8Ch ;# 
  1850                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1851  0000                     LATE equ 0F8Dh ;# 
  1852                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1853  0000                     SSP2BUF equ 0F8Eh ;# 
  1854                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1855  0000                     TRISA equ 0F92h ;# 
  1856                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1857  0000                     DDRA equ 0F92h ;# 
  1858                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1859  0000                     TRISB equ 0F93h ;# 
  1860                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1861  0000                     DDRB equ 0F93h ;# 
  1862                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1863  0000                     TRISC equ 0F94h ;# 
  1864                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1865  0000                     DDRC equ 0F94h ;# 
  1866                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1867  0000                     TRISD equ 0F95h ;# 
  1868                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1869  0000                     DDRD equ 0F95h ;# 
  1870                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1871  0000                     TRISE equ 0F96h ;# 
  1872                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1873  0000                     DDRE equ 0F96h ;# 
  1874                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1875  0000                     OSCTUNE equ 0F9Bh ;# 
  1876                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1877  0000                     PIE1 equ 0F9Dh ;# 
  1878                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1879  0000                     PIR1 equ 0F9Eh ;# 
  1880                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1881  0000                     IPR1 equ 0F9Fh ;# 
  1882                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1883  0000                     PIE2 equ 0FA0h ;# 
  1884                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1885  0000                     PIR2 equ 0FA1h ;# 
  1886                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1887  0000                     IPR2 equ 0FA2h ;# 
  1888                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1889  0000                     PIE3 equ 0FA3h ;# 
  1890                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1891  0000                     PIR3 equ 0FA4h ;# 
  1892                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1893  0000                     IPR3 equ 0FA5h ;# 
  1894                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1895  0000                     EECON1 equ 0FA6h ;# 
  1896                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1897  0000                     EECON2 equ 0FA7h ;# 
  1898                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1899  0000                     RCSTA equ 0FABh ;# 
  1900                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1901  0000                     RCSTA1 equ 0FABh ;# 
  1902                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1903  0000                     TXSTA equ 0FACh ;# 
  1904                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1905  0000                     TXSTA1 equ 0FACh ;# 
  1906                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1907  0000                     TXREG equ 0FADh ;# 
  1908                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1909  0000                     TXREG1 equ 0FADh ;# 
  1910                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1911  0000                     RCREG equ 0FAEh ;# 
  1912                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1913  0000                     RCREG1 equ 0FAEh ;# 
  1914                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1915  0000                     SPBRG equ 0FAFh ;# 
  1916                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1917  0000                     SPBRG1 equ 0FAFh ;# 
  1918                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1919  0000                     SPBRGH equ 0FB0h ;# 
  1920                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1921  0000                     CMCON equ 0FB4h ;# 
  1922                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1923  0000                     CVRCON equ 0FB5h ;# 
  1924                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1925  0000                     ECCP1AS equ 0FB6h ;# 
  1926                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1927  0000                     ECCP1DEL equ 0FB7h ;# 
  1928                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1929  0000                     PWM1CON equ 0FB7h ;# 
  1930                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1931  0000                     BAUDCON equ 0FB8h ;# 
  1932                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1933  0000                     BAUDCTL equ 0FB8h ;# 
  1934                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1935  0000                     CCP2CON equ 0FBAh ;# 
  1936                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1937  0000                     CCPR2 equ 0FBBh ;# 
  1938                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1939  0000                     CCPR2L equ 0FBBh ;# 
  1940                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1941  0000                     CCPR2H equ 0FBCh ;# 
  1942                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1943  0000                     ECCP1CON equ 0FBDh ;# 
  1944                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1945  0000                     CCP1CON equ 0FBDh ;# 
  1946                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1947  0000                     CCPR1 equ 0FBEh ;# 
  1948                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1949  0000                     CCPR1L equ 0FBEh ;# 
  1950                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1951  0000                     CCPR1H equ 0FBFh ;# 
  1952                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1953  0000                     ADCON2 equ 0FC0h ;# 
  1954                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1955  0000                     ADCON1 equ 0FC1h ;# 
  1956                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1957  0000                     ADCON0 equ 0FC2h ;# 
  1958                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1959  0000                     ADRES equ 0FC3h ;# 
  1960                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1961  0000                     ADRESL equ 0FC3h ;# 
  1962                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1963  0000                     ADRESH equ 0FC4h ;# 
  1964                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1965  0000                     SSPCON2 equ 0FC5h ;# 
  1966                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1967  0000                     SSP1CON2 equ 0FC5h ;# 
  1968                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1969  0000                     SSPCON1 equ 0FC6h ;# 
  1970                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1971  0000                     SSP1CON1 equ 0FC6h ;# 
  1972                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1973  0000                     SSPSTAT equ 0FC7h ;# 
  1974                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1975  0000                     SSP1STAT equ 0FC7h ;# 
  1976                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1977  0000                     SSPADD equ 0FC8h ;# 
  1978                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1979  0000                     SSP1ADD equ 0FC8h ;# 
  1980                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1981  0000                     SSPBUF equ 0FC9h ;# 
  1982                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1983  0000                     SSP1BUF equ 0FC9h ;# 
  1984                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1985  0000                     T2CON equ 0FCAh ;# 
  1986                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1987  0000                     PR2 equ 0FCBh ;# 
  1988                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1989  0000                     MEMCON equ 0FCBh ;# 
  1990                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1991  0000                     TMR2 equ 0FCCh ;# 
  1992                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1993  0000                     T1CON equ 0FCDh ;# 
  1994                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1995  0000                     TMR1 equ 0FCEh ;# 
  1996                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1997  0000                     TMR1L equ 0FCEh ;# 
  1998                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1999  0000                     TMR1H equ 0FCFh ;# 
  2000                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2001  0000                     RCON equ 0FD0h ;# 
  2002                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2003  0000                     WDTCON equ 0FD1h ;# 
  2004                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2005  0000                     OSCCON equ 0FD3h ;# 
  2006                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2007  0000                     T0CON equ 0FD5h ;# 
  2008                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2009  0000                     TMR0 equ 0FD6h ;# 
  2010                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2011  0000                     TMR0L equ 0FD6h ;# 
  2012                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2013  0000                     TMR0H equ 0FD7h ;# 
  2014                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2015  0000                     STATUS equ 0FD8h ;# 
  2016                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2017  0000                     FSR2 equ 0FD9h ;# 
  2018                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2019  0000                     FSR2L equ 0FD9h ;# 
  2020                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2021  0000                     FSR2H equ 0FDAh ;# 
  2022                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2023  0000                     PLUSW2 equ 0FDBh ;# 
  2024                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2025  0000                     PREINC2 equ 0FDCh ;# 
  2026                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2027  0000                     POSTDEC2 equ 0FDDh ;# 
  2028                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2029  0000                     POSTINC2 equ 0FDEh ;# 
  2030                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2031  0000                     INDF2 equ 0FDFh ;# 
  2032                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2033  0000                     BSR equ 0FE0h ;# 
  2034                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2035  0000                     FSR1 equ 0FE1h ;# 
  2036                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2037  0000                     FSR1L equ 0FE1h ;# 
  2038                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2039  0000                     FSR1H equ 0FE2h ;# 
  2040                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2041  0000                     PLUSW1 equ 0FE3h ;# 
  2042                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2043  0000                     PREINC1 equ 0FE4h ;# 
  2044                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2045  0000                     POSTDEC1 equ 0FE5h ;# 
  2046                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2047  0000                     POSTINC1 equ 0FE6h ;# 
  2048                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2049  0000                     INDF1 equ 0FE7h ;# 
  2050                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2051  0000                     WREG equ 0FE8h ;# 
  2052                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2053  0000                     FSR0 equ 0FE9h ;# 
  2054                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2055  0000                     FSR0L equ 0FE9h ;# 
  2056                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2057  0000                     FSR0H equ 0FEAh ;# 
  2058                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2059  0000                     PLUSW0 equ 0FEBh ;# 
  2060                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2061  0000                     PREINC0 equ 0FECh ;# 
  2062                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2063  0000                     POSTDEC0 equ 0FEDh ;# 
  2064                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2065  0000                     POSTINC0 equ 0FEEh ;# 
  2066                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2067  0000                     INDF0 equ 0FEFh ;# 
  2068                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2069  0000                     INTCON3 equ 0FF0h ;# 
  2070                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2071  0000                     INTCON2 equ 0FF1h ;# 
  2072                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2073  0000                     INTCON equ 0FF2h ;# 
  2074                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2075  0000                     PROD equ 0FF3h ;# 
  2076                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2077  0000                     PRODL equ 0FF3h ;# 
  2078                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2079  0000                     PRODH equ 0FF4h ;# 
  2080                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2081  0000                     TABLAT equ 0FF5h ;# 
  2082                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2083  0000                     TBLPTR equ 0FF6h ;# 
  2084                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2085  0000                     TBLPTRL equ 0FF6h ;# 
  2086                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2087  0000                     TBLPTRH equ 0FF7h ;# 
  2088                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2089  0000                     TBLPTRU equ 0FF8h ;# 
  2090                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2091  0000                     PCLAT equ 0FF9h ;# 
  2092                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2093  0000                     PC equ 0FF9h ;# 
  2094                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2095  0000                     PCL equ 0FF9h ;# 
  2096                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2097  0000                     PCLATH equ 0FFAh ;# 
  2098                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2099  0000                     PCLATU equ 0FFBh ;# 
  2100                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2101  0000                     STKPTR equ 0FFCh ;# 
  2102                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2103  0000                     TOS equ 0FFDh ;# 
  2104                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2105  0000                     TOSL equ 0FFDh ;# 
  2106                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2107  0000                     TOSH equ 0FFEh ;# 
  2108                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2109  0000                     TOSU equ 0FFFh ;# 
  2110                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2111  0000                     PORTA equ 0F80h ;# 
  2112                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2113  0000                     PORTB equ 0F81h ;# 
  2114                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2115  0000                     PORTC equ 0F82h ;# 
  2116                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2117  0000                     PORTD equ 0F83h ;# 
  2118                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2119  0000                     PORTE equ 0F84h ;# 
  2120                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2121  0000                     SSP2CON2 equ 0F85h ;# 
  2122                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2123  0000                     SSP2CON1 equ 0F86h ;# 
  2124                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2125  0000                     SSP2STAT equ 0F87h ;# 
  2126                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2127  0000                     SSP2ADD equ 0F88h ;# 
  2128                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2129  0000                     LATA equ 0F89h ;# 
  2130                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2131  0000                     LATB equ 0F8Ah ;# 
  2132                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2133  0000                     LATC equ 0F8Bh ;# 
  2134                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2135  0000                     LATD equ 0F8Ch ;# 
  2136                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2137  0000                     LATE equ 0F8Dh ;# 
  2138                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2139  0000                     SSP2BUF equ 0F8Eh ;# 
  2140                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2141  0000                     TRISA equ 0F92h ;# 
  2142                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2143  0000                     DDRA equ 0F92h ;# 
  2144                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2145  0000                     TRISB equ 0F93h ;# 
  2146                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2147  0000                     DDRB equ 0F93h ;# 
  2148                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2149  0000                     TRISC equ 0F94h ;# 
  2150                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2151  0000                     DDRC equ 0F94h ;# 
  2152                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2153  0000                     TRISD equ 0F95h ;# 
  2154                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2155  0000                     DDRD equ 0F95h ;# 
  2156                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2157  0000                     TRISE equ 0F96h ;# 
  2158                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2159  0000                     DDRE equ 0F96h ;# 
  2160                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2161  0000                     OSCTUNE equ 0F9Bh ;# 
  2162                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2163  0000                     PIE1 equ 0F9Dh ;# 
  2164                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2165  0000                     PIR1 equ 0F9Eh ;# 
  2166                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2167  0000                     IPR1 equ 0F9Fh ;# 
  2168                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2169  0000                     PIE2 equ 0FA0h ;# 
  2170                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2171  0000                     PIR2 equ 0FA1h ;# 
  2172                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2173  0000                     IPR2 equ 0FA2h ;# 
  2174                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2175  0000                     PIE3 equ 0FA3h ;# 
  2176                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2177  0000                     PIR3 equ 0FA4h ;# 
  2178                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2179  0000                     IPR3 equ 0FA5h ;# 
  2180                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2181  0000                     EECON1 equ 0FA6h ;# 
  2182                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2183  0000                     EECON2 equ 0FA7h ;# 
  2184                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2185  0000                     RCSTA equ 0FABh ;# 
  2186                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2187  0000                     RCSTA1 equ 0FABh ;# 
  2188                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2189  0000                     TXSTA equ 0FACh ;# 
  2190                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2191  0000                     TXSTA1 equ 0FACh ;# 
  2192                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2193  0000                     TXREG equ 0FADh ;# 
  2194                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2195  0000                     TXREG1 equ 0FADh ;# 
  2196                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2197  0000                     RCREG equ 0FAEh ;# 
  2198                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2199  0000                     RCREG1 equ 0FAEh ;# 
  2200                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2201  0000                     SPBRG equ 0FAFh ;# 
  2202                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2203  0000                     SPBRG1 equ 0FAFh ;# 
  2204                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2205  0000                     SPBRGH equ 0FB0h ;# 
  2206                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2207  0000                     CMCON equ 0FB4h ;# 
  2208                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2209  0000                     CVRCON equ 0FB5h ;# 
  2210                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2211  0000                     ECCP1AS equ 0FB6h ;# 
  2212                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2213  0000                     ECCP1DEL equ 0FB7h ;# 
  2214                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2215  0000                     PWM1CON equ 0FB7h ;# 
  2216                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2217  0000                     BAUDCON equ 0FB8h ;# 
  2218                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2219  0000                     BAUDCTL equ 0FB8h ;# 
  2220                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2221  0000                     CCP2CON equ 0FBAh ;# 
  2222                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2223  0000                     CCPR2 equ 0FBBh ;# 
  2224                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2225  0000                     CCPR2L equ 0FBBh ;# 
  2226                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2227  0000                     CCPR2H equ 0FBCh ;# 
  2228                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2229  0000                     ECCP1CON equ 0FBDh ;# 
  2230                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2231  0000                     CCP1CON equ 0FBDh ;# 
  2232                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2233  0000                     CCPR1 equ 0FBEh ;# 
  2234                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2235  0000                     CCPR1L equ 0FBEh ;# 
  2236                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2237  0000                     CCPR1H equ 0FBFh ;# 
  2238                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2239  0000                     ADCON2 equ 0FC0h ;# 
  2240                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2241  0000                     ADCON1 equ 0FC1h ;# 
  2242                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2243  0000                     ADCON0 equ 0FC2h ;# 
  2244                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2245  0000                     ADRES equ 0FC3h ;# 
  2246                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2247  0000                     ADRESL equ 0FC3h ;# 
  2248                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2249  0000                     ADRESH equ 0FC4h ;# 
  2250                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2251  0000                     SSPCON2 equ 0FC5h ;# 
  2252                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2253  0000                     SSP1CON2 equ 0FC5h ;# 
  2254                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2255  0000                     SSPCON1 equ 0FC6h ;# 
  2256                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2257  0000                     SSP1CON1 equ 0FC6h ;# 
  2258                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2259  0000                     SSPSTAT equ 0FC7h ;# 
  2260                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2261  0000                     SSP1STAT equ 0FC7h ;# 
  2262                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2263  0000                     SSPADD equ 0FC8h ;# 
  2264                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2265  0000                     SSP1ADD equ 0FC8h ;# 
  2266                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2267  0000                     SSPBUF equ 0FC9h ;# 
  2268                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2269  0000                     SSP1BUF equ 0FC9h ;# 
  2270                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2271  0000                     T2CON equ 0FCAh ;# 
  2272                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2273  0000                     PR2 equ 0FCBh ;# 
  2274                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2275  0000                     MEMCON equ 0FCBh ;# 
  2276                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2277  0000                     TMR2 equ 0FCCh ;# 
  2278                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2279  0000                     T1CON equ 0FCDh ;# 
  2280                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2281  0000                     TMR1 equ 0FCEh ;# 
  2282                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2283  0000                     TMR1L equ 0FCEh ;# 
  2284                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2285  0000                     TMR1H equ 0FCFh ;# 
  2286                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2287  0000                     RCON equ 0FD0h ;# 
  2288                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2289  0000                     WDTCON equ 0FD1h ;# 
  2290                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2291  0000                     OSCCON equ 0FD3h ;# 
  2292                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2293  0000                     T0CON equ 0FD5h ;# 
  2294                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2295  0000                     TMR0 equ 0FD6h ;# 
  2296                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2297  0000                     TMR0L equ 0FD6h ;# 
  2298                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2299  0000                     TMR0H equ 0FD7h ;# 
  2300                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2301  0000                     STATUS equ 0FD8h ;# 
  2302                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2303  0000                     FSR2 equ 0FD9h ;# 
  2304                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2305  0000                     FSR2L equ 0FD9h ;# 
  2306                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2307  0000                     FSR2H equ 0FDAh ;# 
  2308                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2309  0000                     PLUSW2 equ 0FDBh ;# 
  2310                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2311  0000                     PREINC2 equ 0FDCh ;# 
  2312                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2313  0000                     POSTDEC2 equ 0FDDh ;# 
  2314                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2315  0000                     POSTINC2 equ 0FDEh ;# 
  2316                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2317  0000                     INDF2 equ 0FDFh ;# 
  2318                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2319  0000                     BSR equ 0FE0h ;# 
  2320                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2321  0000                     FSR1 equ 0FE1h ;# 
  2322                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2323  0000                     FSR1L equ 0FE1h ;# 
  2324                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2325  0000                     FSR1H equ 0FE2h ;# 
  2326                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2327  0000                     PLUSW1 equ 0FE3h ;# 
  2328                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2329  0000                     PREINC1 equ 0FE4h ;# 
  2330                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2331  0000                     POSTDEC1 equ 0FE5h ;# 
  2332                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2333  0000                     POSTINC1 equ 0FE6h ;# 
  2334                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2335  0000                     INDF1 equ 0FE7h ;# 
  2336                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2337  0000                     WREG equ 0FE8h ;# 
  2338                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2339  0000                     FSR0 equ 0FE9h ;# 
  2340                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2341  0000                     FSR0L equ 0FE9h ;# 
  2342                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2343  0000                     FSR0H equ 0FEAh ;# 
  2344                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2345  0000                     PLUSW0 equ 0FEBh ;# 
  2346                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2347  0000                     PREINC0 equ 0FECh ;# 
  2348                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2349  0000                     POSTDEC0 equ 0FEDh ;# 
  2350                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2351  0000                     POSTINC0 equ 0FEEh ;# 
  2352                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2353  0000                     INDF0 equ 0FEFh ;# 
  2354                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2355  0000                     INTCON3 equ 0FF0h ;# 
  2356                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2357  0000                     INTCON2 equ 0FF1h ;# 
  2358                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2359  0000                     INTCON equ 0FF2h ;# 
  2360                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2361  0000                     PROD equ 0FF3h ;# 
  2362                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2363  0000                     PRODL equ 0FF3h ;# 
  2364                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2365  0000                     PRODH equ 0FF4h ;# 
  2366                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2367  0000                     TABLAT equ 0FF5h ;# 
  2368                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2369  0000                     TBLPTR equ 0FF6h ;# 
  2370                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2371  0000                     TBLPTRL equ 0FF6h ;# 
  2372                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2373  0000                     TBLPTRH equ 0FF7h ;# 
  2374                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2375  0000                     TBLPTRU equ 0FF8h ;# 
  2376                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2377  0000                     PCLAT equ 0FF9h ;# 
  2378                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2379  0000                     PC equ 0FF9h ;# 
  2380                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2381  0000                     PCL equ 0FF9h ;# 
  2382                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2383  0000                     PCLATH equ 0FFAh ;# 
  2384                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2385  0000                     PCLATU equ 0FFBh ;# 
  2386                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2387  0000                     STKPTR equ 0FFCh ;# 
  2388                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2389  0000                     TOS equ 0FFDh ;# 
  2390                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2391  0000                     TOSL equ 0FFDh ;# 
  2392                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2393  0000                     TOSH equ 0FFEh ;# 
  2394                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2395  0000                     TOSU equ 0FFFh ;# 
  2396                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2397  0000                     PORTA equ 0F80h ;# 
  2398                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2399  0000                     PORTB equ 0F81h ;# 
  2400                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2401  0000                     PORTC equ 0F82h ;# 
  2402                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2403  0000                     PORTD equ 0F83h ;# 
  2404                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2405  0000                     PORTE equ 0F84h ;# 
  2406                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2407  0000                     SSP2CON2 equ 0F85h ;# 
  2408                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2409  0000                     SSP2CON1 equ 0F86h ;# 
  2410                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2411  0000                     SSP2STAT equ 0F87h ;# 
  2412                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2413  0000                     SSP2ADD equ 0F88h ;# 
  2414                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2415  0000                     LATA equ 0F89h ;# 
  2416                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2417  0000                     LATB equ 0F8Ah ;# 
  2418                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2419  0000                     LATC equ 0F8Bh ;# 
  2420                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2421  0000                     LATD equ 0F8Ch ;# 
  2422                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2423  0000                     LATE equ 0F8Dh ;# 
  2424                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2425  0000                     SSP2BUF equ 0F8Eh ;# 
  2426                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2427  0000                     TRISA equ 0F92h ;# 
  2428                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2429  0000                     DDRA equ 0F92h ;# 
  2430                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2431  0000                     TRISB equ 0F93h ;# 
  2432                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2433  0000                     DDRB equ 0F93h ;# 
  2434                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2435  0000                     TRISC equ 0F94h ;# 
  2436                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2437  0000                     DDRC equ 0F94h ;# 
  2438                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2439  0000                     TRISD equ 0F95h ;# 
  2440                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2441  0000                     DDRD equ 0F95h ;# 
  2442                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2443  0000                     TRISE equ 0F96h ;# 
  2444                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2445  0000                     DDRE equ 0F96h ;# 
  2446                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2447  0000                     OSCTUNE equ 0F9Bh ;# 
  2448                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2449  0000                     PIE1 equ 0F9Dh ;# 
  2450                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2451  0000                     PIR1 equ 0F9Eh ;# 
  2452                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2453  0000                     IPR1 equ 0F9Fh ;# 
  2454                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2455  0000                     PIE2 equ 0FA0h ;# 
  2456                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2457  0000                     PIR2 equ 0FA1h ;# 
  2458                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2459  0000                     IPR2 equ 0FA2h ;# 
  2460                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2461  0000                     PIE3 equ 0FA3h ;# 
  2462                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2463  0000                     PIR3 equ 0FA4h ;# 
  2464                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2465  0000                     IPR3 equ 0FA5h ;# 
  2466                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2467  0000                     EECON1 equ 0FA6h ;# 
  2468                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2469  0000                     EECON2 equ 0FA7h ;# 
  2470                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2471  0000                     RCSTA equ 0FABh ;# 
  2472                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2473  0000                     RCSTA1 equ 0FABh ;# 
  2474                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2475  0000                     TXSTA equ 0FACh ;# 
  2476                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2477  0000                     TXSTA1 equ 0FACh ;# 
  2478                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2479  0000                     TXREG equ 0FADh ;# 
  2480                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2481  0000                     TXREG1 equ 0FADh ;# 
  2482                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2483  0000                     RCREG equ 0FAEh ;# 
  2484                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2485  0000                     RCREG1 equ 0FAEh ;# 
  2486                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2487  0000                     SPBRG equ 0FAFh ;# 
  2488                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2489  0000                     SPBRG1 equ 0FAFh ;# 
  2490                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2491  0000                     SPBRGH equ 0FB0h ;# 
  2492                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2493  0000                     CMCON equ 0FB4h ;# 
  2494                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2495  0000                     CVRCON equ 0FB5h ;# 
  2496                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2497  0000                     ECCP1AS equ 0FB6h ;# 
  2498                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2499  0000                     ECCP1DEL equ 0FB7h ;# 
  2500                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2501  0000                     PWM1CON equ 0FB7h ;# 
  2502                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2503  0000                     BAUDCON equ 0FB8h ;# 
  2504                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2505  0000                     BAUDCTL equ 0FB8h ;# 
  2506                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2507  0000                     CCP2CON equ 0FBAh ;# 
  2508                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2509  0000                     CCPR2 equ 0FBBh ;# 
  2510                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2511  0000                     CCPR2L equ 0FBBh ;# 
  2512                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2513  0000                     CCPR2H equ 0FBCh ;# 
  2514                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2515  0000                     ECCP1CON equ 0FBDh ;# 
  2516                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2517  0000                     CCP1CON equ 0FBDh ;# 
  2518                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2519  0000                     CCPR1 equ 0FBEh ;# 
  2520                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2521  0000                     CCPR1L equ 0FBEh ;# 
  2522                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2523  0000                     CCPR1H equ 0FBFh ;# 
  2524                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2525  0000                     ADCON2 equ 0FC0h ;# 
  2526                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2527  0000                     ADCON1 equ 0FC1h ;# 
  2528                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2529  0000                     ADCON0 equ 0FC2h ;# 
  2530                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2531  0000                     ADRES equ 0FC3h ;# 
  2532                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2533  0000                     ADRESL equ 0FC3h ;# 
  2534                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2535  0000                     ADRESH equ 0FC4h ;# 
  2536                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2537  0000                     SSPCON2 equ 0FC5h ;# 
  2538                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2539  0000                     SSP1CON2 equ 0FC5h ;# 
  2540                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2541  0000                     SSPCON1 equ 0FC6h ;# 
  2542                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2543  0000                     SSP1CON1 equ 0FC6h ;# 
  2544                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2545  0000                     SSPSTAT equ 0FC7h ;# 
  2546                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2547  0000                     SSP1STAT equ 0FC7h ;# 
  2548                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2549  0000                     SSPADD equ 0FC8h ;# 
  2550                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2551  0000                     SSP1ADD equ 0FC8h ;# 
  2552                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2553  0000                     SSPBUF equ 0FC9h ;# 
  2554                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2555  0000                     SSP1BUF equ 0FC9h ;# 
  2556                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2557  0000                     T2CON equ 0FCAh ;# 
  2558                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2559  0000                     PR2 equ 0FCBh ;# 
  2560                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2561  0000                     MEMCON equ 0FCBh ;# 
  2562                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2563  0000                     TMR2 equ 0FCCh ;# 
  2564                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2565  0000                     T1CON equ 0FCDh ;# 
  2566                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2567  0000                     TMR1 equ 0FCEh ;# 
  2568                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2569  0000                     TMR1L equ 0FCEh ;# 
  2570                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2571  0000                     TMR1H equ 0FCFh ;# 
  2572                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2573  0000                     RCON equ 0FD0h ;# 
  2574                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2575  0000                     WDTCON equ 0FD1h ;# 
  2576                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2577  0000                     OSCCON equ 0FD3h ;# 
  2578                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2579  0000                     T0CON equ 0FD5h ;# 
  2580                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2581  0000                     TMR0 equ 0FD6h ;# 
  2582                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2583  0000                     TMR0L equ 0FD6h ;# 
  2584                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2585  0000                     TMR0H equ 0FD7h ;# 
  2586                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2587  0000                     STATUS equ 0FD8h ;# 
  2588                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2589  0000                     FSR2 equ 0FD9h ;# 
  2590                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2591  0000                     FSR2L equ 0FD9h ;# 
  2592                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2593  0000                     FSR2H equ 0FDAh ;# 
  2594                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2595  0000                     PLUSW2 equ 0FDBh ;# 
  2596                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2597  0000                     PREINC2 equ 0FDCh ;# 
  2598                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2599  0000                     POSTDEC2 equ 0FDDh ;# 
  2600                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2601  0000                     POSTINC2 equ 0FDEh ;# 
  2602                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2603  0000                     INDF2 equ 0FDFh ;# 
  2604                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2605  0000                     BSR equ 0FE0h ;# 
  2606                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2607  0000                     FSR1 equ 0FE1h ;# 
  2608                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2609  0000                     FSR1L equ 0FE1h ;# 
  2610                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2611  0000                     FSR1H equ 0FE2h ;# 
  2612                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2613  0000                     PLUSW1 equ 0FE3h ;# 
  2614                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2615  0000                     PREINC1 equ 0FE4h ;# 
  2616                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2617  0000                     POSTDEC1 equ 0FE5h ;# 
  2618                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2619  0000                     POSTINC1 equ 0FE6h ;# 
  2620                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2621  0000                     INDF1 equ 0FE7h ;# 
  2622                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2623  0000                     WREG equ 0FE8h ;# 
  2624                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2625  0000                     FSR0 equ 0FE9h ;# 
  2626                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2627  0000                     FSR0L equ 0FE9h ;# 
  2628                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2629  0000                     FSR0H equ 0FEAh ;# 
  2630                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2631  0000                     PLUSW0 equ 0FEBh ;# 
  2632                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2633  0000                     PREINC0 equ 0FECh ;# 
  2634                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2635  0000                     POSTDEC0 equ 0FEDh ;# 
  2636                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2637  0000                     POSTINC0 equ 0FEEh ;# 
  2638                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2639  0000                     INDF0 equ 0FEFh ;# 
  2640                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2641  0000                     INTCON3 equ 0FF0h ;# 
  2642                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2643  0000                     INTCON2 equ 0FF1h ;# 
  2644                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2645  0000                     INTCON equ 0FF2h ;# 
  2646                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2647  0000                     PROD equ 0FF3h ;# 
  2648                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2649  0000                     PRODL equ 0FF3h ;# 
  2650                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2651  0000                     PRODH equ 0FF4h ;# 
  2652                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2653  0000                     TABLAT equ 0FF5h ;# 
  2654                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2655  0000                     TBLPTR equ 0FF6h ;# 
  2656                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2657  0000                     TBLPTRL equ 0FF6h ;# 
  2658                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2659  0000                     TBLPTRH equ 0FF7h ;# 
  2660                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2661  0000                     TBLPTRU equ 0FF8h ;# 
  2662                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2663  0000                     PCLAT equ 0FF9h ;# 
  2664                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2665  0000                     PC equ 0FF9h ;# 
  2666                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2667  0000                     PCL equ 0FF9h ;# 
  2668                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2669  0000                     PCLATH equ 0FFAh ;# 
  2670                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2671  0000                     PCLATU equ 0FFBh ;# 
  2672                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2673  0000                     STKPTR equ 0FFCh ;# 
  2674                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2675  0000                     TOS equ 0FFDh ;# 
  2676                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2677  0000                     TOSL equ 0FFDh ;# 
  2678                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2679  0000                     TOSH equ 0FFEh ;# 
  2680                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2681  0000                     TOSU equ 0FFFh ;# 
  2682                           	FNCALL	_main,_init_uart_recv
  2683                           	FNCALL	_main,_init_i2c
  2684                           	FNCALL	_main,_init_timer1_lthread
  2685                           	FNCALL	_main,_init_queues
  2686                           	FNCALL	_main,_OpenTimer1
  2687                           	FNCALL	_main,_enable_interrupts
  2688                           	FNCALL	_main,_i2c_configure_slave
  2689                           	FNCALL	_main,_OpenUSART
  2690                           	FNCALL	_main,_block_on_To_msgqueues
  2691                           	FNCALL	_main,_ToMainHigh_recvmsg
  2692                           	FNCALL	_main,_timer0_lthread
  2693                           	FNCALL	_main,_ToMainLow_recvmsg
  2694                           	FNCALL	_main,_timer1_lthread
  2695                           	FNCALL	_main,_FromMainLow_sendmsg
  2696                           	FNCALL	_main,_uart_lthread
  2697                           	FNCALL	_init_timer1_lthread,_OpenADC
  2698                           	FNCALL	_init_timer1_lthread,_SetChanADC
  2699                           	FNCALL	_init_queues,_init_queue
  2700                           	FNCALL	_block_on_To_msgqueues,_in_main
  2701                           	FNCALL	_block_on_To_msgqueues,_check_msg
  2702                           	FNCALL	_block_on_To_msgqueues,_Delay1KTCYx
  2703                           	FNCALL	_in_main,_in_low_int
  2704                           	FNCALL	_in_main,_in_high_int
  2705                           	FNCALL	_in_low_int,_in_high_int
  2706                           	FNCALL	_ToMainHigh_recvmsg,_recv_msg
  2707                           	FNCALL	_ToMainLow_recvmsg,_recv_msg
  2708                           	FNCALL	_timer1_lthread,_ConvertADC
  2709                           	FNCALL	_FromMainLow_sendmsg,_send_msg
  2710                           	FNCALL	_send_msg,_memcpy
  2711                           	FNCALL	_recv_msg,_memcpy
  2712                           	FNROOT	_main
  2713                           	FNCALL	_InterruptHandlerHigh,_i2c_int_handler
  2714                           	FNCALL	_InterruptHandlerHigh,_timer0_int_handler
  2715                           	FNCALL	_InterruptHandlerHigh,_SleepIfOkay
  2716                           	FNCALL	_i2c_int_handler,_handle_start
  2717                           	FNCALL	_i2c_int_handler,_FromMainLow_recvmsg
  2718                           	FNCALL	_i2c_int_handler,_start_i2c_slave_reply
  2719                           	FNCALL	_i2c_int_handler,_ToMainHigh_sendmsg
  2720                           	FNCALL	_timer0_int_handler,_WriteTimer0
  2721                           	FNCALL	_timer0_int_handler,_FromMainHigh_recvmsg
  2722                           	FNCALL	_timer0_int_handler,_ToMainHigh_sendmsg
  2723                           	FNCALL	_SleepIfOkay,i2_in_low_int
  2724                           	FNCALL	_SleepIfOkay,i2_in_high_int
  2725                           	FNCALL	_SleepIfOkay,i2_check_msg
  2726                           	FNCALL	_SleepIfOkay,_enter_sleep_mode
  2727                           	FNCALL	_ToMainHigh_sendmsg,i2_send_msg
  2728                           	FNCALL	_FromMainLow_recvmsg,i2_recv_msg
  2729                           	FNCALL	_FromMainHigh_recvmsg,i2_recv_msg
  2730                           	FNCALL	i2_in_low_int,i2_in_high_int
  2731                           	FNCALL	i2_send_msg,i2_memcpy
  2732                           	FNCALL	i2_recv_msg,i2_memcpy
  2733                           	FNCALL	intlevel2,_InterruptHandlerHigh
  2734                           	global	intlevel2
  2735                           	FNROOT	intlevel2
  2736                           	FNCALL	_InterruptHandlerLow,_timer1_int_handler
  2737                           	FNCALL	_InterruptHandlerLow,_adc_int_handler
  2738                           	FNCALL	_InterruptHandlerLow,_uart_recv_int_handler
  2739                           	FNCALL	_timer1_int_handler,_ReadTimer1
  2740                           	FNCALL	_timer1_int_handler,_ToMainLow_sendmsg
  2741                           	FNCALL	_timer1_int_handler,_WriteTimer1
  2742                           	FNCALL	_adc_int_handler,_ReadADC
  2743                           	FNCALL	_adc_int_handler,_ToMainLow_sendmsg
  2744                           	FNCALL	_uart_recv_int_handler,_ReadUSART
  2745                           	FNCALL	_uart_recv_int_handler,_ToMainLow_sendmsg
  2746                           	FNCALL	_ToMainLow_sendmsg,i1_send_msg
  2747                           	FNCALL	i1_send_msg,i1_memcpy
  2748                           	FNCALL	intlevel1,_InterruptHandlerLow
  2749                           	global	intlevel1
  2750                           	FNROOT	intlevel1
  2751                           	global	i2c_int_handler@F5030
  2752                           psect	idataBANK0,class=CODE,space=0,delta=1
  2753                           global __pidataBANK0
  2754  001CCA                     __pidataBANK0:
  2755                           	file	"../src/my_i2c.c"
  2756                           	line	260
  2757                           
  2758                           ;initializer for i2c_int_handler@F5030
  2759  001CCA  00                 	db	low(0)
  2760  001CCB  00                 	db	low(0)
  2761  001CCC  55                 	db	low(055h)
  2762                           	global	_MQ_Main_Willing_to_block
  2763                           	global	_USART_Status
  2764                           	global	_FromMainLow_MQ
  2765                           	global	_ToMainHigh_MQ
  2766                           	global	_ToMainLow_MQ
  2767                           	global	_FromMainHigh_MQ
  2768                           	global	_PC
  2769  0000                     _PC	set	0xFF9
  2770                           	global	_PCLAT
  2771  0000                     _PCLAT	set	0xFF9
  2772                           	global	_TBLPTR
  2773  0000                     _TBLPTR	set	0xFF6
  2774                           	global	_TOS
  2775  0000                     _TOS	set	0xFFD
  2776                           	global	_ADRES
  2777  0000                     _ADRES	set	0xFC3
  2778                           	global	_CCPR1
  2779  0000                     _CCPR1	set	0xFBE
  2780                           	global	_CCPR2
  2781  0000                     _CCPR2	set	0xFBB
  2782                           	global	_FSR0
  2783  0000                     _FSR0	set	0xFE9
  2784                           	global	_FSR1
  2785  0000                     _FSR1	set	0xFE1
  2786                           	global	_FSR2
  2787  0000                     _FSR2	set	0xFD9
  2788                           	global	_PROD
  2789  0000                     _PROD	set	0xFF3
  2790                           	global	_TMR0
  2791  0000                     _TMR0	set	0xFD6
  2792                           	global	_TMR1
  2793  0000                     _TMR1	set	0xFCE
  2794                           	global	_ADCON0
  2795  0000                     _ADCON0	set	0xFC2
  2796                           	global	_ADCON0bits
  2797  0000                     _ADCON0bits	set	0xFC2
  2798                           	global	_ADCON1
  2799  0000                     _ADCON1	set	0xFC1
  2800                           	global	_ADCON1bits
  2801  0000                     _ADCON1bits	set	0xFC1
  2802                           	global	_ADCON2
  2803  0000                     _ADCON2	set	0xFC0
  2804                           	global	_ADCON2bits
  2805  0000                     _ADCON2bits	set	0xFC0
  2806                           	global	_ADRESH
  2807  0000                     _ADRESH	set	0xFC4
  2808                           	global	_ADRESL
  2809  0000                     _ADRESL	set	0xFC3
  2810                           	global	_BAUDCON
  2811  0000                     _BAUDCON	set	0xFB8
  2812                           	global	_BAUDCONbits
  2813  0000                     _BAUDCONbits	set	0xFB8
  2814                           	global	_BAUDCTL
  2815  0000                     _BAUDCTL	set	0xFB8
  2816                           	global	_BAUDCTLbits
  2817  0000                     _BAUDCTLbits	set	0xFB8
  2818                           	global	_BSR
  2819  0000                     _BSR	set	0xFE0
  2820                           	global	_CCP1CON
  2821  0000                     _CCP1CON	set	0xFBD
  2822                           	global	_CCP1CONbits
  2823  0000                     _CCP1CONbits	set	0xFBD
  2824                           	global	_CCP2CON
  2825  0000                     _CCP2CON	set	0xFBA
  2826                           	global	_CCP2CONbits
  2827  0000                     _CCP2CONbits	set	0xFBA
  2828                           	global	_CCPR1H
  2829  0000                     _CCPR1H	set	0xFBF
  2830                           	global	_CCPR1L
  2831  0000                     _CCPR1L	set	0xFBE
  2832                           	global	_CCPR2H
  2833  0000                     _CCPR2H	set	0xFBC
  2834                           	global	_CCPR2L
  2835  0000                     _CCPR2L	set	0xFBB
  2836                           	global	_CMCON
  2837  0000                     _CMCON	set	0xFB4
  2838                           	global	_CMCONbits
  2839  0000                     _CMCONbits	set	0xFB4
  2840                           	global	_CVRCON
  2841  0000                     _CVRCON	set	0xFB5
  2842                           	global	_CVRCONbits
  2843  0000                     _CVRCONbits	set	0xFB5
  2844                           	global	_DDRA
  2845  0000                     _DDRA	set	0xF92
  2846                           	global	_DDRAbits
  2847  0000                     _DDRAbits	set	0xF92
  2848                           	global	_DDRB
  2849  0000                     _DDRB	set	0xF93
  2850                           	global	_DDRBbits
  2851  0000                     _DDRBbits	set	0xF93
  2852                           	global	_DDRC
  2853  0000                     _DDRC	set	0xF94
  2854                           	global	_DDRCbits
  2855  0000                     _DDRCbits	set	0xF94
  2856                           	global	_DDRD
  2857  0000                     _DDRD	set	0xF95
  2858                           	global	_DDRDbits
  2859  0000                     _DDRDbits	set	0xF95
  2860                           	global	_DDRE
  2861  0000                     _DDRE	set	0xF96
  2862                           	global	_DDREbits
  2863  0000                     _DDREbits	set	0xF96
  2864                           	global	_ECCP1AS
  2865  0000                     _ECCP1AS	set	0xFB6
  2866                           	global	_ECCP1ASbits
  2867  0000                     _ECCP1ASbits	set	0xFB6
  2868                           	global	_ECCP1CON
  2869  0000                     _ECCP1CON	set	0xFBD
  2870                           	global	_ECCP1CONbits
  2871  0000                     _ECCP1CONbits	set	0xFBD
  2872                           	global	_ECCP1DEL
  2873  0000                     _ECCP1DEL	set	0xFB7
  2874                           	global	_ECCP1DELbits
  2875  0000                     _ECCP1DELbits	set	0xFB7
  2876                           	global	_EECON1
  2877  0000                     _EECON1	set	0xFA6
  2878                           	global	_EECON1bits
  2879  0000                     _EECON1bits	set	0xFA6
  2880                           	global	_EECON2
  2881  0000                     _EECON2	set	0xFA7
  2882                           	global	_FSR0H
  2883  0000                     _FSR0H	set	0xFEA
  2884                           	global	_FSR0L
  2885  0000                     _FSR0L	set	0xFE9
  2886                           	global	_FSR1H
  2887  0000                     _FSR1H	set	0xFE2
  2888                           	global	_FSR1L
  2889  0000                     _FSR1L	set	0xFE1
  2890                           	global	_FSR2H
  2891  0000                     _FSR2H	set	0xFDA
  2892                           	global	_FSR2L
  2893  0000                     _FSR2L	set	0xFD9
  2894                           	global	_INDF0
  2895  0000                     _INDF0	set	0xFEF
  2896                           	global	_INDF1
  2897  0000                     _INDF1	set	0xFE7
  2898                           	global	_INDF2
  2899  0000                     _INDF2	set	0xFDF
  2900                           	global	_INTCON
  2901  0000                     _INTCON	set	0xFF2
  2902                           	global	_INTCON2
  2903  0000                     _INTCON2	set	0xFF1
  2904                           	global	_INTCON2bits
  2905  0000                     _INTCON2bits	set	0xFF1
  2906                           	global	_INTCON3
  2907  0000                     _INTCON3	set	0xFF0
  2908                           	global	_INTCON3bits
  2909  0000                     _INTCON3bits	set	0xFF0
  2910                           	global	_INTCONbits
  2911  0000                     _INTCONbits	set	0xFF2
  2912                           	global	_IPR1
  2913  0000                     _IPR1	set	0xF9F
  2914                           	global	_IPR1bits
  2915  0000                     _IPR1bits	set	0xF9F
  2916                           	global	_IPR2
  2917  0000                     _IPR2	set	0xFA2
  2918                           	global	_IPR2bits
  2919  0000                     _IPR2bits	set	0xFA2
  2920                           	global	_IPR3
  2921  0000                     _IPR3	set	0xFA5
  2922                           	global	_IPR3bits
  2923  0000                     _IPR3bits	set	0xFA5
  2924                           	global	_LATA
  2925  0000                     _LATA	set	0xF89
  2926                           	global	_LATAbits
  2927  0000                     _LATAbits	set	0xF89
  2928                           	global	_LATB
  2929  0000                     _LATB	set	0xF8A
  2930                           	global	_LATBbits
  2931  0000                     _LATBbits	set	0xF8A
  2932                           	global	_LATC
  2933  0000                     _LATC	set	0xF8B
  2934                           	global	_LATCbits
  2935  0000                     _LATCbits	set	0xF8B
  2936                           	global	_LATD
  2937  0000                     _LATD	set	0xF8C
  2938                           	global	_LATDbits
  2939  0000                     _LATDbits	set	0xF8C
  2940                           	global	_LATE
  2941  0000                     _LATE	set	0xF8D
  2942                           	global	_LATEbits
  2943  0000                     _LATEbits	set	0xF8D
  2944                           	global	_MEMCON
  2945  0000                     _MEMCON	set	0xFCB
  2946                           	global	_OSCCON
  2947  0000                     _OSCCON	set	0xFD3
  2948                           	global	_OSCCONbits
  2949  0000                     _OSCCONbits	set	0xFD3
  2950                           	global	_OSCTUNE
  2951  0000                     _OSCTUNE	set	0xF9B
  2952                           	global	_OSCTUNEbits
  2953  0000                     _OSCTUNEbits	set	0xF9B
  2954                           	global	_PCL
  2955  0000                     _PCL	set	0xFF9
  2956                           	global	_PCLATH
  2957  0000                     _PCLATH	set	0xFFA
  2958                           	global	_PCLATU
  2959  0000                     _PCLATU	set	0xFFB
  2960                           	global	_PIE1
  2961  0000                     _PIE1	set	0xF9D
  2962                           	global	_PIE1bits
  2963  0000                     _PIE1bits	set	0xF9D
  2964                           	global	_PIE2
  2965  0000                     _PIE2	set	0xFA0
  2966                           	global	_PIE2bits
  2967  0000                     _PIE2bits	set	0xFA0
  2968                           	global	_PIE3
  2969  0000                     _PIE3	set	0xFA3
  2970                           	global	_PIE3bits
  2971  0000                     _PIE3bits	set	0xFA3
  2972                           	global	_PIR1
  2973  0000                     _PIR1	set	0xF9E
  2974                           	global	_PIR1bits
  2975  0000                     _PIR1bits	set	0xF9E
  2976                           	global	_PIR2
  2977  0000                     _PIR2	set	0xFA1
  2978                           	global	_PIR2bits
  2979  0000                     _PIR2bits	set	0xFA1
  2980                           	global	_PIR3
  2981  0000                     _PIR3	set	0xFA4
  2982                           	global	_PIR3bits
  2983  0000                     _PIR3bits	set	0xFA4
  2984                           	global	_PLUSW0
  2985  0000                     _PLUSW0	set	0xFEB
  2986                           	global	_PLUSW1
  2987  0000                     _PLUSW1	set	0xFE3
  2988                           	global	_PLUSW2
  2989  0000                     _PLUSW2	set	0xFDB
  2990                           	global	_PORTA
  2991  0000                     _PORTA	set	0xF80
  2992                           	global	_PORTAbits
  2993  0000                     _PORTAbits	set	0xF80
  2994                           	global	_PORTB
  2995  0000                     _PORTB	set	0xF81
  2996                           	global	_PORTBbits
  2997  0000                     _PORTBbits	set	0xF81
  2998                           	global	_PORTC
  2999  0000                     _PORTC	set	0xF82
  3000                           	global	_PORTCbits
  3001  0000                     _PORTCbits	set	0xF82
  3002                           	global	_PORTD
  3003  0000                     _PORTD	set	0xF83
  3004                           	global	_PORTDbits
  3005  0000                     _PORTDbits	set	0xF83
  3006                           	global	_PORTE
  3007  0000                     _PORTE	set	0xF84
  3008                           	global	_PORTEbits
  3009  0000                     _PORTEbits	set	0xF84
  3010                           	global	_POSTDEC0
  3011  0000                     _POSTDEC0	set	0xFED
  3012                           	global	_POSTDEC1
  3013  0000                     _POSTDEC1	set	0xFE5
  3014                           	global	_POSTDEC2
  3015  0000                     _POSTDEC2	set	0xFDD
  3016                           	global	_POSTINC0
  3017  0000                     _POSTINC0	set	0xFEE
  3018                           	global	_POSTINC1
  3019  0000                     _POSTINC1	set	0xFE6
  3020                           	global	_POSTINC2
  3021  0000                     _POSTINC2	set	0xFDE
  3022                           	global	_PR2
  3023  0000                     _PR2	set	0xFCB
  3024                           	global	_PREINC0
  3025  0000                     _PREINC0	set	0xFEC
  3026                           	global	_PREINC1
  3027  0000                     _PREINC1	set	0xFE4
  3028                           	global	_PREINC2
  3029  0000                     _PREINC2	set	0xFDC
  3030                           	global	_PRODH
  3031  0000                     _PRODH	set	0xFF4
  3032                           	global	_PRODL
  3033  0000                     _PRODL	set	0xFF3
  3034                           	global	_PWM1CON
  3035  0000                     _PWM1CON	set	0xFB7
  3036                           	global	_PWM1CONbits
  3037  0000                     _PWM1CONbits	set	0xFB7
  3038                           	global	_RCON
  3039  0000                     _RCON	set	0xFD0
  3040                           	global	_RCONbits
  3041  0000                     _RCONbits	set	0xFD0
  3042                           	global	_RCREG
  3043  0000                     _RCREG	set	0xFAE
  3044                           	global	_RCREG1
  3045  0000                     _RCREG1	set	0xFAE
  3046                           	global	_RCSTA
  3047  0000                     _RCSTA	set	0xFAB
  3048                           	global	_RCSTA1
  3049  0000                     _RCSTA1	set	0xFAB
  3050                           	global	_RCSTA1bits
  3051  0000                     _RCSTA1bits	set	0xFAB
  3052                           	global	_RCSTAbits
  3053  0000                     _RCSTAbits	set	0xFAB
  3054                           	global	_SPBRG
  3055  0000                     _SPBRG	set	0xFAF
  3056                           	global	_SPBRG1
  3057  0000                     _SPBRG1	set	0xFAF
  3058                           	global	_SPBRGH
  3059  0000                     _SPBRGH	set	0xFB0
  3060                           	global	_SSP1ADD
  3061  0000                     _SSP1ADD	set	0xFC8
  3062                           	global	_SSP1ADDbits
  3063  0000                     _SSP1ADDbits	set	0xFC8
  3064                           	global	_SSP1BUF
  3065  0000                     _SSP1BUF	set	0xFC9
  3066                           	global	_SSP1CON1
  3067  0000                     _SSP1CON1	set	0xFC6
  3068                           	global	_SSP1CON1bits
  3069  0000                     _SSP1CON1bits	set	0xFC6
  3070                           	global	_SSP1CON2
  3071  0000                     _SSP1CON2	set	0xFC5
  3072                           	global	_SSP1CON2bits
  3073  0000                     _SSP1CON2bits	set	0xFC5
  3074                           	global	_SSP1STAT
  3075  0000                     _SSP1STAT	set	0xFC7
  3076                           	global	_SSP1STATbits
  3077  0000                     _SSP1STATbits	set	0xFC7
  3078                           	global	_SSP2ADD
  3079  0000                     _SSP2ADD	set	0xF88
  3080                           	global	_SSP2ADDbits
  3081  0000                     _SSP2ADDbits	set	0xF88
  3082                           	global	_SSP2BUF
  3083  0000                     _SSP2BUF	set	0xF8E
  3084                           	global	_SSP2CON1
  3085  0000                     _SSP2CON1	set	0xF86
  3086                           	global	_SSP2CON1bits
  3087  0000                     _SSP2CON1bits	set	0xF86
  3088                           	global	_SSP2CON2
  3089  0000                     _SSP2CON2	set	0xF85
  3090                           	global	_SSP2CON2bits
  3091  0000                     _SSP2CON2bits	set	0xF85
  3092                           	global	_SSP2STAT
  3093  0000                     _SSP2STAT	set	0xF87
  3094                           	global	_SSP2STATbits
  3095  0000                     _SSP2STATbits	set	0xF87
  3096                           	global	_SSPADD
  3097  0000                     _SSPADD	set	0xFC8
  3098                           	global	_SSPADDbits
  3099  0000                     _SSPADDbits	set	0xFC8
  3100                           	global	_SSPBUF
  3101  0000                     _SSPBUF	set	0xFC9
  3102                           	global	_SSPCON1
  3103  0000                     _SSPCON1	set	0xFC6
  3104                           	global	_SSPCON1bits
  3105  0000                     _SSPCON1bits	set	0xFC6
  3106                           	global	_SSPCON2
  3107  0000                     _SSPCON2	set	0xFC5
  3108                           	global	_SSPCON2bits
  3109  0000                     _SSPCON2bits	set	0xFC5
  3110                           	global	_SSPSTAT
  3111  0000                     _SSPSTAT	set	0xFC7
  3112                           	global	_SSPSTATbits
  3113  0000                     _SSPSTATbits	set	0xFC7
  3114                           	global	_STATUS
  3115  0000                     _STATUS	set	0xFD8
  3116                           	global	_STATUSbits
  3117  0000                     _STATUSbits	set	0xFD8
  3118                           	global	_STKPTR
  3119  0000                     _STKPTR	set	0xFFC
  3120                           	global	_STKPTRbits
  3121  0000                     _STKPTRbits	set	0xFFC
  3122                           	global	_T0CON
  3123  0000                     _T0CON	set	0xFD5
  3124                           	global	_T0CONbits
  3125  0000                     _T0CONbits	set	0xFD5
  3126                           	global	_T1CON
  3127  0000                     _T1CON	set	0xFCD
  3128                           	global	_T1CONbits
  3129  0000                     _T1CONbits	set	0xFCD
  3130                           	global	_T2CON
  3131  0000                     _T2CON	set	0xFCA
  3132                           	global	_T2CONbits
  3133  0000                     _T2CONbits	set	0xFCA
  3134                           	global	_TABLAT
  3135  0000                     _TABLAT	set	0xFF5
  3136                           	global	_TBLPTRH
  3137  0000                     _TBLPTRH	set	0xFF7
  3138                           	global	_TBLPTRL
  3139  0000                     _TBLPTRL	set	0xFF6
  3140                           	global	_TBLPTRU
  3141  0000                     _TBLPTRU	set	0xFF8
  3142                           	global	_TMR0H
  3143  0000                     _TMR0H	set	0xFD7
  3144                           	global	_TMR0L
  3145  0000                     _TMR0L	set	0xFD6
  3146                           	global	_TMR1H
  3147  0000                     _TMR1H	set	0xFCF
  3148                           	global	_TMR1L
  3149  0000                     _TMR1L	set	0xFCE
  3150                           	global	_TMR2
  3151  0000                     _TMR2	set	0xFCC
  3152                           	global	_TOSH
  3153  0000                     _TOSH	set	0xFFE
  3154                           	global	_TOSL
  3155  0000                     _TOSL	set	0xFFD
  3156                           	global	_TOSU
  3157  0000                     _TOSU	set	0xFFF
  3158                           	global	_TRISA
  3159  0000                     _TRISA	set	0xF92
  3160                           	global	_TRISAbits
  3161  0000                     _TRISAbits	set	0xF92
  3162                           	global	_TRISB
  3163  0000                     _TRISB	set	0xF93
  3164                           	global	_TRISBbits
  3165  0000                     _TRISBbits	set	0xF93
  3166                           	global	_TRISC
  3167  0000                     _TRISC	set	0xF94
  3168                           	global	_TRISCbits
  3169  0000                     _TRISCbits	set	0xF94
  3170                           	global	_TRISD
  3171  0000                     _TRISD	set	0xF95
  3172                           	global	_TRISDbits
  3173  0000                     _TRISDbits	set	0xF95
  3174                           	global	_TRISE
  3175  0000                     _TRISE	set	0xF96
  3176                           	global	_TRISEbits
  3177  0000                     _TRISEbits	set	0xF96
  3178                           	global	_TXREG
  3179  0000                     _TXREG	set	0xFAD
  3180                           	global	_TXREG1
  3181  0000                     _TXREG1	set	0xFAD
  3182                           	global	_TXSTA
  3183  0000                     _TXSTA	set	0xFAC
  3184                           	global	_TXSTA1
  3185  0000                     _TXSTA1	set	0xFAC
  3186                           	global	_TXSTA1bits
  3187  0000                     _TXSTA1bits	set	0xFAC
  3188                           	global	_TXSTAbits
  3189  0000                     _TXSTAbits	set	0xFAC
  3190                           	global	_WDTCON
  3191  0000                     _WDTCON	set	0xFD1
  3192                           	global	_WDTCONbits
  3193  0000                     _WDTCONbits	set	0xFD1
  3194                           	global	_WREG
  3195  0000                     _WREG	set	0xFE8
  3196                           	global	_ABDEN
  3197  0000                     _ABDEN	set	0x7DC0
  3198                           	global	_ABDOVF
  3199  0000                     _ABDOVF	set	0x7DC7
  3200                           	global	_ACKDT
  3201  0000                     _ACKDT	set	0x7E2D
  3202                           	global	_ACKDT1
  3203  0000                     _ACKDT1	set	0x7E2D
  3204                           	global	_ACKDT2
  3205  0000                     _ACKDT2	set	0x7C2D
  3206                           	global	_ACKEN
  3207  0000                     _ACKEN	set	0x7E2C
  3208                           	global	_ACKEN1
  3209  0000                     _ACKEN1	set	0x7E2C
  3210                           	global	_ACKEN2
  3211  0000                     _ACKEN2	set	0x7C2C
  3212                           	global	_ACKSTAT
  3213  0000                     _ACKSTAT	set	0x7E2E
  3214                           	global	_ACKSTAT1
  3215  0000                     _ACKSTAT1	set	0x7E2E
  3216                           	global	_ACKSTAT2
  3217  0000                     _ACKSTAT2	set	0x7C2E
  3218                           	global	_ACQT0
  3219  0000                     _ACQT0	set	0x7E03
  3220                           	global	_ACQT1
  3221  0000                     _ACQT1	set	0x7E04
  3222                           	global	_ACQT2
  3223  0000                     _ACQT2	set	0x7E05
  3224                           	global	_ADCAL
  3225  0000                     _ADCAL	set	0x7E17
  3226                           	global	_ADCS0
  3227  0000                     _ADCS0	set	0x7E00
  3228                           	global	_ADCS1
  3229  0000                     _ADCS1	set	0x7E01
  3230                           	global	_ADCS2
  3231  0000                     _ADCS2	set	0x7E02
  3232                           	global	_ADDEN
  3233  0000                     _ADDEN	set	0x7D5B
  3234                           	global	_ADDEN1
  3235  0000                     _ADDEN1	set	0x7D5B
  3236                           	global	_ADEN
  3237  0000                     _ADEN	set	0x7D5B
  3238                           	global	_ADFM
  3239  0000                     _ADFM	set	0x7E07
  3240                           	global	_ADIE
  3241  0000                     _ADIE	set	0x7CEE
  3242                           	global	_ADIF
  3243  0000                     _ADIF	set	0x7CF6
  3244                           	global	_ADIP
  3245  0000                     _ADIP	set	0x7CFE
  3246                           	global	_ADMSK1
  3247  0000                     _ADMSK1	set	0x7E29
  3248                           	global	_ADMSK11
  3249  0000                     _ADMSK11	set	0x7E29
  3250                           	global	_ADMSK12
  3251  0000                     _ADMSK12	set	0x7C29
  3252                           	global	_ADMSK2
  3253  0000                     _ADMSK2	set	0x7E2A
  3254                           	global	_ADMSK21
  3255  0000                     _ADMSK21	set	0x7E2A
  3256                           	global	_ADMSK22
  3257  0000                     _ADMSK22	set	0x7C2A
  3258                           	global	_ADMSK3
  3259  0000                     _ADMSK3	set	0x7E2B
  3260                           	global	_ADMSK31
  3261  0000                     _ADMSK31	set	0x7E2B
  3262                           	global	_ADMSK32
  3263  0000                     _ADMSK32	set	0x7C2B
  3264                           	global	_ADMSK4
  3265  0000                     _ADMSK4	set	0x7E2C
  3266                           	global	_ADMSK41
  3267  0000                     _ADMSK41	set	0x7E2C
  3268                           	global	_ADMSK42
  3269  0000                     _ADMSK42	set	0x7C2C
  3270                           	global	_ADMSK5
  3271  0000                     _ADMSK5	set	0x7E2D
  3272                           	global	_ADMSK51
  3273  0000                     _ADMSK51	set	0x7E2D
  3274                           	global	_ADMSK52
  3275  0000                     _ADMSK52	set	0x7C2D
  3276                           	global	_ADON
  3277  0000                     _ADON	set	0x7E10
  3278                           	global	_AN0
  3279  0000                     _AN0	set	0x7C00
  3280                           	global	_AN1
  3281  0000                     _AN1	set	0x7C01
  3282                           	global	_AN10
  3283  0000                     _AN10	set	0x7C09
  3284                           	global	_AN11
  3285  0000                     _AN11	set	0x7C0C
  3286                           	global	_AN12
  3287  0000                     _AN12	set	0x7C08
  3288                           	global	_AN2
  3289  0000                     _AN2	set	0x7C02
  3290                           	global	_AN3
  3291  0000                     _AN3	set	0x7C03
  3292                           	global	_AN4
  3293  0000                     _AN4	set	0x7C05
  3294                           	global	_AN5
  3295  0000                     _AN5	set	0x7C20
  3296                           	global	_AN6
  3297  0000                     _AN6	set	0x7C21
  3298                           	global	_AN7
  3299  0000                     _AN7	set	0x7C22
  3300                           	global	_AN8
  3301  0000                     _AN8	set	0x7C0A
  3302                           	global	_AN9
  3303  0000                     _AN9	set	0x7C0B
  3304                           	global	_BCL1IE
  3305  0000                     _BCL1IE	set	0x7D03
  3306                           	global	_BCL1IF
  3307  0000                     _BCL1IF	set	0x7D0B
  3308                           	global	_BCL1IP
  3309  0000                     _BCL1IP	set	0x7D13
  3310                           	global	_BCL2IE
  3311  0000                     _BCL2IE	set	0x7D1E
  3312                           	global	_BCL2IF
  3313  0000                     _BCL2IF	set	0x7D26
  3314                           	global	_BCL2IP
  3315  0000                     _BCL2IP	set	0x7D2E
  3316                           	global	_BCLIE
  3317  0000                     _BCLIE	set	0x7D03
  3318                           	global	_BCLIF
  3319  0000                     _BCLIF	set	0x7D0B
  3320                           	global	_BCLIP
  3321  0000                     _BCLIP	set	0x7D13
  3322                           	global	_BF
  3323  0000                     _BF	set	0x7E38
  3324                           	global	_BF1
  3325  0000                     _BF1	set	0x7E38
  3326                           	global	_BF2
  3327  0000                     _BF2	set	0x7C38
  3328                           	global	_BOR
  3329  0000                     _BOR	set	0x7E80
  3330                           	global	_BRG16
  3331  0000                     _BRG16	set	0x7DC3
  3332                           	global	_BRGH
  3333  0000                     _BRGH	set	0x7D62
  3334                           	global	_BRGH1
  3335  0000                     _BRGH1	set	0x7D62
  3336                           	global	_C1INV
  3337  0000                     _C1INV	set	0x7DA4
  3338                           	global	_C1OUT
  3339  0000                     _C1OUT	set	0x7DA6
  3340                           	global	_C2INV
  3341  0000                     _C2INV	set	0x7DA5
  3342                           	global	_C2OUT
  3343  0000                     _C2OUT	set	0x7DA7
  3344                           	global	_CARRY
  3345  0000                     _CARRY	set	0x7EC0
  3346                           	global	_CCP1
  3347  0000                     _CCP1	set	0x7C12
  3348                           	global	_CCP10
  3349  0000                     _CCP10	set	0x7C22
  3350                           	global	_CCP1IE
  3351  0000                     _CCP1IE	set	0x7CEA
  3352                           	global	_CCP1IF
  3353  0000                     _CCP1IF	set	0x7CF2
  3354                           	global	_CCP1IP
  3355  0000                     _CCP1IP	set	0x7CFA
  3356                           	global	_CCP1M0
  3357  0000                     _CCP1M0	set	0x7DE8
  3358                           	global	_CCP1M1
  3359  0000                     _CCP1M1	set	0x7DE9
  3360                           	global	_CCP1M2
  3361  0000                     _CCP1M2	set	0x7DEA
  3362                           	global	_CCP1M3
  3363  0000                     _CCP1M3	set	0x7DEB
  3364                           	global	_CCP1X
  3365  0000                     _CCP1X	set	0x7DED
  3366                           	global	_CCP1Y
  3367  0000                     _CCP1Y	set	0x7DEC
  3368                           	global	_CCP2E
  3369  0000                     _CCP2E	set	0x7C27
  3370                           	global	_CCP2IE
  3371  0000                     _CCP2IE	set	0x7D00
  3372                           	global	_CCP2IF
  3373  0000                     _CCP2IF	set	0x7D08
  3374                           	global	_CCP2IP
  3375  0000                     _CCP2IP	set	0x7D10
  3376                           	global	_CCP2M0
  3377  0000                     _CCP2M0	set	0x7DD0
  3378                           	global	_CCP2M1
  3379  0000                     _CCP2M1	set	0x7DD1
  3380                           	global	_CCP2M2
  3381  0000                     _CCP2M2	set	0x7DD2
  3382                           	global	_CCP2M3
  3383  0000                     _CCP2M3	set	0x7DD3
  3384                           	global	_CCP2X
  3385  0000                     _CCP2X	set	0x7DD5
  3386                           	global	_CCP2Y
  3387  0000                     _CCP2Y	set	0x7DD4
  3388                           	global	_CCP2_PA2
  3389  0000                     _CCP2_PA2	set	0x7C0B
  3390                           	global	_CCP6E
  3391  0000                     _CCP6E	set	0x7C26
  3392                           	global	_CCP7E
  3393  0000                     _CCP7E	set	0x7C25
  3394                           	global	_CCP8E
  3395  0000                     _CCP8E	set	0x7C24
  3396                           	global	_CCP9E
  3397  0000                     _CCP9E	set	0x7C23
  3398                           	global	_CHS0
  3399  0000                     _CHS0	set	0x7E12
  3400                           	global	_CHS1
  3401  0000                     _CHS1	set	0x7E13
  3402                           	global	_CHS2
  3403  0000                     _CHS2	set	0x7E14
  3404                           	global	_CHS3
  3405  0000                     _CHS3	set	0x7E15
  3406                           	global	_CHSN3
  3407  0000                     _CHSN3	set	0x7E0B
  3408                           	global	_CIS
  3409  0000                     _CIS	set	0x7DA3
  3410                           	global	_CK
  3411  0000                     _CK	set	0x7C16
  3412                           	global	_CKE
  3413  0000                     _CKE	set	0x7E3E
  3414                           	global	_CKE1
  3415  0000                     _CKE1	set	0x7E3E
  3416                           	global	_CKE2
  3417  0000                     _CKE2	set	0x7C3E
  3418                           	global	_CKP
  3419  0000                     _CKP	set	0x7E34
  3420                           	global	_CKP1
  3421  0000                     _CKP1	set	0x7E34
  3422                           	global	_CKP2
  3423  0000                     _CKP2	set	0x7C34
  3424                           	global	_CM0
  3425  0000                     _CM0	set	0x7DA0
  3426                           	global	_CM1
  3427  0000                     _CM1	set	0x7DA1
  3428                           	global	_CM2
  3429  0000                     _CM2	set	0x7DA2
  3430                           	global	_CMEN0
  3431  0000                     _CMEN0	set	0x7DA0
  3432                           	global	_CMEN1
  3433  0000                     _CMEN1	set	0x7DA1
  3434                           	global	_CMEN2
  3435  0000                     _CMEN2	set	0x7DA2
  3436                           	global	_CMIE
  3437  0000                     _CMIE	set	0x7D06
  3438                           	global	_CMIF
  3439  0000                     _CMIF	set	0x7D0E
  3440                           	global	_CMIP
  3441  0000                     _CMIP	set	0x7D16
  3442                           	global	_CREN
  3443  0000                     _CREN	set	0x7D5C
  3444                           	global	_CREN1
  3445  0000                     _CREN1	set	0x7D5C
  3446                           	global	_CS
  3447  0000                     _CS	set	0x7C22
  3448                           	global	_CSRC
  3449  0000                     _CSRC	set	0x7D67
  3450                           	global	_CSRC1
  3451  0000                     _CSRC1	set	0x7D67
  3452                           	global	_CVR0
  3453  0000                     _CVR0	set	0x7DA8
  3454                           	global	_CVR1
  3455  0000                     _CVR1	set	0x7DA9
  3456                           	global	_CVR2
  3457  0000                     _CVR2	set	0x7DAA
  3458                           	global	_CVR3
  3459  0000                     _CVR3	set	0x7DAB
  3460                           	global	_CVREF
  3461  0000                     _CVREF	set	0x7C02
  3462                           	global	_CVREN
  3463  0000                     _CVREN	set	0x7DAF
  3464                           	global	_CVROE
  3465  0000                     _CVROE	set	0x7DAE
  3466                           	global	_CVROEN
  3467  0000                     _CVROEN	set	0x7DAE
  3468                           	global	_CVRR
  3469  0000                     _CVRR	set	0x7DAD
  3470                           	global	_CVRSS
  3471  0000                     _CVRSS	set	0x7DAC
  3472                           	global	_DA
  3473  0000                     _DA	set	0x7E3D
  3474                           	global	_DA1
  3475  0000                     _DA1	set	0x7E3D
  3476                           	global	_DA2
  3477  0000                     _DA2	set	0x7C3D
  3478                           	global	_DATA_ADDRESS2
  3479  0000                     _DATA_ADDRESS2	set	0x7C3D
  3480                           	global	_DC
  3481  0000                     _DC	set	0x7EC1
  3482                           	global	_DC1B0
  3483  0000                     _DC1B0	set	0x7DEC
  3484                           	global	_DC1B1
  3485  0000                     _DC1B1	set	0x7DED
  3486                           	global	_DC2B0
  3487  0000                     _DC2B0	set	0x7DD4
  3488                           	global	_DC2B1
  3489  0000                     _DC2B1	set	0x7DD5
  3490                           	global	_DONE
  3491  0000                     _DONE	set	0x7E11
  3492                           	global	_DT
  3493  0000                     _DT	set	0x7C17
  3494                           	global	_D_A2
  3495  0000                     _D_A2	set	0x7C3D
  3496                           	global	_D_nA2
  3497  0000                     _D_nA2	set	0x7C3D
  3498                           	global	_ECCPAS0
  3499  0000                     _ECCPAS0	set	0x7DB4
  3500                           	global	_ECCPAS1
  3501  0000                     _ECCPAS1	set	0x7DB5
  3502                           	global	_ECCPAS2
  3503  0000                     _ECCPAS2	set	0x7DB6
  3504                           	global	_ECCPASE
  3505  0000                     _ECCPASE	set	0x7DB7
  3506                           	global	_FERR
  3507  0000                     _FERR	set	0x7D5A
  3508                           	global	_FERR1
  3509  0000                     _FERR1	set	0x7D5A
  3510                           	global	_FLT0
  3511  0000                     _FLT0	set	0x7C08
  3512                           	global	_FREE
  3513  0000                     _FREE	set	0x7D34
  3514                           	global	_GCEN
  3515  0000                     _GCEN	set	0x7E2F
  3516                           	global	_GCEN1
  3517  0000                     _GCEN1	set	0x7E2F
  3518                           	global	_GCEN2
  3519  0000                     _GCEN2	set	0x7C2F
  3520                           	global	_GIE
  3521  0000                     _GIE	set	0x7F97
  3522                           	global	_GIEH
  3523  0000                     _GIEH	set	0x7F97
  3524                           	global	_GIEL
  3525  0000                     _GIEL	set	0x7F96
  3526                           	global	_GIE_GIEH
  3527  0000                     _GIE_GIEH	set	0x7F97
  3528                           	global	_GO
  3529  0000                     _GO	set	0x7E11
  3530                           	global	_GODONE
  3531  0000                     _GODONE	set	0x7E11
  3532                           	global	_GO_DONE
  3533  0000                     _GO_DONE	set	0x7E11
  3534                           	global	_GO_NOT_DONE
  3535  0000                     _GO_NOT_DONE	set	0x7E11
  3536                           	global	_GO_nDONE
  3537  0000                     _GO_nDONE	set	0x7E11
  3538                           	global	_I2C_DAT2
  3539  0000                     _I2C_DAT2	set	0x7C3D
  3540                           	global	_I2C_READ2
  3541  0000                     _I2C_READ2	set	0x7C3A
  3542                           	global	_I2C_START2
  3543  0000                     _I2C_START2	set	0x7C3B
  3544                           	global	_I2C_STOP2
  3545  0000                     _I2C_STOP2	set	0x7C3C
  3546                           	global	_IBF
  3547  0000                     _IBF	set	0x7CB7
  3548                           	global	_IBOV
  3549  0000                     _IBOV	set	0x7CB5
  3550                           	global	_IDLEN
  3551  0000                     _IDLEN	set	0x7E9F
  3552                           	global	_INT0
  3553  0000                     _INT0	set	0x7C08
  3554                           	global	_INT0E
  3555  0000                     _INT0E	set	0x7F94
  3556                           	global	_INT0F
  3557  0000                     _INT0F	set	0x7F91
  3558                           	global	_INT0IE
  3559  0000                     _INT0IE	set	0x7F94
  3560                           	global	_INT0IF
  3561  0000                     _INT0IF	set	0x7F91
  3562                           	global	_INT1
  3563  0000                     _INT1	set	0x7C09
  3564                           	global	_INT1E
  3565  0000                     _INT1E	set	0x7F83
  3566                           	global	_INT1F
  3567  0000                     _INT1F	set	0x7F80
  3568                           	global	_INT1IE
  3569  0000                     _INT1IE	set	0x7F83
  3570                           	global	_INT1IF
  3571  0000                     _INT1IF	set	0x7F80
  3572                           	global	_INT1IP
  3573  0000                     _INT1IP	set	0x7F86
  3574                           	global	_INT1P
  3575  0000                     _INT1P	set	0x7F86
  3576                           	global	_INT2
  3577  0000                     _INT2	set	0x7C0A
  3578                           	global	_INT2E
  3579  0000                     _INT2E	set	0x7F84
  3580                           	global	_INT2F
  3581  0000                     _INT2F	set	0x7F81
  3582                           	global	_INT2IE
  3583  0000                     _INT2IE	set	0x7F84
  3584                           	global	_INT2IF
  3585  0000                     _INT2IF	set	0x7F81
  3586                           	global	_INT2IP
  3587  0000                     _INT2IP	set	0x7F87
  3588                           	global	_INT2P
  3589  0000                     _INT2P	set	0x7F87
  3590                           	global	_INTEDG0
  3591  0000                     _INTEDG0	set	0x7F8E
  3592                           	global	_INTEDG1
  3593  0000                     _INTEDG1	set	0x7F8D
  3594                           	global	_INTEDG2
  3595  0000                     _INTEDG2	set	0x7F8C
  3596                           	global	_IPEN
  3597  0000                     _IPEN	set	0x7E87
  3598                           	global	_KBI0
  3599  0000                     _KBI0	set	0x7C0C
  3600                           	global	_KBI1
  3601  0000                     _KBI1	set	0x7C0D
  3602                           	global	_KBI2
  3603  0000                     _KBI2	set	0x7C0E
  3604                           	global	_KBI3
  3605  0000                     _KBI3	set	0x7C0F
  3606                           	global	_LA0
  3607  0000                     _LA0	set	0x7C48
  3608                           	global	_LA1
  3609  0000                     _LA1	set	0x7C49
  3610                           	global	_LA2
  3611  0000                     _LA2	set	0x7C4A
  3612                           	global	_LA3
  3613  0000                     _LA3	set	0x7C4B
  3614                           	global	_LA4
  3615  0000                     _LA4	set	0x7C4C
  3616                           	global	_LA5
  3617  0000                     _LA5	set	0x7C4D
  3618                           	global	_LA6
  3619  0000                     _LA6	set	0x7C4E
  3620                           	global	_LA7
  3621  0000                     _LA7	set	0x7C4F
  3622                           	global	_LATA0
  3623  0000                     _LATA0	set	0x7C48
  3624                           	global	_LATA1
  3625  0000                     _LATA1	set	0x7C49
  3626                           	global	_LATA2
  3627  0000                     _LATA2	set	0x7C4A
  3628                           	global	_LATA3
  3629  0000                     _LATA3	set	0x7C4B
  3630                           	global	_LATA5
  3631  0000                     _LATA5	set	0x7C4D
  3632                           	global	_LATA7
  3633  0000                     _LATA7	set	0x7C4F
  3634                           	global	_LATB0
  3635  0000                     _LATB0	set	0x7C50
  3636                           	global	_LATB1
  3637  0000                     _LATB1	set	0x7C51
  3638                           	global	_LATB2
  3639  0000                     _LATB2	set	0x7C52
  3640                           	global	_LATB3
  3641  0000                     _LATB3	set	0x7C53
  3642                           	global	_LATB4
  3643  0000                     _LATB4	set	0x7C54
  3644                           	global	_LATB5
  3645  0000                     _LATB5	set	0x7C55
  3646                           	global	_LATB6
  3647  0000                     _LATB6	set	0x7C56
  3648                           	global	_LATB7
  3649  0000                     _LATB7	set	0x7C57
  3650                           	global	_LATC0
  3651  0000                     _LATC0	set	0x7C58
  3652                           	global	_LATC1
  3653  0000                     _LATC1	set	0x7C59
  3654                           	global	_LATC2
  3655  0000                     _LATC2	set	0x7C5A
  3656                           	global	_LATC3
  3657  0000                     _LATC3	set	0x7C5B
  3658                           	global	_LATC4
  3659  0000                     _LATC4	set	0x7C5C
  3660                           	global	_LATC5
  3661  0000                     _LATC5	set	0x7C5D
  3662                           	global	_LATC6
  3663  0000                     _LATC6	set	0x7C5E
  3664                           	global	_LATC7
  3665  0000                     _LATC7	set	0x7C5F
  3666                           	global	_LATD0
  3667  0000                     _LATD0	set	0x7C60
  3668                           	global	_LATD1
  3669  0000                     _LATD1	set	0x7C61
  3670                           	global	_LATD2
  3671  0000                     _LATD2	set	0x7C62
  3672                           	global	_LATD3
  3673  0000                     _LATD3	set	0x7C63
  3674                           	global	_LATD4
  3675  0000                     _LATD4	set	0x7C64
  3676                           	global	_LATD5
  3677  0000                     _LATD5	set	0x7C65
  3678                           	global	_LATD6
  3679  0000                     _LATD6	set	0x7C66
  3680                           	global	_LATD7
  3681  0000                     _LATD7	set	0x7C67
  3682                           	global	_LATE0
  3683  0000                     _LATE0	set	0x7C68
  3684                           	global	_LATE1
  3685  0000                     _LATE1	set	0x7C69
  3686                           	global	_LATE2
  3687  0000                     _LATE2	set	0x7C6A
  3688                           	global	_LB0
  3689  0000                     _LB0	set	0x7C50
  3690                           	global	_LB1
  3691  0000                     _LB1	set	0x7C51
  3692                           	global	_LB2
  3693  0000                     _LB2	set	0x7C52
  3694                           	global	_LB3
  3695  0000                     _LB3	set	0x7C53
  3696                           	global	_LB4
  3697  0000                     _LB4	set	0x7C54
  3698                           	global	_LB5
  3699  0000                     _LB5	set	0x7C55
  3700                           	global	_LB6
  3701  0000                     _LB6	set	0x7C56
  3702                           	global	_LB7
  3703  0000                     _LB7	set	0x7C57
  3704                           	global	_LC0
  3705  0000                     _LC0	set	0x7C58
  3706                           	global	_LC1
  3707  0000                     _LC1	set	0x7C59
  3708                           	global	_LC2
  3709  0000                     _LC2	set	0x7C5A
  3710                           	global	_LC3
  3711  0000                     _LC3	set	0x7C5B
  3712                           	global	_LC4
  3713  0000                     _LC4	set	0x7C5C
  3714                           	global	_LC5
  3715  0000                     _LC5	set	0x7C5D
  3716                           	global	_LC6
  3717  0000                     _LC6	set	0x7C5E
  3718                           	global	_LC7
  3719  0000                     _LC7	set	0x7C5F
  3720                           	global	_LD0
  3721  0000                     _LD0	set	0x7C60
  3722                           	global	_LD1
  3723  0000                     _LD1	set	0x7C61
  3724                           	global	_LD2
  3725  0000                     _LD2	set	0x7C62
  3726                           	global	_LD3
  3727  0000                     _LD3	set	0x7C63
  3728                           	global	_LD4
  3729  0000                     _LD4	set	0x7C64
  3730                           	global	_LD5
  3731  0000                     _LD5	set	0x7C65
  3732                           	global	_LD6
  3733  0000                     _LD6	set	0x7C66
  3734                           	global	_LD7
  3735  0000                     _LD7	set	0x7C67
  3736                           	global	_LE0
  3737  0000                     _LE0	set	0x7C68
  3738                           	global	_LE1
  3739  0000                     _LE1	set	0x7C69
  3740                           	global	_LE2
  3741  0000                     _LE2	set	0x7C6A
  3742                           	global	_LE3
  3743  0000                     _LE3	set	0x7C6B
  3744                           	global	_LE4
  3745  0000                     _LE4	set	0x7C6C
  3746                           	global	_LE5
  3747  0000                     _LE5	set	0x7C6D
  3748                           	global	_LE6
  3749  0000                     _LE6	set	0x7C6E
  3750                           	global	_LE7
  3751  0000                     _LE7	set	0x7C6F
  3752                           	global	_LVDIN
  3753  0000                     _LVDIN	set	0x7C05
  3754                           	global	_MSK0
  3755  0000                     _MSK0	set	0x7E40
  3756                           	global	_MSK01
  3757  0000                     _MSK01	set	0x7E40
  3758                           	global	_MSK02
  3759  0000                     _MSK02	set	0x7C40
  3760                           	global	_MSK1
  3761  0000                     _MSK1	set	0x7E41
  3762                           	global	_MSK11
  3763  0000                     _MSK11	set	0x7E41
  3764                           	global	_MSK12
  3765  0000                     _MSK12	set	0x7C41
  3766                           	global	_MSK2
  3767  0000                     _MSK2	set	0x7E42
  3768                           	global	_MSK21
  3769  0000                     _MSK21	set	0x7E42
  3770                           	global	_MSK22
  3771  0000                     _MSK22	set	0x7C42
  3772                           	global	_MSK3
  3773  0000                     _MSK3	set	0x7E43
  3774                           	global	_MSK31
  3775  0000                     _MSK31	set	0x7E43
  3776                           	global	_MSK32
  3777  0000                     _MSK32	set	0x7C43
  3778                           	global	_MSK4
  3779  0000                     _MSK4	set	0x7E44
  3780                           	global	_MSK41
  3781  0000                     _MSK41	set	0x7E44
  3782                           	global	_MSK42
  3783  0000                     _MSK42	set	0x7C44
  3784                           	global	_MSK5
  3785  0000                     _MSK5	set	0x7E45
  3786                           	global	_MSK51
  3787  0000                     _MSK51	set	0x7E45
  3788                           	global	_MSK52
  3789  0000                     _MSK52	set	0x7C45
  3790                           	global	_MSK6
  3791  0000                     _MSK6	set	0x7E46
  3792                           	global	_MSK61
  3793  0000                     _MSK61	set	0x7E46
  3794                           	global	_MSK62
  3795  0000                     _MSK62	set	0x7C46
  3796                           	global	_MSK7
  3797  0000                     _MSK7	set	0x7E47
  3798                           	global	_MSK71
  3799  0000                     _MSK71	set	0x7E47
  3800                           	global	_MSK72
  3801  0000                     _MSK72	set	0x7C47
  3802                           	global	_NEGATIVE
  3803  0000                     _NEGATIVE	set	0x7EC4
  3804                           	global	_NOT_A
  3805  0000                     _NOT_A	set	0x7E3D
  3806                           	global	_NOT_BOR
  3807  0000                     _NOT_BOR	set	0x7E80
  3808                           	global	_NOT_CS
  3809  0000                     _NOT_CS	set	0x7C22
  3810                           	global	_NOT_DONE
  3811  0000                     _NOT_DONE	set	0x7E11
  3812                           	global	_NOT_PD
  3813  0000                     _NOT_PD	set	0x7E82
  3814                           	global	_NOT_POR
  3815  0000                     _NOT_POR	set	0x7E81
  3816                           	global	_NOT_RBPU
  3817  0000                     _NOT_RBPU	set	0x7F8F
  3818                           	global	_NOT_RC8
  3819  0000                     _NOT_RC8	set	0x7D5E
  3820                           	global	_NOT_RD
  3821  0000                     _NOT_RD	set	0x7C20
  3822                           	global	_NOT_RI
  3823  0000                     _NOT_RI	set	0x7E84
  3824                           	global	_NOT_SS1
  3825  0000                     _NOT_SS1	set	0x7C05
  3826                           	global	_NOT_SS2
  3827  0000                     _NOT_SS2	set	0x7C1B
  3828                           	global	_NOT_T1SYNC
  3829  0000                     _NOT_T1SYNC	set	0x7E6A
  3830                           	global	_NOT_TO
  3831  0000                     _NOT_TO	set	0x7E83
  3832                           	global	_NOT_TX8
  3833  0000                     _NOT_TX8	set	0x7D66
  3834                           	global	_NOT_W
  3835  0000                     _NOT_W	set	0x7E3A
  3836                           	global	_NOT_WR
  3837  0000                     _NOT_WR	set	0x7C21
  3838                           	global	_OBF
  3839  0000                     _OBF	set	0x7CB6
  3840                           	global	_OERR
  3841  0000                     _OERR	set	0x7D59
  3842                           	global	_OERR1
  3843  0000                     _OERR1	set	0x7D59
  3844                           	global	_OSCFIE
  3845  0000                     _OSCFIE	set	0x7D07
  3846                           	global	_OSCFIF
  3847  0000                     _OSCFIF	set	0x7D0F
  3848                           	global	_OSCFIP
  3849  0000                     _OSCFIP	set	0x7D17
  3850                           	global	_OSTS
  3851  0000                     _OSTS	set	0x7E9B
  3852                           	global	_OV
  3853  0000                     _OV	set	0x7EC3
  3854                           	global	_OVERFLOW
  3855  0000                     _OVERFLOW	set	0x7EC3
  3856                           	global	_P1A
  3857  0000                     _P1A	set	0x7C12
  3858                           	global	_P1B
  3859  0000                     _P1B	set	0x7C1D
  3860                           	global	_P1C
  3861  0000                     _P1C	set	0x7C1E
  3862                           	global	_P1D
  3863  0000                     _P1D	set	0x7C1F
  3864                           	global	_P1M0
  3865  0000                     _P1M0	set	0x7DEE
  3866                           	global	_P1M1
  3867  0000                     _P1M1	set	0x7DEF
  3868                           	global	_P2
  3869  0000                     _P2	set	0x7C3C
  3870                           	global	_PA1
  3871  0000                     _PA1	set	0x7C12
  3872                           	global	_PA2
  3873  0000                     _PA2	set	0x7C11
  3874                           	global	_PA2E
  3875  0000                     _PA2E	set	0x7C27
  3876                           	global	_PB1E
  3877  0000                     _PB1E	set	0x7C26
  3878                           	global	_PB2
  3879  0000                     _PB2	set	0x7C22
  3880                           	global	_PB3E
  3881  0000                     _PB3E	set	0x7C24
  3882                           	global	_PC1E
  3883  0000                     _PC1E	set	0x7C25
  3884                           	global	_PC2
  3885  0000                     _PC2	set	0x7C21
  3886                           	global	_PC3E
  3887  0000                     _PC3E	set	0x7C23
  3888                           	global	_PCFG0
  3889  0000                     _PCFG0	set	0x7E08
  3890                           	global	_PCFG1
  3891  0000                     _PCFG1	set	0x7E09
  3892                           	global	_PCFG2
  3893  0000                     _PCFG2	set	0x7E0A
  3894                           	global	_PCFG3
  3895  0000                     _PCFG3	set	0x7E0B
  3896                           	global	_PD
  3897  0000                     _PD	set	0x7E82
  3898                           	global	_PD2
  3899  0000                     _PD2	set	0x7C20
  3900                           	global	_PDC0
  3901  0000                     _PDC0	set	0x7DB8
  3902                           	global	_PDC1
  3903  0000                     _PDC1	set	0x7DB9
  3904                           	global	_PDC2
  3905  0000                     _PDC2	set	0x7DBA
  3906                           	global	_PDC3
  3907  0000                     _PDC3	set	0x7DBB
  3908                           	global	_PDC4
  3909  0000                     _PDC4	set	0x7DBC
  3910                           	global	_PDC5
  3911  0000                     _PDC5	set	0x7DBD
  3912                           	global	_PDC6
  3913  0000                     _PDC6	set	0x7DBE
  3914                           	global	_PEIE
  3915  0000                     _PEIE	set	0x7F96
  3916                           	global	_PEIE_GIEL
  3917  0000                     _PEIE_GIEL	set	0x7F96
  3918                           	global	_PEN
  3919  0000                     _PEN	set	0x7E2A
  3920                           	global	_PEN1
  3921  0000                     _PEN1	set	0x7E2A
  3922                           	global	_PEN2
  3923  0000                     _PEN2	set	0x7C2A
  3924                           	global	_PGC
  3925  0000                     _PGC	set	0x7C0E
  3926                           	global	_PGD
  3927  0000                     _PGD	set	0x7C0F
  3928                           	global	_PLLEN
  3929  0000                     _PLLEN	set	0x7CDE
  3930                           	global	_POR
  3931  0000                     _POR	set	0x7E81
  3932                           	global	_PRSEN
  3933  0000                     _PRSEN	set	0x7DBF
  3934                           	global	_PSA
  3935  0000                     _PSA	set	0x7EAB
  3936                           	global	_PSP0
  3937  0000                     _PSP0	set	0x7C18
  3938                           	global	_PSP1
  3939  0000                     _PSP1	set	0x7C19
  3940                           	global	_PSP2
  3941  0000                     _PSP2	set	0x7C1A
  3942                           	global	_PSP3
  3943  0000                     _PSP3	set	0x7C1B
  3944                           	global	_PSP4
  3945  0000                     _PSP4	set	0x7C1C
  3946                           	global	_PSP5
  3947  0000                     _PSP5	set	0x7C1D
  3948                           	global	_PSP6
  3949  0000                     _PSP6	set	0x7C1E
  3950                           	global	_PSP7
  3951  0000                     _PSP7	set	0x7C1F
  3952                           	global	_PSPIE
  3953  0000                     _PSPIE	set	0x7CEF
  3954                           	global	_PSPIF
  3955  0000                     _PSPIF	set	0x7CF7
  3956                           	global	_PSPIP
  3957  0000                     _PSPIP	set	0x7CFF
  3958                           	global	_PSPMODE
  3959  0000                     _PSPMODE	set	0x7CB4
  3960                           	global	_PSSAC0
  3961  0000                     _PSSAC0	set	0x7DB2
  3962                           	global	_PSSAC1
  3963  0000                     _PSSAC1	set	0x7DB3
  3964                           	global	_PSSBD0
  3965  0000                     _PSSBD0	set	0x7DB0
  3966                           	global	_PSSBD1
  3967  0000                     _PSSBD1	set	0x7DB1
  3968                           	global	_RA0
  3969  0000                     _RA0	set	0x7C00
  3970                           	global	_RA1
  3971  0000                     _RA1	set	0x7C01
  3972                           	global	_RA2
  3973  0000                     _RA2	set	0x7C02
  3974                           	global	_RA3
  3975  0000                     _RA3	set	0x7C03
  3976                           	global	_RA4
  3977  0000                     _RA4	set	0x7C04
  3978                           	global	_RA5
  3979  0000                     _RA5	set	0x7C05
  3980                           	global	_RA6
  3981  0000                     _RA6	set	0x7C06
  3982                           	global	_RA7
  3983  0000                     _RA7	set	0x7C07
  3984                           	global	_RB0
  3985  0000                     _RB0	set	0x7C08
  3986                           	global	_RB1
  3987  0000                     _RB1	set	0x7C09
  3988                           	global	_RB2
  3989  0000                     _RB2	set	0x7C0A
  3990                           	global	_RB3
  3991  0000                     _RB3	set	0x7C0B
  3992                           	global	_RB4
  3993  0000                     _RB4	set	0x7C0C
  3994                           	global	_RB5
  3995  0000                     _RB5	set	0x7C0D
  3996                           	global	_RB6
  3997  0000                     _RB6	set	0x7C0E
  3998                           	global	_RB7
  3999  0000                     _RB7	set	0x7C0F
  4000                           	global	_RBIE
  4001  0000                     _RBIE	set	0x7F93
  4002                           	global	_RBIF
  4003  0000                     _RBIF	set	0x7F90
  4004                           	global	_RBIP
  4005  0000                     _RBIP	set	0x7F88
  4006                           	global	_RBPU
  4007  0000                     _RBPU	set	0x7F8F
  4008                           	global	_RC0
  4009  0000                     _RC0	set	0x7C10
  4010                           	global	_RC1
  4011  0000                     _RC1	set	0x7C11
  4012                           	global	_RC1IE
  4013  0000                     _RC1IE	set	0x7CED
  4014                           	global	_RC1IF
  4015  0000                     _RC1IF	set	0x7CF5
  4016                           	global	_RC1IP
  4017  0000                     _RC1IP	set	0x7CFD
  4018                           	global	_RC2
  4019  0000                     _RC2	set	0x7C12
  4020                           	global	_RC3
  4021  0000                     _RC3	set	0x7C13
  4022                           	global	_RC4
  4023  0000                     _RC4	set	0x7C14
  4024                           	global	_RC5
  4025  0000                     _RC5	set	0x7C15
  4026                           	global	_RC6
  4027  0000                     _RC6	set	0x7C16
  4028                           	global	_RC7
  4029  0000                     _RC7	set	0x7C17
  4030                           	global	_RC8_9
  4031  0000                     _RC8_9	set	0x7D5E
  4032                           	global	_RC9
  4033  0000                     _RC9	set	0x7D5E
  4034                           	global	_RCD8
  4035  0000                     _RCD8	set	0x7D58
  4036                           	global	_RCEN
  4037  0000                     _RCEN	set	0x7E2B
  4038                           	global	_RCEN1
  4039  0000                     _RCEN1	set	0x7E2B
  4040                           	global	_RCEN2
  4041  0000                     _RCEN2	set	0x7C2B
  4042                           	global	_RCIDL
  4043  0000                     _RCIDL	set	0x7DC6
  4044                           	global	_RCIE
  4045  0000                     _RCIE	set	0x7CED
  4046                           	global	_RCIF
  4047  0000                     _RCIF	set	0x7CF5
  4048                           	global	_RCIP
  4049  0000                     _RCIP	set	0x7CFD
  4050                           	global	_RCMT
  4051  0000                     _RCMT	set	0x7DC6
  4052                           	global	_RD
  4053  0000                     _RD	set	0x7C20
  4054                           	global	_RD0
  4055  0000                     _RD0	set	0x7C18
  4056                           	global	_RD1
  4057  0000                     _RD1	set	0x7C19
  4058                           	global	_RD16
  4059  0000                     _RD16	set	0x7E6F
  4060                           	global	_RD2
  4061  0000                     _RD2	set	0x7C1A
  4062                           	global	_RD3
  4063  0000                     _RD3	set	0x7C1B
  4064                           	global	_RD4
  4065  0000                     _RD4	set	0x7C1C
  4066                           	global	_RD5
  4067  0000                     _RD5	set	0x7C1D
  4068                           	global	_RD6
  4069  0000                     _RD6	set	0x7C1E
  4070                           	global	_RD7
  4071  0000                     _RD7	set	0x7C1F
  4072                           	global	_RDE
  4073  0000                     _RDE	set	0x7C20
  4074                           	global	_RE0
  4075  0000                     _RE0	set	0x7C20
  4076                           	global	_RE1
  4077  0000                     _RE1	set	0x7C21
  4078                           	global	_RE2
  4079  0000                     _RE2	set	0x7C22
  4080                           	global	_RE3
  4081  0000                     _RE3	set	0x7CB3
  4082                           	global	_RE4
  4083  0000                     _RE4	set	0x7C24
  4084                           	global	_RE5
  4085  0000                     _RE5	set	0x7C25
  4086                           	global	_RE6
  4087  0000                     _RE6	set	0x7C26
  4088                           	global	_RE7
  4089  0000                     _RE7	set	0x7C27
  4090                           	global	_READ_WRITE2
  4091  0000                     _READ_WRITE2	set	0x7C3A
  4092                           	global	_RI
  4093  0000                     _RI	set	0x7E84
  4094                           	global	_RJPU
  4095  0000                     _RJPU	set	0x7C07
  4096                           	global	_RSEN
  4097  0000                     _RSEN	set	0x7E29
  4098                           	global	_RSEN1
  4099  0000                     _RSEN1	set	0x7E29
  4100                           	global	_RSEN2
  4101  0000                     _RSEN2	set	0x7C29
  4102                           	global	_RW
  4103  0000                     _RW	set	0x7E3A
  4104                           	global	_RW1
  4105  0000                     _RW1	set	0x7E3A
  4106                           	global	_RW2
  4107  0000                     _RW2	set	0x7C3A
  4108                           	global	_RX
  4109  0000                     _RX	set	0x7C17
  4110                           	global	_RX9
  4111  0000                     _RX9	set	0x7D5E
  4112                           	global	_RX91
  4113  0000                     _RX91	set	0x7D5E
  4114                           	global	_RX9D
  4115  0000                     _RX9D	set	0x7D58
  4116                           	global	_RX9D1
  4117  0000                     _RX9D1	set	0x7D58
  4118                           	global	_R_W2
  4119  0000                     _R_W2	set	0x7C3A
  4120                           	global	_R_nW2
  4121  0000                     _R_nW2	set	0x7C3A
  4122                           	global	_S2
  4123  0000                     _S2	set	0x7C3B
  4124                           	global	_SCK
  4125  0000                     _SCK	set	0x7C13
  4126                           	global	_SCK1
  4127  0000                     _SCK1	set	0x7C13
  4128                           	global	_SCK2
  4129  0000                     _SCK2	set	0x7C18
  4130                           	global	_SCKP
  4131  0000                     _SCKP	set	0x7DC4
  4132                           	global	_SCL
  4133  0000                     _SCL	set	0x7C13
  4134                           	global	_SCL1
  4135  0000                     _SCL1	set	0x7C13
  4136                           	global	_SCL2
  4137  0000                     _SCL2	set	0x7C18
  4138                           	global	_SCS0
  4139  0000                     _SCS0	set	0x7E98
  4140                           	global	_SCS1
  4141  0000                     _SCS1	set	0x7E99
  4142                           	global	_SDA
  4143  0000                     _SDA	set	0x7C14
  4144                           	global	_SDA1
  4145  0000                     _SDA1	set	0x7C14
  4146                           	global	_SDA2
  4147  0000                     _SDA2	set	0x7C19
  4148                           	global	_SDI
  4149  0000                     _SDI	set	0x7C14
  4150                           	global	_SDI1
  4151  0000                     _SDI1	set	0x7C14
  4152                           	global	_SDI2
  4153  0000                     _SDI2	set	0x7C19
  4154                           	global	_SDO
  4155  0000                     _SDO	set	0x7C15
  4156                           	global	_SDO1
  4157  0000                     _SDO1	set	0x7C15
  4158                           	global	_SDO2
  4159  0000                     _SDO2	set	0x7C1A
  4160                           	global	_SEN
  4161  0000                     _SEN	set	0x7E28
  4162                           	global	_SEN1
  4163  0000                     _SEN1	set	0x7E28
  4164                           	global	_SEN2
  4165  0000                     _SEN2	set	0x7C28
  4166                           	global	_SENDB
  4167  0000                     _SENDB	set	0x7D63
  4168                           	global	_SENDB1
  4169  0000                     _SENDB1	set	0x7D63
  4170                           	global	_SMP
  4171  0000                     _SMP	set	0x7E3F
  4172                           	global	_SMP1
  4173  0000                     _SMP1	set	0x7E3F
  4174                           	global	_SMP2
  4175  0000                     _SMP2	set	0x7C3F
  4176                           	global	_SOSCEN
  4177  0000                     _SOSCEN	set	0x7E6B
  4178                           	global	_SPEN
  4179  0000                     _SPEN	set	0x7D5F
  4180                           	global	_SPEN1
  4181  0000                     _SPEN1	set	0x7D5F
  4182                           	global	_SREN
  4183  0000                     _SREN	set	0x7D5D
  4184                           	global	_SREN1
  4185  0000                     _SREN1	set	0x7D5D
  4186                           	global	_SRENA
  4187  0000                     _SRENA	set	0x7D5D
  4188                           	global	_SS1
  4189  0000                     _SS1	set	0x7C05
  4190                           	global	_SS2
  4191  0000                     _SS2	set	0x7C1B
  4192                           	global	_SSP1IE
  4193  0000                     _SSP1IE	set	0x7CEB
  4194                           	global	_SSP1IF
  4195  0000                     _SSP1IF	set	0x7CF3
  4196                           	global	_SSP1IP
  4197  0000                     _SSP1IP	set	0x7CFB
  4198                           	global	_SSP2IE
  4199  0000                     _SSP2IE	set	0x7D1F
  4200                           	global	_SSP2IF
  4201  0000                     _SSP2IF	set	0x7D27
  4202                           	global	_SSP2IP
  4203  0000                     _SSP2IP	set	0x7D2F
  4204                           	global	_SSPEN
  4205  0000                     _SSPEN	set	0x7E35
  4206                           	global	_SSPEN1
  4207  0000                     _SSPEN1	set	0x7E35
  4208                           	global	_SSPEN2
  4209  0000                     _SSPEN2	set	0x7C35
  4210                           	global	_SSPIE
  4211  0000                     _SSPIE	set	0x7CEB
  4212                           	global	_SSPIF
  4213  0000                     _SSPIF	set	0x7CF3
  4214                           	global	_SSPIP
  4215  0000                     _SSPIP	set	0x7CFB
  4216                           	global	_SSPM0
  4217  0000                     _SSPM0	set	0x7E30
  4218                           	global	_SSPM01
  4219  0000                     _SSPM01	set	0x7E30
  4220                           	global	_SSPM02
  4221  0000                     _SSPM02	set	0x7C30
  4222                           	global	_SSPM1
  4223  0000                     _SSPM1	set	0x7E31
  4224                           	global	_SSPM11
  4225  0000                     _SSPM11	set	0x7E31
  4226                           	global	_SSPM12
  4227  0000                     _SSPM12	set	0x7C31
  4228                           	global	_SSPM2
  4229  0000                     _SSPM2	set	0x7E32
  4230                           	global	_SSPM21
  4231  0000                     _SSPM21	set	0x7E32
  4232                           	global	_SSPM22
  4233  0000                     _SSPM22	set	0x7C32
  4234                           	global	_SSPM3
  4235  0000                     _SSPM3	set	0x7E33
  4236                           	global	_SSPM31
  4237  0000                     _SSPM31	set	0x7E33
  4238                           	global	_SSPM32
  4239  0000                     _SSPM32	set	0x7C33
  4240                           	global	_SSPOV
  4241  0000                     _SSPOV	set	0x7E36
  4242                           	global	_SSPOV1
  4243  0000                     _SSPOV1	set	0x7E36
  4244                           	global	_SSPOV2
  4245  0000                     _SSPOV2	set	0x7C36
  4246                           	global	_START
  4247  0000                     _START	set	0x7E3B
  4248                           	global	_START1
  4249  0000                     _START1	set	0x7E3B
  4250                           	global	_START2
  4251  0000                     _START2	set	0x7C3B
  4252                           	global	_STKFUL
  4253  0000                     _STKFUL	set	0x7FE7
  4254                           	global	_STKOVF
  4255  0000                     _STKOVF	set	0x7FE7
  4256                           	global	_STKPTR0
  4257  0000                     _STKPTR0	set	0x7FE0
  4258                           	global	_STKPTR1
  4259  0000                     _STKPTR1	set	0x7FE1
  4260                           	global	_STKPTR2
  4261  0000                     _STKPTR2	set	0x7FE2
  4262                           	global	_STKPTR3
  4263  0000                     _STKPTR3	set	0x7FE3
  4264                           	global	_STKPTR4
  4265  0000                     _STKPTR4	set	0x7FE4
  4266                           	global	_STKUNF
  4267  0000                     _STKUNF	set	0x7FE6
  4268                           	global	_STOP
  4269  0000                     _STOP	set	0x7E3C
  4270                           	global	_STOP1
  4271  0000                     _STOP1	set	0x7E3C
  4272                           	global	_STOP2
  4273  0000                     _STOP2	set	0x7C3C
  4274                           	global	_SWDTE
  4275  0000                     _SWDTE	set	0x7E88
  4276                           	global	_SWDTEN
  4277  0000                     _SWDTEN	set	0x7E88
  4278                           	global	_SYNC
  4279  0000                     _SYNC	set	0x7D64
  4280                           	global	_SYNC1
  4281  0000                     _SYNC1	set	0x7D64
  4282                           	global	_T08BIT
  4283  0000                     _T08BIT	set	0x7EAE
  4284                           	global	_T0CKI
  4285  0000                     _T0CKI	set	0x7C0D
  4286                           	global	_T0CS
  4287  0000                     _T0CS	set	0x7EAD
  4288                           	global	_T0IE
  4289  0000                     _T0IE	set	0x7F95
  4290                           	global	_T0IF
  4291  0000                     _T0IF	set	0x7F92
  4292                           	global	_T0IP
  4293  0000                     _T0IP	set	0x7F8A
  4294                           	global	_T0PS0
  4295  0000                     _T0PS0	set	0x7EA8
  4296                           	global	_T0PS1
  4297  0000                     _T0PS1	set	0x7EA9
  4298                           	global	_T0PS2
  4299  0000                     _T0PS2	set	0x7EAA
  4300                           	global	_T0SE
  4301  0000                     _T0SE	set	0x7EAC
  4302                           	global	_T1CKI
  4303  0000                     _T1CKI	set	0x7C10
  4304                           	global	_T1CKPS0
  4305  0000                     _T1CKPS0	set	0x7E6C
  4306                           	global	_T1CKPS1
  4307  0000                     _T1CKPS1	set	0x7E6D
  4308                           	global	_T1INSYNC
  4309  0000                     _T1INSYNC	set	0x7E6A
  4310                           	global	_T1OSCEN
  4311  0000                     _T1OSCEN	set	0x7E6B
  4312                           	global	_T1OSI
  4313  0000                     _T1OSI	set	0x7C11
  4314                           	global	_T1OSO
  4315  0000                     _T1OSO	set	0x7C10
  4316                           	global	_T1RD16
  4317  0000                     _T1RD16	set	0x7E6F
  4318                           	global	_T1RUN
  4319  0000                     _T1RUN	set	0x7E6E
  4320                           	global	_T1SYNC
  4321  0000                     _T1SYNC	set	0x7E6A
  4322                           	global	_T2CKPS0
  4323  0000                     _T2CKPS0	set	0x7E50
  4324                           	global	_T2CKPS1
  4325  0000                     _T2CKPS1	set	0x7E51
  4326                           	global	_T2OUTPS0
  4327  0000                     _T2OUTPS0	set	0x7E53
  4328                           	global	_T2OUTPS1
  4329  0000                     _T2OUTPS1	set	0x7E54
  4330                           	global	_T2OUTPS2
  4331  0000                     _T2OUTPS2	set	0x7E55
  4332                           	global	_T2OUTPS3
  4333  0000                     _T2OUTPS3	set	0x7E56
  4334                           	global	_TMR0IE
  4335  0000                     _TMR0IE	set	0x7F95
  4336                           	global	_TMR0IF
  4337  0000                     _TMR0IF	set	0x7F92
  4338                           	global	_TMR0IP
  4339  0000                     _TMR0IP	set	0x7F8A
  4340                           	global	_TMR0ON
  4341  0000                     _TMR0ON	set	0x7EAF
  4342                           	global	_TMR1CS
  4343  0000                     _TMR1CS	set	0x7E69
  4344                           	global	_TMR1IE
  4345  0000                     _TMR1IE	set	0x7CE8
  4346                           	global	_TMR1IF
  4347  0000                     _TMR1IF	set	0x7CF0
  4348                           	global	_TMR1IP
  4349  0000                     _TMR1IP	set	0x7CF8
  4350                           	global	_TMR1ON
  4351  0000                     _TMR1ON	set	0x7E68
  4352                           	global	_TMR2IE
  4353  0000                     _TMR2IE	set	0x7CE9
  4354                           	global	_TMR2IF
  4355  0000                     _TMR2IF	set	0x7CF1
  4356                           	global	_TMR2IP
  4357  0000                     _TMR2IP	set	0x7CF9
  4358                           	global	_TMR2ON
  4359  0000                     _TMR2ON	set	0x7E52
  4360                           	global	_TO
  4361  0000                     _TO	set	0x7E83
  4362                           	global	_TOUTPS0
  4363  0000                     _TOUTPS0	set	0x7E53
  4364                           	global	_TOUTPS1
  4365  0000                     _TOUTPS1	set	0x7E54
  4366                           	global	_TOUTPS2
  4367  0000                     _TOUTPS2	set	0x7E55
  4368                           	global	_TOUTPS3
  4369  0000                     _TOUTPS3	set	0x7E56
  4370                           	global	_TRISA0
  4371  0000                     _TRISA0	set	0x7C90
  4372                           	global	_TRISA1
  4373  0000                     _TRISA1	set	0x7C91
  4374                           	global	_TRISA2
  4375  0000                     _TRISA2	set	0x7C92
  4376                           	global	_TRISA3
  4377  0000                     _TRISA3	set	0x7C93
  4378                           	global	_TRISA5
  4379  0000                     _TRISA5	set	0x7C95
  4380                           	global	_TRISB0
  4381  0000                     _TRISB0	set	0x7C98
  4382                           	global	_TRISB1
  4383  0000                     _TRISB1	set	0x7C99
  4384                           	global	_TRISB2
  4385  0000                     _TRISB2	set	0x7C9A
  4386                           	global	_TRISB3
  4387  0000                     _TRISB3	set	0x7C9B
  4388                           	global	_TRISB4
  4389  0000                     _TRISB4	set	0x7C9C
  4390                           	global	_TRISB5
  4391  0000                     _TRISB5	set	0x7C9D
  4392                           	global	_TRISB6
  4393  0000                     _TRISB6	set	0x7C9E
  4394                           	global	_TRISB7
  4395  0000                     _TRISB7	set	0x7C9F
  4396                           	global	_TRISC0
  4397  0000                     _TRISC0	set	0x7CA0
  4398                           	global	_TRISC1
  4399  0000                     _TRISC1	set	0x7CA1
  4400                           	global	_TRISC2
  4401  0000                     _TRISC2	set	0x7CA2
  4402                           	global	_TRISC3
  4403  0000                     _TRISC3	set	0x7CA3
  4404                           	global	_TRISC4
  4405  0000                     _TRISC4	set	0x7CA4
  4406                           	global	_TRISC5
  4407  0000                     _TRISC5	set	0x7CA5
  4408                           	global	_TRISC6
  4409  0000                     _TRISC6	set	0x7CA6
  4410                           	global	_TRISC7
  4411  0000                     _TRISC7	set	0x7CA7
  4412                           	global	_TRISD0
  4413  0000                     _TRISD0	set	0x7CA8
  4414                           	global	_TRISD1
  4415  0000                     _TRISD1	set	0x7CA9
  4416                           	global	_TRISD2
  4417  0000                     _TRISD2	set	0x7CAA
  4418                           	global	_TRISD3
  4419  0000                     _TRISD3	set	0x7CAB
  4420                           	global	_TRISD4
  4421  0000                     _TRISD4	set	0x7CAC
  4422                           	global	_TRISD5
  4423  0000                     _TRISD5	set	0x7CAD
  4424                           	global	_TRISD6
  4425  0000                     _TRISD6	set	0x7CAE
  4426                           	global	_TRISD7
  4427  0000                     _TRISD7	set	0x7CAF
  4428                           	global	_TRISE0
  4429  0000                     _TRISE0	set	0x7CB0
  4430                           	global	_TRISE1
  4431  0000                     _TRISE1	set	0x7CB1
  4432                           	global	_TRISE2
  4433  0000                     _TRISE2	set	0x7CB2
  4434                           	global	_TRMT
  4435  0000                     _TRMT	set	0x7D61
  4436                           	global	_TRMT1
  4437  0000                     _TRMT1	set	0x7D61
  4438                           	global	_TX
  4439  0000                     _TX	set	0x7C16
  4440                           	global	_TX1IE
  4441  0000                     _TX1IE	set	0x7CEC
  4442                           	global	_TX1IF
  4443  0000                     _TX1IF	set	0x7CF4
  4444                           	global	_TX1IP
  4445  0000                     _TX1IP	set	0x7CFC
  4446                           	global	_TX8_9
  4447  0000                     _TX8_9	set	0x7D66
  4448                           	global	_TX9
  4449  0000                     _TX9	set	0x7D66
  4450                           	global	_TX91
  4451  0000                     _TX91	set	0x7D66
  4452                           	global	_TX9D
  4453  0000                     _TX9D	set	0x7D60
  4454                           	global	_TX9D1
  4455  0000                     _TX9D1	set	0x7D60
  4456                           	global	_TXD8
  4457  0000                     _TXD8	set	0x7D60
  4458                           	global	_TXEN
  4459  0000                     _TXEN	set	0x7D65
  4460                           	global	_TXEN1
  4461  0000                     _TXEN1	set	0x7D65
  4462                           	global	_TXIE
  4463  0000                     _TXIE	set	0x7CEC
  4464                           	global	_TXIF
  4465  0000                     _TXIF	set	0x7CF4
  4466                           	global	_TXIP
  4467  0000                     _TXIP	set	0x7CFC
  4468                           	global	_UA
  4469  0000                     _UA	set	0x7E39
  4470                           	global	_UA1
  4471  0000                     _UA1	set	0x7E39
  4472                           	global	_UA2
  4473  0000                     _UA2	set	0x7C39
  4474                           	global	_ULPWUIN
  4475  0000                     _ULPWUIN	set	0x7C00
  4476                           	global	_VCFG0
  4477  0000                     _VCFG0	set	0x7E0C
  4478                           	global	_VCFG01
  4479  0000                     _VCFG01	set	0x7E0C
  4480                           	global	_VCFG1
  4481  0000                     _VCFG1	set	0x7E0D
  4482                           	global	_VCFG11
  4483  0000                     _VCFG11	set	0x7E0D
  4484                           	global	_VREFM
  4485  0000                     _VREFM	set	0x7C02
  4486                           	global	_VREFP
  4487  0000                     _VREFP	set	0x7C03
  4488                           	global	_W4E
  4489  0000                     _W4E	set	0x7DC1
  4490                           	global	_WCOL
  4491  0000                     _WCOL	set	0x7E37
  4492                           	global	_WCOL1
  4493  0000                     _WCOL1	set	0x7E37
  4494                           	global	_WCOL2
  4495  0000                     _WCOL2	set	0x7C37
  4496                           	global	_WR
  4497  0000                     _WR	set	0x7D31
  4498                           	global	_WRE
  4499  0000                     _WRE	set	0x7C21
  4500                           	global	_WREN
  4501  0000                     _WREN	set	0x7D32
  4502                           	global	_WRERR
  4503  0000                     _WRERR	set	0x7D33
  4504                           	global	_WUE
  4505  0000                     _WUE	set	0x7DC1
  4506                           	global	_ZERO
  4507  0000                     _ZERO	set	0x7EC2
  4508                           	global	_nA2
  4509  0000                     _nA2	set	0x7C3D
  4510                           	global	_nADDRESS2
  4511  0000                     _nADDRESS2	set	0x7C3D
  4512                           	global	_nBOR
  4513  0000                     _nBOR	set	0x7E80
  4514                           	global	_nCS
  4515  0000                     _nCS	set	0x7C22
  4516                           	global	_nDONE
  4517  0000                     _nDONE	set	0x7E11
  4518                           	global	_nPD
  4519  0000                     _nPD	set	0x7E82
  4520                           	global	_nPOR
  4521  0000                     _nPOR	set	0x7E81
  4522                           	global	_nRBPU
  4523  0000                     _nRBPU	set	0x7F8F
  4524                           	global	_nRC8
  4525  0000                     _nRC8	set	0x7D5E
  4526                           	global	_nRD
  4527  0000                     _nRD	set	0x7C20
  4528                           	global	_nRI
  4529  0000                     _nRI	set	0x7E84
  4530                           	global	_nSS1
  4531  0000                     _nSS1	set	0x7C05
  4532                           	global	_nSS2
  4533  0000                     _nSS2	set	0x7C1B
  4534                           	global	_nT1SYNC
  4535  0000                     _nT1SYNC	set	0x7E6A
  4536                           	global	_nTO
  4537  0000                     _nTO	set	0x7E83
  4538                           	global	_nTX8
  4539  0000                     _nTX8	set	0x7D66
  4540                           	global	_nW2
  4541  0000                     _nW2	set	0x7C3A
  4542                           	global	_nWR
  4543  0000                     _nWR	set	0x7C21
  4544                           	global	_nWRITE2
  4545  0000                     _nWRITE2	set	0x7C3A
  4546                           	global	_ic_ptr
  4547                           psect	nvCOMRAM,class=COMRAM,space=1
  4548                           global __pnvCOMRAM
  4549  000049                     __pnvCOMRAM:
  4550  000049                     _ic_ptr:
  4551  000049                            ds      2
  4552                           	global	_uc_ptr
  4553  00004B                     _uc_ptr:
  4554  00004B                            ds      2
  4555                           ; #config settings
  4556                           global __CFG_WDTEN$OFF
  4557  0000                     __CFG_WDTEN$OFF equ 0x0
  4558                           global __CFG_STVREN$OFF
  4559  0000                     __CFG_STVREN$OFF equ 0x0
  4560                           global __CFG_XINST$OFF
  4561  0000                     __CFG_XINST$OFF equ 0x0
  4562                           global __CFG_CP0$OFF
  4563  0000                     __CFG_CP0$OFF equ 0x0
  4564                           global __CFG_IESO$ON
  4565  0000                     __CFG_IESO$ON equ 0x0
  4566                           global __CFG_FOSC2$ON
  4567  0000                     __CFG_FOSC2$ON equ 0x0
  4568                           global __CFG_FOSC$HSPLL
  4569  0000                     __CFG_FOSC$HSPLL equ 0x0
  4570                           global __CFG_FCMEN$ON
  4571  0000                     __CFG_FCMEN$ON equ 0x0
  4572                           global __CFG_WDTPS$32768
  4573  0000                     __CFG_WDTPS$32768 equ 0x0
  4574                           global __CFG_CCP2MX$DEFAULT
  4575  0000                     __CFG_CCP2MX$DEFAULT equ 0x0
  4576                           	file	"/tmp/cgt34qbUi"
  4577                           	line	#
  4578                           psect	cinit,class=CODE,delta=1,reloc=2
  4579                           global __pcinit
  4580  0018B4                     __pcinit:
  4581                           global start_initialization
  4582  0018B4                     start_initialization:
  4583                           
  4584                           global __initialization
  4585  0018B4                     __initialization:
  4586                           psect	bssCOMRAM,class=COMRAM,space=1
  4587                           global __pbssCOMRAM
  4588  000044                     __pbssCOMRAM:
  4589                           	global	_errno
  4590                           	global	_errno
  4591  000044                     _errno:
  4592  000044                            ds      2
  4593                           	global	_CapStatus
  4594                           	global	_CapStatus
  4595  000046                     _CapStatus:
  4596  000046                            ds      1
  4597  000047                     _MQ_Main_Willing_to_block:
  4598  000047                            ds      1
  4599                           	global	_USART_Status
  4600  000048                     _USART_Status:
  4601  000048                            ds      1
  4602                           psect	dataBANK0,class=BANK0,space=1
  4603                           global __pdataBANK0
  4604  0000C8                     __pdataBANK0:
  4605                           	file	"../src/my_i2c.c"
  4606  0000C8                     i2c_int_handler@F5030:
  4607  0000C8                            ds      3
  4608                           psect	bssBANK1,class=BANK1,space=1
  4609                           global __pbssBANK1
  4610  000100                     __pbssBANK1:
  4611  000100                     _FromMainLow_MQ:
  4612  000100                            ds      54
  4613  000136                     _ToMainHigh_MQ:
  4614  000136                            ds      54
  4615  00016C                     _ToMainLow_MQ:
  4616  00016C                            ds      54
  4617                           psect	bssBANK2,class=BANK2,space=1
  4618                           global __pbssBANK2
  4619  000200                     __pbssBANK2:
  4620  000200                     _FromMainHigh_MQ:
  4621  000200                            ds      54
  4622                           psect	cinit
  4623                           ; Clear objects allocated to BANK2 (54 bytes)
  4624                           	global __pbssBANK2
  4625  0018B4  EE02  F000         lfsr	0,__pbssBANK2
  4626  0018B8  0E36               movlw	54
  4627  0018BA                     clear_0:
  4628  0018BA  6AEE               clrf	postinc0,c
  4629  0018BC  06E8               decf	wreg
  4630  0018BE  E1FD               bnz	clear_0
  4631                           ; Clear objects allocated to BANK1 (162 bytes)
  4632                           	global __pbssBANK1
  4633  0018C0  EE01  F000         lfsr	0,__pbssBANK1
  4634  0018C4  0EA2               movlw	162
  4635  0018C6                     clear_1:
  4636  0018C6  6AEE               clrf	postinc0,c
  4637  0018C8  06E8               decf	wreg
  4638  0018CA  E1FD               bnz	clear_1
  4639                           ; Clear objects allocated to COMRAM (5 bytes)
  4640                           	global __pbssCOMRAM
  4641  0018CC  6A48               clrf	(__pbssCOMRAM+4)&0xffh,c
  4642  0018CE  6A47               clrf	(__pbssCOMRAM+3)&0xffh,c
  4643  0018D0  6A46               clrf	(__pbssCOMRAM+2)&0xffh,c
  4644  0018D2  6A45               clrf	(__pbssCOMRAM+1)&0xffh,c
  4645  0018D4  6A44               clrf	(__pbssCOMRAM+0)&0xffh,c
  4646                           ; Initialize objects allocated to BANK0 (3 bytes)
  4647                           	global __pidataBANK0
  4648                           	; load TBLPTR registers with __pidataBANK0
  4649  0018D6  0ECA               	movlw	low (__pidataBANK0)
  4650  0018D8  6EF6               	movwf	tblptrl
  4651  0018DA  0E1C               	movlw	high(__pidataBANK0)
  4652  0018DC  6EF7               	movwf	tblptrh
  4653  0018DE  0E00               	movlw	low highword(__pidataBANK0)
  4654  0018E0  6EF8               	movwf	tblptru
  4655  0018E2  0009               	tblrd*+ ;fetch initializer
  4656  0018E4  CFF5 F0C8          	movff	tablat, __pdataBANK0+0		
  4657  0018E8  0009               	tblrd*+ ;fetch initializer
  4658  0018EA  CFF5 F0C9          	movff	tablat, __pdataBANK0+1		
  4659  0018EE  0009               	tblrd*+ ;fetch initializer
  4660  0018F0  CFF5 F0CA          	movff	tablat, __pdataBANK0+2		
  4661                           psect cinit,class=CODE,delta=1
  4662                           global end_of_initialization,__end_of__initialization
  4663                           
  4664                           ;End of C runtime variable initialization code
  4665                           
  4666  0018F4                     end_of_initialization:
  4667  0018F4                     __end_of__initialization:movlb 0
  4668  0018F6  EFAA  F003         goto _main	;jump to C main() function
  4669                           psect	cstackBANK1,class=BANK1,space=1
  4670                           global __pcstackBANK1
  4671  0001A2                     __pcstackBANK1:
  4672                           	global	recv_msg@slot
  4673  0001A2                     recv_msg@slot:	; 1 bytes @ 0x0
  4674                           	global	send_msg@tlength
  4675  0001A2                     send_msg@tlength:	; 2 bytes @ 0x0
  4676  0001A2                     	ds   1
  4677                           	global	recv_msg@tlength
  4678  0001A3                     recv_msg@tlength:	; 2 bytes @ 0x1
  4679  0001A3                     	ds   1
  4680                           	global	send_msg@slot
  4681  0001A4                     send_msg@slot:	; 1 bytes @ 0x2
  4682  0001A4                     	ds   1
  4683                           	global	send_msg@qmsg
  4684  0001A5                     send_msg@qmsg:	; 2 bytes @ 0x3
  4685                           	global	recv_msg@qmsg
  4686  0001A5                     recv_msg@qmsg:	; 2 bytes @ 0x3
  4687  0001A5                     	ds   2
  4688                           	global	?_ToMainHigh_recvmsg
  4689  0001A7                     ?_ToMainHigh_recvmsg:	; 1 bytes @ 0x5
  4690                           	global	?_ToMainLow_recvmsg
  4691  0001A7                     ?_ToMainLow_recvmsg:	; 1 bytes @ 0x5
  4692                           	global	?_FromMainLow_sendmsg
  4693  0001A7                     ?_FromMainLow_sendmsg:	; 1 bytes @ 0x5
  4694                           	global	ToMainLow_recvmsg@maxlength
  4695  0001A7                     ToMainLow_recvmsg@maxlength:	; 1 bytes @ 0x5
  4696                           	global	ToMainHigh_recvmsg@maxlength
  4697  0001A7                     ToMainHigh_recvmsg@maxlength:	; 1 bytes @ 0x5
  4698                           	global	FromMainLow_sendmsg@length
  4699  0001A7                     FromMainLow_sendmsg@length:	; 1 bytes @ 0x5
  4700  0001A7                     	ds   1
  4701                           	global	FromMainLow_sendmsg@msgtype
  4702  0001A8                     FromMainLow_sendmsg@msgtype:	; 1 bytes @ 0x6
  4703                           	global	ToMainLow_recvmsg@msgtype
  4704  0001A8                     ToMainLow_recvmsg@msgtype:	; 2 bytes @ 0x6
  4705                           	global	ToMainHigh_recvmsg@msgtype
  4706  0001A8                     ToMainHigh_recvmsg@msgtype:	; 2 bytes @ 0x6
  4707  0001A8                     	ds   1
  4708                           	global	FromMainLow_sendmsg@data
  4709  0001A9                     FromMainLow_sendmsg@data:	; 2 bytes @ 0x7
  4710  0001A9                     	ds   1
  4711                           	global	ToMainLow_recvmsg@data
  4712  0001AA                     ToMainLow_recvmsg@data:	; 2 bytes @ 0x8
  4713                           	global	ToMainHigh_recvmsg@data
  4714  0001AA                     ToMainHigh_recvmsg@data:	; 2 bytes @ 0x8
  4715  0001AA                     	ds   2
  4716  0001AC                     ??_main:	; 0 bytes @ 0xA
  4717  0001AC                     	ds   1
  4718                           	global	main@msgbuffer
  4719  0001AD                     main@msgbuffer:	; 11 bytes @ 0xB
  4720  0001AD                     	ds   11
  4721                           	global	main@uthread_data
  4722  0001B8                     main@uthread_data:	; 2 bytes @ 0x16
  4723  0001B8                     	ds   2
  4724                           	global	main@t0thread_data
  4725  0001BA                     main@t0thread_data:	; 2 bytes @ 0x18
  4726  0001BA                     	ds   2
  4727                           	global	main@last_reg_recvd
  4728  0001BC                     main@last_reg_recvd:	; 1 bytes @ 0x1A
  4729  0001BC                     	ds   1
  4730                           	global	main@t1thread_data
  4731  0001BD                     main@t1thread_data:	; 2 bytes @ 0x1B
  4732  0001BD                     	ds   2
  4733                           	global	main@uc
  4734  0001BF                     main@uc:	; 5 bytes @ 0x1D
  4735  0001BF                     	ds   5
  4736                           	global	main@length
  4737  0001C4                     main@length:	; 1 bytes @ 0x22
  4738  0001C4                     	ds   1
  4739                           	global	main@msgtype
  4740  0001C5                     main@msgtype:	; 1 bytes @ 0x23
  4741  0001C5                     	ds   1
  4742                           	global	main@ic
  4743  0001C6                     main@ic:	; 28 bytes @ 0x24
  4744  0001C6                     	ds   28
  4745                           psect	cstackBANK0,class=BANK0,space=1
  4746                           global __pcstackBANK0
  4747  000080                     __pcstackBANK0:
  4748  000080                     ??i2_recv_msg:	; 0 bytes @ 0x0
  4749                           	global	i2send_msg@tlength
  4750  000080                     i2send_msg@tlength:	; 2 bytes @ 0x0
  4751  000080                     	ds   2
  4752                           	global	i2send_msg@slot
  4753  000082                     i2send_msg@slot:	; 1 bytes @ 0x2
  4754                           	global	i2recv_msg@slot
  4755  000082                     i2recv_msg@slot:	; 1 bytes @ 0x2
  4756  000082                     	ds   1
  4757                           	global	i2send_msg@qmsg
  4758  000083                     i2send_msg@qmsg:	; 2 bytes @ 0x3
  4759                           	global	i2recv_msg@tlength
  4760  000083                     i2recv_msg@tlength:	; 2 bytes @ 0x3
  4761  000083                     	ds   2
  4762                           	global	?_ToMainHigh_sendmsg
  4763  000085                     ?_ToMainHigh_sendmsg:	; 1 bytes @ 0x5
  4764                           	global	ToMainHigh_sendmsg@length
  4765  000085                     ToMainHigh_sendmsg@length:	; 1 bytes @ 0x5
  4766                           	global	i2recv_msg@qmsg
  4767  000085                     i2recv_msg@qmsg:	; 2 bytes @ 0x5
  4768  000085                     	ds   1
  4769                           	global	ToMainHigh_sendmsg@msgtype
  4770  000086                     ToMainHigh_sendmsg@msgtype:	; 1 bytes @ 0x6
  4771  000086                     	ds   1
  4772                           	global	?_FromMainLow_recvmsg
  4773  000087                     ?_FromMainLow_recvmsg:	; 1 bytes @ 0x7
  4774                           	global	?_FromMainHigh_recvmsg
  4775  000087                     ?_FromMainHigh_recvmsg:	; 1 bytes @ 0x7
  4776                           	global	FromMainLow_recvmsg@maxlength
  4777  000087                     FromMainLow_recvmsg@maxlength:	; 1 bytes @ 0x7
  4778                           	global	FromMainHigh_recvmsg@maxlength
  4779  000087                     FromMainHigh_recvmsg@maxlength:	; 1 bytes @ 0x7
  4780                           	global	ToMainHigh_sendmsg@data
  4781  000087                     ToMainHigh_sendmsg@data:	; 2 bytes @ 0x7
  4782  000087                     	ds   1
  4783                           	global	FromMainLow_recvmsg@msgtype
  4784  000088                     FromMainLow_recvmsg@msgtype:	; 2 bytes @ 0x8
  4785                           	global	FromMainHigh_recvmsg@msgtype
  4786  000088                     FromMainHigh_recvmsg@msgtype:	; 2 bytes @ 0x8
  4787  000088                     	ds   2
  4788                           	global	FromMainLow_recvmsg@data
  4789  00008A                     FromMainLow_recvmsg@data:	; 2 bytes @ 0xA
  4790                           	global	FromMainHigh_recvmsg@data
  4791  00008A                     FromMainHigh_recvmsg@data:	; 2 bytes @ 0xA
  4792  00008A                     	ds   2
  4793  00008C                     ??_i2c_int_handler:	; 0 bytes @ 0xC
  4794  00008C                     ??_timer0_int_handler:	; 0 bytes @ 0xC
  4795  00008C                     	ds   2
  4796                           	global	timer0_int_handler@msgtype
  4797  00008E                     timer0_int_handler@msgtype:	; 2 bytes @ 0xE
  4798                           	global	i2c_int_handler@data
  4799  00008E                     i2c_int_handler@data:	; 10 bytes @ 0xE
  4800  00008E                     	ds   2
  4801                           	global	timer0_int_handler@length
  4802  000090                     timer0_int_handler@length:	; 2 bytes @ 0x10
  4803  000090                     	ds   2
  4804                           	global	timer0_int_handler@val
  4805  000092                     timer0_int_handler@val:	; 2 bytes @ 0x12
  4806  000092                     	ds   6
  4807                           	global	i2c_int_handler@empty
  4808  000098                     i2c_int_handler@empty:	; 3 bytes @ 0x18
  4809  000098                     	ds   3
  4810                           	global	i2c_int_handler@error_buf
  4811  00009B                     i2c_int_handler@error_buf:	; 3 bytes @ 0x1B
  4812  00009B                     	ds   3
  4813                           	global	i2c_int_handler@data_written
  4814  00009E                     i2c_int_handler@data_written:	; 1 bytes @ 0x1E
  4815  00009E                     	ds   1
  4816                           	global	i2c_int_handler@overrun_error
  4817  00009F                     i2c_int_handler@overrun_error:	; 1 bytes @ 0x1F
  4818  00009F                     	ds   1
  4819                           	global	i2c_int_handler@length
  4820  0000A0                     i2c_int_handler@length:	; 2 bytes @ 0x20
  4821  0000A0                     	ds   2
  4822                           	global	i2c_int_handler@i2c_data
  4823  0000A2                     i2c_int_handler@i2c_data:	; 1 bytes @ 0x22
  4824  0000A2                     	ds   1
  4825                           	global	i2c_int_handler@msgtype
  4826  0000A3                     i2c_int_handler@msgtype:	; 1 bytes @ 0x23
  4827  0000A3                     	ds   1
  4828                           	global	i2c_int_handler@msg_to_send
  4829  0000A4                     i2c_int_handler@msg_to_send:	; 1 bytes @ 0x24
  4830  0000A4                     	ds   1
  4831                           	global	i2c_int_handler@msg_ready
  4832  0000A5                     i2c_int_handler@msg_ready:	; 1 bytes @ 0x25
  4833  0000A5                     	ds   1
  4834                           	global	i2c_int_handler@data_read
  4835  0000A6                     i2c_int_handler@data_read:	; 1 bytes @ 0x26
  4836  0000A6                     	ds   1
  4837  0000A7                     ??_InterruptHandlerHigh:	; 0 bytes @ 0x27
  4838  0000A7                     	ds   14
  4839                           	global	?_init_uart_recv
  4840  0000B5                     ?_init_uart_recv:	; 0 bytes @ 0x35
  4841                           	global	?_init_i2c
  4842  0000B5                     ?_init_i2c:	; 0 bytes @ 0x35
  4843                           	global	?_OpenTimer1
  4844  0000B5                     ?_OpenTimer1:	; 0 bytes @ 0x35
  4845                           	global	?_i2c_configure_slave
  4846  0000B5                     ?_i2c_configure_slave:	; 0 bytes @ 0x35
  4847                           	global	?_OpenUSART
  4848  0000B5                     ?_OpenUSART:	; 0 bytes @ 0x35
  4849                           	global	?_Delay1KTCYx
  4850  0000B5                     ?_Delay1KTCYx:	; 0 bytes @ 0x35
  4851                           	global	?_OpenADC
  4852  0000B5                     ?_OpenADC:	; 0 bytes @ 0x35
  4853                           	global	?_SetChanADC
  4854  0000B5                     ?_SetChanADC:	; 0 bytes @ 0x35
  4855  0000B5                     ??_ConvertADC:	; 0 bytes @ 0x35
  4856  0000B5                     ??_enable_interrupts:	; 0 bytes @ 0x35
  4857                           	global	?_init_queue
  4858  0000B5                     ?_init_queue:	; 0 bytes @ 0x35
  4859                           	global	?_check_msg
  4860  0000B5                     ?_check_msg:	; 1 bytes @ 0x35
  4861                           	global	?_timer0_lthread
  4862  0000B5                     ?_timer0_lthread:	; 2 bytes @ 0x35
  4863                           	global	?_timer1_lthread
  4864  0000B5                     ?_timer1_lthread:	; 2 bytes @ 0x35
  4865                           	global	?_uart_lthread
  4866  0000B5                     ?_uart_lthread:	; 2 bytes @ 0x35
  4867                           	global	?_memcpy
  4868  0000B5                     ?_memcpy:	; 2 bytes @ 0x35
  4869                           	global	?_in_high_int
  4870  0000B5                     ?_in_high_int:	; 2 bytes @ 0x35
  4871                           	global	i2c_configure_slave@addr
  4872  0000B5                     i2c_configure_slave@addr:	; 1 bytes @ 0x35
  4873                           	global	OpenADC@config
  4874  0000B5                     OpenADC@config:	; 1 bytes @ 0x35
  4875                           	global	SetChanADC@channel
  4876  0000B5                     SetChanADC@channel:	; 1 bytes @ 0x35
  4877                           	global	OpenTimer1@config
  4878  0000B5                     OpenTimer1@config:	; 1 bytes @ 0x35
  4879                           	global	OpenUSART@config
  4880  0000B5                     OpenUSART@config:	; 1 bytes @ 0x35
  4881                           	global	Delay1KTCYx@unit
  4882  0000B5                     Delay1KTCYx@unit:	; 1 bytes @ 0x35
  4883                           	global	init_queue@qptr
  4884  0000B5                     init_queue@qptr:	; 2 bytes @ 0x35
  4885                           	global	check_msg@qptr
  4886  0000B5                     check_msg@qptr:	; 2 bytes @ 0x35
  4887                           	global	init_i2c@ic
  4888  0000B5                     init_i2c@ic:	; 2 bytes @ 0x35
  4889                           	global	init_uart_recv@uc
  4890  0000B5                     init_uart_recv@uc:	; 2 bytes @ 0x35
  4891  0000B5                     timer0_lthread@tptr:	; 2 bytes @ 0x35
  4892                           	global	timer1_lthread@tptr
  4893  0000B5                     timer1_lthread@tptr:	; 2 bytes @ 0x35
  4894  0000B5                     uart_lthread@uptr:	; 2 bytes @ 0x35
  4895                           	global	memcpy@d1
  4896  0000B5                     memcpy@d1:	; 2 bytes @ 0x35
  4897  0000B5                     	ds   1
  4898  0000B6                     ??_OpenTimer1:	; 0 bytes @ 0x36
  4899  0000B6                     ??_i2c_configure_slave:	; 0 bytes @ 0x36
  4900  0000B6                     ??_Delay1KTCYx:	; 0 bytes @ 0x36
  4901  0000B6                     ??_SetChanADC:	; 0 bytes @ 0x36
  4902                           	global	OpenADC@config2
  4903  0000B6                     OpenADC@config2:	; 1 bytes @ 0x36
  4904                           	global	OpenUSART@spbrg
  4905  0000B6                     OpenUSART@spbrg:	; 2 bytes @ 0x36
  4906  0000B6                     	ds   1
  4907  0000B7                     ??_init_uart_recv:	; 0 bytes @ 0x37
  4908  0000B7                     ??_init_i2c:	; 0 bytes @ 0x37
  4909  0000B7                     ??_in_high_int:	; 0 bytes @ 0x37
  4910  0000B7                     ??_init_queue:	; 0 bytes @ 0x37
  4911  0000B7                     ??_check_msg:	; 0 bytes @ 0x37
  4912                           	global	?_in_low_int
  4913  0000B7                     ?_in_low_int:	; 2 bytes @ 0x37
  4914                           	global	OpenADC@portconfig
  4915  0000B7                     OpenADC@portconfig:	; 1 bytes @ 0x37
  4916  0000B7                     timer0_lthread@msgtype:	; 2 bytes @ 0x37
  4917  0000B7                     timer1_lthread@msgtype:	; 2 bytes @ 0x37
  4918                           	global	uart_lthread@msgtype
  4919  0000B7                     uart_lthread@msgtype:	; 2 bytes @ 0x37
  4920                           	global	memcpy@s1
  4921  0000B7                     memcpy@s1:	; 2 bytes @ 0x37
  4922  0000B7                     	ds   1
  4923  0000B8                     ??_OpenUSART:	; 0 bytes @ 0x38
  4924  0000B8                     ??_OpenADC:	; 0 bytes @ 0x38
  4925                           	global	init_queue@i
  4926  0000B8                     init_queue@i:	; 1 bytes @ 0x38
  4927  0000B8                     	ds   1
  4928  0000B9                     ??_init_queues:	; 0 bytes @ 0x39
  4929  0000B9                     ??_in_low_int:	; 0 bytes @ 0x39
  4930                           	global	?_in_main
  4931  0000B9                     ?_in_main:	; 2 bytes @ 0x39
  4932  0000B9                     timer0_lthread@length:	; 2 bytes @ 0x39
  4933  0000B9                     timer1_lthread@length:	; 2 bytes @ 0x39
  4934                           	global	uart_lthread@length
  4935  0000B9                     uart_lthread@length:	; 2 bytes @ 0x39
  4936                           	global	memcpy@n
  4937  0000B9                     memcpy@n:	; 2 bytes @ 0x39
  4938  0000B9                     	ds   1
  4939                           	global	?_init_timer1_lthread
  4940  0000BA                     ?_init_timer1_lthread:	; 0 bytes @ 0x3A
  4941                           	global	init_timer1_lthread@tptr
  4942  0000BA                     init_timer1_lthread@tptr:	; 2 bytes @ 0x3A
  4943  0000BA                     	ds   1
  4944  0000BB                     ??_block_on_To_msgqueues:	; 0 bytes @ 0x3B
  4945  0000BB                     ??_memcpy:	; 0 bytes @ 0x3B
  4946  0000BB                     ??_in_main:	; 0 bytes @ 0x3B
  4947                           	global	timer0_lthread@msgbuffer
  4948  0000BB                     timer0_lthread@msgbuffer:	; 2 bytes @ 0x3B
  4949                           	global	timer1_lthread@msgbuffer
  4950  0000BB                     timer1_lthread@msgbuffer:	; 2 bytes @ 0x3B
  4951                           	global	uart_lthread@msgbuffer
  4952  0000BB                     uart_lthread@msgbuffer:	; 2 bytes @ 0x3B
  4953                           	global	memcpy@d
  4954  0000BB                     memcpy@d:	; 2 bytes @ 0x3B
  4955  0000BB                     	ds   1
  4956  0000BC                     ??_init_timer1_lthread:	; 0 bytes @ 0x3C
  4957  0000BC                     	ds   1
  4958  0000BD                     ??_timer0_lthread:	; 0 bytes @ 0x3D
  4959  0000BD                     ??_timer1_lthread:	; 0 bytes @ 0x3D
  4960  0000BD                     ??_uart_lthread:	; 0 bytes @ 0x3D
  4961                           	global	timer0_lthread@msgval
  4962  0000BD                     timer0_lthread@msgval:	; 2 bytes @ 0x3D
  4963                           	global	memcpy@s
  4964  0000BD                     memcpy@s:	; 2 bytes @ 0x3D
  4965  0000BD                     	ds   2
  4966                           	global	?_send_msg
  4967  0000BF                     ?_send_msg:	; 1 bytes @ 0x3F
  4968                           	global	?_recv_msg
  4969  0000BF                     ?_recv_msg:	; 1 bytes @ 0x3F
  4970                           	global	send_msg@qptr
  4971  0000BF                     send_msg@qptr:	; 2 bytes @ 0x3F
  4972                           	global	recv_msg@qptr
  4973  0000BF                     recv_msg@qptr:	; 2 bytes @ 0x3F
  4974  0000BF                     	ds   2
  4975                           	global	send_msg@length
  4976  0000C1                     send_msg@length:	; 1 bytes @ 0x41
  4977                           	global	recv_msg@maxlength
  4978  0000C1                     recv_msg@maxlength:	; 1 bytes @ 0x41
  4979  0000C1                     	ds   1
  4980                           	global	send_msg@msgtype
  4981  0000C2                     send_msg@msgtype:	; 1 bytes @ 0x42
  4982                           	global	recv_msg@msgtype
  4983  0000C2                     recv_msg@msgtype:	; 2 bytes @ 0x42
  4984  0000C2                     	ds   1
  4985                           	global	send_msg@data
  4986  0000C3                     send_msg@data:	; 2 bytes @ 0x43
  4987  0000C3                     	ds   1
  4988                           	global	recv_msg@data
  4989  0000C4                     recv_msg@data:	; 2 bytes @ 0x44
  4990  0000C4                     	ds   1
  4991  0000C5                     ??_send_msg:	; 0 bytes @ 0x45
  4992  0000C5                     	ds   1
  4993  0000C6                     ??_FromMainLow_sendmsg:	; 0 bytes @ 0x46
  4994  0000C6                     ??_recv_msg:	; 0 bytes @ 0x46
  4995  0000C6                     	ds   2
  4996  0000C8                     ??_ToMainHigh_recvmsg:	; 0 bytes @ 0x48
  4997  0000C8                     ??_ToMainLow_recvmsg:	; 0 bytes @ 0x48
  4998                           psect	cstackCOMRAM,class=COMRAM,space=1
  4999                           global __pcstackCOMRAM
  5000  000001                     __pcstackCOMRAM:
  5001  000001                     ?_i2c_int_handler:	; 0 bytes @ 0x0
  5002  000001                     ?_timer0_int_handler:	; 0 bytes @ 0x0
  5003  000001                     ?_SleepIfOkay:	; 0 bytes @ 0x0
  5004  000001                     ?_timer1_int_handler:	; 0 bytes @ 0x0
  5005  000001                     ?_adc_int_handler:	; 0 bytes @ 0x0
  5006  000001                     ?_uart_recv_int_handler:	; 0 bytes @ 0x0
  5007  000001                     ?_init_queues:	; 0 bytes @ 0x0
  5008  000001                     ?_block_on_To_msgqueues:	; 0 bytes @ 0x0
  5009  000001                     ??_ReadUSART:	; 0 bytes @ 0x0
  5010  000001                     ?_ConvertADC:	; 0 bytes @ 0x0
  5011                           	global	?_WriteTimer1
  5012  000001                     ?_WriteTimer1:	; 0 bytes @ 0x0
  5013  000001                     ?_enable_interrupts:	; 0 bytes @ 0x0
  5014  000001                     ?_InterruptHandlerHigh:	; 0 bytes @ 0x0
  5015  000001                     ?_InterruptHandlerLow:	; 0 bytes @ 0x0
  5016  000001                     ?_main:	; 0 bytes @ 0x0
  5017  000001                     ?_enter_sleep_mode:	; 0 bytes @ 0x0
  5018  000001                     ?_ReadUSART:	; 1 bytes @ 0x0
  5019                           	global	?_ReadTimer1
  5020  000001                     ?_ReadTimer1:	; 2 bytes @ 0x0
  5021                           	global	?_ReadADC
  5022  000001                     ?_ReadADC:	; 2 bytes @ 0x0
  5023                           	global	?i1_memcpy
  5024  000001                     ?i1_memcpy:	; 2 bytes @ 0x0
  5025                           	global	ReadUSART@data
  5026  000001                     ReadUSART@data:	; 1 bytes @ 0x0
  5027                           	global	WriteTimer1@timer1
  5028  000001                     WriteTimer1@timer1:	; 2 bytes @ 0x0
  5029                           	global	i1memcpy@d1
  5030  000001                     i1memcpy@d1:	; 2 bytes @ 0x0
  5031  000001                     	ds   2
  5032  000003                     ??_ReadTimer1:	; 0 bytes @ 0x2
  5033  000003                     ??_WriteTimer1:	; 0 bytes @ 0x2
  5034  000003                     ??_ReadADC:	; 0 bytes @ 0x2
  5035                           	global	ReadTimer1@timer
  5036  000003                     ReadTimer1@timer:	; 2 bytes @ 0x2
  5037                           	global	WriteTimer1@timer
  5038  000003                     WriteTimer1@timer:	; 2 bytes @ 0x2
  5039                           	global	i1memcpy@s1
  5040  000003                     i1memcpy@s1:	; 2 bytes @ 0x2
  5041  000003                     	ds   2
  5042                           	global	i1memcpy@n
  5043  000005                     i1memcpy@n:	; 2 bytes @ 0x4
  5044  000005                     	ds   2
  5045  000007                     ??i1_memcpy:	; 0 bytes @ 0x6
  5046                           	global	i1memcpy@d
  5047  000007                     i1memcpy@d:	; 2 bytes @ 0x6
  5048  000007                     	ds   2
  5049                           	global	i1memcpy@s
  5050  000009                     i1memcpy@s:	; 2 bytes @ 0x8
  5051  000009                     	ds   2
  5052                           	global	?i1_send_msg
  5053  00000B                     ?i1_send_msg:	; 1 bytes @ 0xA
  5054                           	global	i1send_msg@qptr
  5055  00000B                     i1send_msg@qptr:	; 2 bytes @ 0xA
  5056  00000B                     	ds   2
  5057                           	global	i1send_msg@length
  5058  00000D                     i1send_msg@length:	; 1 bytes @ 0xC
  5059  00000D                     	ds   1
  5060                           	global	i1send_msg@msgtype
  5061  00000E                     i1send_msg@msgtype:	; 1 bytes @ 0xD
  5062  00000E                     	ds   1
  5063                           	global	i1send_msg@data
  5064  00000F                     i1send_msg@data:	; 2 bytes @ 0xE
  5065  00000F                     	ds   2
  5066  000011                     ??i1_send_msg:	; 0 bytes @ 0x10
  5067  000011                     	ds   1
  5068                           	global	i1send_msg@tlength
  5069  000012                     i1send_msg@tlength:	; 2 bytes @ 0x11
  5070  000012                     	ds   2
  5071                           	global	i1send_msg@slot
  5072  000014                     i1send_msg@slot:	; 1 bytes @ 0x13
  5073  000014                     	ds   1
  5074                           	global	i1send_msg@qmsg
  5075  000015                     i1send_msg@qmsg:	; 2 bytes @ 0x14
  5076  000015                     	ds   2
  5077                           	global	?_ToMainLow_sendmsg
  5078  000017                     ?_ToMainLow_sendmsg:	; 1 bytes @ 0x16
  5079                           	global	ToMainLow_sendmsg@length
  5080  000017                     ToMainLow_sendmsg@length:	; 1 bytes @ 0x16
  5081  000017                     	ds   1
  5082                           	global	ToMainLow_sendmsg@msgtype
  5083  000018                     ToMainLow_sendmsg@msgtype:	; 1 bytes @ 0x17
  5084  000018                     	ds   1
  5085                           	global	ToMainLow_sendmsg@data
  5086  000019                     ToMainLow_sendmsg@data:	; 2 bytes @ 0x18
  5087  000019                     	ds   2
  5088  00001B                     ??_timer1_int_handler:	; 0 bytes @ 0x1A
  5089  00001B                     ??_adc_int_handler:	; 0 bytes @ 0x1A
  5090  00001B                     ??_uart_recv_int_handler:	; 0 bytes @ 0x1A
  5091  00001B                     ??_ToMainLow_sendmsg:	; 0 bytes @ 0x1A
  5092  00001B                     	ds   2
  5093                           	global	timer1_int_handler@temp
  5094  00001D                     timer1_int_handler@temp:	; 2 bytes @ 0x1C
  5095                           	global	adc_int_handler@message
  5096  00001D                     adc_int_handler@message:	; 3 bytes @ 0x1C
  5097  00001D                     	ds   2
  5098                           	global	timer1_int_handler@result
  5099  00001F                     timer1_int_handler@result:	; 2 bytes @ 0x1E
  5100  00001F                     	ds   1
  5101                           	global	adc_int_handler@value
  5102  000020                     adc_int_handler@value:	; 2 bytes @ 0x1F
  5103  000020                     	ds   2
  5104  000022                     ??_InterruptHandlerLow:	; 0 bytes @ 0x21
  5105  000022                     	ds   17
  5106                           	global	?_WriteTimer0
  5107  000033                     ?_WriteTimer0:	; 0 bytes @ 0x32
  5108  000033                     ??_enter_sleep_mode:	; 0 bytes @ 0x32
  5109                           	global	?_start_i2c_slave_reply
  5110  000033                     ?_start_i2c_slave_reply:	; 0 bytes @ 0x32
  5111                           	global	?_handle_start
  5112  000033                     ?_handle_start:	; 0 bytes @ 0x32
  5113                           	global	?i2_check_msg
  5114  000033                     ?i2_check_msg:	; 1 bytes @ 0x32
  5115                           	global	?i2_in_high_int
  5116  000033                     ?i2_in_high_int:	; 2 bytes @ 0x32
  5117                           	global	?i2_memcpy
  5118  000033                     ?i2_memcpy:	; 2 bytes @ 0x32
  5119                           	global	start_i2c_slave_reply@length
  5120  000033                     start_i2c_slave_reply@length:	; 1 bytes @ 0x32
  5121                           	global	handle_start@data_read
  5122  000033                     handle_start@data_read:	; 1 bytes @ 0x32
  5123                           	global	WriteTimer0@timer0
  5124  000033                     WriteTimer0@timer0:	; 2 bytes @ 0x32
  5125                           	global	i2check_msg@qptr
  5126  000033                     i2check_msg@qptr:	; 2 bytes @ 0x32
  5127                           	global	i2memcpy@d1
  5128  000033                     i2memcpy@d1:	; 2 bytes @ 0x32
  5129  000033                     	ds   1
  5130  000034                     ??_handle_start:	; 0 bytes @ 0x33
  5131                           	global	start_i2c_slave_reply@msg
  5132  000034                     start_i2c_slave_reply@msg:	; 2 bytes @ 0x33
  5133  000034                     	ds   1
  5134  000035                     ??_WriteTimer0:	; 0 bytes @ 0x34
  5135  000035                     ??i2_in_high_int:	; 0 bytes @ 0x34
  5136  000035                     ??i2_check_msg:	; 0 bytes @ 0x34
  5137                           	global	?i2_in_low_int
  5138  000035                     ?i2_in_low_int:	; 2 bytes @ 0x34
  5139                           	global	WriteTimer0@timer
  5140  000035                     WriteTimer0@timer:	; 2 bytes @ 0x34
  5141                           	global	i2memcpy@s1
  5142  000035                     i2memcpy@s1:	; 2 bytes @ 0x34
  5143  000035                     	ds   1
  5144  000036                     ??_start_i2c_slave_reply:	; 0 bytes @ 0x35
  5145  000036                     	ds   1
  5146  000037                     ??_SleepIfOkay:	; 0 bytes @ 0x36
  5147  000037                     ??i2_in_low_int:	; 0 bytes @ 0x36
  5148                           	global	i2memcpy@n
  5149  000037                     i2memcpy@n:	; 2 bytes @ 0x36
  5150  000037                     	ds   2
  5151  000039                     ??i2_memcpy:	; 0 bytes @ 0x38
  5152                           	global	i2memcpy@d
  5153  000039                     i2memcpy@d:	; 2 bytes @ 0x38
  5154  000039                     	ds   2
  5155                           	global	i2memcpy@s
  5156  00003B                     i2memcpy@s:	; 2 bytes @ 0x3A
  5157  00003B                     	ds   2
  5158                           	global	?i2_send_msg
  5159  00003D                     ?i2_send_msg:	; 1 bytes @ 0x3C
  5160                           	global	?i2_recv_msg
  5161  00003D                     ?i2_recv_msg:	; 1 bytes @ 0x3C
  5162                           	global	i2send_msg@qptr
  5163  00003D                     i2send_msg@qptr:	; 2 bytes @ 0x3C
  5164                           	global	i2recv_msg@qptr
  5165  00003D                     i2recv_msg@qptr:	; 2 bytes @ 0x3C
  5166  00003D                     	ds   2
  5167                           	global	i2send_msg@length
  5168  00003F                     i2send_msg@length:	; 1 bytes @ 0x3E
  5169                           	global	i2recv_msg@maxlength
  5170  00003F                     i2recv_msg@maxlength:	; 1 bytes @ 0x3E
  5171  00003F                     	ds   1
  5172                           	global	i2send_msg@msgtype
  5173  000040                     i2send_msg@msgtype:	; 1 bytes @ 0x3F
  5174                           	global	i2recv_msg@msgtype
  5175  000040                     i2recv_msg@msgtype:	; 2 bytes @ 0x3F
  5176  000040                     	ds   1
  5177                           	global	i2send_msg@data
  5178  000041                     i2send_msg@data:	; 2 bytes @ 0x40
  5179  000041                     	ds   1
  5180                           	global	i2recv_msg@data
  5181  000042                     i2recv_msg@data:	; 2 bytes @ 0x41
  5182  000042                     	ds   1
  5183  000043                     ??i2_send_msg:	; 0 bytes @ 0x42
  5184  000043                     	ds   1
  5185  000044                     ??_ToMainHigh_sendmsg:	; 0 bytes @ 0x43
  5186  000044                     ??_FromMainLow_recvmsg:	; 0 bytes @ 0x43
  5187  000044                     ??_FromMainHigh_recvmsg:	; 0 bytes @ 0x43
  5188                           ;!
  5189                           ;!Data Sizes:
  5190                           ;!    Strings     0
  5191                           ;!    Constant    0
  5192                           ;!    Data        3
  5193                           ;!    BSS         221
  5194                           ;!    Persistent  4
  5195                           ;!    Stack       0
  5196                           ;!
  5197                           ;!Auto Spaces:
  5198                           ;!    Space          Size  Autos    Used
  5199                           ;!    COMRAM          127     67      76
  5200                           ;!    BANK0           128     72      75
  5201                           ;!    BANK1           256     64     226
  5202                           ;!    BANK2           256      0      54
  5203                           ;!    BANK3           256      0       0
  5204                           
  5205                           ;!
  5206                           ;!Pointer List with Targets:
  5207                           ;!
  5208                           ;!    ?_ReadTimer1	unsigned int  size(2) Largest target is 2
  5209                           ;!		 -> WriteTimer1@timer(COMRAM[2]), ReadTimer1@timer(COMRAM[2]), 
  5210                           ;!
  5211                           ;!    ?_ReadADC	int  size(2) Largest target is 0
  5212                           ;!
  5213                           ;!    ?_memcpy	PTR void  size(2) Largest target is 54
  5214                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@data(BANK0[10]), FromMainHigh_
                                 MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
  5215                           ;!		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 
  5216                           ;!
  5217                           ;!    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
  5218                           ;!		 -> main@uthread_data(BANK1[2]), 
  5219                           ;!
  5220                           ;!    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
  5221                           ;!		 -> main@t0thread_data(BANK1[2]), 
  5222                           ;!
  5223                           ;!    ?_in_high_int	int  size(2) Largest target is 0
  5224                           ;!
  5225                           ;!    memcpy@d1	PTR void  size(2) Largest target is 54
  5226                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@data(BANK0[10]), FromMainHigh_
                                 MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
  5227                           ;!		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 
  5228                           ;!
  5229                           ;!    memcpy@d	PTR unsigned char  size(2) Largest target is 54
  5230                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@data(BANK0[10]), FromMainHigh_
                                 MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
  5231                           ;!		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 
  5232                           ;!
  5233                           ;!    memcpy@s1	PTR const void  size(2) Largest target is 54
  5234                           ;!		 -> adc_int_handler@message(COMRAM[3]), timer1_int_handler@result(COMRAM[2]), timer0
                                 _int_handler@val(BANK0[2]), NULL(NULL[0]), 
  5235                           ;!		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(
                                 BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
  5236                           ;!		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), main@uc(BANK1[5]), 
  5237                           ;!
  5238                           ;!    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
  5239                           ;!		 -> adc_int_handler@message(COMRAM[3]), timer1_int_handler@result(COMRAM[2]), timer0
                                 _int_handler@val(BANK0[2]), NULL(NULL[0]), 
  5240                           ;!		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(
                                 BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
  5241                           ;!		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), main@uc(BANK1[5]), 
  5242                           ;!
  5243                           ;!    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
  5244                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5245                           ;!
  5246                           ;!    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
  5247                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5248                           ;!
  5249                           ;!    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
  5250                           ;!		 -> main@t1thread_data(BANK1[2]), 
  5251                           ;!
  5252                           ;!    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target 
                                 is 2
  5253                           ;!		 -> main@t1thread_data(BANK1[2]), 
  5254                           ;!
  5255                           ;!    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
  5256                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5257                           ;!
  5258                           ;!    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
  5259                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5260                           ;!
  5261                           ;!    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
  5262                           ;!		 -> main@uc(BANK1[5]), 
  5263                           ;!
  5264                           ;!    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
  5265                           ;!		 -> NULL(NULL[0]), main@uc(BANK1[5]), 
  5266                           ;!
  5267                           ;!    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
  5268                           ;!		 -> main@ic(BANK1[28]), 
  5269                           ;!
  5270                           ;!    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 10
  5271                           ;!		 -> i2c_int_handler@empty(BANK0[3]), i2c_int_handler@data(BANK0[10]), 
  5272                           ;!
  5273                           ;!    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
  5274                           ;!		 -> NULL(NULL[0]), main@ic(BANK1[28]), 
  5275                           ;!
  5276                           ;!    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
  5277                           ;!		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
  5278                           ;!
  5279                           ;!    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
  5280                           ;!		 -> timer0_int_handler@val(BANK0[2]), 
  5281                           ;!
  5282                           ;!    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1023
  5283                           ;!		 -> RAM(DATA[1023]), 
  5284                           ;!
  5285                           ;!    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 10
  5286                           ;!		 -> i2c_int_handler@data(BANK0[10]), 
  5287                           ;!
  5288                           ;!    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
  5289                           ;!		 -> i2c_int_handler@msgtype(BANK0[1]), 
  5290                           ;!
  5291                           ;!    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 11
  5292                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5293                           ;!
  5294                           ;!    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
  5295                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5296                           ;!
  5297                           ;!    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
  5298                           ;!		 -> main@msgtype(BANK1[1]), 
  5299                           ;!
  5300                           ;!    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 3
  5301                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@error_buf(BANK0[3]), 
  5302                           ;!
  5303                           ;!    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
  5304                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5305                           ;!
  5306                           ;!    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
  5307                           ;!		 -> main@msgtype(BANK1[1]), 
  5308                           ;!
  5309                           ;!    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
  5310                           ;!		 -> adc_int_handler@message(COMRAM[3]), timer1_int_handler@result(COMRAM[2]), NULL(N
                                 ULL[0]), main@uc(BANK1[5]), 
  5311                           ;!
  5312                           ;!    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1023
  5313                           ;!		 -> RAM(DATA[1023]), i2c_int_handler@msgtype(BANK0[1]), main@msgtype(BANK1[1]), 
  5314                           ;!
  5315                           ;!    recv_msg@data	PTR void  size(2) Largest target is 11
  5316                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@data(BANK0[10]), main@msgbuffe
                                 r(BANK1[11]), 
  5317                           ;!
  5318                           ;!    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
  5319                           ;!		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK1[54]), 
  5320                           ;!
  5321                           ;!    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
  5322                           ;!		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK1[54]), 
  5323                           ;!
  5324                           ;!    sp__memcpy	PTR void  size(2) Largest target is 54
  5325                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@data(BANK0[10]), FromMainHigh_
                                 MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
  5326                           ;!		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 
  5327                           ;!
  5328                           ;!    send_msg@data	PTR void  size(2) Largest target is 11
  5329                           ;!		 -> adc_int_handler@message(COMRAM[3]), timer1_int_handler@result(COMRAM[2]), timer0
                                 _int_handler@val(BANK0[2]), NULL(NULL[0]), 
  5330                           ;!		 -> i2c_int_handler@error_buf(BANK0[3]), main@msgbuffer(BANK1[11]), main@uc(BANK1[5]
                                 ), 
  5331                           ;!
  5332                           ;!    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
  5333                           ;!		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK1[54]), 
  5334                           ;!
  5335                           ;!    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
  5336                           ;!		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK1[54]), 
  5337                           ;!
  5338                           ;!    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
  5339                           ;!		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK1[54]), 
  5340                           ;!
  5341                           
  5342                           
  5343                           ;!
  5344                           ;!Critical Paths under _main in COMRAM
  5345                           ;!
  5346                           ;!    None.
  5347                           ;!
  5348                           ;!Critical Paths under _InterruptHandlerHigh in COMRAM
  5349                           ;!
  5350                           ;!    _SleepIfOkay->i2_in_low_int
  5351                           ;!    _ToMainHigh_sendmsg->i2_send_msg
  5352                           ;!    _FromMainLow_recvmsg->i2_recv_msg
  5353                           ;!    _FromMainHigh_recvmsg->i2_recv_msg
  5354                           ;!    i2_in_low_int->i2_in_high_int
  5355                           ;!    i2_send_msg->i2_memcpy
  5356                           ;!    i2_recv_msg->i2_memcpy
  5357                           ;!    _InterruptHandlerLow->_adc_int_handler
  5358                           ;!    _timer1_int_handler->_ToMainLow_sendmsg
  5359                           ;!    _adc_int_handler->_ToMainLow_sendmsg
  5360                           ;!    _uart_recv_int_handler->_ToMainLow_sendmsg
  5361                           ;!    _ToMainLow_sendmsg->i1_send_msg
  5362                           ;!    i1_send_msg->i1_memcpy
  5363                           ;!
  5364                           ;!Critical Paths under _main in BANK0
  5365                           ;!
  5366                           ;!    _init_timer1_lthread->_OpenADC
  5367                           ;!    _init_queues->_init_queue
  5368                           ;!    _block_on_To_msgqueues->_in_main
  5369                           ;!    _in_main->_in_low_int
  5370                           ;!    _in_low_int->_in_high_int
  5371                           ;!    _ToMainHigh_recvmsg->_recv_msg
  5372                           ;!    _ToMainLow_recvmsg->_recv_msg
  5373                           ;!    _FromMainLow_sendmsg->_send_msg
  5374                           ;!    _send_msg->_memcpy
  5375                           ;!    _recv_msg->_memcpy
  5376                           ;!
  5377                           ;!Critical Paths under _InterruptHandlerHigh in BANK0
  5378                           ;!
  5379                           ;!    _InterruptHandlerHigh->_i2c_int_handler
  5380                           ;!    _i2c_int_handler->_FromMainLow_recvmsg
  5381                           ;!    _timer0_int_handler->_FromMainHigh_recvmsg
  5382                           ;!    _ToMainHigh_sendmsg->i2_send_msg
  5383                           ;!    _FromMainLow_recvmsg->i2_recv_msg
  5384                           ;!    _FromMainHigh_recvmsg->i2_recv_msg
  5385                           ;!
  5386                           ;!Critical Paths under _main in BANK1
  5387                           ;!
  5388                           ;!    _main->_ToMainHigh_recvmsg
  5389                           ;!    _main->_ToMainLow_recvmsg
  5390                           ;!    _ToMainHigh_recvmsg->_recv_msg
  5391                           ;!    _ToMainLow_recvmsg->_recv_msg
  5392                           ;!    _FromMainLow_sendmsg->_send_msg
  5393                           ;!
  5394                           ;!Critical Paths under _InterruptHandlerHigh in BANK1
  5395                           ;!
  5396                           ;!    None.
  5397                           ;!
  5398                           ;!Critical Paths under _main in BANK2
  5399                           ;!
  5400                           ;!    None.
  5401                           ;!
  5402                           ;!Critical Paths under _InterruptHandlerHigh in BANK2
  5403                           ;!
  5404                           ;!    None.
  5405                           ;!
  5406                           ;!Critical Paths under _main in BANK3
  5407                           ;!
  5408                           ;!    None.
  5409                           ;!
  5410                           ;!Critical Paths under _InterruptHandlerHigh in BANK3
  5411                           ;!
  5412                           ;!    None.
  5413                           
  5414 ;;
  5415 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  5416 ;;
  5417                           
  5418                           ;!
  5419                           ;!Call Graph Tables:
  5420                           ;!
  5421                           ;! ---------------------------------------------------------------------------------
  5422                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  5423                           ;! ---------------------------------------------------------------------------------
  5424                           ;! (0) _main                                                56    56      0    4596
  5425                           ;!                                             10 BANK1     54    54      0
  5426                           ;!                     _init_uart_recv
  5427                           ;!                           _init_i2c
  5428                           ;!                _init_timer1_lthread
  5429                           ;!                        _init_queues
  5430                           ;!                         _OpenTimer1
  5431                           ;!                  _enable_interrupts
  5432                           ;!                _i2c_configure_slave
  5433                           ;!                          _OpenUSART
  5434                           ;!              _block_on_To_msgqueues
  5435                           ;!                 _ToMainHigh_recvmsg
  5436                           ;!                     _timer0_lthread
  5437                           ;!                  _ToMainLow_recvmsg
  5438                           ;!                     _timer1_lthread
  5439                           ;!                _FromMainLow_sendmsg
  5440                           ;!                       _uart_lthread
  5441                           ;! ---------------------------------------------------------------------------------
  5442                           ;! (1) _enable_interrupts                                    0     0      0       0
  5443                           ;! ---------------------------------------------------------------------------------
  5444                           ;! (1) _init_uart_recv                                       2     0      2      22
  5445                           ;!                                             53 BANK0      2     0      2
  5446                           ;! ---------------------------------------------------------------------------------
  5447                           ;! (1) _init_i2c                                             2     0      2      22
  5448                           ;!                                             53 BANK0      2     0      2
  5449                           ;! ---------------------------------------------------------------------------------
  5450                           ;! (1) _init_timer1_lthread                                  5     3      2     198
  5451                           ;!                                             58 BANK0      5     3      2
  5452                           ;!                            _OpenADC
  5453                           ;!                         _SetChanADC
  5454                           ;! ---------------------------------------------------------------------------------
  5455                           ;! (1) _init_queues                                          1     1      0     134
  5456                           ;!                                             57 BANK0      1     1      0
  5457                           ;!                         _init_queue
  5458                           ;! ---------------------------------------------------------------------------------
  5459                           ;! (1) _OpenTimer1                                           1     0      1      66
  5460                           ;!                                             53 BANK0      1     0      1
  5461                           ;! ---------------------------------------------------------------------------------
  5462                           ;! (1) _i2c_configure_slave                                  1     0      1      22
  5463                           ;!                                             53 BANK0      1     0      1
  5464                           ;! ---------------------------------------------------------------------------------
  5465                           ;! (1) _OpenUSART                                            3     0      3     220
  5466                           ;!                                             53 BANK0      3     0      3
  5467                           ;! ---------------------------------------------------------------------------------
  5468                           ;! (1) _block_on_To_msgqueues                                1     1      0      66
  5469                           ;!                                             59 BANK0      1     1      0
  5470                           ;!                            _in_main
  5471                           ;!                          _check_msg
  5472                           ;!                        _Delay1KTCYx
  5473                           ;! ---------------------------------------------------------------------------------
  5474                           ;! (2) _in_main                                              2     0      2       0
  5475                           ;!                                             57 BANK0      2     0      2
  5476                           ;!                         _in_low_int
  5477                           ;!                        _in_high_int
  5478                           ;! ---------------------------------------------------------------------------------
  5479                           ;! (3) _in_low_int                                           2     0      2       0
  5480                           ;!                                             55 BANK0      2     0      2
  5481                           ;!                        _in_high_int
  5482                           ;! ---------------------------------------------------------------------------------
  5483                           ;! (3) _in_high_int                                          2     0      2       0
  5484                           ;!                                             53 BANK0      2     0      2
  5485                           ;! ---------------------------------------------------------------------------------
  5486                           ;! (1) _ToMainHigh_recvmsg                                   5     0      5     772
  5487                           ;!                                              5 BANK1      5     0      5
  5488                           ;!                           _recv_msg
  5489                           ;! ---------------------------------------------------------------------------------
  5490                           ;! (1) _timer0_lthread                                      10     2      8      23
  5491                           ;!                                             53 BANK0     10     2      8
  5492                           ;! ---------------------------------------------------------------------------------
  5493                           ;! (1) _ToMainLow_recvmsg                                    5     0      5     772
  5494                           ;!                                              5 BANK1      5     0      5
  5495                           ;!                           _recv_msg
  5496                           ;! ---------------------------------------------------------------------------------
  5497                           ;! (1) _timer1_lthread                                      10     2      8      44
  5498                           ;!                                             53 BANK0     10     2      8
  5499                           ;!                         _ConvertADC
  5500                           ;! ---------------------------------------------------------------------------------
  5501                           ;! (1) _FromMainLow_sendmsg                                  4     0      4     741
  5502                           ;!                                              5 BANK1      4     0      4
  5503                           ;!                           _send_msg
  5504                           ;! ---------------------------------------------------------------------------------
  5505                           ;! (1) _uart_lthread                                         8     0      8      88
  5506                           ;!                                             53 BANK0      8     0      8
  5507                           ;! ---------------------------------------------------------------------------------
  5508                           ;! (2) _init_queue                                           4     2      2     134
  5509                           ;!                                             53 BANK0      4     2      2
  5510                           ;! ---------------------------------------------------------------------------------
  5511                           ;! (2) _send_msg                                            12     6      6     648
  5512                           ;!                                             63 BANK0      7     1      6
  5513                           ;!                                              0 BANK1      5     5      0
  5514                           ;!                             _memcpy
  5515                           ;! ---------------------------------------------------------------------------------
  5516                           ;! (2) _recv_msg                                            14     7      7     679
  5517                           ;!                                             63 BANK0      9     2      7
  5518                           ;!                                              0 BANK1      5     5      0
  5519                           ;!                             _memcpy
  5520                           ;! ---------------------------------------------------------------------------------
  5521                           ;! (3) _memcpy                                              10     4      6     174
  5522                           ;!                                             53 BANK0     10     4      6
  5523                           ;! ---------------------------------------------------------------------------------
  5524                           ;! (2) _check_msg                                            3     1      2      44
  5525                           ;!                                             53 BANK0      3     1      2
  5526                           ;! ---------------------------------------------------------------------------------
  5527                           ;! (2) _Delay1KTCYx                                          1     0      1      22
  5528                           ;!                                             53 BANK0      1     0      1
  5529                           ;! ---------------------------------------------------------------------------------
  5530                           ;! (2) _OpenADC                                              5     2      3     154
  5531                           ;!                                             53 BANK0      5     2      3
  5532                           ;! ---------------------------------------------------------------------------------
  5533                           ;! (2) _SetChanADC                                           2     1      1      22
  5534                           ;!                                             53 BANK0      2     1      1
  5535                           ;! ---------------------------------------------------------------------------------
  5536                           ;! (2) _ConvertADC                                           0     0      0       0
  5537                           ;! ---------------------------------------------------------------------------------
  5538                           ;! Estimated maximum stack depth 3
  5539                           ;! ---------------------------------------------------------------------------------
  5540                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  5541                           ;! ---------------------------------------------------------------------------------
  5542                           ;! (5) _InterruptHandlerLow                                 17    17      0    4957
  5543                           ;!                                             33 COMRAM    17    17      0
  5544                           ;!                 _timer1_int_handler
  5545                           ;!                    _adc_int_handler
  5546                           ;!              _uart_recv_int_handler
  5547                           ;! ---------------------------------------------------------------------------------
  5548                           ;! (6) _timer1_int_handler                                   6     6      0    1688
  5549                           ;!                                             26 COMRAM     6     6      0
  5550                           ;!                         _ReadTimer1
  5551                           ;!                  _ToMainLow_sendmsg
  5552                           ;!                        _WriteTimer1
  5553                           ;! ---------------------------------------------------------------------------------
  5554                           ;! (6) _adc_int_handler                                      7     7      0    1684
  5555                           ;!                                             26 COMRAM     7     7      0
  5556                           ;!                            _ReadADC
  5557                           ;!                  _ToMainLow_sendmsg
  5558                           ;! ---------------------------------------------------------------------------------
  5559                           ;! (6) _uart_recv_int_handler                                2     2      0    1585
  5560                           ;!                                             26 COMRAM     2     2      0
  5561                           ;!                          _ReadUSART
  5562                           ;!                  _ToMainLow_sendmsg
  5563                           ;! ---------------------------------------------------------------------------------
  5564                           ;! (7) _ToMainLow_sendmsg                                    4     0      4    1562
  5565                           ;!                                             22 COMRAM     4     0      4
  5566                           ;!                         i1_send_msg
  5567                           ;! ---------------------------------------------------------------------------------
  5568                           ;! (7) _ReadUSART                                            1     1      0      23
  5569                           ;!                                              0 COMRAM     1     1      0
  5570                           ;! ---------------------------------------------------------------------------------
  5571                           ;! (7) _ReadTimer1                                           4     2      2      30
  5572                           ;!                                              0 COMRAM     4     2      2
  5573                           ;! ---------------------------------------------------------------------------------
  5574                           ;! (7) _WriteTimer1                                          4     2      2      45
  5575                           ;!                                              0 COMRAM     4     2      2
  5576                           ;! ---------------------------------------------------------------------------------
  5577                           ;! (7) _ReadADC                                              2     0      2       0
  5578                           ;!                                              0 COMRAM     2     0      2
  5579                           ;! ---------------------------------------------------------------------------------
  5580                           ;! (8) i1_send_msg                                          12     6      6    1496
  5581                           ;!                                             10 COMRAM    12     6      6
  5582                           ;!                           i1_memcpy
  5583                           ;! ---------------------------------------------------------------------------------
  5584                           ;! (9) i1_memcpy                                            10     4      6     395
  5585                           ;!                                              0 COMRAM    10     4      6
  5586                           ;! ---------------------------------------------------------------------------------
  5587                           ;! (10) _InterruptHandlerHigh                               14    14      0    9116
  5588                           ;!                                             39 BANK0     14    14      0
  5589                           ;!                    _i2c_int_handler
  5590                           ;!                 _timer0_int_handler
  5591                           ;!                        _SleepIfOkay
  5592                           ;! ---------------------------------------------------------------------------------
  5593                           ;! (11) _i2c_int_handler                                    27    27      0    4824
  5594                           ;!                                             12 BANK0     27    27      0
  5595                           ;!                       _handle_start
  5596                           ;!                _FromMainLow_recvmsg
  5597                           ;!              _start_i2c_slave_reply
  5598                           ;!                 _ToMainHigh_sendmsg
  5599                           ;! ---------------------------------------------------------------------------------
  5600                           ;! (11) _timer0_int_handler                                  8     8      0    4146
  5601                           ;!                                             12 BANK0      8     8      0
  5602                           ;!                        _WriteTimer0
  5603                           ;!               _FromMainHigh_recvmsg
  5604                           ;!                 _ToMainHigh_sendmsg
  5605                           ;! ---------------------------------------------------------------------------------
  5606                           ;! (11) _SleepIfOkay                                         0     0      0     146
  5607                           ;!                       i2_in_low_int
  5608                           ;!                      i2_in_high_int
  5609                           ;!                        i2_check_msg
  5610                           ;!                   _enter_sleep_mode
  5611                           ;! ---------------------------------------------------------------------------------
  5612                           ;! (12) _ToMainHigh_sendmsg                                  4     0      4    1912
  5613                           ;!                                              5 BANK0      4     0      4
  5614                           ;!                         i2_send_msg
  5615                           ;! ---------------------------------------------------------------------------------
  5616                           ;! (12) _FromMainLow_recvmsg                                 5     0      5    2000
  5617                           ;!                                              7 BANK0      5     0      5
  5618                           ;!                         i2_recv_msg
  5619                           ;! ---------------------------------------------------------------------------------
  5620                           ;! (12) _FromMainHigh_recvmsg                                5     0      5    2000
  5621                           ;!                                              7 BANK0      5     0      5
  5622                           ;!                         i2_recv_msg
  5623                           ;! ---------------------------------------------------------------------------------
  5624                           ;! (12) _enter_sleep_mode                                    0     0      0       0
  5625                           ;! ---------------------------------------------------------------------------------
  5626                           ;! (12) _start_i2c_slave_reply                               5     2      3      66
  5627                           ;!                                             50 COMRAM     5     2      3
  5628                           ;! ---------------------------------------------------------------------------------
  5629                           ;! (12) _handle_start                                        1     0      1      22
  5630                           ;!                                             50 COMRAM     1     0      1
  5631                           ;! ---------------------------------------------------------------------------------
  5632                           ;! (12) _WriteTimer0                                         4     2      2      68
  5633                           ;!                                             50 COMRAM     4     2      2
  5634                           ;! ---------------------------------------------------------------------------------
  5635                           ;! (12) i2_in_low_int                                        2     0      2       0
  5636                           ;!                                             52 COMRAM     2     0      2
  5637                           ;!                      i2_in_high_int
  5638                           ;! ---------------------------------------------------------------------------------
  5639                           ;! (12) i2_in_high_int                                       2     0      2       0
  5640                           ;!                                             50 COMRAM     2     0      2
  5641                           ;! ---------------------------------------------------------------------------------
  5642                           ;! (13) i2_send_msg                                         12     6      6    1819
  5643                           ;!                                             60 COMRAM     7     1      6
  5644                           ;!                                              0 BANK0      5     5      0
  5645                           ;!                           i2_memcpy
  5646                           ;! ---------------------------------------------------------------------------------
  5647                           ;! (13) i2_recv_msg                                         14     7      7    1907
  5648                           ;!                                             60 COMRAM     7     0      7
  5649                           ;!                                              0 BANK0      7     7      0
  5650                           ;!                           i2_memcpy
  5651                           ;! ---------------------------------------------------------------------------------
  5652                           ;! (12) i2_check_msg                                         3     1      2     146
  5653                           ;!                                             50 COMRAM     3     1      2
  5654                           ;! ---------------------------------------------------------------------------------
  5655                           ;! (14) i2_memcpy                                           10     4      6     484
  5656                           ;!                                             50 COMRAM    10     4      6
  5657                           ;! ---------------------------------------------------------------------------------
  5658                           ;! Estimated maximum stack depth 14
  5659                           ;! ---------------------------------------------------------------------------------
  5660                           ;!
  5661                           ;! Call Graph Graphs:
  5662                           ;!
  5663                           ;! _main (ROOT)
  5664                           ;!   _init_uart_recv
  5665                           ;!   _init_i2c
  5666                           ;!   _init_timer1_lthread
  5667                           ;!     _OpenADC
  5668                           ;!     _SetChanADC
  5669                           ;!   _init_queues
  5670                           ;!     _init_queue
  5671                           ;!   _OpenTimer1
  5672                           ;!   _enable_interrupts
  5673                           ;!   _i2c_configure_slave
  5674                           ;!   _OpenUSART
  5675                           ;!   _block_on_To_msgqueues
  5676                           ;!     _in_main
  5677                           ;!       _in_low_int
  5678                           ;!         _in_high_int
  5679                           ;!       _in_high_int
  5680                           ;!     _check_msg
  5681                           ;!     _Delay1KTCYx
  5682                           ;!   _ToMainHigh_recvmsg
  5683                           ;!     _recv_msg
  5684                           ;!       _memcpy
  5685                           ;!   _timer0_lthread
  5686                           ;!   _ToMainLow_recvmsg
  5687                           ;!     _recv_msg
  5688                           ;!       _memcpy
  5689                           ;!   _timer1_lthread
  5690                           ;!     _ConvertADC
  5691                           ;!   _FromMainLow_sendmsg
  5692                           ;!     _send_msg
  5693                           ;!       _memcpy
  5694                           ;!   _uart_lthread
  5695                           ;!
  5696                           ;! _InterruptHandlerLow (ROOT)
  5697                           ;!   _timer1_int_handler
  5698                           ;!     _ReadTimer1
  5699                           ;!     _ToMainLow_sendmsg
  5700                           ;!       i1_send_msg
  5701                           ;!         i1_memcpy
  5702                           ;!     _WriteTimer1
  5703                           ;!   _adc_int_handler
  5704                           ;!     _ReadADC
  5705                           ;!     _ToMainLow_sendmsg
  5706                           ;!       i1_send_msg
  5707                           ;!         i1_memcpy
  5708                           ;!   _uart_recv_int_handler
  5709                           ;!     _ReadUSART
  5710                           ;!     _ToMainLow_sendmsg
  5711                           ;!       i1_send_msg
  5712                           ;!         i1_memcpy
  5713                           ;!
  5714                           
  5715                           ;! Address spaces:
  5716                           
  5717                           ;!Name               Size   Autos  Total    Cost      Usage
  5718                           ;!BIGRAM             3FF      0       0      12        0.0%
  5719                           ;!BITBANK3           100      0       0       9        0.0%
  5720                           ;!BANK3              100      0       0      10        0.0%
  5721                           ;!BITBANK2           100      0       0       7        0.0%
  5722                           ;!BANK2              100      0      36       8       21.1%
  5723                           ;!BITBANK1           100      0       0       5        0.0%
  5724                           ;!BANK1              100     40      E2       6       88.3%
  5725                           ;!BITBANK0            80      0       0       3        0.0%
  5726                           ;!BANK0               80     48      4B       4       58.6%
  5727                           ;!BITCOMRAM           7F      0       0       0        0.0%
  5728                           ;!COMRAM              7F     43      4C       1       59.8%
  5729                           ;!BITSFR               0      0       0      40        0.0%
  5730                           ;!SFR                  0      0       0      40        0.0%
  5731                           ;!STACK                0      0      22       2        0.0%
  5732                           ;!NULL                 0      0       0       0        0.0%
  5733                           ;!ABS                  0      0     1AF      11        0.0%
  5734                           ;!DATA                 0      0     1D1      13        0.0%
  5735                           ;!CODE                 0      0       0       0        0.0%
  5736                           
  5737                           	global	_main
  5738                           
  5739 ;; *************** function _main *****************
  5740 ;; Defined at:
  5741 ;;		line 79 in file "../src/main.c"
  5742 ;; Parameters:    Size  Location     Type
  5743 ;;		None
  5744 ;; Auto vars:     Size  Location     Type
  5745 ;;  ic             28   36[BANK1 ] struct __i2c_comm
  5746 ;;  msgbuffer      11   11[BANK1 ] unsigned char [11]
  5747 ;;  uc              5   29[BANK1 ] struct __uart_comm
  5748 ;;  t1thread_dat    2   27[BANK1 ] struct __timer1_thread_s
  5749 ;;  t0thread_dat    2   24[BANK1 ] struct __timer0_thread_s
  5750 ;;  uthread_data    2   22[BANK1 ] struct __uart_thread_str
  5751 ;;  msgtype         1   35[BANK1 ] unsigned char 
  5752 ;;  length          1   34[BANK1 ] char 
  5753 ;;  last_reg_rec    1   26[BANK1 ] unsigned char 
  5754 ;;  i               1    0        unsigned char 
  5755 ;;  c               1    0        unsigned char 
  5756 ;; Return value:  Size  Location     Type
  5757 ;;		None               void
  5758 ;; Registers used:
  5759 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, structret, tblptrl, tblptrh, tblptr
       u, prodl, prodh, bsr, cstack
  5760 ;; Tracked objects:
  5761 ;;		On entry : 0/0
  5762 ;;		On exit  : 0/0
  5763 ;;		Unchanged: 0/0
  5764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5765 ;;      Params:         0       0       0       0       0
  5766 ;;      Locals:         0       0      53       0       0
  5767 ;;      Temps:          0       0       1       0       0
  5768 ;;      Totals:         0       0      54       0       0
  5769 ;;Total ram usage:       54 bytes
  5770 ;; Hardware stack levels required when called:   14
  5771 ;; This function calls:
  5772 ;;		_init_uart_recv
  5773 ;;		_init_i2c
  5774 ;;		_init_timer1_lthread
  5775 ;;		_init_queues
  5776 ;;		_OpenTimer1
  5777 ;;		_enable_interrupts
  5778 ;;		_i2c_configure_slave
  5779 ;;		_OpenUSART
  5780 ;;		_block_on_To_msgqueues
  5781 ;;		_ToMainHigh_recvmsg
  5782 ;;		_timer0_lthread
  5783 ;;		_ToMainLow_recvmsg
  5784 ;;		_timer1_lthread
  5785 ;;		_FromMainLow_sendmsg
  5786 ;;		_uart_lthread
  5787 ;; This function is called by:
  5788 ;;		Startup code after reset
  5789 ;; This function uses a non-reentrant model
  5790 ;;
  5791                           psect	text0,class=CODE,space=0,reloc=2
  5792                           global __ptext0
  5793  000754                     __ptext0:
  5794                           psect	text0
  5795                           	file	"../src/main.c"
  5796                           	line	79
  5797                           	global	__size_of_main
  5798  0000                     	__size_of_main	equ	__end_of_main-_main
  5799                           	
  5800  000754                     _main:; BSR set to: 0
  5801                           
  5802                           	opt	stack 17
  5803                           	line	99
  5804                           	
  5805  000754                     l19007:
  5806                           ;main.c: 80: char c;
  5807                           ;main.c: 81: signed char length;
  5808                           ;main.c: 82: unsigned char msgtype;
  5809                           ;main.c: 83: unsigned char last_reg_recvd;
  5810                           ;main.c: 84: uart_comm uc;
  5811                           ;main.c: 85: i2c_comm ic;
  5812                           ;main.c: 86: unsigned char msgbuffer[10 + 1];
  5813                           ;main.c: 87: unsigned char i;
  5814                           ;main.c: 88: uart_thread_struct uthread_data;
  5815                           ;main.c: 91: timer1_thread_struct t1thread_data;
  5816                           ;main.c: 92: timer0_thread_struct t0thread_data;
  5817                           ;main.c: 99: OSCCON = 0x82;
  5818  000754  0E82               	movlw	low(082h)
  5819  000756  6ED3               	movwf	((c:4051)),c	;volatile
  5820                           	line	100
  5821                           	
  5822  000758                     l19009:
  5823                           ;main.c: 100: OSCTUNEbits.PLLEN = 0;
  5824  000758  9C9B               	bcf	((c:3995)),c,6	;volatile
  5825                           	line	104
  5826                           	
  5827  00075A                     l19011:
  5828                           ;main.c: 104: init_uart_recv(&uc);
  5829  00075A  0101               	movlb	1	; () banked
  5830  00075C  0E01               	movlw	high(main@uc)
  5831  00075E  0100               	movlb	0	; () banked
  5832  000760  0100               	movlb	0	; () banked
  5833  000762  6FB6               	movwf	((?_init_uart_recv+1))&0ffh
  5834  000764  0101               	movlb	1	; () banked
  5835  000766  0EBF               	movlw	low(main@uc)
  5836  000768  0100               	movlb	0	; () banked
  5837  00076A  6FB5               	movwf	((?_init_uart_recv))&0ffh
  5838  00076C  0100               	movlb	0	; () banked
  5839  00076E  EC0E  F00E         	call	_init_uart_recv	;wreg free
  5840                           	line	107
  5841                           	
  5842  000772                     l19013:
  5843                           ;main.c: 107: init_i2c(&ic);
  5844  000772  0101               	movlb	1	; () banked
  5845  000774  0E01               	movlw	high(main@ic)
  5846  000776  0100               	movlb	0	; () banked
  5847  000778  0100               	movlb	0	; () banked
  5848  00077A  6FB6               	movwf	((?_init_i2c+1))&0ffh
  5849  00077C  0101               	movlb	1	; () banked
  5850  00077E  0EC6               	movlw	low(main@ic)
  5851  000780  0100               	movlb	0	; () banked
  5852  000782  6FB5               	movwf	((?_init_i2c))&0ffh
  5853  000784  0100               	movlb	0	; () banked
  5854  000786  ECED  F00B         	call	_init_i2c	;wreg free
  5855                           	line	110
  5856                           	
  5857  00078A                     l19015:
  5858                           ;main.c: 110: init_timer1_lthread(&t1thread_data);
  5859  00078A  0101               	movlb	1	; () banked
  5860  00078C  0E01               	movlw	high(main@t1thread_data)
  5861  00078E  0100               	movlb	0	; () banked
  5862  000790  0100               	movlb	0	; () banked
  5863  000792  6FBB               	movwf	((?_init_timer1_lthread+1))&0ffh
  5864  000794  0101               	movlb	1	; () banked
  5865  000796  0EBD               	movlw	low(main@t1thread_data)
  5866  000798  0100               	movlb	0	; () banked
  5867  00079A  6FBA               	movwf	((?_init_timer1_lthread))&0ffh
  5868  00079C  0100               	movlb	0	; () banked
  5869  00079E  EC0E  F00B         	call	_init_timer1_lthread	;wreg free
  5870                           	line	113
  5871                           	
  5872  0007A2                     l19017:
  5873                           ;main.c: 113: init_queues();
  5874  0007A2  ECD7  F00A         	call	_init_queues	;wreg free
  5875                           	line	116
  5876                           	
  5877  0007A6                     l19019:
  5878                           ;main.c: 116: TRISB = 0x0;
  5879  0007A6  0E00               	movlw	low(0)
  5880  0007A8  6E93               	movwf	((c:3987)),c	;volatile
  5881                           	line	117
  5882                           	
  5883  0007AA                     l19021:
  5884                           ;main.c: 117: LATB = 0x0;
  5885  0007AA  0E00               	movlw	low(0)
  5886  0007AC  6E8A               	movwf	((c:3978)),c	;volatile
  5887                           	line	121
  5888                           	
  5889  0007AE                     l19023:
  5890                           ;main.c: 121: PORTA = 0x0;
  5891  0007AE  0E00               	movlw	low(0)
  5892  0007B0  6E80               	movwf	((c:3968)),c	;volatile
  5893                           	line	122
  5894                           	
  5895  0007B2                     l19025:
  5896                           ;main.c: 122: LATA = 0x0;
  5897  0007B2  0E00               	movlw	low(0)
  5898  0007B4  6E89               	movwf	((c:3977)),c	;volatile
  5899                           	line	123
  5900                           	
  5901  0007B6                     l19027:
  5902                           ;main.c: 123: ADCON1 = 0x0F;
  5903  0007B6  0E0F               	movlw	low(0Fh)
  5904  0007B8  6EC1               	movwf	((c:4033)),c	;volatile
  5905                           	line	125
  5906                           	
  5907  0007BA                     l19029:
  5908                           ;main.c: 125: TRISA = 0x0F;
  5909  0007BA  0E0F               	movlw	low(0Fh)
  5910  0007BC  6E92               	movwf	((c:3986)),c	;volatile
  5911                           	line	129
  5912                           	
  5913  0007BE                     l19031:
  5914                           ;main.c: 129: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
                                 & 0b11111111);
  5915  0007BE  0101               	movlb	1	; () banked
  5916  0007C0  6FAC               	movwf	(??_main+0+0)&0ffh
  5917  0007C2  0EF5               	movlw	low(0F5h)
  5918  0007C4  0100               	movlb	0	; () banked
  5919  0007C6  0100               	movlb	0	; () banked
  5920  0007C8  6FB5               	movwf	((?_OpenTimer1))&0ffh
  5921  0007CA  0101               	movlb	1	; () banked
  5922  0007CC  51AC               	movf	(??_main+0+0)&0ffh,w
  5923  0007CE  0100               	movlb	0	; () banked
  5924  0007D0  ECC0  F00C         	call	_OpenTimer1	;wreg free
  5925                           	line	133
  5926                           	
  5927  0007D4                     l19033:
  5928                           ;main.c: 133: enable_interrupts();
  5929  0007D4  EC5C  F00E         	call	_enable_interrupts	;wreg free
  5930                           	line	138
  5931                           	
  5932  0007D8                     l19035:
  5933                           ;main.c: 138: IPR1bits.TMR1IP = 0;
  5934  0007D8  909F               	bcf	((c:3999)),c,0	;volatile
  5935                           	line	140
  5936                           	
  5937  0007DA                     l19037:
  5938                           ;main.c: 140: IPR1bits.ADIP = 0;
  5939  0007DA  9C9F               	bcf	((c:3999)),c,6	;volatile
  5940                           	line	142
  5941                           	
  5942  0007DC                     l19039:
  5943                           ;main.c: 142: IPR1bits.RCIP = 0;
  5944  0007DC  9A9F               	bcf	((c:3999)),c,5	;volatile
  5945                           	line	144
  5946                           	
  5947  0007DE                     l19041:
  5948                           ;main.c: 144: IPR1bits.SSPIP = 1;
  5949  0007DE  869F               	bsf	((c:3999)),c,3	;volatile
  5950                           	line	154
  5951                           	
  5952  0007E0                     l19043:
  5953                           ;main.c: 154: i2c_configure_slave(0x9E);
  5954  0007E0  0101               	movlb	1	; () banked
  5955  0007E2  6FAC               	movwf	(??_main+0+0)&0ffh
  5956  0007E4  0E9E               	movlw	low(09Eh)
  5957  0007E6  0100               	movlb	0	; () banked
  5958  0007E8  0100               	movlb	0	; () banked
  5959  0007EA  6FB5               	movwf	((?_i2c_configure_slave))&0ffh
  5960  0007EC  0101               	movlb	1	; () banked
  5961  0007EE  51AC               	movf	(??_main+0+0)&0ffh,w
  5962  0007F0  0100               	movlb	0	; () banked
  5963  0007F2  ECCA  F00D         	call	_i2c_configure_slave	;wreg free
  5964                           	line	167
  5965                           	
  5966  0007F6                     l19045:
  5967                           ;main.c: 167: PIE1bits.SSPIE = 1;
  5968  0007F6  869D               	bsf	((c:3997)),c,3	;volatile
  5969                           	line	171
  5970                           	
  5971  0007F8                     l19047:
  5972                           ;main.c: 170: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  5973                           ;main.c: 171: 0b11111111 & 0b11101111, 0x19);
  5974  0007F8  0101               	movlb	1	; () banked
  5975  0007FA  6FAC               	movwf	(??_main+0+0)&0ffh
  5976  0007FC  0E6C               	movlw	low(06Ch)
  5977  0007FE  0100               	movlb	0	; () banked
  5978  000800  0100               	movlb	0	; () banked
  5979  000802  6FB5               	movwf	((?_OpenUSART))&0ffh
  5980  000804  0101               	movlb	1	; () banked
  5981  000806  51AC               	movf	(??_main+0+0)&0ffh,w
  5982  000808  0E00               	movlw	high(019h)
  5983  00080A  0100               	movlb	0	; () banked
  5984  00080C  0100               	movlb	0	; () banked
  5985  00080E  6FB7               	movwf	(1+(?_OpenUSART+01h))&0ffh
  5986  000810  0E19               	movlw	low(019h)
  5987  000812  0100               	movlb	0	; () banked
  5988  000814  6FB6               	movwf	(0+(?_OpenUSART+01h))&0ffh
  5989  000816  0100               	movlb	0	; () banked
  5990  000818  ECCC  F008         	call	_OpenUSART	;wreg free
  5991  00081C  D000               	goto	l19049
  5992                           	line	191
  5993                           ;main.c: 191: while (1) {
  5994                           	
  5995  00081E                     l3645:
  5996                           	line	195
  5997                           	
  5998  00081E                     l19049:
  5999                           ;main.c: 195: block_on_To_msgqueues();
  6000  00081E  EC47  F007         	call	_block_on_To_msgqueues	;wreg free
  6001                           	line	202
  6002                           	
  6003  000822                     l19051:
  6004                           ;main.c: 202: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  6005  000822  0101               	movlb	1	; () banked
  6006  000824  6FAC               	movwf	(??_main+0+0)&0ffh
  6007  000826  0E0A               	movlw	low(0Ah)
  6008  000828  0101               	movlb	1	; () banked
  6009  00082A  0101               	movlb	1	; () banked
  6010  00082C  6FA7               	movwf	((?_ToMainHigh_recvmsg))&0ffh
  6011  00082E  0101               	movlb	1	; () banked
  6012  000830  51AC               	movf	(??_main+0+0)&0ffh,w
  6013  000832  0101               	movlb	1	; () banked
  6014  000834  0E01               	movlw	high(main@msgtype)
  6015  000836  0101               	movlb	1	; () banked
  6016  000838  0101               	movlb	1	; () banked
  6017  00083A  6FA9               	movwf	(1+(?_ToMainHigh_recvmsg+01h))&0ffh
  6018  00083C  0101               	movlb	1	; () banked
  6019  00083E  0EC5               	movlw	low(main@msgtype)
  6020  000840  0101               	movlb	1	; () banked
  6021  000842  6FA8               	movwf	(0+(?_ToMainHigh_recvmsg+01h))&0ffh
  6022  000844  0101               	movlb	1	; () banked
  6023  000846  0E01               	movlw	high(main@msgbuffer)
  6024  000848  0101               	movlb	1	; () banked
  6025  00084A  0101               	movlb	1	; () banked
  6026  00084C  6FAB               	movwf	(1+(?_ToMainHigh_recvmsg+03h))&0ffh
  6027  00084E  0101               	movlb	1	; () banked
  6028  000850  0EAD               	movlw	low(main@msgbuffer)
  6029  000852  0101               	movlb	1	; () banked
  6030  000854  6FAA               	movwf	(0+(?_ToMainHigh_recvmsg+03h))&0ffh
  6031  000856  0101               	movlb	1	; () banked
  6032  000858  EC36  F00D         	call	_ToMainHigh_recvmsg	;wreg free
  6033  00085C  0101               	movlb	1	; () banked
  6034  00085E  0101               	movlb	1	; () banked
  6035  000860  6FC4               	movwf	((main@length))&0ffh
  6036                           	line	203
  6037                           	
  6038  000862                     l19053:; BSR set to: 1
  6039                           
  6040                           ;main.c: 203: if (length < 0) {
  6041  000862  0101               	movlb	1	; () banked
  6042  000864  0101               	movlb	1	; () banked
  6043  000866  AFC4               	btfss	((main@length))&0ffh,7
  6044  000868  D001               	goto	u2181
  6045  00086A  D001               	goto	u2180
  6046  00086C                     u2181:
  6047  00086C  D03C               	goto	l19065
  6048  00086E                     u2180:
  6049  00086E  D04C               	goto	l19067
  6050                           	line	205
  6051                           	
  6052  000870                     l19055:; BSR set to: 1
  6053                           
  6054  000870  D04B               	goto	l19067
  6055                           	line	207
  6056                           	
  6057  000872                     l3647:; BSR set to: 1
  6058                           
  6059                           	line	208
  6060                           ;main.c: 207: }
  6061                           ;main.c: 208: } else {
  6062  000872  D04A               	goto	l19067
  6063                           	
  6064  000874                     l3646:; BSR set to: 1
  6065                           
  6066                           	line	209
  6067                           ;main.c: 209: switch (msgtype) {
  6068  000874  D038               	goto	l19065
  6069                           	line	213
  6070                           ;main.c: 213: case 10:
  6071                           	
  6072  000876                     l3650:; BSR set to: 1
  6073                           
  6074                           	line	215
  6075                           	
  6076  000876                     l19057:; BSR set to: 1
  6077                           
  6078                           ;main.c: 214: {
  6079                           ;main.c: 215: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  6080  000876  0101               	movlb	1	; () banked
  6081  000878  0E01               	movlw	high(main@t0thread_data)
  6082  00087A  0100               	movlb	0	; () banked
  6083  00087C  0100               	movlb	0	; () banked
  6084  00087E  6FB6               	movwf	((?_timer0_lthread+1))&0ffh
  6085  000880  0101               	movlb	1	; () banked
  6086  000882  0EBA               	movlw	low(main@t0thread_data)
  6087  000884  0100               	movlb	0	; () banked
  6088  000886  6FB5               	movwf	((?_timer0_lthread))&0ffh
  6089  000888  0101               	movlb	1	; () banked
  6090  00088A  0100               	movlb	0	; () banked
  6091  00088C  C1C5  F0B7         	movff	(main@msgtype),0+(?_timer0_lthread+02h)
  6092  000890  0100               	movlb	0	; () banked
  6093  000892  0100               	movlb	0	; () banked
  6094  000894  6BB8               	clrf	(1+(?_timer0_lthread+02h))&0ffh
  6095  000896  0101               	movlb	1	; () banked
  6096  000898  0101               	movlb	1	; () banked
  6097  00089A  51C4               	movf	((main@length))&0ffh,w
  6098  00089C  0100               	movlb	0	; () banked
  6099  00089E  0100               	movlb	0	; () banked
  6100  0008A0  6FB9               	movwf	(0+(?_timer0_lthread+04h))&0ffh
  6101  0008A2  0100               	movlb	0	; () banked
  6102  0008A4  6BBA               	clrf	(1+(?_timer0_lthread+04h))&0ffh
  6103  0008A6  0100               	movlb	0	; () banked
  6104  0008A8  BFB9               	btfsc	(0+(?_timer0_lthread+04h))&0ffh,7
  6105  0008AA  07BA               	decf	(1+(?_timer0_lthread+04h))&0ffh
  6106  0008AC  0101               	movlb	1	; () banked
  6107  0008AE  0E01               	movlw	high(main@msgbuffer)
  6108  0008B0  0100               	movlb	0	; () banked
  6109  0008B2  0100               	movlb	0	; () banked
  6110  0008B4  6FBC               	movwf	(1+(?_timer0_lthread+06h))&0ffh
  6111  0008B6  0101               	movlb	1	; () banked
  6112  0008B8  0EAD               	movlw	low(main@msgbuffer)
  6113  0008BA  0100               	movlb	0	; () banked
  6114  0008BC  6FBB               	movwf	(0+(?_timer0_lthread+06h))&0ffh
  6115  0008BE  0100               	movlb	0	; () banked
  6116  0008C0  EC57  F00E         	call	_timer0_lthread	;wreg free
  6117                           	line	216
  6118                           ;main.c: 216: break;
  6119  0008C4  D021               	goto	l19067
  6120                           	line	218
  6121                           ;main.c: 217: };
  6122                           ;main.c: 218: case 40:
  6123                           	
  6124  0008C6                     l3652:
  6125                           	line	220
  6126                           	
  6127  0008C6                     l3653:
  6128                           	line	224
  6129                           ;main.c: 220: case 41:
  6130                           ;main.c: 221: {
  6131                           ;main.c: 224: last_reg_recvd = msgbuffer[0];
  6132  0008C6  C1AD  F1BC         	movff	(main@msgbuffer),(main@last_reg_recvd)
  6133                           	line	225
  6134                           ;main.c: 225: break;
  6135  0008CA  D01E               	goto	l19067
  6136                           	line	227
  6137                           ;main.c: 226: };
  6138                           ;main.c: 227: case 42:
  6139                           	
  6140  0008CC                     l3654:
  6141                           	line	236
  6142                           ;main.c: 228: {
  6143                           ;main.c: 236: switch (last_reg_recvd) {
  6144  0008CC  D002               	goto	l19061
  6145                           	line	237
  6146                           ;main.c: 237: case 0xaa:
  6147                           	
  6148  0008CE                     l3656:
  6149                           	line	242
  6150                           ;main.c: 238: {
  6151                           ;main.c: 242: break;
  6152  0008CE  D01C               	goto	l19067
  6153                           	line	256
  6154                           	
  6155  0008D0                     l19059:
  6156                           ;main.c: 243: }
  6157                           ;main.c: 256: };
  6158  0008D0  D01B               	goto	l19067
  6159                           	line	236
  6160                           	
  6161  0008D2                     l3655:
  6162                           	
  6163  0008D2                     l19061:
  6164  0008D2  0101               	movlb	1	; () banked
  6165  0008D4  0101               	movlb	1	; () banked
  6166  0008D6  51BC               	movf	((main@last_reg_recvd))&0ffh,w
  6167                           	; Switch size 1, requested type "space"
  6168                           ; Number of cases is 1, Range of values is 170 to 170
  6169                           ; switch strategies available:
  6170                           ; Name         Instructions Cycles
  6171                           ; simple_byte            4     3 (average)
  6172                           ;	Chosen strategy is simple_byte
  6173                           
  6174  0008D8  0AAA               	xorlw	170^0	; case 170
  6175  0008DA  B4D8               	skipnz
  6176  0008DC  D015               	goto	l19067
  6177  0008DE  D014               	goto	l19067
  6178                           
  6179                           	line	256
  6180                           	
  6181  0008E0                     l3657:; BSR set to: 1
  6182                           
  6183                           	line	258
  6184                           ;main.c: 258: break;
  6185  0008E0  D013               	goto	l19067
  6186                           	line	260
  6187                           ;main.c: 259: };
  6188                           ;main.c: 260: default:
  6189                           	
  6190  0008E2                     l3658:; BSR set to: 1
  6191                           
  6192                           	line	263
  6193                           ;main.c: 261: {
  6194                           ;main.c: 263: break;
  6195  0008E2  D012               	goto	l19067
  6196                           	line	265
  6197                           	
  6198  0008E4                     l19063:; BSR set to: 1
  6199                           
  6200                           ;main.c: 264: };
  6201                           ;main.c: 265: };
  6202  0008E4  D011               	goto	l19067
  6203                           	line	209
  6204                           	
  6205  0008E6                     l3649:; BSR set to: 1
  6206                           
  6207                           	
  6208  0008E6                     l19065:; BSR set to: 1
  6209                           
  6210  0008E6  0101               	movlb	1	; () banked
  6211  0008E8  0101               	movlb	1	; () banked
  6212  0008EA  51C5               	movf	((main@msgtype))&0ffh,w
  6213                           	; Switch size 1, requested type "space"
  6214                           ; Number of cases is 4, Range of values is 10 to 42
  6215                           ; switch strategies available:
  6216                           ; Name         Instructions Cycles
  6217                           ; simple_byte           13     7 (average)
  6218                           ;	Chosen strategy is simple_byte
  6219                           
  6220  0008EC  0A0A               	xorlw	10^0	; case 10
  6221  0008EE  B4D8               	skipnz
  6222  0008F0  D7C2               	goto	l19057
  6223  0008F2  0A22               	xorlw	40^10	; case 40
  6224  0008F4  B4D8               	skipnz
  6225  0008F6  D7E7               	goto	l3653
  6226  0008F8  0A01               	xorlw	41^40	; case 41
  6227  0008FA  B4D8               	skipnz
  6228  0008FC  D7E4               	goto	l3653
  6229  0008FE  0A03               	xorlw	42^41	; case 42
  6230  000900  B4D8               	skipnz
  6231  000902  D7E7               	goto	l19061
  6232  000904  D001               	goto	l19067
  6233                           
  6234                           	line	265
  6235                           	
  6236  000906                     l3651:; BSR set to: 1
  6237                           
  6238  000906  D000               	goto	l19067
  6239                           	line	266
  6240                           	
  6241  000908                     l3648:; BSR set to: 1
  6242                           
  6243                           	line	269
  6244                           	
  6245  000908                     l19067:
  6246                           ;main.c: 266: }
  6247                           ;main.c: 269: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  6248  000908  0101               	movlb	1	; () banked
  6249  00090A  6FAC               	movwf	(??_main+0+0)&0ffh
  6250  00090C  0E0A               	movlw	low(0Ah)
  6251  00090E  0101               	movlb	1	; () banked
  6252  000910  0101               	movlb	1	; () banked
  6253  000912  6FA7               	movwf	((?_ToMainLow_recvmsg))&0ffh
  6254  000914  0101               	movlb	1	; () banked
  6255  000916  51AC               	movf	(??_main+0+0)&0ffh,w
  6256  000918  0101               	movlb	1	; () banked
  6257  00091A  0E01               	movlw	high(main@msgtype)
  6258  00091C  0101               	movlb	1	; () banked
  6259  00091E  0101               	movlb	1	; () banked
  6260  000920  6FA9               	movwf	(1+(?_ToMainLow_recvmsg+01h))&0ffh
  6261  000922  0101               	movlb	1	; () banked
  6262  000924  0EC5               	movlw	low(main@msgtype)
  6263  000926  0101               	movlb	1	; () banked
  6264  000928  6FA8               	movwf	(0+(?_ToMainLow_recvmsg+01h))&0ffh
  6265  00092A  0101               	movlb	1	; () banked
  6266  00092C  0E01               	movlw	high(main@msgbuffer)
  6267  00092E  0101               	movlb	1	; () banked
  6268  000930  0101               	movlb	1	; () banked
  6269  000932  6FAB               	movwf	(1+(?_ToMainLow_recvmsg+03h))&0ffh
  6270  000934  0101               	movlb	1	; () banked
  6271  000936  0EAD               	movlw	low(main@msgbuffer)
  6272  000938  0101               	movlb	1	; () banked
  6273  00093A  6FAA               	movwf	(0+(?_ToMainLow_recvmsg+03h))&0ffh
  6274  00093C  0101               	movlb	1	; () banked
  6275  00093E  EC4E  F00D         	call	_ToMainLow_recvmsg	;wreg free
  6276  000942  0101               	movlb	1	; () banked
  6277  000944  0101               	movlb	1	; () banked
  6278  000946  6FC4               	movwf	((main@length))&0ffh
  6279                           	line	270
  6280                           	
  6281  000948                     l19069:; BSR set to: 1
  6282                           
  6283                           ;main.c: 270: if (length < 0) {
  6284  000948  0101               	movlb	1	; () banked
  6285  00094A  0101               	movlb	1	; () banked
  6286  00094C  AFC4               	btfss	((main@length))&0ffh,7
  6287  00094E  D001               	goto	u2191
  6288  000950  D001               	goto	u2190
  6289  000952                     u2191:
  6290  000952  D068               	goto	l19081
  6291  000954                     u2190:
  6292  000954  D764               	goto	l19049
  6293                           	line	272
  6294                           	
  6295  000956                     l19071:; BSR set to: 1
  6296                           
  6297  000956  D763               	goto	l19049
  6298                           	line	274
  6299                           	
  6300  000958                     l3660:; BSR set to: 1
  6301                           
  6302                           	line	275
  6303                           ;main.c: 274: }
  6304                           ;main.c: 275: } else {
  6305  000958  D762               	goto	l19049
  6306                           	
  6307  00095A                     l3659:; BSR set to: 1
  6308                           
  6309                           	line	276
  6310                           ;main.c: 276: switch (msgtype) {
  6311  00095A  D064               	goto	l19081
  6312                           	line	277
  6313                           ;main.c: 277: case 11:
  6314                           	
  6315  00095C                     l3663:; BSR set to: 1
  6316                           
  6317                           	line	279
  6318                           	
  6319  00095C                     l19073:; BSR set to: 1
  6320                           
  6321                           ;main.c: 278: {
  6322                           ;main.c: 279: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  6323  00095C  0101               	movlb	1	; () banked
  6324  00095E  0E01               	movlw	high(main@t1thread_data)
  6325  000960  0100               	movlb	0	; () banked
  6326  000962  0100               	movlb	0	; () banked
  6327  000964  6FB6               	movwf	((?_timer1_lthread+1))&0ffh
  6328  000966  0101               	movlb	1	; () banked
  6329  000968  0EBD               	movlw	low(main@t1thread_data)
  6330  00096A  0100               	movlb	0	; () banked
  6331  00096C  6FB5               	movwf	((?_timer1_lthread))&0ffh
  6332  00096E  0101               	movlb	1	; () banked
  6333  000970  0100               	movlb	0	; () banked
  6334  000972  C1C5  F0B7         	movff	(main@msgtype),0+(?_timer1_lthread+02h)
  6335  000976  0100               	movlb	0	; () banked
  6336  000978  0100               	movlb	0	; () banked
  6337  00097A  6BB8               	clrf	(1+(?_timer1_lthread+02h))&0ffh
  6338  00097C  0101               	movlb	1	; () banked
  6339  00097E  0101               	movlb	1	; () banked
  6340  000980  51C4               	movf	((main@length))&0ffh,w
  6341  000982  0100               	movlb	0	; () banked
  6342  000984  0100               	movlb	0	; () banked
  6343  000986  6FB9               	movwf	(0+(?_timer1_lthread+04h))&0ffh
  6344  000988  0100               	movlb	0	; () banked
  6345  00098A  6BBA               	clrf	(1+(?_timer1_lthread+04h))&0ffh
  6346  00098C  0100               	movlb	0	; () banked
  6347  00098E  BFB9               	btfsc	(0+(?_timer1_lthread+04h))&0ffh,7
  6348  000990  07BA               	decf	(1+(?_timer1_lthread+04h))&0ffh
  6349  000992  0101               	movlb	1	; () banked
  6350  000994  0E01               	movlw	high(main@msgbuffer)
  6351  000996  0100               	movlb	0	; () banked
  6352  000998  0100               	movlb	0	; () banked
  6353  00099A  6FBC               	movwf	(1+(?_timer1_lthread+06h))&0ffh
  6354  00099C  0101               	movlb	1	; () banked
  6355  00099E  0EAD               	movlw	low(main@msgbuffer)
  6356  0009A0  0100               	movlb	0	; () banked
  6357  0009A2  6FBB               	movwf	(0+(?_timer1_lthread+06h))&0ffh
  6358  0009A4  0100               	movlb	0	; () banked
  6359  0009A6  ECA4  F00D         	call	_timer1_lthread	;wreg free
  6360                           	line	280
  6361                           ;main.c: 280: break;
  6362  0009AA  D739               	goto	l19049
  6363                           	line	282
  6364                           ;main.c: 281: };
  6365                           ;main.c: 282: case 40:
  6366                           	
  6367  0009AC                     l3665:
  6368                           	line	285
  6369                           	
  6370  0009AC                     l19075:
  6371                           ;main.c: 283: {
  6372                           ;main.c: 285: FromMainLow_sendmsg(length, msgtype, (void *) msgbuffer);
  6373  0009AC  C1C4  F1A7         	movff	(main@length),(?_FromMainLow_sendmsg)
  6374  0009B0  C1C5  F1A8         	movff	(main@msgtype),0+(?_FromMainLow_sendmsg+01h)
  6375  0009B4  0101               	movlb	1	; () banked
  6376  0009B6  0E01               	movlw	high(main@msgbuffer)
  6377  0009B8  0101               	movlb	1	; () banked
  6378  0009BA  0101               	movlb	1	; () banked
  6379  0009BC  6FAA               	movwf	(1+(?_FromMainLow_sendmsg+02h))&0ffh
  6380  0009BE  0101               	movlb	1	; () banked
  6381  0009C0  0EAD               	movlw	low(main@msgbuffer)
  6382  0009C2  0101               	movlb	1	; () banked
  6383  0009C4  6FA9               	movwf	(0+(?_FromMainLow_sendmsg+02h))&0ffh
  6384  0009C6  0101               	movlb	1	; () banked
  6385  0009C8  EC66  F00D         	call	_FromMainLow_sendmsg	;wreg free
  6386  0009CC  D001               	goto	l19077
  6387                           	line	287
  6388                           ;main.c: 286: };
  6389                           ;main.c: 287: case 30:
  6390                           	
  6391  0009CE                     l3666:
  6392  0009CE  D000               	goto	l19077
  6393                           	line	288
  6394                           	
  6395  0009D0                     l3667:
  6396                           	line	290
  6397                           	
  6398  0009D0                     l19077:
  6399                           ;main.c: 288: case 31:
  6400                           ;main.c: 289: {
  6401                           ;main.c: 290: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  6402  0009D0  0101               	movlb	1	; () banked
  6403  0009D2  0E01               	movlw	high(main@uthread_data)
  6404  0009D4  0100               	movlb	0	; () banked
  6405  0009D6  0100               	movlb	0	; () banked
  6406  0009D8  6FB6               	movwf	((?_uart_lthread+1))&0ffh
  6407  0009DA  0101               	movlb	1	; () banked
  6408  0009DC  0EB8               	movlw	low(main@uthread_data)
  6409  0009DE  0100               	movlb	0	; () banked
  6410  0009E0  6FB5               	movwf	((?_uart_lthread))&0ffh
  6411  0009E2  0101               	movlb	1	; () banked
  6412  0009E4  0100               	movlb	0	; () banked
  6413  0009E6  C1C5  F0B7         	movff	(main@msgtype),0+(?_uart_lthread+02h)
  6414  0009EA  0100               	movlb	0	; () banked
  6415  0009EC  0100               	movlb	0	; () banked
  6416  0009EE  6BB8               	clrf	(1+(?_uart_lthread+02h))&0ffh
  6417  0009F0  0101               	movlb	1	; () banked
  6418  0009F2  0101               	movlb	1	; () banked
  6419  0009F4  51C4               	movf	((main@length))&0ffh,w
  6420  0009F6  0100               	movlb	0	; () banked
  6421  0009F8  0100               	movlb	0	; () banked
  6422  0009FA  6FB9               	movwf	(0+(?_uart_lthread+04h))&0ffh
  6423  0009FC  0100               	movlb	0	; () banked
  6424  0009FE  6BBA               	clrf	(1+(?_uart_lthread+04h))&0ffh
  6425  000A00  0100               	movlb	0	; () banked
  6426  000A02  BFB9               	btfsc	(0+(?_uart_lthread+04h))&0ffh,7
  6427  000A04  07BA               	decf	(1+(?_uart_lthread+04h))&0ffh
  6428  000A06  0101               	movlb	1	; () banked
  6429  000A08  0E01               	movlw	high(main@msgbuffer)
  6430  000A0A  0100               	movlb	0	; () banked
  6431  000A0C  0100               	movlb	0	; () banked
  6432  000A0E  6FBC               	movwf	(1+(?_uart_lthread+06h))&0ffh
  6433  000A10  0101               	movlb	1	; () banked
  6434  000A12  0EAD               	movlw	low(main@msgbuffer)
  6435  000A14  0100               	movlb	0	; () banked
  6436  000A16  6FBB               	movwf	(0+(?_uart_lthread+06h))&0ffh
  6437  000A18  0100               	movlb	0	; () banked
  6438  000A1A  ECC6  F00B         	call	_uart_lthread	;wreg free
  6439                           	line	291
  6440                           ;main.c: 291: break;
  6441  000A1E  D6FF               	goto	l19049
  6442                           	line	293
  6443                           ;main.c: 292: };
  6444                           ;main.c: 293: default:
  6445                           	
  6446  000A20                     l3668:
  6447                           	line	296
  6448                           ;main.c: 294: {
  6449                           ;main.c: 296: break;
  6450  000A20  D6FE               	goto	l19049
  6451                           	line	298
  6452                           	
  6453  000A22                     l19079:
  6454                           ;main.c: 297: };
  6455                           ;main.c: 298: };
  6456  000A22  D6FD               	goto	l19049
  6457                           	line	276
  6458                           	
  6459  000A24                     l3662:
  6460                           	
  6461  000A24                     l19081:
  6462  000A24  0101               	movlb	1	; () banked
  6463  000A26  0101               	movlb	1	; () banked
  6464  000A28  51C5               	movf	((main@msgtype))&0ffh,w
  6465                           	; Switch size 1, requested type "space"
  6466                           ; Number of cases is 4, Range of values is 11 to 40
  6467                           ; switch strategies available:
  6468                           ; Name         Instructions Cycles
  6469                           ; simple_byte           13     7 (average)
  6470                           ;	Chosen strategy is simple_byte
  6471                           
  6472  000A2A  0A0B               	xorlw	11^0	; case 11
  6473  000A2C  B4D8               	skipnz
  6474  000A2E  D796               	goto	l19073
  6475  000A30  0A15               	xorlw	30^11	; case 30
  6476  000A32  B4D8               	skipnz
  6477  000A34  D7CD               	goto	l19077
  6478  000A36  0A01               	xorlw	31^30	; case 31
  6479  000A38  B4D8               	skipnz
  6480  000A3A  D7CA               	goto	l19077
  6481  000A3C  0A37               	xorlw	40^31	; case 40
  6482  000A3E  B4D8               	skipnz
  6483  000A40  D7B5               	goto	l19075
  6484  000A42  D6ED               	goto	l19049
  6485                           
  6486                           	line	298
  6487                           	
  6488  000A44                     l3664:; BSR set to: 1
  6489                           
  6490  000A44  D6EC               	goto	l19049
  6491                           	line	299
  6492                           	
  6493  000A46                     l3661:; BSR set to: 1
  6494                           
  6495  000A46  D6EB               	goto	l19049
  6496                           	line	300
  6497                           	
  6498  000A48                     l3669:; BSR set to: 1
  6499                           
  6500                           	line	191
  6501  000A48  D6EA               	goto	l19049
  6502                           	
  6503  000A4A                     l3670:; BSR set to: 1
  6504                           
  6505                           	line	302
  6506                           	
  6507  000A4A                     l3671:; BSR set to: 1
  6508                           
  6509                           	global	start
  6510  000A4A  EF69  F000         	goto	start
  6511                           	opt stack 0
  6512                           GLOBAL	__end_of_main
  6513  000A4E                     	__end_of_main:
  6514                           	signat	_main,88
  6515                           	global	_enable_interrupts
  6516                           
  6517 ;; *************** function _enable_interrupts *****************
  6518 ;; Defined at:
  6519 ;;		line 14 in file "../src/interrupts.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;		None
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;		None
  6524 ;; Return value:  Size  Location     Type
  6525 ;;		None               void
  6526 ;; Registers used:
  6527 ;;		None
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6533 ;;      Params:         0       0       0       0       0
  6534 ;;      Locals:         0       0       0       0       0
  6535 ;;      Temps:          0       0       0       0       0
  6536 ;;      Totals:         0       0       0       0       0
  6537 ;;Total ram usage:        0 bytes
  6538 ;; Hardware stack levels used:    1
  6539 ;; Hardware stack levels required when called:   10
  6540 ;; This function calls:
  6541 ;;		Nothing
  6542 ;; This function is called by:
  6543 ;;		_main
  6544 ;; This function uses a non-reentrant model
  6545 ;;
  6546                           psect	text1,class=CODE,space=0,reloc=2
  6547                           global __ptext1
  6548  001CB8                     __ptext1:
  6549                           psect	text1
  6550                           	file	"../src/interrupts.c"
  6551                           	line	14
  6552                           	global	__size_of_enable_interrupts
  6553  0000                     	__size_of_enable_interrupts	equ	__end_of_enable_interrupts-_enable_interrupts
  6554                           	
  6555  001CB8                     _enable_interrupts:; BSR set to: 1
  6556                           
  6557                           	opt	stack 20
  6558                           	line	17
  6559                           	
  6560  001CB8                     l18055:
  6561                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  6562  001CB8  8ED0               	bsf	((c:4048)),c,7	;volatile
  6563                           	line	18
  6564                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  6565  001CBA  8EF2               	bsf	((c:4082)),c,7	;volatile
  6566                           	line	19
  6567                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  6568  001CBC  8CF2               	bsf	((c:4082)),c,6	;volatile
  6569                           	line	20
  6570                           	
  6571  001CBE                     l1799:
  6572  001CBE  0012               	return
  6573                           	opt stack 0
  6574                           GLOBAL	__end_of_enable_interrupts
  6575  001CC0                     	__end_of_enable_interrupts:
  6576                           	signat	_enable_interrupts,88
  6577                           	global	_init_uart_recv
  6578                           
  6579 ;; *************** function _init_uart_recv *****************
  6580 ;; Defined at:
  6581 ;;		line 30 in file "../src/my_uart.c"
  6582 ;; Parameters:    Size  Location     Type
  6583 ;;  uc              2   53[BANK0 ] PTR struct __uart_comm
  6584 ;;		 -> main@uc(5), 
  6585 ;; Auto vars:     Size  Location     Type
  6586 ;;		None
  6587 ;; Return value:  Size  Location     Type
  6588 ;;		None               void
  6589 ;; Registers used:
  6590 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6591 ;; Tracked objects:
  6592 ;;		On entry : 0/0
  6593 ;;		On exit  : 0/0
  6594 ;;		Unchanged: 0/0
  6595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6596 ;;      Params:         0       2       0       0       0
  6597 ;;      Locals:         0       0       0       0       0
  6598 ;;      Temps:          0       0       0       0       0
  6599 ;;      Totals:         0       2       0       0       0
  6600 ;;Total ram usage:        2 bytes
  6601 ;; Hardware stack levels used:    1
  6602 ;; Hardware stack levels required when called:   10
  6603 ;; This function calls:
  6604 ;;		Nothing
  6605 ;; This function is called by:
  6606 ;;		_main
  6607 ;; This function uses a non-reentrant model
  6608 ;;
  6609                           psect	text2,class=CODE,space=0,reloc=2
  6610                           global __ptext2
  6611  001C1C                     __ptext2:
  6612                           psect	text2
  6613                           	file	"../src/my_uart.c"
  6614                           	line	30
  6615                           	global	__size_of_init_uart_recv
  6616  0000                     	__size_of_init_uart_recv	equ	__end_of_init_uart_recv-_init_uart_recv
  6617                           	
  6618  001C1C                     _init_uart_recv:
  6619                           	opt	stack 20
  6620                           	line	31
  6621                           	
  6622  001C1C                     l18341:
  6623                           ;my_uart.c: 31: uc_ptr = uc;
  6624  001C1C  C0B5  F04B         	movff	(init_uart_recv@uc),(c:_uc_ptr)
  6625  001C20  C0B6  F04C         	movff	(init_uart_recv@uc+1),(c:_uc_ptr+1)
  6626                           	line	32
  6627                           	
  6628  001C24                     l18343:
  6629                           ;my_uart.c: 32: uc_ptr->buflen = 0;
  6630  001C24  EE20 F004          	lfsr	2,04h
  6631  001C28  504B               	movf	((c:_uc_ptr)),c,w
  6632  001C2A  26D9               	addwf	fsr2l
  6633  001C2C  504C               	movf	((c:_uc_ptr+1)),c,w
  6634  001C2E  22DA               	addwfc	fsr2h
  6635  001C30  0E00               	movlw	low(0)
  6636  001C32  6EDF               	movwf	indf2
  6637                           	line	33
  6638                           	
  6639  001C34                     l9209:
  6640  001C34  0012               	return
  6641                           	opt stack 0
  6642                           GLOBAL	__end_of_init_uart_recv
  6643  001C36                     	__end_of_init_uart_recv:
  6644                           	signat	_init_uart_recv,4216
  6645                           	global	_init_i2c
  6646                           
  6647 ;; *************** function _init_i2c *****************
  6648 ;; Defined at:
  6649 ;;		line 286 in file "../src/my_i2c.c"
  6650 ;; Parameters:    Size  Location     Type
  6651 ;;  ic              2   53[BANK0 ] PTR struct __i2c_comm
  6652 ;;		 -> main@ic(28), 
  6653 ;; Auto vars:     Size  Location     Type
  6654 ;;		None
  6655 ;; Return value:  Size  Location     Type
  6656 ;;		None               void
  6657 ;; Registers used:
  6658 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6659 ;; Tracked objects:
  6660 ;;		On entry : 0/0
  6661 ;;		On exit  : 0/0
  6662 ;;		Unchanged: 0/0
  6663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6664 ;;      Params:         0       2       0       0       0
  6665 ;;      Locals:         0       0       0       0       0
  6666 ;;      Temps:          0       0       0       0       0
  6667 ;;      Totals:         0       2       0       0       0
  6668 ;;Total ram usage:        2 bytes
  6669 ;; Hardware stack levels used:    1
  6670 ;; Hardware stack levels required when called:   10
  6671 ;; This function calls:
  6672 ;;		Nothing
  6673 ;; This function is called by:
  6674 ;;		_main
  6675 ;; This function uses a non-reentrant model
  6676 ;;
  6677                           psect	text3,class=CODE,space=0,reloc=2
  6678                           global __ptext3
  6679  0017DA                     __ptext3:
  6680                           psect	text3
  6681                           	file	"../src/my_i2c.c"
  6682                           	line	286
  6683                           	global	__size_of_init_i2c
  6684  0000                     	__size_of_init_i2c	equ	__end_of_init_i2c-_init_i2c
  6685                           	
  6686  0017DA                     _init_i2c:
  6687                           	opt	stack 20
  6688                           	line	287
  6689                           	
  6690  0017DA                     l18345:
  6691                           ;my_i2c.c: 287: ic_ptr = ic;
  6692  0017DA  C0B5  F049         	movff	(init_i2c@ic),(c:_ic_ptr)
  6693  0017DE  C0B6  F04A         	movff	(init_i2c@ic+1),(c:_ic_ptr+1)
  6694                           	line	288
  6695                           	
  6696  0017E2                     l18347:
  6697                           ;my_i2c.c: 288: ic_ptr->buflen = 0;
  6698  0017E2  EE20 F00A          	lfsr	2,0Ah
  6699  0017E6  5049               	movf	((c:_ic_ptr)),c,w
  6700  0017E8  26D9               	addwf	fsr2l
  6701  0017EA  504A               	movf	((c:_ic_ptr+1)),c,w
  6702  0017EC  22DA               	addwfc	fsr2h
  6703  0017EE  0E00               	movlw	low(0)
  6704  0017F0  6EDF               	movwf	indf2
  6705                           	line	289
  6706                           ;my_i2c.c: 289: ic_ptr->event_count = 0;
  6707  0017F2  EE20 F00B          	lfsr	2,0Bh
  6708  0017F6  5049               	movf	((c:_ic_ptr)),c,w
  6709  0017F8  26D9               	addwf	fsr2l
  6710  0017FA  504A               	movf	((c:_ic_ptr+1)),c,w
  6711  0017FC  22DA               	addwfc	fsr2h
  6712  0017FE  0E00               	movlw	low(0)
  6713  001800  6EDF               	movwf	indf2
  6714                           	line	290
  6715                           ;my_i2c.c: 290: ic_ptr->status = 0x5;
  6716  001802  EE20 F00C          	lfsr	2,0Ch
  6717  001806  5049               	movf	((c:_ic_ptr)),c,w
  6718  001808  26D9               	addwf	fsr2l
  6719  00180A  504A               	movf	((c:_ic_ptr+1)),c,w
  6720  00180C  22DA               	addwfc	fsr2h
  6721  00180E  0E05               	movlw	low(05h)
  6722  001810  6EDF               	movwf	indf2
  6723                           	line	291
  6724                           ;my_i2c.c: 291: ic_ptr->error_count = 0;
  6725  001812  EE20 F00E          	lfsr	2,0Eh
  6726  001816  5049               	movf	((c:_ic_ptr)),c,w
  6727  001818  26D9               	addwf	fsr2l
  6728  00181A  504A               	movf	((c:_ic_ptr+1)),c,w
  6729  00181C  22DA               	addwfc	fsr2h
  6730  00181E  0E00               	movlw	low(0)
  6731  001820  6EDF               	movwf	indf2
  6732                           	line	292
  6733                           	
  6734  001822                     l7407:
  6735  001822  0012               	return
  6736                           	opt stack 0
  6737                           GLOBAL	__end_of_init_i2c
  6738  001824                     	__end_of_init_i2c:
  6739                           	signat	_init_i2c,4216
  6740                           	global	_init_timer1_lthread
  6741                           
  6742 ;; *************** function _init_timer1_lthread *****************
  6743 ;; Defined at:
  6744 ;;		line 8 in file "../src/timer1_thread.c"
  6745 ;; Parameters:    Size  Location     Type
  6746 ;;  tptr            2   58[BANK0 ] PTR struct __timer1_thre
  6747 ;;		 -> main@t1thread_data(2), 
  6748 ;; Auto vars:     Size  Location     Type
  6749 ;;		None
  6750 ;; Return value:  Size  Location     Type
  6751 ;;		None               void
  6752 ;; Registers used:
  6753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6754 ;; Tracked objects:
  6755 ;;		On entry : 0/0
  6756 ;;		On exit  : 0/0
  6757 ;;		Unchanged: 0/0
  6758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6759 ;;      Params:         0       2       0       0       0
  6760 ;;      Locals:         0       0       0       0       0
  6761 ;;      Temps:          0       3       0       0       0
  6762 ;;      Totals:         0       5       0       0       0
  6763 ;;Total ram usage:        5 bytes
  6764 ;; Hardware stack levels used:    1
  6765 ;; Hardware stack levels required when called:   11
  6766 ;; This function calls:
  6767 ;;		_OpenADC
  6768 ;;		_SetChanADC
  6769 ;; This function is called by:
  6770 ;;		_main
  6771 ;; This function uses a non-reentrant model
  6772 ;;
  6773                           psect	text4,class=CODE,space=0,reloc=2
  6774                           global __ptext4
  6775  00161C                     __ptext4:
  6776                           psect	text4
  6777                           	file	"../src/timer1_thread.c"
  6778                           	line	8
  6779                           	global	__size_of_init_timer1_lthread
  6780  0000                     	__size_of_init_timer1_lthread	equ	__end_of_init_timer1_lthread-_init_timer1_lthread
  6781                           	
  6782  00161C                     _init_timer1_lthread:
  6783                           	opt	stack 19
  6784                           	line	13
  6785                           	
  6786  00161C                     l18349:
  6787                           ;timer1_thread.c: 10: OpenADC(0b10011111 & 0b11111111 & 0b11110001,
  6788                           ;timer1_thread.c: 11: 0b10000111 & 0b10001111 &
  6789                           ;timer1_thread.c: 12: 0b01111111 & 0b11111110 &
  6790                           ;timer1_thread.c: 13: 0b11111101, 0b1011);
  6791  00161C  0100               	movlb	0	; () banked
  6792  00161E  6FBC               	movwf	(??_init_timer1_lthread+0+0)&0ffh
  6793  001620  0E91               	movlw	low(091h)
  6794  001622  0100               	movlb	0	; () banked
  6795  001624  0100               	movlb	0	; () banked
  6796  001626  6FB5               	movwf	((?_OpenADC))&0ffh
  6797  001628  0100               	movlb	0	; () banked
  6798  00162A  51BC               	movf	(??_init_timer1_lthread+0+0)&0ffh,w
  6799  00162C  0100               	movlb	0	; () banked
  6800  00162E  6FBD               	movwf	(??_init_timer1_lthread+1+0)&0ffh
  6801  001630  0E04               	movlw	low(04h)
  6802  001632  0100               	movlb	0	; () banked
  6803  001634  0100               	movlb	0	; () banked
  6804  001636  6FB6               	movwf	(0+(?_OpenADC+01h))&0ffh
  6805  001638  0100               	movlb	0	; () banked
  6806  00163A  51BD               	movf	(??_init_timer1_lthread+1+0)&0ffh,w
  6807  00163C  0100               	movlb	0	; () banked
  6808  00163E  6FBE               	movwf	(??_init_timer1_lthread+2+0)&0ffh
  6809  001640  0E0B               	movlw	low(0Bh)
  6810  001642  0100               	movlb	0	; () banked
  6811  001644  0100               	movlb	0	; () banked
  6812  001646  6FB7               	movwf	(0+(?_OpenADC+02h))&0ffh
  6813  001648  0100               	movlb	0	; () banked
  6814  00164A  51BE               	movf	(??_init_timer1_lthread+2+0)&0ffh,w
  6815  00164C  0100               	movlb	0	; () banked
  6816  00164E  EC5A  F00A         	call	_OpenADC	;wreg free
  6817                           	line	14
  6818                           ;timer1_thread.c: 14: SetChanADC(0b10000111);
  6819  001652  0100               	movlb	0	; () banked
  6820  001654  6FBC               	movwf	(??_init_timer1_lthread+0+0)&0ffh
  6821  001656  0E87               	movlw	low(087h)
  6822  001658  0100               	movlb	0	; () banked
  6823  00165A  0100               	movlb	0	; () banked
  6824  00165C  6FB5               	movwf	((?_SetChanADC))&0ffh
  6825  00165E  0100               	movlb	0	; () banked
  6826  001660  51BC               	movf	(??_init_timer1_lthread+0+0)&0ffh,w
  6827  001662  0100               	movlb	0	; () banked
  6828  001664  EC00  F00E         	call	_SetChanADC	;wreg free
  6829                           	line	16
  6830                           	
  6831  001668                     l18351:
  6832                           ;timer1_thread.c: 16: (PIR1bits.ADIF=0,INTCONbits.PEIE=1,PIE1bits.ADIE=1);
  6833  001668  9C9E               	bcf	((c:3998)),c,6	;volatile
  6834                           	
  6835  00166A                     l18353:
  6836  00166A  8CF2               	bsf	((c:4082)),c,6	;volatile
  6837                           	
  6838  00166C                     l18355:
  6839  00166C  8C9D               	bsf	((c:3997)),c,6	;volatile
  6840                           	line	17
  6841                           	
  6842  00166E                     l18357:
  6843                           ;timer1_thread.c: 17: tptr->timerval = 0;
  6844  00166E  C0BA  FFD9         	movff	(init_timer1_lthread@tptr),fsr2l
  6845  001672  C0BB  FFDA         	movff	(init_timer1_lthread@tptr+1),fsr2h
  6846  001676  0E00               	movlw	low(0)
  6847  001678  6EDE               	movwf	postinc2
  6848  00167A  0E00               	movlw	high(0)
  6849  00167C  6EDD               	movwf	postdec2
  6850                           	line	18
  6851                           	
  6852  00167E                     l12789:
  6853  00167E  0012               	return
  6854                           	opt stack 0
  6855                           GLOBAL	__end_of_init_timer1_lthread
  6856  001680                     	__end_of_init_timer1_lthread:
  6857                           	signat	_init_timer1_lthread,4216
  6858                           	global	_init_queues
  6859                           
  6860 ;; *************** function _init_queues *****************
  6861 ;; Defined at:
  6862 ;;		line 194 in file "../src/messages.c"
  6863 ;; Parameters:    Size  Location     Type
  6864 ;;		None
  6865 ;; Auto vars:     Size  Location     Type
  6866 ;;		None
  6867 ;; Return value:  Size  Location     Type
  6868 ;;		None               void
  6869 ;; Registers used:
  6870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6871 ;; Tracked objects:
  6872 ;;		On entry : 0/0
  6873 ;;		On exit  : 0/0
  6874 ;;		Unchanged: 0/0
  6875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6876 ;;      Params:         0       0       0       0       0
  6877 ;;      Locals:         0       0       0       0       0
  6878 ;;      Temps:          0       1       0       0       0
  6879 ;;      Totals:         0       1       0       0       0
  6880 ;;Total ram usage:        1 bytes
  6881 ;; Hardware stack levels used:    1
  6882 ;; Hardware stack levels required when called:   11
  6883 ;; This function calls:
  6884 ;;		_init_queue
  6885 ;; This function is called by:
  6886 ;;		_main
  6887 ;; This function uses a non-reentrant model
  6888 ;;
  6889                           psect	text5,class=CODE,space=0,reloc=2
  6890                           global __ptext5
  6891  0015AE                     __ptext5:
  6892                           psect	text5
  6893                           	file	"../src/messages.c"
  6894                           	line	194
  6895                           	global	__size_of_init_queues
  6896  0000                     	__size_of_init_queues	equ	__end_of_init_queues-_init_queues
  6897                           	
  6898  0015AE                     _init_queues:
  6899                           	opt	stack 19
  6900                           	line	195
  6901                           	
  6902  0015AE                     l18359:
  6903                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  6904  0015AE  0100               	movlb	0	; () banked
  6905  0015B0  6FB9               	movwf	(??_init_queues+0+0)&0ffh
  6906  0015B2  0E00               	movlw	low(0)
  6907  0015B4  6E47               	movwf	((c:_MQ_Main_Willing_to_block)),c
  6908  0015B6  0100               	movlb	0	; () banked
  6909  0015B8  51B9               	movf	(??_init_queues+0+0)&0ffh,w
  6910                           	line	196
  6911                           	
  6912  0015BA                     l18361:; BSR set to: 0
  6913                           
  6914                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  6915  0015BA  0101               	movlb	1	; () banked
  6916  0015BC  0E01               	movlw	high(_ToMainLow_MQ)
  6917  0015BE  0100               	movlb	0	; () banked
  6918  0015C0  0100               	movlb	0	; () banked
  6919  0015C2  6FB6               	movwf	((?_init_queue+1))&0ffh
  6920  0015C4  0101               	movlb	1	; () banked
  6921  0015C6  0E6C               	movlw	low(_ToMainLow_MQ)
  6922  0015C8  0100               	movlb	0	; () banked
  6923  0015CA  6FB5               	movwf	((?_init_queue))&0ffh
  6924  0015CC  0100               	movlb	0	; () banked
  6925  0015CE  EC17  F00A         	call	_init_queue	;wreg free
  6926                           	line	197
  6927                           	
  6928  0015D2                     l18363:
  6929                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  6930  0015D2  0101               	movlb	1	; () banked
  6931  0015D4  0E01               	movlw	high(_ToMainHigh_MQ)
  6932  0015D6  0100               	movlb	0	; () banked
  6933  0015D8  0100               	movlb	0	; () banked
  6934  0015DA  6FB6               	movwf	((?_init_queue+1))&0ffh
  6935  0015DC  0101               	movlb	1	; () banked
  6936  0015DE  0E36               	movlw	low(_ToMainHigh_MQ)
  6937  0015E0  0100               	movlb	0	; () banked
  6938  0015E2  6FB5               	movwf	((?_init_queue))&0ffh
  6939  0015E4  0100               	movlb	0	; () banked
  6940  0015E6  EC17  F00A         	call	_init_queue	;wreg free
  6941                           	line	198
  6942                           	
  6943  0015EA                     l18365:
  6944                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  6945  0015EA  0101               	movlb	1	; () banked
  6946  0015EC  0E01               	movlw	high(_FromMainLow_MQ)
  6947  0015EE  0100               	movlb	0	; () banked
  6948  0015F0  0100               	movlb	0	; () banked
  6949  0015F2  6FB6               	movwf	((?_init_queue+1))&0ffh
  6950  0015F4  0101               	movlb	1	; () banked
  6951  0015F6  0E00               	movlw	low(_FromMainLow_MQ)
  6952  0015F8  0100               	movlb	0	; () banked
  6953  0015FA  6FB5               	movwf	((?_init_queue))&0ffh
  6954  0015FC  0100               	movlb	0	; () banked
  6955  0015FE  EC17  F00A         	call	_init_queue	;wreg free
  6956                           	line	199
  6957                           	
  6958  001602                     l18367:
  6959                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  6960  001602  0102               	movlb	2	; () banked
  6961  001604  0E02               	movlw	high(_FromMainHigh_MQ)
  6962  001606  0100               	movlb	0	; () banked
  6963  001608  0100               	movlb	0	; () banked
  6964  00160A  6FB6               	movwf	((?_init_queue+1))&0ffh
  6965  00160C  0102               	movlb	2	; () banked
  6966  00160E  0E00               	movlw	low(_FromMainHigh_MQ)
  6967  001610  0100               	movlb	0	; () banked
  6968  001612  6FB5               	movwf	((?_init_queue))&0ffh
  6969  001614  0100               	movlb	0	; () banked
  6970  001616  EC17  F00A         	call	_init_queue	;wreg free
  6971                           	line	200
  6972                           	
  6973  00161A                     l5517:
  6974  00161A  0012               	return
  6975                           	opt stack 0
  6976                           GLOBAL	__end_of_init_queues
  6977  00161C                     	__end_of_init_queues:
  6978                           	signat	_init_queues,88
  6979                           	global	_OpenTimer1
  6980                           
  6981 ;; *************** function _OpenTimer1 *****************
  6982 ;; Defined at:
  6983 ;;		line 17 in file "plib/Timers/t1open.c"
  6984 ;; Parameters:    Size  Location     Type
  6985 ;;  config          1   53[BANK0 ] unsigned char 
  6986 ;; Auto vars:     Size  Location     Type
  6987 ;;		None
  6988 ;; Return value:  Size  Location     Type
  6989 ;;		None               void
  6990 ;; Registers used:
  6991 ;;		wreg, status,2, status,0
  6992 ;; Tracked objects:
  6993 ;;		On entry : 0/0
  6994 ;;		On exit  : 0/0
  6995 ;;		Unchanged: 0/0
  6996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6997 ;;      Params:         0       1       0       0       0
  6998 ;;      Locals:         0       0       0       0       0
  6999 ;;      Temps:          0       0       0       0       0
  7000 ;;      Totals:         0       1       0       0       0
  7001 ;;Total ram usage:        1 bytes
  7002 ;; Hardware stack levels used:    1
  7003 ;; Hardware stack levels required when called:   10
  7004 ;; This function calls:
  7005 ;;		Nothing
  7006 ;; This function is called by:
  7007 ;;		_main
  7008 ;; This function uses a non-reentrant model
  7009 ;;
  7010                           psect	text6,class=CODE,space=0,reloc=2
  7011                           global __ptext6
  7012  001980                     __ptext6:
  7013                           psect	text6
  7014                           	file	"plib/Timers/t1open.c"
  7015                           	line	17
  7016                           	global	__size_of_OpenTimer1
  7017  0000                     	__size_of_OpenTimer1	equ	__end_of_OpenTimer1-_OpenTimer1
  7018                           	
  7019  001980                     _OpenTimer1:
  7020                           	opt	stack 20
  7021                           	line	18
  7022                           	
  7023  001980                     l18369:
  7024  001980  0100               	movlb	0	; () banked
  7025  001982  0100               	movlb	0	; () banked
  7026  001984  51B5               	movf	((OpenTimer1@config))&0ffh,w
  7027  001986  0B7E               	andlw	low(07Eh)
  7028  001988  6ECD               	movwf	((c:4045)),c	;volatile
  7029                           	line	21
  7030                           	
  7031  00198A                     l18371:; BSR set to: 0
  7032                           
  7033  00198A  0100               	movlb	0	; () banked
  7034                           	
  7035  00198C  0100               	movlb	0	; () banked
  7036  00198E  ADB5               	btfss	((OpenTimer1@config))&0ffh,(6)&7
  7037  001990  D001               	goto	u1401
  7038  001992  D001               	goto	u1400
  7039  001994                     u1401:
  7040  001994  D002               	goto	l16449
  7041  001996                     u1400:
  7042                           	line	22
  7043                           	
  7044  001996                     l18373:; BSR set to: 0
  7045                           
  7046  001996  8ECD               	bsf	((c:4045)),c,7	;volatile
  7047  001998  D002               	goto	l18375
  7048                           	line	23
  7049                           	
  7050  00199A                     l16449:; BSR set to: 0
  7051                           
  7052                           	line	24
  7053  00199A  9ECD               	bcf	((c:4045)),c,7	;volatile
  7054  00199C  D000               	goto	l18375
  7055                           	
  7056  00199E                     l16450:; BSR set to: 0
  7057                           
  7058                           	line	26
  7059                           	
  7060  00199E                     l18375:; BSR set to: 0
  7061                           
  7062  00199E  0E00               	movlw	low(0)
  7063  0019A0  6ECF               	movwf	((c:4047)),c	;volatile
  7064                           	line	27
  7065  0019A2  0E00               	movlw	low(0)
  7066  0019A4  6ECE               	movwf	((c:4046)),c	;volatile
  7067                           	line	28
  7068                           	
  7069  0019A6                     l18377:; BSR set to: 0
  7070                           
  7071  0019A6  909E               	bcf	((c:3998)),c,0	;volatile
  7072                           	line	30
  7073                           	
  7074  0019A8                     l18379:; BSR set to: 0
  7075                           
  7076  0019A8  0100               	movlb	0	; () banked
  7077                           	
  7078  0019AA  0100               	movlb	0	; () banked
  7079  0019AC  AFB5               	btfss	((OpenTimer1@config))&0ffh,(7)&7
  7080  0019AE  D001               	goto	u1411
  7081  0019B0  D001               	goto	u1410
  7082  0019B2                     u1411:
  7083  0019B2  D002               	goto	l16451
  7084  0019B4                     u1410:
  7085                           	line	31
  7086                           	
  7087  0019B4                     l18381:; BSR set to: 0
  7088                           
  7089  0019B4  809D               	bsf	((c:3997)),c,0	;volatile
  7090  0019B6  D001               	goto	l16452
  7091                           	line	32
  7092                           	
  7093  0019B8                     l16451:; BSR set to: 0
  7094                           
  7095                           	line	33
  7096  0019B8  909D               	bcf	((c:3997)),c,0	;volatile
  7097                           	
  7098  0019BA                     l16452:; BSR set to: 0
  7099                           
  7100                           	line	35
  7101  0019BA  80CD               	bsf	((c:4045)),c,0	;volatile
  7102                           	line	36
  7103                           	
  7104  0019BC                     l16453:; BSR set to: 0
  7105                           
  7106  0019BC  0012               	return
  7107                           	opt stack 0
  7108                           GLOBAL	__end_of_OpenTimer1
  7109  0019BE                     	__end_of_OpenTimer1:
  7110                           	signat	_OpenTimer1,4216
  7111                           	global	_i2c_configure_slave
  7112                           
  7113 ;; *************** function _i2c_configure_slave *****************
  7114 ;; Defined at:
  7115 ;;		line 297 in file "../src/my_i2c.c"
  7116 ;; Parameters:    Size  Location     Type
  7117 ;;  addr            1   53[BANK0 ] unsigned char 
  7118 ;; Auto vars:     Size  Location     Type
  7119 ;;		None
  7120 ;; Return value:  Size  Location     Type
  7121 ;;		None               void
  7122 ;; Registers used:
  7123 ;;		wreg, status,2, status,0
  7124 ;; Tracked objects:
  7125 ;;		On entry : 0/0
  7126 ;;		On exit  : 0/0
  7127 ;;		Unchanged: 0/0
  7128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7129 ;;      Params:         0       1       0       0       0
  7130 ;;      Locals:         0       0       0       0       0
  7131 ;;      Temps:          0       0       0       0       0
  7132 ;;      Totals:         0       1       0       0       0
  7133 ;;Total ram usage:        1 bytes
  7134 ;; Hardware stack levels used:    1
  7135 ;; Hardware stack levels required when called:   10
  7136 ;; This function calls:
  7137 ;;		Nothing
  7138 ;; This function is called by:
  7139 ;;		_main
  7140 ;; This function uses a non-reentrant model
  7141 ;;
  7142                           psect	text7,class=CODE,space=0,reloc=2
  7143                           global __ptext7
  7144  001B94                     __ptext7:
  7145                           psect	text7
  7146                           	file	"../src/my_i2c.c"
  7147                           	line	297
  7148                           	global	__size_of_i2c_configure_slave
  7149  0000                     	__size_of_i2c_configure_slave	equ	__end_of_i2c_configure_slave-_i2c_configure_slave
  7150                           	
  7151  001B94                     _i2c_configure_slave:; BSR set to: 0
  7152                           
  7153                           	opt	stack 20
  7154                           	line	300
  7155                           	
  7156  001B94                     l18383:
  7157                           ;my_i2c.c: 300: TRISCbits.TRISC3 = 1;
  7158  001B94  8694               	bsf	((c:3988)),c,3	;volatile
  7159                           	line	301
  7160                           ;my_i2c.c: 301: TRISCbits.TRISC4 = 1;
  7161  001B96  8894               	bsf	((c:3988)),c,4	;volatile
  7162                           	line	303
  7163                           ;my_i2c.c: 303: SSPADD = addr;
  7164  001B98  C0B5  FFC8         	movff	(i2c_configure_slave@addr),(c:4040)	;volatile
  7165                           	line	305
  7166                           	
  7167  001B9C                     l18385:
  7168                           ;my_i2c.c: 305: SSPSTAT = 0x0;
  7169  001B9C  0E00               	movlw	low(0)
  7170  001B9E  6EC7               	movwf	((c:4039)),c	;volatile
  7171                           	line	306
  7172                           ;my_i2c.c: 306: SSPCON1 = 0x0;
  7173  001BA0  0E00               	movlw	low(0)
  7174  001BA2  6EC6               	movwf	((c:4038)),c	;volatile
  7175                           	line	307
  7176                           ;my_i2c.c: 307: SSPCON2 = 0x0;
  7177  001BA4  0E00               	movlw	low(0)
  7178  001BA6  6EC5               	movwf	((c:4037)),c	;volatile
  7179                           	line	308
  7180                           	
  7181  001BA8                     l18387:
  7182                           ;my_i2c.c: 308: SSPCON1 |= 0x0E;
  7183  001BA8  0E0E               	movlw	(0Eh)&0ffh
  7184  001BAA  12C6               	iorwf	((c:4038)),c	;volatile
  7185                           	line	309
  7186                           	
  7187  001BAC                     l18389:
  7188                           ;my_i2c.c: 309: SSPSTAT |= 0b10000000;
  7189  001BAC  8EC7               	bsf	(0+(7/8)+(c:4039)),c,(7)&7	;volatile
  7190                           	line	311
  7191                           	
  7192  001BAE                     l18391:
  7193                           ;my_i2c.c: 311: TRISCbits.TRISC3 = 1;
  7194  001BAE  8694               	bsf	((c:3988)),c,3	;volatile
  7195                           	line	312
  7196                           	
  7197  001BB0                     l18393:
  7198                           ;my_i2c.c: 312: TRISCbits.TRISC4 = 1;
  7199  001BB0  8894               	bsf	((c:3988)),c,4	;volatile
  7200                           	line	322
  7201                           	
  7202  001BB2                     l18395:
  7203                           ;my_i2c.c: 322: SSPCON2bits.SEN = 1;
  7204  001BB2  80C5               	bsf	((c:4037)),c,0	;volatile
  7205                           	line	323
  7206                           	
  7207  001BB4                     l18397:
  7208                           ;my_i2c.c: 323: SSPCON1 |= 0b00100000;
  7209  001BB4  8AC6               	bsf	(0+(5/8)+(c:4038)),c,(5)&7	;volatile
  7210                           	line	325
  7211                           	
  7212  001BB6                     l7410:
  7213  001BB6  0012               	return
  7214                           	opt stack 0
  7215                           GLOBAL	__end_of_i2c_configure_slave
  7216  001BB8                     	__end_of_i2c_configure_slave:
  7217                           	signat	_i2c_configure_slave,4216
  7218                           	global	_OpenUSART
  7219                           
  7220 ;; *************** function _OpenUSART *****************
  7221 ;; Defined at:
  7222 ;;		line 74 in file "plib/USART/uopen.c"
  7223 ;; Parameters:    Size  Location     Type
  7224 ;;  config          1   53[BANK0 ] unsigned char 
  7225 ;;  spbrg           2   54[BANK0 ] unsigned int 
  7226 ;; Auto vars:     Size  Location     Type
  7227 ;;		None
  7228 ;; Return value:  Size  Location     Type
  7229 ;;		None               void
  7230 ;; Registers used:
  7231 ;;		wreg, status,2
  7232 ;; Tracked objects:
  7233 ;;		On entry : 0/0
  7234 ;;		On exit  : 0/0
  7235 ;;		Unchanged: 0/0
  7236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7237 ;;      Params:         0       3       0       0       0
  7238 ;;      Locals:         0       0       0       0       0
  7239 ;;      Temps:          0       0       0       0       0
  7240 ;;      Totals:         0       3       0       0       0
  7241 ;;Total ram usage:        3 bytes
  7242 ;; Hardware stack levels used:    1
  7243 ;; Hardware stack levels required when called:   10
  7244 ;; This function calls:
  7245 ;;		Nothing
  7246 ;; This function is called by:
  7247 ;;		_main
  7248 ;; This function uses a non-reentrant model
  7249 ;;
  7250                           psect	text8,class=CODE,space=0,reloc=2
  7251                           global __ptext8
  7252  001198                     __ptext8:
  7253                           psect	text8
  7254                           	file	"plib/USART/uopen.c"
  7255                           	line	74
  7256                           	global	__size_of_OpenUSART
  7257  0000                     	__size_of_OpenUSART	equ	__end_of_OpenUSART-_OpenUSART
  7258                           	
  7259  001198                     _OpenUSART:
  7260                           	opt	stack 20
  7261                           	line	75
  7262                           	
  7263  001198                     l18399:
  7264  001198  0E00               	movlw	low(0)
  7265  00119A  6EAC               	movwf	((c:4012)),c	;volatile
  7266                           	line	76
  7267  00119C  0E00               	movlw	low(0)
  7268  00119E  6EAB               	movwf	((c:4011)),c	;volatile
  7269                           	line	78
  7270                           	
  7271  0011A0                     l18401:
  7272  0011A0  0100               	movlb	0	; () banked
  7273                           	
  7274  0011A2  0100               	movlb	0	; () banked
  7275  0011A4  A1B5               	btfss	((OpenUSART@config))&0ffh,(0)&7
  7276  0011A6  D001               	goto	u1421
  7277  0011A8  D001               	goto	u1420
  7278  0011AA                     u1421:
  7279  0011AA  D001               	goto	l16490
  7280  0011AC                     u1420:
  7281                           	line	79
  7282                           	
  7283  0011AC                     l18403:; BSR set to: 0
  7284                           
  7285  0011AC  88AC               	bsf	((c:4012)),c,4	;volatile
  7286                           	
  7287  0011AE                     l16490:; BSR set to: 0
  7288                           
  7289                           	line	81
  7290  0011AE  0100               	movlb	0	; () banked
  7291                           	
  7292  0011B0  0100               	movlb	0	; () banked
  7293  0011B2  A3B5               	btfss	((OpenUSART@config))&0ffh,(1)&7
  7294  0011B4  D001               	goto	u1431
  7295  0011B6  D001               	goto	u1430
  7296  0011B8                     u1431:
  7297  0011B8  D002               	goto	l16491
  7298  0011BA                     u1430:
  7299                           	line	83
  7300                           	
  7301  0011BA                     l18405:; BSR set to: 0
  7302                           
  7303  0011BA  8CAC               	bsf	((c:4012)),c,6	;volatile
  7304                           	line	84
  7305  0011BC  8CAB               	bsf	((c:4011)),c,6	;volatile
  7306                           	line	85
  7307                           	
  7308  0011BE                     l16491:; BSR set to: 0
  7309                           
  7310                           	line	87
  7311  0011BE  0100               	movlb	0	; () banked
  7312                           	
  7313  0011C0  0100               	movlb	0	; () banked
  7314  0011C2  A5B5               	btfss	((OpenUSART@config))&0ffh,(2)&7
  7315  0011C4  D001               	goto	u1441
  7316  0011C6  D001               	goto	u1440
  7317  0011C8                     u1441:
  7318  0011C8  D001               	goto	l16492
  7319  0011CA                     u1440:
  7320                           	line	88
  7321                           	
  7322  0011CA                     l18407:; BSR set to: 0
  7323                           
  7324  0011CA  8EAC               	bsf	((c:4012)),c,7	;volatile
  7325                           	
  7326  0011CC                     l16492:; BSR set to: 0
  7327                           
  7328                           	line	90
  7329  0011CC  0100               	movlb	0	; () banked
  7330                           	
  7331  0011CE  0100               	movlb	0	; () banked
  7332  0011D0  A7B5               	btfss	((OpenUSART@config))&0ffh,(3)&7
  7333  0011D2  D001               	goto	u1451
  7334  0011D4  D001               	goto	u1450
  7335  0011D6                     u1451:
  7336  0011D6  D002               	goto	l16493
  7337  0011D8                     u1450:
  7338                           	line	91
  7339                           	
  7340  0011D8                     l18409:; BSR set to: 0
  7341                           
  7342  0011D8  88AB               	bsf	((c:4011)),c,4	;volatile
  7343  0011DA  D001               	goto	l16494
  7344                           	line	92
  7345                           	
  7346  0011DC                     l16493:; BSR set to: 0
  7347                           
  7348                           	line	93
  7349  0011DC  8AAB               	bsf	((c:4011)),c,5	;volatile
  7350                           	
  7351  0011DE                     l16494:; BSR set to: 0
  7352                           
  7353                           	line	95
  7354  0011DE  0100               	movlb	0	; () banked
  7355                           	
  7356  0011E0  0100               	movlb	0	; () banked
  7357  0011E2  A9B5               	btfss	((OpenUSART@config))&0ffh,(4)&7
  7358  0011E4  D001               	goto	u1461
  7359  0011E6  D001               	goto	u1460
  7360  0011E8                     u1461:
  7361  0011E8  D001               	goto	l16495
  7362  0011EA                     u1460:
  7363                           	line	96
  7364                           	
  7365  0011EA                     l18411:; BSR set to: 0
  7366                           
  7367  0011EA  84AC               	bsf	((c:4012)),c,2	;volatile
  7368                           	
  7369  0011EC                     l16495:; BSR set to: 0
  7370                           
  7371                           	line	98
  7372  0011EC  989E               	bcf	((c:3998)),c,4	;volatile
  7373                           	line	100
  7374  0011EE  0100               	movlb	0	; () banked
  7375                           	
  7376  0011F0  0100               	movlb	0	; () banked
  7377  0011F2  ABB5               	btfss	((OpenUSART@config))&0ffh,(5)&7
  7378  0011F4  D001               	goto	u1471
  7379  0011F6  D001               	goto	u1470
  7380  0011F8                     u1471:
  7381  0011F8  D001               	goto	l16496
  7382  0011FA                     u1470:
  7383                           	line	101
  7384                           	
  7385  0011FA                     l18413:; BSR set to: 0
  7386                           
  7387  0011FA  86AB               	bsf	((c:4011)),c,3	;volatile
  7388                           	
  7389  0011FC                     l16496:; BSR set to: 0
  7390                           
  7391                           	line	103
  7392  0011FC  0100               	movlb	0	; () banked
  7393                           	
  7394  0011FE  0100               	movlb	0	; () banked
  7395  001200  ADB5               	btfss	((OpenUSART@config))&0ffh,(6)&7
  7396  001202  D001               	goto	u1481
  7397  001204  D001               	goto	u1480
  7398  001206                     u1481:
  7399  001206  D002               	goto	l16497
  7400  001208                     u1480:
  7401                           	line	104
  7402                           	
  7403  001208                     l18415:; BSR set to: 0
  7404                           
  7405  001208  8A9D               	bsf	((c:3997)),c,5	;volatile
  7406  00120A  D001               	goto	l16498
  7407                           	line	105
  7408                           	
  7409  00120C                     l16497:; BSR set to: 0
  7410                           
  7411                           	line	106
  7412  00120C  9A9D               	bcf	((c:3997)),c,5	;volatile
  7413                           	
  7414  00120E                     l16498:; BSR set to: 0
  7415                           
  7416                           	line	108
  7417  00120E  9A9E               	bcf	((c:3998)),c,5	;volatile
  7418                           	line	110
  7419  001210  0100               	movlb	0	; () banked
  7420                           	
  7421  001212  0100               	movlb	0	; () banked
  7422  001214  AFB5               	btfss	((OpenUSART@config))&0ffh,(7)&7
  7423  001216  D001               	goto	u1491
  7424  001218  D001               	goto	u1490
  7425  00121A                     u1491:
  7426  00121A  D002               	goto	l16499
  7427  00121C                     u1490:
  7428                           	line	111
  7429                           	
  7430  00121C                     l18417:; BSR set to: 0
  7431                           
  7432  00121C  889D               	bsf	((c:3997)),c,4	;volatile
  7433  00121E  D001               	goto	l16500
  7434                           	line	112
  7435                           	
  7436  001220                     l16499:; BSR set to: 0
  7437                           
  7438                           	line	113
  7439  001220  989D               	bcf	((c:3997)),c,4	;volatile
  7440                           	
  7441  001222                     l16500:; BSR set to: 0
  7442                           
  7443                           	line	115
  7444  001222  C0B6  FFAF         	movff	(OpenUSART@spbrg),(c:4015)	;volatile
  7445                           	line	116
  7446                           	
  7447  001226                     l18419:; BSR set to: 0
  7448                           
  7449  001226  0100               	movlb	0	; () banked
  7450  001228  0100               	movlb	0	; () banked
  7451  00122A  51B7               	movf	((OpenUSART@spbrg+1))&0ffh,w
  7452  00122C  6EB0               	movwf	((c:4016)),c	;volatile
  7453                           	line	118
  7454                           	
  7455  00122E                     l18421:; BSR set to: 0
  7456                           
  7457  00122E  8AAC               	bsf	((c:4012)),c,5	;volatile
  7458                           	line	119
  7459                           	
  7460  001230                     l18423:; BSR set to: 0
  7461                           
  7462  001230  8EAB               	bsf	((c:4011)),c,7	;volatile
  7463                           	line	137
  7464                           	
  7465  001232                     l18425:; BSR set to: 0
  7466                           
  7467  001232  9C94               	bcf	((c:3988)),c,6	;volatile
  7468                           	
  7469  001234                     l18427:; BSR set to: 0
  7470                           
  7471  001234  8E94               	bsf	((c:3988)),c,7	;volatile
  7472                           	line	138
  7473                           	
  7474  001236                     l18429:; BSR set to: 0
  7475                           
  7476                           	
  7477  001236  A8AC               	btfss	((c:4012)),c,4	;volatile
  7478  001238  D001               	goto	u1501
  7479  00123A  D001               	goto	u1500
  7480  00123C                     u1501:
  7481  00123C  D006               	goto	l16502
  7482  00123E                     u1500:
  7483                           	
  7484  00123E                     l18431:; BSR set to: 0
  7485                           
  7486                           	
  7487  00123E  BEAC               	btfsc	((c:4012)),c,7	;volatile
  7488  001240  D001               	goto	u1511
  7489  001242  D001               	goto	u1510
  7490  001244                     u1511:
  7491  001244  D002               	goto	l16502
  7492  001246                     u1510:
  7493                           	line	139
  7494                           	
  7495  001246                     l18433:; BSR set to: 0
  7496                           
  7497  001246  8C94               	bsf	((c:3988)),c,6	;volatile
  7498  001248  D000               	goto	l16502
  7499                           	
  7500  00124A                     l16501:; BSR set to: 0
  7501                           
  7502                           	line	143
  7503                           	
  7504  00124A                     l16502:; BSR set to: 0
  7505                           
  7506  00124A  0012               	return
  7507                           	opt stack 0
  7508                           GLOBAL	__end_of_OpenUSART
  7509  00124C                     	__end_of_OpenUSART:
  7510                           	signat	_OpenUSART,8312
  7511                           	global	_block_on_To_msgqueues
  7512                           
  7513 ;; *************** function _block_on_To_msgqueues *****************
  7514 ;; Defined at:
  7515 ;;		line 258 in file "../src/messages.c"
  7516 ;; Parameters:    Size  Location     Type
  7517 ;;		None
  7518 ;; Auto vars:     Size  Location     Type
  7519 ;;		None
  7520 ;; Return value:  Size  Location     Type
  7521 ;;		None               void
  7522 ;; Registers used:
  7523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7524 ;; Tracked objects:
  7525 ;;		On entry : 0/0
  7526 ;;		On exit  : 0/0
  7527 ;;		Unchanged: 0/0
  7528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7529 ;;      Params:         0       0       0       0       0
  7530 ;;      Locals:         0       0       0       0       0
  7531 ;;      Temps:          0       1       0       0       0
  7532 ;;      Totals:         0       1       0       0       0
  7533 ;;Total ram usage:        1 bytes
  7534 ;; Hardware stack levels used:    1
  7535 ;; Hardware stack levels required when called:   13
  7536 ;; This function calls:
  7537 ;;		_in_main
  7538 ;;		_check_msg
  7539 ;;		_Delay1KTCYx
  7540 ;; This function is called by:
  7541 ;;		_main
  7542 ;; This function uses a non-reentrant model
  7543 ;;
  7544                           psect	text9,class=CODE,space=0,reloc=2
  7545                           global __ptext9
  7546  000E8E                     __ptext9:
  7547                           psect	text9
  7548                           	file	"../src/messages.c"
  7549                           	line	258
  7550                           	global	__size_of_block_on_To_msgqueues
  7551  0000                     	__size_of_block_on_To_msgqueues	equ	__end_of_block_on_To_msgqueues-_block_on_To_msgqueu
                                 es
  7552                           	
  7553  000E8E                     _block_on_To_msgqueues:; BSR set to: 0
  7554                           
  7555                           	opt	stack 17
  7556                           	line	259
  7557                           	
  7558  000E8E                     l18435:
  7559                           ;messages.c: 259: if (!in_main()) {
  7560  000E8E  0100               	movlb	0	; () banked
  7561  000E90  EC6F  F00B         	call	_in_main	;wreg free
  7562  000E94  0100               	movlb	0	; () banked
  7563  000E96  0100               	movlb	0	; () banked
  7564  000E98  51BA               	movf	(1+?_in_main)&0ffh,w
  7565  000E9A  0100               	movlb	0	; () banked
  7566  000E9C  11B9               	iorwf (0+?_in_main)&0ffh,w
  7567                           
  7568  000E9E  A4D8               	btfss	status,2
  7569  000EA0  D001               	goto	u1521
  7570  000EA2  D001               	goto	u1520
  7571  000EA4                     u1521:
  7572  000EA4  D002               	goto	l5534
  7573  000EA6                     u1520:
  7574  000EA6  D05C               	goto	l5535
  7575                           	line	260
  7576                           	
  7577  000EA8                     l18437:; BSR set to: 0
  7578                           
  7579                           ;messages.c: 260: return;
  7580  000EA8  D05B               	goto	l5535
  7581                           	line	261
  7582                           	
  7583  000EAA                     l5534:; BSR set to: 0
  7584                           
  7585                           	line	262
  7586                           ;messages.c: 261: }
  7587                           ;messages.c: 262: LATBbits.LATB3 = 1;
  7588  000EAA  868A               	bsf	((c:3978)),c,3	;volatile
  7589                           	line	263
  7590                           	
  7591  000EAC                     l18439:; BSR set to: 0
  7592                           
  7593                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  7594  000EAC  0100               	movlb	0	; () banked
  7595  000EAE  6FBB               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7596  000EB0  0E01               	movlw	low(01h)
  7597  000EB2  6E47               	movwf	((c:_MQ_Main_Willing_to_block)),c
  7598  000EB4  0100               	movlb	0	; () banked
  7599  000EB6  51BB               	movf	(??_block_on_To_msgqueues+0+0)&0ffh,w
  7600  000EB8  D000               	goto	l18441
  7601                           	line	264
  7602                           ;messages.c: 264: while (1) {
  7603                           	
  7604  000EBA                     l5536:; BSR set to: 0
  7605                           
  7606                           	line	265
  7607                           	
  7608  000EBA                     l18441:; BSR set to: 0
  7609                           
  7610                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  7611  000EBA  0101               	movlb	1	; () banked
  7612  000EBC  0E01               	movlw	high(_ToMainHigh_MQ)
  7613  000EBE  0100               	movlb	0	; () banked
  7614  000EC0  0100               	movlb	0	; () banked
  7615  000EC2  6FB6               	movwf	((?_check_msg+1))&0ffh
  7616  000EC4  0101               	movlb	1	; () banked
  7617  000EC6  0E36               	movlw	low(_ToMainHigh_MQ)
  7618  000EC8  0100               	movlb	0	; () banked
  7619  000ECA  6FB5               	movwf	((?_check_msg))&0ffh
  7620  000ECC  0100               	movlb	0	; () banked
  7621  000ECE  ECFE  F00C         	call	_check_msg	;wreg free
  7622  000ED2  0900               	iorlw	0
  7623  000ED4  B4D8               	btfsc	status,2
  7624  000ED6  D001               	goto	u1531
  7625  000ED8  D001               	goto	u1530
  7626  000EDA                     u1531:
  7627  000EDA  D009               	goto	l18449
  7628  000EDC                     u1530:
  7629                           	line	266
  7630                           	
  7631  000EDC                     l18443:
  7632                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  7633  000EDC  0100               	movlb	0	; () banked
  7634  000EDE  6FBB               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7635  000EE0  0E00               	movlw	low(0)
  7636  000EE2  6E47               	movwf	((c:_MQ_Main_Willing_to_block)),c
  7637  000EE4  0100               	movlb	0	; () banked
  7638  000EE6  51BB               	movf	(??_block_on_To_msgqueues+0+0)&0ffh,w
  7639                           	line	267
  7640                           	
  7641  000EE8                     l18445:; BSR set to: 0
  7642                           
  7643                           ;messages.c: 267: LATBbits.LATB3 = 0;
  7644  000EE8  968A               	bcf	((c:3978)),c,3	;volatile
  7645  000EEA  D03A               	goto	l5535
  7646                           	line	268
  7647                           	
  7648  000EEC                     l18447:; BSR set to: 0
  7649                           
  7650                           ;messages.c: 268: return;
  7651  000EEC  D039               	goto	l5535
  7652                           	line	269
  7653                           	
  7654  000EEE                     l5537:; BSR set to: 0
  7655                           
  7656                           	line	270
  7657                           	
  7658  000EEE                     l18449:
  7659                           ;messages.c: 269: }
  7660                           ;messages.c: 270: if (check_msg(&ToMainLow_MQ)) {
  7661  000EEE  0101               	movlb	1	; () banked
  7662  000EF0  0E01               	movlw	high(_ToMainLow_MQ)
  7663  000EF2  0100               	movlb	0	; () banked
  7664  000EF4  0100               	movlb	0	; () banked
  7665  000EF6  6FB6               	movwf	((?_check_msg+1))&0ffh
  7666  000EF8  0101               	movlb	1	; () banked
  7667  000EFA  0E6C               	movlw	low(_ToMainLow_MQ)
  7668  000EFC  0100               	movlb	0	; () banked
  7669  000EFE  6FB5               	movwf	((?_check_msg))&0ffh
  7670  000F00  0100               	movlb	0	; () banked
  7671  000F02  ECFE  F00C         	call	_check_msg	;wreg free
  7672  000F06  0900               	iorlw	0
  7673  000F08  B4D8               	btfsc	status,2
  7674  000F0A  D001               	goto	u1541
  7675  000F0C  D001               	goto	u1540
  7676  000F0E                     u1541:
  7677  000F0E  D009               	goto	l18457
  7678  000F10                     u1540:
  7679                           	line	271
  7680                           	
  7681  000F10                     l18451:
  7682                           ;messages.c: 271: MQ_Main_Willing_to_block = 0;
  7683  000F10  0100               	movlb	0	; () banked
  7684  000F12  6FBB               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7685  000F14  0E00               	movlw	low(0)
  7686  000F16  6E47               	movwf	((c:_MQ_Main_Willing_to_block)),c
  7687  000F18  0100               	movlb	0	; () banked
  7688  000F1A  51BB               	movf	(??_block_on_To_msgqueues+0+0)&0ffh,w
  7689                           	line	272
  7690                           	
  7691  000F1C                     l18453:; BSR set to: 0
  7692                           
  7693                           ;messages.c: 272: LATBbits.LATB3 = 0;
  7694  000F1C  968A               	bcf	((c:3978)),c,3	;volatile
  7695  000F1E  D020               	goto	l5535
  7696                           	line	273
  7697                           	
  7698  000F20                     l18455:; BSR set to: 0
  7699                           
  7700                           ;messages.c: 273: return;
  7701  000F20  D01F               	goto	l5535
  7702                           	line	274
  7703                           	
  7704  000F22                     l5538:; BSR set to: 0
  7705                           
  7706                           	line	275
  7707                           	
  7708  000F22                     l18457:
  7709                           ;messages.c: 274: }
  7710                           ;messages.c: 275: Delay1KTCYx(10);
  7711  000F22  0100               	movlb	0	; () banked
  7712  000F24  6FBB               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7713  000F26  0E0A               	movlw	low(0Ah)
  7714  000F28  0100               	movlb	0	; () banked
  7715  000F2A  0100               	movlb	0	; () banked
  7716  000F2C  6FB5               	movwf	((?_Delay1KTCYx))&0ffh
  7717  000F2E  0100               	movlb	0	; () banked
  7718  000F30  51BB               	movf	(??_block_on_To_msgqueues+0+0)&0ffh,w
  7719  000F32  0100               	movlb	0	; () banked
  7720  000F34  EC25  F00E         	call	_Delay1KTCYx	;wreg free
  7721                           	line	276
  7722                           	
  7723  000F38                     l18459:
  7724                           ;messages.c: 276: LATBbits.LATB3 = !LATBbits.LATB3;
  7725                           	
  7726  000F38  A68A               	btfss	((c:3978)),c,3	;volatile
  7727  000F3A  D001               	goto	u1551
  7728  000F3C  D002               	goto	u1550
  7729  000F3E                     u1551:
  7730  000F3E  0E01               	movlw	1
  7731  000F40  D001               	goto	u1556
  7732  000F42                     u1550:
  7733  000F42  0E00               	movlw	0
  7734  000F44                     u1556:
  7735  000F44  0100               	movlb	0	; () banked
  7736  000F46  6FBB               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7737  000F48  0100               	movlb	0	; () banked
  7738  000F4A  47BB               	rlncf	((??_block_on_To_msgqueues+0+0))&0ffh
  7739  000F4C  47BB               	rlncf	((??_block_on_To_msgqueues+0+0))&0ffh
  7740  000F4E  47BB               	rlncf	((??_block_on_To_msgqueues+0+0))&0ffh
  7741  000F50  508A               	movf	((c:3978)),c,w	;volatile
  7742  000F52  0100               	movlb	0	; () banked
  7743  000F54  19BB               	xorwf	((??_block_on_To_msgqueues+0+0))&0ffh,w
  7744  000F56  0BF7               	andlw	not (((1<<1)-1)<<3)
  7745  000F58  19BB               	xorwf	((??_block_on_To_msgqueues+0+0))&0ffh,w
  7746  000F5A  6E8A               	movwf	((c:3978)),c	;volatile
  7747  000F5C  D7AE               	goto	l18441
  7748                           	line	277
  7749                           	
  7750  000F5E                     l5539:; BSR set to: 0
  7751                           
  7752                           	line	264
  7753  000F5E  D7AD               	goto	l18441
  7754                           	
  7755  000F60                     l5540:; BSR set to: 0
  7756                           
  7757                           	line	278
  7758                           	
  7759  000F60                     l5535:; BSR set to: 0
  7760                           
  7761  000F60  0012               	return
  7762                           	opt stack 0
  7763                           GLOBAL	__end_of_block_on_To_msgqueues
  7764  000F62                     	__end_of_block_on_To_msgqueues:
  7765                           	signat	_block_on_To_msgqueues,88
  7766                           	global	_in_main
  7767                           
  7768 ;; *************** function _in_main *****************
  7769 ;; Defined at:
  7770 ;;		line 40 in file "../src/interrupts.c"
  7771 ;; Parameters:    Size  Location     Type
  7772 ;;		None
  7773 ;; Auto vars:     Size  Location     Type
  7774 ;;		None
  7775 ;; Return value:  Size  Location     Type
  7776 ;;                  2   57[BANK0 ] int 
  7777 ;; Registers used:
  7778 ;;		wreg, status,2, status,0, cstack
  7779 ;; Tracked objects:
  7780 ;;		On entry : 0/0
  7781 ;;		On exit  : 0/0
  7782 ;;		Unchanged: 0/0
  7783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7784 ;;      Params:         0       2       0       0       0
  7785 ;;      Locals:         0       0       0       0       0
  7786 ;;      Temps:          0       0       0       0       0
  7787 ;;      Totals:         0       2       0       0       0
  7788 ;;Total ram usage:        2 bytes
  7789 ;; Hardware stack levels used:    1
  7790 ;; Hardware stack levels required when called:   12
  7791 ;; This function calls:
  7792 ;;		_in_low_int
  7793 ;;		_in_high_int
  7794 ;; This function is called by:
  7795 ;;		_block_on_To_msgqueues
  7796 ;; This function uses a non-reentrant model
  7797 ;;
  7798                           psect	text10,class=CODE,space=0,reloc=2
  7799                           global __ptext10
  7800  0016DE                     __ptext10:
  7801                           psect	text10
  7802                           	file	"../src/interrupts.c"
  7803                           	line	40
  7804                           	global	__size_of_in_main
  7805  0000                     	__size_of_in_main	equ	__end_of_in_main-_in_main
  7806                           	
  7807  0016DE                     _in_main:; BSR set to: 0
  7808                           
  7809                           	opt	stack 17
  7810                           	line	41
  7811                           	
  7812  0016DE                     l18081:
  7813                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  7814  0016DE  0100               	movlb	0	; () banked
  7815  0016E0  EC40  F00B         	call	_in_low_int	;wreg free
  7816  0016E4  0100               	movlb	0	; () banked
  7817  0016E6  0100               	movlb	0	; () banked
  7818  0016E8  51B8               	movf	(1+?_in_low_int)&0ffh,w
  7819  0016EA  0100               	movlb	0	; () banked
  7820  0016EC  11B7               	iorwf (0+?_in_low_int)&0ffh,w
  7821                           
  7822  0016EE  A4D8               	btfss	status,2
  7823  0016F0  D001               	goto	u1001
  7824  0016F2  D001               	goto	u1000
  7825  0016F4                     u1001:
  7826  0016F4  D016               	goto	l18091
  7827  0016F6                     u1000:
  7828                           	
  7829  0016F6                     l18083:; BSR set to: 0
  7830                           
  7831  0016F6  0100               	movlb	0	; () banked
  7832  0016F8  EC1B  F00E         	call	_in_high_int	;wreg free
  7833  0016FC  0100               	movlb	0	; () banked
  7834  0016FE  0100               	movlb	0	; () banked
  7835  001700  51B6               	movf	(1+?_in_high_int)&0ffh,w
  7836  001702  0100               	movlb	0	; () banked
  7837  001704  11B5               	iorwf (0+?_in_high_int)&0ffh,w
  7838                           
  7839  001706  A4D8               	btfss	status,2
  7840  001708  D001               	goto	u1011
  7841  00170A  D001               	goto	u1010
  7842  00170C                     u1011:
  7843  00170C  D00A               	goto	l18091
  7844  00170E                     u1010:
  7845                           	line	42
  7846                           	
  7847  00170E                     l18085:; BSR set to: 0
  7848                           
  7849                           ;interrupts.c: 42: return (1);
  7850  00170E  0E00               	movlw	high(01h)
  7851  001710  0100               	movlb	0	; () banked
  7852  001712  0100               	movlb	0	; () banked
  7853  001714  6FBA               	movwf	((?_in_main+1))&0ffh
  7854  001716  0E01               	movlw	low(01h)
  7855  001718  0100               	movlb	0	; () banked
  7856  00171A  6FB9               	movwf	((?_in_main))&0ffh
  7857  00171C  D00B               	goto	l1816
  7858                           	
  7859  00171E                     l18087:; BSR set to: 0
  7860                           
  7861  00171E  D00A               	goto	l1816
  7862                           	line	43
  7863                           	
  7864  001720                     l18089:; BSR set to: 0
  7865                           
  7866                           ;interrupts.c: 43: } else {
  7867  001720  D009               	goto	l1816
  7868                           	
  7869  001722                     l1815:; BSR set to: 0
  7870                           
  7871                           	line	44
  7872                           	
  7873  001722                     l18091:; BSR set to: 0
  7874                           
  7875                           ;interrupts.c: 44: return (0);
  7876  001722  0E00               	movlw	high(0)
  7877  001724  0100               	movlb	0	; () banked
  7878  001726  0100               	movlb	0	; () banked
  7879  001728  6FBA               	movwf	((?_in_main+1))&0ffh
  7880  00172A  0E00               	movlw	low(0)
  7881  00172C  0100               	movlb	0	; () banked
  7882  00172E  6FB9               	movwf	((?_in_main))&0ffh
  7883  001730  D001               	goto	l1816
  7884                           	
  7885  001732                     l18093:; BSR set to: 0
  7886                           
  7887  001732  D000               	goto	l1816
  7888                           	line	45
  7889                           	
  7890  001734                     l1817:; BSR set to: 0
  7891                           
  7892                           	line	46
  7893                           	
  7894  001734                     l1816:; BSR set to: 0
  7895                           
  7896  001734  0012               	return
  7897                           	opt stack 0
  7898                           GLOBAL	__end_of_in_main
  7899  001736                     	__end_of_in_main:
  7900                           	signat	_in_main,90
  7901                           	global	_in_low_int
  7902                           
  7903 ;; *************** function _in_low_int *****************
  7904 ;; Defined at:
  7905 ;;		line 30 in file "../src/interrupts.c"
  7906 ;; Parameters:    Size  Location     Type
  7907 ;;		None
  7908 ;; Auto vars:     Size  Location     Type
  7909 ;;		None
  7910 ;; Return value:  Size  Location     Type
  7911 ;;                  2   55[BANK0 ] int 
  7912 ;; Registers used:
  7913 ;;		wreg, status,2, status,0, cstack
  7914 ;; Tracked objects:
  7915 ;;		On entry : 0/0
  7916 ;;		On exit  : 0/0
  7917 ;;		Unchanged: 0/0
  7918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7919 ;;      Params:         0       2       0       0       0
  7920 ;;      Locals:         0       0       0       0       0
  7921 ;;      Temps:          0       0       0       0       0
  7922 ;;      Totals:         0       2       0       0       0
  7923 ;;Total ram usage:        2 bytes
  7924 ;; Hardware stack levels used:    1
  7925 ;; Hardware stack levels required when called:   11
  7926 ;; This function calls:
  7927 ;;		_in_high_int
  7928 ;; This function is called by:
  7929 ;;		_in_main
  7930 ;; This function uses a non-reentrant model
  7931 ;;
  7932                           psect	text11,class=CODE,space=0,reloc=2
  7933                           global __ptext11
  7934  001680                     __ptext11:
  7935                           psect	text11
  7936                           	file	"../src/interrupts.c"
  7937                           	line	30
  7938                           	global	__size_of_in_low_int
  7939  0000                     	__size_of_in_low_int	equ	__end_of_in_low_int-_in_low_int
  7940                           	
  7941  001680                     _in_low_int:; BSR set to: 0
  7942                           
  7943                           	opt	stack 17
  7944                           	line	31
  7945                           	
  7946  001680                     l18061:
  7947                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  7948                           	
  7949  001680  ACF2               	btfss	((c:4082)),c,6	;volatile
  7950  001682  D001               	goto	u981
  7951  001684  D001               	goto	u980
  7952  001686                     u981:
  7953  001686  D00A               	goto	l18069
  7954  001688                     u980:
  7955                           	line	32
  7956                           	
  7957  001688                     l18063:
  7958                           ;interrupts.c: 32: return (0);
  7959  001688  0E00               	movlw	high(0)
  7960  00168A  0100               	movlb	0	; () banked
  7961  00168C  0100               	movlb	0	; () banked
  7962  00168E  6FB8               	movwf	((?_in_low_int+1))&0ffh
  7963  001690  0E00               	movlw	low(0)
  7964  001692  0100               	movlb	0	; () banked
  7965  001694  6FB7               	movwf	((?_in_low_int))&0ffh
  7966  001696  D022               	goto	l1809
  7967                           	
  7968  001698                     l18065:; BSR set to: 0
  7969                           
  7970  001698  D021               	goto	l1809
  7971                           	line	33
  7972                           	
  7973  00169A                     l18067:; BSR set to: 0
  7974                           
  7975                           ;interrupts.c: 33: } else if (in_high_int()) {
  7976  00169A  D020               	goto	l1809
  7977                           	
  7978  00169C                     l1808:; BSR set to: 0
  7979                           
  7980                           	
  7981  00169C                     l18069:
  7982  00169C  0100               	movlb	0	; () banked
  7983  00169E  EC1B  F00E         	call	_in_high_int	;wreg free
  7984  0016A2  0100               	movlb	0	; () banked
  7985  0016A4  0100               	movlb	0	; () banked
  7986  0016A6  51B6               	movf	(1+?_in_high_int)&0ffh,w
  7987  0016A8  0100               	movlb	0	; () banked
  7988  0016AA  11B5               	iorwf (0+?_in_high_int)&0ffh,w
  7989                           
  7990  0016AC  B4D8               	btfsc	status,2
  7991  0016AE  D001               	goto	u991
  7992  0016B0  D001               	goto	u990
  7993  0016B2                     u991:
  7994  0016B2  D00A               	goto	l18077
  7995  0016B4                     u990:
  7996                           	line	34
  7997                           	
  7998  0016B4                     l18071:; BSR set to: 0
  7999                           
  8000                           ;interrupts.c: 34: return (0);
  8001  0016B4  0E00               	movlw	high(0)
  8002  0016B6  0100               	movlb	0	; () banked
  8003  0016B8  0100               	movlb	0	; () banked
  8004  0016BA  6FB8               	movwf	((?_in_low_int+1))&0ffh
  8005  0016BC  0E00               	movlw	low(0)
  8006  0016BE  0100               	movlb	0	; () banked
  8007  0016C0  6FB7               	movwf	((?_in_low_int))&0ffh
  8008  0016C2  D00C               	goto	l1809
  8009                           	
  8010  0016C4                     l18073:; BSR set to: 0
  8011                           
  8012  0016C4  D00B               	goto	l1809
  8013                           	line	35
  8014                           	
  8015  0016C6                     l18075:; BSR set to: 0
  8016                           
  8017                           ;interrupts.c: 35: } else {
  8018  0016C6  D00A               	goto	l1809
  8019                           	
  8020  0016C8                     l1811:; BSR set to: 0
  8021                           
  8022                           	line	36
  8023                           	
  8024  0016C8                     l18077:; BSR set to: 0
  8025                           
  8026                           ;interrupts.c: 36: return (1);
  8027  0016C8  0E00               	movlw	high(01h)
  8028  0016CA  0100               	movlb	0	; () banked
  8029  0016CC  0100               	movlb	0	; () banked
  8030  0016CE  6FB8               	movwf	((?_in_low_int+1))&0ffh
  8031  0016D0  0E01               	movlw	low(01h)
  8032  0016D2  0100               	movlb	0	; () banked
  8033  0016D4  6FB7               	movwf	((?_in_low_int))&0ffh
  8034  0016D6  D002               	goto	l1809
  8035                           	
  8036  0016D8                     l18079:; BSR set to: 0
  8037                           
  8038  0016D8  D001               	goto	l1809
  8039                           	line	37
  8040                           	
  8041  0016DA                     l1812:; BSR set to: 0
  8042                           
  8043  0016DA  D000               	goto	l1809
  8044                           	
  8045  0016DC                     l1810:; BSR set to: 0
  8046                           
  8047                           	line	38
  8048                           	
  8049  0016DC                     l1809:; BSR set to: 0
  8050                           
  8051  0016DC  0012               	return
  8052                           	opt stack 0
  8053                           GLOBAL	__end_of_in_low_int
  8054  0016DE                     	__end_of_in_low_int:
  8055                           	signat	_in_low_int,90
  8056                           	global	_in_high_int
  8057                           
  8058 ;; *************** function _in_high_int *****************
  8059 ;; Defined at:
  8060 ;;		line 22 in file "../src/interrupts.c"
  8061 ;; Parameters:    Size  Location     Type
  8062 ;;		None
  8063 ;; Auto vars:     Size  Location     Type
  8064 ;;		None
  8065 ;; Return value:  Size  Location     Type
  8066 ;;                  2   53[BANK0 ] int 
  8067 ;; Registers used:
  8068 ;;		wreg, status,2
  8069 ;; Tracked objects:
  8070 ;;		On entry : 0/0
  8071 ;;		On exit  : 0/0
  8072 ;;		Unchanged: 0/0
  8073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8074 ;;      Params:         0       2       0       0       0
  8075 ;;      Locals:         0       0       0       0       0
  8076 ;;      Temps:          0       0       0       0       0
  8077 ;;      Totals:         0       2       0       0       0
  8078 ;;Total ram usage:        2 bytes
  8079 ;; Hardware stack levels used:    1
  8080 ;; Hardware stack levels required when called:   10
  8081 ;; This function calls:
  8082 ;;		Nothing
  8083 ;; This function is called by:
  8084 ;;		_in_low_int
  8085 ;;		_in_main
  8086 ;; This function uses a non-reentrant model
  8087 ;;
  8088                           psect	text12,class=CODE,space=0,reloc=2
  8089                           global __ptext12
  8090  001C36                     __ptext12:
  8091                           psect	text12
  8092                           	file	"../src/interrupts.c"
  8093                           	line	22
  8094                           	global	__size_of_in_high_int
  8095  0000                     	__size_of_in_high_int	equ	__end_of_in_high_int-_in_high_int
  8096                           	
  8097  001C36                     _in_high_int:; BSR set to: 0
  8098                           
  8099                           	opt	stack 18
  8100                           	line	23
  8101                           	
  8102  001C36                     l18057:
  8103                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  8104                           	
  8105  001C36  0E00               	movlw	0
  8106  001C38  AEF2               	btfss	((c:4082)),c,7	;volatile
  8107  001C3A  0E01               	movlw	1
  8108  001C3C  0100               	movlb	0	; () banked
  8109  001C3E  0100               	movlb	0	; () banked
  8110  001C40  6FB5               	movwf	((?_in_high_int))&0ffh
  8111  001C42  0100               	movlb	0	; () banked
  8112  001C44  6BB6               	clrf	((?_in_high_int+1))&0ffh
  8113  001C46  D000               	goto	l1802
  8114                           	
  8115  001C48                     l18059:; BSR set to: 0
  8116                           
  8117                           	line	24
  8118                           	
  8119  001C48                     l1802:; BSR set to: 0
  8120                           
  8121  001C48  0012               	return
  8122                           	opt stack 0
  8123                           GLOBAL	__end_of_in_high_int
  8124  001C4A                     	__end_of_in_high_int:
  8125                           	signat	_in_high_int,90
  8126                           	global	_ToMainHigh_recvmsg
  8127                           
  8128 ;; *************** function _ToMainHigh_recvmsg *****************
  8129 ;; Defined at:
  8130 ;;		line 135 in file "../src/messages.c"
  8131 ;; Parameters:    Size  Location     Type
  8132 ;;  maxlength       1    5[BANK1 ] unsigned char 
  8133 ;;  msgtype         2    6[BANK1 ] PTR unsigned char 
  8134 ;;		 -> main@msgtype(1), 
  8135 ;;  data            2    8[BANK1 ] PTR void 
  8136 ;;		 -> main@msgbuffer(11), 
  8137 ;; Auto vars:     Size  Location     Type
  8138 ;;		None
  8139 ;; Return value:  Size  Location     Type
  8140 ;;                  1    wreg      char 
  8141 ;; Registers used:
  8142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8143 ;; Tracked objects:
  8144 ;;		On entry : 0/0
  8145 ;;		On exit  : 0/0
  8146 ;;		Unchanged: 0/0
  8147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8148 ;;      Params:         0       0       5       0       0
  8149 ;;      Locals:         0       0       0       0       0
  8150 ;;      Temps:          0       0       0       0       0
  8151 ;;      Totals:         0       0       5       0       0
  8152 ;;Total ram usage:        5 bytes
  8153 ;; Hardware stack levels used:    1
  8154 ;; Hardware stack levels required when called:   12
  8155 ;; This function calls:
  8156 ;;		_recv_msg
  8157 ;; This function is called by:
  8158 ;;		_main
  8159 ;; This function uses a non-reentrant model
  8160 ;;
  8161                           psect	text13,class=CODE,space=0,reloc=2
  8162                           global __ptext13
  8163  001A6C                     __ptext13:
  8164                           psect	text13
  8165                           	file	"../src/messages.c"
  8166                           	line	135
  8167                           	global	__size_of_ToMainHigh_recvmsg
  8168  0000                     	__size_of_ToMainHigh_recvmsg	equ	__end_of_ToMainHigh_recvmsg-_ToMainHigh_recvmsg
  8169                           	
  8170  001A6C                     _ToMainHigh_recvmsg:; BSR set to: 0
  8171                           
  8172                           	opt	stack 18
  8173                           	line	141
  8174                           	
  8175  001A6C                     l19083:
  8176                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  8177  001A6C  0101               	movlb	1	; () banked
  8178  001A6E  0E01               	movlw	high(_ToMainHigh_MQ)
  8179  001A70  0100               	movlb	0	; () banked
  8180  001A72  0100               	movlb	0	; () banked
  8181  001A74  6FC0               	movwf	((?_recv_msg+1))&0ffh
  8182  001A76  0101               	movlb	1	; () banked
  8183  001A78  0E36               	movlw	low(_ToMainHigh_MQ)
  8184  001A7A  0100               	movlb	0	; () banked
  8185  001A7C  6FBF               	movwf	((?_recv_msg))&0ffh
  8186  001A7E  C1A7  F0C1         	movff	(ToMainHigh_recvmsg@maxlength),0+(?_recv_msg+02h)
  8187  001A82  C1A8  F0C2         	movff	(ToMainHigh_recvmsg@msgtype),0+(?_recv_msg+03h)
  8188  001A86  C1A9  F0C3         	movff	(ToMainHigh_recvmsg@msgtype+1),1+(?_recv_msg+03h)
  8189  001A8A  C1AA  F0C4         	movff	(ToMainHigh_recvmsg@data),0+(?_recv_msg+05h)
  8190  001A8E  C1AB  F0C5         	movff	(ToMainHigh_recvmsg@data+1),1+(?_recv_msg+05h)
  8191  001A92  0100               	movlb	0	; () banked
  8192  001A94  EC27  F005         	call	_recv_msg	;wreg free
  8193  001A98  D000               	goto	l5496
  8194                           	
  8195  001A9A                     l19085:
  8196                           	line	142
  8197                           	
  8198  001A9A                     l5496:
  8199  001A9A  0012               	return
  8200                           	opt stack 0
  8201                           GLOBAL	__end_of_ToMainHigh_recvmsg
  8202  001A9C                     	__end_of_ToMainHigh_recvmsg:
  8203                           	signat	_ToMainHigh_recvmsg,12409
  8204                           	global	_timer0_lthread
  8205                           
  8206 ;; *************** function _timer0_lthread *****************
  8207 ;; Defined at:
  8208 ;;		line 9 in file "../src/timer0_thread.c"
  8209 ;; Parameters:    Size  Location     Type
  8210 ;;  tptr            2   53[BANK0 ] PTR struct __timer0_thre
  8211 ;;		 -> main@t0thread_data(2), 
  8212 ;;  msgtype         2   55[BANK0 ] int 
  8213 ;;  length          2   57[BANK0 ] int 
  8214 ;;  msgbuffer       2   59[BANK0 ] PTR unsigned char 
  8215 ;;		 -> main@msgbuffer(11), 
  8216 ;; Auto vars:     Size  Location     Type
  8217 ;;  msgval          2   61[BANK0 ] PTR unsigned int 
  8218 ;;		 -> main@msgbuffer(11), 
  8219 ;; Return value:  Size  Location     Type
  8220 ;;                  2   53[BANK0 ] int 
  8221 ;; Registers used:
  8222 ;;		None
  8223 ;; Tracked objects:
  8224 ;;		On entry : 0/0
  8225 ;;		On exit  : 0/0
  8226 ;;		Unchanged: 0/0
  8227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8228 ;;      Params:         0       8       0       0       0
  8229 ;;      Locals:         0       2       0       0       0
  8230 ;;      Temps:          0       0       0       0       0
  8231 ;;      Totals:         0      10       0       0       0
  8232 ;;Total ram usage:       10 bytes
  8233 ;; Hardware stack levels used:    1
  8234 ;; Hardware stack levels required when called:   10
  8235 ;; This function calls:
  8236 ;;		Nothing
  8237 ;; This function is called by:
  8238 ;;		_main
  8239 ;; This function uses a non-reentrant model
  8240 ;;
  8241                           psect	text14,class=CODE,space=0,reloc=2
  8242                           global __ptext14
  8243  001CAE                     __ptext14:
  8244                           psect	text14
  8245                           	file	"../src/timer0_thread.c"
  8246                           	line	9
  8247                           	global	__size_of_timer0_lthread
  8248  0000                     	__size_of_timer0_lthread	equ	__end_of_timer0_lthread-_timer0_lthread
  8249                           	
  8250  001CAE                     _timer0_lthread:
  8251                           	opt	stack 20
  8252                           	line	12
  8253                           	
  8254  001CAE                     l18465:
  8255                           ;timer0_thread.c: 10: unsigned int *msgval;
  8256                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  8257  001CAE  C0BB  F0BD         	movff	(timer0_lthread@msgbuffer),(timer0_lthread@msgval)
  8258  001CB2  C0BC  F0BE         	movff	(timer0_lthread@msgbuffer+1),(timer0_lthread@msgval+1)
  8259                           	line	16
  8260                           	
  8261  001CB6                     l10996:
  8262  001CB6  0012               	return
  8263                           	opt stack 0
  8264                           GLOBAL	__end_of_timer0_lthread
  8265  001CB8                     	__end_of_timer0_lthread:
  8266                           	signat	_timer0_lthread,16506
  8267                           	global	_ToMainLow_recvmsg
  8268                           
  8269 ;; *************** function _ToMainLow_recvmsg *****************
  8270 ;; Defined at:
  8271 ;;		line 112 in file "../src/messages.c"
  8272 ;; Parameters:    Size  Location     Type
  8273 ;;  maxlength       1    5[BANK1 ] unsigned char 
  8274 ;;  msgtype         2    6[BANK1 ] PTR unsigned char 
  8275 ;;		 -> main@msgtype(1), 
  8276 ;;  data            2    8[BANK1 ] PTR void 
  8277 ;;		 -> main@msgbuffer(11), 
  8278 ;; Auto vars:     Size  Location     Type
  8279 ;;		None
  8280 ;; Return value:  Size  Location     Type
  8281 ;;                  1    wreg      char 
  8282 ;; Registers used:
  8283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8284 ;; Tracked objects:
  8285 ;;		On entry : 0/0
  8286 ;;		On exit  : 0/0
  8287 ;;		Unchanged: 0/0
  8288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8289 ;;      Params:         0       0       5       0       0
  8290 ;;      Locals:         0       0       0       0       0
  8291 ;;      Temps:          0       0       0       0       0
  8292 ;;      Totals:         0       0       5       0       0
  8293 ;;Total ram usage:        5 bytes
  8294 ;; Hardware stack levels used:    1
  8295 ;; Hardware stack levels required when called:   12
  8296 ;; This function calls:
  8297 ;;		_recv_msg
  8298 ;; This function is called by:
  8299 ;;		_main
  8300 ;; This function uses a non-reentrant model
  8301 ;;
  8302                           psect	text15,class=CODE,space=0,reloc=2
  8303                           global __ptext15
  8304  001A9C                     __ptext15:
  8305                           psect	text15
  8306                           	file	"../src/messages.c"
  8307                           	line	112
  8308                           	global	__size_of_ToMainLow_recvmsg
  8309  0000                     	__size_of_ToMainLow_recvmsg	equ	__end_of_ToMainLow_recvmsg-_ToMainLow_recvmsg
  8310                           	
  8311  001A9C                     _ToMainLow_recvmsg:
  8312                           	opt	stack 18
  8313                           	line	118
  8314                           	
  8315  001A9C                     l19087:
  8316                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  8317  001A9C  0101               	movlb	1	; () banked
  8318  001A9E  0E01               	movlw	high(_ToMainLow_MQ)
  8319  001AA0  0100               	movlb	0	; () banked
  8320  001AA2  0100               	movlb	0	; () banked
  8321  001AA4  6FC0               	movwf	((?_recv_msg+1))&0ffh
  8322  001AA6  0101               	movlb	1	; () banked
  8323  001AA8  0E6C               	movlw	low(_ToMainLow_MQ)
  8324  001AAA  0100               	movlb	0	; () banked
  8325  001AAC  6FBF               	movwf	((?_recv_msg))&0ffh
  8326  001AAE  C1A7  F0C1         	movff	(ToMainLow_recvmsg@maxlength),0+(?_recv_msg+02h)
  8327  001AB2  C1A8  F0C2         	movff	(ToMainLow_recvmsg@msgtype),0+(?_recv_msg+03h)
  8328  001AB6  C1A9  F0C3         	movff	(ToMainLow_recvmsg@msgtype+1),1+(?_recv_msg+03h)
  8329  001ABA  C1AA  F0C4         	movff	(ToMainLow_recvmsg@data),0+(?_recv_msg+05h)
  8330  001ABE  C1AB  F0C5         	movff	(ToMainLow_recvmsg@data+1),1+(?_recv_msg+05h)
  8331  001AC2  0100               	movlb	0	; () banked
  8332  001AC4  EC27  F005         	call	_recv_msg	;wreg free
  8333  001AC8  D000               	goto	l5488
  8334                           	
  8335  001ACA                     l19089:
  8336                           	line	119
  8337                           	
  8338  001ACA                     l5488:
  8339  001ACA  0012               	return
  8340                           	opt stack 0
  8341                           GLOBAL	__end_of_ToMainLow_recvmsg
  8342  001ACC                     	__end_of_ToMainLow_recvmsg:
  8343                           	signat	_ToMainLow_recvmsg,12409
  8344                           	global	_timer1_lthread
  8345                           
  8346 ;; *************** function _timer1_lthread *****************
  8347 ;; Defined at:
  8348 ;;		line 24 in file "../src/timer1_thread.c"
  8349 ;; Parameters:    Size  Location     Type
  8350 ;;  tptr            2   53[BANK0 ] PTR struct __timer1_thre
  8351 ;;		 -> main@t1thread_data(2), 
  8352 ;;  msgtype         2   55[BANK0 ] int 
  8353 ;;  length          2   57[BANK0 ] int 
  8354 ;;  msgbuffer       2   59[BANK0 ] PTR unsigned char 
  8355 ;;		 -> main@msgbuffer(11), 
  8356 ;; Auto vars:     Size  Location     Type
  8357 ;;		None
  8358 ;; Return value:  Size  Location     Type
  8359 ;;                  2   53[BANK0 ] int 
  8360 ;; Registers used:
  8361 ;;		wreg, fsr2l, fsr2h, cstack
  8362 ;; Tracked objects:
  8363 ;;		On entry : 0/0
  8364 ;;		On exit  : 0/0
  8365 ;;		Unchanged: 0/0
  8366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8367 ;;      Params:         0       8       0       0       0
  8368 ;;      Locals:         0       0       0       0       0
  8369 ;;      Temps:          0       2       0       0       0
  8370 ;;      Totals:         0      10       0       0       0
  8371 ;;Total ram usage:       10 bytes
  8372 ;; Hardware stack levels used:    1
  8373 ;; Hardware stack levels required when called:   11
  8374 ;; This function calls:
  8375 ;;		_ConvertADC
  8376 ;; This function is called by:
  8377 ;;		_main
  8378 ;; This function uses a non-reentrant model
  8379 ;;
  8380                           psect	text16,class=CODE,space=0,reloc=2
  8381                           global __ptext16
  8382  001B48                     __ptext16:
  8383                           psect	text16
  8384                           	file	"../src/timer1_thread.c"
  8385                           	line	24
  8386                           	global	__size_of_timer1_lthread
  8387  0000                     	__size_of_timer1_lthread	equ	__end_of_timer1_lthread-_timer1_lthread
  8388                           	
  8389  001B48                     _timer1_lthread:
  8390                           	opt	stack 19
  8391                           	line	26
  8392                           	
  8393  001B48                     l18471:
  8394                           ;timer1_thread.c: 26: tptr->timerval = msgbuffer[0];
  8395  001B48  C0BB  FFD9         	movff	(timer1_lthread@msgbuffer),fsr2l
  8396  001B4C  C0BC  FFDA         	movff	(timer1_lthread@msgbuffer+1),fsr2h
  8397  001B50  50DF               	movf	indf2,w
  8398  001B52  0100               	movlb	0	; () banked
  8399  001B54  6FBD               	movwf	(??_timer1_lthread+0+0)&0ffh
  8400  001B56  6BBE               	clrf	(??_timer1_lthread+0+0+1)&0ffh
  8401                           
  8402  001B58  C0B5  FFD9         	movff	(timer1_lthread@tptr),fsr2l
  8403  001B5C  C0B6  FFDA         	movff	(timer1_lthread@tptr+1),fsr2h
  8404  001B60  C0BD  FFDE         	movff	??_timer1_lthread+0+0,postinc2
  8405  001B64  C0BE  FFDD         	movff	??_timer1_lthread+0+1,postdec2
  8406                           
  8407                           	line	28
  8408                           	
  8409  001B68                     l18473:; BSR set to: 0
  8410                           
  8411                           ;timer1_thread.c: 28: ConvertADC();
  8412  001B68  EC63  F00E         	call	_ConvertADC	;wreg free
  8413                           	line	29
  8414                           	
  8415  001B6C                     l12792:
  8416  001B6C  0012               	return
  8417                           	opt stack 0
  8418                           GLOBAL	__end_of_timer1_lthread
  8419  001B6E                     	__end_of_timer1_lthread:
  8420                           	signat	_timer1_lthread,16506
  8421                           	global	_FromMainLow_sendmsg
  8422                           
  8423 ;; *************** function _FromMainLow_sendmsg *****************
  8424 ;; Defined at:
  8425 ;;		line 150 in file "../src/messages.c"
  8426 ;; Parameters:    Size  Location     Type
  8427 ;;  length          1    5[BANK1 ] unsigned char 
  8428 ;;  msgtype         1    6[BANK1 ] unsigned char 
  8429 ;;  data            2    7[BANK1 ] PTR void 
  8430 ;;		 -> main@msgbuffer(11), 
  8431 ;; Auto vars:     Size  Location     Type
  8432 ;;		None
  8433 ;; Return value:  Size  Location     Type
  8434 ;;                  1    wreg      char 
  8435 ;; Registers used:
  8436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8437 ;; Tracked objects:
  8438 ;;		On entry : 0/0
  8439 ;;		On exit  : 0/0
  8440 ;;		Unchanged: 0/0
  8441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8442 ;;      Params:         0       0       4       0       0
  8443 ;;      Locals:         0       0       0       0       0
  8444 ;;      Temps:          0       0       0       0       0
  8445 ;;      Totals:         0       0       4       0       0
  8446 ;;Total ram usage:        4 bytes
  8447 ;; Hardware stack levels used:    1
  8448 ;; Hardware stack levels required when called:   12
  8449 ;; This function calls:
  8450 ;;		_send_msg
  8451 ;; This function is called by:
  8452 ;;		_main
  8453 ;; This function uses a non-reentrant model
  8454 ;;
  8455                           psect	text17,class=CODE,space=0,reloc=2
  8456                           global __ptext17
  8457  001ACC                     __ptext17:
  8458                           psect	text17
  8459                           	file	"../src/messages.c"
  8460                           	line	150
  8461                           	global	__size_of_FromMainLow_sendmsg
  8462  0000                     	__size_of_FromMainLow_sendmsg	equ	__end_of_FromMainLow_sendmsg-_FromMainLow_sendmsg
  8463                           	
  8464  001ACC                     _FromMainLow_sendmsg:
  8465                           	opt	stack 18
  8466                           	line	156
  8467                           	
  8468  001ACC                     l19091:
  8469                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  8470                           ;	Return value of _FromMainLow_sendmsg is never used
  8471  001ACC  0101               	movlb	1	; () banked
  8472  001ACE  0E01               	movlw	high(_FromMainLow_MQ)
  8473  001AD0  0100               	movlb	0	; () banked
  8474  001AD2  0100               	movlb	0	; () banked
  8475  001AD4  6FC0               	movwf	((?_send_msg+1))&0ffh
  8476  001AD6  0101               	movlb	1	; () banked
  8477  001AD8  0E00               	movlw	low(_FromMainLow_MQ)
  8478  001ADA  0100               	movlb	0	; () banked
  8479  001ADC  6FBF               	movwf	((?_send_msg))&0ffh
  8480  001ADE  C1A7  F0C1         	movff	(FromMainLow_sendmsg@length),0+(?_send_msg+02h)
  8481  001AE2  C1A8  F0C2         	movff	(FromMainLow_sendmsg@msgtype),0+(?_send_msg+03h)
  8482  001AE6  C1A9  F0C3         	movff	(FromMainLow_sendmsg@data),0+(?_send_msg+04h)
  8483  001AEA  C1AA  F0C4         	movff	(FromMainLow_sendmsg@data+1),1+(?_send_msg+04h)
  8484  001AEE  0100               	movlb	0	; () banked
  8485  001AF0  EC57  F006         	call	_send_msg	;wreg free
  8486  001AF4  D000               	goto	l5501
  8487                           	
  8488  001AF6                     l19093:
  8489                           	line	157
  8490                           	
  8491  001AF6                     l5501:
  8492  001AF6  0012               	return
  8493                           	opt stack 0
  8494                           GLOBAL	__end_of_FromMainLow_sendmsg
  8495  001AF8                     	__end_of_FromMainLow_sendmsg:
  8496                           	signat	_FromMainLow_sendmsg,12409
  8497                           	global	_uart_lthread
  8498                           
  8499 ;; *************** function _uart_lthread *****************
  8500 ;; Defined at:
  8501 ;;		line 9 in file "../src/uart_thread.c"
  8502 ;; Parameters:    Size  Location     Type
  8503 ;;  uptr            2   53[BANK0 ] PTR struct __uart_thread
  8504 ;;		 -> main@uthread_data(2), 
  8505 ;;  msgtype         2   55[BANK0 ] int 
  8506 ;;  length          2   57[BANK0 ] int 
  8507 ;;  msgbuffer       2   59[BANK0 ] PTR unsigned char 
  8508 ;;		 -> main@msgbuffer(11), 
  8509 ;; Auto vars:     Size  Location     Type
  8510 ;;		None
  8511 ;; Return value:  Size  Location     Type
  8512 ;;                  2   53[BANK0 ] int 
  8513 ;; Registers used:
  8514 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8515 ;; Tracked objects:
  8516 ;;		On entry : 0/0
  8517 ;;		On exit  : 0/0
  8518 ;;		Unchanged: 0/0
  8519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8520 ;;      Params:         0       8       0       0       0
  8521 ;;      Locals:         0       0       0       0       0
  8522 ;;      Temps:          0       0       0       0       0
  8523 ;;      Totals:         0       8       0       0       0
  8524 ;;Total ram usage:        8 bytes
  8525 ;; Hardware stack levels used:    1
  8526 ;; Hardware stack levels required when called:   10
  8527 ;; This function calls:
  8528 ;;		Nothing
  8529 ;; This function is called by:
  8530 ;;		_main
  8531 ;; This function uses a non-reentrant model
  8532 ;;
  8533                           psect	text18,class=CODE,space=0,reloc=2
  8534                           global __ptext18
  8535  00178C                     __ptext18:
  8536                           psect	text18
  8537                           	file	"../src/uart_thread.c"
  8538                           	line	9
  8539                           	global	__size_of_uart_lthread
  8540  0000                     	__size_of_uart_lthread	equ	__end_of_uart_lthread-_uart_lthread
  8541                           	
  8542  00178C                     _uart_lthread:
  8543                           	opt	stack 20
  8544                           	line	10
  8545                           	
  8546  00178C                     l18479:
  8547                           ;uart_thread.c: 10: if (msgtype == 30) {
  8548  00178C  0100               	movlb	0	; () banked
  8549  00178E  0100               	movlb	0	; () banked
  8550  001790  51B7               	movf	((uart_lthread@msgtype))&0ffh,w
  8551  001792  0A1E               	xorlw	30
  8552  001794  11B8               	iorwf ((uart_lthread@msgtype+1))&0ffh,w
  8553                           
  8554  001796  A4D8               	btfss	status,2
  8555  001798  D001               	goto	u1561
  8556  00179A  D001               	goto	u1560
  8557  00179C                     u1561:
  8558  00179C  D002               	goto	l18483
  8559  00179E                     u1560:
  8560  00179E  D01C               	goto	l14582
  8561                           	line	11
  8562                           	
  8563  0017A0                     l18481:; BSR set to: 0
  8564                           
  8565                           ;uart_thread.c: 11: } else if (msgtype == 31) {
  8566  0017A0  D01B               	goto	l14582
  8567                           	
  8568  0017A2                     l14579:; BSR set to: 0
  8569                           
  8570                           	
  8571  0017A2                     l18483:; BSR set to: 0
  8572                           
  8573  0017A2  0100               	movlb	0	; () banked
  8574  0017A4  0100               	movlb	0	; () banked
  8575  0017A6  51B7               	movf	((uart_lthread@msgtype))&0ffh,w
  8576  0017A8  0A1F               	xorlw	31
  8577  0017AA  11B8               	iorwf ((uart_lthread@msgtype+1))&0ffh,w
  8578                           
  8579  0017AC  A4D8               	btfss	status,2
  8580  0017AE  D001               	goto	u1571
  8581  0017B0  D001               	goto	u1570
  8582  0017B2                     u1571:
  8583  0017B2  D012               	goto	l14582
  8584  0017B4                     u1570:
  8585                           	line	14
  8586                           	
  8587  0017B4                     l18485:; BSR set to: 0
  8588                           
  8589                           ;uart_thread.c: 14: msgbuffer[length] = '\0';
  8590  0017B4  0100               	movlb	0	; () banked
  8591  0017B6  0100               	movlb	0	; () banked
  8592  0017B8  51B9               	movf	((uart_lthread@length))&0ffh,w
  8593  0017BA  0100               	movlb	0	; () banked
  8594  0017BC  0100               	movlb	0	; () banked
  8595  0017BE  25BB               	addwf	((uart_lthread@msgbuffer))&0ffh,w
  8596  0017C0  6ED9               	movwf	c:fsr2l
  8597  0017C2  0100               	movlb	0	; () banked
  8598  0017C4  0100               	movlb	0	; () banked
  8599  0017C6  51BA               	movf	((uart_lthread@length+1))&0ffh,w
  8600  0017C8  0100               	movlb	0	; () banked
  8601  0017CA  0100               	movlb	0	; () banked
  8602  0017CC  21BC               	addwfc	((uart_lthread@msgbuffer+1))&0ffh,w
  8603  0017CE  6EDA               	movwf	1+c:fsr2l
  8604  0017D0  0E00               	movlw	low(0)
  8605  0017D2  6EDF               	movwf	indf2
  8606  0017D4  D001               	goto	l14582
  8607                           	line	16
  8608                           	
  8609  0017D6                     l14581:; BSR set to: 0
  8610                           
  8611  0017D6  D000               	goto	l14582
  8612                           	line	17
  8613                           	
  8614  0017D8                     l14580:; BSR set to: 0
  8615                           
  8616                           	
  8617  0017D8                     l14582:; BSR set to: 0
  8618                           
  8619  0017D8  0012               	return
  8620                           	opt stack 0
  8621                           GLOBAL	__end_of_uart_lthread
  8622  0017DA                     	__end_of_uart_lthread:
  8623                           	signat	_uart_lthread,16506
  8624                           	global	_init_queue
  8625                           
  8626 ;; *************** function _init_queue *****************
  8627 ;; Defined at:
  8628 ;;		line 14 in file "../src/messages.c"
  8629 ;; Parameters:    Size  Location     Type
  8630 ;;  qptr            2   53[BANK0 ] PTR struct __msg_queue
  8631 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8632 ;; Auto vars:     Size  Location     Type
  8633 ;;  i               1   56[BANK0 ] unsigned char 
  8634 ;; Return value:  Size  Location     Type
  8635 ;;		None               void
  8636 ;; Registers used:
  8637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8638 ;; Tracked objects:
  8639 ;;		On entry : 0/0
  8640 ;;		On exit  : 0/0
  8641 ;;		Unchanged: 0/0
  8642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8643 ;;      Params:         0       2       0       0       0
  8644 ;;      Locals:         0       1       0       0       0
  8645 ;;      Temps:          0       1       0       0       0
  8646 ;;      Totals:         0       4       0       0       0
  8647 ;;Total ram usage:        4 bytes
  8648 ;; Hardware stack levels used:    1
  8649 ;; Hardware stack levels required when called:   10
  8650 ;; This function calls:
  8651 ;;		Nothing
  8652 ;; This function is called by:
  8653 ;;		_init_queues
  8654 ;; This function uses a non-reentrant model
  8655 ;;
  8656                           psect	text19,class=CODE,space=0,reloc=2
  8657                           global __ptext19
  8658  00142E                     __ptext19:
  8659                           psect	text19
  8660                           	file	"../src/messages.c"
  8661                           	line	14
  8662                           	global	__size_of_init_queue
  8663  0000                     	__size_of_init_queue	equ	__end_of_init_queue-_init_queue
  8664                           	
  8665  00142E                     _init_queue:; BSR set to: 0
  8666                           
  8667                           	opt	stack 19
  8668                           	line	17
  8669                           	
  8670  00142E                     l18487:
  8671                           ;messages.c: 15: unsigned char i;
  8672                           ;messages.c: 17: qptr->cur_write_ind = 0;
  8673  00142E  0100               	movlb	0	; () banked
  8674  001430  EE20 F034          	lfsr	2,034h
  8675  001434  0100               	movlb	0	; () banked
  8676  001436  51B5               	movf	((init_queue@qptr))&0ffh,w
  8677  001438  26D9               	addwf	fsr2l
  8678  00143A  0100               	movlb	0	; () banked
  8679  00143C  51B6               	movf	((init_queue@qptr+1))&0ffh,w
  8680  00143E  22DA               	addwfc	fsr2h
  8681  001440  0E00               	movlw	low(0)
  8682  001442  6EDF               	movwf	indf2
  8683                           	line	18
  8684                           ;messages.c: 18: qptr->cur_read_ind = 0;
  8685  001444  0100               	movlb	0	; () banked
  8686  001446  EE20 F035          	lfsr	2,035h
  8687  00144A  0100               	movlb	0	; () banked
  8688  00144C  51B5               	movf	((init_queue@qptr))&0ffh,w
  8689  00144E  26D9               	addwf	fsr2l
  8690  001450  0100               	movlb	0	; () banked
  8691  001452  51B6               	movf	((init_queue@qptr+1))&0ffh,w
  8692  001454  22DA               	addwfc	fsr2h
  8693  001456  0E00               	movlw	low(0)
  8694  001458  6EDF               	movwf	indf2
  8695                           	line	19
  8696                           	
  8697  00145A                     l18489:; BSR set to: 0
  8698                           
  8699                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  8700  00145A  0100               	movlb	0	; () banked
  8701  00145C  6FB7               	movwf	(??_init_queue+0+0)&0ffh
  8702  00145E  0E00               	movlw	low(0)
  8703  001460  0100               	movlb	0	; () banked
  8704  001462  0100               	movlb	0	; () banked
  8705  001464  6FB8               	movwf	((init_queue@i))&0ffh
  8706  001466  0100               	movlb	0	; () banked
  8707  001468  51B7               	movf	(??_init_queue+0+0)&0ffh,w
  8708                           	
  8709  00146A                     l18491:; BSR set to: 0
  8710                           
  8711  00146A  0E03               	movlw	(04h-1)
  8712  00146C  0100               	movlb	0	; () banked
  8713  00146E  0100               	movlb	0	; () banked
  8714  001470  65B8               	cpfsgt	((init_queue@i))&0ffh
  8715  001472  D001               	goto	u1581
  8716  001474  D001               	goto	u1580
  8717  001476                     u1581:
  8718  001476  D002               	goto	l18495
  8719  001478                     u1580:
  8720  001478  D01C               	goto	l5470
  8721                           	
  8722  00147A                     l18493:; BSR set to: 0
  8723                           
  8724  00147A  D01B               	goto	l5470
  8725                           	
  8726  00147C                     l5468:; BSR set to: 0
  8727                           
  8728                           	line	20
  8729                           	
  8730  00147C                     l18495:; BSR set to: 0
  8731                           
  8732                           ;messages.c: 20: qptr->queue[i].full = 0;
  8733  00147C  0100               	movlb	0	; () banked
  8734  00147E  0100               	movlb	0	; () banked
  8735  001480  51B8               	movf	((init_queue@i))&0ffh,w
  8736  001482  0D0D               	mullw	0Dh
  8737  001484  50F3               	movf	(prodl),c,w
  8738  001486  0100               	movlb	0	; () banked
  8739  001488  0100               	movlb	0	; () banked
  8740  00148A  25B5               	addwf	((init_queue@qptr))&0ffh,w
  8741  00148C  6ED9               	movwf	c:fsr2l
  8742  00148E  50F4               	movf	(prodh),c,w
  8743  001490  0100               	movlb	0	; () banked
  8744  001492  0100               	movlb	0	; () banked
  8745  001494  21B6               	addwfc	((init_queue@qptr+1))&0ffh,w
  8746  001496  6EDA               	movwf	1+c:fsr2l
  8747  001498  0E00               	movlw	low(0)
  8748  00149A  6EDF               	movwf	indf2
  8749                           	line	19
  8750                           	
  8751  00149C                     l18497:; BSR set to: 0
  8752                           
  8753  00149C  0100               	movlb	0	; () banked
  8754  00149E  0100               	movlb	0	; () banked
  8755  0014A0  2BB8               	incf	((init_queue@i))&0ffh
  8756                           	
  8757  0014A2                     l18499:; BSR set to: 0
  8758                           
  8759  0014A2  0E03               	movlw	(04h-1)
  8760  0014A4  0100               	movlb	0	; () banked
  8761  0014A6  0100               	movlb	0	; () banked
  8762  0014A8  65B8               	cpfsgt	((init_queue@i))&0ffh
  8763  0014AA  D001               	goto	u1591
  8764  0014AC  D001               	goto	u1590
  8765  0014AE                     u1591:
  8766  0014AE  D7E6               	goto	l18495
  8767  0014B0                     u1590:
  8768  0014B0  D000               	goto	l5470
  8769                           	
  8770  0014B2                     l5469:; BSR set to: 0
  8771                           
  8772                           	line	22
  8773                           	
  8774  0014B2                     l5470:; BSR set to: 0
  8775                           
  8776  0014B2  0012               	return
  8777                           	opt stack 0
  8778                           GLOBAL	__end_of_init_queue
  8779  0014B4                     	__end_of_init_queue:
  8780                           	signat	_init_queue,4216
  8781                           	global	_send_msg
  8782                           
  8783 ;; *************** function _send_msg *****************
  8784 ;; Defined at:
  8785 ;;		line 24 in file "../src/messages.c"
  8786 ;; Parameters:    Size  Location     Type
  8787 ;;  qptr            2   63[BANK0 ] PTR struct __msg_queue
  8788 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8789 ;;  length          1   65[BANK0 ] unsigned char 
  8790 ;;  msgtype         1   66[BANK0 ] unsigned char 
  8791 ;;  data            2   67[BANK0 ] PTR void 
  8792 ;;		 -> adc_int_handler@message(3), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
  8793 ;;		 -> i2c_int_handler@error_buf(3), main@msgbuffer(11), main@uc(5), 
  8794 ;; Auto vars:     Size  Location     Type
  8795 ;;  qmsg            2    3[BANK1 ] PTR struct __msg
  8796 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8797 ;;  tlength         2    0[BANK1 ] unsigned int 
  8798 ;;  slot            1    2[BANK1 ] unsigned char 
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  1    wreg      char 
  8801 ;; Registers used:
  8802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8803 ;; Tracked objects:
  8804 ;;		On entry : 0/0
  8805 ;;		On exit  : 0/0
  8806 ;;		Unchanged: 0/0
  8807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8808 ;;      Params:         0       6       0       0       0
  8809 ;;      Locals:         0       0       5       0       0
  8810 ;;      Temps:          0       1       0       0       0
  8811 ;;      Totals:         0       7       5       0       0
  8812 ;;Total ram usage:       12 bytes
  8813 ;; Hardware stack levels used:    1
  8814 ;; Hardware stack levels required when called:   11
  8815 ;; This function calls:
  8816 ;;		_memcpy
  8817 ;; This function is called by:
  8818 ;;		_FromMainLow_sendmsg
  8819 ;;		_FromMainHigh_sendmsg
  8820 ;; This function uses a non-reentrant model
  8821 ;;
  8822                           psect	text20,class=CODE,space=0,reloc=2
  8823                           global __ptext20
  8824  000CAE                     __ptext20:
  8825                           psect	text20
  8826                           	file	"../src/messages.c"
  8827                           	line	24
  8828                           	global	__size_of_send_msg
  8829  0000                     	__size_of_send_msg	equ	__end_of_send_msg-_send_msg
  8830                           	
  8831  000CAE                     _send_msg:; BSR set to: 0
  8832                           
  8833                           	opt	stack 18
  8834                           	line	28
  8835                           	
  8836  000CAE                     l19095:
  8837                           ;messages.c: 25: unsigned char slot;
  8838                           ;messages.c: 27: msg *qmsg;
  8839                           ;messages.c: 28: size_t tlength = length;
  8840  000CAE  0100               	movlb	0	; () banked
  8841  000CB0  0101               	movlb	1	; () banked
  8842  000CB2  C0C1  F1A2         	movff	(send_msg@length),(send_msg@tlength)
  8843  000CB6  0101               	movlb	1	; () banked
  8844  000CB8  0101               	movlb	1	; () banked
  8845  000CBA  6BA3               	clrf	((send_msg@tlength+1))&0ffh
  8846                           	line	38
  8847                           	
  8848  000CBC                     l19097:; BSR set to: 1
  8849                           
  8850                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8851  000CBC  0100               	movlb	0	; () banked
  8852  000CBE  EE20 F034          	lfsr	2,034h
  8853  000CC2  0100               	movlb	0	; () banked
  8854  000CC4  51BF               	movf	((send_msg@qptr))&0ffh,w
  8855  000CC6  26D9               	addwf	fsr2l
  8856  000CC8  0100               	movlb	0	; () banked
  8857  000CCA  51C0               	movf	((send_msg@qptr+1))&0ffh,w
  8858  000CCC  22DA               	addwfc	fsr2h
  8859  000CCE  50DF               	movf	indf2,w
  8860  000CD0  0101               	movlb	1	; () banked
  8861  000CD2  0101               	movlb	1	; () banked
  8862  000CD4  6FA4               	movwf	((send_msg@slot))&0ffh
  8863                           	line	39
  8864                           	
  8865  000CD6                     l19099:; BSR set to: 1
  8866                           
  8867                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8868  000CD6  0101               	movlb	1	; () banked
  8869  000CD8  0101               	movlb	1	; () banked
  8870  000CDA  51A4               	movf	((send_msg@slot))&0ffh,w
  8871  000CDC  0D0D               	mullw	0Dh
  8872  000CDE  50F3               	movf	(prodl),c,w
  8873  000CE0  0100               	movlb	0	; () banked
  8874  000CE2  0100               	movlb	0	; () banked
  8875  000CE4  25BF               	addwf	((send_msg@qptr))&0ffh,w
  8876  000CE6  0101               	movlb	1	; () banked
  8877                           	
  8878  000CE8  0101               	movlb	1	; () banked
  8879  000CEA  6FA5               	movwf	((send_msg@qmsg))&0ffh
  8880  000CEC  50F4               	movf	(prodh),c,w
  8881  000CEE  0100               	movlb	0	; () banked
  8882  000CF0  0100               	movlb	0	; () banked
  8883  000CF2  21C0               	addwfc	((send_msg@qptr+1))&0ffh,w
  8884  000CF4  0101               	movlb	1	; () banked
  8885  000CF6  6FA6               	movwf	1+((send_msg@qmsg))&0ffh
  8886                           	line	41
  8887                           	
  8888  000CF8                     l19101:; BSR set to: 1
  8889                           
  8890                           ;messages.c: 41: if (qmsg->full != 0) {
  8891  000CF8  C1A5  FFD9         	movff	(send_msg@qmsg),fsr2l
  8892  000CFC  C1A6  FFDA         	movff	(send_msg@qmsg+1),fsr2h
  8893  000D00  50DF               	movf	indf2,w
  8894  000D02  B4D8               	btfsc	status,2
  8895  000D04  D001               	goto	u2201
  8896  000D06  D001               	goto	u2200
  8897  000D08                     u2201:
  8898  000D08  D003               	goto	l19107
  8899  000D0A                     u2200:
  8900                           	line	42
  8901                           	
  8902  000D0A                     l19103:; BSR set to: 1
  8903                           
  8904                           ;messages.c: 42: return (-1);
  8905  000D0A  0EFF               	movlw	(-1)&0ffh
  8906  000D0C  D052               	goto	l5474
  8907                           	
  8908  000D0E                     l19105:; BSR set to: 1
  8909                           
  8910  000D0E  D051               	goto	l5474
  8911                           	line	43
  8912                           	
  8913  000D10                     l5473:; BSR set to: 1
  8914                           
  8915                           	line	46
  8916                           	
  8917  000D10                     l19107:; BSR set to: 1
  8918                           
  8919                           ;messages.c: 43: }
  8920                           ;messages.c: 46: qmsg->length = length;
  8921  000D10  0101               	movlb	1	; () banked
  8922  000D12  EE20 F001          	lfsr	2,01h
  8923  000D16  0101               	movlb	1	; () banked
  8924  000D18  51A5               	movf	((send_msg@qmsg))&0ffh,w
  8925  000D1A  26D9               	addwf	fsr2l
  8926  000D1C  0101               	movlb	1	; () banked
  8927  000D1E  51A6               	movf	((send_msg@qmsg+1))&0ffh,w
  8928  000D20  22DA               	addwfc	fsr2h
  8929  000D22  0100               	movlb	0	; () banked
  8930  000D24  C0C1  FFDF         	movff	(send_msg@length),indf2
  8931                           
  8932                           	line	47
  8933                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8934  000D28  0101               	movlb	1	; () banked
  8935  000D2A  EE20 F002          	lfsr	2,02h
  8936  000D2E  0101               	movlb	1	; () banked
  8937  000D30  51A5               	movf	((send_msg@qmsg))&0ffh,w
  8938  000D32  26D9               	addwf	fsr2l
  8939  000D34  0101               	movlb	1	; () banked
  8940  000D36  51A6               	movf	((send_msg@qmsg+1))&0ffh,w
  8941  000D38  22DA               	addwfc	fsr2h
  8942  000D3A  0100               	movlb	0	; () banked
  8943  000D3C  C0C2  FFDF         	movff	(send_msg@msgtype),indf2
  8944                           
  8945                           	line	55
  8946                           	
  8947  000D40                     l19109:; BSR set to: 0
  8948                           
  8949                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8950  000D40  0E03               	movlw	low(03h)
  8951  000D42  0101               	movlb	1	; () banked
  8952  000D44  0101               	movlb	1	; () banked
  8953  000D46  25A5               	addwf	((send_msg@qmsg))&0ffh,w
  8954  000D48  0100               	movlb	0	; () banked
  8955                           	
  8956  000D4A  0100               	movlb	0	; () banked
  8957  000D4C  6FB5               	movwf	((?_memcpy))&0ffh
  8958  000D4E  0E00               	movlw	high(03h)
  8959  000D50  0101               	movlb	1	; () banked
  8960  000D52  0101               	movlb	1	; () banked
  8961  000D54  21A6               	addwfc	((send_msg@qmsg+1))&0ffh,w
  8962  000D56  0100               	movlb	0	; () banked
  8963  000D58  6FB6               	movwf	1+((?_memcpy))&0ffh
  8964  000D5A  C0C3  F0B7         	movff	(send_msg@data),0+(?_memcpy+02h)
  8965  000D5E  C0C4  F0B8         	movff	(send_msg@data+1),1+(?_memcpy+02h)
  8966  000D62  C1A2  F0B9         	movff	(send_msg@tlength),0+(?_memcpy+04h)
  8967  000D66  C1A3  F0BA         	movff	(send_msg@tlength+1),1+(?_memcpy+04h)
  8968  000D6A  0100               	movlb	0	; () banked
  8969  000D6C  EC9B  F00B         	call	_memcpy	;wreg free
  8970                           	line	56
  8971                           	
  8972  000D70                     l19111:
  8973                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8974  000D70  0100               	movlb	0	; () banked
  8975  000D72  EE20 F034          	lfsr	2,034h
  8976  000D76  0100               	movlb	0	; () banked
  8977  000D78  51BF               	movf	((send_msg@qptr))&0ffh,w
  8978  000D7A  26D9               	addwf	fsr2l
  8979  000D7C  0100               	movlb	0	; () banked
  8980  000D7E  51C0               	movf	((send_msg@qptr+1))&0ffh,w
  8981  000D80  22DA               	addwfc	fsr2h
  8982  000D82  0100               	movlb	0	; () banked
  8983  000D84  EE10 F034          	lfsr	1,034h
  8984  000D88  0100               	movlb	0	; () banked
  8985  000D8A  51BF               	movf	((send_msg@qptr))&0ffh,w
  8986  000D8C  26E1               	addwf	fsr1l
  8987  000D8E  0100               	movlb	0	; () banked
  8988  000D90  51C0               	movf	((send_msg@qptr+1))&0ffh,w
  8989  000D92  22E2               	addwfc	fsr1h
  8990  000D94  50E7               	movf	indf1,w
  8991  000D96  0100               	movlb	0	; () banked
  8992  000D98  6FC5               	movwf	(??_send_msg+0+0)&0ffh
  8993  000D9A  0100               	movlb	0	; () banked
  8994  000D9C  29C5               	incf	((??_send_msg+0+0))&0ffh,w
  8995  000D9E  0B03               	andlw	low(03h)
  8996  000DA0  6EDF               	movwf	indf2
  8997                           
  8998                           	line	59
  8999                           	
  9000  000DA2                     l19113:; BSR set to: 0
  9001                           
  9002                           ;messages.c: 59: qmsg->full = 1;
  9003  000DA2  C1A5  FFD9         	movff	(send_msg@qmsg),fsr2l
  9004  000DA6  C1A6  FFDA         	movff	(send_msg@qmsg+1),fsr2h
  9005  000DAA  0E01               	movlw	low(01h)
  9006  000DAC  6EDF               	movwf	indf2
  9007                           	line	60
  9008                           	
  9009  000DAE                     l19115:; BSR set to: 0
  9010                           
  9011                           ;messages.c: 60: return (1);
  9012  000DAE  0E01               	movlw	(01h)&0ffh
  9013  000DB0  D000               	goto	l5474
  9014                           	
  9015  000DB2                     l19117:; BSR set to: 0
  9016                           
  9017                           	line	61
  9018                           	
  9019  000DB2                     l5474:
  9020  000DB2  0012               	return
  9021                           	opt stack 0
  9022                           GLOBAL	__end_of_send_msg
  9023  000DB4                     	__end_of_send_msg:
  9024                           	signat	_send_msg,16505
  9025                           	global	_recv_msg
  9026                           
  9027 ;; *************** function _recv_msg *****************
  9028 ;; Defined at:
  9029 ;;		line 63 in file "../src/messages.c"
  9030 ;; Parameters:    Size  Location     Type
  9031 ;;  qptr            2   63[BANK0 ] PTR struct __msg_queue
  9032 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9033 ;;  maxlength       1   65[BANK0 ] unsigned char 
  9034 ;;  msgtype         2   66[BANK0 ] PTR unsigned char 
  9035 ;;		 -> RAM(1023), i2c_int_handler@msgtype(1), main@msgtype(1), 
  9036 ;;  data            2   68[BANK0 ] PTR void 
  9037 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@data(10), main@msgbuffer(11), 
  9038 ;; Auto vars:     Size  Location     Type
  9039 ;;  qmsg            2    3[BANK1 ] PTR struct __msg
  9040 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9041 ;;  tlength         2    1[BANK1 ] unsigned int 
  9042 ;;  slot            1    0[BANK1 ] unsigned char 
  9043 ;; Return value:  Size  Location     Type
  9044 ;;                  1    wreg      char 
  9045 ;; Registers used:
  9046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9047 ;; Tracked objects:
  9048 ;;		On entry : 0/0
  9049 ;;		On exit  : 0/0
  9050 ;;		Unchanged: 0/0
  9051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9052 ;;      Params:         0       7       0       0       0
  9053 ;;      Locals:         0       0       5       0       0
  9054 ;;      Temps:          0       2       0       0       0
  9055 ;;      Totals:         0       9       5       0       0
  9056 ;;Total ram usage:       14 bytes
  9057 ;; Hardware stack levels used:    1
  9058 ;; Hardware stack levels required when called:   11
  9059 ;; This function calls:
  9060 ;;		_memcpy
  9061 ;; This function is called by:
  9062 ;;		_ToMainLow_recvmsg
  9063 ;;		_ToMainHigh_recvmsg
  9064 ;; This function uses a non-reentrant model
  9065 ;;
  9066                           psect	text21,class=CODE,space=0,reloc=2
  9067                           global __ptext21
  9068  000A4E                     __ptext21:
  9069                           psect	text21
  9070                           	file	"../src/messages.c"
  9071                           	line	63
  9072                           	global	__size_of_recv_msg
  9073  0000                     	__size_of_recv_msg	equ	__end_of_recv_msg-_recv_msg
  9074                           	
  9075  000A4E                     _recv_msg:
  9076                           	opt	stack 18
  9077                           	line	72
  9078                           	
  9079  000A4E                     l19129:
  9080                           ;messages.c: 64: unsigned char slot;
  9081                           ;messages.c: 68: msg *qmsg;
  9082                           ;messages.c: 69: size_t tlength;
  9083                           ;messages.c: 72: slot = qptr->cur_read_ind;
  9084  000A4E  0100               	movlb	0	; () banked
  9085  000A50  EE20 F035          	lfsr	2,035h
  9086  000A54  0100               	movlb	0	; () banked
  9087  000A56  51BF               	movf	((recv_msg@qptr))&0ffh,w
  9088  000A58  26D9               	addwf	fsr2l
  9089  000A5A  0100               	movlb	0	; () banked
  9090  000A5C  51C0               	movf	((recv_msg@qptr+1))&0ffh,w
  9091  000A5E  22DA               	addwfc	fsr2h
  9092  000A60  50DF               	movf	indf2,w
  9093  000A62  0101               	movlb	1	; () banked
  9094  000A64  0101               	movlb	1	; () banked
  9095  000A66  6FA2               	movwf	((recv_msg@slot))&0ffh
  9096                           	line	73
  9097                           	
  9098  000A68                     l19131:; BSR set to: 1
  9099                           
  9100                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  9101  000A68  0101               	movlb	1	; () banked
  9102  000A6A  0101               	movlb	1	; () banked
  9103  000A6C  51A2               	movf	((recv_msg@slot))&0ffh,w
  9104  000A6E  0D0D               	mullw	0Dh
  9105  000A70  50F3               	movf	(prodl),c,w
  9106  000A72  0100               	movlb	0	; () banked
  9107  000A74  0100               	movlb	0	; () banked
  9108  000A76  25BF               	addwf	((recv_msg@qptr))&0ffh,w
  9109  000A78  0101               	movlb	1	; () banked
  9110                           	
  9111  000A7A  0101               	movlb	1	; () banked
  9112  000A7C  6FA5               	movwf	((recv_msg@qmsg))&0ffh
  9113  000A7E  50F4               	movf	(prodh),c,w
  9114  000A80  0100               	movlb	0	; () banked
  9115  000A82  0100               	movlb	0	; () banked
  9116  000A84  21C0               	addwfc	((recv_msg@qptr+1))&0ffh,w
  9117  000A86  0101               	movlb	1	; () banked
  9118  000A88  6FA6               	movwf	1+((recv_msg@qmsg))&0ffh
  9119                           	line	74
  9120                           	
  9121  000A8A                     l19133:; BSR set to: 1
  9122                           
  9123                           ;messages.c: 74: if (qmsg->full == 1) {
  9124  000A8A  0E01               	movlw	(01h)&0ffh
  9125  000A8C  C1A5  FFD9         	movff	(recv_msg@qmsg),fsr2l
  9126  000A90  C1A6  FFDA         	movff	(recv_msg@qmsg+1),fsr2h
  9127  000A94  62DF               	cpfseq	indf2
  9128  000A96  D001               	goto	u2221
  9129  000A98  D001               	goto	u2220
  9130  000A9A                     u2221:
  9131  000A9A  D075               	goto	l19157
  9132  000A9C                     u2220:
  9133                           	line	76
  9134                           	
  9135  000A9C                     l19135:; BSR set to: 1
  9136                           
  9137                           ;messages.c: 76: if (qmsg->length > maxlength) {
  9138  000A9C  0101               	movlb	1	; () banked
  9139  000A9E  EE20 F001          	lfsr	2,01h
  9140  000AA2  0101               	movlb	1	; () banked
  9141  000AA4  51A5               	movf	((recv_msg@qmsg))&0ffh,w
  9142  000AA6  26D9               	addwf	fsr2l
  9143  000AA8  0101               	movlb	1	; () banked
  9144  000AAA  51A6               	movf	((recv_msg@qmsg+1))&0ffh,w
  9145  000AAC  22DA               	addwfc	fsr2h
  9146  000AAE  50DF               	movf	indf2,w
  9147  000AB0  0100               	movlb	0	; () banked
  9148  000AB2  0100               	movlb	0	; () banked
  9149  000AB4  61C1               	cpfslt	((recv_msg@maxlength))&0ffh
  9150  000AB6  D001               	goto	u2231
  9151  000AB8  D001               	goto	u2230
  9152  000ABA                     u2231:
  9153  000ABA  D003               	goto	l19141
  9154  000ABC                     u2230:
  9155                           	line	77
  9156                           	
  9157  000ABC                     l19137:; BSR set to: 0
  9158                           
  9159                           ;messages.c: 77: return (-3);
  9160  000ABC  0EFD               	movlw	(-3)&0ffh
  9161  000ABE  D066               	goto	l5479
  9162                           	
  9163  000AC0                     l19139:; BSR set to: 0
  9164                           
  9165  000AC0  D065               	goto	l5479
  9166                           	line	78
  9167                           	
  9168  000AC2                     l5478:; BSR set to: 0
  9169                           
  9170                           	line	80
  9171                           	
  9172  000AC2                     l19141:; BSR set to: 0
  9173                           
  9174                           ;messages.c: 78: }
  9175                           ;messages.c: 80: tlength = qmsg->length;
  9176  000AC2  0101               	movlb	1	; () banked
  9177  000AC4  EE20 F001          	lfsr	2,01h
  9178  000AC8  0101               	movlb	1	; () banked
  9179  000ACA  51A5               	movf	((recv_msg@qmsg))&0ffh,w
  9180  000ACC  26D9               	addwf	fsr2l
  9181  000ACE  0101               	movlb	1	; () banked
  9182  000AD0  51A6               	movf	((recv_msg@qmsg+1))&0ffh,w
  9183  000AD2  22DA               	addwfc	fsr2h
  9184  000AD4  50DF               	movf	indf2,w
  9185  000AD6  0100               	movlb	0	; () banked
  9186  000AD8  6FC6               	movwf	(??_recv_msg+0+0)&0ffh
  9187  000ADA  0100               	movlb	0	; () banked
  9188  000ADC  51C6               	movf	((??_recv_msg+0+0))&0ffh,w
  9189  000ADE  0101               	movlb	1	; () banked
  9190  000AE0  0101               	movlb	1	; () banked
  9191  000AE2  6FA3               	movwf	((recv_msg@tlength))&0ffh
  9192  000AE4  0101               	movlb	1	; () banked
  9193  000AE6  6BA4               	clrf	((recv_msg@tlength+1))&0ffh
  9194                           	line	81
  9195                           	
  9196  000AE8                     l19143:; BSR set to: 1
  9197                           
  9198                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  9199  000AE8  C0C4  F0B5         	movff	(recv_msg@data),(?_memcpy)
  9200  000AEC  C0C5  F0B6         	movff	(recv_msg@data+1),(?_memcpy+1)
  9201  000AF0  0E03               	movlw	03h
  9202  000AF2  0101               	movlb	1	; () banked
  9203  000AF4  0101               	movlb	1	; () banked
  9204  000AF6  25A5               	addwf	((recv_msg@qmsg))&0ffh,w
  9205  000AF8  0100               	movlb	0	; () banked
  9206  000AFA  6FC6               	movwf	(??_recv_msg+0+0)&0ffh
  9207  000AFC  0E00               	movlw	0
  9208  000AFE  0101               	movlb	1	; () banked
  9209  000B00  0101               	movlb	1	; () banked
  9210  000B02  21A6               	addwfc	((recv_msg@qmsg+1))&0ffh,w
  9211  000B04  0100               	movlb	0	; () banked
  9212  000B06  6FC7               	movwf	(??_recv_msg+0+0+1)&0ffh
  9213  000B08  C0C6  F0B7         	movff	??_recv_msg+0+0,0+(?_memcpy+02h)
  9214  000B0C  C0C7  F0B8         	movff	??_recv_msg+0+1,1+(?_memcpy+02h)
  9215  000B10  C1A3  F0B9         	movff	(recv_msg@tlength),0+(?_memcpy+04h)
  9216  000B14  C1A4  F0BA         	movff	(recv_msg@tlength+1),1+(?_memcpy+04h)
  9217  000B18  0100               	movlb	0	; () banked
  9218  000B1A  EC9B  F00B         	call	_memcpy	;wreg free
  9219                           	line	87
  9220                           	
  9221  000B1E                     l19145:
  9222                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  9223  000B1E  0100               	movlb	0	; () banked
  9224  000B20  EE20 F035          	lfsr	2,035h
  9225  000B24  0100               	movlb	0	; () banked
  9226  000B26  51BF               	movf	((recv_msg@qptr))&0ffh,w
  9227  000B28  26D9               	addwf	fsr2l
  9228  000B2A  0100               	movlb	0	; () banked
  9229  000B2C  51C0               	movf	((recv_msg@qptr+1))&0ffh,w
  9230  000B2E  22DA               	addwfc	fsr2h
  9231  000B30  0100               	movlb	0	; () banked
  9232  000B32  EE10 F035          	lfsr	1,035h
  9233  000B36  0100               	movlb	0	; () banked
  9234  000B38  51BF               	movf	((recv_msg@qptr))&0ffh,w
  9235  000B3A  26E1               	addwf	fsr1l
  9236  000B3C  0100               	movlb	0	; () banked
  9237  000B3E  51C0               	movf	((recv_msg@qptr+1))&0ffh,w
  9238  000B40  22E2               	addwfc	fsr1h
  9239  000B42  50E7               	movf	indf1,w
  9240  000B44  0100               	movlb	0	; () banked
  9241  000B46  6FC6               	movwf	(??_recv_msg+0+0)&0ffh
  9242  000B48  0100               	movlb	0	; () banked
  9243  000B4A  29C6               	incf	((??_recv_msg+0+0))&0ffh,w
  9244  000B4C  0B03               	andlw	low(03h)
  9245  000B4E  6EDF               	movwf	indf2
  9246                           
  9247                           	line	89
  9248                           	
  9249  000B50                     l19147:; BSR set to: 0
  9250                           
  9251                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  9252  000B50  0101               	movlb	1	; () banked
  9253  000B52  EE20 F002          	lfsr	2,02h
  9254  000B56  0101               	movlb	1	; () banked
  9255  000B58  51A5               	movf	((recv_msg@qmsg))&0ffh,w
  9256  000B5A  26D9               	addwf	fsr2l
  9257  000B5C  0101               	movlb	1	; () banked
  9258  000B5E  51A6               	movf	((recv_msg@qmsg+1))&0ffh,w
  9259  000B60  22DA               	addwfc	fsr2h
  9260  000B62  C0C2  FFE1         	movff	(recv_msg@msgtype),fsr1l
  9261  000B66  C0C3  FFE2         	movff	(recv_msg@msgtype+1),fsr1h
  9262  000B6A  CFDF FFE7          	movff	indf2,indf1
  9263                           	line	91
  9264                           	
  9265  000B6E                     l19149:; BSR set to: 1
  9266                           
  9267                           ;messages.c: 91: qmsg->full = 0;
  9268  000B6E  C1A5  FFD9         	movff	(recv_msg@qmsg),fsr2l
  9269  000B72  C1A6  FFDA         	movff	(recv_msg@qmsg+1),fsr2h
  9270  000B76  0E00               	movlw	low(0)
  9271  000B78  6EDF               	movwf	indf2
  9272                           	line	92
  9273                           	
  9274  000B7A                     l19151:; BSR set to: 1
  9275                           
  9276                           ;messages.c: 92: return (tlength);
  9277  000B7A  0101               	movlb	1	; () banked
  9278  000B7C  0101               	movlb	1	; () banked
  9279  000B7E  51A3               	movf	((recv_msg@tlength))&0ffh,w
  9280  000B80  D005               	goto	l5479
  9281                           	
  9282  000B82                     l19153:; BSR set to: 1
  9283                           
  9284  000B82  D004               	goto	l5479
  9285                           	line	93
  9286                           	
  9287  000B84                     l19155:; BSR set to: 1
  9288                           
  9289                           ;messages.c: 93: } else {
  9290  000B84  D003               	goto	l5479
  9291                           	
  9292  000B86                     l5477:; BSR set to: 1
  9293                           
  9294                           	line	94
  9295                           	
  9296  000B86                     l19157:; BSR set to: 1
  9297                           
  9298                           ;messages.c: 94: return (-4);
  9299  000B86  0EFC               	movlw	(-4)&0ffh
  9300  000B88  D001               	goto	l5479
  9301                           	
  9302  000B8A                     l19159:; BSR set to: 1
  9303                           
  9304  000B8A  D000               	goto	l5479
  9305                           	line	95
  9306                           	
  9307  000B8C                     l5480:; BSR set to: 1
  9308                           
  9309                           	line	96
  9310                           	
  9311  000B8C                     l5479:
  9312  000B8C  0012               	return
  9313                           	opt stack 0
  9314                           GLOBAL	__end_of_recv_msg
  9315  000B8E                     	__end_of_recv_msg:
  9316                           	signat	_recv_msg,16505
  9317                           	global	_memcpy
  9318                           
  9319 ;; *************** function _memcpy *****************
  9320 ;; Defined at:
  9321 ;;		line 13 in file "/opt/microchip/xc8/v1.10/sources/memcpy.c"
  9322 ;; Parameters:    Size  Location     Type
  9323 ;;  d1              2   53[BANK0 ] PTR void 
  9324 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  9325 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  9326 ;;  s1              2   55[BANK0 ] PTR const void 
  9327 ;;		 -> adc_int_handler@message(3), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
  9328 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  9329 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(5), 
  9330 ;;  n               2   57[BANK0 ] unsigned int 
  9331 ;; Auto vars:     Size  Location     Type
  9332 ;;  s               2   61[BANK0 ] PTR const unsigned char 
  9333 ;;		 -> adc_int_handler@message(3), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
  9334 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  9335 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(5), 
  9336 ;;  d               2   59[BANK0 ] PTR unsigned char 
  9337 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  9338 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  9339 ;; Return value:  Size  Location     Type
  9340 ;;                  2   53[BANK0 ] PTR void 
  9341 ;; Registers used:
  9342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9343 ;; Tracked objects:
  9344 ;;		On entry : 0/0
  9345 ;;		On exit  : 0/0
  9346 ;;		Unchanged: 0/0
  9347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9348 ;;      Params:         0       6       0       0       0
  9349 ;;      Locals:         0       4       0       0       0
  9350 ;;      Temps:          0       0       0       0       0
  9351 ;;      Totals:         0      10       0       0       0
  9352 ;;Total ram usage:       10 bytes
  9353 ;; Hardware stack levels used:    1
  9354 ;; Hardware stack levels required when called:   10
  9355 ;; This function calls:
  9356 ;;		Nothing
  9357 ;; This function is called by:
  9358 ;;		_send_msg
  9359 ;;		_recv_msg
  9360 ;; This function uses a non-reentrant model
  9361 ;;
  9362                           psect	text22,class=CODE,space=0,reloc=2
  9363                           global __ptext22
  9364  001736                     __ptext22:
  9365                           psect	text22
  9366                           	file	"/opt/microchip/xc8/v1.10/sources/memcpy.c"
  9367                           	line	13
  9368                           	global	__size_of_memcpy
  9369  0000                     	__size_of_memcpy	equ	__end_of_memcpy-_memcpy
  9370                           	
  9371  001736                     _memcpy:
  9372                           	opt	stack 18
  9373                           	line	24
  9374                           	
  9375  001736                     l19119:
  9376  001736  C0B7  F0BD         	movff	(memcpy@s1),(memcpy@s)
  9377  00173A  C0B8  F0BE         	movff	(memcpy@s1+1),(memcpy@s+1)
  9378                           	line	25
  9379  00173E  C0B5  F0BB         	movff	(memcpy@d1),(memcpy@d)
  9380  001742  C0B6  F0BC         	movff	(memcpy@d1+1),(memcpy@d+1)
  9381                           	line	26
  9382  001746  D013               	goto	l19127
  9383                           	
  9384  001748                     l17009:
  9385                           	line	27
  9386                           	
  9387  001748                     l19121:
  9388  001748  C0BD  FFD9         	movff	(memcpy@s),fsr2l
  9389  00174C  C0BE  FFDA         	movff	(memcpy@s+1),fsr2h
  9390  001750  C0BB  FFE1         	movff	(memcpy@d),fsr1l
  9391  001754  C0BC  FFE2         	movff	(memcpy@d+1),fsr1h
  9392  001758  CFDF FFE7          	movff	indf2,indf1
  9393                           	
  9394  00175C                     l19123:
  9395  00175C  0100               	movlb	0	; () banked
  9396  00175E  0100               	movlb	0	; () banked
  9397  001760  4BBD               	infsnz	((memcpy@s))&0ffh
  9398  001762  2BBE               	incf	((memcpy@s+1))&0ffh
  9399                           	
  9400  001764                     l19125:; BSR set to: 0
  9401                           
  9402  001764  0100               	movlb	0	; () banked
  9403  001766  0100               	movlb	0	; () banked
  9404  001768  4BBB               	infsnz	((memcpy@d))&0ffh
  9405  00176A  2BBC               	incf	((memcpy@d+1))&0ffh
  9406  00176C  D000               	goto	l19127
  9407                           	
  9408  00176E                     l17008:; BSR set to: 0
  9409                           
  9410                           	line	26
  9411                           	
  9412  00176E                     l19127:
  9413  00176E  0100               	movlb	0	; () banked
  9414  001770  0100               	movlb	0	; () banked
  9415  001772  07B9               	decf	((memcpy@n))&0ffh
  9416  001774  A0D8               	btfss	status,0
  9417  001776  07BA               	decf	((memcpy@n+1))&0ffh
  9418  001778  0100               	movlb	0	; () banked
  9419  00177A  29B9               	incf	((memcpy@n))&0ffh,w
  9420  00177C  B4D8               	btfsc	status,2
  9421  00177E  29BA               	incf ((memcpy@n+1))&0ffh,w
  9422                           
  9423  001780  A4D8               	btfss	status,2
  9424  001782  D001               	goto	u2211
  9425  001784  D001               	goto	u2210
  9426  001786                     u2211:
  9427  001786  D7E0               	goto	l19121
  9428  001788                     u2210:
  9429  001788  D000               	goto	l17011
  9430                           	
  9431  00178A                     l17010:; BSR set to: 0
  9432                           
  9433                           	line	32
  9434                           ;	Return value of _memcpy is never used
  9435                           	
  9436  00178A                     l17011:; BSR set to: 0
  9437                           
  9438  00178A  0012               	return
  9439                           	opt stack 0
  9440                           GLOBAL	__end_of_memcpy
  9441  00178C                     	__end_of_memcpy:
  9442                           	signat	_memcpy,12410
  9443                           	global	_check_msg
  9444                           
  9445 ;; *************** function _check_msg *****************
  9446 ;; Defined at:
  9447 ;;		line 222 in file "../src/messages.c"
  9448 ;; Parameters:    Size  Location     Type
  9449 ;;  qptr            2   53[BANK0 ] PTR struct __msg_queue
  9450 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9451 ;; Auto vars:     Size  Location     Type
  9452 ;;		None
  9453 ;; Return value:  Size  Location     Type
  9454 ;;                  1    wreg      unsigned char 
  9455 ;; Registers used:
  9456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9457 ;; Tracked objects:
  9458 ;;		On entry : 0/0
  9459 ;;		On exit  : 0/0
  9460 ;;		Unchanged: 0/0
  9461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9462 ;;      Params:         0       2       0       0       0
  9463 ;;      Locals:         0       0       0       0       0
  9464 ;;      Temps:          0       1       0       0       0
  9465 ;;      Totals:         0       3       0       0       0
  9466 ;;Total ram usage:        3 bytes
  9467 ;; Hardware stack levels used:    1
  9468 ;; Hardware stack levels required when called:   10
  9469 ;; This function calls:
  9470 ;;		Nothing
  9471 ;; This function is called by:
  9472 ;;		_block_on_To_msgqueues
  9473 ;; This function uses a non-reentrant model
  9474 ;;
  9475                           psect	text23,class=CODE,space=0,reloc=2
  9476                           global __ptext23
  9477  0019FC                     __ptext23:
  9478                           psect	text23
  9479                           	file	"../src/messages.c"
  9480                           	line	222
  9481                           	global	__size_of_check_msg
  9482  0000                     	__size_of_check_msg	equ	__end_of_check_msg-_check_msg
  9483                           	
  9484  0019FC                     _check_msg:; BSR set to: 0
  9485                           
  9486                           	opt	stack 19
  9487                           	line	223
  9488                           	
  9489  0019FC                     l18585:
  9490                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  9491  0019FC  0100               	movlb	0	; () banked
  9492  0019FE  EE20 F035          	lfsr	2,035h
  9493  001A02  0100               	movlb	0	; () banked
  9494  001A04  51B5               	movf	((check_msg@qptr))&0ffh,w
  9495  001A06  26D9               	addwf	fsr2l
  9496  001A08  0100               	movlb	0	; () banked
  9497  001A0A  51B6               	movf	((check_msg@qptr+1))&0ffh,w
  9498  001A0C  22DA               	addwfc	fsr2h
  9499  001A0E  50DF               	movf	indf2,w
  9500  001A10  0100               	movlb	0	; () banked
  9501  001A12  6FB7               	movwf	(??_check_msg+0+0)&0ffh
  9502  001A14  0100               	movlb	0	; () banked
  9503  001A16  51B7               	movf	((??_check_msg+0+0))&0ffh,w
  9504  001A18  0D0D               	mullw	0Dh
  9505  001A1A  50F3               	movf	(prodl),c,w
  9506  001A1C  0100               	movlb	0	; () banked
  9507  001A1E  0100               	movlb	0	; () banked
  9508  001A20  25B5               	addwf	((check_msg@qptr))&0ffh,w
  9509  001A22  6ED9               	movwf	c:fsr2l
  9510  001A24  50F4               	movf	(prodh),c,w
  9511  001A26  0100               	movlb	0	; () banked
  9512  001A28  0100               	movlb	0	; () banked
  9513  001A2A  21B6               	addwfc	((check_msg@qptr+1))&0ffh,w
  9514  001A2C  6EDA               	movwf	1+c:fsr2l
  9515  001A2E  50DF               	movf	indf2,w
  9516  001A30  D000               	goto	l5523
  9517                           	
  9518  001A32                     l18587:; BSR set to: 0
  9519                           
  9520                           	line	224
  9521                           	
  9522  001A32                     l5523:; BSR set to: 0
  9523                           
  9524  001A32  0012               	return
  9525                           	opt stack 0
  9526                           GLOBAL	__end_of_check_msg
  9527  001A34                     	__end_of_check_msg:
  9528                           	signat	_check_msg,4217
  9529                           	global	_Delay1KTCYx
  9530                           
  9531 ;; *************** function _Delay1KTCYx *****************
  9532 ;; Defined at:
  9533 ;;		line 9 in file "../common/d1ktcyx.c"
  9534 ;; Parameters:    Size  Location     Type
  9535 ;;  unit            1   53[BANK0 ] unsigned char 
  9536 ;; Auto vars:     Size  Location     Type
  9537 ;;		None
  9538 ;; Return value:  Size  Location     Type
  9539 ;;		None               void
  9540 ;; Registers used:
  9541 ;;		wreg
  9542 ;; Tracked objects:
  9543 ;;		On entry : 0/0
  9544 ;;		On exit  : 0/0
  9545 ;;		Unchanged: 0/0
  9546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9547 ;;      Params:         0       1       0       0       0
  9548 ;;      Locals:         0       0       0       0       0
  9549 ;;      Temps:          0       0       0       0       0
  9550 ;;      Totals:         0       1       0       0       0
  9551 ;;Total ram usage:        1 bytes
  9552 ;; Hardware stack levels used:    1
  9553 ;; Hardware stack levels required when called:   10
  9554 ;; This function calls:
  9555 ;;		Nothing
  9556 ;; This function is called by:
  9557 ;;		_block_on_To_msgqueues
  9558 ;; This function uses a non-reentrant model
  9559 ;;
  9560                           psect	text24,class=CODE,space=0,reloc=2
  9561                           global __ptext24
  9562  001C4A                     __ptext24:
  9563                           psect	text24
  9564                           	file	"../common/d1ktcyx.c"
  9565                           	line	9
  9566                           	global	__size_of_Delay1KTCYx
  9567  0000                     	__size_of_Delay1KTCYx	equ	__end_of_Delay1KTCYx-_Delay1KTCYx
  9568                           	
  9569  001C4A                     _Delay1KTCYx:; BSR set to: 0
  9570                           
  9571                           	opt	stack 19
  9572                           	line	10
  9573                           	
  9574  001C4A                     l17073:
  9575                           	line	11
  9576                           	
  9577  001C4A                     l18589:
  9578  001C4A  0EFA               	movlw	250
  9579  001C4C                     u2287:
  9580  001C4C  F000               	nop
  9581  001C4E  2EE8               decfsz	wreg,f
  9582  001C50  D7FD               	goto	u2287
  9583                           
  9584                           	line	12
  9585                           	
  9586  001C52                     l18591:
  9587  001C52  0100               	movlb	0	; () banked
  9588  001C54  0100               	movlb	0	; () banked
  9589  001C56  2FB5               	decfsz	((Delay1KTCYx@unit))&0ffh
  9590                           	
  9591  001C58  D7F8               	goto	l17073
  9592  001C5A  D000               	goto	l17075
  9593                           	
  9594  001C5C                     l17074:; BSR set to: 0
  9595                           
  9596                           	line	13
  9597                           	
  9598  001C5C                     l17075:; BSR set to: 0
  9599                           
  9600  001C5C  0012               	return
  9601                           	opt stack 0
  9602                           GLOBAL	__end_of_Delay1KTCYx
  9603  001C5E                     	__end_of_Delay1KTCYx:
  9604                           	signat	_Delay1KTCYx,4216
  9605                           	global	_OpenADC
  9606                           
  9607 ;; *************** function _OpenADC *****************
  9608 ;; Defined at:
  9609 ;;		line 71 in file "plib/ADC/adcopen.c"
  9610 ;; Parameters:    Size  Location     Type
  9611 ;;  config          1   53[BANK0 ] unsigned char 
  9612 ;;  config2         1   54[BANK0 ] unsigned char 
  9613 ;;  portconfig      1   55[BANK0 ] unsigned char 
  9614 ;; Auto vars:     Size  Location     Type
  9615 ;;		None
  9616 ;; Return value:  Size  Location     Type
  9617 ;;		None               void
  9618 ;; Registers used:
  9619 ;;		wreg, status,2, status,0
  9620 ;; Tracked objects:
  9621 ;;		On entry : 0/0
  9622 ;;		On exit  : 0/0
  9623 ;;		Unchanged: 0/0
  9624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9625 ;;      Params:         0       3       0       0       0
  9626 ;;      Locals:         0       0       0       0       0
  9627 ;;      Temps:          0       2       0       0       0
  9628 ;;      Totals:         0       5       0       0       0
  9629 ;;Total ram usage:        5 bytes
  9630 ;; Hardware stack levels used:    1
  9631 ;; Hardware stack levels required when called:   10
  9632 ;; This function calls:
  9633 ;;		Nothing
  9634 ;; This function is called by:
  9635 ;;		_init_timer1_lthread
  9636 ;; This function uses a non-reentrant model
  9637 ;;
  9638                           psect	text25,class=CODE,space=0,reloc=2
  9639                           global __ptext25
  9640  0014B4                     __ptext25:
  9641                           psect	text25
  9642                           	file	"plib/ADC/adcopen.c"
  9643                           	line	71
  9644                           	global	__size_of_OpenADC
  9645  0000                     	__size_of_OpenADC	equ	__end_of_OpenADC-_OpenADC
  9646                           	
  9647  0014B4                     _OpenADC:; BSR set to: 0
  9648                           
  9649                           	opt	stack 19
  9650                           	line	72
  9651                           	
  9652  0014B4                     l18635:
  9653  0014B4  0E00               	movlw	low(0)
  9654  0014B6  6EC2               	movwf	((c:4034)),c	;volatile
  9655                           	line	73
  9656  0014B8  0E00               	movlw	low(0)
  9657  0014BA  6EC0               	movwf	((c:4032)),c	;volatile
  9658                           	line	75
  9659                           	
  9660  0014BC                     l18637:
  9661  0014BC  0100               	movlb	0	; () banked
  9662  0014BE  0100               	movlb	0	; () banked
  9663  0014C0  90D8               	bcf	status,0
  9664  0014C2  31B6               	rrcf	((OpenADC@config2))&0ffh,w
  9665  0014C4  0B3C               	andlw	low(03Ch)
  9666  0014C6  6EC2               	movwf	((c:4034)),c	;volatile
  9667                           	line	77
  9668                           	
  9669  0014C8                     l18639:; BSR set to: 0
  9670                           
  9671  0014C8  C0B6  F0B8         	movff	(OpenADC@config2),??_OpenADC+0+0
  9672  0014CC  0100               	movlb	0	; () banked
  9673  0014CE  3BB8               	swapf	(??_OpenADC+0+0)&0ffh
  9674  0014D0  0EF0               	movlw	(0ffh shl 4) & 0ffh
  9675  0014D2  17B8               	andwf	(??_OpenADC+0+0)&0ffh
  9676  0014D4  0E30               	movlw	030h
  9677  0014D6  0100               	movlb	0	; () banked
  9678  0014D8  17B8               	andwf	(??_OpenADC+0+0)&0ffh
  9679  0014DA  0100               	movlb	0	; () banked
  9680  0014DC  0100               	movlb	0	; () banked
  9681  0014DE  51B7               	movf	((OpenADC@portconfig))&0ffh,w
  9682  0014E0  0B0F               	andlw	low(0Fh)
  9683  0014E2  0100               	movlb	0	; () banked
  9684  0014E4  11B8               	iorwf	(??_OpenADC+0+0)&0ffh,w
  9685  0014E6  6EC1               	movwf	((c:4033)),c	;volatile
  9686                           	line	80
  9687                           	
  9688  0014E8                     l18641:; BSR set to: 0
  9689                           
  9690  0014E8  C0B5  F0B8         	movff	(OpenADC@config),??_OpenADC+0+0
  9691  0014EC  0100               	movlb	0	; () banked
  9692  0014EE  90D8               	bcf	status,0
  9693  0014F0  37B8               	rlcf	(??_OpenADC+0+0)&0ffh
  9694  0014F2  0100               	movlb	0	; () banked
  9695  0014F4  90D8               	bcf	status,0
  9696  0014F6  37B8               	rlcf	(??_OpenADC+0+0)&0ffh
  9697                           
  9698  0014F8  0E38               	movlw	038h
  9699  0014FA  0100               	movlb	0	; () banked
  9700  0014FC  17B8               	andwf	(??_OpenADC+0+0)&0ffh
  9701  0014FE  C0B5  F0B9         	movff	(OpenADC@config),??_OpenADC+1+0
  9702  001502  0100               	movlb	0	; () banked
  9703  001504  3BB9               	swapf	(??_OpenADC+1+0)&0ffh
  9704  001506  0E0F               	movlw	(0ffh shr 4) & 0ffh
  9705  001508  17B9               	andwf	(??_OpenADC+1+0)&0ffh
  9706  00150A  0E07               	movlw	07h
  9707  00150C  0100               	movlb	0	; () banked
  9708  00150E  17B9               	andwf	(??_OpenADC+1+0)&0ffh
  9709  001510  0100               	movlb	0	; () banked
  9710  001512  0100               	movlb	0	; () banked
  9711  001514  51B5               	movf	((OpenADC@config))&0ffh,w
  9712  001516  0B80               	andlw	low(080h)
  9713  001518  0100               	movlb	0	; () banked
  9714  00151A  11B9               	iorwf	(??_OpenADC+1+0)&0ffh,w
  9715  00151C  0100               	movlb	0	; () banked
  9716  00151E  11B8               	iorwf	(??_OpenADC+0+0)&0ffh,w
  9717  001520  6EC0               	movwf	((c:4032)),c	;volatile
  9718                           	line	82
  9719                           	
  9720  001522                     l18643:; BSR set to: 0
  9721                           
  9722  001522  0100               	movlb	0	; () banked
  9723                           	
  9724  001524  0100               	movlb	0	; () banked
  9725  001526  AFB6               	btfss	((OpenADC@config2))&0ffh,(7)&7
  9726  001528  D001               	goto	u1721
  9727  00152A  D001               	goto	u1720
  9728  00152C                     u1721:
  9729  00152C  D003               	goto	l16412
  9730  00152E                     u1720:
  9731                           	line	84
  9732                           	
  9733  00152E                     l18645:; BSR set to: 0
  9734                           
  9735  00152E  9C9E               	bcf	((c:3998)),c,6	;volatile
  9736                           	line	85
  9737  001530  8C9D               	bsf	((c:3997)),c,6	;volatile
  9738                           	line	86
  9739  001532  8CF2               	bsf	((c:4082)),c,6	;volatile
  9740                           	line	87
  9741                           	
  9742  001534                     l16412:; BSR set to: 0
  9743                           
  9744                           	line	88
  9745  001534  80C2               	bsf	((c:4034)),c,0	;volatile
  9746                           	line	89
  9747                           	
  9748  001536                     l16413:; BSR set to: 0
  9749                           
  9750  001536  0012               	return
  9751                           	opt stack 0
  9752                           GLOBAL	__end_of_OpenADC
  9753  001538                     	__end_of_OpenADC:
  9754                           	signat	_OpenADC,12408
  9755                           	global	_SetChanADC
  9756                           
  9757 ;; *************** function _SetChanADC *****************
  9758 ;; Defined at:
  9759 ;;		line 31 in file "plib/ADC/adcsetch.c"
  9760 ;; Parameters:    Size  Location     Type
  9761 ;;  channel         1   53[BANK0 ] unsigned char 
  9762 ;; Auto vars:     Size  Location     Type
  9763 ;;		None
  9764 ;; Return value:  Size  Location     Type
  9765 ;;		None               void
  9766 ;; Registers used:
  9767 ;;		wreg, status,2, status,0
  9768 ;; Tracked objects:
  9769 ;;		On entry : 0/0
  9770 ;;		On exit  : 0/0
  9771 ;;		Unchanged: 0/0
  9772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9773 ;;      Params:         0       1       0       0       0
  9774 ;;      Locals:         0       0       0       0       0
  9775 ;;      Temps:          0       1       0       0       0
  9776 ;;      Totals:         0       2       0       0       0
  9777 ;;Total ram usage:        2 bytes
  9778 ;; Hardware stack levels used:    1
  9779 ;; Hardware stack levels required when called:   10
  9780 ;; This function calls:
  9781 ;;		Nothing
  9782 ;; This function is called by:
  9783 ;;		_init_timer1_lthread
  9784 ;; This function uses a non-reentrant model
  9785 ;;
  9786                           psect	text26,class=CODE,space=0,reloc=2
  9787                           global __ptext26
  9788  001C00                     __ptext26:
  9789                           psect	text26
  9790                           	file	"plib/ADC/adcsetch.c"
  9791                           	line	31
  9792                           	global	__size_of_SetChanADC
  9793  0000                     	__size_of_SetChanADC	equ	__end_of_SetChanADC-_SetChanADC
  9794                           	
  9795  001C00                     _SetChanADC:; BSR set to: 0
  9796                           
  9797                           	opt	stack 19
  9798                           	line	34
  9799                           	
  9800  001C00                     l18647:
  9801  001C00  CFC2 F0B6          	movff	(c:4034),??_SetChanADC+0+0	;volatile
  9802  001C04  0EC3               	movlw	0C3h
  9803  001C06  0100               	movlb	0	; () banked
  9804  001C08  17B6               	andwf	(??_SetChanADC+0+0)&0ffh
  9805  001C0A  0100               	movlb	0	; () banked
  9806  001C0C  0100               	movlb	0	; () banked
  9807  001C0E  90D8               	bcf	status,0
  9808  001C10  31B5               	rrcf	((SetChanADC@channel))&0ffh,w
  9809  001C12  0B3C               	andlw	low(03Ch)
  9810  001C14  0100               	movlb	0	; () banked
  9811  001C16  11B6               	iorwf	(??_SetChanADC+0+0)&0ffh,w
  9812  001C18  6EC2               	movwf	((c:4034)),c	;volatile
  9813                           	line	36
  9814                           	
  9815  001C1A                     l16425:; BSR set to: 0
  9816                           
  9817  001C1A  0012               	return
  9818                           	opt stack 0
  9819                           GLOBAL	__end_of_SetChanADC
  9820  001C1C                     	__end_of_SetChanADC:
  9821                           	signat	_SetChanADC,4216
  9822                           	global	_ConvertADC
  9823                           
  9824 ;; *************** function _ConvertADC *****************
  9825 ;; Defined at:
  9826 ;;		line 23 in file "plib/ADC/adcconv.c"
  9827 ;; Parameters:    Size  Location     Type
  9828 ;;		None
  9829 ;; Auto vars:     Size  Location     Type
  9830 ;;		None
  9831 ;; Return value:  Size  Location     Type
  9832 ;;		None               void
  9833 ;; Registers used:
  9834 ;;		None
  9835 ;; Tracked objects:
  9836 ;;		On entry : 0/0
  9837 ;;		On exit  : 0/0
  9838 ;;		Unchanged: 0/0
  9839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9840 ;;      Params:         0       0       0       0       0
  9841 ;;      Locals:         0       0       0       0       0
  9842 ;;      Temps:          0       0       0       0       0
  9843 ;;      Totals:         0       0       0       0       0
  9844 ;;Total ram usage:        0 bytes
  9845 ;; Hardware stack levels used:    1
  9846 ;; Hardware stack levels required when called:   10
  9847 ;; This function calls:
  9848 ;;		Nothing
  9849 ;; This function is called by:
  9850 ;;		_timer1_lthread
  9851 ;; This function uses a non-reentrant model
  9852 ;;
  9853                           psect	text27,class=CODE,space=0,reloc=2
  9854                           global __ptext27
  9855  001CC6                     __ptext27:
  9856                           psect	text27
  9857                           	file	"plib/ADC/adcconv.c"
  9858                           	line	23
  9859                           	global	__size_of_ConvertADC
  9860  0000                     	__size_of_ConvertADC	equ	__end_of_ConvertADC-_ConvertADC
  9861                           	
  9862  001CC6                     _ConvertADC:; BSR set to: 0
  9863                           
  9864                           	opt	stack 19
  9865                           	line	24
  9866                           	
  9867  001CC6                     l18649:
  9868  001CC6  82C2               	bsf	((c:4034)),c,1	;volatile
  9869                           	line	25
  9870                           	
  9871  001CC8                     l16395:
  9872  001CC8  0012               	return
  9873                           	opt stack 0
  9874                           GLOBAL	__end_of_ConvertADC
  9875  001CCA                     	__end_of_ConvertADC:
  9876                           	signat	_ConvertADC,88
  9877                           	global	_InterruptHandlerLow
  9878                           
  9879 ;; *************** function _InterruptHandlerLow *****************
  9880 ;; Defined at:
  9881 ;;		line 122 in file "../src/interrupts.c"
  9882 ;; Parameters:    Size  Location     Type
  9883 ;;		None
  9884 ;; Auto vars:     Size  Location     Type
  9885 ;;		None
  9886 ;; Return value:  Size  Location     Type
  9887 ;;		None               void
  9888 ;; Registers used:
  9889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9890 ;; Tracked objects:
  9891 ;;		On entry : 0/0
  9892 ;;		On exit  : 0/0
  9893 ;;		Unchanged: 0/0
  9894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9895 ;;      Params:         0       0       0       0       0
  9896 ;;      Locals:         0       0       0       0       0
  9897 ;;      Temps:         17       0       0       0       0
  9898 ;;      Totals:        17       0       0       0       0
  9899 ;;Total ram usage:       17 bytes
  9900 ;; Hardware stack levels used:    1
  9901 ;; Hardware stack levels required when called:    9
  9902 ;; This function calls:
  9903 ;;		_timer1_int_handler
  9904 ;;		_adc_int_handler
  9905 ;;		_uart_recv_int_handler
  9906 ;; This function is called by:
  9907 ;;		Interrupt level 1
  9908 ;; This function uses a non-reentrant model
  9909 ;;
  9910                           psect	intcodelo,class=CODE,space=0,reloc=2
  9911                           global __pintcodelo
  9912  000018                     __pintcodelo:
  9913                           psect	intcodelo
  9914                           	file	"../src/interrupts.c"
  9915                           	line	122
  9916                           	global	__size_of_InterruptHandlerLow
  9917  0000                     	__size_of_InterruptHandlerLow	equ	__end_of_InterruptHandlerLow-_InterruptHandlerLow
  9918                           	
  9919  000018                     _InterruptHandlerLow:
  9920                           	opt	stack 17
  9921  000018  CFD8 F022          	movff	status+0,??_InterruptHandlerLow+0
  9922  00001C  CFE8 F023          	movff	wreg+0,??_InterruptHandlerLow+1
  9923  000020  CFE0 F024          	movff	bsr+0,??_InterruptHandlerLow+2
  9924  000024  CFFA F025          	movff	pclat+0,??_InterruptHandlerLow+3
  9925  000028  CFFB F026          	movff	pclat+1,??_InterruptHandlerLow+4
  9926  00002C  CFE9 F027          	movff	fsr0l+0,??_InterruptHandlerLow+5
  9927  000030  CFEA F028          	movff	fsr0h+0,??_InterruptHandlerLow+6
  9928  000034  CFE1 F029          	movff	fsr1l+0,??_InterruptHandlerLow+7
  9929  000038  CFE2 F02A          	movff	fsr1h+0,??_InterruptHandlerLow+8
  9930  00003C  CFD9 F02B          	movff	fsr2l+0,??_InterruptHandlerLow+9
  9931  000040  CFDA F02C          	movff	fsr2h+0,??_InterruptHandlerLow+10
  9932  000044  CFF3 F02D          	movff	prodl+0,??_InterruptHandlerLow+11
  9933  000048  CFF4 F02E          	movff	prodh+0,??_InterruptHandlerLow+12
  9934  00004C  CFF6 F02F          	movff	tblptrl+0,??_InterruptHandlerLow+13
  9935  000050  CFF7 F030          	movff	tblptrh+0,??_InterruptHandlerLow+14
  9936  000054  CFF8 F031          	movff	tblptru+0,??_InterruptHandlerLow+15
  9937  000058  CFF5 F032          	movff	tablat+0,??_InterruptHandlerLow+16
  9938                           	line	124
  9939                           	
  9940  00005C                     i1l18823:
  9941                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  9942                           	
  9943  00005C  A09E               	btfss	((c:3998)),c,0	;volatile
  9944  00005E  D001               	goto	i1u184_21
  9945  000060  D001               	goto	i1u184_20
  9946  000062                     i1u184_21:
  9947  000062  D004               	goto	i1l18829
  9948  000064                     i1u184_20:
  9949                           	line	125
  9950                           	
  9951  000064                     i1l18825:
  9952                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  9953  000064  909E               	bcf	((c:3998)),c,0	;volatile
  9954                           	line	126
  9955                           	
  9956  000066                     i1l18827:
  9957                           ;interrupts.c: 126: timer1_int_handler();
  9958  000066  ECDF  F00C         	call	_timer1_int_handler	;wreg free
  9959  00006A  D000               	goto	i1l18829
  9960                           	line	127
  9961                           	
  9962  00006C                     i1l1825:
  9963                           	line	130
  9964                           	
  9965  00006C                     i1l18829:
  9966                           ;interrupts.c: 127: }
  9967                           ;interrupts.c: 130: if(PIR1bits.ADIF){
  9968                           	
  9969  00006C  AC9E               	btfss	((c:3998)),c,6	;volatile
  9970  00006E  D001               	goto	i1u185_21
  9971  000070  D001               	goto	i1u185_20
  9972  000072                     i1u185_21:
  9973  000072  D004               	goto	i1l18835
  9974  000074                     i1u185_20:
  9975                           	line	131
  9976                           	
  9977  000074                     i1l18831:
  9978                           ;interrupts.c: 131: PIR1bits.ADIF = 0;
  9979  000074  9C9E               	bcf	((c:3998)),c,6	;volatile
  9980                           	line	132
  9981                           	
  9982  000076                     i1l18833:
  9983                           ;interrupts.c: 132: adc_int_handler();
  9984  000076  EC9F  F00C         	call	_adc_int_handler	;wreg free
  9985  00007A  D000               	goto	i1l18835
  9986                           	line	133
  9987                           	
  9988  00007C                     i1l1826:
  9989                           	line	136
  9990                           	
  9991  00007C                     i1l18835:
  9992                           ;interrupts.c: 133: }
  9993                           ;interrupts.c: 136: if (PIR1bits.RCIF) {
  9994                           	
  9995  00007C  AA9E               	btfss	((c:3998)),c,5	;volatile
  9996  00007E  D001               	goto	i1u186_21
  9997  000080  D001               	goto	i1u186_20
  9998  000082                     i1u186_21:
  9999  000082  D004               	goto	i1l1828
 10000  000084                     i1u186_20:
 10001                           	line	137
 10002                           	
 10003  000084                     i1l18837:
 10004                           ;interrupts.c: 137: PIR1bits.RCIF = 0;
 10005  000084  9A9E               	bcf	((c:3998)),c,5	;volatile
 10006                           	line	138
 10007                           	
 10008  000086                     i1l18839:
 10009                           ;interrupts.c: 138: uart_recv_int_handler();
 10010  000086  EC71  F008         	call	_uart_recv_int_handler	;wreg free
 10011  00008A  D000               	goto	i1l1828
 10012                           	line	139
 10013                           	
 10014  00008C                     i1l1827:
 10015                           	line	140
 10016                           	
 10017  00008C                     i1l1828:
 10018  00008C  C032  FFF5         	movff	??_InterruptHandlerLow+16,tablat+0
 10019  000090  C031  FFF8         	movff	??_InterruptHandlerLow+15,tblptru+0
 10020  000094  C030  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh+0
 10021  000098  C02F  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl+0
 10022  00009C  C02E  FFF4         	movff	??_InterruptHandlerLow+12,prodh+0
 10023  0000A0  C02D  FFF3         	movff	??_InterruptHandlerLow+11,prodl+0
 10024  0000A4  C02C  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h+0
 10025  0000A8  C02B  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l+0
 10026  0000AC  C02A  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h+0
 10027  0000B0  C029  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l+0
 10028  0000B4  C028  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h+0
 10029  0000B8  C027  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l+0
 10030  0000BC  C026  FFFB         	movff	??_InterruptHandlerLow+4,pclat+1
 10031  0000C0  C025  FFFA         	movff	??_InterruptHandlerLow+3,pclat+0
 10032  0000C4  C024  FFE0         	movff	??_InterruptHandlerLow+2,bsr+0
 10033  0000C8  C023  FFE8         	movff	??_InterruptHandlerLow+1,wreg+0
 10034  0000CC  C022  FFD8         	movff	??_InterruptHandlerLow+0,status+0
 10035  0000D0  0010               	retfie
 10036                           	opt stack 0
 10037                           GLOBAL	__end_of_InterruptHandlerLow
 10038  0000D2                     	__end_of_InterruptHandlerLow:
 10039                           	signat	_InterruptHandlerLow,1112
 10040                           	global	_timer1_int_handler
 10041                           
 10042 ;; *************** function _timer1_int_handler *****************
 10043 ;; Defined at:
 10044 ;;		line 35 in file "../src/user_interrupts.c"
 10045 ;; Parameters:    Size  Location     Type
 10046 ;;		None
 10047 ;; Auto vars:     Size  Location     Type
 10048 ;;  result          2   30[COMRAM] unsigned int 
 10049 ;;  temp            2   28[COMRAM] unsigned int 
 10050 ;; Return value:  Size  Location     Type
 10051 ;;		None               void
 10052 ;; Registers used:
 10053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10054 ;; Tracked objects:
 10055 ;;		On entry : 0/0
 10056 ;;		On exit  : 0/0
 10057 ;;		Unchanged: 0/0
 10058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10059 ;;      Params:         0       0       0       0       0
 10060 ;;      Locals:         4       0       0       0       0
 10061 ;;      Temps:          2       0       0       0       0
 10062 ;;      Totals:         6       0       0       0       0
 10063 ;;Total ram usage:        6 bytes
 10064 ;; Hardware stack levels used:    1
 10065 ;; Hardware stack levels required when called:    8
 10066 ;; This function calls:
 10067 ;;		_ReadTimer1
 10068 ;;		_ToMainLow_sendmsg
 10069 ;;		_WriteTimer1
 10070 ;; This function is called by:
 10071 ;;		_InterruptHandlerLow
 10072 ;; This function uses a non-reentrant model
 10073 ;;
 10074                           psect	text29,class=CODE,space=0,reloc=2
 10075                           global __ptext29
 10076  0019BE                     __ptext29:
 10077                           psect	text29
 10078                           	file	"../src/user_interrupts.c"
 10079                           	line	35
 10080                           	global	__size_of_timer1_int_handler
 10081  0000                     	__size_of_timer1_int_handler	equ	__end_of_timer1_int_handler-_timer1_int_handler
 10082                           	
 10083  0019BE                     _timer1_int_handler:
 10084                           	opt	stack 17
 10085                           	line	40
 10086                           	
 10087  0019BE                     i1l18785:
 10088                           ;user_interrupts.c: 36: unsigned int result;
 10089                           ;user_interrupts.c: 40: result = ReadTimer1();
 10090  0019BE  EC2F  F00E         	call	_ReadTimer1	;wreg free
 10091  0019C2  C001  F01F         	movff	0+?_ReadTimer1,(c:timer1_int_handler@result)
 10092  0019C6  C002  F020         	movff	1+?_ReadTimer1,(c:timer1_int_handler@result+1)
 10093                           	line	41
 10094                           	
 10095  0019CA                     i1l18787:
 10096                           ;user_interrupts.c: 41: ToMainLow_sendmsg(sizeof(result), 11, (void *) &result);
 10097  0019CA  6E1B               	movwf	(??_timer1_int_handler+0+0)&0ffh,c
 10098  0019CC  0E02               	movlw	low(02h)
 10099  0019CE  6E17               	movwf	((c:?_ToMainLow_sendmsg)),c
 10100  0019D0  501B               	movf	(??_timer1_int_handler+0+0)&0ffh,c,w
 10101  0019D2  6E1C               	movwf	(??_timer1_int_handler+1+0)&0ffh,c
 10102  0019D4  0E0B               	movlw	low(0Bh)
 10103  0019D6  6E18               	movwf	(0+((c:?_ToMainLow_sendmsg)+01h)),c
 10104  0019D8  501C               	movf	(??_timer1_int_handler+1+0)&0ffh,c,w
 10105  0019DA  0E00               	movlw	high((c:timer1_int_handler@result))
 10106  0019DC  6E1A               	movwf	(1+((c:?_ToMainLow_sendmsg)+02h)),c
 10107  0019DE  0E1F               	movlw	low((c:timer1_int_handler@result))
 10108  0019E0  6E19               	movwf	(0+((c:?_ToMainLow_sendmsg)+02h)),c
 10109  0019E2  ECDC  F00D         	call	_ToMainLow_sendmsg	;wreg free
 10110                           	line	44
 10111                           	
 10112  0019E6                     i1l18789:
 10113                           ;user_interrupts.c: 44: unsigned int temp = 0x1;
 10114  0019E6  0E00               	movlw	high(01h)
 10115  0019E8  6E1E               	movwf	((c:timer1_int_handler@temp+1)),c
 10116  0019EA  0E01               	movlw	low(01h)
 10117  0019EC  6E1D               	movwf	((c:timer1_int_handler@temp)),c
 10118                           	line	45
 10119                           	
 10120  0019EE                     i1l18791:
 10121                           ;user_interrupts.c: 45: WriteTimer1(temp);
 10122  0019EE  C01D  F001         	movff	(c:timer1_int_handler@temp),(c:?_WriteTimer1)
 10123  0019F2  C01E  F002         	movff	(c:timer1_int_handler@temp+1),(c:?_WriteTimer1+1)
 10124  0019F6  EC38  F00E         	call	_WriteTimer1	;wreg free
 10125                           	line	46
 10126                           	
 10127  0019FA                     i1l16387:
 10128  0019FA  0012               	return
 10129                           	opt stack 0
 10130                           GLOBAL	__end_of_timer1_int_handler
 10131  0019FC                     	__end_of_timer1_int_handler:
 10132                           	signat	_timer1_int_handler,88
 10133                           	global	_adc_int_handler
 10134                           
 10135 ;; *************** function _adc_int_handler *****************
 10136 ;; Defined at:
 10137 ;;		line 48 in file "../src/user_interrupts.c"
 10138 ;; Parameters:    Size  Location     Type
 10139 ;;		None
 10140 ;; Auto vars:     Size  Location     Type
 10141 ;;  message         3   28[COMRAM] unsigned char [3]
 10142 ;;  value           2   31[COMRAM] unsigned int 
 10143 ;; Return value:  Size  Location     Type
 10144 ;;		None               void
 10145 ;; Registers used:
 10146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10147 ;; Tracked objects:
 10148 ;;		On entry : 0/0
 10149 ;;		On exit  : 0/0
 10150 ;;		Unchanged: 0/0
 10151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10152 ;;      Params:         0       0       0       0       0
 10153 ;;      Locals:         5       0       0       0       0
 10154 ;;      Temps:          2       0       0       0       0
 10155 ;;      Totals:         7       0       0       0       0
 10156 ;;Total ram usage:        7 bytes
 10157 ;; Hardware stack levels used:    1
 10158 ;; Hardware stack levels required when called:    8
 10159 ;; This function calls:
 10160 ;;		_ReadADC
 10161 ;;		_ToMainLow_sendmsg
 10162 ;; This function is called by:
 10163 ;;		_InterruptHandlerLow
 10164 ;; This function uses a non-reentrant model
 10165 ;;
 10166                           psect	text30,class=CODE,space=0,reloc=2
 10167                           global __ptext30
 10168  00193E                     __ptext30:
 10169                           psect	text30
 10170                           	file	"../src/user_interrupts.c"
 10171                           	line	48
 10172                           	global	__size_of_adc_int_handler
 10173  0000                     	__size_of_adc_int_handler	equ	__end_of_adc_int_handler-_adc_int_handler
 10174                           	
 10175  00193E                     _adc_int_handler:
 10176                           	opt	stack 17
 10177                           	line	49
 10178                           	
 10179  00193E                     i1l18793:
 10180                           ;user_interrupts.c: 49: unsigned int value = ReadADC();
 10181  00193E  EC51  F00E         	call	_ReadADC	;wreg free
 10182  001942  C001  F020         	movff	0+?_ReadADC,(c:adc_int_handler@value)
 10183  001946  C002  F021         	movff	1+?_ReadADC,(c:adc_int_handler@value+1)
 10184                           	line	50
 10185                           	
 10186  00194A                     i1l18795:
 10187                           ;user_interrupts.c: 50: value = 0x105;
 10188  00194A  0E01               	movlw	high(0105h)
 10189  00194C  6E21               	movwf	((c:adc_int_handler@value+1)),c
 10190  00194E  0E05               	movlw	low(0105h)
 10191  001950  6E20               	movwf	((c:adc_int_handler@value)),c
 10192                           	line	52
 10193                           	
 10194  001952                     i1l18797:
 10195                           ;user_interrupts.c: 51: unsigned char message[3];
 10196                           ;user_interrupts.c: 52: message[0] = (unsigned char)(0xFF & value);
 10197  001952  C020  F01D         	movff	(c:adc_int_handler@value),(c:adc_int_handler@message)
 10198                           	line	53
 10199                           	
 10200  001956                     i1l18799:
 10201                           ;user_interrupts.c: 53: message[1] = (unsigned char)(0xFF & (value>>8));
 10202  001956  5021               	movf	((c:adc_int_handler@value+1)),c,w
 10203  001958  6E1E               	movwf	(0+((c:adc_int_handler@message)+01h)),c
 10204                           	line	54
 10205                           	
 10206  00195A                     i1l18801:
 10207                           ;user_interrupts.c: 54: message[2] = 0x10;
 10208  00195A  6E1B               	movwf	(??_adc_int_handler+0+0)&0ffh,c
 10209  00195C  0E10               	movlw	low(010h)
 10210  00195E  6E1F               	movwf	(0+((c:adc_int_handler@message)+02h)),c
 10211  001960  501B               	movf	(??_adc_int_handler+0+0)&0ffh,c,w
 10212                           	line	55
 10213                           	
 10214  001962                     i1l18803:
 10215                           ;user_interrupts.c: 55: ToMainLow_sendmsg(3,40,(void *) message);
 10216  001962  6E1B               	movwf	(??_adc_int_handler+0+0)&0ffh,c
 10217  001964  0E03               	movlw	low(03h)
 10218  001966  6E17               	movwf	((c:?_ToMainLow_sendmsg)),c
 10219  001968  501B               	movf	(??_adc_int_handler+0+0)&0ffh,c,w
 10220  00196A  6E1C               	movwf	(??_adc_int_handler+1+0)&0ffh,c
 10221  00196C  0E28               	movlw	low(028h)
 10222  00196E  6E18               	movwf	(0+((c:?_ToMainLow_sendmsg)+01h)),c
 10223  001970  501C               	movf	(??_adc_int_handler+1+0)&0ffh,c,w
 10224  001972  0E00               	movlw	high((c:adc_int_handler@message))
 10225  001974  6E1A               	movwf	(1+((c:?_ToMainLow_sendmsg)+02h)),c
 10226  001976  0E1D               	movlw	low((c:adc_int_handler@message))
 10227  001978  6E19               	movwf	(0+((c:?_ToMainLow_sendmsg)+02h)),c
 10228  00197A  ECDC  F00D         	call	_ToMainLow_sendmsg	;wreg free
 10229                           	line	56
 10230                           	
 10231  00197E                     i1l16390:
 10232  00197E  0012               	return
 10233                           	opt stack 0
 10234                           GLOBAL	__end_of_adc_int_handler
 10235  001980                     	__end_of_adc_int_handler:
 10236                           	signat	_adc_int_handler,88
 10237                           	global	_uart_recv_int_handler
 10238                           
 10239 ;; *************** function _uart_recv_int_handler *****************
 10240 ;; Defined at:
 10241 ;;		line 11 in file "../src/my_uart.c"
 10242 ;; Parameters:    Size  Location     Type
 10243 ;;		None
 10244 ;; Auto vars:     Size  Location     Type
 10245 ;;		None
 10246 ;; Return value:  Size  Location     Type
 10247 ;;		None               void
 10248 ;; Registers used:
 10249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10250 ;; Tracked objects:
 10251 ;;		On entry : 0/0
 10252 ;;		On exit  : 0/0
 10253 ;;		Unchanged: 0/0
 10254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10255 ;;      Params:         0       0       0       0       0
 10256 ;;      Locals:         0       0       0       0       0
 10257 ;;      Temps:          2       0       0       0       0
 10258 ;;      Totals:         2       0       0       0       0
 10259 ;;Total ram usage:        2 bytes
 10260 ;; Hardware stack levels used:    1
 10261 ;; Hardware stack levels required when called:    8
 10262 ;; This function calls:
 10263 ;;		_ReadUSART
 10264 ;;		_ToMainLow_sendmsg
 10265 ;; This function is called by:
 10266 ;;		_InterruptHandlerLow
 10267 ;; This function uses a non-reentrant model
 10268 ;;
 10269                           psect	text31,class=CODE,space=0,reloc=2
 10270                           global __ptext31
 10271  0010E2                     __ptext31:
 10272                           psect	text31
 10273                           	file	"../src/my_uart.c"
 10274                           	line	11
 10275                           	global	__size_of_uart_recv_int_handler
 10276  0000                     	__size_of_uart_recv_int_handler	equ	__end_of_uart_recv_int_handler-_uart_recv_int_handl
                                 er
 10277                           	
 10278  0010E2                     _uart_recv_int_handler:
 10279                           	opt	stack 17
 10280                           	line	12
 10281                           	
 10282  0010E2                     i1l18805:
 10283                           ;my_uart.c: 12: if ((PIR1bits.RCIF)) {
 10284                           	
 10285  0010E2  AA9E               	btfss	((c:3998)),c,5	;volatile
 10286  0010E4  D001               	goto	i1u181_21
 10287  0010E6  D001               	goto	i1u181_20
 10288  0010E8                     i1u181_21:
 10289  0010E8  D041               	goto	i1l18817
 10290  0010EA                     i1u181_20:
 10291                           	line	13
 10292                           	
 10293  0010EA                     i1l18807:
 10294                           ;my_uart.c: 13: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
 10295  0010EA  EE20 F004          	lfsr	2,04h
 10296  0010EE  504B               	movf	((c:_uc_ptr)),c,w
 10297  0010F0  26D9               	addwf	fsr2l
 10298  0010F2  504C               	movf	((c:_uc_ptr+1)),c,w
 10299  0010F4  22DA               	addwfc	fsr2h
 10300  0010F6  50DF               	movf	indf2,w
 10301  0010F8  6E1B               	movwf	(??_uart_recv_int_handler+0+0)&0ffh,c
 10302  0010FA  501B               	movf	((??_uart_recv_int_handler+0+0)),c,w
 10303  0010FC  0D01               	mullw	01h
 10304  0010FE  50F3               	movf	(prodl),c,w
 10305  001100  244B               	addwf	((c:_uc_ptr)),c,w
 10306  001102  6ED9               	movwf	c:fsr2l
 10307  001104  50F4               	movf	(prodh),c,w
 10308  001106  204C               	addwfc	((c:_uc_ptr+1)),c,w
 10309  001108  6EDA               	movwf	1+c:fsr2l
 10310  00110A  EC1A  F00D         	call	_ReadUSART	;wreg free
 10311  00110E  6EDF               	movwf	indf2
 10312                           
 10313                           	line	14
 10314                           	
 10315  001110                     i1l18809:
 10316                           ;my_uart.c: 14: uc_ptr->buflen++;
 10317  001110  EE20 F004          	lfsr	2,04h
 10318  001114  504B               	movf	((c:_uc_ptr)),c,w
 10319  001116  26D9               	addwf	fsr2l
 10320  001118  504C               	movf	((c:_uc_ptr+1)),c,w
 10321  00111A  22DA               	addwfc	fsr2h
 10322  00111C  2ADF               	incf	indf2
 10323                           
 10324                           	line	16
 10325                           	
 10326  00111E                     i1l18811:
 10327                           ;my_uart.c: 16: if (uc_ptr->buflen == 4) {
 10328  00111E  EE20 F004          	lfsr	2,04h
 10329  001122  504B               	movf	((c:_uc_ptr)),c,w
 10330  001124  26D9               	addwf	fsr2l
 10331  001126  504C               	movf	((c:_uc_ptr+1)),c,w
 10332  001128  22DA               	addwfc	fsr2h
 10333  00112A  0E04               	movlw	(04h)&0ffh
 10334  00112C  62DF               	cpfseq	indf2
 10335  00112E  D001               	goto	i1u182_21
 10336  001130  D001               	goto	i1u182_20
 10337  001132                     i1u182_21:
 10338  001132  D01C               	goto	i1l18817
 10339  001134                     i1u182_20:
 10340                           	line	17
 10341                           	
 10342  001134                     i1l18813:
 10343                           ;my_uart.c: 17: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
 10344  001134  EE20 F004          	lfsr	2,04h
 10345  001138  504B               	movf	((c:_uc_ptr)),c,w
 10346  00113A  26D9               	addwf	fsr2l
 10347  00113C  504C               	movf	((c:_uc_ptr+1)),c,w
 10348  00113E  22DA               	addwfc	fsr2h
 10349  001140  50DF               	movf	indf2,w
 10350  001142  6E17               	movwf	((c:?_ToMainLow_sendmsg)),c
 10351  001144  6E1B               	movwf	(??_uart_recv_int_handler+0+0)&0ffh,c
 10352  001146  0E1F               	movlw	low(01Fh)
 10353  001148  6E18               	movwf	(0+((c:?_ToMainLow_sendmsg)+01h)),c
 10354  00114A  501B               	movf	(??_uart_recv_int_handler+0+0)&0ffh,c,w
 10355  00114C  C04B  F019         	movff	(c:_uc_ptr),0+((c:?_ToMainLow_sendmsg)+02h)
 10356  001150  C04C  F01A         	movff	(c:_uc_ptr+1),1+((c:?_ToMainLow_sendmsg)+02h)
 10357  001154  ECDC  F00D         	call	_ToMainLow_sendmsg	;wreg free
 10358                           	line	18
 10359                           	
 10360  001158                     i1l18815:
 10361                           ;my_uart.c: 18: uc_ptr->buflen = 0;
 10362  001158  EE20 F004          	lfsr	2,04h
 10363  00115C  504B               	movf	((c:_uc_ptr)),c,w
 10364  00115E  26D9               	addwf	fsr2l
 10365  001160  504C               	movf	((c:_uc_ptr+1)),c,w
 10366  001162  22DA               	addwfc	fsr2h
 10367  001164  0E00               	movlw	low(0)
 10368  001166  6EDF               	movwf	indf2
 10369  001168  D001               	goto	i1l18817
 10370                           	line	19
 10371                           	
 10372  00116A                     i1l9204:
 10373  00116A  D000               	goto	i1l18817
 10374                           	line	20
 10375                           	
 10376  00116C                     i1l9203:
 10377                           	line	21
 10378                           	
 10379  00116C                     i1l18817:
 10380                           ;my_uart.c: 19: }
 10381                           ;my_uart.c: 20: }
 10382                           ;my_uart.c: 21: if (USART_Status.OVERRUN_ERROR == 1) {
 10383                           	
 10384  00116C  A648               	btfss	((c:_USART_Status)),c,3
 10385  00116E  D001               	goto	i1u183_21
 10386  001170  D001               	goto	i1u183_20
 10387  001172                     i1u183_21:
 10388  001172  D011               	goto	i1l9206
 10389  001174                     i1u183_20:
 10390                           	line	24
 10391                           	
 10392  001174                     i1l18819:
 10393                           ;my_uart.c: 24: RCSTAbits.CREN = 0;
 10394  001174  98AB               	bcf	((c:4011)),c,4	;volatile
 10395                           	line	25
 10396                           ;my_uart.c: 25: RCSTAbits.CREN = 1;
 10397  001176  88AB               	bsf	((c:4011)),c,4	;volatile
 10398                           	line	26
 10399                           	
 10400  001178                     i1l18821:
 10401                           ;my_uart.c: 26: ToMainLow_sendmsg(0, 30, (void *) 0);
 10402  001178  6E1B               	movwf	(??_uart_recv_int_handler+0+0)&0ffh,c
 10403  00117A  0E00               	movlw	low(0)
 10404  00117C  6E17               	movwf	((c:?_ToMainLow_sendmsg)),c
 10405  00117E  501B               	movf	(??_uart_recv_int_handler+0+0)&0ffh,c,w
 10406  001180  6E1C               	movwf	(??_uart_recv_int_handler+1+0)&0ffh,c
 10407  001182  0E1E               	movlw	low(01Eh)
 10408  001184  6E18               	movwf	(0+((c:?_ToMainLow_sendmsg)+01h)),c
 10409  001186  501C               	movf	(??_uart_recv_int_handler+1+0)&0ffh,c,w
 10410  001188  0E00               	movlw	high(0)
 10411  00118A  6E1A               	movwf	(1+((c:?_ToMainLow_sendmsg)+02h)),c
 10412  00118C  0E00               	movlw	low(0)
 10413  00118E  6E19               	movwf	(0+((c:?_ToMainLow_sendmsg)+02h)),c
 10414  001190  ECDC  F00D         	call	_ToMainLow_sendmsg	;wreg free
 10415  001194  D000               	goto	i1l9206
 10416                           	line	27
 10417                           	
 10418  001196                     i1l9205:
 10419                           	line	28
 10420                           	
 10421  001196                     i1l9206:
 10422  001196  0012               	return
 10423                           	opt stack 0
 10424                           GLOBAL	__end_of_uart_recv_int_handler
 10425  001198                     	__end_of_uart_recv_int_handler:
 10426                           	signat	_uart_recv_int_handler,88
 10427                           	global	_ToMainLow_sendmsg
 10428                           
 10429 ;; *************** function _ToMainLow_sendmsg *****************
 10430 ;; Defined at:
 10431 ;;		line 103 in file "../src/messages.c"
 10432 ;; Parameters:    Size  Location     Type
 10433 ;;  length          1   22[COMRAM] unsigned char 
 10434 ;;  msgtype         1   23[COMRAM] unsigned char 
 10435 ;;  data            2   24[COMRAM] PTR void 
 10436 ;;		 -> adc_int_handler@message(3), timer1_int_handler@result(2), NULL(0), main@uc(5), 
 10437 ;; Auto vars:     Size  Location     Type
 10438 ;;		None
 10439 ;; Return value:  Size  Location     Type
 10440 ;;                  1    wreg      char 
 10441 ;; Registers used:
 10442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10443 ;; Tracked objects:
 10444 ;;		On entry : 0/0
 10445 ;;		On exit  : 0/0
 10446 ;;		Unchanged: 0/0
 10447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10448 ;;      Params:         4       0       0       0       0
 10449 ;;      Locals:         0       0       0       0       0
 10450 ;;      Temps:          0       0       0       0       0
 10451 ;;      Totals:         4       0       0       0       0
 10452 ;;Total ram usage:        4 bytes
 10453 ;; Hardware stack levels used:    1
 10454 ;; Hardware stack levels required when called:    7
 10455 ;; This function calls:
 10456 ;;		i1_send_msg
 10457 ;; This function is called by:
 10458 ;;		_uart_recv_int_handler
 10459 ;;		_timer1_int_handler
 10460 ;;		_adc_int_handler
 10461 ;; This function uses a non-reentrant model
 10462 ;;
 10463                           psect	text32,class=CODE,space=0,reloc=2
 10464                           global __ptext32
 10465  001BB8                     __ptext32:
 10466                           psect	text32
 10467                           	file	"../src/messages.c"
 10468                           	line	103
 10469                           	global	__size_of_ToMainLow_sendmsg
 10470  0000                     	__size_of_ToMainLow_sendmsg	equ	__end_of_ToMainLow_sendmsg-_ToMainLow_sendmsg
 10471                           	
 10472  001BB8                     _ToMainLow_sendmsg:
 10473                           	opt	stack 17
 10474                           	line	109
 10475                           	
 10476  001BB8                     i1l18781:
 10477                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
 10478                           ;	Return value of _ToMainLow_sendmsg is never used
 10479  001BB8  0101               	movlb	1	; () banked
 10480  001BBA  0E01               	movlw	high(_ToMainLow_MQ)
 10481  001BBC  6E0C               	movwf	((c:?i1_send_msg+1)),c
 10482  001BBE  0101               	movlb	1	; () banked
 10483  001BC0  0E6C               	movlw	low(_ToMainLow_MQ)
 10484  001BC2  6E0B               	movwf	((c:?i1_send_msg)),c
 10485  001BC4  C017  F00D         	movff	(c:ToMainLow_sendmsg@length),0+((c:?i1_send_msg)+02h)
 10486  001BC8  C018  F00E         	movff	(c:ToMainLow_sendmsg@msgtype),0+((c:?i1_send_msg)+03h)
 10487  001BCC  C019  F00F         	movff	(c:ToMainLow_sendmsg@data),0+((c:?i1_send_msg)+04h)
 10488  001BD0  C01A  F010         	movff	(c:ToMainLow_sendmsg@data+1),1+((c:?i1_send_msg)+04h)
 10489  001BD4  EC26  F009         	call	i1_send_msg	;wreg free
 10490  001BD8  D000               	goto	i1l5485
 10491                           	
 10492  001BDA                     i1l18783:
 10493                           	line	110
 10494                           	
 10495  001BDA                     i1l5485:
 10496  001BDA  0012               	return
 10497                           	opt stack 0
 10498                           GLOBAL	__end_of_ToMainLow_sendmsg
 10499  001BDC                     	__end_of_ToMainLow_sendmsg:
 10500                           	signat	_ToMainLow_sendmsg,12409
 10501                           	global	_ReadUSART
 10502                           
 10503 ;; *************** function _ReadUSART *****************
 10504 ;; Defined at:
 10505 ;;		line 16 in file "plib/USART/uread.c"
 10506 ;; Parameters:    Size  Location     Type
 10507 ;;		None
 10508 ;; Auto vars:     Size  Location     Type
 10509 ;;  data            1    0[COMRAM] unsigned char 
 10510 ;; Return value:  Size  Location     Type
 10511 ;;                  1    wreg      unsigned char 
 10512 ;; Registers used:
 10513 ;;		wreg, status,2, status,0
 10514 ;; Tracked objects:
 10515 ;;		On entry : 0/0
 10516 ;;		On exit  : 0/0
 10517 ;;		Unchanged: 0/0
 10518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10519 ;;      Params:         0       0       0       0       0
 10520 ;;      Locals:         1       0       0       0       0
 10521 ;;      Temps:          0       0       0       0       0
 10522 ;;      Totals:         1       0       0       0       0
 10523 ;;Total ram usage:        1 bytes
 10524 ;; Hardware stack levels used:    1
 10525 ;; Hardware stack levels required when called:    5
 10526 ;; This function calls:
 10527 ;;		Nothing
 10528 ;; This function is called by:
 10529 ;;		_uart_recv_int_handler
 10530 ;; This function uses a non-reentrant model
 10531 ;;
 10532                           psect	text33,class=CODE,space=0,reloc=2
 10533                           global __ptext33
 10534  001A34                     __ptext33:
 10535                           psect	text33
 10536                           	file	"plib/USART/uread.c"
 10537                           	line	16
 10538                           	global	__size_of_ReadUSART
 10539  0000                     	__size_of_ReadUSART	equ	__end_of_ReadUSART-_ReadUSART
 10540                           	
 10541  001A34                     _ReadUSART:
 10542                           	opt	stack 19
 10543                           	line	19
 10544                           	
 10545  001A34                     i1l18619:
 10546  001A34  0EF2               	movlw	(0F2h)&0ffh
 10547  001A36  1648               	andwf	((c:_USART_Status)),c
 10548                           	line	21
 10549                           	
 10550  001A38                     i1l18621:
 10551                           	
 10552  001A38  ACAB               	btfss	((c:4011)),c,6	;volatile
 10553  001A3A  D001               	goto	i1u168_21
 10554  001A3C  D001               	goto	i1u168_20
 10555  001A3E                     i1u168_21:
 10556  001A3E  D007               	goto	i1l16511
 10557  001A40                     i1u168_20:
 10558                           	line	23
 10559                           	
 10560  001A40                     i1l18623:
 10561  001A40  9048               	bcf	((c:_USART_Status)),c,0
 10562                           	line	24
 10563                           	
 10564  001A42  A0AB               	btfss	((c:4011)),c,0	;volatile
 10565  001A44  D001               	goto	i1u169_21
 10566  001A46  D001               	goto	i1u169_20
 10567  001A48                     i1u169_21:
 10568  001A48  D002               	goto	i1l16511
 10569  001A4A                     i1u169_20:
 10570                           	line	25
 10571                           	
 10572  001A4A                     i1l18625:
 10573  001A4A  8048               	bsf	((c:_USART_Status)),c,0
 10574  001A4C  D000               	goto	i1l16511
 10575                           	
 10576  001A4E                     i1l16512:
 10577                           	line	26
 10578                           	
 10579  001A4E                     i1l16511:
 10580                           	line	28
 10581                           	
 10582  001A4E  A4AB               	btfss	((c:4011)),c,2	;volatile
 10583  001A50  D001               	goto	i1u170_21
 10584  001A52  D001               	goto	i1u170_20
 10585  001A54                     i1u170_21:
 10586  001A54  D001               	goto	i1l16513
 10587  001A56                     i1u170_20:
 10588                           	line	29
 10589                           	
 10590  001A56                     i1l18627:
 10591  001A56  8448               	bsf	((c:_USART_Status)),c,2
 10592                           	
 10593  001A58                     i1l16513:
 10594                           	line	31
 10595                           	
 10596  001A58  A2AB               	btfss	((c:4011)),c,1	;volatile
 10597  001A5A  D001               	goto	i1u171_21
 10598  001A5C  D001               	goto	i1u171_20
 10599  001A5E                     i1u171_21:
 10600  001A5E  D001               	goto	i1l16514
 10601  001A60                     i1u171_20:
 10602                           	line	32
 10603                           	
 10604  001A60                     i1l18629:
 10605  001A60  8648               	bsf	((c:_USART_Status)),c,3
 10606                           	
 10607  001A62                     i1l16514:
 10608                           	line	34
 10609  001A62  CFAE F001          	movff	(c:4014),(c:ReadUSART@data)	;volatile
 10610                           	line	36
 10611                           	
 10612  001A66                     i1l18631:
 10613  001A66  5001               	movf	((c:ReadUSART@data)),c,w
 10614  001A68  D000               	goto	i1l16515
 10615                           	
 10616  001A6A                     i1l18633:
 10617                           	line	37
 10618                           	
 10619  001A6A                     i1l16515:
 10620  001A6A  0012               	return
 10621                           	opt stack 0
 10622                           GLOBAL	__end_of_ReadUSART
 10623  001A6C                     	__end_of_ReadUSART:
 10624                           	signat	_ReadUSART,89
 10625                           	global	_ReadTimer1
 10626                           
 10627 ;; *************** function _ReadTimer1 *****************
 10628 ;; Defined at:
 10629 ;;		line 16 in file "plib/Timers/t1read.c"
 10630 ;; Parameters:    Size  Location     Type
 10631 ;;		None
 10632 ;; Auto vars:     Size  Location     Type
 10633 ;;  timer           2    2[COMRAM] struct Timers
 10634 ;; Return value:  Size  Location     Type
 10635 ;;                  2    0[COMRAM] unsigned int 
 10636 ;; Registers used:
 10637 ;;		None
 10638 ;; Tracked objects:
 10639 ;;		On entry : 0/0
 10640 ;;		On exit  : 0/0
 10641 ;;		Unchanged: 0/0
 10642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10643 ;;      Params:         2       0       0       0       0
 10644 ;;      Locals:         2       0       0       0       0
 10645 ;;      Temps:          0       0       0       0       0
 10646 ;;      Totals:         4       0       0       0       0
 10647 ;;Total ram usage:        4 bytes
 10648 ;; Hardware stack levels used:    1
 10649 ;; Hardware stack levels required when called:    5
 10650 ;; This function calls:
 10651 ;;		Nothing
 10652 ;; This function is called by:
 10653 ;;		_timer1_int_handler
 10654 ;; This function uses a non-reentrant model
 10655 ;;
 10656                           psect	text34,class=CODE,space=0,reloc=2
 10657                           global __ptext34
 10658  001C5E                     __ptext34:
 10659                           psect	text34
 10660                           	file	"plib/Timers/t1read.c"
 10661                           	line	16
 10662                           	global	__size_of_ReadTimer1
 10663  0000                     	__size_of_ReadTimer1	equ	__end_of_ReadTimer1-_ReadTimer1
 10664                           	
 10665  001C5E                     _ReadTimer1:
 10666                           	opt	stack 19
 10667                           	line	19
 10668                           	
 10669  001C5E                     i1l17731:
 10670  001C5E  CFCE F003          	movff	(c:4046),(c:ReadTimer1@timer)	;volatile
 10671                           	line	20
 10672  001C62  CFCF F004          	movff	(c:4047),0+((c:ReadTimer1@timer)+01h)	;volatile
 10673                           	line	22
 10674  001C66  C003  F001         	movff	(c:ReadTimer1@timer),(c:?_ReadTimer1)
 10675  001C6A  C004  F002         	movff	(c:ReadTimer1@timer+1),(c:?_ReadTimer1+1)
 10676                           	line	23
 10677                           	
 10678  001C6E                     i1l16460:
 10679  001C6E  0012               	return
 10680                           	opt stack 0
 10681                           GLOBAL	__end_of_ReadTimer1
 10682  001C70                     	__end_of_ReadTimer1:
 10683                           	signat	_ReadTimer1,90
 10684                           	global	_WriteTimer1
 10685                           
 10686 ;; *************** function _WriteTimer1 *****************
 10687 ;; Defined at:
 10688 ;;		line 15 in file "plib/Timers/t1write.c"
 10689 ;; Parameters:    Size  Location     Type
 10690 ;;  timer1          2    0[COMRAM] unsigned int 
 10691 ;; Auto vars:     Size  Location     Type
 10692 ;;  timer           2    2[COMRAM] struct Timers
 10693 ;; Return value:  Size  Location     Type
 10694 ;;		None               void
 10695 ;; Registers used:
 10696 ;;		None
 10697 ;; Tracked objects:
 10698 ;;		On entry : 0/0
 10699 ;;		On exit  : 0/0
 10700 ;;		Unchanged: 0/0
 10701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10702 ;;      Params:         2       0       0       0       0
 10703 ;;      Locals:         2       0       0       0       0
 10704 ;;      Temps:          0       0       0       0       0
 10705 ;;      Totals:         4       0       0       0       0
 10706 ;;Total ram usage:        4 bytes
 10707 ;; Hardware stack levels used:    1
 10708 ;; Hardware stack levels required when called:    5
 10709 ;; This function calls:
 10710 ;;		Nothing
 10711 ;; This function is called by:
 10712 ;;		_timer1_int_handler
 10713 ;; This function uses a non-reentrant model
 10714 ;;
 10715                           psect	text35,class=CODE,space=0,reloc=2
 10716                           global __ptext35
 10717  001C70                     __ptext35:
 10718                           psect	text35
 10719                           	file	"plib/Timers/t1write.c"
 10720                           	line	15
 10721                           	global	__size_of_WriteTimer1
 10722  0000                     	__size_of_WriteTimer1	equ	__end_of_WriteTimer1-_WriteTimer1
 10723                           	
 10724  001C70                     _WriteTimer1:
 10725                           	opt	stack 19
 10726                           	line	18
 10727                           	
 10728  001C70                     i1l17733:
 10729  001C70  C001  F003         	movff	(c:WriteTimer1@timer1),(c:WriteTimer1@timer)
 10730  001C74  C002  F004         	movff	(c:WriteTimer1@timer1+1),(c:WriteTimer1@timer+1)
 10731                           	line	20
 10732  001C78  C004  FFCF         	movff	0+((c:WriteTimer1@timer)+01h),(c:4047)	;volatile
 10733                           	line	21
 10734  001C7C  C003  FFCE         	movff	(c:WriteTimer1@timer),(c:4046)	;volatile
 10735                           	line	22
 10736                           	
 10737  001C80                     i1l16467:
 10738  001C80  0012               	return
 10739                           	opt stack 0
 10740                           GLOBAL	__end_of_WriteTimer1
 10741  001C82                     	__end_of_WriteTimer1:
 10742                           	signat	_WriteTimer1,4216
 10743                           	global	_ReadADC
 10744                           
 10745 ;; *************** function _ReadADC *****************
 10746 ;; Defined at:
 10747 ;;		line 25 in file "plib/ADC/adcread.c"
 10748 ;; Parameters:    Size  Location     Type
 10749 ;;		None
 10750 ;; Auto vars:     Size  Location     Type
 10751 ;;		None
 10752 ;; Return value:  Size  Location     Type
 10753 ;;                  2    0[COMRAM] int 
 10754 ;; Registers used:
 10755 ;;		wreg, status,2
 10756 ;; Tracked objects:
 10757 ;;		On entry : 0/0
 10758 ;;		On exit  : 0/0
 10759 ;;		Unchanged: 0/0
 10760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10761 ;;      Params:         2       0       0       0       0
 10762 ;;      Locals:         0       0       0       0       0
 10763 ;;      Temps:          0       0       0       0       0
 10764 ;;      Totals:         2       0       0       0       0
 10765 ;;Total ram usage:        2 bytes
 10766 ;; Hardware stack levels used:    1
 10767 ;; Hardware stack levels required when called:    5
 10768 ;; This function calls:
 10769 ;;		Nothing
 10770 ;; This function is called by:
 10771 ;;		_adc_int_handler
 10772 ;; This function uses a non-reentrant model
 10773 ;;
 10774                           psect	text36,class=CODE,space=0,reloc=2
 10775                           global __ptext36
 10776  001CA2                     __ptext36:
 10777                           psect	text36
 10778                           	file	"plib/ADC/adcread.c"
 10779                           	line	25
 10780                           	global	__size_of_ReadADC
 10781  0000                     	__size_of_ReadADC	equ	__end_of_ReadADC-_ReadADC
 10782                           	
 10783  001CA2                     _ReadADC:
 10784                           	opt	stack 19
 10785                           	line	26
 10786                           	
 10787  001CA2                     i1l17735:
 10788  001CA2  50C4               	movf	((c:4036)),c,w	;volatile
 10789  001CA4  6E02               	movwf	((c:?_ReadADC+1)),c
 10790  001CA6  50C3               	movf	((c:4035)),c,w	;volatile
 10791  001CA8  6E01               	movwf	((c:?_ReadADC)),c
 10792  001CAA  D000               	goto	i1l16420
 10793                           	
 10794  001CAC                     i1l17737:
 10795                           	line	27
 10796                           	
 10797  001CAC                     i1l16420:
 10798  001CAC  0012               	return
 10799                           	opt stack 0
 10800                           GLOBAL	__end_of_ReadADC
 10801  001CAE                     	__end_of_ReadADC:
 10802                           	signat	_ReadADC,90
 10803                           	global	i1_send_msg
 10804                           
 10805 ;; *************** function i1_send_msg *****************
 10806 ;; Defined at:
 10807 ;;		line 24 in file "../src/messages.c"
 10808 ;; Parameters:    Size  Location     Type
 10809 ;;  send_msg        2   10[COMRAM] PTR struct __msg_queue
 10810 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 10811 ;;  send_msg        1   12[COMRAM] unsigned char 
 10812 ;;  send_msg        1   13[COMRAM] unsigned char 
 10813 ;;  send_msg        2   14[COMRAM] PTR void 
 10814 ;;		 -> adc_int_handler@message(3), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 10815 ;;		 -> i2c_int_handler@error_buf(3), main@msgbuffer(11), main@uc(5), 
 10816 ;; Auto vars:     Size  Location     Type
 10817 ;;  send_msg        2   20[COMRAM] PTR struct __msg
 10818 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 10819 ;;  send_msg        2   17[COMRAM] unsigned int 
 10820 ;;  send_msg        1   19[COMRAM] unsigned char 
 10821 ;; Return value:  Size  Location     Type
 10822 ;;                  1    wreg      char 
 10823 ;; Registers used:
 10824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10825 ;; Tracked objects:
 10826 ;;		On entry : 0/0
 10827 ;;		On exit  : 0/0
 10828 ;;		Unchanged: 0/0
 10829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10830 ;;      Params:         6       0       0       0       0
 10831 ;;      Locals:         5       0       0       0       0
 10832 ;;      Temps:          1       0       0       0       0
 10833 ;;      Totals:        12       0       0       0       0
 10834 ;;Total ram usage:       12 bytes
 10835 ;; Hardware stack levels used:    1
 10836 ;; Hardware stack levels required when called:    6
 10837 ;; This function calls:
 10838 ;;		i1_memcpy
 10839 ;; This function is called by:
 10840 ;;		_ToMainLow_sendmsg
 10841 ;; This function uses a non-reentrant model
 10842 ;;
 10843                           psect	text37,class=CODE,space=0,reloc=2
 10844                           global __ptext37
 10845  00124C                     __ptext37:
 10846                           psect	text37
 10847                           	file	"../src/messages.c"
 10848                           	line	24
 10849                           	global	__size_ofi1_send_msg
 10850  0000                     	__size_ofi1_send_msg	equ	__end_ofi1_send_msg-i1_send_msg
 10851                           	
 10852  00124C                     i1_send_msg:
 10853                           	opt	stack 17
 10854                           	line	28
 10855                           	
 10856  00124C                     i1l18757:
 10857                           ;messages.c: 25: unsigned char slot;
 10858                           ;messages.c: 27: msg *qmsg;
 10859                           ;messages.c: 28: size_t tlength = length;
 10860  00124C  C00D  F012         	movff	(c:i1send_msg@length),(c:i1send_msg@tlength)
 10861  001250  6A13               	clrf	((c:i1send_msg@tlength+1)),c
 10862                           	line	38
 10863                           	
 10864  001252                     i1l18759:
 10865                           ;messages.c: 38: slot = qptr->cur_write_ind;
 10866  001252  EE20 F034          	lfsr	2,034h
 10867  001256  500B               	movf	((c:i1send_msg@qptr)),c,w
 10868  001258  26D9               	addwf	fsr2l
 10869  00125A  500C               	movf	((c:i1send_msg@qptr+1)),c,w
 10870  00125C  22DA               	addwfc	fsr2h
 10871  00125E  50DF               	movf	indf2,w
 10872  001260  6E14               	movwf	((c:i1send_msg@slot)),c
 10873                           	line	39
 10874                           	
 10875  001262                     i1l18761:
 10876                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
 10877  001262  5014               	movf	((c:i1send_msg@slot)),c,w
 10878  001264  0D0D               	mullw	0Dh
 10879  001266  50F3               	movf	(prodl),c,w
 10880  001268  240B               	addwf	((c:i1send_msg@qptr)),c,w
 10881                           	
 10882  00126A  6E15               	movwf	((c:i1send_msg@qmsg)),c
 10883  00126C  50F4               	movf	(prodh),c,w
 10884  00126E  200C               	addwfc	((c:i1send_msg@qptr+1)),c,w
 10885  001270  6E16               	movwf	1+((c:i1send_msg@qmsg)),c
 10886                           	line	41
 10887                           	
 10888  001272                     i1l18763:
 10889                           ;messages.c: 41: if (qmsg->full != 0) {
 10890  001272  C015  FFD9         	movff	(c:i1send_msg@qmsg),fsr2l
 10891  001276  C016  FFDA         	movff	(c:i1send_msg@qmsg+1),fsr2h
 10892  00127A  50DF               	movf	indf2,w
 10893  00127C  B4D8               	btfsc	status,2
 10894  00127E  D001               	goto	i1u180_21
 10895  001280  D001               	goto	i1u180_20
 10896  001282                     i1u180_21:
 10897  001282  D003               	goto	i1l18769
 10898  001284                     i1u180_20:
 10899                           	line	42
 10900                           	
 10901  001284                     i1l18765:
 10902                           ;messages.c: 42: return (-1);
 10903  001284  0EFF               	movlw	(-1)&0ffh
 10904  001286  D03A               	goto	i1l5474
 10905                           	
 10906  001288                     i1l18767:
 10907  001288  D039               	goto	i1l5474
 10908                           	line	43
 10909                           	
 10910  00128A                     i1l5473:
 10911                           	line	46
 10912                           	
 10913  00128A                     i1l18769:
 10914                           ;messages.c: 43: }
 10915                           ;messages.c: 46: qmsg->length = length;
 10916  00128A  EE20 F001          	lfsr	2,01h
 10917  00128E  5015               	movf	((c:i1send_msg@qmsg)),c,w
 10918  001290  26D9               	addwf	fsr2l
 10919  001292  5016               	movf	((c:i1send_msg@qmsg+1)),c,w
 10920  001294  22DA               	addwfc	fsr2h
 10921  001296  C00D  FFDF         	movff	(c:i1send_msg@length),indf2
 10922                           
 10923                           	line	47
 10924                           ;messages.c: 47: qmsg->msgtype = msgtype;
 10925  00129A  EE20 F002          	lfsr	2,02h
 10926  00129E  5015               	movf	((c:i1send_msg@qmsg)),c,w
 10927  0012A0  26D9               	addwf	fsr2l
 10928  0012A2  5016               	movf	((c:i1send_msg@qmsg+1)),c,w
 10929  0012A4  22DA               	addwfc	fsr2h
 10930  0012A6  C00E  FFDF         	movff	(c:i1send_msg@msgtype),indf2
 10931                           
 10932                           	line	55
 10933                           	
 10934  0012AA                     i1l18771:
 10935                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
 10936  0012AA  0E03               	movlw	low(03h)
 10937  0012AC  2415               	addwf	((c:i1send_msg@qmsg)),c,w
 10938                           	
 10939  0012AE  6E01               	movwf	((c:?i1_memcpy)),c
 10940  0012B0  0E00               	movlw	high(03h)
 10941  0012B2  2016               	addwfc	((c:i1send_msg@qmsg+1)),c,w
 10942  0012B4  6E02               	movwf	1+((c:?i1_memcpy)),c
 10943  0012B6  C00F  F003         	movff	(c:i1send_msg@data),0+((c:?i1_memcpy)+02h)
 10944  0012BA  C010  F004         	movff	(c:i1send_msg@data+1),1+((c:?i1_memcpy)+02h)
 10945  0012BE  C012  F005         	movff	(c:i1send_msg@tlength),0+((c:?i1_memcpy)+04h)
 10946  0012C2  C013  F006         	movff	(c:i1send_msg@tlength+1),1+((c:?i1_memcpy)+04h)
 10947  0012C6  EC12  F00C         	call	i1_memcpy	;wreg free
 10948                           	line	56
 10949                           	
 10950  0012CA                     i1l18773:
 10951                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
 10952  0012CA  EE20 F034          	lfsr	2,034h
 10953  0012CE  500B               	movf	((c:i1send_msg@qptr)),c,w
 10954  0012D0  26D9               	addwf	fsr2l
 10955  0012D2  500C               	movf	((c:i1send_msg@qptr+1)),c,w
 10956  0012D4  22DA               	addwfc	fsr2h
 10957  0012D6  EE10 F034          	lfsr	1,034h
 10958  0012DA  500B               	movf	((c:i1send_msg@qptr)),c,w
 10959  0012DC  26E1               	addwf	fsr1l
 10960  0012DE  500C               	movf	((c:i1send_msg@qptr+1)),c,w
 10961  0012E0  22E2               	addwfc	fsr1h
 10962  0012E2  50E7               	movf	indf1,w
 10963  0012E4  6E11               	movwf	(??i1_send_msg+0+0)&0ffh,c
 10964  0012E6  2811               	incf	((??i1_send_msg+0+0)),c,w
 10965  0012E8  0B03               	andlw	low(03h)
 10966  0012EA  6EDF               	movwf	indf2
 10967                           
 10968                           	line	59
 10969                           	
 10970  0012EC                     i1l18775:
 10971                           ;messages.c: 59: qmsg->full = 1;
 10972  0012EC  C015  FFD9         	movff	(c:i1send_msg@qmsg),fsr2l
 10973  0012F0  C016  FFDA         	movff	(c:i1send_msg@qmsg+1),fsr2h
 10974  0012F4  0E01               	movlw	low(01h)
 10975  0012F6  6EDF               	movwf	indf2
 10976                           	line	60
 10977                           	
 10978  0012F8                     i1l18777:
 10979                           ;messages.c: 60: return (1);
 10980  0012F8  0E01               	movlw	(01h)&0ffh
 10981  0012FA  D000               	goto	i1l5474
 10982                           	
 10983  0012FC                     i1l18779:
 10984                           	line	61
 10985                           	
 10986  0012FC                     i1l5474:
 10987  0012FC  0012               	return
 10988                           	opt stack 0
 10989                           GLOBAL	__end_ofi1_send_msg
 10990  0012FE                     	__end_ofi1_send_msg:
 10991                           	signat	i1_send_msg,89
 10992                           	global	i1_memcpy
 10993                           
 10994 ;; *************** function i1_memcpy *****************
 10995 ;; Defined at:
 10996 ;;		line 13 in file "/opt/microchip/xc8/v1.10/sources/memcpy.c"
 10997 ;; Parameters:    Size  Location     Type
 10998 ;;  memcpy          2    0[COMRAM] PTR void 
 10999 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
 11000 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
 11001 ;;  memcpy          2    2[COMRAM] PTR const void 
 11002 ;;		 -> adc_int_handler@message(3), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 11003 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 11004 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(5), 
 11005 ;;  memcpy          2    4[COMRAM] unsigned int 
 11006 ;; Auto vars:     Size  Location     Type
 11007 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 11008 ;;		 -> adc_int_handler@message(3), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 11009 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 11010 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(5), 
 11011 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 11012 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
 11013 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
 11014 ;; Return value:  Size  Location     Type
 11015 ;;                  2    0[COMRAM] PTR void 
 11016 ;; Registers used:
 11017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11018 ;; Tracked objects:
 11019 ;;		On entry : 0/0
 11020 ;;		On exit  : 0/0
 11021 ;;		Unchanged: 0/0
 11022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11023 ;;      Params:         6       0       0       0       0
 11024 ;;      Locals:         4       0       0       0       0
 11025 ;;      Temps:          0       0       0       0       0
 11026 ;;      Totals:        10       0       0       0       0
 11027 ;;Total ram usage:       10 bytes
 11028 ;; Hardware stack levels used:    1
 11029 ;; Hardware stack levels required when called:    5
 11030 ;; This function calls:
 11031 ;;		Nothing
 11032 ;; This function is called by:
 11033 ;;		i1_send_msg
 11034 ;; This function uses a non-reentrant model
 11035 ;;
 11036                           psect	text38,class=CODE,space=0,reloc=2
 11037                           global __ptext38
 11038  001824                     __ptext38:
 11039                           psect	text38
 11040                           	file	"/opt/microchip/xc8/v1.10/sources/memcpy.c"
 11041                           	line	13
 11042                           	global	__size_ofi1_memcpy
 11043  0000                     	__size_ofi1_memcpy	equ	__end_ofi1_memcpy-i1_memcpy
 11044                           	
 11045  001824                     i1_memcpy:
 11046                           	opt	stack 17
 11047                           	line	24
 11048                           	
 11049  001824                     i1l18737:
 11050  001824  C003  F009         	movff	(c:i1memcpy@s1),(c:i1memcpy@s)
 11051  001828  C004  F00A         	movff	(c:i1memcpy@s1+1),(c:i1memcpy@s+1)
 11052                           	line	25
 11053  00182C  C001  F007         	movff	(c:i1memcpy@d1),(c:i1memcpy@d)
 11054  001830  C002  F008         	movff	(c:i1memcpy@d1+1),(c:i1memcpy@d+1)
 11055                           	line	26
 11056  001834  D00F               	goto	i1l18745
 11057                           	
 11058  001836                     i1l17009:
 11059                           	line	27
 11060                           	
 11061  001836                     i1l18739:
 11062  001836  C009  FFD9         	movff	(c:i1memcpy@s),fsr2l
 11063  00183A  C00A  FFDA         	movff	(c:i1memcpy@s+1),fsr2h
 11064  00183E  C007  FFE1         	movff	(c:i1memcpy@d),fsr1l
 11065  001842  C008  FFE2         	movff	(c:i1memcpy@d+1),fsr1h
 11066  001846  CFDF FFE7          	movff	indf2,indf1
 11067                           	
 11068  00184A                     i1l18741:
 11069  00184A  4A09               	infsnz	((c:i1memcpy@s)),c
 11070  00184C  2A0A               	incf	((c:i1memcpy@s+1)),c
 11071                           	
 11072  00184E                     i1l18743:
 11073  00184E  4A07               	infsnz	((c:i1memcpy@d)),c
 11074  001850  2A08               	incf	((c:i1memcpy@d+1)),c
 11075  001852  D000               	goto	i1l18745
 11076                           	
 11077  001854                     i1l17008:
 11078                           	line	26
 11079                           	
 11080  001854                     i1l18745:
 11081  001854  0605               	decf	((c:i1memcpy@n)),c
 11082  001856  A0D8               	btfss	status,0
 11083  001858  0606               	decf	((c:i1memcpy@n+1)),c
 11084  00185A  2805               	incf	((c:i1memcpy@n))&0ffh,w
 11085  00185C  B4D8               	btfsc	status,2
 11086  00185E  2806               	incf ((c:i1memcpy@n+1))&0ffh,w
 11087                           
 11088  001860  A4D8               	btfss	status,2
 11089  001862  D001               	goto	i1u178_21
 11090  001864  D001               	goto	i1u178_20
 11091  001866                     i1u178_21:
 11092  001866  D7E7               	goto	i1l18739
 11093  001868                     i1u178_20:
 11094  001868  D000               	goto	i1l17011
 11095                           	
 11096  00186A                     i1l17010:
 11097                           	line	32
 11098                           ;	Return value of i1_memcpy is never used
 11099                           	
 11100  00186A                     i1l17011:
 11101  00186A  0012               	return
 11102                           	opt stack 0
 11103                           GLOBAL	__end_ofi1_memcpy
 11104  00186C                     	__end_ofi1_memcpy:
 11105                           	signat	i1_memcpy,90
 11106                           	global	_InterruptHandlerHigh
 11107                           
 11108 ;; *************** function _InterruptHandlerHigh *****************
 11109 ;; Defined at:
 11110 ;;		line 83 in file "../src/interrupts.c"
 11111 ;; Parameters:    Size  Location     Type
 11112 ;;		None
 11113 ;; Auto vars:     Size  Location     Type
 11114 ;;		None
 11115 ;; Return value:  Size  Location     Type
 11116 ;;		None               void
 11117 ;; Registers used:
 11118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11119 ;; Tracked objects:
 11120 ;;		On entry : 0/0
 11121 ;;		On exit  : 0/0
 11122 ;;		Unchanged: 0/0
 11123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11124 ;;      Params:         0       0       0       0       0
 11125 ;;      Locals:         0       0       0       0       0
 11126 ;;      Temps:          0      14       0       0       0
 11127 ;;      Totals:         0      14       0       0       0
 11128 ;;Total ram usage:       14 bytes
 11129 ;; Hardware stack levels used:    1
 11130 ;; Hardware stack levels required when called:    4
 11131 ;; This function calls:
 11132 ;;		_i2c_int_handler
 11133 ;;		_timer0_int_handler
 11134 ;;		_SleepIfOkay
 11135 ;; This function is called by:
 11136 ;;		Interrupt level 2
 11137 ;; This function uses a non-reentrant model
 11138 ;;
 11139                           psect	intcode,class=CODE,space=0,reloc=2
 11140                           global __pintcode
 11141  000008                     __pintcode:
 11142                           psect	intcode
 11143                           	file	"../src/interrupts.c"
 11144                           	line	83
 11145                           	global	__size_of_InterruptHandlerHigh
 11146  0000                     	__size_of_InterruptHandlerHigh	equ	__end_of_InterruptHandlerHigh-_InterruptHandlerHigh
 11147                           	
 11148  000008                     _InterruptHandlerHigh:
 11149                           	opt	stack 17
 11150  000008  CFFA F0A7          	movff	pclat+0,??_InterruptHandlerHigh+0
 11151  00000C  CFFB F0A8          	movff	pclat+1,??_InterruptHandlerHigh+1
 11152  000010  CFE9 F0A9          	movff	fsr0l+0,??_InterruptHandlerHigh+2
 11153                           	global	int_func
 11154  000014  EFD2  F009         	goto	int_func
 11155                           psect	intcode_body,class=CODE,space=0,reloc=2
 11156                           global __pintcode_body
 11157  0013A4                     __pintcode_body:
 11158  0013A4                     int_func:
 11159  0013A4  CFEA F0AA          	movff	fsr0h+0,??_InterruptHandlerHigh+3
 11160  0013A8  CFE1 F0AB          	movff	fsr1l+0,??_InterruptHandlerHigh+4
 11161  0013AC  CFE2 F0AC          	movff	fsr1h+0,??_InterruptHandlerHigh+5
 11162  0013B0  CFD9 F0AD          	movff	fsr2l+0,??_InterruptHandlerHigh+6
 11163  0013B4  CFDA F0AE          	movff	fsr2h+0,??_InterruptHandlerHigh+7
 11164  0013B8  CFF3 F0AF          	movff	prodl+0,??_InterruptHandlerHigh+8
 11165  0013BC  CFF4 F0B0          	movff	prodh+0,??_InterruptHandlerHigh+9
 11166  0013C0  CFF6 F0B1          	movff	tblptrl+0,??_InterruptHandlerHigh+10
 11167  0013C4  CFF7 F0B2          	movff	tblptrh+0,??_InterruptHandlerHigh+11
 11168  0013C8  CFF8 F0B3          	movff	tblptru+0,??_InterruptHandlerHigh+12
 11169  0013CC  CFF5 F0B4          	movff	tablat+0,??_InterruptHandlerHigh+13
 11170                           	line	88
 11171                           	
 11172  0013D0                     i2l18841:
 11173                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
 11174                           	
 11175  0013D0  A69E               	btfss	((c:3998)),c,3	;volatile
 11176  0013D2  D001               	goto	i2u187_41
 11177  0013D4  D001               	goto	i2u187_40
 11178  0013D6                     i2u187_41:
 11179  0013D6  D004               	goto	i2l18847
 11180  0013D8                     i2u187_40:
 11181                           	line	90
 11182                           	
 11183  0013D8                     i2l18843:
 11184                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
 11185  0013D8  969E               	bcf	((c:3998)),c,3	;volatile
 11186                           	line	92
 11187                           	
 11188  0013DA                     i2l18845:
 11189                           ;interrupts.c: 92: i2c_int_handler();
 11190  0013DA  EC6B  F000         	call	_i2c_int_handler	;wreg free
 11191  0013DE  D000               	goto	i2l18847
 11192                           	line	93
 11193                           	
 11194  0013E0                     i2l1820:
 11195                           	line	96
 11196                           	
 11197  0013E0                     i2l18847:
 11198                           ;interrupts.c: 93: }
 11199                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
 11200                           	
 11201  0013E0  A4F2               	btfss	((c:4082)),c,2	;volatile
 11202  0013E2  D001               	goto	i2u188_41
 11203  0013E4  D001               	goto	i2u188_40
 11204  0013E6                     i2u188_41:
 11205  0013E6  D004               	goto	i2l18853
 11206  0013E8                     i2u188_40:
 11207                           	line	97
 11208                           	
 11209  0013E8                     i2l18849:
 11210                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
 11211  0013E8  94F2               	bcf	((c:4082)),c,2	;volatile
 11212                           	line	99
 11213                           	
 11214  0013EA                     i2l18851:
 11215                           ;interrupts.c: 99: timer0_int_handler();
 11216  0013EA  ECB1  F007         	call	_timer0_int_handler	;wreg free
 11217  0013EE  D000               	goto	i2l18853
 11218                           	line	100
 11219                           	
 11220  0013F0                     i2l1821:
 11221                           	line	109
 11222                           	
 11223  0013F0                     i2l18853:
 11224                           ;interrupts.c: 100: }
 11225                           ;interrupts.c: 109: SleepIfOkay();
 11226  0013F0  EC9C  F00A         	call	_SleepIfOkay	;wreg free
 11227                           	line	110
 11228                           	
 11229  0013F4                     i2l1822:
 11230  0013F4  C0B4  FFF5         	movff	??_InterruptHandlerHigh+13,tablat+0
 11231  0013F8  C0B3  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru+0
 11232  0013FC  C0B2  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh+0
 11233  001400  C0B1  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl+0
 11234  001404  C0B0  FFF4         	movff	??_InterruptHandlerHigh+9,prodh+0
 11235  001408  C0AF  FFF3         	movff	??_InterruptHandlerHigh+8,prodl+0
 11236  00140C  C0AE  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h+0
 11237  001410  C0AD  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l+0
 11238  001414  C0AC  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h+0
 11239  001418  C0AB  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l+0
 11240  00141C  C0AA  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h+0
 11241  001420  C0A9  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l+0
 11242  001424  C0A8  FFFB         	movff	??_InterruptHandlerHigh+1,pclat+1
 11243  001428  C0A7  FFFA         	movff	??_InterruptHandlerHigh+0,pclat+0
 11244  00142C  0011               	retfie f
 11245                           	opt stack 0
 11246                           GLOBAL	__end_of_InterruptHandlerHigh
 11247  00142E                     	__end_of_InterruptHandlerHigh:
 11248                           	signat	_InterruptHandlerHigh,88
 11249                           	global	_i2c_int_handler
 11250                           
 11251 ;; *************** function _i2c_int_handler *****************
 11252 ;; Defined at:
 11253 ;;		line 100 in file "../src/my_i2c.c"
 11254 ;; Parameters:    Size  Location     Type
 11255 ;;		None
 11256 ;; Auto vars:     Size  Location     Type
 11257 ;;  empty           3   24[BANK0 ] unsigned char [3]
 11258 ;;  data           10   14[BANK0 ] unsigned char [10]
 11259 ;;  length          2   32[BANK0 ] int 
 11260 ;;  msgtype         1   35[BANK0 ] unsigned char 
 11261 ;;  error_buf       3   27[BANK0 ] unsigned char [3]
 11262 ;;  data_read       1   38[BANK0 ] unsigned char 
 11263 ;;  msg_ready       1   37[BANK0 ] unsigned char 
 11264 ;;  msg_to_send     1   36[BANK0 ] unsigned char 
 11265 ;;  i2c_data        1   34[BANK0 ] unsigned char 
 11266 ;;  overrun_erro    1   31[BANK0 ] unsigned char 
 11267 ;;  data_written    1   30[BANK0 ] unsigned char 
 11268 ;; Return value:  Size  Location     Type
 11269 ;;		None               void
 11270 ;; Registers used:
 11271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11272 ;; Tracked objects:
 11273 ;;		On entry : 0/0
 11274 ;;		On exit  : 0/0
 11275 ;;		Unchanged: 0/0
 11276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11277 ;;      Params:         0       0       0       0       0
 11278 ;;      Locals:         0      25       0       0       0
 11279 ;;      Temps:          0       2       0       0       0
 11280 ;;      Totals:         0      27       0       0       0
 11281 ;;Total ram usage:       27 bytes
 11282 ;; Hardware stack levels used:    1
 11283 ;; Hardware stack levels required when called:    3
 11284 ;; This function calls:
 11285 ;;		_handle_start
 11286 ;;		_FromMainLow_recvmsg
 11287 ;;		_start_i2c_slave_reply
 11288 ;;		_ToMainHigh_sendmsg
 11289 ;; This function is called by:
 11290 ;;		_InterruptHandlerHigh
 11291 ;; This function uses a non-reentrant model
 11292 ;;
 11293                           psect	text40,class=CODE,space=0,reloc=2
 11294                           global __ptext40
 11295  0000D6                     __ptext40:
 11296                           psect	text40
 11297                           	file	"../src/my_i2c.c"
 11298                           	line	100
 11299                           	global	__size_of_i2c_int_handler
 11300  0000                     	__size_of_i2c_int_handler	equ	__end_of_i2c_int_handler-_i2c_int_handler
 11301                           	
 11302  0000D6                     _i2c_int_handler:
 11303                           	opt	stack 17
 11304                           	line	102
 11305                           	
 11306  0000D6                     i2l18855:
 11307                           ;my_i2c.c: 101: unsigned char i2c_data;
 11308                           ;my_i2c.c: 102: unsigned char data_read = 0;
 11309  0000D6  0100               	movlb	0	; () banked
 11310  0000D8  6F8C               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11311  0000DA  0E00               	movlw	low(0)
 11312  0000DC  0100               	movlb	0	; () banked
 11313  0000DE  0100               	movlb	0	; () banked
 11314  0000E0  6FA6               	movwf	((i2c_int_handler@data_read))&0ffh
 11315  0000E2  0100               	movlb	0	; () banked
 11316  0000E4  518C               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11317                           	line	103
 11318                           ;my_i2c.c: 103: unsigned char data_written = 0;
 11319  0000E6  0100               	movlb	0	; () banked
 11320  0000E8  6F8C               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11321  0000EA  0E00               	movlw	low(0)
 11322  0000EC  0100               	movlb	0	; () banked
 11323  0000EE  0100               	movlb	0	; () banked
 11324  0000F0  6F9E               	movwf	((i2c_int_handler@data_written))&0ffh
 11325  0000F2  0100               	movlb	0	; () banked
 11326  0000F4  518C               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11327                           	line	104
 11328                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
 11329  0000F6  0100               	movlb	0	; () banked
 11330  0000F8  6F8C               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11331  0000FA  0E00               	movlw	low(0)
 11332  0000FC  0100               	movlb	0	; () banked
 11333  0000FE  0100               	movlb	0	; () banked
 11334  000100  6FA5               	movwf	((i2c_int_handler@msg_ready))&0ffh
 11335  000102  0100               	movlb	0	; () banked
 11336  000104  518C               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11337                           	line	105
 11338                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
 11339  000106  0100               	movlb	0	; () banked
 11340  000108  6F8C               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11341  00010A  0E00               	movlw	low(0)
 11342  00010C  0100               	movlb	0	; () banked
 11343  00010E  0100               	movlb	0	; () banked
 11344  000110  6FA4               	movwf	((i2c_int_handler@msg_to_send))&0ffh
 11345  000112  0100               	movlb	0	; () banked
 11346  000114  518C               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11347                           	line	106
 11348                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
 11349  000116  0100               	movlb	0	; () banked
 11350  000118  6F8C               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11351  00011A  0E00               	movlw	low(0)
 11352  00011C  0100               	movlb	0	; () banked
 11353  00011E  0100               	movlb	0	; () banked
 11354  000120  6F9F               	movwf	((i2c_int_handler@overrun_error))&0ffh
 11355  000122  0100               	movlb	0	; () banked
 11356  000124  518C               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11357                           	line	110
 11358                           	
 11359  000126                     i2l18857:; BSR set to: 0
 11360                           
 11361                           ;my_i2c.c: 107: unsigned char error_buf[3];
 11362                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
 11363                           	
 11364  000126  ACC6               	btfss	((c:4038)),c,6	;volatile
 11365  000128  D001               	goto	i2u189_41
 11366  00012A  D001               	goto	i2u189_40
 11367  00012C                     i2u189_41:
 11368  00012C  D021               	goto	i2l18869
 11369  00012E                     i2u189_40:
 11370                           	line	111
 11371                           	
 11372  00012E                     i2l18859:; BSR set to: 0
 11373                           
 11374                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
 11375  00012E  9CC6               	bcf	((c:4038)),c,6	;volatile
 11376                           	line	115
 11377                           	
 11378  000130                     i2l18861:; BSR set to: 0
 11379                           
 11380                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
 11381  000130  EE20 F00C          	lfsr	2,0Ch
 11382  000134  5049               	movf	((c:_ic_ptr)),c,w
 11383  000136  26D9               	addwf	fsr2l
 11384  000138  504A               	movf	((c:_ic_ptr+1)),c,w
 11385  00013A  22DA               	addwfc	fsr2h
 11386  00013C  0E05               	movlw	low(05h)
 11387  00013E  6EDF               	movwf	indf2
 11388                           	line	116
 11389                           	
 11390  000140                     i2l18863:; BSR set to: 0
 11391                           
 11392                           ;my_i2c.c: 116: overrun_error = 1;
 11393  000140  0100               	movlb	0	; () banked
 11394  000142  6F8C               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11395  000144  0E01               	movlw	low(01h)
 11396  000146  0100               	movlb	0	; () banked
 11397  000148  0100               	movlb	0	; () banked
 11398  00014A  6F9F               	movwf	((i2c_int_handler@overrun_error))&0ffh
 11399  00014C  0100               	movlb	0	; () banked
 11400  00014E  518C               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11401                           	line	117
 11402                           	
 11403  000150                     i2l18865:; BSR set to: 0
 11404                           
 11405                           ;my_i2c.c: 117: ic_ptr->error_count++;
 11406  000150  EE20 F00E          	lfsr	2,0Eh
 11407  000154  5049               	movf	((c:_ic_ptr)),c,w
 11408  000156  26D9               	addwf	fsr2l
 11409  000158  504A               	movf	((c:_ic_ptr+1)),c,w
 11410  00015A  22DA               	addwfc	fsr2h
 11411  00015C  2ADF               	incf	indf2
 11412                           
 11413                           	line	118
 11414                           	
 11415  00015E                     i2l18867:; BSR set to: 0
 11416                           
 11417                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
 11418  00015E  EE20 F00D          	lfsr	2,0Dh
 11419  000162  5049               	movf	((c:_ic_ptr)),c,w
 11420  000164  26D9               	addwf	fsr2l
 11421  000166  504A               	movf	((c:_ic_ptr+1)),c,w
 11422  000168  22DA               	addwfc	fsr2h
 11423  00016A  0E04               	movlw	low(04h)
 11424  00016C  6EDF               	movwf	indf2
 11425  00016E  D000               	goto	i2l18869
 11426                           	line	119
 11427                           	
 11428  000170                     i2l7357:; BSR set to: 0
 11429                           
 11430                           	line	121
 11431                           	
 11432  000170                     i2l18869:; BSR set to: 0
 11433                           
 11434                           ;my_i2c.c: 119: }
 11435                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
 11436                           	
 11437  000170  A0C7               	btfss	((c:4039)),c,0	;volatile
 11438  000172  D001               	goto	i2u190_41
 11439  000174  D001               	goto	i2u190_40
 11440  000176                     i2u190_41:
 11441  000176  D00B               	goto	i2l18875
 11442  000178                     i2u190_40:
 11443                           	line	122
 11444                           	
 11445  000178                     i2l18871:; BSR set to: 0
 11446                           
 11447                           ;my_i2c.c: 122: i2c_data = SSPBUF;
 11448  000178  CFC9 F0A2          	movff	(c:4041),(i2c_int_handler@i2c_data)	;volatile
 11449                           	line	123
 11450                           	
 11451  00017C                     i2l18873:; BSR set to: 0
 11452                           
 11453                           ;my_i2c.c: 123: data_read = 1;
 11454  00017C  0100               	movlb	0	; () banked
 11455  00017E  6F8C               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11456  000180  0E01               	movlw	low(01h)
 11457  000182  0100               	movlb	0	; () banked
 11458  000184  0100               	movlb	0	; () banked
 11459  000186  6FA6               	movwf	((i2c_int_handler@data_read))&0ffh
 11460  000188  0100               	movlb	0	; () banked
 11461  00018A  518C               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11462  00018C  D000               	goto	i2l18875
 11463                           	line	124
 11464                           	
 11465  00018E                     i2l7358:; BSR set to: 0
 11466                           
 11467                           	line	129
 11468                           	
 11469  00018E                     i2l18875:; BSR set to: 0
 11470                           
 11471                           ;my_i2c.c: 124: }
 11472                           ;my_i2c.c: 129: if (!overrun_error) {
 11473  00018E  0100               	movlb	0	; () banked
 11474  000190  0100               	movlb	0	; () banked
 11475  000192  679F               	tstfsz	((i2c_int_handler@overrun_error))&0ffh
 11476  000194  D001               	goto	i2u191_41
 11477  000196  D001               	goto	i2u191_40
 11478  000198                     i2u191_41:
 11479  000198  D1E7               	goto	i2l7359
 11480  00019A                     i2u191_40:
 11481  00019A  D1D2               	goto	i2l18963
 11482                           	line	130
 11483                           	
 11484  00019C                     i2l18877:; BSR set to: 0
 11485                           
 11486                           ;my_i2c.c: 130: switch (ic_ptr->status) {
 11487  00019C  D1D1               	goto	i2l18963
 11488                           	line	131
 11489                           ;my_i2c.c: 131: case 0x5:
 11490                           	
 11491  00019E                     i2l7361:; BSR set to: 0
 11492                           
 11493                           	line	134
 11494                           ;my_i2c.c: 132: {
 11495                           ;my_i2c.c: 134: if (SSPSTATbits.S == 1) {
 11496                           	
 11497  00019E  A6C7               	btfss	((c:4039)),c,3	;volatile
 11498  0001A0  D001               	goto	i2u192_41
 11499  0001A2  D001               	goto	i2u192_40
 11500  0001A4                     i2u192_41:
 11501  0001A4  D1E1               	goto	i2l7359
 11502  0001A6                     i2u192_40:
 11503                           	line	135
 11504                           	
 11505  0001A6                     i2l18879:; BSR set to: 0
 11506                           
 11507                           ;my_i2c.c: 135: handle_start(data_read);
 11508  0001A6  C0A6  F033         	movff	(i2c_int_handler@data_read),(c:?_handle_start)
 11509  0001AA  EC7F  F009         	call	_handle_start	;wreg free
 11510                           	line	137
 11511                           	
 11512  0001AE                     i2l18881:
 11513                           ;my_i2c.c: 137: if (ic_ptr->status == 0x8) {
 11514  0001AE  EE20 F00C          	lfsr	2,0Ch
 11515  0001B2  5049               	movf	((c:_ic_ptr)),c,w
 11516  0001B4  26D9               	addwf	fsr2l
 11517  0001B6  504A               	movf	((c:_ic_ptr+1)),c,w
 11518  0001B8  22DA               	addwfc	fsr2h
 11519  0001BA  0E08               	movlw	(08h)&0ffh
 11520  0001BC  62DF               	cpfseq	indf2
 11521  0001BE  D001               	goto	i2u193_41
 11522  0001C0  D001               	goto	i2u193_40
 11523  0001C2                     i2u193_41:
 11524  0001C2  D1D2               	goto	i2l7359
 11525  0001C4                     i2u193_40:
 11526                           	line	138
 11527                           	
 11528  0001C4                     i2l18883:
 11529                           ;my_i2c.c: 138: data_read = 0;
 11530  0001C4  0100               	movlb	0	; () banked
 11531  0001C6  6F8C               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11532  0001C8  0E00               	movlw	low(0)
 11533  0001CA  0100               	movlb	0	; () banked
 11534  0001CC  0100               	movlb	0	; () banked
 11535  0001CE  6FA6               	movwf	((i2c_int_handler@data_read))&0ffh
 11536  0001D0  0100               	movlb	0	; () banked
 11537  0001D2  518C               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11538                           	line	139
 11539                           ;my_i2c.c: 139: msg_to_send = 1;
 11540  0001D4  0100               	movlb	0	; () banked
 11541  0001D6  6F8C               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11542  0001D8  0E01               	movlw	low(01h)
 11543  0001DA  0100               	movlb	0	; () banked
 11544  0001DC  0100               	movlb	0	; () banked
 11545  0001DE  6FA4               	movwf	((i2c_int_handler@msg_to_send))&0ffh
 11546  0001E0  0100               	movlb	0	; () banked
 11547  0001E2  518C               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11548  0001E4  D1C1               	goto	i2l7359
 11549                           	line	140
 11550                           	
 11551  0001E6                     i2l7363:; BSR set to: 0
 11552                           
 11553  0001E6  D1C0               	goto	i2l7359
 11554                           	line	141
 11555                           	
 11556  0001E8                     i2l7362:; BSR set to: 0
 11557                           
 11558                           	line	142
 11559                           ;my_i2c.c: 140: }
 11560                           ;my_i2c.c: 141: }
 11561                           ;my_i2c.c: 142: break;
 11562  0001E8  D1BF               	goto	i2l7359
 11563                           	line	144
 11564                           ;my_i2c.c: 143: }
 11565                           ;my_i2c.c: 144: case 0x6:
 11566                           	
 11567  0001EA                     i2l7365:; BSR set to: 0
 11568                           
 11569                           	line	147
 11570                           ;my_i2c.c: 145: {
 11571                           ;my_i2c.c: 147: if (SSPSTATbits.P == 1) {
 11572                           	
 11573  0001EA  A8C7               	btfss	((c:4039)),c,4	;volatile
 11574  0001EC  D001               	goto	i2u194_41
 11575  0001EE  D001               	goto	i2u194_40
 11576  0001F0                     i2u194_41:
 11577  0001F0  D034               	goto	i2l18895
 11578  0001F2                     i2u194_40:
 11579                           	line	150
 11580                           	
 11581  0001F2                     i2l18885:; BSR set to: 0
 11582                           
 11583                           ;my_i2c.c: 150: ic_ptr->event_count++;
 11584  0001F2  EE20 F00B          	lfsr	2,0Bh
 11585  0001F6  5049               	movf	((c:_ic_ptr)),c,w
 11586  0001F8  26D9               	addwf	fsr2l
 11587  0001FA  504A               	movf	((c:_ic_ptr+1)),c,w
 11588  0001FC  22DA               	addwfc	fsr2h
 11589  0001FE  2ADF               	incf	indf2
 11590                           
 11591                           	line	151
 11592                           	
 11593  000200                     i2l18887:; BSR set to: 0
 11594                           
 11595                           ;my_i2c.c: 151: if (data_read) {
 11596  000200  0100               	movlb	0	; () banked
 11597  000202  0100               	movlb	0	; () banked
 11598  000204  51A6               	movf	((i2c_int_handler@data_read))&0ffh,w
 11599  000206  B4D8               	btfsc	status,2
 11600  000208  D001               	goto	i2u195_41
 11601  00020A  D001               	goto	i2u195_40
 11602  00020C                     i2u195_41:
 11603  00020C  D01D               	goto	i2l7367
 11604  00020E                     i2u195_40:
 11605                           	line	152
 11606                           	
 11607  00020E                     i2l18889:; BSR set to: 0
 11608                           
 11609                           ;my_i2c.c: 152: if (SSPSTATbits.D_A == 0) {
 11610                           	
 11611  00020E  BAC7               	btfsc	((c:4039)),c,5	;volatile
 11612  000210  D001               	goto	i2u196_41
 11613  000212  D001               	goto	i2u196_40
 11614  000214                     i2u196_41:
 11615  000214  D009               	goto	i2l18893
 11616  000216                     i2u196_40:
 11617                           	line	153
 11618                           	
 11619  000216                     i2l18891:; BSR set to: 0
 11620                           
 11621                           ;my_i2c.c: 153: msg_ready = 1;
 11622  000216  0100               	movlb	0	; () banked
 11623  000218  6F8C               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11624  00021A  0E01               	movlw	low(01h)
 11625  00021C  0100               	movlb	0	; () banked
 11626  00021E  0100               	movlb	0	; () banked
 11627  000220  6FA5               	movwf	((i2c_int_handler@msg_ready))&0ffh
 11628  000222  0100               	movlb	0	; () banked
 11629  000224  518C               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11630                           	line	154
 11631                           ;my_i2c.c: 154: } else {
 11632  000226  D010               	goto	i2l7367
 11633                           	
 11634  000228                     i2l7368:; BSR set to: 0
 11635                           
 11636                           	line	155
 11637                           	
 11638  000228                     i2l18893:; BSR set to: 0
 11639                           
 11640                           ;my_i2c.c: 155: ic_ptr->error_count++;
 11641  000228  EE20 F00E          	lfsr	2,0Eh
 11642  00022C  5049               	movf	((c:_ic_ptr)),c,w
 11643  00022E  26D9               	addwf	fsr2l
 11644  000230  504A               	movf	((c:_ic_ptr+1)),c,w
 11645  000232  22DA               	addwfc	fsr2h
 11646  000234  2ADF               	incf	indf2
 11647                           
 11648                           	line	156
 11649                           ;my_i2c.c: 156: ic_ptr->error_code = 0x6;
 11650  000236  EE20 F00D          	lfsr	2,0Dh
 11651  00023A  5049               	movf	((c:_ic_ptr)),c,w
 11652  00023C  26D9               	addwf	fsr2l
 11653  00023E  504A               	movf	((c:_ic_ptr+1)),c,w
 11654  000240  22DA               	addwfc	fsr2h
 11655  000242  0E06               	movlw	low(06h)
 11656  000244  6EDF               	movwf	indf2
 11657  000246  D000               	goto	i2l7367
 11658                           	line	157
 11659                           	
 11660  000248                     i2l7369:; BSR set to: 0
 11661                           
 11662                           	line	158
 11663                           	
 11664  000248                     i2l7367:; BSR set to: 0
 11665                           
 11666                           	line	159
 11667                           ;my_i2c.c: 157: }
 11668                           ;my_i2c.c: 158: }
 11669                           ;my_i2c.c: 159: ic_ptr->status = 0x5;
 11670  000248  EE20 F00C          	lfsr	2,0Ch
 11671  00024C  5049               	movf	((c:_ic_ptr)),c,w
 11672  00024E  26D9               	addwf	fsr2l
 11673  000250  504A               	movf	((c:_ic_ptr+1)),c,w
 11674  000252  22DA               	addwfc	fsr2h
 11675  000254  0E05               	movlw	low(05h)
 11676  000256  6EDF               	movwf	indf2
 11677                           	line	160
 11678                           ;my_i2c.c: 160: } else if (data_read) {
 11679  000258  D187               	goto	i2l7359
 11680                           	
 11681  00025A                     i2l7366:; BSR set to: 0
 11682                           
 11683                           	
 11684  00025A                     i2l18895:; BSR set to: 0
 11685                           
 11686  00025A  0100               	movlb	0	; () banked
 11687  00025C  0100               	movlb	0	; () banked
 11688  00025E  51A6               	movf	((i2c_int_handler@data_read))&0ffh,w
 11689  000260  B4D8               	btfsc	status,2
 11690  000262  D001               	goto	i2u197_41
 11691  000264  D001               	goto	i2u197_40
 11692  000266                     i2u197_41:
 11693  000266  D180               	goto	i2l7359
 11694  000268                     i2u197_40:
 11695                           	line	161
 11696                           	
 11697  000268                     i2l18897:; BSR set to: 0
 11698                           
 11699                           ;my_i2c.c: 161: ic_ptr->event_count++;
 11700  000268  EE20 F00B          	lfsr	2,0Bh
 11701  00026C  5049               	movf	((c:_ic_ptr)),c,w
 11702  00026E  26D9               	addwf	fsr2l
 11703  000270  504A               	movf	((c:_ic_ptr+1)),c,w
 11704  000272  22DA               	addwfc	fsr2h
 11705  000274  2ADF               	incf	indf2
 11706                           
 11707                           	line	162
 11708                           	
 11709  000276                     i2l18899:; BSR set to: 0
 11710                           
 11711                           ;my_i2c.c: 162: if (SSPSTATbits.D_A == 0) {
 11712                           	
 11713  000276  BAC7               	btfsc	((c:4039)),c,5	;volatile
 11714  000278  D001               	goto	i2u198_41
 11715  00027A  D001               	goto	i2u198_40
 11716  00027C                     i2u198_41:
 11717  00027C  D027               	goto	i2l18911
 11718  00027E                     i2u198_40:
 11719                           	line	163
 11720                           	
 11721  00027E                     i2l18901:; BSR set to: 0
 11722                           
 11723                           ;my_i2c.c: 163: if (SSPSTATbits.R_W == 0) {
 11724                           	
 11725  00027E  B4C7               	btfsc	((c:4039)),c,2	;volatile
 11726  000280  D001               	goto	i2u199_41
 11727  000282  D001               	goto	i2u199_40
 11728  000284                     i2u199_41:
 11729  000284  D009               	goto	i2l18905
 11730  000286                     i2u199_40:
 11731                           	line	164
 11732                           	
 11733  000286                     i2l18903:; BSR set to: 0
 11734                           
 11735                           ;my_i2c.c: 164: ic_ptr->status = 0x7;
 11736  000286  EE20 F00C          	lfsr	2,0Ch
 11737  00028A  5049               	movf	((c:_ic_ptr)),c,w
 11738  00028C  26D9               	addwf	fsr2l
 11739  00028E  504A               	movf	((c:_ic_ptr+1)),c,w
 11740  000290  22DA               	addwfc	fsr2h
 11741  000292  0E07               	movlw	low(07h)
 11742  000294  6EDF               	movwf	indf2
 11743                           	line	165
 11744                           ;my_i2c.c: 165: } else {
 11745  000296  D168               	goto	i2l7359
 11746                           	
 11747  000298                     i2l7373:; BSR set to: 0
 11748                           
 11749                           	line	166
 11750                           	
 11751  000298                     i2l18905:; BSR set to: 0
 11752                           
 11753                           ;my_i2c.c: 166: ic_ptr->status = 0x8;
 11754  000298  EE20 F00C          	lfsr	2,0Ch
 11755  00029C  5049               	movf	((c:_ic_ptr)),c,w
 11756  00029E  26D9               	addwf	fsr2l
 11757  0002A0  504A               	movf	((c:_ic_ptr+1)),c,w
 11758  0002A2  22DA               	addwfc	fsr2h
 11759  0002A4  0E08               	movlw	low(08h)
 11760  0002A6  6EDF               	movwf	indf2
 11761                           	line	167
 11762                           	
 11763  0002A8                     i2l18907:; BSR set to: 0
 11764                           
 11765                           ;my_i2c.c: 167: msg_to_send = 1;
 11766  0002A8  0100               	movlb	0	; () banked
 11767  0002AA  6F8C               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11768  0002AC  0E01               	movlw	low(01h)
 11769  0002AE  0100               	movlb	0	; () banked
 11770  0002B0  0100               	movlb	0	; () banked
 11771  0002B2  6FA4               	movwf	((i2c_int_handler@msg_to_send))&0ffh
 11772  0002B4  0100               	movlb	0	; () banked
 11773  0002B6  518C               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11774                           	line	169
 11775                           	
 11776  0002B8                     i2l18909:; BSR set to: 0
 11777                           
 11778                           ;my_i2c.c: 169: data_read = 0;
 11779  0002B8  0100               	movlb	0	; () banked
 11780  0002BA  6F8C               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11781  0002BC  0E00               	movlw	low(0)
 11782  0002BE  0100               	movlb	0	; () banked
 11783  0002C0  0100               	movlb	0	; () banked
 11784  0002C2  6FA6               	movwf	((i2c_int_handler@data_read))&0ffh
 11785  0002C4  0100               	movlb	0	; () banked
 11786  0002C6  518C               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11787  0002C8  D14F               	goto	i2l7359
 11788                           	line	170
 11789                           	
 11790  0002CA                     i2l7374:; BSR set to: 0
 11791                           
 11792                           	line	171
 11793                           ;my_i2c.c: 170: }
 11794                           ;my_i2c.c: 171: } else {
 11795  0002CA  D14E               	goto	i2l7359
 11796                           	
 11797  0002CC                     i2l7372:; BSR set to: 0
 11798                           
 11799                           	line	172
 11800                           	
 11801  0002CC                     i2l18911:; BSR set to: 0
 11802                           
 11803                           ;my_i2c.c: 172: ic_ptr->error_count++;
 11804  0002CC  EE20 F00E          	lfsr	2,0Eh
 11805  0002D0  5049               	movf	((c:_ic_ptr)),c,w
 11806  0002D2  26D9               	addwf	fsr2l
 11807  0002D4  504A               	movf	((c:_ic_ptr+1)),c,w
 11808  0002D6  22DA               	addwfc	fsr2h
 11809  0002D8  2ADF               	incf	indf2
 11810                           
 11811                           	line	173
 11812                           ;my_i2c.c: 173: ic_ptr->status = 0x5;
 11813  0002DA  EE20 F00C          	lfsr	2,0Ch
 11814  0002DE  5049               	movf	((c:_ic_ptr)),c,w
 11815  0002E0  26D9               	addwf	fsr2l
 11816  0002E2  504A               	movf	((c:_ic_ptr+1)),c,w
 11817  0002E4  22DA               	addwfc	fsr2h
 11818  0002E6  0E05               	movlw	low(05h)
 11819  0002E8  6EDF               	movwf	indf2
 11820                           	line	174
 11821                           ;my_i2c.c: 174: ic_ptr->error_code = 0x6;
 11822  0002EA  EE20 F00D          	lfsr	2,0Dh
 11823  0002EE  5049               	movf	((c:_ic_ptr)),c,w
 11824  0002F0  26D9               	addwf	fsr2l
 11825  0002F2  504A               	movf	((c:_ic_ptr+1)),c,w
 11826  0002F4  22DA               	addwfc	fsr2h
 11827  0002F6  0E06               	movlw	low(06h)
 11828  0002F8  6EDF               	movwf	indf2
 11829  0002FA  D136               	goto	i2l7359
 11830                           	line	175
 11831                           	
 11832  0002FC                     i2l7375:; BSR set to: 0
 11833                           
 11834  0002FC  D135               	goto	i2l7359
 11835                           	line	176
 11836                           	
 11837  0002FE                     i2l7371:; BSR set to: 0
 11838                           
 11839  0002FE  D134               	goto	i2l7359
 11840                           	line	177
 11841                           	
 11842  000300                     i2l7370:; BSR set to: 0
 11843                           
 11844                           ;my_i2c.c: 175: }
 11845                           ;my_i2c.c: 176: }
 11846                           ;my_i2c.c: 177: break;
 11847  000300  D133               	goto	i2l7359
 11848                           	line	179
 11849                           ;my_i2c.c: 178: }
 11850                           ;my_i2c.c: 179: case 0x8:
 11851                           	
 11852  000302                     i2l7376:; BSR set to: 0
 11853                           
 11854                           	line	181
 11855                           	
 11856  000302                     i2l18913:; BSR set to: 0
 11857                           
 11858                           ;my_i2c.c: 180: {
 11859                           ;my_i2c.c: 181: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
 11860  000302  EE20 F01A          	lfsr	2,01Ah
 11861  000306  5049               	movf	((c:_ic_ptr)),c,w
 11862  000308  26D9               	addwf	fsr2l
 11863  00030A  504A               	movf	((c:_ic_ptr+1)),c,w
 11864  00030C  22DA               	addwfc	fsr2h
 11865  00030E  50DF               	movf	indf2,w
 11866  000310  0100               	movlb	0	; () banked
 11867  000312  6F8C               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11868  000314  EE20 F019          	lfsr	2,019h
 11869  000318  5049               	movf	((c:_ic_ptr)),c,w
 11870  00031A  26D9               	addwf	fsr2l
 11871  00031C  504A               	movf	((c:_ic_ptr+1)),c,w
 11872  00031E  22DA               	addwfc	fsr2h
 11873  000320  50DF               	movf	indf2,w
 11874  000322  0100               	movlb	0	; () banked
 11875  000324  5D8C               	subwf	((??_i2c_int_handler+0+0))&0ffh,w
 11876  000326  B0D8               	btfsc	status,0
 11877  000328  D001               	goto	i2u200_41
 11878  00032A  D001               	goto	i2u200_40
 11879  00032C                     i2u200_41:
 11880  00032C  D028               	goto	i2l18921
 11881  00032E                     i2u200_40:
 11882                           	line	182
 11883                           	
 11884  00032E                     i2l18915:; BSR set to: 0
 11885                           
 11886                           ;my_i2c.c: 182: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
 11887  00032E  EE20 F01A          	lfsr	2,01Ah
 11888  000332  5049               	movf	((c:_ic_ptr)),c,w
 11889  000334  26D9               	addwf	fsr2l
 11890  000336  504A               	movf	((c:_ic_ptr+1)),c,w
 11891  000338  22DA               	addwfc	fsr2h
 11892  00033A  50DF               	movf	indf2,w
 11893  00033C  0100               	movlb	0	; () banked
 11894  00033E  6F8C               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11895  000340  0100               	movlb	0	; () banked
 11896  000342  518C               	movf	((??_i2c_int_handler+0+0))&0ffh,w
 11897  000344  0D01               	mullw	01h
 11898  000346  0E0F               	movlw	0Fh
 11899  000348  26F3               	addwf	(prodl),c
 11900  00034A  0E00               	movlw	0
 11901  00034C  22F4               	addwfc	(prodh),c
 11902  00034E  50F3               	movf	(prodl),c,w
 11903  000350  2449               	addwf	((c:_ic_ptr)),c,w
 11904  000352  6ED9               	movwf	c:fsr2l
 11905  000354  50F4               	movf	(prodh),c,w
 11906  000356  204A               	addwfc	((c:_ic_ptr+1)),c,w
 11907  000358  6EDA               	movwf	1+c:fsr2l
 11908  00035A  50DF               	movf	indf2,w
 11909  00035C  6EC9               	movwf	((c:4041)),c	;volatile
 11910                           	line	183
 11911                           	
 11912  00035E                     i2l18917:; BSR set to: 0
 11913                           
 11914                           ;my_i2c.c: 183: ic_ptr->outbufind++;
 11915  00035E  EE20 F01A          	lfsr	2,01Ah
 11916  000362  5049               	movf	((c:_ic_ptr)),c,w
 11917  000364  26D9               	addwf	fsr2l
 11918  000366  504A               	movf	((c:_ic_ptr+1)),c,w
 11919  000368  22DA               	addwfc	fsr2h
 11920  00036A  2ADF               	incf	indf2
 11921                           
 11922                           	line	184
 11923                           	
 11924  00036C                     i2l18919:; BSR set to: 0
 11925                           
 11926                           ;my_i2c.c: 184: data_written = 1;
 11927  00036C  0100               	movlb	0	; () banked
 11928  00036E  6F8C               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11929  000370  0E01               	movlw	low(01h)
 11930  000372  0100               	movlb	0	; () banked
 11931  000374  0100               	movlb	0	; () banked
 11932  000376  6F9E               	movwf	((i2c_int_handler@data_written))&0ffh
 11933  000378  0100               	movlb	0	; () banked
 11934  00037A  518C               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11935                           	line	185
 11936                           ;my_i2c.c: 185: } else {
 11937  00037C  D0F5               	goto	i2l7359
 11938                           	
 11939  00037E                     i2l7377:; BSR set to: 0
 11940                           
 11941                           	line	187
 11942                           	
 11943  00037E                     i2l18921:; BSR set to: 0
 11944                           
 11945                           ;my_i2c.c: 187: ic_ptr->status = 0x5;
 11946  00037E  EE20 F00C          	lfsr	2,0Ch
 11947  000382  5049               	movf	((c:_ic_ptr)),c,w
 11948  000384  26D9               	addwf	fsr2l
 11949  000386  504A               	movf	((c:_ic_ptr+1)),c,w
 11950  000388  22DA               	addwfc	fsr2h
 11951  00038A  0E05               	movlw	low(05h)
 11952  00038C  6EDF               	movwf	indf2
 11953  00038E  D0EC               	goto	i2l7359
 11954                           	line	188
 11955                           	
 11956  000390                     i2l7378:; BSR set to: 0
 11957                           
 11958                           	line	189
 11959                           ;my_i2c.c: 188: }
 11960                           ;my_i2c.c: 189: break;
 11961  000390  D0EB               	goto	i2l7359
 11962                           	line	191
 11963                           ;my_i2c.c: 190: }
 11964                           ;my_i2c.c: 191: case 0x7:
 11965                           	
 11966  000392                     i2l7379:; BSR set to: 0
 11967                           
 11968                           	line	194
 11969                           ;my_i2c.c: 192: {
 11970                           ;my_i2c.c: 194: if (SSPSTATbits.P == 1) {
 11971                           	
 11972  000392  A8C7               	btfss	((c:4039)),c,4	;volatile
 11973  000394  D001               	goto	i2u201_41
 11974  000396  D001               	goto	i2u201_40
 11975  000398                     i2u201_41:
 11976  000398  D062               	goto	i2l18941
 11977  00039A                     i2u201_40:
 11978                           	line	196
 11979                           	
 11980  00039A                     i2l18923:; BSR set to: 0
 11981                           
 11982                           ;my_i2c.c: 196: ic_ptr->event_count++;
 11983  00039A  EE20 F00B          	lfsr	2,0Bh
 11984  00039E  5049               	movf	((c:_ic_ptr)),c,w
 11985  0003A0  26D9               	addwf	fsr2l
 11986  0003A2  504A               	movf	((c:_ic_ptr+1)),c,w
 11987  0003A4  22DA               	addwfc	fsr2h
 11988  0003A6  2ADF               	incf	indf2
 11989                           
 11990                           	line	197
 11991                           	
 11992  0003A8                     i2l18925:; BSR set to: 0
 11993                           
 11994                           ;my_i2c.c: 197: if (data_read) {
 11995  0003A8  0100               	movlb	0	; () banked
 11996  0003AA  0100               	movlb	0	; () banked
 11997  0003AC  51A6               	movf	((i2c_int_handler@data_read))&0ffh,w
 11998  0003AE  B4D8               	btfsc	status,2
 11999  0003B0  D001               	goto	i2u202_41
 12000  0003B2  D001               	goto	i2u202_40
 12001  0003B4                     i2u202_41:
 12002  0003B4  D042               	goto	i2l18937
 12003  0003B6                     i2u202_40:
 12004                           	line	198
 12005                           	
 12006  0003B6                     i2l18927:; BSR set to: 0
 12007                           
 12008                           ;my_i2c.c: 198: if (SSPSTATbits.D_A == 1) {
 12009                           	
 12010  0003B6  AAC7               	btfss	((c:4039)),c,5	;volatile
 12011  0003B8  D001               	goto	i2u203_41
 12012  0003BA  D001               	goto	i2u203_40
 12013  0003BC                     i2u203_41:
 12014  0003BC  D025               	goto	i2l18935
 12015  0003BE                     i2u203_40:
 12016                           	line	199
 12017                           	
 12018  0003BE                     i2l18929:; BSR set to: 0
 12019                           
 12020                           ;my_i2c.c: 199: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
 12021  0003BE  EE20 F00A          	lfsr	2,0Ah
 12022  0003C2  5049               	movf	((c:_ic_ptr)),c,w
 12023  0003C4  26D9               	addwf	fsr2l
 12024  0003C6  504A               	movf	((c:_ic_ptr+1)),c,w
 12025  0003C8  22DA               	addwfc	fsr2h
 12026  0003CA  50DF               	movf	indf2,w
 12027  0003CC  0100               	movlb	0	; () banked
 12028  0003CE  6F8C               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12029  0003D0  0100               	movlb	0	; () banked
 12030  0003D2  518C               	movf	((??_i2c_int_handler+0+0))&0ffh,w
 12031  0003D4  0D01               	mullw	01h
 12032  0003D6  50F3               	movf	(prodl),c,w
 12033  0003D8  2449               	addwf	((c:_ic_ptr)),c,w
 12034  0003DA  6ED9               	movwf	c:fsr2l
 12035  0003DC  50F4               	movf	(prodh),c,w
 12036  0003DE  204A               	addwfc	((c:_ic_ptr+1)),c,w
 12037  0003E0  6EDA               	movwf	1+c:fsr2l
 12038  0003E2  0100               	movlb	0	; () banked
 12039  0003E4  C0A2  FFDF         	movff	(i2c_int_handler@i2c_data),indf2
 12040                           
 12041                           	line	200
 12042                           	
 12043  0003E8                     i2l18931:; BSR set to: 0
 12044                           
 12045                           ;my_i2c.c: 200: ic_ptr->buflen++;
 12046  0003E8  EE20 F00A          	lfsr	2,0Ah
 12047  0003EC  5049               	movf	((c:_ic_ptr)),c,w
 12048  0003EE  26D9               	addwf	fsr2l
 12049  0003F0  504A               	movf	((c:_ic_ptr+1)),c,w
 12050  0003F2  22DA               	addwfc	fsr2h
 12051  0003F4  2ADF               	incf	indf2
 12052                           
 12053                           	line	201
 12054                           	
 12055  0003F6                     i2l18933:; BSR set to: 0
 12056                           
 12057                           ;my_i2c.c: 201: msg_ready = 1;
 12058  0003F6  0100               	movlb	0	; () banked
 12059  0003F8  6F8C               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12060  0003FA  0E01               	movlw	low(01h)
 12061  0003FC  0100               	movlb	0	; () banked
 12062  0003FE  0100               	movlb	0	; () banked
 12063  000400  6FA5               	movwf	((i2c_int_handler@msg_ready))&0ffh
 12064  000402  0100               	movlb	0	; () banked
 12065  000404  518C               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 12066                           	line	202
 12067                           ;my_i2c.c: 202: } else {
 12068  000406  D022               	goto	i2l18939
 12069                           	
 12070  000408                     i2l7382:; BSR set to: 0
 12071                           
 12072                           	line	203
 12073                           	
 12074  000408                     i2l18935:; BSR set to: 0
 12075                           
 12076                           ;my_i2c.c: 203: ic_ptr->error_count++;
 12077  000408  EE20 F00E          	lfsr	2,0Eh
 12078  00040C  5049               	movf	((c:_ic_ptr)),c,w
 12079  00040E  26D9               	addwf	fsr2l
 12080  000410  504A               	movf	((c:_ic_ptr+1)),c,w
 12081  000412  22DA               	addwfc	fsr2h
 12082  000414  2ADF               	incf	indf2
 12083                           
 12084                           	line	204
 12085                           ;my_i2c.c: 204: ic_ptr->error_code = 0x6;
 12086  000416  EE20 F00D          	lfsr	2,0Dh
 12087  00041A  5049               	movf	((c:_ic_ptr)),c,w
 12088  00041C  26D9               	addwf	fsr2l
 12089  00041E  504A               	movf	((c:_ic_ptr+1)),c,w
 12090  000420  22DA               	addwfc	fsr2h
 12091  000422  0E06               	movlw	low(06h)
 12092  000424  6EDF               	movwf	indf2
 12093                           	line	205
 12094                           ;my_i2c.c: 205: ic_ptr->status = 0x5;
 12095  000426  EE20 F00C          	lfsr	2,0Ch
 12096  00042A  5049               	movf	((c:_ic_ptr)),c,w
 12097  00042C  26D9               	addwf	fsr2l
 12098  00042E  504A               	movf	((c:_ic_ptr+1)),c,w
 12099  000430  22DA               	addwfc	fsr2h
 12100  000432  0E05               	movlw	low(05h)
 12101  000434  6EDF               	movwf	indf2
 12102  000436  D00A               	goto	i2l18939
 12103                           	line	206
 12104                           	
 12105  000438                     i2l7383:; BSR set to: 0
 12106                           
 12107                           	line	207
 12108                           ;my_i2c.c: 206: }
 12109                           ;my_i2c.c: 207: } else {
 12110  000438  D009               	goto	i2l18939
 12111                           	
 12112  00043A                     i2l7381:; BSR set to: 0
 12113                           
 12114                           	line	208
 12115                           	
 12116  00043A                     i2l18937:; BSR set to: 0
 12117                           
 12118                           ;my_i2c.c: 208: msg_ready = 1;
 12119  00043A  0100               	movlb	0	; () banked
 12120  00043C  6F8C               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12121  00043E  0E01               	movlw	low(01h)
 12122  000440  0100               	movlb	0	; () banked
 12123  000442  0100               	movlb	0	; () banked
 12124  000444  6FA5               	movwf	((i2c_int_handler@msg_ready))&0ffh
 12125  000446  0100               	movlb	0	; () banked
 12126  000448  518C               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 12127  00044A  D000               	goto	i2l18939
 12128                           	line	209
 12129                           	
 12130  00044C                     i2l7384:; BSR set to: 0
 12131                           
 12132                           	line	210
 12133                           	
 12134  00044C                     i2l18939:; BSR set to: 0
 12135                           
 12136                           ;my_i2c.c: 209: }
 12137                           ;my_i2c.c: 210: ic_ptr->status = 0x5;
 12138  00044C  EE20 F00C          	lfsr	2,0Ch
 12139  000450  5049               	movf	((c:_ic_ptr)),c,w
 12140  000452  26D9               	addwf	fsr2l
 12141  000454  504A               	movf	((c:_ic_ptr+1)),c,w
 12142  000456  22DA               	addwfc	fsr2h
 12143  000458  0E05               	movlw	low(05h)
 12144  00045A  6EDF               	movwf	indf2
 12145                           	line	211
 12146                           ;my_i2c.c: 211: } else if (data_read) {
 12147  00045C  D085               	goto	i2l7359
 12148                           	
 12149  00045E                     i2l7380:; BSR set to: 0
 12150                           
 12151                           	
 12152  00045E                     i2l18941:; BSR set to: 0
 12153                           
 12154  00045E  0100               	movlb	0	; () banked
 12155  000460  0100               	movlb	0	; () banked
 12156  000462  51A6               	movf	((i2c_int_handler@data_read))&0ffh,w
 12157  000464  B4D8               	btfsc	status,2
 12158  000466  D001               	goto	i2u204_41
 12159  000468  D001               	goto	i2u204_40
 12160  00046A                     i2u204_41:
 12161  00046A  D07E               	goto	i2l7359
 12162  00046C                     i2u204_40:
 12163                           	line	212
 12164                           	
 12165  00046C                     i2l18943:; BSR set to: 0
 12166                           
 12167                           ;my_i2c.c: 212: ic_ptr->event_count++;
 12168  00046C  EE20 F00B          	lfsr	2,0Bh
 12169  000470  5049               	movf	((c:_ic_ptr)),c,w
 12170  000472  26D9               	addwf	fsr2l
 12171  000474  504A               	movf	((c:_ic_ptr+1)),c,w
 12172  000476  22DA               	addwfc	fsr2h
 12173  000478  2ADF               	incf	indf2
 12174                           
 12175                           	line	213
 12176                           	
 12177  00047A                     i2l18945:; BSR set to: 0
 12178                           
 12179                           ;my_i2c.c: 213: if (SSPSTATbits.D_A == 1) {
 12180                           	
 12181  00047A  AAC7               	btfss	((c:4039)),c,5	;volatile
 12182  00047C  D001               	goto	i2u205_41
 12183  00047E  D001               	goto	i2u205_40
 12184  000480                     i2u205_41:
 12185  000480  D01D               	goto	i2l7387
 12186  000482                     i2u205_40:
 12187                           	line	214
 12188                           	
 12189  000482                     i2l18947:; BSR set to: 0
 12190                           
 12191                           ;my_i2c.c: 214: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
 12192  000482  EE20 F00A          	lfsr	2,0Ah
 12193  000486  5049               	movf	((c:_ic_ptr)),c,w
 12194  000488  26D9               	addwf	fsr2l
 12195  00048A  504A               	movf	((c:_ic_ptr+1)),c,w
 12196  00048C  22DA               	addwfc	fsr2h
 12197  00048E  50DF               	movf	indf2,w
 12198  000490  0100               	movlb	0	; () banked
 12199  000492  6F8C               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12200  000494  0100               	movlb	0	; () banked
 12201  000496  518C               	movf	((??_i2c_int_handler+0+0))&0ffh,w
 12202  000498  0D01               	mullw	01h
 12203  00049A  50F3               	movf	(prodl),c,w
 12204  00049C  2449               	addwf	((c:_ic_ptr)),c,w
 12205  00049E  6ED9               	movwf	c:fsr2l
 12206  0004A0  50F4               	movf	(prodh),c,w
 12207  0004A2  204A               	addwfc	((c:_ic_ptr+1)),c,w
 12208  0004A4  6EDA               	movwf	1+c:fsr2l
 12209  0004A6  0100               	movlb	0	; () banked
 12210  0004A8  C0A2  FFDF         	movff	(i2c_int_handler@i2c_data),indf2
 12211                           
 12212                           	line	215
 12213                           	
 12214  0004AC                     i2l18949:; BSR set to: 0
 12215                           
 12216                           ;my_i2c.c: 215: ic_ptr->buflen++;
 12217  0004AC  EE20 F00A          	lfsr	2,0Ah
 12218  0004B0  5049               	movf	((c:_ic_ptr)),c,w
 12219  0004B2  26D9               	addwf	fsr2l
 12220  0004B4  504A               	movf	((c:_ic_ptr+1)),c,w
 12221  0004B6  22DA               	addwfc	fsr2h
 12222  0004B8  2ADF               	incf	indf2
 12223                           
 12224                           	line	216
 12225                           ;my_i2c.c: 216: } else {
 12226  0004BA  D056               	goto	i2l7359
 12227                           	
 12228  0004BC                     i2l7387:; BSR set to: 0
 12229                           
 12230                           	line	217
 12231                           ;my_i2c.c: 217: if (SSPSTATbits.R_W == 1) {
 12232                           	
 12233  0004BC  A4C7               	btfss	((c:4039)),c,2	;volatile
 12234  0004BE  D001               	goto	i2u206_41
 12235  0004C0  D001               	goto	i2u206_40
 12236  0004C2                     i2u206_41:
 12237  0004C2  D021               	goto	i2l18959
 12238  0004C4                     i2u206_40:
 12239                           	line	218
 12240                           	
 12241  0004C4                     i2l18951:; BSR set to: 0
 12242                           
 12243                           ;my_i2c.c: 218: ic_ptr->status = 0x8;
 12244  0004C4  EE20 F00C          	lfsr	2,0Ch
 12245  0004C8  5049               	movf	((c:_ic_ptr)),c,w
 12246  0004CA  26D9               	addwf	fsr2l
 12247  0004CC  504A               	movf	((c:_ic_ptr+1)),c,w
 12248  0004CE  22DA               	addwfc	fsr2h
 12249  0004D0  0E08               	movlw	low(08h)
 12250  0004D2  6EDF               	movwf	indf2
 12251                           	line	219
 12252                           	
 12253  0004D4                     i2l18953:; BSR set to: 0
 12254                           
 12255                           ;my_i2c.c: 219: msg_ready = 1;
 12256  0004D4  0100               	movlb	0	; () banked
 12257  0004D6  6F8C               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12258  0004D8  0E01               	movlw	low(01h)
 12259  0004DA  0100               	movlb	0	; () banked
 12260  0004DC  0100               	movlb	0	; () banked
 12261  0004DE  6FA5               	movwf	((i2c_int_handler@msg_ready))&0ffh
 12262  0004E0  0100               	movlb	0	; () banked
 12263  0004E2  518C               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 12264                           	line	220
 12265                           	
 12266  0004E4                     i2l18955:; BSR set to: 0
 12267                           
 12268                           ;my_i2c.c: 220: msg_to_send = 1;
 12269  0004E4  0100               	movlb	0	; () banked
 12270  0004E6  6F8C               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12271  0004E8  0E01               	movlw	low(01h)
 12272  0004EA  0100               	movlb	0	; () banked
 12273  0004EC  0100               	movlb	0	; () banked
 12274  0004EE  6FA4               	movwf	((i2c_int_handler@msg_to_send))&0ffh
 12275  0004F0  0100               	movlb	0	; () banked
 12276  0004F2  518C               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 12277                           	line	222
 12278                           	
 12279  0004F4                     i2l18957:; BSR set to: 0
 12280                           
 12281                           ;my_i2c.c: 222: data_read = 0;
 12282  0004F4  0100               	movlb	0	; () banked
 12283  0004F6  6F8C               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12284  0004F8  0E00               	movlw	low(0)
 12285  0004FA  0100               	movlb	0	; () banked
 12286  0004FC  0100               	movlb	0	; () banked
 12287  0004FE  6FA6               	movwf	((i2c_int_handler@data_read))&0ffh
 12288  000500  0100               	movlb	0	; () banked
 12289  000502  518C               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 12290                           	line	223
 12291                           ;my_i2c.c: 223: } else {
 12292  000504  D031               	goto	i2l7359
 12293                           	
 12294  000506                     i2l7389:; BSR set to: 0
 12295                           
 12296                           	line	224
 12297                           	
 12298  000506                     i2l18959:; BSR set to: 0
 12299                           
 12300                           ;my_i2c.c: 224: ic_ptr->error_count++;
 12301  000506  EE20 F00E          	lfsr	2,0Eh
 12302  00050A  5049               	movf	((c:_ic_ptr)),c,w
 12303  00050C  26D9               	addwf	fsr2l
 12304  00050E  504A               	movf	((c:_ic_ptr+1)),c,w
 12305  000510  22DA               	addwfc	fsr2h
 12306  000512  2ADF               	incf	indf2
 12307                           
 12308                           	line	225
 12309                           ;my_i2c.c: 225: ic_ptr->error_code = 0x6;
 12310  000514  EE20 F00D          	lfsr	2,0Dh
 12311  000518  5049               	movf	((c:_ic_ptr)),c,w
 12312  00051A  26D9               	addwf	fsr2l
 12313  00051C  504A               	movf	((c:_ic_ptr+1)),c,w
 12314  00051E  22DA               	addwfc	fsr2h
 12315  000520  0E06               	movlw	low(06h)
 12316  000522  6EDF               	movwf	indf2
 12317                           	line	226
 12318                           ;my_i2c.c: 226: ic_ptr->status = 0x5;
 12319  000524  EE20 F00C          	lfsr	2,0Ch
 12320  000528  5049               	movf	((c:_ic_ptr)),c,w
 12321  00052A  26D9               	addwf	fsr2l
 12322  00052C  504A               	movf	((c:_ic_ptr+1)),c,w
 12323  00052E  22DA               	addwfc	fsr2h
 12324  000530  0E05               	movlw	low(05h)
 12325  000532  6EDF               	movwf	indf2
 12326  000534  D019               	goto	i2l7359
 12327                           	line	227
 12328                           	
 12329  000536                     i2l7390:; BSR set to: 0
 12330                           
 12331  000536  D018               	goto	i2l7359
 12332                           	line	228
 12333                           	
 12334  000538                     i2l7388:; BSR set to: 0
 12335                           
 12336  000538  D017               	goto	i2l7359
 12337                           	line	229
 12338                           	
 12339  00053A                     i2l7386:; BSR set to: 0
 12340                           
 12341  00053A  D016               	goto	i2l7359
 12342                           	line	230
 12343                           	
 12344  00053C                     i2l7385:; BSR set to: 0
 12345                           
 12346                           ;my_i2c.c: 227: }
 12347                           ;my_i2c.c: 228: }
 12348                           ;my_i2c.c: 229: }
 12349                           ;my_i2c.c: 230: break;
 12350  00053C  D015               	goto	i2l7359
 12351                           	line	232
 12352                           	
 12353  00053E                     i2l18961:; BSR set to: 0
 12354                           
 12355                           ;my_i2c.c: 231: }
 12356                           ;my_i2c.c: 232: }
 12357  00053E  D014               	goto	i2l7359
 12358                           	line	130
 12359                           	
 12360  000540                     i2l7360:; BSR set to: 0
 12361                           
 12362                           	
 12363  000540                     i2l18963:; BSR set to: 0
 12364                           
 12365  000540  EE20 F00C          	lfsr	2,0Ch
 12366  000544  5049               	movf	((c:_ic_ptr)),c,w
 12367  000546  26D9               	addwf	fsr2l
 12368  000548  504A               	movf	((c:_ic_ptr+1)),c,w
 12369  00054A  22DA               	addwfc	fsr2h
 12370  00054C  50DF               	movf	indf2,w
 12371                           	; Switch size 1, requested type "space"
 12372                           ; Number of cases is 4, Range of values is 5 to 8
 12373                           ; switch strategies available:
 12374                           ; Name         Instructions Cycles
 12375                           ; simple_byte           13     7 (average)
 12376                           ;	Chosen strategy is simple_byte
 12377                           
 12378  00054E  0A05               	xorlw	5^0	; case 5
 12379  000550  B4D8               	skipnz
 12380  000552  D625               	goto	i2l7361
 12381  000554  0A03               	xorlw	6^5	; case 6
 12382  000556  B4D8               	skipnz
 12383  000558  D648               	goto	i2l7365
 12384  00055A  0A01               	xorlw	7^6	; case 7
 12385  00055C  B4D8               	skipnz
 12386  00055E  D719               	goto	i2l7379
 12387  000560  0A0F               	xorlw	8^7	; case 8
 12388  000562  B4D8               	skipnz
 12389  000564  D6CE               	goto	i2l18913
 12390  000566  D000               	goto	i2l7359
 12391                           
 12392                           	line	232
 12393                           	
 12394  000568                     i2l7364:; BSR set to: 0
 12395                           
 12396                           	line	233
 12397                           	
 12398  000568                     i2l7359:
 12399                           	line	236
 12400                           ;my_i2c.c: 233: }
 12401                           ;my_i2c.c: 236: if (data_read || data_written) {
 12402  000568  0100               	movlb	0	; () banked
 12403  00056A  0100               	movlb	0	; () banked
 12404  00056C  67A6               	tstfsz	((i2c_int_handler@data_read))&0ffh
 12405  00056E  D001               	goto	i2u207_41
 12406  000570  D001               	goto	i2u207_40
 12407  000572                     i2u207_41:
 12408  000572  D007               	goto	i2l7393
 12409  000574                     i2u207_40:
 12410                           	
 12411  000574                     i2l18965:; BSR set to: 0
 12412                           
 12413  000574  0100               	movlb	0	; () banked
 12414  000576  0100               	movlb	0	; () banked
 12415  000578  519E               	movf	((i2c_int_handler@data_written))&0ffh,w
 12416  00057A  B4D8               	btfsc	status,2
 12417  00057C  D001               	goto	i2u208_41
 12418  00057E  D001               	goto	i2u208_40
 12419  000580                     i2u208_41:
 12420  000580  D007               	goto	i2l18969
 12421  000582                     i2u208_40:
 12422                           	
 12423  000582                     i2l7393:; BSR set to: 0
 12424                           
 12425                           	line	238
 12426                           ;my_i2c.c: 238: if (SSPCON1bits.CKP == 0) {
 12427                           	
 12428  000582  B8C6               	btfsc	((c:4038)),c,4	;volatile
 12429  000584  D001               	goto	i2u209_41
 12430  000586  D001               	goto	i2u209_40
 12431  000588                     i2u209_41:
 12432  000588  D003               	goto	i2l18969
 12433  00058A                     i2u209_40:
 12434                           	line	239
 12435                           	
 12436  00058A                     i2l18967:; BSR set to: 0
 12437                           
 12438                           ;my_i2c.c: 239: SSPCON1bits.CKP = 1;
 12439  00058A  88C6               	bsf	((c:4038)),c,4	;volatile
 12440  00058C  D001               	goto	i2l18969
 12441                           	line	240
 12442                           	
 12443  00058E                     i2l7394:; BSR set to: 0
 12444                           
 12445  00058E  D000               	goto	i2l18969
 12446                           	line	241
 12447                           	
 12448  000590                     i2l7391:; BSR set to: 0
 12449                           
 12450                           	line	244
 12451                           	
 12452  000590                     i2l18969:; BSR set to: 0
 12453                           
 12454                           ;my_i2c.c: 240: }
 12455                           ;my_i2c.c: 241: }
 12456                           ;my_i2c.c: 244: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
 12457  000590  EE20 F00A          	lfsr	2,0Ah
 12458  000594  5049               	movf	((c:_ic_ptr)),c,w
 12459  000596  26D9               	addwf	fsr2l
 12460  000598  504A               	movf	((c:_ic_ptr+1)),c,w
 12461  00059A  22DA               	addwfc	fsr2h
 12462  00059C  0E08               	movlw	(09h-1)
 12463  00059E  64DF               	cpfsgt	indf2
 12464  0005A0  D001               	goto	i2u210_41
 12465  0005A2  D001               	goto	i2u210_40
 12466  0005A4                     i2u210_41:
 12467  0005A4  D01E               	goto	i2l18975
 12468  0005A6                     i2u210_40:
 12469                           	
 12470  0005A6                     i2l18971:; BSR set to: 0
 12471                           
 12472  0005A6  0100               	movlb	0	; () banked
 12473  0005A8  0100               	movlb	0	; () banked
 12474  0005AA  67A5               	tstfsz	((i2c_int_handler@msg_ready))&0ffh
 12475  0005AC  D001               	goto	i2u211_41
 12476  0005AE  D001               	goto	i2u211_40
 12477  0005B0                     i2u211_41:
 12478  0005B0  D018               	goto	i2l18975
 12479  0005B2                     i2u211_40:
 12480                           	line	245
 12481                           	
 12482  0005B2                     i2l18973:; BSR set to: 0
 12483                           
 12484                           ;my_i2c.c: 245: ic_ptr->status = 0x5;
 12485  0005B2  EE20 F00C          	lfsr	2,0Ch
 12486  0005B6  5049               	movf	((c:_ic_ptr)),c,w
 12487  0005B8  26D9               	addwf	fsr2l
 12488  0005BA  504A               	movf	((c:_ic_ptr+1)),c,w
 12489  0005BC  22DA               	addwfc	fsr2h
 12490  0005BE  0E05               	movlw	low(05h)
 12491  0005C0  6EDF               	movwf	indf2
 12492                           	line	246
 12493                           ;my_i2c.c: 246: ic_ptr->error_count++;
 12494  0005C2  EE20 F00E          	lfsr	2,0Eh
 12495  0005C6  5049               	movf	((c:_ic_ptr)),c,w
 12496  0005C8  26D9               	addwf	fsr2l
 12497  0005CA  504A               	movf	((c:_ic_ptr+1)),c,w
 12498  0005CC  22DA               	addwfc	fsr2h
 12499  0005CE  2ADF               	incf	indf2
 12500                           
 12501                           	line	247
 12502                           ;my_i2c.c: 247: ic_ptr->error_code = 0x7;
 12503  0005D0  EE20 F00D          	lfsr	2,0Dh
 12504  0005D4  5049               	movf	((c:_ic_ptr)),c,w
 12505  0005D6  26D9               	addwf	fsr2l
 12506  0005D8  504A               	movf	((c:_ic_ptr+1)),c,w
 12507  0005DA  22DA               	addwfc	fsr2h
 12508  0005DC  0E07               	movlw	low(07h)
 12509  0005DE  6EDF               	movwf	indf2
 12510  0005E0  D000               	goto	i2l18975
 12511                           	line	248
 12512                           	
 12513  0005E2                     i2l7395:; BSR set to: 0
 12514                           
 12515                           	line	250
 12516                           	
 12517  0005E2                     i2l18975:; BSR set to: 0
 12518                           
 12519                           ;my_i2c.c: 248: }
 12520                           ;my_i2c.c: 250: if (msg_ready) {
 12521  0005E2  0100               	movlb	0	; () banked
 12522  0005E4  0100               	movlb	0	; () banked
 12523  0005E6  51A5               	movf	((i2c_int_handler@msg_ready))&0ffh,w
 12524  0005E8  B4D8               	btfsc	status,2
 12525  0005EA  D001               	goto	i2u212_41
 12526  0005EC  D001               	goto	i2u212_40
 12527  0005EE                     i2u212_41:
 12528  0005EE  D052               	goto	i2l18985
 12529  0005F0                     i2u212_40:
 12530                           	line	254
 12531                           	
 12532  0005F0                     i2l18977:; BSR set to: 0
 12533                           
 12534                           ;my_i2c.c: 252: unsigned char data[10];
 12535                           ;my_i2c.c: 253: unsigned char msgtype;
 12536                           ;my_i2c.c: 254: int length = FromMainLow_recvmsg(10, &msgtype, (void *) data);
 12537  0005F0  0100               	movlb	0	; () banked
 12538  0005F2  6F8C               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12539  0005F4  0E0A               	movlw	low(0Ah)
 12540  0005F6  0100               	movlb	0	; () banked
 12541  0005F8  0100               	movlb	0	; () banked
 12542  0005FA  6F87               	movwf	((?_FromMainLow_recvmsg))&0ffh
 12543  0005FC  0100               	movlb	0	; () banked
 12544  0005FE  518C               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 12545  000600  0100               	movlb	0	; () banked
 12546  000602  0E00               	movlw	high(i2c_int_handler@msgtype)
 12547  000604  0100               	movlb	0	; () banked
 12548  000606  0100               	movlb	0	; () banked
 12549  000608  6F89               	movwf	(1+(?_FromMainLow_recvmsg+01h))&0ffh
 12550  00060A  0100               	movlb	0	; () banked
 12551  00060C  0EA3               	movlw	low(i2c_int_handler@msgtype)
 12552  00060E  0100               	movlb	0	; () banked
 12553  000610  6F88               	movwf	(0+(?_FromMainLow_recvmsg+01h))&0ffh
 12554  000612  0100               	movlb	0	; () banked
 12555  000614  0E00               	movlw	high(i2c_int_handler@data)
 12556  000616  0100               	movlb	0	; () banked
 12557  000618  0100               	movlb	0	; () banked
 12558  00061A  6F8B               	movwf	(1+(?_FromMainLow_recvmsg+03h))&0ffh
 12559  00061C  0100               	movlb	0	; () banked
 12560  00061E  0E8E               	movlw	low(i2c_int_handler@data)
 12561  000620  0100               	movlb	0	; () banked
 12562  000622  6F8A               	movwf	(0+(?_FromMainLow_recvmsg+03h))&0ffh
 12563  000624  0100               	movlb	0	; () banked
 12564  000626  EC7C  F00D         	call	_FromMainLow_recvmsg	;wreg free
 12565  00062A  0100               	movlb	0	; () banked
 12566  00062C  0100               	movlb	0	; () banked
 12567  00062E  6FA0               	movwf	((i2c_int_handler@length))&0ffh
 12568  000630  0100               	movlb	0	; () banked
 12569  000632  6BA1               	clrf	((i2c_int_handler@length+1))&0ffh
 12570  000634  0100               	movlb	0	; () banked
 12571  000636  BFA0               	btfsc	((i2c_int_handler@length))&0ffh,7
 12572  000638  07A1               	decf	((i2c_int_handler@length+1))&0ffh
 12573                           	line	255
 12574                           	
 12575  00063A                     i2l18979:; BSR set to: 0
 12576                           
 12577                           ;my_i2c.c: 255: if(length > 0){
 12578  00063A  0100               	movlb	0	; () banked
 12579  00063C  0100               	movlb	0	; () banked
 12580  00063E  51A1               	movf	((i2c_int_handler@length+1))&0ffh,w
 12581  000640  0A80               	xorlw	80h
 12582  000642  0F80               	addlw	-((0)^80h)
 12583  000644  0E01               	movlw	01h
 12584  000646  B4D8               	btfsc	status,2
 12585  000648  5DA0               	subwf	((i2c_int_handler@length))&0ffh,w
 12586  00064A  A0D8               	btfss	status,0
 12587  00064C  D001               	goto	i2u213_41
 12588  00064E  D001               	goto	i2u213_40
 12589  000650                     i2u213_41:
 12590  000650  D00B               	goto	i2l7397
 12591  000652                     i2u213_40:
 12592                           	line	256
 12593                           	
 12594  000652                     i2l18981:; BSR set to: 0
 12595                           
 12596                           ;my_i2c.c: 256: start_i2c_slave_reply(length, data);
 12597  000652  C0A0  F033         	movff	(i2c_int_handler@length),(c:?_start_i2c_slave_reply)
 12598  000656  0100               	movlb	0	; () banked
 12599  000658  0E00               	movlw	high(i2c_int_handler@data)
 12600  00065A  6E35               	movwf	(1+((c:?_start_i2c_slave_reply)+01h)),c
 12601  00065C  0100               	movlb	0	; () banked
 12602  00065E  0E8E               	movlw	low(i2c_int_handler@data)
 12603  000660  6E34               	movwf	(0+((c:?_start_i2c_slave_reply)+01h)),c
 12604  000662  EC11  F008         	call	_start_i2c_slave_reply	;wreg free
 12605                           	line	257
 12606                           ;my_i2c.c: 257: }
 12607  000666  D065               	goto	i2l18993
 12608                           	line	258
 12609                           	
 12610  000668                     i2l7397:; BSR set to: 0
 12611                           
 12612                           	line	260
 12613                           ;my_i2c.c: 258: else {
 12614                           ;my_i2c.c: 260: unsigned char empty[] = {0x0,0x0,0x55};
 12615  000668  C0C8  F098         	movff	(i2c_int_handler@F5030),(i2c_int_handler@empty)
 12616  00066C  C0C9  F099         	movff	(i2c_int_handler@F5030+1),(i2c_int_handler@empty+1)
 12617  000670  C0CA  F09A         	movff	(i2c_int_handler@F5030+2),(i2c_int_handler@empty+2)
 12618                           	line	261
 12619                           	
 12620  000674                     i2l18983:; BSR set to: 0
 12621                           
 12622                           ;my_i2c.c: 261: start_i2c_slave_reply(3,empty);
 12623  000674  0100               	movlb	0	; () banked
 12624  000676  6F8C               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12625  000678  0E03               	movlw	low(03h)
 12626  00067A  6E33               	movwf	((c:?_start_i2c_slave_reply)),c
 12627  00067C  0100               	movlb	0	; () banked
 12628  00067E  518C               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 12629  000680  0100               	movlb	0	; () banked
 12630  000682  0E00               	movlw	high(i2c_int_handler@empty)
 12631  000684  6E35               	movwf	(1+((c:?_start_i2c_slave_reply)+01h)),c
 12632  000686  0100               	movlb	0	; () banked
 12633  000688  0E98               	movlw	low(i2c_int_handler@empty)
 12634  00068A  6E34               	movwf	(0+((c:?_start_i2c_slave_reply)+01h)),c
 12635  00068C  EC11  F008         	call	_start_i2c_slave_reply	;wreg free
 12636  000690  D050               	goto	i2l18993
 12637                           	line	262
 12638                           	
 12639  000692                     i2l7398:
 12640                           	line	265
 12641                           ;my_i2c.c: 262: }
 12642                           ;my_i2c.c: 265: } else if (ic_ptr->error_count >= 1) {
 12643  000692  D04F               	goto	i2l18993
 12644                           	
 12645  000694                     i2l7396:
 12646                           	
 12647  000694                     i2l18985:
 12648  000694  EE20 F00E          	lfsr	2,0Eh
 12649  000698  5049               	movf	((c:_ic_ptr)),c,w
 12650  00069A  26D9               	addwf	fsr2l
 12651  00069C  504A               	movf	((c:_ic_ptr+1)),c,w
 12652  00069E  22DA               	addwfc	fsr2h
 12653  0006A0  50DF               	movf	indf2,w
 12654  0006A2  B4D8               	btfsc	status,2
 12655  0006A4  D001               	goto	i2u214_41
 12656  0006A6  D001               	goto	i2u214_40
 12657  0006A8                     i2u214_41:
 12658  0006A8  D044               	goto	i2l18993
 12659  0006AA                     i2u214_40:
 12660                           	line	266
 12661                           	
 12662  0006AA                     i2l18987:
 12663                           ;my_i2c.c: 266: error_buf[0] = ic_ptr->error_count;
 12664  0006AA  EE20 F00E          	lfsr	2,0Eh
 12665  0006AE  5049               	movf	((c:_ic_ptr)),c,w
 12666  0006B0  26D9               	addwf	fsr2l
 12667  0006B2  504A               	movf	((c:_ic_ptr+1)),c,w
 12668  0006B4  22DA               	addwfc	fsr2h
 12669  0006B6  50DF               	movf	indf2,w
 12670  0006B8  0100               	movlb	0	; () banked
 12671  0006BA  0100               	movlb	0	; () banked
 12672  0006BC  6F9B               	movwf	((i2c_int_handler@error_buf))&0ffh
 12673                           	line	267
 12674                           ;my_i2c.c: 267: error_buf[1] = ic_ptr->error_code;
 12675  0006BE  EE20 F00D          	lfsr	2,0Dh
 12676  0006C2  5049               	movf	((c:_ic_ptr)),c,w
 12677  0006C4  26D9               	addwf	fsr2l
 12678  0006C6  504A               	movf	((c:_ic_ptr+1)),c,w
 12679  0006C8  22DA               	addwfc	fsr2h
 12680  0006CA  50DF               	movf	indf2,w
 12681  0006CC  0100               	movlb	0	; () banked
 12682  0006CE  0100               	movlb	0	; () banked
 12683  0006D0  6F9C               	movwf	(0+(i2c_int_handler@error_buf+01h))&0ffh
 12684                           	line	268
 12685                           ;my_i2c.c: 268: error_buf[2] = ic_ptr->event_count;
 12686  0006D2  EE20 F00B          	lfsr	2,0Bh
 12687  0006D6  5049               	movf	((c:_ic_ptr)),c,w
 12688  0006D8  26D9               	addwf	fsr2l
 12689  0006DA  504A               	movf	((c:_ic_ptr+1)),c,w
 12690  0006DC  22DA               	addwfc	fsr2h
 12691  0006DE  50DF               	movf	indf2,w
 12692  0006E0  0100               	movlb	0	; () banked
 12693  0006E2  0100               	movlb	0	; () banked
 12694  0006E4  6F9D               	movwf	(0+(i2c_int_handler@error_buf+02h))&0ffh
 12695                           	line	269
 12696                           	
 12697  0006E6                     i2l18989:; BSR set to: 0
 12698                           
 12699                           ;my_i2c.c: 269: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
 12700  0006E6  0100               	movlb	0	; () banked
 12701  0006E8  6F8C               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12702  0006EA  0E03               	movlw	low(03h)
 12703  0006EC  0100               	movlb	0	; () banked
 12704  0006EE  0100               	movlb	0	; () banked
 12705  0006F0  6F85               	movwf	((?_ToMainHigh_sendmsg))&0ffh
 12706  0006F2  0100               	movlb	0	; () banked
 12707  0006F4  518C               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 12708  0006F6  0100               	movlb	0	; () banked
 12709  0006F8  6F8D               	movwf	(??_i2c_int_handler+1+0)&0ffh
 12710  0006FA  0E29               	movlw	low(029h)
 12711  0006FC  0100               	movlb	0	; () banked
 12712  0006FE  0100               	movlb	0	; () banked
 12713  000700  6F86               	movwf	(0+(?_ToMainHigh_sendmsg+01h))&0ffh
 12714  000702  0100               	movlb	0	; () banked
 12715  000704  518D               	movf	(??_i2c_int_handler+1+0)&0ffh,w
 12716  000706  0100               	movlb	0	; () banked
 12717  000708  0E00               	movlw	high(i2c_int_handler@error_buf)
 12718  00070A  0100               	movlb	0	; () banked
 12719  00070C  0100               	movlb	0	; () banked
 12720  00070E  6F88               	movwf	(1+(?_ToMainHigh_sendmsg+02h))&0ffh
 12721  000710  0100               	movlb	0	; () banked
 12722  000712  0E9B               	movlw	low(i2c_int_handler@error_buf)
 12723  000714  0100               	movlb	0	; () banked
 12724  000716  6F87               	movwf	(0+(?_ToMainHigh_sendmsg+02h))&0ffh
 12725  000718  0100               	movlb	0	; () banked
 12726  00071A  ECEE  F00D         	call	_ToMainHigh_sendmsg	;wreg free
 12727                           	line	270
 12728                           	
 12729  00071E                     i2l18991:
 12730                           ;my_i2c.c: 270: ic_ptr->error_count = 0;
 12731  00071E  EE20 F00E          	lfsr	2,0Eh
 12732  000722  5049               	movf	((c:_ic_ptr)),c,w
 12733  000724  26D9               	addwf	fsr2l
 12734  000726  504A               	movf	((c:_ic_ptr+1)),c,w
 12735  000728  22DA               	addwfc	fsr2h
 12736  00072A  0E00               	movlw	low(0)
 12737  00072C  6EDF               	movwf	indf2
 12738  00072E  D001               	goto	i2l18993
 12739                           	line	271
 12740                           	
 12741  000730                     i2l7402:
 12742  000730  D000               	goto	i2l18993
 12743                           	line	272
 12744                           	
 12745  000732                     i2l7401:
 12746                           	
 12747  000732                     i2l18993:
 12748                           ;my_i2c.c: 271: }
 12749                           ;my_i2c.c: 272: if (msg_to_send) {
 12750  000732  0100               	movlb	0	; () banked
 12751  000734  0100               	movlb	0	; () banked
 12752  000736  51A4               	movf	((i2c_int_handler@msg_to_send))&0ffh,w
 12753  000738  B4D8               	btfsc	status,2
 12754  00073A  D001               	goto	i2u215_41
 12755  00073C  D001               	goto	i2u215_40
 12756  00073E                     i2u215_41:
 12757  00073E  D009               	goto	i2l7404
 12758  000740                     i2u215_40:
 12759                           	line	279
 12760                           	
 12761  000740                     i2l18995:; BSR set to: 0
 12762                           
 12763                           ;my_i2c.c: 279: msg_to_send = 0;
 12764  000740  0100               	movlb	0	; () banked
 12765  000742  6F8C               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12766  000744  0E00               	movlw	low(0)
 12767  000746  0100               	movlb	0	; () banked
 12768  000748  0100               	movlb	0	; () banked
 12769  00074A  6FA4               	movwf	((i2c_int_handler@msg_to_send))&0ffh
 12770  00074C  0100               	movlb	0	; () banked
 12771  00074E  518C               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 12772  000750  D000               	goto	i2l7404
 12773                           	line	280
 12774                           	
 12775  000752                     i2l7403:; BSR set to: 0
 12776                           
 12777                           	line	281
 12778                           	
 12779  000752                     i2l7404:; BSR set to: 0
 12780                           
 12781  000752  0012               	return
 12782                           	opt stack 0
 12783                           GLOBAL	__end_of_i2c_int_handler
 12784  000754                     	__end_of_i2c_int_handler:
 12785                           	signat	_i2c_int_handler,88
 12786                           	global	_timer0_int_handler
 12787                           
 12788 ;; *************** function _timer0_int_handler *****************
 12789 ;; Defined at:
 12790 ;;		line 17 in file "../src/user_interrupts.c"
 12791 ;; Parameters:    Size  Location     Type
 12792 ;;		None
 12793 ;; Auto vars:     Size  Location     Type
 12794 ;;  val             2   18[BANK0 ] unsigned int 
 12795 ;;  length          2   16[BANK0 ] int 
 12796 ;;  msgtype         2   14[BANK0 ] int 
 12797 ;; Return value:  Size  Location     Type
 12798 ;;		None               void
 12799 ;; Registers used:
 12800 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12801 ;; Tracked objects:
 12802 ;;		On entry : 0/0
 12803 ;;		On exit  : 0/0
 12804 ;;		Unchanged: 0/0
 12805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12806 ;;      Params:         0       0       0       0       0
 12807 ;;      Locals:         0       6       0       0       0
 12808 ;;      Temps:          0       2       0       0       0
 12809 ;;      Totals:         0       8       0       0       0
 12810 ;;Total ram usage:        8 bytes
 12811 ;; Hardware stack levels used:    1
 12812 ;; Hardware stack levels required when called:    3
 12813 ;; This function calls:
 12814 ;;		_WriteTimer0
 12815 ;;		_FromMainHigh_recvmsg
 12816 ;;		_ToMainHigh_sendmsg
 12817 ;; This function is called by:
 12818 ;;		_InterruptHandlerHigh
 12819 ;; This function uses a non-reentrant model
 12820 ;;
 12821                           psect	text41,class=CODE,space=0,reloc=2
 12822                           global __ptext41
 12823  000F62                     __ptext41:
 12824                           psect	text41
 12825                           	file	"../src/user_interrupts.c"
 12826                           	line	17
 12827                           	global	__size_of_timer0_int_handler
 12828  0000                     	__size_of_timer0_int_handler	equ	__end_of_timer0_int_handler-_timer0_int_handler
 12829                           	
 12830  000F62                     _timer0_int_handler:; BSR set to: 0
 12831                           
 12832                           	opt	stack 17
 12833                           	line	22
 12834                           	
 12835  000F62                     i2l18997:
 12836                           ;user_interrupts.c: 18: unsigned int val;
 12837                           ;user_interrupts.c: 19: int length, msgtype;
 12838                           ;user_interrupts.c: 22: LATBbits.LATB0 = !LATBbits.LATB0;
 12839                           	
 12840  000F62  A08A               	btfss	((c:3978)),c,0	;volatile
 12841  000F64  D001               	goto	i2u216_41
 12842  000F66  D002               	goto	i2u216_40
 12843  000F68                     i2u216_41:
 12844  000F68  0E01               	movlw	1
 12845  000F6A  D001               	goto	i2u216_46
 12846  000F6C                     i2u216_40:
 12847  000F6C  0E00               	movlw	0
 12848  000F6E                     i2u216_46:
 12849  000F6E  0100               	movlb	0	; () banked
 12850  000F70  6F8C               	movwf	(??_timer0_int_handler+0+0)&0ffh
 12851  000F72  508A               	movf	((c:3978)),c,w	;volatile
 12852  000F74  0100               	movlb	0	; () banked
 12853  000F76  198C               	xorwf	((??_timer0_int_handler+0+0))&0ffh,w
 12854  000F78  0BFE               	andlw	not ((1<<1)-1)
 12855  000F7A  198C               	xorwf	((??_timer0_int_handler+0+0))&0ffh,w
 12856  000F7C  6E8A               	movwf	((c:3978)),c	;volatile
 12857                           	line	24
 12858                           	
 12859  000F7E                     i2l18999:; BSR set to: 0
 12860                           
 12861                           ;user_interrupts.c: 24: WriteTimer0(0);
 12862  000F7E  0E00               	movlw	high(0)
 12863  000F80  6E34               	movwf	((c:?_WriteTimer0+1)),c
 12864  000F82  0E00               	movlw	low(0)
 12865  000F84  6E33               	movwf	((c:?_WriteTimer0)),c
 12866  000F86  EC41  F00E         	call	_WriteTimer0	;wreg free
 12867                           	line	26
 12868                           	
 12869  000F8A                     i2l19001:
 12870                           ;user_interrupts.c: 26: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)(uns
                                 igned int)&msgtype, (void *) &val);
 12871  000F8A  0100               	movlb	0	; () banked
 12872  000F8C  6F8C               	movwf	(??_timer0_int_handler+0+0)&0ffh
 12873  000F8E  0E02               	movlw	low(02h)
 12874  000F90  0100               	movlb	0	; () banked
 12875  000F92  0100               	movlb	0	; () banked
 12876  000F94  6F87               	movwf	((?_FromMainHigh_recvmsg))&0ffh
 12877  000F96  0100               	movlb	0	; () banked
 12878  000F98  518C               	movf	(??_timer0_int_handler+0+0)&0ffh,w
 12879  000F9A  0100               	movlb	0	; () banked
 12880  000F9C  0E00               	movlw	high(timer0_int_handler@msgtype)
 12881  000F9E  0100               	movlb	0	; () banked
 12882  000FA0  0100               	movlb	0	; () banked
 12883  000FA2  6F89               	movwf	(1+(?_FromMainHigh_recvmsg+01h))&0ffh
 12884  000FA4  0100               	movlb	0	; () banked
 12885  000FA6  0E8E               	movlw	low(timer0_int_handler@msgtype)
 12886  000FA8  0100               	movlb	0	; () banked
 12887  000FAA  6F88               	movwf	(0+(?_FromMainHigh_recvmsg+01h))&0ffh
 12888  000FAC  0100               	movlb	0	; () banked
 12889  000FAE  0E00               	movlw	high(timer0_int_handler@val)
 12890  000FB0  0100               	movlb	0	; () banked
 12891  000FB2  0100               	movlb	0	; () banked
 12892  000FB4  6F8B               	movwf	(1+(?_FromMainHigh_recvmsg+03h))&0ffh
 12893  000FB6  0100               	movlb	0	; () banked
 12894  000FB8  0E92               	movlw	low(timer0_int_handler@val)
 12895  000FBA  0100               	movlb	0	; () banked
 12896  000FBC  6F8A               	movwf	(0+(?_FromMainHigh_recvmsg+03h))&0ffh
 12897  000FBE  0100               	movlb	0	; () banked
 12898  000FC0  EC90  F00D         	call	_FromMainHigh_recvmsg	;wreg free
 12899  000FC4  0100               	movlb	0	; () banked
 12900  000FC6  0100               	movlb	0	; () banked
 12901  000FC8  6F90               	movwf	((timer0_int_handler@length))&0ffh
 12902  000FCA  0100               	movlb	0	; () banked
 12903  000FCC  6B91               	clrf	((timer0_int_handler@length+1))&0ffh
 12904  000FCE  0100               	movlb	0	; () banked
 12905  000FD0  BF90               	btfsc	((timer0_int_handler@length))&0ffh,7
 12906  000FD2  0791               	decf	((timer0_int_handler@length+1))&0ffh
 12907                           	line	27
 12908                           	
 12909  000FD4                     i2l19003:; BSR set to: 0
 12910                           
 12911                           ;user_interrupts.c: 27: if (length == sizeof (val)) {
 12912  000FD4  0100               	movlb	0	; () banked
 12913  000FD6  0100               	movlb	0	; () banked
 12914  000FD8  5190               	movf	((timer0_int_handler@length))&0ffh,w
 12915  000FDA  0A02               	xorlw	2
 12916  000FDC  1191               	iorwf ((timer0_int_handler@length+1))&0ffh,w
 12917                           
 12918  000FDE  A4D8               	btfss	status,2
 12919  000FE0  D001               	goto	i2u217_41
 12920  000FE2  D001               	goto	i2u217_40
 12921  000FE4                     i2u217_41:
 12922  000FE4  D01D               	goto	i2l16384
 12923  000FE6                     i2u217_40:
 12924                           	line	28
 12925                           	
 12926  000FE6                     i2l19005:; BSR set to: 0
 12927                           
 12928                           ;user_interrupts.c: 28: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
 12929  000FE6  0100               	movlb	0	; () banked
 12930  000FE8  6F8C               	movwf	(??_timer0_int_handler+0+0)&0ffh
 12931  000FEA  0E02               	movlw	low(02h)
 12932  000FEC  0100               	movlb	0	; () banked
 12933  000FEE  0100               	movlb	0	; () banked
 12934  000FF0  6F85               	movwf	((?_ToMainHigh_sendmsg))&0ffh
 12935  000FF2  0100               	movlb	0	; () banked
 12936  000FF4  518C               	movf	(??_timer0_int_handler+0+0)&0ffh,w
 12937  000FF6  0100               	movlb	0	; () banked
 12938  000FF8  6F8D               	movwf	(??_timer0_int_handler+1+0)&0ffh
 12939  000FFA  0E0A               	movlw	low(0Ah)
 12940  000FFC  0100               	movlb	0	; () banked
 12941  000FFE  0100               	movlb	0	; () banked
 12942  001000  6F86               	movwf	(0+(?_ToMainHigh_sendmsg+01h))&0ffh
 12943  001002  0100               	movlb	0	; () banked
 12944  001004  518D               	movf	(??_timer0_int_handler+1+0)&0ffh,w
 12945  001006  0100               	movlb	0	; () banked
 12946  001008  0E00               	movlw	high(timer0_int_handler@val)
 12947  00100A  0100               	movlb	0	; () banked
 12948  00100C  0100               	movlb	0	; () banked
 12949  00100E  6F88               	movwf	(1+(?_ToMainHigh_sendmsg+02h))&0ffh
 12950  001010  0100               	movlb	0	; () banked
 12951  001012  0E92               	movlw	low(timer0_int_handler@val)
 12952  001014  0100               	movlb	0	; () banked
 12953  001016  6F87               	movwf	(0+(?_ToMainHigh_sendmsg+02h))&0ffh
 12954  001018  0100               	movlb	0	; () banked
 12955  00101A  ECEE  F00D         	call	_ToMainHigh_sendmsg	;wreg free
 12956  00101E  D000               	goto	i2l16384
 12957                           	line	29
 12958                           	
 12959  001020                     i2l16383:
 12960                           	line	30
 12961                           	
 12962  001020                     i2l16384:
 12963  001020  0012               	return
 12964                           	opt stack 0
 12965                           GLOBAL	__end_of_timer0_int_handler
 12966  001022                     	__end_of_timer0_int_handler:
 12967                           	signat	_timer0_int_handler,88
 12968                           	global	_SleepIfOkay
 12969                           
 12970 ;; *************** function _SleepIfOkay *****************
 12971 ;; Defined at:
 12972 ;;		line 228 in file "../src/messages.c"
 12973 ;; Parameters:    Size  Location     Type
 12974 ;;		None
 12975 ;; Auto vars:     Size  Location     Type
 12976 ;;		None
 12977 ;; Return value:  Size  Location     Type
 12978 ;;		None               void
 12979 ;; Registers used:
 12980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12981 ;; Tracked objects:
 12982 ;;		On entry : 0/0
 12983 ;;		On exit  : 0/0
 12984 ;;		Unchanged: 0/0
 12985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12986 ;;      Params:         0       0       0       0       0
 12987 ;;      Locals:         0       0       0       0       0
 12988 ;;      Temps:          0       0       0       0       0
 12989 ;;      Totals:         0       0       0       0       0
 12990 ;;Total ram usage:        0 bytes
 12991 ;; Hardware stack levels used:    1
 12992 ;; Hardware stack levels required when called:    2
 12993 ;; This function calls:
 12994 ;;		i2_in_low_int
 12995 ;;		i2_in_high_int
 12996 ;;		i2_check_msg
 12997 ;;		_enter_sleep_mode
 12998 ;; This function is called by:
 12999 ;;		_InterruptHandlerHigh
 13000 ;; This function uses a non-reentrant model
 13001 ;;
 13002                           psect	text42,class=CODE,space=0,reloc=2
 13003                           global __ptext42
 13004  001538                     __ptext42:
 13005                           psect	text42
 13006                           	file	"../src/messages.c"
 13007                           	line	228
 13008                           	global	__size_of_SleepIfOkay
 13009  0000                     	__size_of_SleepIfOkay	equ	__end_of_SleepIfOkay-_SleepIfOkay
 13010                           	
 13011  001538                     _SleepIfOkay:
 13012                           	opt	stack 18
 13013                           	line	230
 13014                           	
 13015  001538                     i2l18257:
 13016                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
 13017  001538  6647               	tstfsz	((c:_MQ_Main_Willing_to_block)),c
 13018  00153A  D001               	goto	i2u133_41
 13019  00153C  D001               	goto	i2u133_40
 13020  00153E                     i2u133_41:
 13021  00153E  D002               	goto	i2l18261
 13022  001540                     i2u133_40:
 13023  001540  D035               	goto	i2l5527
 13024                           	line	231
 13025                           	
 13026  001542                     i2l18259:
 13027                           ;messages.c: 231: return;
 13028  001542  D034               	goto	i2l5527
 13029                           	line	232
 13030                           	
 13031  001544                     i2l5526:
 13032                           	line	235
 13033                           	
 13034  001544                     i2l18261:
 13035                           ;messages.c: 232: }
 13036                           ;messages.c: 235: if (in_low_int()) {
 13037  001544  EC7D  F00C         	call	i2_in_low_int	;wreg free
 13038  001548  5036               	movf	(1+?i2_in_low_int),c,w
 13039  00154A  1035               	iorwf (0+?i2_in_low_int),c,w
 13040                           
 13041  00154C  B4D8               	btfsc	status,2
 13042  00154E  D001               	goto	i2u134_41
 13043  001550  D001               	goto	i2u134_40
 13044  001552                     i2u134_41:
 13045  001552  D002               	goto	i2l18265
 13046  001554                     i2u134_40:
 13047  001554  D02B               	goto	i2l5527
 13048                           	line	236
 13049                           	
 13050  001556                     i2l18263:
 13051                           ;messages.c: 236: return;
 13052  001556  D02A               	goto	i2l5527
 13053                           	line	237
 13054                           	
 13055  001558                     i2l5528:
 13056                           	line	240
 13057                           	
 13058  001558                     i2l18265:
 13059                           ;messages.c: 237: }
 13060                           ;messages.c: 240: if (!in_high_int()) {
 13061  001558  EC4A  F00E         	call	i2_in_high_int	;wreg free
 13062  00155C  5034               	movf	(1+?i2_in_high_int),c,w
 13063  00155E  1033               	iorwf (0+?i2_in_high_int),c,w
 13064                           
 13065  001560  A4D8               	btfss	status,2
 13066  001562  D001               	goto	i2u135_41
 13067  001564  D001               	goto	i2u135_40
 13068  001566                     i2u135_41:
 13069  001566  D002               	goto	i2l18269
 13070  001568                     i2u135_40:
 13071  001568  D021               	goto	i2l5527
 13072                           	line	241
 13073                           	
 13074  00156A                     i2l18267:
 13075                           ;messages.c: 241: return;
 13076  00156A  D020               	goto	i2l5527
 13077                           	line	242
 13078                           	
 13079  00156C                     i2l5529:
 13080                           	line	247
 13081                           	
 13082  00156C                     i2l18269:
 13083                           ;messages.c: 242: }
 13084                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
 13085  00156C  0101               	movlb	1	; () banked
 13086  00156E  0E01               	movlw	high(_ToMainHigh_MQ)
 13087  001570  6E34               	movwf	((c:?i2_check_msg+1)),c
 13088  001572  0101               	movlb	1	; () banked
 13089  001574  0E36               	movlw	low(_ToMainHigh_MQ)
 13090  001576  6E33               	movwf	((c:?i2_check_msg)),c
 13091  001578  ECB7  F00D         	call	i2_check_msg	;wreg free
 13092  00157C  0900               	iorlw	0
 13093  00157E  B4D8               	btfsc	status,2
 13094  001580  D001               	goto	i2u136_41
 13095  001582  D001               	goto	i2u136_40
 13096  001584                     i2u136_41:
 13097  001584  D002               	goto	i2l18273
 13098  001586                     i2u136_40:
 13099  001586  D012               	goto	i2l5527
 13100                           	line	248
 13101                           	
 13102  001588                     i2l18271:
 13103                           ;messages.c: 248: return;
 13104  001588  D011               	goto	i2l5527
 13105                           	line	249
 13106                           	
 13107  00158A                     i2l5530:
 13108                           	line	250
 13109                           	
 13110  00158A                     i2l18273:
 13111                           ;messages.c: 249: }
 13112                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
 13113  00158A  0101               	movlb	1	; () banked
 13114  00158C  0E01               	movlw	high(_ToMainLow_MQ)
 13115  00158E  6E34               	movwf	((c:?i2_check_msg+1)),c
 13116  001590  0101               	movlb	1	; () banked
 13117  001592  0E6C               	movlw	low(_ToMainLow_MQ)
 13118  001594  6E33               	movwf	((c:?i2_check_msg)),c
 13119  001596  ECB7  F00D         	call	i2_check_msg	;wreg free
 13120  00159A  0900               	iorlw	0
 13121  00159C  B4D8               	btfsc	status,2
 13122  00159E  D001               	goto	i2u137_41
 13123  0015A0  D001               	goto	i2u137_40
 13124  0015A2                     i2u137_41:
 13125  0015A2  D002               	goto	i2l18277
 13126  0015A4                     i2u137_40:
 13127  0015A4  D003               	goto	i2l5527
 13128                           	line	251
 13129                           	
 13130  0015A6                     i2l18275:
 13131                           ;messages.c: 251: return;
 13132  0015A6  D002               	goto	i2l5527
 13133                           	line	252
 13134                           	
 13135  0015A8                     i2l5531:
 13136                           	line	253
 13137                           	
 13138  0015A8                     i2l18277:
 13139                           ;messages.c: 252: }
 13140                           ;messages.c: 253: enter_sleep_mode();
 13141  0015A8  EC60  F00E         	call	_enter_sleep_mode	;wreg free
 13142                           	line	254
 13143                           	
 13144  0015AC                     i2l5527:
 13145  0015AC  0012               	return
 13146                           	opt stack 0
 13147                           GLOBAL	__end_of_SleepIfOkay
 13148  0015AE                     	__end_of_SleepIfOkay:
 13149                           	signat	_SleepIfOkay,88
 13150                           	global	_ToMainHigh_sendmsg
 13151                           
 13152 ;; *************** function _ToMainHigh_sendmsg *****************
 13153 ;; Defined at:
 13154 ;;		line 126 in file "../src/messages.c"
 13155 ;; Parameters:    Size  Location     Type
 13156 ;;  length          1    5[BANK0 ] unsigned char 
 13157 ;;  msgtype         1    6[BANK0 ] unsigned char 
 13158 ;;  data            2    7[BANK0 ] PTR void 
 13159 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@error_buf(3), 
 13160 ;; Auto vars:     Size  Location     Type
 13161 ;;		None
 13162 ;; Return value:  Size  Location     Type
 13163 ;;                  1    wreg      char 
 13164 ;; Registers used:
 13165 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13166 ;; Tracked objects:
 13167 ;;		On entry : 0/0
 13168 ;;		On exit  : 0/0
 13169 ;;		Unchanged: 0/0
 13170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13171 ;;      Params:         0       4       0       0       0
 13172 ;;      Locals:         0       0       0       0       0
 13173 ;;      Temps:          0       0       0       0       0
 13174 ;;      Totals:         0       4       0       0       0
 13175 ;;Total ram usage:        4 bytes
 13176 ;; Hardware stack levels used:    1
 13177 ;; Hardware stack levels required when called:    2
 13178 ;; This function calls:
 13179 ;;		i2_send_msg
 13180 ;; This function is called by:
 13181 ;;		_i2c_int_handler
 13182 ;;		_timer0_int_handler
 13183 ;; This function uses a non-reentrant model
 13184 ;;
 13185                           psect	text43,class=CODE,space=0,reloc=2
 13186                           global __ptext43
 13187  001BDC                     __ptext43:
 13188                           psect	text43
 13189                           	file	"../src/messages.c"
 13190                           	line	126
 13191                           	global	__size_of_ToMainHigh_sendmsg
 13192  0000                     	__size_of_ToMainHigh_sendmsg	equ	__end_of_ToMainHigh_sendmsg-_ToMainHigh_sendmsg
 13193                           	
 13194  001BDC                     _ToMainHigh_sendmsg:
 13195                           	opt	stack 17
 13196                           	line	132
 13197                           	
 13198  001BDC                     i2l19161:
 13199                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
 13200                           ;	Return value of _ToMainHigh_sendmsg is never used
 13201  001BDC  0101               	movlb	1	; () banked
 13202  001BDE  0E01               	movlw	high(_ToMainHigh_MQ)
 13203  001BE0  6E3E               	movwf	((c:?i2_send_msg+1)),c
 13204  001BE2  0101               	movlb	1	; () banked
 13205  001BE4  0E36               	movlw	low(_ToMainHigh_MQ)
 13206  001BE6  6E3D               	movwf	((c:?i2_send_msg)),c
 13207  001BE8  C085  F03F         	movff	(ToMainHigh_sendmsg@length),0+((c:?i2_send_msg)+02h)
 13208  001BEC  C086  F040         	movff	(ToMainHigh_sendmsg@msgtype),0+((c:?i2_send_msg)+03h)
 13209  001BF0  C087  F041         	movff	(ToMainHigh_sendmsg@data),0+((c:?i2_send_msg)+04h)
 13210  001BF4  C088  F042         	movff	(ToMainHigh_sendmsg@data+1),1+((c:?i2_send_msg)+04h)
 13211  001BF8  ECDA  F006         	call	i2_send_msg	;wreg free
 13212  001BFC  D000               	goto	i2l5493
 13213                           	
 13214  001BFE                     i2l19163:
 13215                           	line	133
 13216                           	
 13217  001BFE                     i2l5493:
 13218  001BFE  0012               	return
 13219                           	opt stack 0
 13220                           GLOBAL	__end_of_ToMainHigh_sendmsg
 13221  001C00                     	__end_of_ToMainHigh_sendmsg:
 13222                           	signat	_ToMainHigh_sendmsg,12409
 13223                           	global	_FromMainLow_recvmsg
 13224                           
 13225 ;; *************** function _FromMainLow_recvmsg *****************
 13226 ;; Defined at:
 13227 ;;		line 159 in file "../src/messages.c"
 13228 ;; Parameters:    Size  Location     Type
 13229 ;;  maxlength       1    7[BANK0 ] unsigned char 
 13230 ;;  msgtype         2    8[BANK0 ] PTR unsigned char 
 13231 ;;		 -> i2c_int_handler@msgtype(1), 
 13232 ;;  data            2   10[BANK0 ] PTR void 
 13233 ;;		 -> i2c_int_handler@data(10), 
 13234 ;; Auto vars:     Size  Location     Type
 13235 ;;		None
 13236 ;; Return value:  Size  Location     Type
 13237 ;;                  1    wreg      char 
 13238 ;; Registers used:
 13239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13240 ;; Tracked objects:
 13241 ;;		On entry : 0/0
 13242 ;;		On exit  : 0/0
 13243 ;;		Unchanged: 0/0
 13244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13245 ;;      Params:         0       5       0       0       0
 13246 ;;      Locals:         0       0       0       0       0
 13247 ;;      Temps:          0       0       0       0       0
 13248 ;;      Totals:         0       5       0       0       0
 13249 ;;Total ram usage:        5 bytes
 13250 ;; Hardware stack levels used:    1
 13251 ;; Hardware stack levels required when called:    2
 13252 ;; This function calls:
 13253 ;;		i2_recv_msg
 13254 ;; This function is called by:
 13255 ;;		_i2c_int_handler
 13256 ;; This function uses a non-reentrant model
 13257 ;;
 13258                           psect	text44,class=CODE,space=0,reloc=2
 13259                           global __ptext44
 13260  001AF8                     __ptext44:
 13261                           psect	text44
 13262                           	file	"../src/messages.c"
 13263                           	line	159
 13264                           	global	__size_of_FromMainLow_recvmsg
 13265  0000                     	__size_of_FromMainLow_recvmsg	equ	__end_of_FromMainLow_recvmsg-_FromMainLow_recvmsg
 13266                           	
 13267  001AF8                     _FromMainLow_recvmsg:
 13268                           	opt	stack 17
 13269                           	line	165
 13270                           	
 13271  001AF8                     i2l19165:
 13272                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
 13273  001AF8  0101               	movlb	1	; () banked
 13274  001AFA  0E01               	movlw	high(_FromMainLow_MQ)
 13275  001AFC  6E3E               	movwf	((c:?i2_recv_msg+1)),c
 13276  001AFE  0101               	movlb	1	; () banked
 13277  001B00  0E00               	movlw	low(_FromMainLow_MQ)
 13278  001B02  6E3D               	movwf	((c:?i2_recv_msg)),c
 13279  001B04  C087  F03F         	movff	(FromMainLow_recvmsg@maxlength),0+((c:?i2_recv_msg)+02h)
 13280  001B08  C088  F040         	movff	(FromMainLow_recvmsg@msgtype),0+((c:?i2_recv_msg)+03h)
 13281  001B0C  C089  F041         	movff	(FromMainLow_recvmsg@msgtype+1),1+((c:?i2_recv_msg)+03h)
 13282  001B10  C08A  F042         	movff	(FromMainLow_recvmsg@data),0+((c:?i2_recv_msg)+05h)
 13283  001B14  C08B  F043         	movff	(FromMainLow_recvmsg@data+1),1+((c:?i2_recv_msg)+05h)
 13284  001B18  ECC7  F005         	call	i2_recv_msg	;wreg free
 13285  001B1C  D000               	goto	i2l5504
 13286                           	
 13287  001B1E                     i2l19167:
 13288                           	line	166
 13289                           	
 13290  001B1E                     i2l5504:
 13291  001B1E  0012               	return
 13292                           	opt stack 0
 13293                           GLOBAL	__end_of_FromMainLow_recvmsg
 13294  001B20                     	__end_of_FromMainLow_recvmsg:
 13295                           	signat	_FromMainLow_recvmsg,12409
 13296                           	global	_FromMainHigh_recvmsg
 13297                           
 13298 ;; *************** function _FromMainHigh_recvmsg *****************
 13299 ;; Defined at:
 13300 ;;		line 183 in file "../src/messages.c"
 13301 ;; Parameters:    Size  Location     Type
 13302 ;;  maxlength       1    7[BANK0 ] unsigned char 
 13303 ;;  msgtype         2    8[BANK0 ] PTR unsigned char 
 13304 ;;		 -> RAM(1023), 
 13305 ;;  data            2   10[BANK0 ] PTR void 
 13306 ;;		 -> timer0_int_handler@val(2), 
 13307 ;; Auto vars:     Size  Location     Type
 13308 ;;		None
 13309 ;; Return value:  Size  Location     Type
 13310 ;;                  1    wreg      char 
 13311 ;; Registers used:
 13312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13313 ;; Tracked objects:
 13314 ;;		On entry : 0/0
 13315 ;;		On exit  : 0/0
 13316 ;;		Unchanged: 0/0
 13317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13318 ;;      Params:         0       5       0       0       0
 13319 ;;      Locals:         0       0       0       0       0
 13320 ;;      Temps:          0       0       0       0       0
 13321 ;;      Totals:         0       5       0       0       0
 13322 ;;Total ram usage:        5 bytes
 13323 ;; Hardware stack levels used:    1
 13324 ;; Hardware stack levels required when called:    2
 13325 ;; This function calls:
 13326 ;;		i2_recv_msg
 13327 ;; This function is called by:
 13328 ;;		_timer0_int_handler
 13329 ;; This function uses a non-reentrant model
 13330 ;;
 13331                           psect	text45,class=CODE,space=0,reloc=2
 13332                           global __ptext45
 13333  001B20                     __ptext45:
 13334                           psect	text45
 13335                           	file	"../src/messages.c"
 13336                           	line	183
 13337                           	global	__size_of_FromMainHigh_recvmsg
 13338  0000                     	__size_of_FromMainHigh_recvmsg	equ	__end_of_FromMainHigh_recvmsg-_FromMainHigh_recvmsg
 13339                           	
 13340  001B20                     _FromMainHigh_recvmsg:
 13341                           	opt	stack 17
 13342                           	line	189
 13343                           	
 13344  001B20                     i2l19173:
 13345                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
 13346  001B20  0102               	movlb	2	; () banked
 13347  001B22  0E02               	movlw	high(_FromMainHigh_MQ)
 13348  001B24  6E3E               	movwf	((c:?i2_recv_msg+1)),c
 13349  001B26  0102               	movlb	2	; () banked
 13350  001B28  0E00               	movlw	low(_FromMainHigh_MQ)
 13351  001B2A  6E3D               	movwf	((c:?i2_recv_msg)),c
 13352  001B2C  C087  F03F         	movff	(FromMainHigh_recvmsg@maxlength),0+((c:?i2_recv_msg)+02h)
 13353  001B30  C088  F040         	movff	(FromMainHigh_recvmsg@msgtype),0+((c:?i2_recv_msg)+03h)
 13354  001B34  C089  F041         	movff	(FromMainHigh_recvmsg@msgtype+1),1+((c:?i2_recv_msg)+03h)
 13355  001B38  C08A  F042         	movff	(FromMainHigh_recvmsg@data),0+((c:?i2_recv_msg)+05h)
 13356  001B3C  C08B  F043         	movff	(FromMainHigh_recvmsg@data+1),1+((c:?i2_recv_msg)+05h)
 13357  001B40  ECC7  F005         	call	i2_recv_msg	;wreg free
 13358  001B44  D000               	goto	i2l5512
 13359                           	
 13360  001B46                     i2l19175:
 13361                           	line	190
 13362                           	
 13363  001B46                     i2l5512:
 13364  001B46  0012               	return
 13365                           	opt stack 0
 13366                           GLOBAL	__end_of_FromMainHigh_recvmsg
 13367  001B48                     	__end_of_FromMainHigh_recvmsg:
 13368                           	signat	_FromMainHigh_recvmsg,12409
 13369                           	global	_enter_sleep_mode
 13370                           
 13371 ;; *************** function _enter_sleep_mode *****************
 13372 ;; Defined at:
 13373 ;;		line 202 in file "../src/messages.c"
 13374 ;; Parameters:    Size  Location     Type
 13375 ;;		None
 13376 ;; Auto vars:     Size  Location     Type
 13377 ;;		None
 13378 ;; Return value:  Size  Location     Type
 13379 ;;		None               void
 13380 ;; Registers used:
 13381 ;;		None
 13382 ;; Tracked objects:
 13383 ;;		On entry : 0/0
 13384 ;;		On exit  : 0/0
 13385 ;;		Unchanged: 0/0
 13386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13387 ;;      Params:         0       0       0       0       0
 13388 ;;      Locals:         0       0       0       0       0
 13389 ;;      Temps:          0       0       0       0       0
 13390 ;;      Totals:         0       0       0       0       0
 13391 ;;Total ram usage:        0 bytes
 13392 ;; Hardware stack levels used:    1
 13393 ;; This function calls:
 13394 ;;		Nothing
 13395 ;; This function is called by:
 13396 ;;		_SleepIfOkay
 13397 ;; This function uses a non-reentrant model
 13398 ;;
 13399                           psect	text46,class=CODE,space=0,reloc=2
 13400                           global __ptext46
 13401  001CC0                     __ptext46:
 13402                           psect	text46
 13403                           	file	"../src/messages.c"
 13404                           	line	202
 13405                           	global	__size_of_enter_sleep_mode
 13406  0000                     	__size_of_enter_sleep_mode	equ	__end_of_enter_sleep_mode-_enter_sleep_mode
 13407                           	
 13408  001CC0                     _enter_sleep_mode:
 13409                           	opt	stack 19
 13410                           	line	204
 13411                           	
 13412  001CC0                     i2l18583:
 13413                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
 13414  001CC0  8ED3               	bsf	((c:4051)),c,7	;volatile
 13415                           	line	213
 13416                           # 213 "../src/messages.c"
 13417  001CC2  0003               SLEEP ;# 
 13418                           	line	215
 13419                           # 215 "../src/messages.c"
 13420                           # 214 ;# 
 13421                           psect	text46
 13422                           	line	218
 13423                           	
 13424  001CC4                     i2l5520:
 13425  001CC4  0012               	return
 13426                           	opt stack 0
 13427                           GLOBAL	__end_of_enter_sleep_mode
 13428  001CC6                     	__end_of_enter_sleep_mode:
 13429                           	signat	_enter_sleep_mode,88
 13430                           	global	_start_i2c_slave_reply
 13431                           
 13432 ;; *************** function _start_i2c_slave_reply *****************
 13433 ;; Defined at:
 13434 ;;		line 53 in file "../src/my_i2c.c"
 13435 ;; Parameters:    Size  Location     Type
 13436 ;;  length          1   50[COMRAM] unsigned char 
 13437 ;;  msg             2   51[COMRAM] PTR unsigned char 
 13438 ;;		 -> i2c_int_handler@empty(3), i2c_int_handler@data(10), 
 13439 ;; Auto vars:     Size  Location     Type
 13440 ;;		None
 13441 ;; Return value:  Size  Location     Type
 13442 ;;		None               void
 13443 ;; Registers used:
 13444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13445 ;; Tracked objects:
 13446 ;;		On entry : 0/0
 13447 ;;		On exit  : 0/0
 13448 ;;		Unchanged: 0/0
 13449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13450 ;;      Params:         3       0       0       0       0
 13451 ;;      Locals:         0       0       0       0       0
 13452 ;;      Temps:          2       0       0       0       0
 13453 ;;      Totals:         5       0       0       0       0
 13454 ;;Total ram usage:        5 bytes
 13455 ;; Hardware stack levels used:    1
 13456 ;; This function calls:
 13457 ;;		Nothing
 13458 ;; This function is called by:
 13459 ;;		_i2c_int_handler
 13460 ;; This function uses a non-reentrant model
 13461 ;;
 13462                           psect	text47,class=CODE,space=0,reloc=2
 13463                           global __ptext47
 13464  001022                     __ptext47:
 13465                           psect	text47
 13466                           	file	"../src/my_i2c.c"
 13467                           	line	53
 13468                           	global	__size_of_start_i2c_slave_reply
 13469  0000                     	__size_of_start_i2c_slave_reply	equ	__end_of_start_i2c_slave_reply-_start_i2c_slave_rep
                                 ly
 13470                           	
 13471  001022                     _start_i2c_slave_reply:
 13472                           	opt	stack 19
 13473                           	line	55
 13474                           	
 13475  001022                     i2l18593:
 13476                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
                                 ++) {
 13477  001022  EE20 F019          	lfsr	2,019h
 13478  001026  5049               	movf	((c:_ic_ptr)),c,w
 13479  001028  26D9               	addwf	fsr2l
 13480  00102A  504A               	movf	((c:_ic_ptr+1)),c,w
 13481  00102C  22DA               	addwfc	fsr2h
 13482  00102E  0E00               	movlw	low(0)
 13483  001030  6EDF               	movwf	indf2
 13484  001032  D02E               	goto	i2l18599
 13485                           	
 13486  001034                     i2l7343:
 13487                           	line	56
 13488                           	
 13489  001034                     i2l18595:
 13490                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
 13491  001034  EE20 F019          	lfsr	2,019h
 13492  001038  5049               	movf	((c:_ic_ptr)),c,w
 13493  00103A  26D9               	addwf	fsr2l
 13494  00103C  504A               	movf	((c:_ic_ptr+1)),c,w
 13495  00103E  22DA               	addwfc	fsr2h
 13496  001040  50DF               	movf	indf2,w
 13497  001042  6E36               	movwf	(??_start_i2c_slave_reply+0+0)&0ffh,c
 13498  001044  5036               	movf	((??_start_i2c_slave_reply+0+0)),c,w
 13499  001046  0D01               	mullw	01h
 13500  001048  50F3               	movf	(prodl),c,w
 13501  00104A  2434               	addwf	((c:start_i2c_slave_reply@msg)),c,w
 13502  00104C  6ED9               	movwf	c:fsr2l
 13503  00104E  50F4               	movf	(prodh),c,w
 13504  001050  2035               	addwfc	((c:start_i2c_slave_reply@msg+1)),c,w
 13505  001052  6EDA               	movwf	1+c:fsr2l
 13506  001054  EE10 F019          	lfsr	1,019h
 13507  001058  5049               	movf	((c:_ic_ptr)),c,w
 13508  00105A  26E1               	addwf	fsr1l
 13509  00105C  504A               	movf	((c:_ic_ptr+1)),c,w
 13510  00105E  22E2               	addwfc	fsr1h
 13511  001060  50E7               	movf	indf1,w
 13512  001062  6E37               	movwf	(??_start_i2c_slave_reply+1+0)&0ffh,c
 13513  001064  5037               	movf	((??_start_i2c_slave_reply+1+0)),c,w
 13514  001066  0D01               	mullw	01h
 13515  001068  0E0F               	movlw	0Fh
 13516  00106A  26F3               	addwf	(prodl),c
 13517  00106C  0E00               	movlw	0
 13518  00106E  22F4               	addwfc	(prodh),c
 13519  001070  50F3               	movf	(prodl),c,w
 13520  001072  2449               	addwf	((c:_ic_ptr)),c,w
 13521  001074  6EE1               	movwf	c:fsr1l
 13522  001076  50F4               	movf	(prodh),c,w
 13523  001078  204A               	addwfc	((c:_ic_ptr+1)),c,w
 13524  00107A  6EE2               	movwf	1+c:fsr1l
 13525  00107C  CFDF FFE7          	movff	indf2,indf1
 13526                           	line	55
 13527                           	
 13528  001080                     i2l18597:
 13529  001080  EE20 F019          	lfsr	2,019h
 13530  001084  5049               	movf	((c:_ic_ptr)),c,w
 13531  001086  26D9               	addwf	fsr2l
 13532  001088  504A               	movf	((c:_ic_ptr+1)),c,w
 13533  00108A  22DA               	addwfc	fsr2h
 13534  00108C  2ADF               	incf	indf2
 13535                           
 13536  00108E  D000               	goto	i2l18599
 13537                           	
 13538  001090                     i2l7342:
 13539                           	
 13540  001090                     i2l18599:
 13541  001090  EE20 F019          	lfsr	2,019h
 13542  001094  5049               	movf	((c:_ic_ptr)),c,w
 13543  001096  26D9               	addwf	fsr2l
 13544  001098  504A               	movf	((c:_ic_ptr+1)),c,w
 13545  00109A  22DA               	addwfc	fsr2h
 13546  00109C  50DF               	movf	indf2,w
 13547  00109E  6E36               	movwf	(??_start_i2c_slave_reply+0+0)&0ffh,c
 13548  0010A0  5033               	movf	((c:start_i2c_slave_reply@length)),c,w
 13549  0010A2  5C36               	subwf	((??_start_i2c_slave_reply+0+0)),c,w
 13550  0010A4  A0D8               	btfss	status,0
 13551  0010A6  D001               	goto	i2u164_41
 13552  0010A8  D001               	goto	i2u164_40
 13553  0010AA                     i2u164_41:
 13554  0010AA  D7C4               	goto	i2l18595
 13555  0010AC                     i2u164_40:
 13556  0010AC  D000               	goto	i2l18601
 13557                           	
 13558  0010AE                     i2l7344:
 13559                           	line	58
 13560                           	
 13561  0010AE                     i2l18601:
 13562                           ;my_i2c.c: 57: }
 13563                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
 13564  0010AE  EE20 F019          	lfsr	2,019h
 13565  0010B2  5049               	movf	((c:_ic_ptr)),c,w
 13566  0010B4  26D9               	addwf	fsr2l
 13567  0010B6  504A               	movf	((c:_ic_ptr+1)),c,w
 13568  0010B8  22DA               	addwfc	fsr2h
 13569  0010BA  C033  FFDF         	movff	(c:start_i2c_slave_reply@length),indf2
 13570                           
 13571                           	line	59
 13572                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
 13573  0010BE  EE20 F01A          	lfsr	2,01Ah
 13574  0010C2  5049               	movf	((c:_ic_ptr)),c,w
 13575  0010C4  26D9               	addwf	fsr2l
 13576  0010C6  504A               	movf	((c:_ic_ptr+1)),c,w
 13577  0010C8  22DA               	addwfc	fsr2h
 13578  0010CA  0E01               	movlw	low(01h)
 13579  0010CC  6EDF               	movwf	indf2
 13580                           	line	62
 13581                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
 13582  0010CE  EE20 F00F          	lfsr	2,0Fh
 13583  0010D2  5049               	movf	((c:_ic_ptr)),c,w
 13584  0010D4  26D9               	addwf	fsr2l
 13585  0010D6  504A               	movf	((c:_ic_ptr+1)),c,w
 13586  0010D8  22DA               	addwfc	fsr2h
 13587  0010DA  50DF               	movf	indf2,w
 13588  0010DC  6EC9               	movwf	((c:4041)),c	;volatile
 13589                           	line	65
 13590                           	
 13591  0010DE                     i2l18603:
 13592                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
 13593  0010DE  88C6               	bsf	((c:4038)),c,4	;volatile
 13594                           	line	67
 13595                           	
 13596  0010E0                     i2l7345:
 13597  0010E0  0012               	return
 13598                           	opt stack 0
 13599                           GLOBAL	__end_of_start_i2c_slave_reply
 13600  0010E2                     	__end_of_start_i2c_slave_reply:
 13601                           	signat	_start_i2c_slave_reply,8312
 13602                           	global	_handle_start
 13603                           
 13604 ;; *************** function _handle_start *****************
 13605 ;; Defined at:
 13606 ;;		line 71 in file "../src/my_i2c.c"
 13607 ;; Parameters:    Size  Location     Type
 13608 ;;  data_read       1   50[COMRAM] unsigned char 
 13609 ;; Auto vars:     Size  Location     Type
 13610 ;;		None
 13611 ;; Return value:  Size  Location     Type
 13612 ;;		None               void
 13613 ;; Registers used:
 13614 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13615 ;; Tracked objects:
 13616 ;;		On entry : 0/0
 13617 ;;		On exit  : 0/0
 13618 ;;		Unchanged: 0/0
 13619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13620 ;;      Params:         1       0       0       0       0
 13621 ;;      Locals:         0       0       0       0       0
 13622 ;;      Temps:          0       0       0       0       0
 13623 ;;      Totals:         1       0       0       0       0
 13624 ;;Total ram usage:        1 bytes
 13625 ;; Hardware stack levels used:    1
 13626 ;; This function calls:
 13627 ;;		Nothing
 13628 ;; This function is called by:
 13629 ;;		_i2c_int_handler
 13630 ;; This function uses a non-reentrant model
 13631 ;;
 13632                           psect	text48,class=CODE,space=0,reloc=2
 13633                           global __ptext48
 13634  0012FE                     __ptext48:
 13635                           psect	text48
 13636                           	file	"../src/my_i2c.c"
 13637                           	line	71
 13638                           	global	__size_of_handle_start
 13639  0000                     	__size_of_handle_start	equ	__end_of_handle_start-_handle_start
 13640                           	
 13641  0012FE                     _handle_start:
 13642                           	opt	stack 19
 13643                           	line	72
 13644                           	
 13645  0012FE                     i2l18605:
 13646                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
 13647  0012FE  EE20 F00B          	lfsr	2,0Bh
 13648  001302  5049               	movf	((c:_ic_ptr)),c,w
 13649  001304  26D9               	addwf	fsr2l
 13650  001306  504A               	movf	((c:_ic_ptr+1)),c,w
 13651  001308  22DA               	addwfc	fsr2h
 13652  00130A  0E01               	movlw	low(01h)
 13653  00130C  6EDF               	movwf	indf2
 13654                           	line	73
 13655                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
 13656  00130E  EE20 F00A          	lfsr	2,0Ah
 13657  001312  5049               	movf	((c:_ic_ptr)),c,w
 13658  001314  26D9               	addwf	fsr2l
 13659  001316  504A               	movf	((c:_ic_ptr+1)),c,w
 13660  001318  22DA               	addwfc	fsr2h
 13661  00131A  0E00               	movlw	low(0)
 13662  00131C  6EDF               	movwf	indf2
 13663                           	line	75
 13664                           	
 13665  00131E                     i2l18607:
 13666                           ;my_i2c.c: 75: if (data_read) {
 13667  00131E  5033               	movf	((c:handle_start@data_read)),c,w
 13668  001320  B4D8               	btfsc	status,2
 13669  001322  D001               	goto	i2u165_41
 13670  001324  D001               	goto	i2u165_40
 13671  001326                     i2u165_41:
 13672  001326  D034               	goto	i2l18617
 13673  001328                     i2u165_40:
 13674                           	line	76
 13675                           	
 13676  001328                     i2l18609:
 13677                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
 13678                           	
 13679  001328  AAC7               	btfss	((c:4039)),c,5	;volatile
 13680  00132A  D001               	goto	i2u166_41
 13681  00132C  D001               	goto	i2u166_40
 13682  00132E                     i2u166_41:
 13683  00132E  D018               	goto	i2l7349
 13684  001330                     i2u166_40:
 13685                           	line	79
 13686                           	
 13687  001330                     i2l18611:
 13688                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
 13689  001330  EE20 F00C          	lfsr	2,0Ch
 13690  001334  5049               	movf	((c:_ic_ptr)),c,w
 13691  001336  26D9               	addwf	fsr2l
 13692  001338  504A               	movf	((c:_ic_ptr+1)),c,w
 13693  00133A  22DA               	addwfc	fsr2h
 13694  00133C  0E05               	movlw	low(05h)
 13695  00133E  6EDF               	movwf	indf2
 13696                           	line	80
 13697                           ;my_i2c.c: 80: ic_ptr->error_count++;
 13698  001340  EE20 F00E          	lfsr	2,0Eh
 13699  001344  5049               	movf	((c:_ic_ptr)),c,w
 13700  001346  26D9               	addwf	fsr2l
 13701  001348  504A               	movf	((c:_ic_ptr+1)),c,w
 13702  00134A  22DA               	addwfc	fsr2h
 13703  00134C  2ADF               	incf	indf2
 13704                           
 13705                           	line	81
 13706                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
 13707  00134E  EE20 F00D          	lfsr	2,0Dh
 13708  001352  5049               	movf	((c:_ic_ptr)),c,w
 13709  001354  26D9               	addwf	fsr2l
 13710  001356  504A               	movf	((c:_ic_ptr+1)),c,w
 13711  001358  22DA               	addwfc	fsr2h
 13712  00135A  0E05               	movlw	low(05h)
 13713  00135C  6EDF               	movwf	indf2
 13714                           	line	82
 13715                           ;my_i2c.c: 82: } else {
 13716  00135E  D021               	goto	i2l7354
 13717                           	
 13718  001360                     i2l7349:
 13719                           	line	83
 13720                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
 13721                           	
 13722  001360  A4C7               	btfss	((c:4039)),c,2	;volatile
 13723  001362  D001               	goto	i2u167_41
 13724  001364  D001               	goto	i2u167_40
 13725  001366                     i2u167_41:
 13726  001366  D009               	goto	i2l18615
 13727  001368                     i2u167_40:
 13728                           	line	84
 13729                           	
 13730  001368                     i2l18613:
 13731                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
 13732  001368  EE20 F00C          	lfsr	2,0Ch
 13733  00136C  5049               	movf	((c:_ic_ptr)),c,w
 13734  00136E  26D9               	addwf	fsr2l
 13735  001370  504A               	movf	((c:_ic_ptr+1)),c,w
 13736  001372  22DA               	addwfc	fsr2h
 13737  001374  0E08               	movlw	low(08h)
 13738  001376  6EDF               	movwf	indf2
 13739                           	line	85
 13740                           ;my_i2c.c: 85: } else {
 13741  001378  D014               	goto	i2l7354
 13742                           	
 13743  00137A                     i2l7351:
 13744                           	line	86
 13745                           	
 13746  00137A                     i2l18615:
 13747                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
 13748  00137A  EE20 F00C          	lfsr	2,0Ch
 13749  00137E  5049               	movf	((c:_ic_ptr)),c,w
 13750  001380  26D9               	addwf	fsr2l
 13751  001382  504A               	movf	((c:_ic_ptr+1)),c,w
 13752  001384  22DA               	addwfc	fsr2h
 13753  001386  0E07               	movlw	low(07h)
 13754  001388  6EDF               	movwf	indf2
 13755  00138A  D00B               	goto	i2l7354
 13756                           	line	87
 13757                           	
 13758  00138C                     i2l7352:
 13759  00138C  D00A               	goto	i2l7354
 13760                           	line	88
 13761                           	
 13762  00138E                     i2l7350:
 13763                           	line	89
 13764                           ;my_i2c.c: 87: }
 13765                           ;my_i2c.c: 88: }
 13766                           ;my_i2c.c: 89: } else {
 13767  00138E  D009               	goto	i2l7354
 13768                           	
 13769  001390                     i2l7348:
 13770                           	line	90
 13771                           	
 13772  001390                     i2l18617:
 13773                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
 13774  001390  EE20 F00C          	lfsr	2,0Ch
 13775  001394  5049               	movf	((c:_ic_ptr)),c,w
 13776  001396  26D9               	addwf	fsr2l
 13777  001398  504A               	movf	((c:_ic_ptr+1)),c,w
 13778  00139A  22DA               	addwfc	fsr2h
 13779  00139C  0E06               	movlw	low(06h)
 13780  00139E  6EDF               	movwf	indf2
 13781  0013A0  D000               	goto	i2l7354
 13782                           	line	91
 13783                           	
 13784  0013A2                     i2l7353:
 13785                           	line	92
 13786                           	
 13787  0013A2                     i2l7354:
 13788  0013A2  0012               	return
 13789                           	opt stack 0
 13790                           GLOBAL	__end_of_handle_start
 13791  0013A4                     	__end_of_handle_start:
 13792                           	signat	_handle_start,4216
 13793                           	global	_WriteTimer0
 13794                           
 13795 ;; *************** function _WriteTimer0 *****************
 13796 ;; Defined at:
 13797 ;;		line 17 in file "plib/Timers/t0write.c"
 13798 ;; Parameters:    Size  Location     Type
 13799 ;;  timer0          2   50[COMRAM] unsigned int 
 13800 ;; Auto vars:     Size  Location     Type
 13801 ;;  timer           2   52[COMRAM] struct Timers
 13802 ;; Return value:  Size  Location     Type
 13803 ;;		None               void
 13804 ;; Registers used:
 13805 ;;		None
 13806 ;; Tracked objects:
 13807 ;;		On entry : 0/0
 13808 ;;		On exit  : 0/0
 13809 ;;		Unchanged: 0/0
 13810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13811 ;;      Params:         2       0       0       0       0
 13812 ;;      Locals:         2       0       0       0       0
 13813 ;;      Temps:          0       0       0       0       0
 13814 ;;      Totals:         4       0       0       0       0
 13815 ;;Total ram usage:        4 bytes
 13816 ;; Hardware stack levels used:    1
 13817 ;; This function calls:
 13818 ;;		Nothing
 13819 ;; This function is called by:
 13820 ;;		_timer0_int_handler
 13821 ;; This function uses a non-reentrant model
 13822 ;;
 13823                           psect	text49,class=CODE,space=0,reloc=2
 13824                           global __ptext49
 13825  001C82                     __ptext49:
 13826                           psect	text49
 13827                           	file	"plib/Timers/t0write.c"
 13828                           	line	17
 13829                           	global	__size_of_WriteTimer0
 13830  0000                     	__size_of_WriteTimer0	equ	__end_of_WriteTimer0-_WriteTimer0
 13831                           	
 13832  001C82                     _WriteTimer0:
 13833                           	opt	stack 19
 13834                           	line	20
 13835                           	
 13836  001C82                     i2l18651:
 13837  001C82  C033  F035         	movff	(c:WriteTimer0@timer0),(c:WriteTimer0@timer)
 13838  001C86  C034  F036         	movff	(c:WriteTimer0@timer0+1),(c:WriteTimer0@timer+1)
 13839                           	line	22
 13840  001C8A  C036  FFD7         	movff	0+((c:WriteTimer0@timer)+01h),(c:4055)	;volatile
 13841                           	line	23
 13842  001C8E  C035  FFD6         	movff	(c:WriteTimer0@timer),(c:4054)	;volatile
 13843                           	line	24
 13844                           	
 13845  001C92                     i2l16434:
 13846  001C92  0012               	return
 13847                           	opt stack 0
 13848                           GLOBAL	__end_of_WriteTimer0
 13849  001C94                     	__end_of_WriteTimer0:
 13850                           	signat	_WriteTimer0,4216
 13851                           	global	i2_in_low_int
 13852                           
 13853 ;; *************** function i2_in_low_int *****************
 13854 ;; Defined at:
 13855 ;;		line 30 in file "../src/interrupts.c"
 13856 ;; Parameters:    Size  Location     Type
 13857 ;;		None
 13858 ;; Auto vars:     Size  Location     Type
 13859 ;;		None
 13860 ;; Return value:  Size  Location     Type
 13861 ;;                  2   52[COMRAM] int 
 13862 ;; Registers used:
 13863 ;;		wreg, status,2, status,0, cstack
 13864 ;; Tracked objects:
 13865 ;;		On entry : 0/0
 13866 ;;		On exit  : 0/0
 13867 ;;		Unchanged: 0/0
 13868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13869 ;;      Params:         2       0       0       0       0
 13870 ;;      Locals:         0       0       0       0       0
 13871 ;;      Temps:          0       0       0       0       0
 13872 ;;      Totals:         2       0       0       0       0
 13873 ;;Total ram usage:        2 bytes
 13874 ;; Hardware stack levels used:    1
 13875 ;; Hardware stack levels required when called:    1
 13876 ;; This function calls:
 13877 ;;		i2_in_high_int
 13878 ;; This function is called by:
 13879 ;;		_SleepIfOkay
 13880 ;; This function uses a non-reentrant model
 13881 ;;
 13882                           psect	text50,class=CODE,space=0,reloc=2
 13883                           global __ptext50
 13884  0018FA                     __ptext50:
 13885                           psect	text50
 13886                           	file	"../src/interrupts.c"
 13887                           	line	30
 13888                           	global	__size_ofi2_in_low_int
 13889  0000                     	__size_ofi2_in_low_int	equ	__end_ofi2_in_low_int-i2_in_low_int
 13890                           	
 13891  0018FA                     i2_in_low_int:
 13892                           	opt	stack 18
 13893                           	line	31
 13894                           	
 13895  0018FA                     i2l18657:
 13896                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
 13897                           	
 13898  0018FA  ACF2               	btfss	((c:4082)),c,6	;volatile
 13899  0018FC  D001               	goto	i2u173_41
 13900  0018FE  D001               	goto	i2u173_40
 13901  001900                     i2u173_41:
 13902  001900  D007               	goto	i2l18665
 13903  001902                     i2u173_40:
 13904                           	line	32
 13905                           	
 13906  001902                     i2l18659:
 13907                           ;interrupts.c: 32: return (0);
 13908  001902  0E00               	movlw	high(0)
 13909  001904  6E36               	movwf	((c:?i2_in_low_int+1)),c
 13910  001906  0E00               	movlw	low(0)
 13911  001908  6E35               	movwf	((c:?i2_in_low_int)),c
 13912  00190A  D018               	goto	i2l1809
 13913                           	
 13914  00190C                     i2l18661:
 13915  00190C  D017               	goto	i2l1809
 13916                           	line	33
 13917                           	
 13918  00190E                     i2l18663:
 13919                           ;interrupts.c: 33: } else if (in_high_int()) {
 13920  00190E  D016               	goto	i2l1809
 13921                           	
 13922  001910                     i2l1808:
 13923                           	
 13924  001910                     i2l18665:
 13925  001910  EC4A  F00E         	call	i2_in_high_int	;wreg free
 13926  001914  5034               	movf	(1+?i2_in_high_int),c,w
 13927  001916  1033               	iorwf (0+?i2_in_high_int),c,w
 13928                           
 13929  001918  B4D8               	btfsc	status,2
 13930  00191A  D001               	goto	i2u174_41
 13931  00191C  D001               	goto	i2u174_40
 13932  00191E                     i2u174_41:
 13933  00191E  D007               	goto	i2l18673
 13934  001920                     i2u174_40:
 13935                           	line	34
 13936                           	
 13937  001920                     i2l18667:
 13938                           ;interrupts.c: 34: return (0);
 13939  001920  0E00               	movlw	high(0)
 13940  001922  6E36               	movwf	((c:?i2_in_low_int+1)),c
 13941  001924  0E00               	movlw	low(0)
 13942  001926  6E35               	movwf	((c:?i2_in_low_int)),c
 13943  001928  D009               	goto	i2l1809
 13944                           	
 13945  00192A                     i2l18669:
 13946  00192A  D008               	goto	i2l1809
 13947                           	line	35
 13948                           	
 13949  00192C                     i2l18671:
 13950                           ;interrupts.c: 35: } else {
 13951  00192C  D007               	goto	i2l1809
 13952                           	
 13953  00192E                     i2l1811:
 13954                           	line	36
 13955                           	
 13956  00192E                     i2l18673:
 13957                           ;interrupts.c: 36: return (1);
 13958  00192E  0E00               	movlw	high(01h)
 13959  001930  6E36               	movwf	((c:?i2_in_low_int+1)),c
 13960  001932  0E01               	movlw	low(01h)
 13961  001934  6E35               	movwf	((c:?i2_in_low_int)),c
 13962  001936  D002               	goto	i2l1809
 13963                           	
 13964  001938                     i2l18675:
 13965  001938  D001               	goto	i2l1809
 13966                           	line	37
 13967                           	
 13968  00193A                     i2l1812:
 13969  00193A  D000               	goto	i2l1809
 13970                           	
 13971  00193C                     i2l1810:
 13972                           	line	38
 13973                           	
 13974  00193C                     i2l1809:
 13975  00193C  0012               	return
 13976                           	opt stack 0
 13977                           GLOBAL	__end_ofi2_in_low_int
 13978  00193E                     	__end_ofi2_in_low_int:
 13979                           	signat	i2_in_low_int,90
 13980                           	global	i2_in_high_int
 13981                           
 13982 ;; *************** function i2_in_high_int *****************
 13983 ;; Defined at:
 13984 ;;		line 22 in file "../src/interrupts.c"
 13985 ;; Parameters:    Size  Location     Type
 13986 ;;		None
 13987 ;; Auto vars:     Size  Location     Type
 13988 ;;		None
 13989 ;; Return value:  Size  Location     Type
 13990 ;;                  2   50[COMRAM] int 
 13991 ;; Registers used:
 13992 ;;		wreg, status,2
 13993 ;; Tracked objects:
 13994 ;;		On entry : 0/0
 13995 ;;		On exit  : 0/0
 13996 ;;		Unchanged: 0/0
 13997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13998 ;;      Params:         2       0       0       0       0
 13999 ;;      Locals:         0       0       0       0       0
 14000 ;;      Temps:          0       0       0       0       0
 14001 ;;      Totals:         2       0       0       0       0
 14002 ;;Total ram usage:        2 bytes
 14003 ;; Hardware stack levels used:    1
 14004 ;; This function calls:
 14005 ;;		Nothing
 14006 ;; This function is called by:
 14007 ;;		_SleepIfOkay
 14008 ;;		i2_in_low_int
 14009 ;; This function uses a non-reentrant model
 14010 ;;
 14011                           psect	text51,class=CODE,space=0,reloc=2
 14012                           global __ptext51
 14013  001C94                     __ptext51:
 14014                           psect	text51
 14015                           	file	"../src/interrupts.c"
 14016                           	line	22
 14017                           	global	__size_ofi2_in_high_int
 14018  0000                     	__size_ofi2_in_high_int	equ	__end_ofi2_in_high_int-i2_in_high_int
 14019                           	
 14020  001C94                     i2_in_high_int:
 14021                           	opt	stack 19
 14022                           	line	23
 14023                           	
 14024  001C94                     i2l18653:
 14025                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
 14026                           	
 14027  001C94  0E00               	movlw	0
 14028  001C96  AEF2               	btfss	((c:4082)),c,7	;volatile
 14029  001C98  0E01               	movlw	1
 14030  001C9A  6E33               	movwf	((c:?i2_in_high_int)),c
 14031  001C9C  6A34               	clrf	((c:?i2_in_high_int+1)),c
 14032  001C9E  D000               	goto	i2l1802
 14033                           	
 14034  001CA0                     i2l18655:
 14035                           	line	24
 14036                           	
 14037  001CA0                     i2l1802:
 14038  001CA0  0012               	return
 14039                           	opt stack 0
 14040                           GLOBAL	__end_ofi2_in_high_int
 14041  001CA2                     	__end_ofi2_in_high_int:
 14042                           	signat	i2_in_high_int,90
 14043                           	global	i2_send_msg
 14044                           
 14045 ;; *************** function i2_send_msg *****************
 14046 ;; Defined at:
 14047 ;;		line 24 in file "../src/messages.c"
 14048 ;; Parameters:    Size  Location     Type
 14049 ;;  send_msg        2   60[COMRAM] PTR struct __msg_queue
 14050 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 14051 ;;  send_msg        1   62[COMRAM] unsigned char 
 14052 ;;  send_msg        1   63[COMRAM] unsigned char 
 14053 ;;  send_msg        2   64[COMRAM] PTR void 
 14054 ;;		 -> adc_int_handler@message(3), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 14055 ;;		 -> i2c_int_handler@error_buf(3), main@msgbuffer(11), main@uc(5), 
 14056 ;; Auto vars:     Size  Location     Type
 14057 ;;  send_msg        2    3[BANK0 ] PTR struct __msg
 14058 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 14059 ;;  send_msg        2    0[BANK0 ] unsigned int 
 14060 ;;  send_msg        1    2[BANK0 ] unsigned char 
 14061 ;; Return value:  Size  Location     Type
 14062 ;;                  1    wreg      char 
 14063 ;; Registers used:
 14064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14065 ;; Tracked objects:
 14066 ;;		On entry : 0/0
 14067 ;;		On exit  : 0/0
 14068 ;;		Unchanged: 0/0
 14069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14070 ;;      Params:         6       0       0       0       0
 14071 ;;      Locals:         0       5       0       0       0
 14072 ;;      Temps:          1       0       0       0       0
 14073 ;;      Totals:         7       5       0       0       0
 14074 ;;Total ram usage:       12 bytes
 14075 ;; Hardware stack levels used:    1
 14076 ;; Hardware stack levels required when called:    1
 14077 ;; This function calls:
 14078 ;;		i2_memcpy
 14079 ;; This function is called by:
 14080 ;;		_ToMainHigh_sendmsg
 14081 ;; This function uses a non-reentrant model
 14082 ;;
 14083                           psect	text52,class=CODE,space=0,reloc=2
 14084                           global __ptext52
 14085  000DB4                     __ptext52:
 14086                           psect	text52
 14087                           	file	"../src/messages.c"
 14088                           	global	__size_ofi2_send_msg
 14089  0000                     	__size_ofi2_send_msg	equ	__end_ofi2_send_msg-i2_send_msg
 14090                           	
 14091  000DB4                     i2_send_msg:
 14092                           	opt	stack 17
 14093                           	line	28
 14094                           	
 14095  000DB4                     i2l19177:
 14096                           ;messages.c: 25: unsigned char slot;
 14097                           ;messages.c: 27: msg *qmsg;
 14098                           ;messages.c: 28: size_t tlength = length;
 14099  000DB4  0100               	movlb	0	; () banked
 14100  000DB6  C03F  F080         	movff	(c:i2send_msg@length),(i2send_msg@tlength)
 14101  000DBA  0100               	movlb	0	; () banked
 14102  000DBC  0100               	movlb	0	; () banked
 14103  000DBE  6B81               	clrf	((i2send_msg@tlength+1))&0ffh
 14104                           	line	38
 14105                           	
 14106  000DC0                     i2l19179:; BSR set to: 0
 14107                           
 14108                           ;messages.c: 38: slot = qptr->cur_write_ind;
 14109  000DC0  EE20 F034          	lfsr	2,034h
 14110  000DC4  503D               	movf	((c:i2send_msg@qptr)),c,w
 14111  000DC6  26D9               	addwf	fsr2l
 14112  000DC8  503E               	movf	((c:i2send_msg@qptr+1)),c,w
 14113  000DCA  22DA               	addwfc	fsr2h
 14114  000DCC  50DF               	movf	indf2,w
 14115  000DCE  0100               	movlb	0	; () banked
 14116  000DD0  0100               	movlb	0	; () banked
 14117  000DD2  6F82               	movwf	((i2send_msg@slot))&0ffh
 14118                           	line	39
 14119                           	
 14120  000DD4                     i2l19181:; BSR set to: 0
 14121                           
 14122                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
 14123  000DD4  0100               	movlb	0	; () banked
 14124  000DD6  0100               	movlb	0	; () banked
 14125  000DD8  5182               	movf	((i2send_msg@slot))&0ffh,w
 14126  000DDA  0D0D               	mullw	0Dh
 14127  000DDC  50F3               	movf	(prodl),c,w
 14128  000DDE  243D               	addwf	((c:i2send_msg@qptr)),c,w
 14129  000DE0  0100               	movlb	0	; () banked
 14130                           	
 14131  000DE2  0100               	movlb	0	; () banked
 14132  000DE4  6F83               	movwf	((i2send_msg@qmsg))&0ffh
 14133  000DE6  50F4               	movf	(prodh),c,w
 14134  000DE8  203E               	addwfc	((c:i2send_msg@qptr+1)),c,w
 14135  000DEA  0100               	movlb	0	; () banked
 14136  000DEC  6F84               	movwf	1+((i2send_msg@qmsg))&0ffh
 14137                           	line	41
 14138                           	
 14139  000DEE                     i2l19183:; BSR set to: 0
 14140                           
 14141                           ;messages.c: 41: if (qmsg->full != 0) {
 14142  000DEE  C083  FFD9         	movff	(i2send_msg@qmsg),fsr2l
 14143  000DF2  C084  FFDA         	movff	(i2send_msg@qmsg+1),fsr2h
 14144  000DF6  50DF               	movf	indf2,w
 14145  000DF8  B4D8               	btfsc	status,2
 14146  000DFA  D001               	goto	i2u224_41
 14147  000DFC  D001               	goto	i2u224_40
 14148  000DFE                     i2u224_41:
 14149  000DFE  D003               	goto	i2l19189
 14150  000E00                     i2u224_40:
 14151                           	line	42
 14152                           	
 14153  000E00                     i2l19185:; BSR set to: 0
 14154                           
 14155                           ;messages.c: 42: return (-1);
 14156  000E00  0EFF               	movlw	(-1)&0ffh
 14157  000E02  D044               	goto	i2l5474
 14158                           	
 14159  000E04                     i2l19187:; BSR set to: 0
 14160                           
 14161  000E04  D043               	goto	i2l5474
 14162                           	line	43
 14163                           	
 14164  000E06                     i2l5473:; BSR set to: 0
 14165                           
 14166                           	line	46
 14167                           	
 14168  000E06                     i2l19189:; BSR set to: 0
 14169                           
 14170                           ;messages.c: 43: }
 14171                           ;messages.c: 46: qmsg->length = length;
 14172  000E06  0100               	movlb	0	; () banked
 14173  000E08  EE20 F001          	lfsr	2,01h
 14174  000E0C  0100               	movlb	0	; () banked
 14175  000E0E  5183               	movf	((i2send_msg@qmsg))&0ffh,w
 14176  000E10  26D9               	addwf	fsr2l
 14177  000E12  0100               	movlb	0	; () banked
 14178  000E14  5184               	movf	((i2send_msg@qmsg+1))&0ffh,w
 14179  000E16  22DA               	addwfc	fsr2h
 14180  000E18  C03F  FFDF         	movff	(c:i2send_msg@length),indf2
 14181                           
 14182                           	line	47
 14183                           ;messages.c: 47: qmsg->msgtype = msgtype;
 14184  000E1C  0100               	movlb	0	; () banked
 14185  000E1E  EE20 F002          	lfsr	2,02h
 14186  000E22  0100               	movlb	0	; () banked
 14187  000E24  5183               	movf	((i2send_msg@qmsg))&0ffh,w
 14188  000E26  26D9               	addwf	fsr2l
 14189  000E28  0100               	movlb	0	; () banked
 14190  000E2A  5184               	movf	((i2send_msg@qmsg+1))&0ffh,w
 14191  000E2C  22DA               	addwfc	fsr2h
 14192  000E2E  C040  FFDF         	movff	(c:i2send_msg@msgtype),indf2
 14193                           
 14194                           	line	55
 14195                           	
 14196  000E32                     i2l19191:; BSR set to: 0
 14197                           
 14198                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
 14199  000E32  0E03               	movlw	low(03h)
 14200  000E34  0100               	movlb	0	; () banked
 14201  000E36  0100               	movlb	0	; () banked
 14202  000E38  2583               	addwf	((i2send_msg@qmsg))&0ffh,w
 14203                           	
 14204  000E3A  6E33               	movwf	((c:?i2_memcpy)),c
 14205  000E3C  0E00               	movlw	high(03h)
 14206  000E3E  0100               	movlb	0	; () banked
 14207  000E40  0100               	movlb	0	; () banked
 14208  000E42  2184               	addwfc	((i2send_msg@qmsg+1))&0ffh,w
 14209  000E44  6E34               	movwf	1+((c:?i2_memcpy)),c
 14210  000E46  C041  F035         	movff	(c:i2send_msg@data),0+((c:?i2_memcpy)+02h)
 14211  000E4A  C042  F036         	movff	(c:i2send_msg@data+1),1+((c:?i2_memcpy)+02h)
 14212  000E4E  C080  F037         	movff	(i2send_msg@tlength),0+((c:?i2_memcpy)+04h)
 14213  000E52  C081  F038         	movff	(i2send_msg@tlength+1),1+((c:?i2_memcpy)+04h)
 14214  000E56  EC36  F00C         	call	i2_memcpy	;wreg free
 14215                           	line	56
 14216                           	
 14217  000E5A                     i2l19193:
 14218                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
 14219  000E5A  EE20 F034          	lfsr	2,034h
 14220  000E5E  503D               	movf	((c:i2send_msg@qptr)),c,w
 14221  000E60  26D9               	addwf	fsr2l
 14222  000E62  503E               	movf	((c:i2send_msg@qptr+1)),c,w
 14223  000E64  22DA               	addwfc	fsr2h
 14224  000E66  EE10 F034          	lfsr	1,034h
 14225  000E6A  503D               	movf	((c:i2send_msg@qptr)),c,w
 14226  000E6C  26E1               	addwf	fsr1l
 14227  000E6E  503E               	movf	((c:i2send_msg@qptr+1)),c,w
 14228  000E70  22E2               	addwfc	fsr1h
 14229  000E72  50E7               	movf	indf1,w
 14230  000E74  6E43               	movwf	(??i2_send_msg+0+0)&0ffh,c
 14231  000E76  2843               	incf	((??i2_send_msg+0+0)),c,w
 14232  000E78  0B03               	andlw	low(03h)
 14233  000E7A  6EDF               	movwf	indf2
 14234                           
 14235                           	line	59
 14236                           	
 14237  000E7C                     i2l19195:
 14238                           ;messages.c: 59: qmsg->full = 1;
 14239  000E7C  C083  FFD9         	movff	(i2send_msg@qmsg),fsr2l
 14240  000E80  C084  FFDA         	movff	(i2send_msg@qmsg+1),fsr2h
 14241  000E84  0E01               	movlw	low(01h)
 14242  000E86  6EDF               	movwf	indf2
 14243                           	line	60
 14244                           	
 14245  000E88                     i2l19197:
 14246                           ;messages.c: 60: return (1);
 14247  000E88  0E01               	movlw	(01h)&0ffh
 14248  000E8A  D000               	goto	i2l5474
 14249                           	
 14250  000E8C                     i2l19199:
 14251                           	line	61
 14252                           	
 14253  000E8C                     i2l5474:
 14254  000E8C  0012               	return
 14255                           	opt stack 0
 14256                           GLOBAL	__end_ofi2_send_msg
 14257  000E8E                     	__end_ofi2_send_msg:
 14258                           	signat	i2_send_msg,89
 14259                           	global	i2_recv_msg
 14260                           
 14261 ;; *************** function i2_recv_msg *****************
 14262 ;; Defined at:
 14263 ;;		line 63 in file "../src/messages.c"
 14264 ;; Parameters:    Size  Location     Type
 14265 ;;  recv_msg        2   60[COMRAM] PTR struct __msg_queue
 14266 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 14267 ;;  recv_msg        1   62[COMRAM] unsigned char 
 14268 ;;  recv_msg        2   63[COMRAM] PTR unsigned char 
 14269 ;;		 -> RAM(1023), i2c_int_handler@msgtype(1), main@msgtype(1), 
 14270 ;;  recv_msg        2   65[COMRAM] PTR void 
 14271 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@data(10), main@msgbuffer(11), 
 14272 ;; Auto vars:     Size  Location     Type
 14273 ;;  recv_msg        2    5[BANK0 ] PTR struct __msg
 14274 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 14275 ;;  recv_msg        2    3[BANK0 ] unsigned int 
 14276 ;;  recv_msg        1    2[BANK0 ] unsigned char 
 14277 ;; Return value:  Size  Location     Type
 14278 ;;                  1    wreg      char 
 14279 ;; Registers used:
 14280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14281 ;; Tracked objects:
 14282 ;;		On entry : 0/0
 14283 ;;		On exit  : 0/0
 14284 ;;		Unchanged: 0/0
 14285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14286 ;;      Params:         7       0       0       0       0
 14287 ;;      Locals:         0       5       0       0       0
 14288 ;;      Temps:          0       2       0       0       0
 14289 ;;      Totals:         7       7       0       0       0
 14290 ;;Total ram usage:       14 bytes
 14291 ;; Hardware stack levels used:    1
 14292 ;; Hardware stack levels required when called:    1
 14293 ;; This function calls:
 14294 ;;		i2_memcpy
 14295 ;; This function is called by:
 14296 ;;		_FromMainLow_recvmsg
 14297 ;;		_FromMainHigh_recvmsg
 14298 ;; This function uses a non-reentrant model
 14299 ;;
 14300                           psect	text53,class=CODE,space=0,reloc=2
 14301                           global __ptext53
 14302  000B8E                     __ptext53:
 14303                           psect	text53
 14304                           	file	"../src/messages.c"
 14305                           	line	63
 14306                           	global	__size_ofi2_recv_msg
 14307  0000                     	__size_ofi2_recv_msg	equ	__end_ofi2_recv_msg-i2_recv_msg
 14308                           	
 14309  000B8E                     i2_recv_msg:
 14310                           	opt	stack 17
 14311                           	line	72
 14312                           	
 14313  000B8E                     i2l19201:
 14314                           ;messages.c: 64: unsigned char slot;
 14315                           ;messages.c: 68: msg *qmsg;
 14316                           ;messages.c: 69: size_t tlength;
 14317                           ;messages.c: 72: slot = qptr->cur_read_ind;
 14318  000B8E  EE20 F035          	lfsr	2,035h
 14319  000B92  503D               	movf	((c:i2recv_msg@qptr)),c,w
 14320  000B94  26D9               	addwf	fsr2l
 14321  000B96  503E               	movf	((c:i2recv_msg@qptr+1)),c,w
 14322  000B98  22DA               	addwfc	fsr2h
 14323  000B9A  50DF               	movf	indf2,w
 14324  000B9C  0100               	movlb	0	; () banked
 14325  000B9E  0100               	movlb	0	; () banked
 14326  000BA0  6F82               	movwf	((i2recv_msg@slot))&0ffh
 14327                           	line	73
 14328                           	
 14329  000BA2                     i2l19203:; BSR set to: 0
 14330                           
 14331                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
 14332  000BA2  0100               	movlb	0	; () banked
 14333  000BA4  0100               	movlb	0	; () banked
 14334  000BA6  5182               	movf	((i2recv_msg@slot))&0ffh,w
 14335  000BA8  0D0D               	mullw	0Dh
 14336  000BAA  50F3               	movf	(prodl),c,w
 14337  000BAC  243D               	addwf	((c:i2recv_msg@qptr)),c,w
 14338  000BAE  0100               	movlb	0	; () banked
 14339                           	
 14340  000BB0  0100               	movlb	0	; () banked
 14341  000BB2  6F85               	movwf	((i2recv_msg@qmsg))&0ffh
 14342  000BB4  50F4               	movf	(prodh),c,w
 14343  000BB6  203E               	addwfc	((c:i2recv_msg@qptr+1)),c,w
 14344  000BB8  0100               	movlb	0	; () banked
 14345  000BBA  6F86               	movwf	1+((i2recv_msg@qmsg))&0ffh
 14346                           	line	74
 14347                           	
 14348  000BBC                     i2l19205:; BSR set to: 0
 14349                           
 14350                           ;messages.c: 74: if (qmsg->full == 1) {
 14351  000BBC  0E01               	movlw	(01h)&0ffh
 14352  000BBE  C085  FFD9         	movff	(i2recv_msg@qmsg),fsr2l
 14353  000BC2  C086  FFDA         	movff	(i2recv_msg@qmsg+1),fsr2h
 14354  000BC6  62DF               	cpfseq	indf2
 14355  000BC8  D001               	goto	i2u225_41
 14356  000BCA  D001               	goto	i2u225_40
 14357  000BCC                     i2u225_41:
 14358  000BCC  D06C               	goto	i2l19229
 14359  000BCE                     i2u225_40:
 14360                           	line	76
 14361                           	
 14362  000BCE                     i2l19207:; BSR set to: 0
 14363                           
 14364                           ;messages.c: 76: if (qmsg->length > maxlength) {
 14365  000BCE  0100               	movlb	0	; () banked
 14366  000BD0  EE20 F001          	lfsr	2,01h
 14367  000BD4  0100               	movlb	0	; () banked
 14368  000BD6  5185               	movf	((i2recv_msg@qmsg))&0ffh,w
 14369  000BD8  26D9               	addwf	fsr2l
 14370  000BDA  0100               	movlb	0	; () banked
 14371  000BDC  5186               	movf	((i2recv_msg@qmsg+1))&0ffh,w
 14372  000BDE  22DA               	addwfc	fsr2h
 14373  000BE0  50DF               	movf	indf2,w
 14374  000BE2  603F               	cpfslt	((c:i2recv_msg@maxlength)),c
 14375  000BE4  D001               	goto	i2u226_41
 14376  000BE6  D001               	goto	i2u226_40
 14377  000BE8                     i2u226_41:
 14378  000BE8  D003               	goto	i2l19213
 14379  000BEA                     i2u226_40:
 14380                           	line	77
 14381                           	
 14382  000BEA                     i2l19209:; BSR set to: 0
 14383                           
 14384                           ;messages.c: 77: return (-3);
 14385  000BEA  0EFD               	movlw	(-3)&0ffh
 14386  000BEC  D05F               	goto	i2l5479
 14387                           	
 14388  000BEE                     i2l19211:; BSR set to: 0
 14389                           
 14390  000BEE  D05E               	goto	i2l5479
 14391                           	line	78
 14392                           	
 14393  000BF0                     i2l5478:; BSR set to: 0
 14394                           
 14395                           	line	80
 14396                           	
 14397  000BF0                     i2l19213:; BSR set to: 0
 14398                           
 14399                           ;messages.c: 78: }
 14400                           ;messages.c: 80: tlength = qmsg->length;
 14401  000BF0  0100               	movlb	0	; () banked
 14402  000BF2  EE20 F001          	lfsr	2,01h
 14403  000BF6  0100               	movlb	0	; () banked
 14404  000BF8  5185               	movf	((i2recv_msg@qmsg))&0ffh,w
 14405  000BFA  26D9               	addwf	fsr2l
 14406  000BFC  0100               	movlb	0	; () banked
 14407  000BFE  5186               	movf	((i2recv_msg@qmsg+1))&0ffh,w
 14408  000C00  22DA               	addwfc	fsr2h
 14409  000C02  50DF               	movf	indf2,w
 14410  000C04  0100               	movlb	0	; () banked
 14411  000C06  6F80               	movwf	(??i2_recv_msg+0+0)&0ffh
 14412  000C08  0100               	movlb	0	; () banked
 14413  000C0A  5180               	movf	((??i2_recv_msg+0+0))&0ffh,w
 14414  000C0C  0100               	movlb	0	; () banked
 14415  000C0E  0100               	movlb	0	; () banked
 14416  000C10  6F83               	movwf	((i2recv_msg@tlength))&0ffh
 14417  000C12  0100               	movlb	0	; () banked
 14418  000C14  6B84               	clrf	((i2recv_msg@tlength+1))&0ffh
 14419                           	line	81
 14420                           	
 14421  000C16                     i2l19215:; BSR set to: 0
 14422                           
 14423                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
 14424  000C16  C042  F033         	movff	(c:i2recv_msg@data),(c:?i2_memcpy)
 14425  000C1A  C043  F034         	movff	(c:i2recv_msg@data+1),(c:?i2_memcpy+1)
 14426  000C1E  0E03               	movlw	03h
 14427  000C20  0100               	movlb	0	; () banked
 14428  000C22  0100               	movlb	0	; () banked
 14429  000C24  2585               	addwf	((i2recv_msg@qmsg))&0ffh,w
 14430  000C26  0100               	movlb	0	; () banked
 14431  000C28  6F80               	movwf	(??i2_recv_msg+0+0)&0ffh
 14432  000C2A  0E00               	movlw	0
 14433  000C2C  0100               	movlb	0	; () banked
 14434  000C2E  0100               	movlb	0	; () banked
 14435  000C30  2186               	addwfc	((i2recv_msg@qmsg+1))&0ffh,w
 14436  000C32  0100               	movlb	0	; () banked
 14437  000C34  6F81               	movwf	(??i2_recv_msg+0+0+1)&0ffh
 14438  000C36  C080  F035         	movff	??i2_recv_msg+0+0,0+((c:?i2_memcpy)+02h)
 14439  000C3A  C081  F036         	movff	??i2_recv_msg+0+1,1+((c:?i2_memcpy)+02h)
 14440  000C3E  C083  F037         	movff	(i2recv_msg@tlength),0+((c:?i2_memcpy)+04h)
 14441  000C42  C084  F038         	movff	(i2recv_msg@tlength+1),1+((c:?i2_memcpy)+04h)
 14442  000C46  EC36  F00C         	call	i2_memcpy	;wreg free
 14443                           	line	87
 14444                           	
 14445  000C4A                     i2l19217:
 14446                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
 14447  000C4A  EE20 F035          	lfsr	2,035h
 14448  000C4E  503D               	movf	((c:i2recv_msg@qptr)),c,w
 14449  000C50  26D9               	addwf	fsr2l
 14450  000C52  503E               	movf	((c:i2recv_msg@qptr+1)),c,w
 14451  000C54  22DA               	addwfc	fsr2h
 14452  000C56  EE10 F035          	lfsr	1,035h
 14453  000C5A  503D               	movf	((c:i2recv_msg@qptr)),c,w
 14454  000C5C  26E1               	addwf	fsr1l
 14455  000C5E  503E               	movf	((c:i2recv_msg@qptr+1)),c,w
 14456  000C60  22E2               	addwfc	fsr1h
 14457  000C62  50E7               	movf	indf1,w
 14458  000C64  0100               	movlb	0	; () banked
 14459  000C66  6F80               	movwf	(??i2_recv_msg+0+0)&0ffh
 14460  000C68  0100               	movlb	0	; () banked
 14461  000C6A  2980               	incf	((??i2_recv_msg+0+0))&0ffh,w
 14462  000C6C  0B03               	andlw	low(03h)
 14463  000C6E  6EDF               	movwf	indf2
 14464                           
 14465                           	line	89
 14466                           	
 14467  000C70                     i2l19219:; BSR set to: 0
 14468                           
 14469                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
 14470  000C70  0100               	movlb	0	; () banked
 14471  000C72  EE20 F002          	lfsr	2,02h
 14472  000C76  0100               	movlb	0	; () banked
 14473  000C78  5185               	movf	((i2recv_msg@qmsg))&0ffh,w
 14474  000C7A  26D9               	addwf	fsr2l
 14475  000C7C  0100               	movlb	0	; () banked
 14476  000C7E  5186               	movf	((i2recv_msg@qmsg+1))&0ffh,w
 14477  000C80  22DA               	addwfc	fsr2h
 14478  000C82  C040  FFE1         	movff	(c:i2recv_msg@msgtype),fsr1l
 14479  000C86  C041  FFE2         	movff	(c:i2recv_msg@msgtype+1),fsr1h
 14480  000C8A  CFDF FFE7          	movff	indf2,indf1
 14481                           	line	91
 14482                           	
 14483  000C8E                     i2l19221:; BSR set to: 0
 14484                           
 14485                           ;messages.c: 91: qmsg->full = 0;
 14486  000C8E  C085  FFD9         	movff	(i2recv_msg@qmsg),fsr2l
 14487  000C92  C086  FFDA         	movff	(i2recv_msg@qmsg+1),fsr2h
 14488  000C96  0E00               	movlw	low(0)
 14489  000C98  6EDF               	movwf	indf2
 14490                           	line	92
 14491                           	
 14492  000C9A                     i2l19223:; BSR set to: 0
 14493                           
 14494                           ;messages.c: 92: return (tlength);
 14495  000C9A  0100               	movlb	0	; () banked
 14496  000C9C  0100               	movlb	0	; () banked
 14497  000C9E  5183               	movf	((i2recv_msg@tlength))&0ffh,w
 14498  000CA0  D005               	goto	i2l5479
 14499                           	
 14500  000CA2                     i2l19225:; BSR set to: 0
 14501                           
 14502  000CA2  D004               	goto	i2l5479
 14503                           	line	93
 14504                           	
 14505  000CA4                     i2l19227:; BSR set to: 0
 14506                           
 14507                           ;messages.c: 93: } else {
 14508  000CA4  D003               	goto	i2l5479
 14509                           	
 14510  000CA6                     i2l5477:; BSR set to: 0
 14511                           
 14512                           	line	94
 14513                           	
 14514  000CA6                     i2l19229:; BSR set to: 0
 14515                           
 14516                           ;messages.c: 94: return (-4);
 14517  000CA6  0EFC               	movlw	(-4)&0ffh
 14518  000CA8  D001               	goto	i2l5479
 14519                           	
 14520  000CAA                     i2l19231:; BSR set to: 0
 14521                           
 14522  000CAA  D000               	goto	i2l5479
 14523                           	line	95
 14524                           	
 14525  000CAC                     i2l5480:; BSR set to: 0
 14526                           
 14527                           	line	96
 14528                           	
 14529  000CAC                     i2l5479:; BSR set to: 0
 14530                           
 14531  000CAC  0012               	return
 14532                           	opt stack 0
 14533                           GLOBAL	__end_ofi2_recv_msg
 14534  000CAE                     	__end_ofi2_recv_msg:
 14535                           	signat	i2_recv_msg,89
 14536                           	global	i2_check_msg
 14537                           
 14538 ;; *************** function i2_check_msg *****************
 14539 ;; Defined at:
 14540 ;;		line 222 in file "../src/messages.c"
 14541 ;; Parameters:    Size  Location     Type
 14542 ;;  check_msg       2   50[COMRAM] PTR struct __msg_queue
 14543 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 14544 ;; Auto vars:     Size  Location     Type
 14545 ;;		None
 14546 ;; Return value:  Size  Location     Type
 14547 ;;                  1    wreg      unsigned char 
 14548 ;; Registers used:
 14549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14550 ;; Tracked objects:
 14551 ;;		On entry : 0/0
 14552 ;;		On exit  : 0/0
 14553 ;;		Unchanged: 0/0
 14554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14555 ;;      Params:         2       0       0       0       0
 14556 ;;      Locals:         0       0       0       0       0
 14557 ;;      Temps:          1       0       0       0       0
 14558 ;;      Totals:         3       0       0       0       0
 14559 ;;Total ram usage:        3 bytes
 14560 ;; Hardware stack levels used:    1
 14561 ;; This function calls:
 14562 ;;		Nothing
 14563 ;; This function is called by:
 14564 ;;		_SleepIfOkay
 14565 ;; This function uses a non-reentrant model
 14566 ;;
 14567                           psect	text54,class=CODE,space=0,reloc=2
 14568                           global __ptext54
 14569  001B6E                     __ptext54:
 14570                           psect	text54
 14571                           	file	"../src/messages.c"
 14572                           	line	222
 14573                           	global	__size_ofi2_check_msg
 14574  0000                     	__size_ofi2_check_msg	equ	__end_ofi2_check_msg-i2_check_msg
 14575                           	
 14576  001B6E                     i2_check_msg:; BSR set to: 0
 14577                           
 14578                           	opt	stack 19
 14579                           	line	223
 14580                           	
 14581  001B6E                     i2l18733:
 14582                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
 14583  001B6E  EE20 F035          	lfsr	2,035h
 14584  001B72  5033               	movf	((c:i2check_msg@qptr)),c,w
 14585  001B74  26D9               	addwf	fsr2l
 14586  001B76  5034               	movf	((c:i2check_msg@qptr+1)),c,w
 14587  001B78  22DA               	addwfc	fsr2h
 14588  001B7A  50DF               	movf	indf2,w
 14589  001B7C  6E35               	movwf	(??i2_check_msg+0+0)&0ffh,c
 14590  001B7E  5035               	movf	((??i2_check_msg+0+0)),c,w
 14591  001B80  0D0D               	mullw	0Dh
 14592  001B82  50F3               	movf	(prodl),c,w
 14593  001B84  2433               	addwf	((c:i2check_msg@qptr)),c,w
 14594  001B86  6ED9               	movwf	c:fsr2l
 14595  001B88  50F4               	movf	(prodh),c,w
 14596  001B8A  2034               	addwfc	((c:i2check_msg@qptr+1)),c,w
 14597  001B8C  6EDA               	movwf	1+c:fsr2l
 14598  001B8E  50DF               	movf	indf2,w
 14599  001B90  D000               	goto	i2l5523
 14600                           	
 14601  001B92                     i2l18735:
 14602                           	line	224
 14603                           	
 14604  001B92                     i2l5523:
 14605  001B92  0012               	return
 14606                           	opt stack 0
 14607                           GLOBAL	__end_ofi2_check_msg
 14608  001B94                     	__end_ofi2_check_msg:
 14609                           	signat	i2_check_msg,89
 14610                           	global	i2_memcpy
 14611                           
 14612 ;; *************** function i2_memcpy *****************
 14613 ;; Defined at:
 14614 ;;		line 13 in file "/opt/microchip/xc8/v1.10/sources/memcpy.c"
 14615 ;; Parameters:    Size  Location     Type
 14616 ;;  memcpy          2   50[COMRAM] PTR void 
 14617 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
 14618 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
 14619 ;;  memcpy          2   52[COMRAM] PTR const void 
 14620 ;;		 -> adc_int_handler@message(3), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 14621 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 14622 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(5), 
 14623 ;;  memcpy          2   54[COMRAM] unsigned int 
 14624 ;; Auto vars:     Size  Location     Type
 14625 ;;  memcpy          2   58[COMRAM] PTR const unsigned char 
 14626 ;;		 -> adc_int_handler@message(3), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 14627 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 14628 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(5), 
 14629 ;;  memcpy          2   56[COMRAM] PTR unsigned char 
 14630 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
 14631 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
 14632 ;; Return value:  Size  Location     Type
 14633 ;;                  2   50[COMRAM] PTR void 
 14634 ;; Registers used:
 14635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 14636 ;; Tracked objects:
 14637 ;;		On entry : 0/0
 14638 ;;		On exit  : 0/0
 14639 ;;		Unchanged: 0/0
 14640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14641 ;;      Params:         6       0       0       0       0
 14642 ;;      Locals:         4       0       0       0       0
 14643 ;;      Temps:          0       0       0       0       0
 14644 ;;      Totals:        10       0       0       0       0
 14645 ;;Total ram usage:       10 bytes
 14646 ;; Hardware stack levels used:    1
 14647 ;; This function calls:
 14648 ;;		Nothing
 14649 ;; This function is called by:
 14650 ;;		i2_send_msg
 14651 ;;		i2_recv_msg
 14652 ;; This function uses a non-reentrant model
 14653 ;;
 14654                           psect	text55,class=CODE,space=0,reloc=2
 14655                           global __ptext55
 14656  00186C                     __ptext55:
 14657                           psect	text55
 14658                           	file	"/opt/microchip/xc8/v1.10/sources/memcpy.c"
 14659                           	line	13
 14660                           	global	__size_ofi2_memcpy
 14661  0000                     	__size_ofi2_memcpy	equ	__end_ofi2_memcpy-i2_memcpy
 14662                           	
 14663  00186C                     i2_memcpy:
 14664                           	opt	stack 17
 14665                           	line	24
 14666                           	
 14667  00186C                     i2l19233:
 14668  00186C  C035  F03B         	movff	(c:i2memcpy@s1),(c:i2memcpy@s)
 14669  001870  C036  F03C         	movff	(c:i2memcpy@s1+1),(c:i2memcpy@s+1)
 14670                           	line	25
 14671  001874  C033  F039         	movff	(c:i2memcpy@d1),(c:i2memcpy@d)
 14672  001878  C034  F03A         	movff	(c:i2memcpy@d1+1),(c:i2memcpy@d+1)
 14673                           	line	26
 14674  00187C  D00F               	goto	i2l19241
 14675                           	
 14676  00187E                     i2l17009:
 14677                           	line	27
 14678                           	
 14679  00187E                     i2l19235:
 14680  00187E  C03B  FFD9         	movff	(c:i2memcpy@s),fsr2l
 14681  001882  C03C  FFDA         	movff	(c:i2memcpy@s+1),fsr2h
 14682  001886  C039  FFE1         	movff	(c:i2memcpy@d),fsr1l
 14683  00188A  C03A  FFE2         	movff	(c:i2memcpy@d+1),fsr1h
 14684  00188E  CFDF FFE7          	movff	indf2,indf1
 14685                           	
 14686  001892                     i2l19237:
 14687  001892  4A3B               	infsnz	((c:i2memcpy@s)),c
 14688  001894  2A3C               	incf	((c:i2memcpy@s+1)),c
 14689                           	
 14690  001896                     i2l19239:
 14691  001896  4A39               	infsnz	((c:i2memcpy@d)),c
 14692  001898  2A3A               	incf	((c:i2memcpy@d+1)),c
 14693  00189A  D000               	goto	i2l19241
 14694                           	
 14695  00189C                     i2l17008:
 14696                           	line	26
 14697                           	
 14698  00189C                     i2l19241:
 14699  00189C  0637               	decf	((c:i2memcpy@n)),c
 14700  00189E  A0D8               	btfss	status,0
 14701  0018A0  0638               	decf	((c:i2memcpy@n+1)),c
 14702  0018A2  2837               	incf	((c:i2memcpy@n))&0ffh,w
 14703  0018A4  B4D8               	btfsc	status,2
 14704  0018A6  2838               	incf ((c:i2memcpy@n+1))&0ffh,w
 14705                           
 14706  0018A8  A4D8               	btfss	status,2
 14707  0018AA  D001               	goto	i2u227_41
 14708  0018AC  D001               	goto	i2u227_40
 14709  0018AE                     i2u227_41:
 14710  0018AE  D7E7               	goto	i2l19235
 14711  0018B0                     i2u227_40:
 14712  0018B0  D000               	goto	i2l17011
 14713                           	
 14714  0018B2                     i2l17010:
 14715                           	line	32
 14716                           ;	Return value of i2_memcpy is never used
 14717                           	
 14718  0018B2                     i2l17011:
 14719  0018B2  0012               	return
 14720                           	opt stack 0
 14721                           GLOBAL	__end_ofi2_memcpy
 14722  0018B4                     	__end_ofi2_memcpy:
 14723                           	signat	i2_memcpy,90
 14724                           	GLOBAL	__activetblptr
 14725  0000                     __activetblptr	EQU	0
 14726                           	psect	intsave_regs,class=BIGRAM,space=1
 14727                           psect	text56,class=CODE,space=0,reloc=2
 14728                           global __ptext56
 14729  000000                     __ptext56:
 14730                           	PSECT	rparam,class=COMRAM,space=1
 14731                           	GLOBAL	__Lrparam
 14732                           	FNCONF	rparam,??,?
 14733                           GLOBAL	__Lparam, __Hparam
 14734                           GLOBAL	__Lrparam, __Hrparam
 14735  0000                     __Lparam	EQU	__Lrparam
 14736  0000                     __Hparam	EQU	__Hrparam


Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         221
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     67      76
    BANK0           128     72      75
    BANK1           256     64     226
    BANK2           256      0      54
    BANK3           256      0       0

Pointer List with Targets:

    ?_ReadTimer1	unsigned int  size(2) Largest target is 2
		 -> WriteTimer1@timer(COMRAM[2]), ReadTimer1@timer(COMRAM[2]), 

    ?_ReadADC	int  size(2) Largest target is 0

    ?_memcpy	PTR void  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@data(BANK0[10]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    ?_in_high_int	int  size(2) Largest target is 0

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@data(BANK0[10]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@data(BANK0[10]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> adc_int_handler@message(COMRAM[3]), timer1_int_handler@result(COMRAM[2]), timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), main@uc(BANK1[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> adc_int_handler@message(COMRAM[3]), timer1_int_handler@result(COMRAM[2]), timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), main@uc(BANK1[5]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 10
		 -> i2c_int_handler@empty(BANK0[3]), i2c_int_handler@data(BANK0[10]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK1[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1023
		 -> RAM(DATA[1023]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 10
		 -> i2c_int_handler@data(BANK0[10]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> i2c_int_handler@msgtype(BANK0[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 3
		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@error_buf(BANK0[3]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> adc_int_handler@message(COMRAM[3]), timer1_int_handler@result(COMRAM[2]), NULL(NULL[0]), main@uc(BANK1[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1023
		 -> RAM(DATA[1023]), i2c_int_handler@msgtype(BANK0[1]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@data(BANK0[10]), main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@data(BANK0[10]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 11
		 -> adc_int_handler@message(COMRAM[3]), timer1_int_handler@result(COMRAM[2]), timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), main@msgbuffer(BANK1[11]), main@uc(BANK1[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _SleepIfOkay->i2_in_low_int
    _ToMainHigh_sendmsg->i2_send_msg
    _FromMainLow_recvmsg->i2_recv_msg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_in_low_int->i2_in_high_int
    i2_send_msg->i2_memcpy
    i2_recv_msg->i2_memcpy
    _InterruptHandlerLow->_adc_int_handler
    _timer1_int_handler->_ToMainLow_sendmsg
    _adc_int_handler->_ToMainLow_sendmsg
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _init_timer1_lthread->_OpenADC
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainHigh_recvmsg->_recv_msg
    _ToMainLow_recvmsg->_recv_msg
    _FromMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _i2c_int_handler->_FromMainLow_recvmsg
    _timer0_int_handler->_FromMainHigh_recvmsg
    _ToMainHigh_sendmsg->i2_send_msg
    _FromMainLow_recvmsg->i2_recv_msg
    _FromMainHigh_recvmsg->i2_recv_msg

Critical Paths under _main in BANK1

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _ToMainHigh_recvmsg->_recv_msg
    _ToMainLow_recvmsg->_recv_msg
    _FromMainLow_sendmsg->_send_msg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                56    56      0    4596
                                             10 BANK1     54    54      0
                     _init_uart_recv
                           _init_i2c
                _init_timer1_lthread
                        _init_queues
                         _OpenTimer1
                  _enable_interrupts
                _i2c_configure_slave
                          _OpenUSART
              _block_on_To_msgqueues
                 _ToMainHigh_recvmsg
                     _timer0_lthread
                  _ToMainLow_recvmsg
                     _timer1_lthread
                _FromMainLow_sendmsg
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      22
                                             53 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      22
                                             53 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  5     3      2     198
                                             58 BANK0      5     3      2
                            _OpenADC
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     134
                                             57 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     0      1      66
                                             53 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     0      1      22
                                             53 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            3     0      3     220
                                             53 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0      66
                                             59 BANK0      1     1      0
                            _in_main
                          _check_msg
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             57 BANK0      2     0      2
                         _in_low_int
                        _in_high_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             55 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (3) _in_high_int                                          2     0      2       0
                                             53 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     0      5     772
                                              5 BANK1      5     0      5
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8      23
                                             53 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     0      5     772
                                              5 BANK1      5     0      5
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8      44
                                             53 BANK0     10     2      8
                         _ConvertADC
 ---------------------------------------------------------------------------------
 (1) _FromMainLow_sendmsg                                  4     0      4     741
                                              5 BANK1      4     0      4
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8      88
                                             53 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     134
                                             53 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _send_msg                                            12     6      6     648
                                             63 BANK0      7     1      6
                                              0 BANK1      5     5      0
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7     679
                                             63 BANK0      9     2      7
                                              0 BANK1      5     5      0
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     174
                                             53 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2      44
                                             53 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     0      1      22
                                             53 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     2      3     154
                                             53 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _SetChanADC                                           2     1      1      22
                                             53 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    4957
                                             33 COMRAM    17    17      0
                 _timer1_int_handler
                    _adc_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   6     6      0    1688
                                             26 COMRAM     6     6      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (6) _adc_int_handler                                      7     7      0    1684
                                             26 COMRAM     7     7      0
                            _ReadADC
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                2     2      0    1585
                                             26 COMRAM     2     2      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     0      4    1562
                                             22 COMRAM     4     0      4
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      45
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ReadADC                                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    1496
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     395
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    9116
                                             39 BANK0     14    14      0
                    _i2c_int_handler
                 _timer0_int_handler
                        _SleepIfOkay
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    27    27      0    4824
                                             12 BANK0     27    27      0
                       _handle_start
                _FromMainLow_recvmsg
              _start_i2c_slave_reply
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  8     8      0    4146
                                             12 BANK0      8     8      0
                        _WriteTimer0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     146
                       i2_in_low_int
                      i2_in_high_int
                        i2_check_msg
                   _enter_sleep_mode
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     0      4    1912
                                              5 BANK0      4     0      4
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (12) _FromMainLow_recvmsg                                 5     0      5    2000
                                              7 BANK0      5     0      5
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     0      5    2000
                                              7 BANK0      5     0      5
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _start_i2c_slave_reply                               5     2      3      66
                                             50 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     0      1      22
                                             50 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2      68
                                             50 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             52 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (12) i2_in_high_int                                       2     0      2       0
                                             50 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    1819
                                             60 COMRAM     7     1      6
                                              0 BANK0      5     5      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    1907
                                             60 COMRAM     7     0      7
                                              0 BANK0      7     7      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     146
                                             50 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     484
                                             50 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_uart_recv
   _init_i2c
   _init_timer1_lthread
     _OpenADC
     _SetChanADC
   _init_queues
     _init_queue
   _OpenTimer1
   _enable_interrupts
   _i2c_configure_slave
   _OpenUSART
   _block_on_To_msgqueues
     _in_main
       _in_low_int
         _in_high_int
       _in_high_int
     _check_msg
     _Delay1KTCYx
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _timer0_lthread
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _timer1_lthread
     _ConvertADC
   _FromMainLow_sendmsg
     _send_msg
       _memcpy
   _uart_lthread

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _adc_int_handler
     _ReadADC
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      36       8       21.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100     40      E2       6       88.3%
BITBANK0            80      0       0       3        0.0%
BANK0               80     48      4B       4       58.6%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     43      4C       1       59.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0      22       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AF      11        0.0%
DATA                 0      0     1D1      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.10 build 47796 
Symbol Table                                                                                   Mon Sep 24 02:02:31 2012

                    _STKPTRbits 000FFC                main@uthread_data 01B8        _MQ_Main_Willing_to_block 0047  
                   _SSPSTATbits 000FC7                              _DA 007E3D                              _BF 007E38  
                            _DC 007EC1                              _CK 007C16                              _P2 007C3C  
                            _S2 007C3B                              _CS 007C22                              _DT 007C17  
                            _GO 007E11                              _PC 000FF9                              _PD 007E82  
                            _RD 007C20                              _UA 007E39                              _RI 007E84  
                            _OV 007EC3                              _TO 007E83                              _RW 007E3A  
                            _RX 007C17                              _WR 007D31                              _TX 007C16  
     __end_of_ToMainLow_recvmsg 1ACC                              bsr 000FE0       __end_of_ToMainLow_sendmsg 1BDC  
                  __CFG_CP0$OFF 000000               i2recv_msg@msgtype 0040               i2recv_msg@tlength 0083  
          ?_FromMainLow_recvmsg 0087                             _DA1 007E3D                             _DA2 007C3D  
                           _BF1 007E38                             _BF2 007C38                             _AN0 007C00  
                           _AN1 007C01                             _AN2 007C02                             _AN3 007C03  
                           _AN4 007C05                             _AN5 007C20                             _CM0 007DA0  
                           _AN6 007C21                             _CM1 007DA1                             _AN7 007C22  
                           _CM2 007DA2                             _AN8 007C0A                             _AN9 007C0B  
                           _LA0 007C48                             _P1A 007C12                             _LA1 007C49  
                           _P1B 007C1D                             _LB0 007C50                             _LA2 007C4A  
                           _P1C 007C1E                             _LB1 007C51                             _LA3 007C4B  
                           _P1D 007C1F                             _LC0 007C58                             _LB2 007C52  
                           _LA4 007C4C                             _LC1 007C59                             _LB3 007C53  
                           _LA5 007C4D                             _CKE 007E3E            ?_FromMainLow_sendmsg 01A7  
                           _LD0 007C60                             _LC2 007C5A                             _LB4 007C54  
                           _LA6 007C4E                             _LD1 007C61                             _LC3 007C5B  
                           _LB5 007C55                             _LA7 007C4F                             _LE0 007C68  
                           _LD2 007C62                             _LC4 007C5C                             _LB6 007C56  
                           _LE1 007C69                             _LD3 007C63                             _LC5 007C5D  
                           _LB7 007C57                             _LE2 007C6A                             _LD4 007C64  
                           _LC6 007C5E                             _LE3 007C6B                             _LD5 007C65  
                           _LC7 007C5F                             _LE4 007C6C                             _LD6 007C66  
                           _IBF 007CB7                             _LE5 007C6D                             _LD7 007C67  
                           _LE6 007C6E                             _LE7 007C6F                             _CIS 007DA3  
                           _CKP 007E34                             _PA1 007C12                             _GIE 007F97  
                           _PA2 007C11                             _PB2 007C22                             _PC2 007C21  
                           _BOR 007E80                             _RA0 007C00                             _PD2 007C20  
                           _RA1 007C01                             _RB0 007C08                             _RA2 007C02  
                           _RB1 007C09                             _RA3 007C03                             _RC0 007C10  
                           _RB2 007C0A                             _RA4 007C04                             _RC1 007C11  
                           _RB3 007C0B                             _RA5 007C05                             _RD0 007C18  
                           _RC2 007C12                             _RB4 007C0C                             _RA6 007C06  
                           _BSR 000FE0                             _RD1 007C19                             _RC3 007C13  
                           _RB5 007C0D                             _RA7 007C07                             _RE0 007C20  
                           _RD2 007C1A                             _RC4 007C14                             _RB6 007C0E  
                           _RE1 007C21                             _RD3 007C1B                             _RC5 007C15  
                           _RB7 007C0F                             _RE2 007C22                             _RD4 007C1C  
                           _RC6 007C16                             _RE3 007CB3                             _RD5 007C1D  
                           _RC7 007C17                             _RE4 007C24                             _RD6 007C1E  
                           _OBF 007CB6                             _UA1 007E39                             _RE5 007C25  
                           _RD7 007C1F                             _RC9 007D5E                             _UA2 007C39  
                           _RE6 007C26                             _W4E 007DC1                             _RE7 007C27  
                           _PGC 007C0E                             _PGD 007C0F                             _PCL 000FF9  
                           _SDA 007C14                             _RDE 007C20                             _PR2 000FCB  
                           _PEN 007E2A                             _SDI 007C14                             _SCK 007C13  
                           _SCL 007C13                             _SS1 007C05                             _SDO 007C15  
                           _SS2 007C1B                             _SEN 007E28                             _RW1 007E3A  
                           _PSA 007EAB                             _RW2 007C3A                             _POR 007E81  
                           _RX9 007D5E                             u980 1688                             u981 1686  
                           u990 16B4                             _SMP 007E3F                             u991 16B2  
                           _TX9 007D66                             _TOS 000FFD                             _WRE 007C21  
                           _WUE 007DC1                             _nA2 007C3D                             _nCS 007C22  
                           _nW2 007C3A                             _nPD 007E82            __size_of_WriteTimer0 0012  
          __size_of_WriteTimer1 0012                             _nRD 007C20                             _nRI 007E84  
                           _nTO 007E83                             _nWR 007C21                  _FromMainLow_MQ 0100  
                           wreg 000FE8                      _TXSTA1bits 000FAC                    __CFG_IESO$ON 000000  
                  ?_in_high_int 00B5                ??_init_uart_recv 00B7                 ReadTimer1@timer 0003  
           i2recv_msg@maxlength 003F                            l1802 1C48                            l1810 16DC  
                          l1811 16C8                            l1812 16DA                            l1815 1722  
                          l1808 169C                            l1816 1734                            l1809 16DC  
                          l1817 1734                            _AN10 007C09                            _AN11 007C0C  
                          _AN12 007C08                            l3650 0876                            l3651 0906  
                          l3660 0958                            l3652 08C6                            l5501 1AF6  
                          l3661 0A46                            l3653 08C6                            l3645 081E  
                          l3670 0A4A                            l3662 0A24                            l3654 08CC  
                          l3646 0874                            l1799 1CBE                            l3671 0A4A  
                          l3663 095C                            l3655 08D2                            l3647 0872  
                          l3664 0A44                            l3648 0908                            l3656 08CE  
                          l3665 09AC                            l3649 08E6                            l3657 08E0  
                          l3666 09CE                            l3658 08E2                            l5523 1A32  
                          l3667 09D0                            l3659 095A                            l5540 0F60  
                          l3668 0A20                            l5517 161A                            l3669 0A48  
                          l5470 14B2                            l5534 0EAA                            l5535 0F60  
                          l5480 0B8C                            l5536 0EBA                            l5473 0D10  
                          l5537 0EEE                            l5474 0DB2                            l5538 0F22  
                          l7410 1BB6                            l5539 0F5E                            l5468 147C  
                          l5477 0B86                            l5469 14B2                            l5478 0AC2  
                          l5479 0B8C                            l7407 1822                            _ADIE 007CEE  
                          l5488 1ACA                            l5496 1A9A                            _ADIF 007CF6  
                          _ADEN 007D5B                            _ADFM 007E07                            _CCP1 007C12  
                          l9209 1C34                            _ADIP 007CFE                            _CKE1 007E3E  
                          _CKE2 007C3E                            _ADON 007E10                            _P1M0 007DEE  
                          _CHS0 007E12                            _P1M1 007DEF                            _CHS1 007E13  
                          _CHS2 007E14                            _CHS3 007E15                            _CKP1 007E34  
                          _DDRA 000F92                            _CKP2 007C34                            _DDRB 000F93  
                          _DDRC 000F94                            _DDRD 000F95                            _DDRE 000F96  
                          _GCEN 007E2F                            _KBI0 007C0C                            _KBI1 007C0D  
                          _CMIE 007D06                            _KBI2 007C0E                            _CMIF 007D0E  
                          _KBI3 007C0F                            _PA2E 007C27                            _GIEH 007F97  
                          _CMIP 007D16                            _BRGH 007D62                            _PB1E 007C26  
                          _GIEL 007F96                            _PC1E 007C25                            _PB3E 007C24  
                          _T0IE 007F95                            _PC3E 007C23                            u1000 16F6  
                          _T0IF 007F92                            _RD16 007E6F                            _FLT0 007C08  
                          _CREN 007D5C                            u1001 16F4                            _T0CS 007EAD  
                          u1010 170E                            _FERR 007D5A                            u1011 170C  
                          _DONE 007E11                            _T0IP 007F8A                            _IBOV 007CB5  
                          _CVR0 007DA8                            _CVR1 007DA9                            _PDC0 007DB8  
                          _CVR2 007DAA                            _PDC1 007DB9                            _FREE 007D34  
                          _CVR3 007DAB                            u2200 0D0A                            u1400 1996  
                          _PDC2 007DBA                            u2201 0D08                            u1401 1994  
                          _PDC3 007DBB                            u2210 1788                            u1410 19B4  
                          _PDC4 007DBC                            u2211 1786                            u1411 19B2  
                          _T0SE 007EAC                            _PDC5 007DBD                            _CSRC 007D67  
                          u2220 0A9C                            u1500 123E                            u1420 11AC  
                          _PDC6 007DBE                            u2221 0A9A                            u1501 123C  
                          u1421 11AA                            _LATA 000F89                            u2230 0ABC  
                          u1510 1246                            u1430 11BA                            _LATB 000F8A  
                          u2231 0ABA                            u1511 1244                            u1431 11B8  
                          _LATC 000F8B                            u1520 0EA6                            u1440 11CA  
                          _D_A2 007C3D                            _LATD 000F8C                            _FSR0 000FE9  
                          u1521 0EA4                            u1441 11C8                            _LATE 000F8D  
                          _FSR1 000FE1                            u1530 0EDC                            u1450 11D8  
                          _FSR2 000FD9                            u1531 0EDA                            u1451 11D6  
                          u1540 0F10                            u1460 11EA                            u2180 086E  
                          u1541 0F0E                            u1461 11E8                            u2181 086C  
                          u1550 0F42                            u1470 11FA                            u2190 0954  
                          u1551 0F3E                            u1471 11F8                            u2191 0952  
                          u1720 152E                            u1560 179E                            u1480 1208  
                          _INT0 007C08                            u1721 152C                            u1561 179C  
                          u1481 1206                            _INT1 007C09                            u1570 17B4  
                          u1490 121C                            _INT2 007C0A                            u1571 17B2  
                          u1491 121A                            _SDA1 007C14                            u1580 1478  
                          u1556 0F44                            _SDA2 007C19                            _RCD8 007D58  
                          u1581 1476                            _IPR1 000F9F                            u1590 14B0  
                          _IPR2 000FA2                            u2287 1C4C                            u1591 14AE  
                          _PIE1 000F9D                            _IPR3 000FA5                            _IPEN 007E87  
                          _PIE2 000FA0                            _PEN1 007E2A                            _PIE3 000FA3  
                          _PEN2 007C2A                            _CVRR 007DAD                            _SDI1 007C14  
                          _SCK1 007C13                            _PEIE 007F96                            _SDI2 007C19  
                          _SCK2 007C18                            _SCL1 007C13                            _SCL2 007C18  
                          _RBIE 007F93                            _RBIF 007F90                            _RCIE 007CED  
                          _RCIF 007CF5                            _RCEN 007E2B                            _SDO1 007C15  
                          _SDO2 007C1A                            _SEN1 007E28                            _PIR1 000F9E  
                          _SEN2 007C28                            _SCS0 007E98                            _RBIP 007F88  
                          _MSK0 007E40                            _PIR2 000FA1                            _SCS1 007E99  
                          _MSK1 007E41                            _PIR3 000FA4                            _MSK2 007E42  
                          _MSK3 007E43                            _RCIP 007CFD                            _MSK4 007E44  
                          _MSK5 007E45                            _MSK6 007E46                            _MSK7 007E47  
                          _OERR 007D59                            _RCON 000FD0                            _SCKP 007DC4  
                          _RCMT 007DC6                            _RBPU 007F8F                            _RX91 007D5E  
                          _PSP0 007C18                            _SMP1 007E3F                            _PSP1 007C19  
                          _SMP2 007C3F                            _PSP2 007C1A                            _PSP3 007C1B  
                          _PSP4 007C1C                            _PSP5 007C1D                            _PSP6 007C1E  
                          _TX91 007D66                            _PSP7 007C1F                            _RX9D 007D58  
                          _TMR0 000FD6                            _TMR1 000FCE                            _TMR2 000FCC  
                          _PROD 000FF3                            _RJPU 007C07                            _WCOL 007E37  
                          _SPEN 007D5F                            _RSEN 007E29                            _TX9D 007D60  
                          _SREN 007D5D                            _OSTS 007E9B                            _TXD8 007D60  
                          _TOSH 000FFE                            _TOSL 000FFD                            _WREG 000FE8  
                          _TRMT 007D61                            _STOP 007E3C                            _ZERO 007EC2  
                          _TXIE 007CEC                            _TOSU 000FFF                            _WREN 007D32  
                          _TXIF 007CF4                            _TXEN 007D65                            _SYNC 007D64  
                          _TXIP 007CFC                            _R_W2 007C3A                 _FromMainHigh_MQ 0200  
                          _nBOR 007E80                   __CFG_FCMEN$ON 000000                            _nRC8 007D5E  
                          _nSS1 007C05                            _nSS2 007C1B                            _nPOR 007E81  
                          _nTX8 007D66          ?_block_on_To_msgqueues 0001                            _main 0754  
                          fsr0h 000FEA                            fsr1h 000FE2                            fsr0l 000FE9  
                          fsr2h 000FDA                            indf1 000FE7                            fsr1l 000FE1  
                          indf2 000FDF                            fsr2l 000FD9                     main@msgtype 01C5  
                    i1_send_msg 124C                            pclat 000FFA                     i2_check_msg 1B6E  
                          prodh 000FF4                            prodl 000FF3           handle_start@data_read 0033  
                          start 00D2                      i2_recv_msg 0B8E                   __CFG_FOSC2$ON 000000  
              ?_adc_int_handler 0001                      i2_send_msg 0DB4       ToMainHigh_recvmsg@msgtype 01A8  
                  _ECCP1DELbits 000FB7                 __end_of_ReadADC 1CAE                    _ECCP1CONbits 000FBD  
                send_msg@length 00C1                 __end_of_OpenADC 1538     __size_of_timer0_int_handler 00C0  
                   _Delay1KTCYx 1C4A           ??_FromMainLow_recvmsg 0044                           l17010 178A  
                         l17011 178A                           l10996 1CB6                           l17008 176E  
                         l12792 1B6C                           l17009 1748                           l16412 1534  
                         l14580 17D8                           l16500 1222                           l16413 1536  
                         l14581 17D6                           l16501 124A                           l12789 167E  
                         l14582 17D8                           l16502 124A                           l16425 1C1A  
                         l17073 1C4A                           l17074 1C5C                           l16450 199E  
                         l17075 1C5C                           l14579 17A2                           l16451 19B8  
                         l19011 075A                           l16452 19BA                           l19101 0CF8  
                         l18061 1680                           l16453 19BC                           l19021 07AA  
                         l19013 0772                           _C1INV 007DA4                           l19111 0D70  
                         l19103 0D0A                           l18071 16B4                           l18063 1688  
                         l18055 1CB8                           l19031 07BE                           l19023 07AE  
                         l19015 078A                           l19007 0754                           _DC1B0 007DEC  
                         l19121 1748                           l19113 0DA2                           l19105 0D0E  
                         l18057 1C36                           l18073 16C4                           l18065 1698  
                         l18081 16DE                           l18401 11A0                           l16449 199A  
                         l19041 07DE                           l19033 07D4                           l19025 07B2  
                         l19017 07A2                           l19009 0758                           _DC1B1 007DED  
                         l16490 11AE                           l16395 1CC8                           l19123 175C  
                         l19131 0A68                           l19115 0DAE                           l19107 0D10  
                         l18059 1C48                           l18075 16C6                           l18067 169A  
                         l18083 16F6                           l18091 1722                           l18411 11EA  
                         l16491 11BE                           l18403 11AC                           l19051 0822  
                         l19043 07E0                           l19035 07D8                           l19027 07B6  
                         l19019 07A6                           l16492 11CC                           _DC2B0 007DD4  
                         l19125 1764                           l19141 0AC2                           l19133 0A8A  
                         l19117 0DB2                           l19109 0D40                           l18077 16C8  
                         l18069 169C                           l18093 1732                           l18085 170E  
                         l18421 122E                           l18413 11FA                           l16493 11DC  
                         l18405 11BA                           l18341 1C1C                           l19061 08D2  
                         l19053 0862                           l19045 07F6                           l19037 07DA  
                         l19029 07BA                           _DC2B1 007DD5                           l16494 11DE  
                         _C2INV 007DA5                           l19127 176E                           l19119 1736  
                         l19151 0B7A                           l19143 0AE8                           l19135 0A9C  
                         l18079 16D8                           l18087 171E                           l18431 123E  
                         l18423 1230                           l18415 1208                           l16495 11EC  
                         l18407 11CA                           l18351 1668                           l18343 1C24  
                         l19071 0956                           l19063 08E4                           l19055 0870  
                         l19047 07F8                           l19039 07DC                           l16496 11FC  
                         l19153 0B82                           l19145 0B1E                           l19137 0ABC  
                         l19129 0A4E                           l18089 1720                           l18441 0EBA  
                         l18433 1246                           l18425 1232                           l18417 121C  
                         l16497 120C                           l18409 11D8                           l18361 15BA  
                         l18353 166A                           l18345 17DA                           l19073 095C  
                         l19081 0A24                           l19057 0876                           l19065 08E6  
                         l19049 081E                           l16498 120E                           l19155 0B84  
                         l19147 0B50                           l19139 0AC0                           l19091 1ACC  
                         l19083 1A6C                           l18451 0F10                           l18443 0EDC  
                         l18435 0E8E                           l18427 1234                           l18419 1226  
                         l16499 1220                           l18371 198A                           l18363 15D2  
                         l18355 166C                           l18347 17E2                           l19075 09AC  
                         l19059 08D0                           l19067 0908                           l19149 0B6E  
                         l19157 0B86                           l19093 1AF6                           l19085 1A9A  
                         l18453 0F1C                           l18445 0EE8                           l18437 0EA8  
                         l18429 1236                           l18381 19B4                           l18373 1996  
                         l18365 15EA                           l18357 166E                           l18349 161C  
                         l19077 09D0                           l19069 0948                           l19159 0B8A  
                         l19095 0CAE                           l18471 1B48                           l19087 1A9C  
                         l18455 0F20                           l18447 0EEC                           l18439 0EAC  
                         l18391 1BAE                           l18383 1B94                           l18375 199E  
                         l18367 1602                           l18359 15AE                           l19079 0A22  
                         l18641 14E8                           l19097 0CBC                           l18481 17A0  
                         l18473 1B68                           l19089 1ACA                           l18465 1CAE  
                         l18457 0F22                           l18449 0EEE                           l18393 1BB0  
                         l18385 1B9C                           l18377 19A6                           l18369 1980  
                         l18643 1522                           l18635 14B4                           l19099 0CD6  
                         l18491 146A                           l18483 17A2                           l18459 0F38  
                         l18395 1BB2                           l18387 1BA8                           l18379 19A8  
                         l18645 152E                           l18637 14BC                           l18493 147A  
                         l18485 17B4                           l18397 1BB4                           l18389 1BAC  
                         l18647 1C00                           l18639 14C8                           l18591 1C52  
                         l18495 147C                           l18487 142E                           l18479 178C  
                         l18399 1198                           l18649 1CC6                           l18585 19FC  
                         l18497 149C                           l18489 145A                           l18587 1A32  
                         l18499 14A2                           l18589 1C4A                           _C1OUT 007DA6  
                         _C2OUT 007DA7                           _ABDEN 007DC0                           _ADCAL 007E17  
                         _ADCS0 007E00                           _ADCS1 007E01                           _ADCS2 007E02  
         ??_FromMainLow_sendmsg 00C6                           _ADDEN 007D5B                           _CCP10 007C22  
                         ?_main 0001                           _ACKEN 007E2C                           _ACKDT 007E2D  
                         _CCP2E 007C27                           _CCP6E 007C26                           _CCP7E 007C25  
                         _CCP8E 007C24                           _CCP9E 007C23                           _BCLIE 007D03  
                         _BCLIF 007D0B                           _CCP1X 007DED                           _CCP1Y 007DEC  
                         _CCP2X 007DD5                           _ACQT0 007E03                           _CCP2Y 007DD4  
                         _ACQT1 007E04                           _ACQT2 007E05                           _BCLIP 007D13  
                         _ADRES 000FC3                           _CCPR1 000FBE                           _CCPR2 000FBB  
                         _BRG16 007DC3                           _GCEN1 007E2F                           _GCEN2 007C2F  
                         _CMEN0 007DA0                           _CMEN1 007DA1                           _CMEN2 007DA2  
                         _CARRY 007EC0                           _CHSN3 007E0B                           _BRGH1 007D62  
                         _CMCON 000FB4                           _CREN1 007D5C                           _FERR1 007D5A  
                         _T0CKI 007C0D                           _T1CKI 007C10                           _IDLEN 007E9F  
                         _T0CON 000FD5                           _T1CON 000FCD                           _CSRC1 007D67  
                         _T2CON 000FCA                           _LATA0 007C48                           _LATA1 007C49  
                         _LATB0 007C50                           _LATA2 007C4A                           _INDF0 000FEF  
                         _LATB1 007C51                           _LATA3 007C4B                           _INDF1 000FE7  
                         _LATC0 007C58                           _LATB2 007C52                           _INDF2 000FDF  
                         _LATC1 007C59                           _LATB3 007C53                           _LATA5 007C4D  
                         _LATD0 007C60                           _LATC2 007C5A                           _LATB4 007C54  
                         _LATD1 007C61                           _LATC3 007C5B                           _LATB5 007C55  
                         _LATA7 007C4F                           _LATE0 007C68                           _LATD2 007C62  
                         _LATC4 007C5C                           _LATB6 007C56                           _RC1IE 007CED  
                         _LATE1 007C69                           _LATD3 007C63                           _LATC5 007C5D  
                         _LATB7 007C57                           _RC1IF 007CF5                           _LATE2 007C6A  
                         _LATD4 007C64                           _LATC6 007C5E                           _LATD5 007C65  
                         _LATC7 007C5F                           _T0PS0 007EA8                           _LATD6 007C66  
                         _T0PS1 007EA9                           _LATD7 007C67                           _T0PS2 007EAA  
                         _RC1IP 007CFD                           _FSR0H 000FEA                           _FSR1H 000FE2  
                         _FSR2H 000FDA                           _FSR0L 000FE9                           _PCFG0 007E08  
                         _FSR1L 000FE1                           _PCFG1 007E09                           _PCFG2 007E0A  
                         _FSR2L 000FD9                           _PCFG3 007E0B                           _T1OSI 007C11  
                         _INT0E 007F94                           _INT0F 007F91                           _INT1E 007F83  
                         _INT1F 007F80                           _CVREF 007C02                           _T1OSO 007C10  
                         _INT2E 007F84                           _INT2F 007F81                           _CVREN 007DAF  
                         _INT1P 007F86                           _INT2P 007F87                           _T1RUN 007E6E  
                         _CVROE 007DAE                           _RC8_9 007D5E                           _RCEN1 007E2B  
                    i1memcpy@d1 0001                           _RCEN2 007C2B                           _PCLAT 000FF9  
                         _CVRSS 007DAC                           _MSK01 007E40                           _MSK02 007C40  
                         _MSK11 007E41                           _MSK12 007C41                           _MSK21 007E42  
                         _MSK22 007C42                           _MSK31 007E43                           _MSK32 007C43  
                         _MSK41 007E44                           _MSK42 007C44                           _MSK51 007E45  
                         _RCIDL 007DC6                           _MSK52 007C45                           _MSK61 007E46  
                         _MSK62 007C46                           _MSK71 007E47                           _MSK72 007C47  
                         _OERR1 007D59                      i1memcpy@s1 0003     FromMainHigh_recvmsg@msgtype 0088  
                         _VCFG0 007E0C                           _VCFG1 007E0D                           _RCREG 000FAE  
                         _SENDB 007D63                           _LVDIN 007C05                           _PLLEN 007CDE  
                         _RCSTA 000FAB                           _RX9D1 007D58                           _WCOL1 007E37  
                         _WCOL2 007C37                           _SPEN1 007D5F                           _TMR0H 000FD7  
                         _RSEN1 007E29                           _RSEN2 007C29                           _TMR1H 000FCF  
                         _TX1IE 007CEC                           _TX1IF 007CF4                           _TMR0L 000FD6  
                         _PRODH 000FF4                           _TX9D1 007D60                           _TMR1L 000FCE  
                         _PRODL 000FF3                           _SREN1 007D5D                           _SPBRG 000FAF  
                         _D_nA2 007C3D                           _TX1IP 007CFC                           _NOT_A 007E3D  
                         _PORTA 000F80                           _PORTB 000F81                           _PORTC 000F82  
                         _PORTD 000F83                           _PORTE 000F84                           _PSPIE 007CEF  
                         _PSPIF 007CF7                           _SRENA 007D5D                           _PRSEN 007DBF  
                         _PSPIP 007CFF                           _NOT_W 007E3A                           _START 007E3B  
                         _SSPM0 007E30                           _SSPM1 007E31                           _SSPM2 007E32  
                         _SSPM3 007E33                           _TX8_9 007D66                           _TRISA 000F92  
                         _TRISB 000F93                           _VREFM 007C02                           _TRMT1 007D61  
                         _STOP1 007E3C                           _TRISC 000F94                           _STOP2 007C3C  
                         _TRISD 000F95                           _SSPIE 007CEB                           _TRISE 000F96  
                         _VREFP 007C03                           _SSPIF 007CF3                           _SSPEN 007E35  
                         _TXEN1 007D65                           _SWDTE 007E88                           _SYNC1 007D64  
                         _SSPIP 007CFB                           _SSPOV 007E36                           _WRERR 007D33  
                         _TXREG 000FAD                           _TXSTA 000FAC                           _R_nW2 007C3A  
                    i2memcpy@d1 0033                           _nDONE 007E11                      i2memcpy@s1 0035  
                  ?_init_queues 0001                           _nRBPU 007F8F       __size_of_enter_sleep_mode 0006  
               __end_of_in_main 1736                           _errno 0044      ToMainLow_recvmsg@maxlength 01A7  
       timer0_lthread@msgbuffer 00BB                      _ConvertADC 1CC6         i2c_configure_slave@addr 00B5  
                         tablat 000FF5                           status 000FD8                __end_ofi1_memcpy 186C  
              __end_ofi2_memcpy 18B4                 __initialization 18B4                    __end_of_main 0A4E  
                    _ReadTimer1 1C5E     __size_of_timer1_int_handler 003E      __size_of_ToMainLow_recvmsg 0030  
    __size_of_ToMainLow_sendmsg 0024   __size_of_FromMainHigh_recvmsg 0028           __size_ofi2_in_low_int 0044  
                        ??_main 01AC                 send_msg@msgtype 00C2                   __activetblptr 000000  
               send_msg@tlength 01A2      FromMainLow_sendmsg@msgtype 01A8                      _SetChanADC 1C00  
          __end_of_handle_start 13A4          i2c_int_handler@msgtype 00A3                          _ADDEN1 007D5B  
                        _BCL1IE 007D03                          _BCL1IF 007D0B                          _BCL2IE 007D1E  
                        _BCL2IF 007D26                          _BCL1IP 007D13                          _BCL2IP 007D2E  
                        _ADCON0 000FC2                          _ADCON1 000FC1                          _ADCON2 000FC0  
                        _ACKEN1 007E2C                          _ACKEN2 007C2C                          _ABDOVF 007DC7  
                        _ACKDT1 007E2D                          _ACKDT2 007C2D                          _CCP1M0 007DE8  
                        _CCP1M1 007DE9                          _CCP1M2 007DEA                          _CCP1M3 007DEB  
                        _CCP2M0 007DD0                          _CCP2M1 007DD1                          _CCP2M2 007DD2  
                        _CCP2M3 007DD3                          _CCP1IE 007CEA                          _CCP1IF 007CF2  
                        _CCP2IE 007D00                          _CCP2IF 007D08                          _CCP1IP 007CFA  
                        _CCP2IP 007D10                          _ADMSK1 007E29                          _ADMSK2 007E2A  
                        _ADMSK3 007E2B                          _ADMSK4 007E2C                          _ADMSK5 007E2D  
                        _ADRESH 000FC4                          _ADRESL 000FC3                          _CCPR1H 000FBF  
                        _CCPR2H 000FBC                          _CCPR1L 000FBE                          _CCPR2L 000FBB  
                        _EECON1 000FA6                          _EECON2 000FA7                          _T08BIT 007EAE  
       ??_uart_recv_int_handler 001B                          _T1RD16 007E6F                          _GODONE 007E11  
                        _INT0IE 007F94                          _INT0IF 007F91                          _INT1IE 007F83  
                        _INT1IF 007F80                          _INT2IE 007F84                          _INT2IF 007F81  
                        _INT1IP 007F86                          _CVRCON 000FB5                          _INT2IP 007F87  
                        _MEMCON 000FCB                          i1l1825 006C                          i1l1826 007C  
                        i1l1827 008C                          i1l1828 008C                          _CVROEN 007DAE  
                        _T1SYNC 007E6A                          i1l5473 128A                          i2l1802 1CA0  
                        i2l1810 193C                          i1l5474 12FC                      _OpenTimer1 1980  
                        i2l1811 192E                          i2l1812 193A                          i2l1820 13E0  
                        i2l1821 13F0                          i1l5485 1BDA                          i2l1822 13F4  
                __CFG_WDTEN$OFF 000000                          i2l1808 1910                          i2l1809 193C  
                        i1l9203 116C                          i1l9204 116A                          _PCLATH 000FFA  
                        i1l9205 1196                          i1l9206 1196                          i2l5520 1CC4  
                        i2l5512 1B46                          i2l5504 1B1E                          _PCLATU 000FFB  
                        i2l5530 158A                          i2l5523 1B92                          i2l5531 15A8  
                        i2l5526 1544                          i2l5527 15AC                          i2l5480 0CAC  
                        i2l5528 1558                          _INTCON 000FF2                          i2l5473 0E06  
                        i2l5529 156C                          i2l7401 0732                          i2l5474 0E8C  
                        i2l7402 0730                          i2l7403 0752                          i2l7404 0752  
                        i2l5477 0CA6                          i2l5493 1BFE                          i2l5478 0BF0  
                        i2l7350 138E                          i2l7342 1090                          i2l5479 0CAC  
                        i2l7351 137A                          i2l7343 1034                          i2l7352 138C  
                        i2l7344 10AE                          i2l7360 0540                          i2l7353 13A2  
                        i2l7345 10E0                          i2l7361 019E                          i2l7354 13A2  
                        i2l7370 0300                          i2l7362 01E8                          i2l7371 02FE  
                        i2l7363 01E6                          i2l7348 1390                          i2l7364 0568  
                        i2l7380 045E                          i2l7372 02CC                          i2l7349 1360  
                        i2l7381 043A                          i2l7373 0298                          i2l7365 01EA  
                        i2l7357 0170                          i2l7390 0536                          i2l7382 0408  
                        i2l7374 02CA                          i2l7366 025A                          i2l7358 018E  
                        _TABLAT 000FF5                          i2l7391 0590                          i2l7383 0438  
                        i2l7375 02FC                          i2l7367 0248                          i2l7359 0568  
                        i2l7384 044C                          i2l7376 0302                          i2l7368 0228  
                        i2l7393 0582                          i2l7385 053C                          i2l7377 037E  
                        i2l7369 0248                          i2l7394 058E                          i2l7386 053A  
                        i2l7378 0390                          i2l7395 05E2                          i2l7387 04BC  
                        i2l7379 0392                          i2l7396 0694                          i2l7388 0538  
                        i2l7397 0668                          i2l7389 0506                          i2l7398 0692  
                        _VCFG01 007E0C                          _VCFG11 007E0D                          _RCREG1 000FAE  
   __end_of_i2c_configure_slave 1BB8                          _SENDB1 007D63                   ??_SleepIfOkay 0037  
            __size_of_ReadUSART 0038                          _RCSTA1 000FAB                          _OSCFIE 007D07  
                        _OSCFIF 007D0F                          _OSCCON 000FD3                          _OSCFIP 007D17  
                        _TBLPTR 000FF6                          _TMR0IE 007F95                          _SPBRG1 000FAF  
                        _TMR0IF 007F92                          _TMR1IE 007CE8                          _TMR1IF 007CF0  
                        _TMR1CS 007E69                          _TMR2IE 007CE9                          _TMR2IF 007CF1  
                        _TMR0IP 007F8A                          _PSSAC0 007DB2                          _PSSAC1 007DB3  
                        _TMR1IP 007CF8                          _PSSBD0 007DB0                          _PSSBD1 007DB1  
                        _TMR2IP 007CF9                          _TMR0ON 007EAF                          _SPBRGH 000FB0  
                        _TMR1ON 007E68                          _PLUSW0 000FEB                          _PLUSW1 000FE3  
                        _TMR2ON 007E52                          _PLUSW2 000FDB                          _NOT_CS 007C22  
                        _SSP1IE 007CEB                          _SSP1IF 007CF3                          _SSP2IE 007D1F  
                        _SSP2IF 007D27                          _NOT_PD 007E82                          _NOT_RD 007C20  
                        _SSP1IP 007CFB                          _WDTCON 000FD1                          _NOT_RI 007E84  
                        _SSP2IP 007D2F                          _NOT_TO 007E83                          _START1 007E3B  
                        _START2 007C3B                          _SOSCEN 007E6B                          _NOT_WR 007C21  
                        _SSPM01 007E30                          _SSPM02 007C30                          _SSPM11 007E31  
                        _SSPM12 007C31                          _SSPM21 007E32                          _SSPM22 007C32  
                        _SSPM31 007E33                          _SSPM32 007C33                          _SSPADD 000FC8  
                        _TRISA0 007C90                          _TRISA1 007C91                          _TRISB0 007C98  
                        _TRISA2 007C92                          _TRISB1 007C99                          _TRISA3 007C93  
                        _TRISC0 007CA0                          _TRISB2 007C9A                          _TRISC1 007CA1  
                        _TRISB3 007C9B                          _TRISA5 007C95                          _TRISD0 007CA8  
                        _TRISC2 007CA2                          _TRISB4 007C9C                          _TRISD1 007CA9  
                        _TRISC3 007CA3                          _TRISB5 007C9D                          _TRISE0 007CB0  
                        _TRISD2 007CAA                          _TRISC4 007CA4                          _TRISB6 007C9E  
                        _TRISE1 007CB1                          _TRISD3 007CAB                          _TRISC5 007CA5  
                        _TRISB7 007C9F                          _TRISE2 007CB2                          _TRISD4 007CAC  
                        _TRISC6 007CA6                          _TRISD5 007CAD                          _TRISC7 007CA7  
                        _SSPEN1 007E35                          _TRISD6 007CAE                          _SSPEN2 007C35  
                        _TRISD7 007CAF                          _STATUS 000FD8                          _STKFUL 007FE7  
                        _SSPBUF 000FC9                          _SWDTEN 007E88                          _STKOVF 007FE7  
                        _SSPOV1 007E36                          _SSPOV2 007C36                          _STKUNF 007FE6  
                        _STKPTR 000FFC  __size_of_start_i2c_slave_reply 00C0                          _TXREG1 000FAD  
                   ?i1_send_msg 000B                       ??_ReadADC 0003                          _TXSTA1 000FAC  
 __end_of_start_i2c_slave_reply 10E2              timer0_lthread@tptr 00B5         FromMainLow_recvmsg@data 008A  
                   ?i2_recv_msg 003D                       ??_OpenADC 00B8                    i2_in_low_int 18FA  
                   ?i2_send_msg 003D                  __CFG_XINST$OFF 000000              __size_of_OpenUSART 00B4  
               _i2c_int_handler 00D6                          _ic_ptr 0049                   main@msgbuffer 01AD  
              __end_of_init_i2c 1824                OpenTimer1@config 00B5                          _memcpy 1736  
                        clear_0 18BA                          clear_1 18C6                          _uc_ptr 004B  
                        main@ic 01C6                          main@uc 01BF                __end_of_recv_msg 0B8E  
   start_i2c_slave_reply@length 0033                       ??_in_main 00BB                __end_of_send_msg 0DB4  
         timer0_int_handler@val 0092         i2c_int_handler@i2c_data 00A2                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                     init_queue@i 00B8  
      ToMainLow_recvmsg@msgtype 01A8            __size_of_in_high_int 0014                     ?_ConvertADC 0001  
       FromMainLow_sendmsg@data 01A9                 __CFG_FOSC$HSPLL 000000                      __accesstop 0080  
       __end_of__initialization 18F4      __end_of_ToMainHigh_recvmsg 1A9C      __end_of_ToMainHigh_sendmsg 1C00  
   __end_of_init_timer1_lthread 1680             __end_of_SleepIfOkay 15AE                  __pcstackCOMRAM 0001  
                  __pidataBANK0 1CCA          __size_ofi2_in_high_int 000E                     ?_ReadTimer1 0001  
            __size_of_check_msg 0038               __end_of_ReadUSART 1A6C       timer0_int_handler@msgtype 008E  
                   ?_SetChanADC 00B5             __size_ofi1_send_msg 00B2                       ?i1_memcpy 0001  
 __size_of_InterruptHandlerHigh 1426     __end_of_InterruptHandlerLow 00D2                       ?i2_memcpy 0033  
                 _ToMainHigh_MQ 0136             __size_ofi2_recv_msg 0120                _enter_sleep_mode 1CC0  
           __size_ofi2_send_msg 00DA            timer1_lthread@length 00B9                   ReadUSART@data 0001  
             __end_of_OpenUSART 124C                   check_msg@qptr 00B5         ??_block_on_To_msgqueues 00BB  
          __size_of_init_queues 006E                      __pbssBANK1 0100                      __pbssBANK2 0200  
                   ?_OpenTimer1 00B5                      __pnvCOMRAM 0049         __end_of_i2c_int_handler 0754  
                  ?i2_check_msg 0033              timer1_lthread@tptr 00B5                   _DATA_ADDRESS2 007C3D  
             recv_msg@maxlength 00C1                 recv_msg@msgtype 00C2                 recv_msg@tlength 01A3  
                       _CCP1CON 000FBD                         _CCP2CON 000FBA           __size_of_handle_start 00A6  
                  ?_Delay1KTCYx 00B5                WriteTimer0@timer 0035                         _ADMSK11 007E29  
                       _ADMSK12 007C29                         _ADMSK21 007E2A                         _ECCP1AS 000FB6  
                       _ADMSK22 007C2A                         _ADMSK31 007E2B                         _ADMSK32 007C2B  
                       _ADMSK41 007E2C                         _ADMSK42 007C2C                         _ADMSK51 007E2D  
                       _ADMSK52 007C2D                         ?_memcpy 00B5                         _BAUDCON 000FB8  
                       _ACKSTAT 007E2E                         _BAUDCTL 000FB8                WriteTimer1@timer 0003  
                 ??_WriteTimer0 0035                   ??_WriteTimer1 0003                         _ECCPAS0 007DB4  
                       _ECCPAS1 007DB5                         _ECCPAS2 007DB6                         _ECCPASE 007DB7  
           __size_of_ConvertADC 0004         __size_of_timer0_lthread 000A                         _T1CKPS0 007E6C  
                       _T1CKPS1 007E6D                         _T2CKPS0 007E50                         _T2CKPS1 007E51  
       __size_of_timer1_lthread 0026                         _T1OSCEN 007E6B                         i1l17010 186A  
                       i1l17011 186A                         i1l17008 1854                         i1l17009 1836  
                       i1l16420 1CAC                         i1l16511 1A4E                         i1l16512 1A4E  
                       i1l16513 1A58                         i1l16514 1A62                         i1l16515 1A6A  
                       i1l16460 1C6E                         i1l16390 197E                         i1l16467 1C80  
                       i1l16387 19FA                         i1l17731 1C5E                         i1l17733 1C70  
                       i1l18621 1A38                         i1l17735 1CA2                         i1l18631 1A66  
                       i1l18623 1A40                         i1l17737 1CAC                         i1l18633 1A6A  
                       i1l18625 1A4A                         i1l18801 195A                         i1l18627 1A56  
                       i1l18619 1A34                         i1l18811 111E                         i1l18803 1962  
                       i1l18741 184A                         i1l18629 1A60                         i1l18821 1178  
                       i1l18813 1134                         i1l18805 10E2                         i1l18743 184E  
                       i1l18815 1158                         i1l18807 10EA                         i1l18831 0074  
                       i1l18823 005C                         i1l18745 1854                         i1l18737 1824  
                       i1l18761 1262                         i1l18809 1110                         i1l18817 116C  
                       i1l18833 0076                         i1l18825 0064                         i1l18739 1836  
                       i1l18771 12AA                         i1l18763 1272                         i1l18819 1174  
                       i1l18835 007C                         i1l18827 0066                         i1l18773 12CA  
                       i1l18765 1284                         i1l18757 124C                         i1l18781 1BB8  
                       i1l18837 0084                         i1l18829 006C                         i1l18775 12EC  
                       i1l18767 1288                         i1l18759 1252                         i1l18783 1BDA  
                       i1l18791 19EE                         i1l18839 0086                         i1l18777 12F8  
                       i1l18769 128A                         i1l18793 193E                         i1l18785 19BE  
                       i1l18779 12FC                         i1l18795 194A                         i1l18787 19CA  
                       i1l18797 1952                         i1l18789 19E6                         i1l18799 1956  
                       i2l17010 18B2                         i2l17011 18B2                         i2l17008 189C  
                       i2l17009 187E                         i2l19001 0F8A                         i2l16434 1C92  
                       i2l19003 0FD4                         i2l19005 0FE6                         i2l16383 1020  
                       i2l16384 1020                         i2l19201 0B8E                         i2l19211 0BEE  
                       i2l19203 0BA2                         i2l19221 0C8E                         i2l19213 0BF0  
                       i2l19205 0BBC                         i2l18261 1544                         _INTEDG0 007F8E  
                       i2l19231 0CAA                         i2l19223 0C9A                         i2l19215 0C16  
                       i2l19207 0BCE                         i2l18271 1588                         i2l18263 1556  
                       _INTEDG1 007F8D                         _INTEDG2 007F8C                         i2l19241 189C  
                       i2l19233 186C                         i2l19225 0CA2                         i2l19217 0C4A  
                       i2l19209 0BEA                         i2l18601 10AE                         i2l19161 1BDC  
                       i2l18273 158A                         i2l18265 1558                         i2l18257 1538  
                       i2l19235 187E                         i2l19227 0CA4                         i2l19219 0C70  
                       i2l18611 1330                         i2l18603 10DE                         i2l19163 1BFE  
                       i2l18275 15A6                         i2l18267 156A                         i2l18259 1542  
                       i2l19237 1892                         i2l19229 0CA6                         i2l19181 0DD4  
                       i2l18613 1368                         i2l18605 12FE                         i2l19173 1B20  
                       i2l19165 1AF8                         i2l18277 15A8                         i2l18269 156C  
                       i2l19239 1896                         i2l19191 0E32                         i2l19183 0DEE  
                       i2l18615 137A                         i2l18607 131E                         i2l19175 1B46  
                       i2l19167 1B1E                         i2l19193 0E5A                         i2l19185 0E00  
                       i2l19177 0DB4                         i2l18609 1328                         i2l18617 1390  
                       i2l19195 0E7C                         i2l19187 0E04                         i2l19179 0DC0  
                       i2l18651 1C82                         i2l18733 1B6E                         i2l19197 0E88  
                       i2l19189 0E06                         i2l18653 1C94                         i2l18661 190C  
                       i2l18901 027E                         i2l18735 1B92                         i2l19199 0E8C  
                       i2l18655 1CA0                         i2l18671 192C                         i2l18663 190E  
                       i2l18583 1CC0                         i2l18903 0286                         i2l18911 02CC  
                       i2l18673 192E                         i2l18665 1910                         i2l18657 18FA  
                       i2l18593 1022                         i2l18921 037E                         i2l18913 0302  
                       i2l18905 0298                         i2l18841 13D0                         i2l18675 1938  
                       i2l18667 1920                         i2l18659 1902                         i2l18595 1034  
                       i2l18931 03E8                         i2l18923 039A                         i2l18915 032E  
                       i2l18907 02A8                         i2l18851 13EA                         i2l18843 13D8  
                       i2l18669 192A                         i2l18597 1080                         i2l18933 03F6  
                       i2l18925 03A8                         i2l18941 045E                         i2l18917 035E  
                       i2l18909 02B8                         i2l18861 0130                         i2l18853 13F0  
                       i2l18845 13DA                         i2l18599 1090                         i2l18951 04C4  
                       i2l18943 046C                         i2l18935 0408                         i2l18927 03B6  
                       i2l18919 036C                         i2l18871 0178                         i2l18863 0140  
                       i2l18855 00D6                         i2l18847 13E0                         i2l18961 053E  
                       i2l18953 04D4                         i2l18945 047A                         i2l18929 03BE  
                       i2l18937 043A                         i2l18881 01AE                         i2l18873 017C  
                       i2l18865 0150                         i2l18857 0126                         i2l18849 13E8  
                       i2l18971 05A6                         i2l18955 04E4                         i2l18947 0482  
                       i2l18939 044C                         i2l18891 0216                         i2l18883 01C4  
                       i2l18963 0540                         i2l18875 018E                         i2l18867 015E  
                       i2l18859 012E                         i2l18981 0652                         i2l18973 05B2  
                       i2l18965 0574                         i2l18957 04F4                         i2l18949 04AC  
                       i2l18893 0228                         i2l18885 01F2                         i2l18877 019C  
                       i2l18869 0170                         i2l18991 071E                         i2l18983 0674  
                       i2l18975 05E2                         i2l18967 058A                         i2l18959 0506  
                       i2l18887 0200                         i2l18895 025A                         i2l18879 01A6  
                       i2l18993 0732                         i2l18977 05F0                         i2l18985 0694  
                       i2l18969 0590                         i2l18897 0268                         i2l18889 020E  
                       i2l18995 0740                         i2l18987 06AA                         i2l18979 063A  
                       i2l18899 0276                         i2l18997 0F62                         i2l18989 06E6  
                       i2l18999 0F7E                         _INTCON2 000FF1                      ??i1_memcpy 0007  
                       _INTCON3 000FF0                         _GO_DONE 007E11                      ??i2_memcpy 0039  
                       _TBLPTRH 000FF7                         _TBLPTRL 000FF6                         _PREINC0 000FEC  
                       _PREINC1 000FE4                         _PREINC2 000FDC                         _TBLPTRU 000FF8  
                       _OSCTUNE 000F9B                         _PWM1CON 000FB7                i1send_msg@length 000D  
                       _SSP1ADD 000FC8                         _SSP2ADD 000F88                         _NOT_BOR 007E80  
                       _NOT_RC8 007D5E                         _SSP1BUF 000FC9                         _SSP2BUF 000F8E  
                       _NOT_SS1 007C05                         _NOT_SS2 007C1B                         _NOT_POR 007E81  
                       _NOT_TX8 007D66                         _PSPMODE 007CB4                   i2_in_high_int 1C94  
                       _SSPCON1 000FC6                         _SSPCON2 000FC5                         _STKPTR0 007FE0  
                       _STKPTR1 007FE1                         _STKPTR2 007FE2                         _STKPTR3 007FE3  
                       _STKPTR4 007FE4                         _ULPWUIN 007C00                         _SSPSTAT 000FC7  
                       _TOUTPS0 007E53                         _TOUTPS1 007E54                         _TOUTPS2 007E55  
                       _TOUTPS3 007E56             __size_of_ReadTimer1 0012               __end_of_check_msg 1A34  
                     _I2C_READ2 007C3A                       _I2C_STOP2 007C3C                       ?_init_i2c 00B5  
                   _SleepIfOkay 1538                         _ReadADC 1CA2                       ?_recv_msg 00BF  
                       _OpenADC 14B4                      _in_low_int 1680                    _handle_start 12FE  
                       __Hparam 0000             __size_of_SetChanADC 001C                         _nT1SYNC 007E6A  
                     ?_send_msg 00BF                         __Lparam 0000      __end_of_timer0_int_handler 1022  
   __end_of_FromMainLow_recvmsg 1B20     __end_of_FromMainLow_sendmsg 1AF8                init_uart_recv@uc 00B5  
                       _nWRITE2 007C3A                       _CMCONbits 000FB4                 __CFG_STVREN$OFF 000000  
                       __pcinit 18B4                 __size_of_memcpy 0056        __size_of_adc_int_handler 0042  
                    _init_queue 142E                         __ramtop 0400             __size_of_OpenTimer1 003E  
                       __ptext0 0754                         __ptext1 1CB8                         __ptext2 1C1C  
                       __ptext3 17DA                         __ptext4 161C                         __ptext5 15AE  
                       __ptext6 1980                         __ptext7 1B94                         __ptext8 1198  
                       __ptext9 0E8E                       _T0CONbits 000FD5                         _in_main 16DE  
                     _T1CONbits 000FCD                       _T2CONbits 000FCA             __end_of_WriteTimer0 1C94  
           __end_of_WriteTimer1 1C82                  ?i2_in_high_int 0033                  OpenADC@config2 00B6  
                __pintcode_body 13A4    __end_of_FromMainHigh_recvmsg 1B48            end_of_initialization 18F4  
       timer1_lthread@msgbuffer 00BB                       _PEIE_GIEL 007F96  __size_of_uart_recv_int_handler 00B6  
                       memcpy@d 00BB                         memcpy@n 00B9                         memcpy@s 00BD  
 __end_of_uart_recv_int_handler 1198                      ??_init_i2c 00B7     i2c_int_handler@data_written 009E  
                       int_func 13A4                    ??i1_send_msg 0011                   ?_uart_lthread 00B5  
       __size_of_init_uart_recv 001A                ?_i2c_int_handler 0001                    ??i2_recv_msg 0080  
                    ??_recv_msg 00C6                    ??i2_send_msg 0043                      ??_send_msg 00C5  
          adc_int_handler@value 0020      __end_of_timer1_int_handler 19FC                       _RCSTAbits 000FAB  
                       postdec2 000FDD                         postinc0 000FEE                         postinc2 000FDE  
     ToMainHigh_sendmsg@msgtype 0086                       _PORTAbits 000F80                       _PORTBbits 000F81  
                     _PORTCbits 000F82                       _PORTDbits 000F83                       _PORTEbits 000F84  
            __end_ofi1_send_msg 12FE                       _TRISAbits 000F92                       _TRISBbits 000F93  
                     _TRISCbits 000F94                       _TRISDbits 000F95                       _TRISEbits 000F96  
            __end_ofi2_recv_msg 0CAE              __end_ofi2_send_msg 0E8E                    ??_ConvertADC 00B5  
                     _CapStatus 0046   FromMainHigh_recvmsg@maxlength 0087        timer1_int_handler@result 001F  
                ??_uart_lthread 00BD                     _CCP1CONbits 000FBD                     _CCP2CONbits 000FBA  
                     _TXSTAbits 000FAC                      main@length 01C4                     ?_in_low_int 00B7  
         timer0_lthread@msgtype 00B7           _start_i2c_slave_reply 1022    __size_of_i2c_configure_slave 0024  
          __size_ofi2_check_msg 0026        __end_of_enter_sleep_mode 1CC6                    ??_ReadTimer1 0003  
                   _ECCP1ASbits 000FB6              _ToMainHigh_recvmsg 1A6C                       i1memcpy@d 0007  
            _ToMainHigh_sendmsg 1BDC                       i1memcpy@n 0005                       i1memcpy@s 0009  
                   _BAUDCONbits 000FB8                  _timer0_lthread 1CAE                     ?_init_queue 00B5  
                     i2memcpy@d 0039                     _BAUDCTLbits 000FB8                     _WriteTimer0 1C82  
                   _WriteTimer1 1C70                       i2memcpy@n 0037                       i2memcpy@s 003B  
            __end_of_ConvertADC 1CCA                  _timer1_lthread 1B48                  __end_of_memcpy 178C  
             _enable_interrupts 1CB8            __size_of_Delay1KTCYx 0014                       _nADDRESS2 007C3D  
                  ??_SetChanADC 00B6             ?_ToMainHigh_recvmsg 01A7                 ??i2_in_high_int 0035  
      i2c_int_handler@data_read 00A6             ?_ToMainHigh_sendmsg 0085              ?_enable_interrupts 0001  
           start_initialization 18B4                   ??_in_high_int 00B7                       _ReadUSART 1A34  
             ??_adc_int_handler 001B               __size_ofi1_memcpy 0048               __size_ofi2_memcpy 0048  
     FromMainLow_sendmsg@length 01A7           i2c_int_handler@length 00A0             ??_enable_interrupts 00B5  
                  ??_OpenTimer1 00B6  __size_of_block_on_To_msgqueues 00D4              __end_of_ReadTimer1 1C70  
 __end_of_block_on_To_msgqueues 0F62                       _OpenUSART 1198    __end_of_InterruptHandlerHigh 142E  
                    init_i2c@ic 00B5            ??_ToMainHigh_recvmsg 00C8            ??_ToMainHigh_sendmsg 0044  
            __end_of_SetChanADC 1C1C          __end_of_timer0_lthread 1CB8        i2c_int_handler@error_buf 009B  
                   __pdataBANK0 00C8          __end_of_timer1_lthread 1B6E       __end_of_enable_interrupts 1CC0  
                      ??_memcpy 00BB           timer1_lthread@msgtype 00B7            _FromMainHigh_recvmsg 1B20  
  __size_of_init_timer1_lthread 0064              __end_of_OpenTimer1 19BE        i2c_int_handler@msg_ready 00A5  
                   __pbssCOMRAM 0044          timer1_int_handler@temp 001D                      ?_ReadUSART 0001  
                 ??_init_queues 00B9                   __pcstackBANK0 0080                   __pcstackBANK1 01A2  
           __size_of_in_low_int 005E        start_i2c_slave_reply@msg 0034             __CFG_CCP2MX$DEFAULT 000000  
               Delay1KTCYx@unit 00B5        ToMainLow_sendmsg@msgtype 0018    __size_of_InterruptHandlerLow 00BA  
           __end_of_in_high_int 1C4A                      ?_OpenUSART 00B5                    ?_SleepIfOkay 0001  
         ToMainLow_recvmsg@data 01AA                    _ToMainLow_MQ 016C             __size_of_init_queue 0086  
                _init_uart_recv 1C1C                        ?_ReadADC 0001                       _check_msg 19FC  
        ?_start_i2c_slave_reply 0033               __size_of_init_i2c 004A               OpenADC@portconfig 00B7  
                      ?_OpenADC 00B5                    recv_msg@data 00C4                    recv_msg@qmsg 01A5  
                  recv_msg@slot 01A2                    recv_msg@qptr 00BF               __size_of_recv_msg 0140  
                     __pintcode 0008               __size_of_send_msg 0106                 ?_timer0_lthread 00B5  
         ?_FromMainHigh_recvmsg 0087                 ?_timer1_lthread 00B5                     __pintcodelo 0018  
        ToMainHigh_recvmsg@data 01AA            __end_of_uart_lthread 17DA                        _I2C_DAT2 007C3D  
    i2c_int_handler@msg_to_send 00A4                        ?_in_main 00B9               WriteTimer0@timer0 0033  
                      _ECCP1DEL 000FB7                        _ECCP1CON 000FBD                        _CCP2_PA2 007C0B  
                      _ACKSTAT1 007E2E                        _ACKSTAT2 007C2E              _timer0_int_handler 0F62  
             WriteTimer1@timer1 0001             uart_lthread@msgtype 00B7           ToMainLow_sendmsg@data 0019  
                      _DDRAbits 000F92                        _DDRBbits 000F93                        _DDRCbits 000F94  
                      _DDRDbits 000F95                        _DDREbits 000F96             ?_timer0_int_handler 0001  
                      _GIE_GIEH 007F97                        _T1INSYNC 007E6A                uart_lthread@uptr 00B5  
        __end_of_init_uart_recv 1C36             __end_of_init_queues 161C                        _NEGATIVE 007EC4  
                      _T2OUTPS0 007E53                        _T2OUTPS1 007E54                        _T2OUTPS2 007E55  
                      _T2OUTPS3 007E56                   OpenADC@config 00B5                        _LATAbits 000F89  
                      _LATBbits 000F8A                        _LATCbits 000F8B                        _LATDbits 000F8C  
                      _LATEbits 000F8D                 i2check_msg@qptr 0033                      ?_check_msg 00B5  
                      _IPR1bits 000F9F                        _IPR2bits 000FA2                        _PIE1bits 000F9D  
                      _IPR3bits 000FA5                        _PIE2bits 000FA0                        _PIE3bits 000FA3  
                 ?i2_in_low_int 0035                        i1u170_20 1A56                        i1u170_21 1A54  
                      i1u171_20 1A60                        i1u171_21 1A5E                        i1u180_20 1284  
                      i1u180_21 1282                        i1u181_20 10EA                        i1u181_21 10E8  
                      i1u182_20 1134                        i1u182_21 1132                        i1u183_20 1174  
                      i1u183_21 1172                        i1u168_20 1A40                        i1u184_20 0064  
                      i1u168_21 1A3E                        i1u184_21 0062                        i2u200_40 032E  
                      i2u200_41 032C                        i1u169_20 1A4A                        i1u185_20 0074  
                      i1u169_21 1A48                        i1u185_21 0072                        i2u201_40 039A  
                      i2u201_41 0398                        i1u178_20 1868                        i1u186_20 0084  
                      i1u178_21 1866                        i1u186_21 0082                        i2u210_40 05A6  
                      i2u202_40 03B6                        i2u210_41 05A4                        i2u202_41 03B4  
                      i2u211_40 05B2                        i2u203_40 03BE                        i2u211_41 05B0  
                      i2u203_41 03BC                        i2u212_40 05F0                        i2u204_40 046C  
                      i2u212_41 05EE                        i2u204_41 046A                        i2u133_40 1540  
                      i2u213_40 0652                        i2u205_40 0482                        i2u133_41 153E  
                      i2u213_41 0650                        i2u205_41 0480                        i2u134_40 1554  
                      i2u214_40 06AA                        i2u206_40 04C4                        i2u134_41 1552  
                      i2u214_41 06A8                        i2u206_41 04C2                        i2u135_40 1568  
                      i2u215_40 0740                        i2u207_40 0574                        i2u135_41 1566  
                      i2u215_41 073E                        i2u207_41 0572                        i2u224_40 0E00  
                      i2u136_40 1586                        i2u216_40 0F6C                        i2u208_40 0582  
                      i2u224_41 0DFE                        i2u136_41 1584                        i2u216_41 0F68  
                      i2u208_41 0580                        i2u216_46 0F6E                        i2u225_40 0BCE  
                      i2u137_40 15A4                        i2u217_40 0FE6                        i2u209_40 058A  
                      i2u225_41 0BCC                        i2u137_41 15A2                        i2u217_41 0FE4  
                      i2u209_41 0588                        i2u226_40 0BEA                        i2u226_41 0BE8  
                      i2u227_40 18B0                        i2u227_41 18AE                        i2u164_40 10AC  
                      i2u164_41 10AA                        i2u173_40 1902                        i2u165_40 1328  
                      i2u173_41 1900                        i2u165_41 1326                        i2u174_40 1920  
                      i2u166_40 1330                        i2u190_40 0178                        i2u174_41 191E  
                      i2u166_41 132E                        i2u190_41 0176                        i2u167_40 1368  
                      i2u191_40 019A                        i2u167_41 1366                        i2u191_41 0198  
                      i2u192_40 01A6                        i2u192_41 01A4                        i2u193_40 01C4  
                      i2u193_41 01C2                        _PIR1bits 000F9E                        i2u194_40 01F2  
                      i2u194_41 01F0                        i2u195_40 020E                        i2u187_40 13D8  
                      i2u195_41 020C                        i2u187_41 13D6                        _PIR2bits 000FA1  
                      i2u196_40 0216                        i2u188_40 13E8                        i2u196_41 0214  
                      i2u188_41 13E6                        i2u197_40 0268                        i2u189_40 012E  
                      i2u197_41 0266                        i2u189_41 012C                        _PIR3bits 000FA4  
                      i2u198_40 027E                        i2u198_41 027C                        i2u199_40 0286  
                      i2u199_41 0284          ToMainHigh_sendmsg@data 0087                        _GO_nDONE 007E11  
                      _RCONbits 000FD0                __CFG_WDTPS$32768 000000                        _OVERFLOW 007EC3  
                      _POSTDEC0 000FED                        _POSTDEC1 000FE5                        _POSTDEC2 000FDD  
                      _NOT_DONE 007E11                        _SSP1CON1 000FC6                        _SSP1CON2 000FC5  
                      _SSP2CON1 000F86                        _SSP2CON2 000F85                        _POSTINC0 000FEE  
                      _POSTINC1 000FE6                        _POSTINC2 000FDE                        _NOT_RBPU 007F8F  
          ??_timer0_int_handler 008C                        _SSP1STAT 000FC7                        _SSP2STAT 000F87  
  FromMainLow_recvmsg@maxlength 0087      __size_of_enable_interrupts 0008               i1send_msg@msgtype 000E  
             i1send_msg@tlength 0012      FromMainLow_recvmsg@msgtype 0088                      _ADCON0bits 000FC2  
                    _ADCON1bits 000FC1                      _ADCON2bits 000FC0    __size_of_FromMainLow_recvmsg 0028  
  __size_of_FromMainLow_sendmsg 002C            timer0_lthread@length 00B9              _timer1_int_handler 19BE  
                      i1_memcpy 1824            _InterruptHandlerHigh 0008                     ??_ReadUSART 0001  
                      i2_memcpy 186C            i2c_int_handler@F5030 00C8            timer0_lthread@msgval 00BD  
      FromMainHigh_recvmsg@data 008A                      _I2C_START2 007C3B                     _in_high_int 1C36  
                  send_msg@data 00C3             _i2c_configure_slave 1B94                    send_msg@qmsg 01A5  
                  send_msg@slot 01A4                    send_msg@qptr 00BF                     _INTCON2bits 000FF1  
                   _INTCON3bits 000FF0           uart_lthread@msgbuffer 00BB             ?_timer1_int_handler 0001  
               ?_init_uart_recv 00B5                     ??_OpenUSART 00B8            i2c_int_handler@empty 0098  
               OpenUSART@config 00B5                      _EECON1bits 000FA6                  ??i2_in_low_int 0037  
         _uart_recv_int_handler 10E2                    ??_in_low_int 00B9                __size_of_ReadADC 000C  
                   _READ_WRITE2 007C3A                        __Hrparam 0000                __size_of_OpenADC 0084  
          ?_i2c_configure_slave 00B5                        __Lrparam 0000               ?_enter_sleep_mode 0001  
        ??_FromMainHigh_recvmsg 0044            ??_timer1_int_handler 001B                 _adc_int_handler 193E  
      __size_of_i2c_int_handler 067E              ??_enter_sleep_mode 0033                    ??_init_queue 00B7  
                  ?_WriteTimer0 0033                    ?_WriteTimer1 0001         ToMainLow_sendmsg@length 0017  
             main@t0thread_data 01BA           ?_InterruptHandlerHigh 0001                     _GO_NOT_DONE 007E11  
              __size_of_in_main 0058               i2send_msg@msgtype 0040     ToMainHigh_recvmsg@maxlength 01A7  
             i2send_msg@tlength 0080         init_timer1_lthread@tptr 00BA                     _init_queues 15AE  
            __end_of_in_low_int 16DE                        __ptext10 16DE                        __ptext11 1680  
                      __ptext20 0CAE                        __ptext12 1C36                        __ptext21 0A4E  
                      __ptext13 1A6C                        __ptext30 193E                        __ptext22 1736  
                      __ptext14 1CAE                        __ptext31 10E2                        __ptext23 19FC  
                      __ptext15 1A9C                        __ptext40 00D6                        __ptext32 1BB8  
                      __ptext24 1C4A                        __ptext16 1B48                        __ptext41 0F62  
                      __ptext33 1A34                        __ptext25 14B4                        __ptext17 1ACC  
                      __ptext50 18FA                        __ptext42 1538                        __ptext34 1C5E  
                      __ptext26 1C00                        __ptext18 178C                        __ptext51 1C94  
                      __ptext43 1BDC                        __ptext35 1C70                        __ptext27 1CC6  
                      __ptext19 142E                        __ptext52 0DB4                        __ptext44 1AF8  
                      __ptext36 1CA2                        __ptext53 0B8E                        __ptext45 1B20  
                      __ptext37 124C                        __ptext29 19BE                        __ptext54 1B6E  
                      __ptext46 1CC0                        __ptext38 1824                        __ptext55 186C  
                      __ptext47 1022                        __ptext56 0000                        __ptext48 12FE  
                      __ptext49 1C82                    _SSP1CON1bits 000FC6                    _SSP1CON2bits 000FC5  
                i1send_msg@data 000F                    _SSP2CON1bits 000F86                    _SSP2CON2bits 000F85  
                i1send_msg@qmsg 0015                  i1send_msg@slot 0014                  i1send_msg@qptr 000B  
            uart_lthread@length 00B9        timer0_int_handler@length 0090                        _init_i2c 17DA  
           _init_timer1_lthread 161C                   __size_of_main 02FA          adc_int_handler@message 001D  
                 ??i2_check_msg 0035               main@t1thread_data 01BD                     ??_check_msg 00B7  
            __end_of_init_queue 14B4            __size_of_SleepIfOkay 0076                        _recv_msg 0A4E  
         ??_i2c_configure_slave 00B6                        _send_msg 0CAE                  init_queue@qptr 00B5  
                    _CVRCONbits 000FB5           __size_of_uart_lthread 004E                  i2recv_msg@data 0042  
                i2recv_msg@qmsg 0085                   ??_Delay1KTCYx 00B6                  i2recv_msg@slot 0082  
                i2recv_msg@qptr 003D                    _SSP1STATbits 000FC7             _InterruptHandlerLow 0018  
          ?_init_timer1_lthread 00BA                    _SSP2STATbits 000F87             i2c_int_handler@data 008E  
                   _OSCTUNEbits 000F9B                      _INTCONbits 000FF2                     _PWM1CONbits 000FB7  
                OpenUSART@spbrg 00B6                        memcpy@d1 00B5                        memcpy@s1 00B7  
         __end_ofi2_in_high_int 1CA2    i2c_int_handler@overrun_error 009F                i2send_msg@length 003F  
                      intlevel1 0000                        intlevel2 0000            ?_InterruptHandlerLow 0001  
       ??_start_i2c_slave_reply 0036                     _SSP1ADDbits 000FC8                     _SSP2ADDbits 000F88  
        ?_uart_recv_int_handler 0001                    _uart_lthread 178C               SetChanADC@channel 00B5  
                    _RCSTA1bits 000FAB           _block_on_To_msgqueues 0E8E                   ?_handle_start 0033  
              ??_timer0_lthread 00BD     __size_of_ToMainHigh_recvmsg 0030         __end_of_adc_int_handler 1980  
   __size_of_ToMainHigh_sendmsg 0024                      _OSCCONbits 000FD3                ??_timer1_lthread 00BD  
      ToMainHigh_sendmsg@length 0085             __end_ofi2_check_msg 1B94           ??_init_timer1_lthread 00BC  
        ??_InterruptHandlerHigh 00A7               _ToMainLow_recvmsg 1A9C               _ToMainLow_sendmsg 1BB8  
            main@last_reg_recvd 01BC                      _NOT_T1SYNC 007E6A            __end_ofi2_in_low_int 193E  
            ?_ToMainLow_recvmsg 01A7             __end_of_Delay1KTCYx 1C5E               ??_i2c_int_handler 008C  
            ?_ToMainLow_sendmsg 0017                     _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5  
                    _WDTCONbits 000FD1                  i2send_msg@data 0041           ??_InterruptHandlerLow 0022  
           ??_ToMainLow_recvmsg 00C8                  i2send_msg@qmsg 0083                  i2send_msg@slot 0082  
                i2send_msg@qptr 003D             ??_ToMainLow_sendmsg 001B                      _SSPADDbits 000FC8  
                    _STATUSbits 000FD8             _FromMainLow_recvmsg 1AF8                  ??_handle_start 0034  
           _FromMainLow_sendmsg 1ACC                    _USART_Status 0048  
