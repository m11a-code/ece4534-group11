

Microchip Technology PIC18 LITE Macro Assembler V1.10 build 47796 
                                                                                               Mon Sep 24 01:29:28 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 47796
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 47796"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	18F45J10
     8  0000                     porta	equ	0F80h
     9  0000                     portb	equ	0F81h
    10  0000                     portc	equ	0F82h
    11  0000                     portd	equ	0F83h
    12  0000                     porte	equ	0F84h
    13  0000                     lata	equ	0F89h
    14  0000                     latb	equ	0F8Ah
    15  0000                     latc	equ	0F8Bh
    16  0000                     latd	equ	0F8Ch
    17  0000                     late	equ	0F8Dh
    18  0000                     trisa	equ	0F92h
    19  0000                     trisb	equ	0F93h
    20  0000                     trisc	equ	0F94h
    21  0000                     trisd	equ	0F95h
    22  0000                     trise	equ	0F96h
    23  0000                     pie1	equ	0F9Dh
    24  0000                     pir1	equ	0F9Eh
    25  0000                     ipr1	equ	0F9Fh
    26  0000                     pie2	equ	0FA0h
    27  0000                     pir2	equ	0FA1h
    28  0000                     ipr2	equ	0FA2h
    29  0000                     t3con	equ	0FB1h
    30  0000                     tmr3l	equ	0FB2h
    31  0000                     tmr3h	equ	0FB3h
    32  0000                     ccp1con	equ	0FBDh
    33  0000                     ccpr1l	equ	0FBEh
    34  0000                     ccpr1h	equ	0FBFh
    35  0000                     adcon1	equ	0FC1h
    36  0000                     adcon0	equ	0FC2h
    37  0000                     adresl	equ	0FC3h
    38  0000                     adresh	equ	0FC4h
    39  0000                     sspcon2	equ	0FC5h
    40  0000                     sspcon1	equ	0FC6h
    41  0000                     sspstat	equ	0FC7h
    42  0000                     sspadd	equ	0FC8h
    43  0000                     sspbuf	equ	0FC9h
    44  0000                     t2con	equ	0FCAh
    45  0000                     pr2	equ	0FCBh
    46  0000                     tmr2	equ	0FCCh
    47  0000                     t1con	equ	0FCDh
    48  0000                     tmr1l	equ	0FCEh
    49  0000                     tmr1h	equ	0FCFh
    50  0000                     rcon	equ	0FD0h
    51  0000                     wdtcon	equ	0FD1h
    52  0000                     lvdcon	equ	0FD2h
    53  0000                     osccon	equ	0FD3h
    54  0000                     t0con	equ	0FD5h
    55  0000                     tmr0l	equ	0FD6h
    56  0000                     tmr0h	equ	0FD7h
    57  0000                     status	equ	0FD8h
    58  0000                     fsr2	equ	0FD9h
    59  0000                     fsr2l	equ	0FD9h
    60  0000                     fsr2h	equ	0FDAh
    61  0000                     plusw2	equ	0FDBh
    62  0000                     preinc2	equ	0FDCh
    63  0000                     postdec2	equ	0FDDh
    64  0000                     postinc2	equ	0FDEh
    65  0000                     indf2	equ	0FDFh
    66  0000                     bsr	equ	0FE0h
    67  0000                     fsr1	equ	0FE1h
    68  0000                     fsr1l	equ	0FE1h
    69  0000                     fsr1h	equ	0FE2h
    70  0000                     plusw1	equ	0FE3h
    71  0000                     preinc1	equ	0FE4h
    72  0000                     postdec1	equ	0FE5h
    73  0000                     postinc1	equ	0FE6h
    74  0000                     indf1	equ	0FE7h
    75  0000                     wreg	equ	0FE8h
    76  0000                     fsr0	equ	0FE9h
    77  0000                     fsr0l	equ	0FE9h
    78  0000                     fsr0h	equ	0FEAh
    79  0000                     plusw0	equ	0FEBh
    80  0000                     preinc0	equ	0FECh
    81  0000                     postdec0	equ	0FEDh
    82  0000                     postinc0	equ	0FEEh
    83  0000                     indf0	equ	0FEFh
    84  0000                     intcon3	equ	0FF0h
    85  0000                     intcon2	equ	0FF1h
    86  0000                     intcon	equ	0FF2h
    87  0000                     prod	equ	0FF3h
    88  0000                     prodl	equ	0FF3h
    89  0000                     prodh	equ	0FF4h
    90  0000                     tablat	equ	0FF5h
    91  0000                     tblptr	equ	0FF6h
    92  0000                     tblptrl	equ	0FF6h
    93  0000                     tblptrh	equ	0FF7h
    94  0000                     tblptru	equ	0FF8h
    95  0000                     pcl	equ	0FF9h
    96  0000                     pclat	equ	0FFAh
    97  0000                     pclath	equ	0FFAh
    98  0000                     pclatu	equ	0FFBh
    99  0000                     stkptr	equ	0FFCh
   100  0000                     tosl	equ	0FFDh
   101  0000                     tosh	equ	0FFEh
   102  0000                     tosu	equ	0FFFh
   103                           skipnz macro
   104                           	btfsc	status,2
   105  0000                     	endm
   106                           	global	__ramtop
   107                           	global	__accesstop
   108                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   109  0000                     PORTA equ 0F80h ;# 
   110                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   111  0000                     PORTB equ 0F81h ;# 
   112                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   113  0000                     PORTC equ 0F82h ;# 
   114                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   115  0000                     PORTD equ 0F83h ;# 
   116                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   117  0000                     PORTE equ 0F84h ;# 
   118                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   119  0000                     SSP2CON2 equ 0F85h ;# 
   120                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   121  0000                     SSP2CON1 equ 0F86h ;# 
   122                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   123  0000                     SSP2STAT equ 0F87h ;# 
   124                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   125  0000                     SSP2ADD equ 0F88h ;# 
   126                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   127  0000                     LATA equ 0F89h ;# 
   128                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   129  0000                     LATB equ 0F8Ah ;# 
   130                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   131  0000                     LATC equ 0F8Bh ;# 
   132                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   133  0000                     LATD equ 0F8Ch ;# 
   134                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   135  0000                     LATE equ 0F8Dh ;# 
   136                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   137  0000                     SSP2BUF equ 0F8Eh ;# 
   138                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   139  0000                     TRISA equ 0F92h ;# 
   140                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   141  0000                     DDRA equ 0F92h ;# 
   142                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   143  0000                     TRISB equ 0F93h ;# 
   144                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   145  0000                     DDRB equ 0F93h ;# 
   146                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   147  0000                     TRISC equ 0F94h ;# 
   148                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   149  0000                     DDRC equ 0F94h ;# 
   150                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   151  0000                     TRISD equ 0F95h ;# 
   152                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   153  0000                     DDRD equ 0F95h ;# 
   154                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   155  0000                     TRISE equ 0F96h ;# 
   156                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   157  0000                     DDRE equ 0F96h ;# 
   158                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   159  0000                     OSCTUNE equ 0F9Bh ;# 
   160                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   161  0000                     PIE1 equ 0F9Dh ;# 
   162                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   163  0000                     PIR1 equ 0F9Eh ;# 
   164                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   165  0000                     IPR1 equ 0F9Fh ;# 
   166                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   167  0000                     PIE2 equ 0FA0h ;# 
   168                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   169  0000                     PIR2 equ 0FA1h ;# 
   170                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   171  0000                     IPR2 equ 0FA2h ;# 
   172                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   173  0000                     PIE3 equ 0FA3h ;# 
   174                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   175  0000                     PIR3 equ 0FA4h ;# 
   176                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   177  0000                     IPR3 equ 0FA5h ;# 
   178                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   179  0000                     EECON1 equ 0FA6h ;# 
   180                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   181  0000                     EECON2 equ 0FA7h ;# 
   182                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   183  0000                     RCSTA equ 0FABh ;# 
   184                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   185  0000                     RCSTA1 equ 0FABh ;# 
   186                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   187  0000                     TXSTA equ 0FACh ;# 
   188                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   189  0000                     TXSTA1 equ 0FACh ;# 
   190                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   191  0000                     TXREG equ 0FADh ;# 
   192                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   193  0000                     TXREG1 equ 0FADh ;# 
   194                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   195  0000                     RCREG equ 0FAEh ;# 
   196                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   197  0000                     RCREG1 equ 0FAEh ;# 
   198                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   199  0000                     SPBRG equ 0FAFh ;# 
   200                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   201  0000                     SPBRG1 equ 0FAFh ;# 
   202                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   203  0000                     SPBRGH equ 0FB0h ;# 
   204                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   205  0000                     CMCON equ 0FB4h ;# 
   206                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   207  0000                     CVRCON equ 0FB5h ;# 
   208                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   209  0000                     ECCP1AS equ 0FB6h ;# 
   210                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   211  0000                     ECCP1DEL equ 0FB7h ;# 
   212                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   213  0000                     PWM1CON equ 0FB7h ;# 
   214                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   215  0000                     BAUDCON equ 0FB8h ;# 
   216                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   217  0000                     BAUDCTL equ 0FB8h ;# 
   218                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   219  0000                     CCP2CON equ 0FBAh ;# 
   220                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   221  0000                     CCPR2 equ 0FBBh ;# 
   222                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   223  0000                     CCPR2L equ 0FBBh ;# 
   224                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   225  0000                     CCPR2H equ 0FBCh ;# 
   226                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   227  0000                     ECCP1CON equ 0FBDh ;# 
   228                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   229  0000                     CCP1CON equ 0FBDh ;# 
   230                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   231  0000                     CCPR1 equ 0FBEh ;# 
   232                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   233  0000                     CCPR1L equ 0FBEh ;# 
   234                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   235  0000                     CCPR1H equ 0FBFh ;# 
   236                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   237  0000                     ADCON2 equ 0FC0h ;# 
   238                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   239  0000                     ADCON1 equ 0FC1h ;# 
   240                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   241  0000                     ADCON0 equ 0FC2h ;# 
   242                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   243  0000                     ADRES equ 0FC3h ;# 
   244                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   245  0000                     ADRESL equ 0FC3h ;# 
   246                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   247  0000                     ADRESH equ 0FC4h ;# 
   248                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   249  0000                     SSPCON2 equ 0FC5h ;# 
   250                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   251  0000                     SSP1CON2 equ 0FC5h ;# 
   252                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   253  0000                     SSPCON1 equ 0FC6h ;# 
   254                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   255  0000                     SSP1CON1 equ 0FC6h ;# 
   256                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   257  0000                     SSPSTAT equ 0FC7h ;# 
   258                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   259  0000                     SSP1STAT equ 0FC7h ;# 
   260                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   261  0000                     SSPADD equ 0FC8h ;# 
   262                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   263  0000                     SSP1ADD equ 0FC8h ;# 
   264                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   265  0000                     SSPBUF equ 0FC9h ;# 
   266                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   267  0000                     SSP1BUF equ 0FC9h ;# 
   268                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   269  0000                     T2CON equ 0FCAh ;# 
   270                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   271  0000                     PR2 equ 0FCBh ;# 
   272                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   273  0000                     MEMCON equ 0FCBh ;# 
   274                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   275  0000                     TMR2 equ 0FCCh ;# 
   276                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   277  0000                     T1CON equ 0FCDh ;# 
   278                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   279  0000                     TMR1 equ 0FCEh ;# 
   280                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   281  0000                     TMR1L equ 0FCEh ;# 
   282                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   283  0000                     TMR1H equ 0FCFh ;# 
   284                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   285  0000                     RCON equ 0FD0h ;# 
   286                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   287  0000                     WDTCON equ 0FD1h ;# 
   288                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   289  0000                     OSCCON equ 0FD3h ;# 
   290                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   291  0000                     T0CON equ 0FD5h ;# 
   292                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   293  0000                     TMR0 equ 0FD6h ;# 
   294                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   295  0000                     TMR0L equ 0FD6h ;# 
   296                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   297  0000                     TMR0H equ 0FD7h ;# 
   298                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   299  0000                     STATUS equ 0FD8h ;# 
   300                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   301  0000                     FSR2 equ 0FD9h ;# 
   302                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   303  0000                     FSR2L equ 0FD9h ;# 
   304                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   305  0000                     FSR2H equ 0FDAh ;# 
   306                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   307  0000                     PLUSW2 equ 0FDBh ;# 
   308                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   309  0000                     PREINC2 equ 0FDCh ;# 
   310                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   311  0000                     POSTDEC2 equ 0FDDh ;# 
   312                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   313  0000                     POSTINC2 equ 0FDEh ;# 
   314                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   315  0000                     INDF2 equ 0FDFh ;# 
   316                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   317  0000                     BSR equ 0FE0h ;# 
   318                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   319  0000                     FSR1 equ 0FE1h ;# 
   320                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   321  0000                     FSR1L equ 0FE1h ;# 
   322                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   323  0000                     FSR1H equ 0FE2h ;# 
   324                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   325  0000                     PLUSW1 equ 0FE3h ;# 
   326                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   327  0000                     PREINC1 equ 0FE4h ;# 
   328                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   329  0000                     POSTDEC1 equ 0FE5h ;# 
   330                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   331  0000                     POSTINC1 equ 0FE6h ;# 
   332                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   333  0000                     INDF1 equ 0FE7h ;# 
   334                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   335  0000                     WREG equ 0FE8h ;# 
   336                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   337  0000                     FSR0 equ 0FE9h ;# 
   338                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   339  0000                     FSR0L equ 0FE9h ;# 
   340                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   341  0000                     FSR0H equ 0FEAh ;# 
   342                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   343  0000                     PLUSW0 equ 0FEBh ;# 
   344                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   345  0000                     PREINC0 equ 0FECh ;# 
   346                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   347  0000                     POSTDEC0 equ 0FEDh ;# 
   348                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   349  0000                     POSTINC0 equ 0FEEh ;# 
   350                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   351  0000                     INDF0 equ 0FEFh ;# 
   352                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   353  0000                     INTCON3 equ 0FF0h ;# 
   354                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   355  0000                     INTCON2 equ 0FF1h ;# 
   356                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   357  0000                     INTCON equ 0FF2h ;# 
   358                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   359  0000                     PROD equ 0FF3h ;# 
   360                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   361  0000                     PRODL equ 0FF3h ;# 
   362                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   363  0000                     PRODH equ 0FF4h ;# 
   364                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   365  0000                     TABLAT equ 0FF5h ;# 
   366                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   367  0000                     TBLPTR equ 0FF6h ;# 
   368                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   369  0000                     TBLPTRL equ 0FF6h ;# 
   370                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   371  0000                     TBLPTRH equ 0FF7h ;# 
   372                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   373  0000                     TBLPTRU equ 0FF8h ;# 
   374                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   375  0000                     PCLAT equ 0FF9h ;# 
   376                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   377  0000                     PC equ 0FF9h ;# 
   378                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   379  0000                     PCL equ 0FF9h ;# 
   380                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   381  0000                     PCLATH equ 0FFAh ;# 
   382                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   383  0000                     PCLATU equ 0FFBh ;# 
   384                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   385  0000                     STKPTR equ 0FFCh ;# 
   386                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   387  0000                     TOS equ 0FFDh ;# 
   388                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   389  0000                     TOSL equ 0FFDh ;# 
   390                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   391  0000                     TOSH equ 0FFEh ;# 
   392                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   393  0000                     TOSU equ 0FFFh ;# 
   394                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   395  0000                     PORTA equ 0F80h ;# 
   396                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   397  0000                     PORTB equ 0F81h ;# 
   398                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   399  0000                     PORTC equ 0F82h ;# 
   400                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   401  0000                     PORTD equ 0F83h ;# 
   402                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   403  0000                     PORTE equ 0F84h ;# 
   404                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   405  0000                     SSP2CON2 equ 0F85h ;# 
   406                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   407  0000                     SSP2CON1 equ 0F86h ;# 
   408                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   409  0000                     SSP2STAT equ 0F87h ;# 
   410                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   411  0000                     SSP2ADD equ 0F88h ;# 
   412                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   413  0000                     LATA equ 0F89h ;# 
   414                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   415  0000                     LATB equ 0F8Ah ;# 
   416                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   417  0000                     LATC equ 0F8Bh ;# 
   418                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   419  0000                     LATD equ 0F8Ch ;# 
   420                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   421  0000                     LATE equ 0F8Dh ;# 
   422                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   423  0000                     SSP2BUF equ 0F8Eh ;# 
   424                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   425  0000                     TRISA equ 0F92h ;# 
   426                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   427  0000                     DDRA equ 0F92h ;# 
   428                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   429  0000                     TRISB equ 0F93h ;# 
   430                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   431  0000                     DDRB equ 0F93h ;# 
   432                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   433  0000                     TRISC equ 0F94h ;# 
   434                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   435  0000                     DDRC equ 0F94h ;# 
   436                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   437  0000                     TRISD equ 0F95h ;# 
   438                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   439  0000                     DDRD equ 0F95h ;# 
   440                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   441  0000                     TRISE equ 0F96h ;# 
   442                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   443  0000                     DDRE equ 0F96h ;# 
   444                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   445  0000                     OSCTUNE equ 0F9Bh ;# 
   446                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   447  0000                     PIE1 equ 0F9Dh ;# 
   448                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   449  0000                     PIR1 equ 0F9Eh ;# 
   450                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   451  0000                     IPR1 equ 0F9Fh ;# 
   452                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   453  0000                     PIE2 equ 0FA0h ;# 
   454                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   455  0000                     PIR2 equ 0FA1h ;# 
   456                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   457  0000                     IPR2 equ 0FA2h ;# 
   458                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   459  0000                     PIE3 equ 0FA3h ;# 
   460                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   461  0000                     PIR3 equ 0FA4h ;# 
   462                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   463  0000                     IPR3 equ 0FA5h ;# 
   464                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   465  0000                     EECON1 equ 0FA6h ;# 
   466                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   467  0000                     EECON2 equ 0FA7h ;# 
   468                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   469  0000                     RCSTA equ 0FABh ;# 
   470                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   471  0000                     RCSTA1 equ 0FABh ;# 
   472                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   473  0000                     TXSTA equ 0FACh ;# 
   474                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   475  0000                     TXSTA1 equ 0FACh ;# 
   476                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   477  0000                     TXREG equ 0FADh ;# 
   478                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   479  0000                     TXREG1 equ 0FADh ;# 
   480                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   481  0000                     RCREG equ 0FAEh ;# 
   482                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   483  0000                     RCREG1 equ 0FAEh ;# 
   484                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   485  0000                     SPBRG equ 0FAFh ;# 
   486                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   487  0000                     SPBRG1 equ 0FAFh ;# 
   488                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   489  0000                     SPBRGH equ 0FB0h ;# 
   490                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   491  0000                     CMCON equ 0FB4h ;# 
   492                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   493  0000                     CVRCON equ 0FB5h ;# 
   494                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   495  0000                     ECCP1AS equ 0FB6h ;# 
   496                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   497  0000                     ECCP1DEL equ 0FB7h ;# 
   498                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   499  0000                     PWM1CON equ 0FB7h ;# 
   500                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   501  0000                     BAUDCON equ 0FB8h ;# 
   502                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   503  0000                     BAUDCTL equ 0FB8h ;# 
   504                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   505  0000                     CCP2CON equ 0FBAh ;# 
   506                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   507  0000                     CCPR2 equ 0FBBh ;# 
   508                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   509  0000                     CCPR2L equ 0FBBh ;# 
   510                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   511  0000                     CCPR2H equ 0FBCh ;# 
   512                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   513  0000                     ECCP1CON equ 0FBDh ;# 
   514                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   515  0000                     CCP1CON equ 0FBDh ;# 
   516                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   517  0000                     CCPR1 equ 0FBEh ;# 
   518                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   519  0000                     CCPR1L equ 0FBEh ;# 
   520                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   521  0000                     CCPR1H equ 0FBFh ;# 
   522                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   523  0000                     ADCON2 equ 0FC0h ;# 
   524                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   525  0000                     ADCON1 equ 0FC1h ;# 
   526                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   527  0000                     ADCON0 equ 0FC2h ;# 
   528                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   529  0000                     ADRES equ 0FC3h ;# 
   530                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   531  0000                     ADRESL equ 0FC3h ;# 
   532                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   533  0000                     ADRESH equ 0FC4h ;# 
   534                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   535  0000                     SSPCON2 equ 0FC5h ;# 
   536                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   537  0000                     SSP1CON2 equ 0FC5h ;# 
   538                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   539  0000                     SSPCON1 equ 0FC6h ;# 
   540                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   541  0000                     SSP1CON1 equ 0FC6h ;# 
   542                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   543  0000                     SSPSTAT equ 0FC7h ;# 
   544                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   545  0000                     SSP1STAT equ 0FC7h ;# 
   546                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   547  0000                     SSPADD equ 0FC8h ;# 
   548                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   549  0000                     SSP1ADD equ 0FC8h ;# 
   550                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   551  0000                     SSPBUF equ 0FC9h ;# 
   552                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   553  0000                     SSP1BUF equ 0FC9h ;# 
   554                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   555  0000                     T2CON equ 0FCAh ;# 
   556                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   557  0000                     PR2 equ 0FCBh ;# 
   558                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   559  0000                     MEMCON equ 0FCBh ;# 
   560                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   561  0000                     TMR2 equ 0FCCh ;# 
   562                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   563  0000                     T1CON equ 0FCDh ;# 
   564                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   565  0000                     TMR1 equ 0FCEh ;# 
   566                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   567  0000                     TMR1L equ 0FCEh ;# 
   568                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   569  0000                     TMR1H equ 0FCFh ;# 
   570                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   571  0000                     RCON equ 0FD0h ;# 
   572                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   573  0000                     WDTCON equ 0FD1h ;# 
   574                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   575  0000                     OSCCON equ 0FD3h ;# 
   576                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   577  0000                     T0CON equ 0FD5h ;# 
   578                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   579  0000                     TMR0 equ 0FD6h ;# 
   580                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   581  0000                     TMR0L equ 0FD6h ;# 
   582                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   583  0000                     TMR0H equ 0FD7h ;# 
   584                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   585  0000                     STATUS equ 0FD8h ;# 
   586                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   587  0000                     FSR2 equ 0FD9h ;# 
   588                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   589  0000                     FSR2L equ 0FD9h ;# 
   590                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   591  0000                     FSR2H equ 0FDAh ;# 
   592                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   593  0000                     PLUSW2 equ 0FDBh ;# 
   594                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   595  0000                     PREINC2 equ 0FDCh ;# 
   596                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   597  0000                     POSTDEC2 equ 0FDDh ;# 
   598                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   599  0000                     POSTINC2 equ 0FDEh ;# 
   600                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   601  0000                     INDF2 equ 0FDFh ;# 
   602                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   603  0000                     BSR equ 0FE0h ;# 
   604                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   605  0000                     FSR1 equ 0FE1h ;# 
   606                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   607  0000                     FSR1L equ 0FE1h ;# 
   608                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   609  0000                     FSR1H equ 0FE2h ;# 
   610                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   611  0000                     PLUSW1 equ 0FE3h ;# 
   612                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   613  0000                     PREINC1 equ 0FE4h ;# 
   614                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   615  0000                     POSTDEC1 equ 0FE5h ;# 
   616                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   617  0000                     POSTINC1 equ 0FE6h ;# 
   618                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   619  0000                     INDF1 equ 0FE7h ;# 
   620                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   621  0000                     WREG equ 0FE8h ;# 
   622                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   623  0000                     FSR0 equ 0FE9h ;# 
   624                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   625  0000                     FSR0L equ 0FE9h ;# 
   626                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   627  0000                     FSR0H equ 0FEAh ;# 
   628                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   629  0000                     PLUSW0 equ 0FEBh ;# 
   630                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   631  0000                     PREINC0 equ 0FECh ;# 
   632                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   633  0000                     POSTDEC0 equ 0FEDh ;# 
   634                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   635  0000                     POSTINC0 equ 0FEEh ;# 
   636                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   637  0000                     INDF0 equ 0FEFh ;# 
   638                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   639  0000                     INTCON3 equ 0FF0h ;# 
   640                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   641  0000                     INTCON2 equ 0FF1h ;# 
   642                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   643  0000                     INTCON equ 0FF2h ;# 
   644                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   645  0000                     PROD equ 0FF3h ;# 
   646                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   647  0000                     PRODL equ 0FF3h ;# 
   648                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   649  0000                     PRODH equ 0FF4h ;# 
   650                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   651  0000                     TABLAT equ 0FF5h ;# 
   652                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   653  0000                     TBLPTR equ 0FF6h ;# 
   654                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   655  0000                     TBLPTRL equ 0FF6h ;# 
   656                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   657  0000                     TBLPTRH equ 0FF7h ;# 
   658                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   659  0000                     TBLPTRU equ 0FF8h ;# 
   660                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   661  0000                     PCLAT equ 0FF9h ;# 
   662                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   663  0000                     PC equ 0FF9h ;# 
   664                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   665  0000                     PCL equ 0FF9h ;# 
   666                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   667  0000                     PCLATH equ 0FFAh ;# 
   668                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   669  0000                     PCLATU equ 0FFBh ;# 
   670                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   671  0000                     STKPTR equ 0FFCh ;# 
   672                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   673  0000                     TOS equ 0FFDh ;# 
   674                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   675  0000                     TOSL equ 0FFDh ;# 
   676                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   677  0000                     TOSH equ 0FFEh ;# 
   678                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   679  0000                     TOSU equ 0FFFh ;# 
   680                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   681  0000                     PORTA equ 0F80h ;# 
   682                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   683  0000                     PORTB equ 0F81h ;# 
   684                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   685  0000                     PORTC equ 0F82h ;# 
   686                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   687  0000                     PORTD equ 0F83h ;# 
   688                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   689  0000                     PORTE equ 0F84h ;# 
   690                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   691  0000                     SSP2CON2 equ 0F85h ;# 
   692                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   693  0000                     SSP2CON1 equ 0F86h ;# 
   694                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   695  0000                     SSP2STAT equ 0F87h ;# 
   696                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   697  0000                     SSP2ADD equ 0F88h ;# 
   698                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   699  0000                     LATA equ 0F89h ;# 
   700                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   701  0000                     LATB equ 0F8Ah ;# 
   702                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   703  0000                     LATC equ 0F8Bh ;# 
   704                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   705  0000                     LATD equ 0F8Ch ;# 
   706                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   707  0000                     LATE equ 0F8Dh ;# 
   708                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   709  0000                     SSP2BUF equ 0F8Eh ;# 
   710                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   711  0000                     TRISA equ 0F92h ;# 
   712                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   713  0000                     DDRA equ 0F92h ;# 
   714                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   715  0000                     TRISB equ 0F93h ;# 
   716                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   717  0000                     DDRB equ 0F93h ;# 
   718                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   719  0000                     TRISC equ 0F94h ;# 
   720                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   721  0000                     DDRC equ 0F94h ;# 
   722                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   723  0000                     TRISD equ 0F95h ;# 
   724                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   725  0000                     DDRD equ 0F95h ;# 
   726                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   727  0000                     TRISE equ 0F96h ;# 
   728                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   729  0000                     DDRE equ 0F96h ;# 
   730                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   731  0000                     OSCTUNE equ 0F9Bh ;# 
   732                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   733  0000                     PIE1 equ 0F9Dh ;# 
   734                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   735  0000                     PIR1 equ 0F9Eh ;# 
   736                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   737  0000                     IPR1 equ 0F9Fh ;# 
   738                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   739  0000                     PIE2 equ 0FA0h ;# 
   740                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   741  0000                     PIR2 equ 0FA1h ;# 
   742                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   743  0000                     IPR2 equ 0FA2h ;# 
   744                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   745  0000                     PIE3 equ 0FA3h ;# 
   746                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   747  0000                     PIR3 equ 0FA4h ;# 
   748                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   749  0000                     IPR3 equ 0FA5h ;# 
   750                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   751  0000                     EECON1 equ 0FA6h ;# 
   752                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   753  0000                     EECON2 equ 0FA7h ;# 
   754                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   755  0000                     RCSTA equ 0FABh ;# 
   756                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   757  0000                     RCSTA1 equ 0FABh ;# 
   758                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   759  0000                     TXSTA equ 0FACh ;# 
   760                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   761  0000                     TXSTA1 equ 0FACh ;# 
   762                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   763  0000                     TXREG equ 0FADh ;# 
   764                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   765  0000                     TXREG1 equ 0FADh ;# 
   766                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   767  0000                     RCREG equ 0FAEh ;# 
   768                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   769  0000                     RCREG1 equ 0FAEh ;# 
   770                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   771  0000                     SPBRG equ 0FAFh ;# 
   772                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   773  0000                     SPBRG1 equ 0FAFh ;# 
   774                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   775  0000                     SPBRGH equ 0FB0h ;# 
   776                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   777  0000                     CMCON equ 0FB4h ;# 
   778                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   779  0000                     CVRCON equ 0FB5h ;# 
   780                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   781  0000                     ECCP1AS equ 0FB6h ;# 
   782                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   783  0000                     ECCP1DEL equ 0FB7h ;# 
   784                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   785  0000                     PWM1CON equ 0FB7h ;# 
   786                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   787  0000                     BAUDCON equ 0FB8h ;# 
   788                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   789  0000                     BAUDCTL equ 0FB8h ;# 
   790                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   791  0000                     CCP2CON equ 0FBAh ;# 
   792                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   793  0000                     CCPR2 equ 0FBBh ;# 
   794                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   795  0000                     CCPR2L equ 0FBBh ;# 
   796                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   797  0000                     CCPR2H equ 0FBCh ;# 
   798                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   799  0000                     ECCP1CON equ 0FBDh ;# 
   800                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   801  0000                     CCP1CON equ 0FBDh ;# 
   802                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   803  0000                     CCPR1 equ 0FBEh ;# 
   804                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   805  0000                     CCPR1L equ 0FBEh ;# 
   806                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   807  0000                     CCPR1H equ 0FBFh ;# 
   808                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   809  0000                     ADCON2 equ 0FC0h ;# 
   810                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   811  0000                     ADCON1 equ 0FC1h ;# 
   812                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   813  0000                     ADCON0 equ 0FC2h ;# 
   814                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   815  0000                     ADRES equ 0FC3h ;# 
   816                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   817  0000                     ADRESL equ 0FC3h ;# 
   818                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   819  0000                     ADRESH equ 0FC4h ;# 
   820                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   821  0000                     SSPCON2 equ 0FC5h ;# 
   822                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   823  0000                     SSP1CON2 equ 0FC5h ;# 
   824                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   825  0000                     SSPCON1 equ 0FC6h ;# 
   826                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   827  0000                     SSP1CON1 equ 0FC6h ;# 
   828                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   829  0000                     SSPSTAT equ 0FC7h ;# 
   830                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   831  0000                     SSP1STAT equ 0FC7h ;# 
   832                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   833  0000                     SSPADD equ 0FC8h ;# 
   834                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   835  0000                     SSP1ADD equ 0FC8h ;# 
   836                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   837  0000                     SSPBUF equ 0FC9h ;# 
   838                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   839  0000                     SSP1BUF equ 0FC9h ;# 
   840                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   841  0000                     T2CON equ 0FCAh ;# 
   842                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   843  0000                     PR2 equ 0FCBh ;# 
   844                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   845  0000                     MEMCON equ 0FCBh ;# 
   846                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   847  0000                     TMR2 equ 0FCCh ;# 
   848                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   849  0000                     T1CON equ 0FCDh ;# 
   850                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   851  0000                     TMR1 equ 0FCEh ;# 
   852                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   853  0000                     TMR1L equ 0FCEh ;# 
   854                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   855  0000                     TMR1H equ 0FCFh ;# 
   856                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   857  0000                     RCON equ 0FD0h ;# 
   858                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   859  0000                     WDTCON equ 0FD1h ;# 
   860                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   861  0000                     OSCCON equ 0FD3h ;# 
   862                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   863  0000                     T0CON equ 0FD5h ;# 
   864                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   865  0000                     TMR0 equ 0FD6h ;# 
   866                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   867  0000                     TMR0L equ 0FD6h ;# 
   868                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   869  0000                     TMR0H equ 0FD7h ;# 
   870                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   871  0000                     STATUS equ 0FD8h ;# 
   872                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   873  0000                     FSR2 equ 0FD9h ;# 
   874                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   875  0000                     FSR2L equ 0FD9h ;# 
   876                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   877  0000                     FSR2H equ 0FDAh ;# 
   878                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   879  0000                     PLUSW2 equ 0FDBh ;# 
   880                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   881  0000                     PREINC2 equ 0FDCh ;# 
   882                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   883  0000                     POSTDEC2 equ 0FDDh ;# 
   884                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   885  0000                     POSTINC2 equ 0FDEh ;# 
   886                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   887  0000                     INDF2 equ 0FDFh ;# 
   888                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   889  0000                     BSR equ 0FE0h ;# 
   890                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   891  0000                     FSR1 equ 0FE1h ;# 
   892                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   893  0000                     FSR1L equ 0FE1h ;# 
   894                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   895  0000                     FSR1H equ 0FE2h ;# 
   896                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   897  0000                     PLUSW1 equ 0FE3h ;# 
   898                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   899  0000                     PREINC1 equ 0FE4h ;# 
   900                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   901  0000                     POSTDEC1 equ 0FE5h ;# 
   902                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   903  0000                     POSTINC1 equ 0FE6h ;# 
   904                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   905  0000                     INDF1 equ 0FE7h ;# 
   906                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   907  0000                     WREG equ 0FE8h ;# 
   908                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   909  0000                     FSR0 equ 0FE9h ;# 
   910                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   911  0000                     FSR0L equ 0FE9h ;# 
   912                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   913  0000                     FSR0H equ 0FEAh ;# 
   914                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   915  0000                     PLUSW0 equ 0FEBh ;# 
   916                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   917  0000                     PREINC0 equ 0FECh ;# 
   918                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   919  0000                     POSTDEC0 equ 0FEDh ;# 
   920                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   921  0000                     POSTINC0 equ 0FEEh ;# 
   922                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   923  0000                     INDF0 equ 0FEFh ;# 
   924                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   925  0000                     INTCON3 equ 0FF0h ;# 
   926                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   927  0000                     INTCON2 equ 0FF1h ;# 
   928                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   929  0000                     INTCON equ 0FF2h ;# 
   930                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   931  0000                     PROD equ 0FF3h ;# 
   932                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   933  0000                     PRODL equ 0FF3h ;# 
   934                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   935  0000                     PRODH equ 0FF4h ;# 
   936                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   937  0000                     TABLAT equ 0FF5h ;# 
   938                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   939  0000                     TBLPTR equ 0FF6h ;# 
   940                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   941  0000                     TBLPTRL equ 0FF6h ;# 
   942                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   943  0000                     TBLPTRH equ 0FF7h ;# 
   944                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   945  0000                     TBLPTRU equ 0FF8h ;# 
   946                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   947  0000                     PCLAT equ 0FF9h ;# 
   948                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   949  0000                     PC equ 0FF9h ;# 
   950                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   951  0000                     PCL equ 0FF9h ;# 
   952                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   953  0000                     PCLATH equ 0FFAh ;# 
   954                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   955  0000                     PCLATU equ 0FFBh ;# 
   956                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   957  0000                     STKPTR equ 0FFCh ;# 
   958                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   959  0000                     TOS equ 0FFDh ;# 
   960                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   961  0000                     TOSL equ 0FFDh ;# 
   962                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   963  0000                     TOSH equ 0FFEh ;# 
   964                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   965  0000                     TOSU equ 0FFFh ;# 
   966                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   967  0000                     PORTA equ 0F80h ;# 
   968                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   969  0000                     PORTB equ 0F81h ;# 
   970                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   971  0000                     PORTC equ 0F82h ;# 
   972                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   973  0000                     PORTD equ 0F83h ;# 
   974                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   975  0000                     PORTE equ 0F84h ;# 
   976                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   977  0000                     SSP2CON2 equ 0F85h ;# 
   978                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   979  0000                     SSP2CON1 equ 0F86h ;# 
   980                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   981  0000                     SSP2STAT equ 0F87h ;# 
   982                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   983  0000                     SSP2ADD equ 0F88h ;# 
   984                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   985  0000                     LATA equ 0F89h ;# 
   986                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   987  0000                     LATB equ 0F8Ah ;# 
   988                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   989  0000                     LATC equ 0F8Bh ;# 
   990                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   991  0000                     LATD equ 0F8Ch ;# 
   992                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   993  0000                     LATE equ 0F8Dh ;# 
   994                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   995  0000                     SSP2BUF equ 0F8Eh ;# 
   996                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   997  0000                     TRISA equ 0F92h ;# 
   998                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   999  0000                     DDRA equ 0F92h ;# 
  1000                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1001  0000                     TRISB equ 0F93h ;# 
  1002                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1003  0000                     DDRB equ 0F93h ;# 
  1004                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1005  0000                     TRISC equ 0F94h ;# 
  1006                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1007  0000                     DDRC equ 0F94h ;# 
  1008                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1009  0000                     TRISD equ 0F95h ;# 
  1010                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1011  0000                     DDRD equ 0F95h ;# 
  1012                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1013  0000                     TRISE equ 0F96h ;# 
  1014                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1015  0000                     DDRE equ 0F96h ;# 
  1016                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1017  0000                     OSCTUNE equ 0F9Bh ;# 
  1018                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1019  0000                     PIE1 equ 0F9Dh ;# 
  1020                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1021  0000                     PIR1 equ 0F9Eh ;# 
  1022                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1023  0000                     IPR1 equ 0F9Fh ;# 
  1024                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1025  0000                     PIE2 equ 0FA0h ;# 
  1026                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1027  0000                     PIR2 equ 0FA1h ;# 
  1028                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1029  0000                     IPR2 equ 0FA2h ;# 
  1030                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1031  0000                     PIE3 equ 0FA3h ;# 
  1032                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1033  0000                     PIR3 equ 0FA4h ;# 
  1034                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1035  0000                     IPR3 equ 0FA5h ;# 
  1036                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1037  0000                     EECON1 equ 0FA6h ;# 
  1038                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1039  0000                     EECON2 equ 0FA7h ;# 
  1040                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1041  0000                     RCSTA equ 0FABh ;# 
  1042                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1043  0000                     RCSTA1 equ 0FABh ;# 
  1044                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1045  0000                     TXSTA equ 0FACh ;# 
  1046                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1047  0000                     TXSTA1 equ 0FACh ;# 
  1048                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1049  0000                     TXREG equ 0FADh ;# 
  1050                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1051  0000                     TXREG1 equ 0FADh ;# 
  1052                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1053  0000                     RCREG equ 0FAEh ;# 
  1054                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1055  0000                     RCREG1 equ 0FAEh ;# 
  1056                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1057  0000                     SPBRG equ 0FAFh ;# 
  1058                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1059  0000                     SPBRG1 equ 0FAFh ;# 
  1060                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1061  0000                     SPBRGH equ 0FB0h ;# 
  1062                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1063  0000                     CMCON equ 0FB4h ;# 
  1064                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1065  0000                     CVRCON equ 0FB5h ;# 
  1066                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1067  0000                     ECCP1AS equ 0FB6h ;# 
  1068                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1069  0000                     ECCP1DEL equ 0FB7h ;# 
  1070                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1071  0000                     PWM1CON equ 0FB7h ;# 
  1072                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1073  0000                     BAUDCON equ 0FB8h ;# 
  1074                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1075  0000                     BAUDCTL equ 0FB8h ;# 
  1076                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1077  0000                     CCP2CON equ 0FBAh ;# 
  1078                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1079  0000                     CCPR2 equ 0FBBh ;# 
  1080                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1081  0000                     CCPR2L equ 0FBBh ;# 
  1082                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1083  0000                     CCPR2H equ 0FBCh ;# 
  1084                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1085  0000                     ECCP1CON equ 0FBDh ;# 
  1086                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1087  0000                     CCP1CON equ 0FBDh ;# 
  1088                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1089  0000                     CCPR1 equ 0FBEh ;# 
  1090                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1091  0000                     CCPR1L equ 0FBEh ;# 
  1092                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1093  0000                     CCPR1H equ 0FBFh ;# 
  1094                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1095  0000                     ADCON2 equ 0FC0h ;# 
  1096                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1097  0000                     ADCON1 equ 0FC1h ;# 
  1098                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1099  0000                     ADCON0 equ 0FC2h ;# 
  1100                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1101  0000                     ADRES equ 0FC3h ;# 
  1102                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1103  0000                     ADRESL equ 0FC3h ;# 
  1104                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1105  0000                     ADRESH equ 0FC4h ;# 
  1106                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1107  0000                     SSPCON2 equ 0FC5h ;# 
  1108                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1109  0000                     SSP1CON2 equ 0FC5h ;# 
  1110                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1111  0000                     SSPCON1 equ 0FC6h ;# 
  1112                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1113  0000                     SSP1CON1 equ 0FC6h ;# 
  1114                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1115  0000                     SSPSTAT equ 0FC7h ;# 
  1116                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1117  0000                     SSP1STAT equ 0FC7h ;# 
  1118                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1119  0000                     SSPADD equ 0FC8h ;# 
  1120                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1121  0000                     SSP1ADD equ 0FC8h ;# 
  1122                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1123  0000                     SSPBUF equ 0FC9h ;# 
  1124                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1125  0000                     SSP1BUF equ 0FC9h ;# 
  1126                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1127  0000                     T2CON equ 0FCAh ;# 
  1128                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1129  0000                     PR2 equ 0FCBh ;# 
  1130                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1131  0000                     MEMCON equ 0FCBh ;# 
  1132                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1133  0000                     TMR2 equ 0FCCh ;# 
  1134                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1135  0000                     T1CON equ 0FCDh ;# 
  1136                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1137  0000                     TMR1 equ 0FCEh ;# 
  1138                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1139  0000                     TMR1L equ 0FCEh ;# 
  1140                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1141  0000                     TMR1H equ 0FCFh ;# 
  1142                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1143  0000                     RCON equ 0FD0h ;# 
  1144                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1145  0000                     WDTCON equ 0FD1h ;# 
  1146                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1147  0000                     OSCCON equ 0FD3h ;# 
  1148                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1149  0000                     T0CON equ 0FD5h ;# 
  1150                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1151  0000                     TMR0 equ 0FD6h ;# 
  1152                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1153  0000                     TMR0L equ 0FD6h ;# 
  1154                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1155  0000                     TMR0H equ 0FD7h ;# 
  1156                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1157  0000                     STATUS equ 0FD8h ;# 
  1158                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1159  0000                     FSR2 equ 0FD9h ;# 
  1160                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1161  0000                     FSR2L equ 0FD9h ;# 
  1162                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1163  0000                     FSR2H equ 0FDAh ;# 
  1164                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1165  0000                     PLUSW2 equ 0FDBh ;# 
  1166                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1167  0000                     PREINC2 equ 0FDCh ;# 
  1168                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1169  0000                     POSTDEC2 equ 0FDDh ;# 
  1170                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1171  0000                     POSTINC2 equ 0FDEh ;# 
  1172                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1173  0000                     INDF2 equ 0FDFh ;# 
  1174                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1175  0000                     BSR equ 0FE0h ;# 
  1176                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1177  0000                     FSR1 equ 0FE1h ;# 
  1178                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1179  0000                     FSR1L equ 0FE1h ;# 
  1180                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1181  0000                     FSR1H equ 0FE2h ;# 
  1182                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1183  0000                     PLUSW1 equ 0FE3h ;# 
  1184                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1185  0000                     PREINC1 equ 0FE4h ;# 
  1186                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1187  0000                     POSTDEC1 equ 0FE5h ;# 
  1188                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1189  0000                     POSTINC1 equ 0FE6h ;# 
  1190                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1191  0000                     INDF1 equ 0FE7h ;# 
  1192                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1193  0000                     WREG equ 0FE8h ;# 
  1194                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1195  0000                     FSR0 equ 0FE9h ;# 
  1196                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1197  0000                     FSR0L equ 0FE9h ;# 
  1198                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1199  0000                     FSR0H equ 0FEAh ;# 
  1200                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1201  0000                     PLUSW0 equ 0FEBh ;# 
  1202                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1203  0000                     PREINC0 equ 0FECh ;# 
  1204                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1205  0000                     POSTDEC0 equ 0FEDh ;# 
  1206                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1207  0000                     POSTINC0 equ 0FEEh ;# 
  1208                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1209  0000                     INDF0 equ 0FEFh ;# 
  1210                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1211  0000                     INTCON3 equ 0FF0h ;# 
  1212                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1213  0000                     INTCON2 equ 0FF1h ;# 
  1214                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1215  0000                     INTCON equ 0FF2h ;# 
  1216                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1217  0000                     PROD equ 0FF3h ;# 
  1218                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1219  0000                     PRODL equ 0FF3h ;# 
  1220                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1221  0000                     PRODH equ 0FF4h ;# 
  1222                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1223  0000                     TABLAT equ 0FF5h ;# 
  1224                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1225  0000                     TBLPTR equ 0FF6h ;# 
  1226                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1227  0000                     TBLPTRL equ 0FF6h ;# 
  1228                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1229  0000                     TBLPTRH equ 0FF7h ;# 
  1230                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1231  0000                     TBLPTRU equ 0FF8h ;# 
  1232                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1233  0000                     PCLAT equ 0FF9h ;# 
  1234                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1235  0000                     PC equ 0FF9h ;# 
  1236                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1237  0000                     PCL equ 0FF9h ;# 
  1238                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1239  0000                     PCLATH equ 0FFAh ;# 
  1240                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1241  0000                     PCLATU equ 0FFBh ;# 
  1242                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1243  0000                     STKPTR equ 0FFCh ;# 
  1244                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1245  0000                     TOS equ 0FFDh ;# 
  1246                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1247  0000                     TOSL equ 0FFDh ;# 
  1248                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1249  0000                     TOSH equ 0FFEh ;# 
  1250                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1251  0000                     TOSU equ 0FFFh ;# 
  1252                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1253  0000                     PORTA equ 0F80h ;# 
  1254                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1255  0000                     PORTB equ 0F81h ;# 
  1256                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1257  0000                     PORTC equ 0F82h ;# 
  1258                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1259  0000                     PORTD equ 0F83h ;# 
  1260                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1261  0000                     PORTE equ 0F84h ;# 
  1262                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1263  0000                     SSP2CON2 equ 0F85h ;# 
  1264                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1265  0000                     SSP2CON1 equ 0F86h ;# 
  1266                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1267  0000                     SSP2STAT equ 0F87h ;# 
  1268                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1269  0000                     SSP2ADD equ 0F88h ;# 
  1270                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1271  0000                     LATA equ 0F89h ;# 
  1272                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1273  0000                     LATB equ 0F8Ah ;# 
  1274                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1275  0000                     LATC equ 0F8Bh ;# 
  1276                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1277  0000                     LATD equ 0F8Ch ;# 
  1278                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1279  0000                     LATE equ 0F8Dh ;# 
  1280                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1281  0000                     SSP2BUF equ 0F8Eh ;# 
  1282                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1283  0000                     TRISA equ 0F92h ;# 
  1284                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1285  0000                     DDRA equ 0F92h ;# 
  1286                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1287  0000                     TRISB equ 0F93h ;# 
  1288                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1289  0000                     DDRB equ 0F93h ;# 
  1290                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1291  0000                     TRISC equ 0F94h ;# 
  1292                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1293  0000                     DDRC equ 0F94h ;# 
  1294                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1295  0000                     TRISD equ 0F95h ;# 
  1296                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1297  0000                     DDRD equ 0F95h ;# 
  1298                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1299  0000                     TRISE equ 0F96h ;# 
  1300                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1301  0000                     DDRE equ 0F96h ;# 
  1302                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1303  0000                     OSCTUNE equ 0F9Bh ;# 
  1304                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1305  0000                     PIE1 equ 0F9Dh ;# 
  1306                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1307  0000                     PIR1 equ 0F9Eh ;# 
  1308                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1309  0000                     IPR1 equ 0F9Fh ;# 
  1310                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1311  0000                     PIE2 equ 0FA0h ;# 
  1312                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1313  0000                     PIR2 equ 0FA1h ;# 
  1314                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1315  0000                     IPR2 equ 0FA2h ;# 
  1316                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1317  0000                     PIE3 equ 0FA3h ;# 
  1318                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1319  0000                     PIR3 equ 0FA4h ;# 
  1320                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1321  0000                     IPR3 equ 0FA5h ;# 
  1322                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1323  0000                     EECON1 equ 0FA6h ;# 
  1324                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1325  0000                     EECON2 equ 0FA7h ;# 
  1326                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1327  0000                     RCSTA equ 0FABh ;# 
  1328                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1329  0000                     RCSTA1 equ 0FABh ;# 
  1330                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1331  0000                     TXSTA equ 0FACh ;# 
  1332                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1333  0000                     TXSTA1 equ 0FACh ;# 
  1334                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1335  0000                     TXREG equ 0FADh ;# 
  1336                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1337  0000                     TXREG1 equ 0FADh ;# 
  1338                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1339  0000                     RCREG equ 0FAEh ;# 
  1340                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1341  0000                     RCREG1 equ 0FAEh ;# 
  1342                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1343  0000                     SPBRG equ 0FAFh ;# 
  1344                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1345  0000                     SPBRG1 equ 0FAFh ;# 
  1346                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1347  0000                     SPBRGH equ 0FB0h ;# 
  1348                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1349  0000                     CMCON equ 0FB4h ;# 
  1350                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1351  0000                     CVRCON equ 0FB5h ;# 
  1352                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1353  0000                     ECCP1AS equ 0FB6h ;# 
  1354                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1355  0000                     ECCP1DEL equ 0FB7h ;# 
  1356                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1357  0000                     PWM1CON equ 0FB7h ;# 
  1358                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1359  0000                     BAUDCON equ 0FB8h ;# 
  1360                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1361  0000                     BAUDCTL equ 0FB8h ;# 
  1362                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1363  0000                     CCP2CON equ 0FBAh ;# 
  1364                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1365  0000                     CCPR2 equ 0FBBh ;# 
  1366                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1367  0000                     CCPR2L equ 0FBBh ;# 
  1368                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1369  0000                     CCPR2H equ 0FBCh ;# 
  1370                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1371  0000                     ECCP1CON equ 0FBDh ;# 
  1372                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1373  0000                     CCP1CON equ 0FBDh ;# 
  1374                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1375  0000                     CCPR1 equ 0FBEh ;# 
  1376                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1377  0000                     CCPR1L equ 0FBEh ;# 
  1378                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1379  0000                     CCPR1H equ 0FBFh ;# 
  1380                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1381  0000                     ADCON2 equ 0FC0h ;# 
  1382                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1383  0000                     ADCON1 equ 0FC1h ;# 
  1384                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1385  0000                     ADCON0 equ 0FC2h ;# 
  1386                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1387  0000                     ADRES equ 0FC3h ;# 
  1388                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1389  0000                     ADRESL equ 0FC3h ;# 
  1390                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1391  0000                     ADRESH equ 0FC4h ;# 
  1392                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1393  0000                     SSPCON2 equ 0FC5h ;# 
  1394                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1395  0000                     SSP1CON2 equ 0FC5h ;# 
  1396                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1397  0000                     SSPCON1 equ 0FC6h ;# 
  1398                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1399  0000                     SSP1CON1 equ 0FC6h ;# 
  1400                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1401  0000                     SSPSTAT equ 0FC7h ;# 
  1402                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1403  0000                     SSP1STAT equ 0FC7h ;# 
  1404                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1405  0000                     SSPADD equ 0FC8h ;# 
  1406                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1407  0000                     SSP1ADD equ 0FC8h ;# 
  1408                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1409  0000                     SSPBUF equ 0FC9h ;# 
  1410                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1411  0000                     SSP1BUF equ 0FC9h ;# 
  1412                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1413  0000                     T2CON equ 0FCAh ;# 
  1414                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1415  0000                     PR2 equ 0FCBh ;# 
  1416                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1417  0000                     MEMCON equ 0FCBh ;# 
  1418                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1419  0000                     TMR2 equ 0FCCh ;# 
  1420                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1421  0000                     T1CON equ 0FCDh ;# 
  1422                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1423  0000                     TMR1 equ 0FCEh ;# 
  1424                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1425  0000                     TMR1L equ 0FCEh ;# 
  1426                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1427  0000                     TMR1H equ 0FCFh ;# 
  1428                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1429  0000                     RCON equ 0FD0h ;# 
  1430                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1431  0000                     WDTCON equ 0FD1h ;# 
  1432                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1433  0000                     OSCCON equ 0FD3h ;# 
  1434                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1435  0000                     T0CON equ 0FD5h ;# 
  1436                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1437  0000                     TMR0 equ 0FD6h ;# 
  1438                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1439  0000                     TMR0L equ 0FD6h ;# 
  1440                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1441  0000                     TMR0H equ 0FD7h ;# 
  1442                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1443  0000                     STATUS equ 0FD8h ;# 
  1444                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1445  0000                     FSR2 equ 0FD9h ;# 
  1446                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1447  0000                     FSR2L equ 0FD9h ;# 
  1448                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1449  0000                     FSR2H equ 0FDAh ;# 
  1450                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1451  0000                     PLUSW2 equ 0FDBh ;# 
  1452                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1453  0000                     PREINC2 equ 0FDCh ;# 
  1454                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1455  0000                     POSTDEC2 equ 0FDDh ;# 
  1456                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1457  0000                     POSTINC2 equ 0FDEh ;# 
  1458                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1459  0000                     INDF2 equ 0FDFh ;# 
  1460                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1461  0000                     BSR equ 0FE0h ;# 
  1462                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1463  0000                     FSR1 equ 0FE1h ;# 
  1464                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1465  0000                     FSR1L equ 0FE1h ;# 
  1466                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1467  0000                     FSR1H equ 0FE2h ;# 
  1468                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1469  0000                     PLUSW1 equ 0FE3h ;# 
  1470                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1471  0000                     PREINC1 equ 0FE4h ;# 
  1472                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1473  0000                     POSTDEC1 equ 0FE5h ;# 
  1474                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1475  0000                     POSTINC1 equ 0FE6h ;# 
  1476                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1477  0000                     INDF1 equ 0FE7h ;# 
  1478                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1479  0000                     WREG equ 0FE8h ;# 
  1480                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1481  0000                     FSR0 equ 0FE9h ;# 
  1482                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1483  0000                     FSR0L equ 0FE9h ;# 
  1484                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1485  0000                     FSR0H equ 0FEAh ;# 
  1486                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1487  0000                     PLUSW0 equ 0FEBh ;# 
  1488                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1489  0000                     PREINC0 equ 0FECh ;# 
  1490                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1491  0000                     POSTDEC0 equ 0FEDh ;# 
  1492                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1493  0000                     POSTINC0 equ 0FEEh ;# 
  1494                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1495  0000                     INDF0 equ 0FEFh ;# 
  1496                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1497  0000                     INTCON3 equ 0FF0h ;# 
  1498                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1499  0000                     INTCON2 equ 0FF1h ;# 
  1500                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1501  0000                     INTCON equ 0FF2h ;# 
  1502                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1503  0000                     PROD equ 0FF3h ;# 
  1504                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1505  0000                     PRODL equ 0FF3h ;# 
  1506                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1507  0000                     PRODH equ 0FF4h ;# 
  1508                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1509  0000                     TABLAT equ 0FF5h ;# 
  1510                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1511  0000                     TBLPTR equ 0FF6h ;# 
  1512                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1513  0000                     TBLPTRL equ 0FF6h ;# 
  1514                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1515  0000                     TBLPTRH equ 0FF7h ;# 
  1516                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1517  0000                     TBLPTRU equ 0FF8h ;# 
  1518                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1519  0000                     PCLAT equ 0FF9h ;# 
  1520                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1521  0000                     PC equ 0FF9h ;# 
  1522                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1523  0000                     PCL equ 0FF9h ;# 
  1524                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1525  0000                     PCLATH equ 0FFAh ;# 
  1526                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1527  0000                     PCLATU equ 0FFBh ;# 
  1528                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1529  0000                     STKPTR equ 0FFCh ;# 
  1530                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1531  0000                     TOS equ 0FFDh ;# 
  1532                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1533  0000                     TOSL equ 0FFDh ;# 
  1534                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1535  0000                     TOSH equ 0FFEh ;# 
  1536                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1537  0000                     TOSU equ 0FFFh ;# 
  1538                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1539  0000                     PORTA equ 0F80h ;# 
  1540                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1541  0000                     PORTB equ 0F81h ;# 
  1542                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1543  0000                     PORTC equ 0F82h ;# 
  1544                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1545  0000                     PORTD equ 0F83h ;# 
  1546                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1547  0000                     PORTE equ 0F84h ;# 
  1548                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1549  0000                     SSP2CON2 equ 0F85h ;# 
  1550                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1551  0000                     SSP2CON1 equ 0F86h ;# 
  1552                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1553  0000                     SSP2STAT equ 0F87h ;# 
  1554                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1555  0000                     SSP2ADD equ 0F88h ;# 
  1556                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1557  0000                     LATA equ 0F89h ;# 
  1558                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1559  0000                     LATB equ 0F8Ah ;# 
  1560                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1561  0000                     LATC equ 0F8Bh ;# 
  1562                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1563  0000                     LATD equ 0F8Ch ;# 
  1564                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1565  0000                     LATE equ 0F8Dh ;# 
  1566                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1567  0000                     SSP2BUF equ 0F8Eh ;# 
  1568                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1569  0000                     TRISA equ 0F92h ;# 
  1570                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1571  0000                     DDRA equ 0F92h ;# 
  1572                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1573  0000                     TRISB equ 0F93h ;# 
  1574                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1575  0000                     DDRB equ 0F93h ;# 
  1576                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1577  0000                     TRISC equ 0F94h ;# 
  1578                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1579  0000                     DDRC equ 0F94h ;# 
  1580                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1581  0000                     TRISD equ 0F95h ;# 
  1582                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1583  0000                     DDRD equ 0F95h ;# 
  1584                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1585  0000                     TRISE equ 0F96h ;# 
  1586                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1587  0000                     DDRE equ 0F96h ;# 
  1588                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1589  0000                     OSCTUNE equ 0F9Bh ;# 
  1590                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1591  0000                     PIE1 equ 0F9Dh ;# 
  1592                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1593  0000                     PIR1 equ 0F9Eh ;# 
  1594                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1595  0000                     IPR1 equ 0F9Fh ;# 
  1596                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1597  0000                     PIE2 equ 0FA0h ;# 
  1598                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1599  0000                     PIR2 equ 0FA1h ;# 
  1600                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1601  0000                     IPR2 equ 0FA2h ;# 
  1602                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1603  0000                     PIE3 equ 0FA3h ;# 
  1604                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1605  0000                     PIR3 equ 0FA4h ;# 
  1606                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1607  0000                     IPR3 equ 0FA5h ;# 
  1608                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1609  0000                     EECON1 equ 0FA6h ;# 
  1610                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1611  0000                     EECON2 equ 0FA7h ;# 
  1612                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1613  0000                     RCSTA equ 0FABh ;# 
  1614                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1615  0000                     RCSTA1 equ 0FABh ;# 
  1616                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1617  0000                     TXSTA equ 0FACh ;# 
  1618                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1619  0000                     TXSTA1 equ 0FACh ;# 
  1620                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1621  0000                     TXREG equ 0FADh ;# 
  1622                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1623  0000                     TXREG1 equ 0FADh ;# 
  1624                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1625  0000                     RCREG equ 0FAEh ;# 
  1626                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1627  0000                     RCREG1 equ 0FAEh ;# 
  1628                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1629  0000                     SPBRG equ 0FAFh ;# 
  1630                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1631  0000                     SPBRG1 equ 0FAFh ;# 
  1632                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1633  0000                     SPBRGH equ 0FB0h ;# 
  1634                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1635  0000                     CMCON equ 0FB4h ;# 
  1636                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1637  0000                     CVRCON equ 0FB5h ;# 
  1638                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1639  0000                     ECCP1AS equ 0FB6h ;# 
  1640                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1641  0000                     ECCP1DEL equ 0FB7h ;# 
  1642                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1643  0000                     PWM1CON equ 0FB7h ;# 
  1644                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1645  0000                     BAUDCON equ 0FB8h ;# 
  1646                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1647  0000                     BAUDCTL equ 0FB8h ;# 
  1648                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1649  0000                     CCP2CON equ 0FBAh ;# 
  1650                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1651  0000                     CCPR2 equ 0FBBh ;# 
  1652                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1653  0000                     CCPR2L equ 0FBBh ;# 
  1654                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1655  0000                     CCPR2H equ 0FBCh ;# 
  1656                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1657  0000                     ECCP1CON equ 0FBDh ;# 
  1658                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1659  0000                     CCP1CON equ 0FBDh ;# 
  1660                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1661  0000                     CCPR1 equ 0FBEh ;# 
  1662                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1663  0000                     CCPR1L equ 0FBEh ;# 
  1664                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1665  0000                     CCPR1H equ 0FBFh ;# 
  1666                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1667  0000                     ADCON2 equ 0FC0h ;# 
  1668                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1669  0000                     ADCON1 equ 0FC1h ;# 
  1670                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1671  0000                     ADCON0 equ 0FC2h ;# 
  1672                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1673  0000                     ADRES equ 0FC3h ;# 
  1674                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1675  0000                     ADRESL equ 0FC3h ;# 
  1676                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1677  0000                     ADRESH equ 0FC4h ;# 
  1678                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1679  0000                     SSPCON2 equ 0FC5h ;# 
  1680                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1681  0000                     SSP1CON2 equ 0FC5h ;# 
  1682                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1683  0000                     SSPCON1 equ 0FC6h ;# 
  1684                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1685  0000                     SSP1CON1 equ 0FC6h ;# 
  1686                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1687  0000                     SSPSTAT equ 0FC7h ;# 
  1688                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1689  0000                     SSP1STAT equ 0FC7h ;# 
  1690                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1691  0000                     SSPADD equ 0FC8h ;# 
  1692                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1693  0000                     SSP1ADD equ 0FC8h ;# 
  1694                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1695  0000                     SSPBUF equ 0FC9h ;# 
  1696                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1697  0000                     SSP1BUF equ 0FC9h ;# 
  1698                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1699  0000                     T2CON equ 0FCAh ;# 
  1700                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1701  0000                     PR2 equ 0FCBh ;# 
  1702                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1703  0000                     MEMCON equ 0FCBh ;# 
  1704                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1705  0000                     TMR2 equ 0FCCh ;# 
  1706                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1707  0000                     T1CON equ 0FCDh ;# 
  1708                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1709  0000                     TMR1 equ 0FCEh ;# 
  1710                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1711  0000                     TMR1L equ 0FCEh ;# 
  1712                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1713  0000                     TMR1H equ 0FCFh ;# 
  1714                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1715  0000                     RCON equ 0FD0h ;# 
  1716                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1717  0000                     WDTCON equ 0FD1h ;# 
  1718                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1719  0000                     OSCCON equ 0FD3h ;# 
  1720                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1721  0000                     T0CON equ 0FD5h ;# 
  1722                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1723  0000                     TMR0 equ 0FD6h ;# 
  1724                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1725  0000                     TMR0L equ 0FD6h ;# 
  1726                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1727  0000                     TMR0H equ 0FD7h ;# 
  1728                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1729  0000                     STATUS equ 0FD8h ;# 
  1730                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1731  0000                     FSR2 equ 0FD9h ;# 
  1732                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1733  0000                     FSR2L equ 0FD9h ;# 
  1734                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1735  0000                     FSR2H equ 0FDAh ;# 
  1736                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1737  0000                     PLUSW2 equ 0FDBh ;# 
  1738                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1739  0000                     PREINC2 equ 0FDCh ;# 
  1740                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1741  0000                     POSTDEC2 equ 0FDDh ;# 
  1742                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1743  0000                     POSTINC2 equ 0FDEh ;# 
  1744                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1745  0000                     INDF2 equ 0FDFh ;# 
  1746                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1747  0000                     BSR equ 0FE0h ;# 
  1748                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1749  0000                     FSR1 equ 0FE1h ;# 
  1750                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1751  0000                     FSR1L equ 0FE1h ;# 
  1752                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1753  0000                     FSR1H equ 0FE2h ;# 
  1754                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1755  0000                     PLUSW1 equ 0FE3h ;# 
  1756                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1757  0000                     PREINC1 equ 0FE4h ;# 
  1758                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1759  0000                     POSTDEC1 equ 0FE5h ;# 
  1760                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1761  0000                     POSTINC1 equ 0FE6h ;# 
  1762                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1763  0000                     INDF1 equ 0FE7h ;# 
  1764                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1765  0000                     WREG equ 0FE8h ;# 
  1766                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1767  0000                     FSR0 equ 0FE9h ;# 
  1768                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1769  0000                     FSR0L equ 0FE9h ;# 
  1770                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1771  0000                     FSR0H equ 0FEAh ;# 
  1772                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1773  0000                     PLUSW0 equ 0FEBh ;# 
  1774                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1775  0000                     PREINC0 equ 0FECh ;# 
  1776                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1777  0000                     POSTDEC0 equ 0FEDh ;# 
  1778                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1779  0000                     POSTINC0 equ 0FEEh ;# 
  1780                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1781  0000                     INDF0 equ 0FEFh ;# 
  1782                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1783  0000                     INTCON3 equ 0FF0h ;# 
  1784                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1785  0000                     INTCON2 equ 0FF1h ;# 
  1786                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1787  0000                     INTCON equ 0FF2h ;# 
  1788                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1789  0000                     PROD equ 0FF3h ;# 
  1790                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1791  0000                     PRODL equ 0FF3h ;# 
  1792                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1793  0000                     PRODH equ 0FF4h ;# 
  1794                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1795  0000                     TABLAT equ 0FF5h ;# 
  1796                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1797  0000                     TBLPTR equ 0FF6h ;# 
  1798                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1799  0000                     TBLPTRL equ 0FF6h ;# 
  1800                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1801  0000                     TBLPTRH equ 0FF7h ;# 
  1802                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1803  0000                     TBLPTRU equ 0FF8h ;# 
  1804                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1805  0000                     PCLAT equ 0FF9h ;# 
  1806                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1807  0000                     PC equ 0FF9h ;# 
  1808                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1809  0000                     PCL equ 0FF9h ;# 
  1810                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1811  0000                     PCLATH equ 0FFAh ;# 
  1812                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1813  0000                     PCLATU equ 0FFBh ;# 
  1814                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1815  0000                     STKPTR equ 0FFCh ;# 
  1816                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1817  0000                     TOS equ 0FFDh ;# 
  1818                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1819  0000                     TOSL equ 0FFDh ;# 
  1820                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1821  0000                     TOSH equ 0FFEh ;# 
  1822                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1823  0000                     TOSU equ 0FFFh ;# 
  1824                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1825  0000                     PORTA equ 0F80h ;# 
  1826                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1827  0000                     PORTB equ 0F81h ;# 
  1828                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1829  0000                     PORTC equ 0F82h ;# 
  1830                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1831  0000                     PORTD equ 0F83h ;# 
  1832                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1833  0000                     PORTE equ 0F84h ;# 
  1834                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1835  0000                     SSP2CON2 equ 0F85h ;# 
  1836                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1837  0000                     SSP2CON1 equ 0F86h ;# 
  1838                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1839  0000                     SSP2STAT equ 0F87h ;# 
  1840                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1841  0000                     SSP2ADD equ 0F88h ;# 
  1842                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1843  0000                     LATA equ 0F89h ;# 
  1844                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1845  0000                     LATB equ 0F8Ah ;# 
  1846                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1847  0000                     LATC equ 0F8Bh ;# 
  1848                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1849  0000                     LATD equ 0F8Ch ;# 
  1850                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1851  0000                     LATE equ 0F8Dh ;# 
  1852                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1853  0000                     SSP2BUF equ 0F8Eh ;# 
  1854                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1855  0000                     TRISA equ 0F92h ;# 
  1856                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1857  0000                     DDRA equ 0F92h ;# 
  1858                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1859  0000                     TRISB equ 0F93h ;# 
  1860                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1861  0000                     DDRB equ 0F93h ;# 
  1862                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1863  0000                     TRISC equ 0F94h ;# 
  1864                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1865  0000                     DDRC equ 0F94h ;# 
  1866                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1867  0000                     TRISD equ 0F95h ;# 
  1868                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1869  0000                     DDRD equ 0F95h ;# 
  1870                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1871  0000                     TRISE equ 0F96h ;# 
  1872                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1873  0000                     DDRE equ 0F96h ;# 
  1874                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1875  0000                     OSCTUNE equ 0F9Bh ;# 
  1876                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1877  0000                     PIE1 equ 0F9Dh ;# 
  1878                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1879  0000                     PIR1 equ 0F9Eh ;# 
  1880                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1881  0000                     IPR1 equ 0F9Fh ;# 
  1882                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1883  0000                     PIE2 equ 0FA0h ;# 
  1884                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1885  0000                     PIR2 equ 0FA1h ;# 
  1886                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1887  0000                     IPR2 equ 0FA2h ;# 
  1888                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1889  0000                     PIE3 equ 0FA3h ;# 
  1890                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1891  0000                     PIR3 equ 0FA4h ;# 
  1892                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1893  0000                     IPR3 equ 0FA5h ;# 
  1894                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1895  0000                     EECON1 equ 0FA6h ;# 
  1896                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1897  0000                     EECON2 equ 0FA7h ;# 
  1898                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1899  0000                     RCSTA equ 0FABh ;# 
  1900                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1901  0000                     RCSTA1 equ 0FABh ;# 
  1902                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1903  0000                     TXSTA equ 0FACh ;# 
  1904                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1905  0000                     TXSTA1 equ 0FACh ;# 
  1906                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1907  0000                     TXREG equ 0FADh ;# 
  1908                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1909  0000                     TXREG1 equ 0FADh ;# 
  1910                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1911  0000                     RCREG equ 0FAEh ;# 
  1912                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1913  0000                     RCREG1 equ 0FAEh ;# 
  1914                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1915  0000                     SPBRG equ 0FAFh ;# 
  1916                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1917  0000                     SPBRG1 equ 0FAFh ;# 
  1918                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1919  0000                     SPBRGH equ 0FB0h ;# 
  1920                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1921  0000                     CMCON equ 0FB4h ;# 
  1922                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1923  0000                     CVRCON equ 0FB5h ;# 
  1924                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1925  0000                     ECCP1AS equ 0FB6h ;# 
  1926                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1927  0000                     ECCP1DEL equ 0FB7h ;# 
  1928                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1929  0000                     PWM1CON equ 0FB7h ;# 
  1930                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1931  0000                     BAUDCON equ 0FB8h ;# 
  1932                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1933  0000                     BAUDCTL equ 0FB8h ;# 
  1934                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1935  0000                     CCP2CON equ 0FBAh ;# 
  1936                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1937  0000                     CCPR2 equ 0FBBh ;# 
  1938                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1939  0000                     CCPR2L equ 0FBBh ;# 
  1940                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1941  0000                     CCPR2H equ 0FBCh ;# 
  1942                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1943  0000                     ECCP1CON equ 0FBDh ;# 
  1944                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1945  0000                     CCP1CON equ 0FBDh ;# 
  1946                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1947  0000                     CCPR1 equ 0FBEh ;# 
  1948                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1949  0000                     CCPR1L equ 0FBEh ;# 
  1950                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1951  0000                     CCPR1H equ 0FBFh ;# 
  1952                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1953  0000                     ADCON2 equ 0FC0h ;# 
  1954                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1955  0000                     ADCON1 equ 0FC1h ;# 
  1956                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1957  0000                     ADCON0 equ 0FC2h ;# 
  1958                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1959  0000                     ADRES equ 0FC3h ;# 
  1960                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1961  0000                     ADRESL equ 0FC3h ;# 
  1962                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1963  0000                     ADRESH equ 0FC4h ;# 
  1964                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1965  0000                     SSPCON2 equ 0FC5h ;# 
  1966                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1967  0000                     SSP1CON2 equ 0FC5h ;# 
  1968                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1969  0000                     SSPCON1 equ 0FC6h ;# 
  1970                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1971  0000                     SSP1CON1 equ 0FC6h ;# 
  1972                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1973  0000                     SSPSTAT equ 0FC7h ;# 
  1974                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1975  0000                     SSP1STAT equ 0FC7h ;# 
  1976                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1977  0000                     SSPADD equ 0FC8h ;# 
  1978                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1979  0000                     SSP1ADD equ 0FC8h ;# 
  1980                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1981  0000                     SSPBUF equ 0FC9h ;# 
  1982                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1983  0000                     SSP1BUF equ 0FC9h ;# 
  1984                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1985  0000                     T2CON equ 0FCAh ;# 
  1986                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1987  0000                     PR2 equ 0FCBh ;# 
  1988                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1989  0000                     MEMCON equ 0FCBh ;# 
  1990                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1991  0000                     TMR2 equ 0FCCh ;# 
  1992                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1993  0000                     T1CON equ 0FCDh ;# 
  1994                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1995  0000                     TMR1 equ 0FCEh ;# 
  1996                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1997  0000                     TMR1L equ 0FCEh ;# 
  1998                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1999  0000                     TMR1H equ 0FCFh ;# 
  2000                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2001  0000                     RCON equ 0FD0h ;# 
  2002                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2003  0000                     WDTCON equ 0FD1h ;# 
  2004                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2005  0000                     OSCCON equ 0FD3h ;# 
  2006                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2007  0000                     T0CON equ 0FD5h ;# 
  2008                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2009  0000                     TMR0 equ 0FD6h ;# 
  2010                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2011  0000                     TMR0L equ 0FD6h ;# 
  2012                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2013  0000                     TMR0H equ 0FD7h ;# 
  2014                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2015  0000                     STATUS equ 0FD8h ;# 
  2016                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2017  0000                     FSR2 equ 0FD9h ;# 
  2018                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2019  0000                     FSR2L equ 0FD9h ;# 
  2020                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2021  0000                     FSR2H equ 0FDAh ;# 
  2022                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2023  0000                     PLUSW2 equ 0FDBh ;# 
  2024                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2025  0000                     PREINC2 equ 0FDCh ;# 
  2026                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2027  0000                     POSTDEC2 equ 0FDDh ;# 
  2028                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2029  0000                     POSTINC2 equ 0FDEh ;# 
  2030                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2031  0000                     INDF2 equ 0FDFh ;# 
  2032                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2033  0000                     BSR equ 0FE0h ;# 
  2034                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2035  0000                     FSR1 equ 0FE1h ;# 
  2036                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2037  0000                     FSR1L equ 0FE1h ;# 
  2038                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2039  0000                     FSR1H equ 0FE2h ;# 
  2040                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2041  0000                     PLUSW1 equ 0FE3h ;# 
  2042                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2043  0000                     PREINC1 equ 0FE4h ;# 
  2044                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2045  0000                     POSTDEC1 equ 0FE5h ;# 
  2046                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2047  0000                     POSTINC1 equ 0FE6h ;# 
  2048                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2049  0000                     INDF1 equ 0FE7h ;# 
  2050                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2051  0000                     WREG equ 0FE8h ;# 
  2052                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2053  0000                     FSR0 equ 0FE9h ;# 
  2054                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2055  0000                     FSR0L equ 0FE9h ;# 
  2056                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2057  0000                     FSR0H equ 0FEAh ;# 
  2058                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2059  0000                     PLUSW0 equ 0FEBh ;# 
  2060                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2061  0000                     PREINC0 equ 0FECh ;# 
  2062                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2063  0000                     POSTDEC0 equ 0FEDh ;# 
  2064                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2065  0000                     POSTINC0 equ 0FEEh ;# 
  2066                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2067  0000                     INDF0 equ 0FEFh ;# 
  2068                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2069  0000                     INTCON3 equ 0FF0h ;# 
  2070                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2071  0000                     INTCON2 equ 0FF1h ;# 
  2072                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2073  0000                     INTCON equ 0FF2h ;# 
  2074                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2075  0000                     PROD equ 0FF3h ;# 
  2076                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2077  0000                     PRODL equ 0FF3h ;# 
  2078                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2079  0000                     PRODH equ 0FF4h ;# 
  2080                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2081  0000                     TABLAT equ 0FF5h ;# 
  2082                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2083  0000                     TBLPTR equ 0FF6h ;# 
  2084                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2085  0000                     TBLPTRL equ 0FF6h ;# 
  2086                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2087  0000                     TBLPTRH equ 0FF7h ;# 
  2088                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2089  0000                     TBLPTRU equ 0FF8h ;# 
  2090                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2091  0000                     PCLAT equ 0FF9h ;# 
  2092                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2093  0000                     PC equ 0FF9h ;# 
  2094                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2095  0000                     PCL equ 0FF9h ;# 
  2096                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2097  0000                     PCLATH equ 0FFAh ;# 
  2098                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2099  0000                     PCLATU equ 0FFBh ;# 
  2100                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2101  0000                     STKPTR equ 0FFCh ;# 
  2102                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2103  0000                     TOS equ 0FFDh ;# 
  2104                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2105  0000                     TOSL equ 0FFDh ;# 
  2106                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2107  0000                     TOSH equ 0FFEh ;# 
  2108                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2109  0000                     TOSU equ 0FFFh ;# 
  2110                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2111  0000                     PORTA equ 0F80h ;# 
  2112                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2113  0000                     PORTB equ 0F81h ;# 
  2114                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2115  0000                     PORTC equ 0F82h ;# 
  2116                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2117  0000                     PORTD equ 0F83h ;# 
  2118                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2119  0000                     PORTE equ 0F84h ;# 
  2120                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2121  0000                     SSP2CON2 equ 0F85h ;# 
  2122                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2123  0000                     SSP2CON1 equ 0F86h ;# 
  2124                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2125  0000                     SSP2STAT equ 0F87h ;# 
  2126                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2127  0000                     SSP2ADD equ 0F88h ;# 
  2128                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2129  0000                     LATA equ 0F89h ;# 
  2130                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2131  0000                     LATB equ 0F8Ah ;# 
  2132                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2133  0000                     LATC equ 0F8Bh ;# 
  2134                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2135  0000                     LATD equ 0F8Ch ;# 
  2136                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2137  0000                     LATE equ 0F8Dh ;# 
  2138                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2139  0000                     SSP2BUF equ 0F8Eh ;# 
  2140                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2141  0000                     TRISA equ 0F92h ;# 
  2142                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2143  0000                     DDRA equ 0F92h ;# 
  2144                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2145  0000                     TRISB equ 0F93h ;# 
  2146                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2147  0000                     DDRB equ 0F93h ;# 
  2148                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2149  0000                     TRISC equ 0F94h ;# 
  2150                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2151  0000                     DDRC equ 0F94h ;# 
  2152                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2153  0000                     TRISD equ 0F95h ;# 
  2154                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2155  0000                     DDRD equ 0F95h ;# 
  2156                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2157  0000                     TRISE equ 0F96h ;# 
  2158                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2159  0000                     DDRE equ 0F96h ;# 
  2160                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2161  0000                     OSCTUNE equ 0F9Bh ;# 
  2162                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2163  0000                     PIE1 equ 0F9Dh ;# 
  2164                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2165  0000                     PIR1 equ 0F9Eh ;# 
  2166                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2167  0000                     IPR1 equ 0F9Fh ;# 
  2168                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2169  0000                     PIE2 equ 0FA0h ;# 
  2170                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2171  0000                     PIR2 equ 0FA1h ;# 
  2172                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2173  0000                     IPR2 equ 0FA2h ;# 
  2174                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2175  0000                     PIE3 equ 0FA3h ;# 
  2176                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2177  0000                     PIR3 equ 0FA4h ;# 
  2178                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2179  0000                     IPR3 equ 0FA5h ;# 
  2180                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2181  0000                     EECON1 equ 0FA6h ;# 
  2182                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2183  0000                     EECON2 equ 0FA7h ;# 
  2184                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2185  0000                     RCSTA equ 0FABh ;# 
  2186                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2187  0000                     RCSTA1 equ 0FABh ;# 
  2188                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2189  0000                     TXSTA equ 0FACh ;# 
  2190                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2191  0000                     TXSTA1 equ 0FACh ;# 
  2192                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2193  0000                     TXREG equ 0FADh ;# 
  2194                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2195  0000                     TXREG1 equ 0FADh ;# 
  2196                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2197  0000                     RCREG equ 0FAEh ;# 
  2198                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2199  0000                     RCREG1 equ 0FAEh ;# 
  2200                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2201  0000                     SPBRG equ 0FAFh ;# 
  2202                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2203  0000                     SPBRG1 equ 0FAFh ;# 
  2204                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2205  0000                     SPBRGH equ 0FB0h ;# 
  2206                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2207  0000                     CMCON equ 0FB4h ;# 
  2208                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2209  0000                     CVRCON equ 0FB5h ;# 
  2210                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2211  0000                     ECCP1AS equ 0FB6h ;# 
  2212                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2213  0000                     ECCP1DEL equ 0FB7h ;# 
  2214                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2215  0000                     PWM1CON equ 0FB7h ;# 
  2216                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2217  0000                     BAUDCON equ 0FB8h ;# 
  2218                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2219  0000                     BAUDCTL equ 0FB8h ;# 
  2220                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2221  0000                     CCP2CON equ 0FBAh ;# 
  2222                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2223  0000                     CCPR2 equ 0FBBh ;# 
  2224                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2225  0000                     CCPR2L equ 0FBBh ;# 
  2226                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2227  0000                     CCPR2H equ 0FBCh ;# 
  2228                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2229  0000                     ECCP1CON equ 0FBDh ;# 
  2230                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2231  0000                     CCP1CON equ 0FBDh ;# 
  2232                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2233  0000                     CCPR1 equ 0FBEh ;# 
  2234                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2235  0000                     CCPR1L equ 0FBEh ;# 
  2236                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2237  0000                     CCPR1H equ 0FBFh ;# 
  2238                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2239  0000                     ADCON2 equ 0FC0h ;# 
  2240                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2241  0000                     ADCON1 equ 0FC1h ;# 
  2242                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2243  0000                     ADCON0 equ 0FC2h ;# 
  2244                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2245  0000                     ADRES equ 0FC3h ;# 
  2246                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2247  0000                     ADRESL equ 0FC3h ;# 
  2248                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2249  0000                     ADRESH equ 0FC4h ;# 
  2250                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2251  0000                     SSPCON2 equ 0FC5h ;# 
  2252                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2253  0000                     SSP1CON2 equ 0FC5h ;# 
  2254                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2255  0000                     SSPCON1 equ 0FC6h ;# 
  2256                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2257  0000                     SSP1CON1 equ 0FC6h ;# 
  2258                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2259  0000                     SSPSTAT equ 0FC7h ;# 
  2260                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2261  0000                     SSP1STAT equ 0FC7h ;# 
  2262                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2263  0000                     SSPADD equ 0FC8h ;# 
  2264                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2265  0000                     SSP1ADD equ 0FC8h ;# 
  2266                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2267  0000                     SSPBUF equ 0FC9h ;# 
  2268                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2269  0000                     SSP1BUF equ 0FC9h ;# 
  2270                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2271  0000                     T2CON equ 0FCAh ;# 
  2272                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2273  0000                     PR2 equ 0FCBh ;# 
  2274                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2275  0000                     MEMCON equ 0FCBh ;# 
  2276                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2277  0000                     TMR2 equ 0FCCh ;# 
  2278                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2279  0000                     T1CON equ 0FCDh ;# 
  2280                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2281  0000                     TMR1 equ 0FCEh ;# 
  2282                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2283  0000                     TMR1L equ 0FCEh ;# 
  2284                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2285  0000                     TMR1H equ 0FCFh ;# 
  2286                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2287  0000                     RCON equ 0FD0h ;# 
  2288                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2289  0000                     WDTCON equ 0FD1h ;# 
  2290                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2291  0000                     OSCCON equ 0FD3h ;# 
  2292                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2293  0000                     T0CON equ 0FD5h ;# 
  2294                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2295  0000                     TMR0 equ 0FD6h ;# 
  2296                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2297  0000                     TMR0L equ 0FD6h ;# 
  2298                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2299  0000                     TMR0H equ 0FD7h ;# 
  2300                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2301  0000                     STATUS equ 0FD8h ;# 
  2302                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2303  0000                     FSR2 equ 0FD9h ;# 
  2304                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2305  0000                     FSR2L equ 0FD9h ;# 
  2306                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2307  0000                     FSR2H equ 0FDAh ;# 
  2308                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2309  0000                     PLUSW2 equ 0FDBh ;# 
  2310                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2311  0000                     PREINC2 equ 0FDCh ;# 
  2312                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2313  0000                     POSTDEC2 equ 0FDDh ;# 
  2314                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2315  0000                     POSTINC2 equ 0FDEh ;# 
  2316                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2317  0000                     INDF2 equ 0FDFh ;# 
  2318                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2319  0000                     BSR equ 0FE0h ;# 
  2320                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2321  0000                     FSR1 equ 0FE1h ;# 
  2322                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2323  0000                     FSR1L equ 0FE1h ;# 
  2324                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2325  0000                     FSR1H equ 0FE2h ;# 
  2326                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2327  0000                     PLUSW1 equ 0FE3h ;# 
  2328                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2329  0000                     PREINC1 equ 0FE4h ;# 
  2330                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2331  0000                     POSTDEC1 equ 0FE5h ;# 
  2332                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2333  0000                     POSTINC1 equ 0FE6h ;# 
  2334                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2335  0000                     INDF1 equ 0FE7h ;# 
  2336                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2337  0000                     WREG equ 0FE8h ;# 
  2338                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2339  0000                     FSR0 equ 0FE9h ;# 
  2340                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2341  0000                     FSR0L equ 0FE9h ;# 
  2342                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2343  0000                     FSR0H equ 0FEAh ;# 
  2344                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2345  0000                     PLUSW0 equ 0FEBh ;# 
  2346                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2347  0000                     PREINC0 equ 0FECh ;# 
  2348                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2349  0000                     POSTDEC0 equ 0FEDh ;# 
  2350                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2351  0000                     POSTINC0 equ 0FEEh ;# 
  2352                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2353  0000                     INDF0 equ 0FEFh ;# 
  2354                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2355  0000                     INTCON3 equ 0FF0h ;# 
  2356                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2357  0000                     INTCON2 equ 0FF1h ;# 
  2358                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2359  0000                     INTCON equ 0FF2h ;# 
  2360                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2361  0000                     PROD equ 0FF3h ;# 
  2362                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2363  0000                     PRODL equ 0FF3h ;# 
  2364                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2365  0000                     PRODH equ 0FF4h ;# 
  2366                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2367  0000                     TABLAT equ 0FF5h ;# 
  2368                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2369  0000                     TBLPTR equ 0FF6h ;# 
  2370                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2371  0000                     TBLPTRL equ 0FF6h ;# 
  2372                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2373  0000                     TBLPTRH equ 0FF7h ;# 
  2374                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2375  0000                     TBLPTRU equ 0FF8h ;# 
  2376                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2377  0000                     PCLAT equ 0FF9h ;# 
  2378                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2379  0000                     PC equ 0FF9h ;# 
  2380                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2381  0000                     PCL equ 0FF9h ;# 
  2382                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2383  0000                     PCLATH equ 0FFAh ;# 
  2384                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2385  0000                     PCLATU equ 0FFBh ;# 
  2386                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2387  0000                     STKPTR equ 0FFCh ;# 
  2388                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2389  0000                     TOS equ 0FFDh ;# 
  2390                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2391  0000                     TOSL equ 0FFDh ;# 
  2392                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2393  0000                     TOSH equ 0FFEh ;# 
  2394                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2395  0000                     TOSU equ 0FFFh ;# 
  2396                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2397  0000                     PORTA equ 0F80h ;# 
  2398                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2399  0000                     PORTB equ 0F81h ;# 
  2400                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2401  0000                     PORTC equ 0F82h ;# 
  2402                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2403  0000                     PORTD equ 0F83h ;# 
  2404                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2405  0000                     PORTE equ 0F84h ;# 
  2406                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2407  0000                     SSP2CON2 equ 0F85h ;# 
  2408                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2409  0000                     SSP2CON1 equ 0F86h ;# 
  2410                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2411  0000                     SSP2STAT equ 0F87h ;# 
  2412                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2413  0000                     SSP2ADD equ 0F88h ;# 
  2414                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2415  0000                     LATA equ 0F89h ;# 
  2416                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2417  0000                     LATB equ 0F8Ah ;# 
  2418                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2419  0000                     LATC equ 0F8Bh ;# 
  2420                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2421  0000                     LATD equ 0F8Ch ;# 
  2422                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2423  0000                     LATE equ 0F8Dh ;# 
  2424                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2425  0000                     SSP2BUF equ 0F8Eh ;# 
  2426                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2427  0000                     TRISA equ 0F92h ;# 
  2428                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2429  0000                     DDRA equ 0F92h ;# 
  2430                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2431  0000                     TRISB equ 0F93h ;# 
  2432                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2433  0000                     DDRB equ 0F93h ;# 
  2434                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2435  0000                     TRISC equ 0F94h ;# 
  2436                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2437  0000                     DDRC equ 0F94h ;# 
  2438                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2439  0000                     TRISD equ 0F95h ;# 
  2440                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2441  0000                     DDRD equ 0F95h ;# 
  2442                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2443  0000                     TRISE equ 0F96h ;# 
  2444                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2445  0000                     DDRE equ 0F96h ;# 
  2446                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2447  0000                     OSCTUNE equ 0F9Bh ;# 
  2448                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2449  0000                     PIE1 equ 0F9Dh ;# 
  2450                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2451  0000                     PIR1 equ 0F9Eh ;# 
  2452                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2453  0000                     IPR1 equ 0F9Fh ;# 
  2454                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2455  0000                     PIE2 equ 0FA0h ;# 
  2456                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2457  0000                     PIR2 equ 0FA1h ;# 
  2458                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2459  0000                     IPR2 equ 0FA2h ;# 
  2460                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2461  0000                     PIE3 equ 0FA3h ;# 
  2462                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2463  0000                     PIR3 equ 0FA4h ;# 
  2464                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2465  0000                     IPR3 equ 0FA5h ;# 
  2466                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2467  0000                     EECON1 equ 0FA6h ;# 
  2468                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2469  0000                     EECON2 equ 0FA7h ;# 
  2470                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2471  0000                     RCSTA equ 0FABh ;# 
  2472                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2473  0000                     RCSTA1 equ 0FABh ;# 
  2474                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2475  0000                     TXSTA equ 0FACh ;# 
  2476                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2477  0000                     TXSTA1 equ 0FACh ;# 
  2478                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2479  0000                     TXREG equ 0FADh ;# 
  2480                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2481  0000                     TXREG1 equ 0FADh ;# 
  2482                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2483  0000                     RCREG equ 0FAEh ;# 
  2484                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2485  0000                     RCREG1 equ 0FAEh ;# 
  2486                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2487  0000                     SPBRG equ 0FAFh ;# 
  2488                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2489  0000                     SPBRG1 equ 0FAFh ;# 
  2490                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2491  0000                     SPBRGH equ 0FB0h ;# 
  2492                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2493  0000                     CMCON equ 0FB4h ;# 
  2494                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2495  0000                     CVRCON equ 0FB5h ;# 
  2496                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2497  0000                     ECCP1AS equ 0FB6h ;# 
  2498                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2499  0000                     ECCP1DEL equ 0FB7h ;# 
  2500                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2501  0000                     PWM1CON equ 0FB7h ;# 
  2502                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2503  0000                     BAUDCON equ 0FB8h ;# 
  2504                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2505  0000                     BAUDCTL equ 0FB8h ;# 
  2506                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2507  0000                     CCP2CON equ 0FBAh ;# 
  2508                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2509  0000                     CCPR2 equ 0FBBh ;# 
  2510                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2511  0000                     CCPR2L equ 0FBBh ;# 
  2512                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2513  0000                     CCPR2H equ 0FBCh ;# 
  2514                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2515  0000                     ECCP1CON equ 0FBDh ;# 
  2516                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2517  0000                     CCP1CON equ 0FBDh ;# 
  2518                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2519  0000                     CCPR1 equ 0FBEh ;# 
  2520                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2521  0000                     CCPR1L equ 0FBEh ;# 
  2522                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2523  0000                     CCPR1H equ 0FBFh ;# 
  2524                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2525  0000                     ADCON2 equ 0FC0h ;# 
  2526                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2527  0000                     ADCON1 equ 0FC1h ;# 
  2528                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2529  0000                     ADCON0 equ 0FC2h ;# 
  2530                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2531  0000                     ADRES equ 0FC3h ;# 
  2532                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2533  0000                     ADRESL equ 0FC3h ;# 
  2534                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2535  0000                     ADRESH equ 0FC4h ;# 
  2536                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2537  0000                     SSPCON2 equ 0FC5h ;# 
  2538                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2539  0000                     SSP1CON2 equ 0FC5h ;# 
  2540                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2541  0000                     SSPCON1 equ 0FC6h ;# 
  2542                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2543  0000                     SSP1CON1 equ 0FC6h ;# 
  2544                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2545  0000                     SSPSTAT equ 0FC7h ;# 
  2546                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2547  0000                     SSP1STAT equ 0FC7h ;# 
  2548                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2549  0000                     SSPADD equ 0FC8h ;# 
  2550                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2551  0000                     SSP1ADD equ 0FC8h ;# 
  2552                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2553  0000                     SSPBUF equ 0FC9h ;# 
  2554                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2555  0000                     SSP1BUF equ 0FC9h ;# 
  2556                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2557  0000                     T2CON equ 0FCAh ;# 
  2558                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2559  0000                     PR2 equ 0FCBh ;# 
  2560                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2561  0000                     MEMCON equ 0FCBh ;# 
  2562                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2563  0000                     TMR2 equ 0FCCh ;# 
  2564                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2565  0000                     T1CON equ 0FCDh ;# 
  2566                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2567  0000                     TMR1 equ 0FCEh ;# 
  2568                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2569  0000                     TMR1L equ 0FCEh ;# 
  2570                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2571  0000                     TMR1H equ 0FCFh ;# 
  2572                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2573  0000                     RCON equ 0FD0h ;# 
  2574                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2575  0000                     WDTCON equ 0FD1h ;# 
  2576                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2577  0000                     OSCCON equ 0FD3h ;# 
  2578                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2579  0000                     T0CON equ 0FD5h ;# 
  2580                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2581  0000                     TMR0 equ 0FD6h ;# 
  2582                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2583  0000                     TMR0L equ 0FD6h ;# 
  2584                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2585  0000                     TMR0H equ 0FD7h ;# 
  2586                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2587  0000                     STATUS equ 0FD8h ;# 
  2588                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2589  0000                     FSR2 equ 0FD9h ;# 
  2590                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2591  0000                     FSR2L equ 0FD9h ;# 
  2592                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2593  0000                     FSR2H equ 0FDAh ;# 
  2594                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2595  0000                     PLUSW2 equ 0FDBh ;# 
  2596                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2597  0000                     PREINC2 equ 0FDCh ;# 
  2598                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2599  0000                     POSTDEC2 equ 0FDDh ;# 
  2600                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2601  0000                     POSTINC2 equ 0FDEh ;# 
  2602                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2603  0000                     INDF2 equ 0FDFh ;# 
  2604                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2605  0000                     BSR equ 0FE0h ;# 
  2606                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2607  0000                     FSR1 equ 0FE1h ;# 
  2608                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2609  0000                     FSR1L equ 0FE1h ;# 
  2610                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2611  0000                     FSR1H equ 0FE2h ;# 
  2612                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2613  0000                     PLUSW1 equ 0FE3h ;# 
  2614                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2615  0000                     PREINC1 equ 0FE4h ;# 
  2616                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2617  0000                     POSTDEC1 equ 0FE5h ;# 
  2618                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2619  0000                     POSTINC1 equ 0FE6h ;# 
  2620                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2621  0000                     INDF1 equ 0FE7h ;# 
  2622                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2623  0000                     WREG equ 0FE8h ;# 
  2624                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2625  0000                     FSR0 equ 0FE9h ;# 
  2626                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2627  0000                     FSR0L equ 0FE9h ;# 
  2628                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2629  0000                     FSR0H equ 0FEAh ;# 
  2630                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2631  0000                     PLUSW0 equ 0FEBh ;# 
  2632                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2633  0000                     PREINC0 equ 0FECh ;# 
  2634                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2635  0000                     POSTDEC0 equ 0FEDh ;# 
  2636                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2637  0000                     POSTINC0 equ 0FEEh ;# 
  2638                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2639  0000                     INDF0 equ 0FEFh ;# 
  2640                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2641  0000                     INTCON3 equ 0FF0h ;# 
  2642                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2643  0000                     INTCON2 equ 0FF1h ;# 
  2644                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2645  0000                     INTCON equ 0FF2h ;# 
  2646                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2647  0000                     PROD equ 0FF3h ;# 
  2648                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2649  0000                     PRODL equ 0FF3h ;# 
  2650                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2651  0000                     PRODH equ 0FF4h ;# 
  2652                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2653  0000                     TABLAT equ 0FF5h ;# 
  2654                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2655  0000                     TBLPTR equ 0FF6h ;# 
  2656                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2657  0000                     TBLPTRL equ 0FF6h ;# 
  2658                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2659  0000                     TBLPTRH equ 0FF7h ;# 
  2660                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2661  0000                     TBLPTRU equ 0FF8h ;# 
  2662                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2663  0000                     PCLAT equ 0FF9h ;# 
  2664                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2665  0000                     PC equ 0FF9h ;# 
  2666                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2667  0000                     PCL equ 0FF9h ;# 
  2668                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2669  0000                     PCLATH equ 0FFAh ;# 
  2670                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2671  0000                     PCLATU equ 0FFBh ;# 
  2672                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2673  0000                     STKPTR equ 0FFCh ;# 
  2674                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2675  0000                     TOS equ 0FFDh ;# 
  2676                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2677  0000                     TOSL equ 0FFDh ;# 
  2678                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2679  0000                     TOSH equ 0FFEh ;# 
  2680                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2681  0000                     TOSU equ 0FFFh ;# 
  2682                           	FNCALL	_main,_init_uart_recv
  2683                           	FNCALL	_main,_init_i2c
  2684                           	FNCALL	_main,_init_timer1_lthread
  2685                           	FNCALL	_main,_init_queues
  2686                           	FNCALL	_main,_OpenTimer1
  2687                           	FNCALL	_main,_enable_interrupts
  2688                           	FNCALL	_main,_i2c_configure_slave
  2689                           	FNCALL	_main,_OpenUSART
  2690                           	FNCALL	_main,_block_on_To_msgqueues
  2691                           	FNCALL	_main,_ToMainHigh_recvmsg
  2692                           	FNCALL	_main,_timer0_lthread
  2693                           	FNCALL	_main,_ToMainLow_recvmsg
  2694                           	FNCALL	_main,_timer1_lthread
  2695                           	FNCALL	_main,_FromMainLow_sendmsg
  2696                           	FNCALL	_main,_uart_lthread
  2697                           	FNCALL	_init_timer1_lthread,_OpenADC
  2698                           	FNCALL	_init_timer1_lthread,_SetChanADC
  2699                           	FNCALL	_init_queues,_init_queue
  2700                           	FNCALL	_block_on_To_msgqueues,_in_main
  2701                           	FNCALL	_block_on_To_msgqueues,_check_msg
  2702                           	FNCALL	_block_on_To_msgqueues,_Delay1KTCYx
  2703                           	FNCALL	_in_main,_in_low_int
  2704                           	FNCALL	_in_main,_in_high_int
  2705                           	FNCALL	_in_low_int,_in_high_int
  2706                           	FNCALL	_ToMainHigh_recvmsg,_recv_msg
  2707                           	FNCALL	_ToMainLow_recvmsg,_recv_msg
  2708                           	FNCALL	_timer1_lthread,_ConvertADC
  2709                           	FNCALL	_FromMainLow_sendmsg,_send_msg
  2710                           	FNCALL	_send_msg,_memcpy
  2711                           	FNCALL	_recv_msg,_memcpy
  2712                           	FNROOT	_main
  2713                           	FNCALL	_InterruptHandlerHigh,_i2c_int_handler
  2714                           	FNCALL	_InterruptHandlerHigh,_timer0_int_handler
  2715                           	FNCALL	_InterruptHandlerHigh,_SleepIfOkay
  2716                           	FNCALL	_i2c_int_handler,_handle_start
  2717                           	FNCALL	_i2c_int_handler,_FromMainLow_recvmsg
  2718                           	FNCALL	_i2c_int_handler,_start_i2c_slave_reply
  2719                           	FNCALL	_i2c_int_handler,_ToMainHigh_sendmsg
  2720                           	FNCALL	_timer0_int_handler,_WriteTimer0
  2721                           	FNCALL	_timer0_int_handler,_FromMainHigh_recvmsg
  2722                           	FNCALL	_timer0_int_handler,_ToMainHigh_sendmsg
  2723                           	FNCALL	_SleepIfOkay,i2_in_low_int
  2724                           	FNCALL	_SleepIfOkay,i2_in_high_int
  2725                           	FNCALL	_SleepIfOkay,i2_check_msg
  2726                           	FNCALL	_SleepIfOkay,_enter_sleep_mode
  2727                           	FNCALL	_ToMainHigh_sendmsg,i2_send_msg
  2728                           	FNCALL	_FromMainLow_recvmsg,i2_recv_msg
  2729                           	FNCALL	_FromMainHigh_recvmsg,i2_recv_msg
  2730                           	FNCALL	i2_in_low_int,i2_in_high_int
  2731                           	FNCALL	i2_send_msg,i2_memcpy
  2732                           	FNCALL	i2_recv_msg,i2_memcpy
  2733                           	FNCALL	intlevel2,_InterruptHandlerHigh
  2734                           	global	intlevel2
  2735                           	FNROOT	intlevel2
  2736                           	FNCALL	_InterruptHandlerLow,_timer1_int_handler
  2737                           	FNCALL	_InterruptHandlerLow,_adc_int_handler
  2738                           	FNCALL	_InterruptHandlerLow,_uart_recv_int_handler
  2739                           	FNCALL	_timer1_int_handler,_ReadTimer1
  2740                           	FNCALL	_timer1_int_handler,_ToMainLow_sendmsg
  2741                           	FNCALL	_timer1_int_handler,_WriteTimer1
  2742                           	FNCALL	_adc_int_handler,_ReadADC
  2743                           	FNCALL	_adc_int_handler,_ToMainLow_sendmsg
  2744                           	FNCALL	_uart_recv_int_handler,_ReadUSART
  2745                           	FNCALL	_uart_recv_int_handler,_ToMainLow_sendmsg
  2746                           	FNCALL	_ToMainLow_sendmsg,i1_send_msg
  2747                           	FNCALL	i1_send_msg,i1_memcpy
  2748                           	FNCALL	intlevel1,_InterruptHandlerLow
  2749                           	global	intlevel1
  2750                           	FNROOT	intlevel1
  2751                           	global	_MQ_Main_Willing_to_block
  2752                           	global	_USART_Status
  2753                           	global	i2c_int_handler@F5030
  2754                           	global	_ToMainLow_MQ
  2755                           	global	_FromMainHigh_MQ
  2756                           	global	_FromMainLow_MQ
  2757                           	global	_ToMainHigh_MQ
  2758                           	global	_PC
  2759  0000                     _PC	set	0xFF9
  2760                           	global	_PCLAT
  2761  0000                     _PCLAT	set	0xFF9
  2762                           	global	_TBLPTR
  2763  0000                     _TBLPTR	set	0xFF6
  2764                           	global	_TOS
  2765  0000                     _TOS	set	0xFFD
  2766                           	global	_ADRES
  2767  0000                     _ADRES	set	0xFC3
  2768                           	global	_CCPR1
  2769  0000                     _CCPR1	set	0xFBE
  2770                           	global	_CCPR2
  2771  0000                     _CCPR2	set	0xFBB
  2772                           	global	_FSR0
  2773  0000                     _FSR0	set	0xFE9
  2774                           	global	_FSR1
  2775  0000                     _FSR1	set	0xFE1
  2776                           	global	_FSR2
  2777  0000                     _FSR2	set	0xFD9
  2778                           	global	_PROD
  2779  0000                     _PROD	set	0xFF3
  2780                           	global	_TMR0
  2781  0000                     _TMR0	set	0xFD6
  2782                           	global	_TMR1
  2783  0000                     _TMR1	set	0xFCE
  2784                           	global	_ADCON0
  2785  0000                     _ADCON0	set	0xFC2
  2786                           	global	_ADCON0bits
  2787  0000                     _ADCON0bits	set	0xFC2
  2788                           	global	_ADCON1
  2789  0000                     _ADCON1	set	0xFC1
  2790                           	global	_ADCON1bits
  2791  0000                     _ADCON1bits	set	0xFC1
  2792                           	global	_ADCON2
  2793  0000                     _ADCON2	set	0xFC0
  2794                           	global	_ADCON2bits
  2795  0000                     _ADCON2bits	set	0xFC0
  2796                           	global	_ADRESH
  2797  0000                     _ADRESH	set	0xFC4
  2798                           	global	_ADRESL
  2799  0000                     _ADRESL	set	0xFC3
  2800                           	global	_BAUDCON
  2801  0000                     _BAUDCON	set	0xFB8
  2802                           	global	_BAUDCONbits
  2803  0000                     _BAUDCONbits	set	0xFB8
  2804                           	global	_BAUDCTL
  2805  0000                     _BAUDCTL	set	0xFB8
  2806                           	global	_BAUDCTLbits
  2807  0000                     _BAUDCTLbits	set	0xFB8
  2808                           	global	_BSR
  2809  0000                     _BSR	set	0xFE0
  2810                           	global	_CCP1CON
  2811  0000                     _CCP1CON	set	0xFBD
  2812                           	global	_CCP1CONbits
  2813  0000                     _CCP1CONbits	set	0xFBD
  2814                           	global	_CCP2CON
  2815  0000                     _CCP2CON	set	0xFBA
  2816                           	global	_CCP2CONbits
  2817  0000                     _CCP2CONbits	set	0xFBA
  2818                           	global	_CCPR1H
  2819  0000                     _CCPR1H	set	0xFBF
  2820                           	global	_CCPR1L
  2821  0000                     _CCPR1L	set	0xFBE
  2822                           	global	_CCPR2H
  2823  0000                     _CCPR2H	set	0xFBC
  2824                           	global	_CCPR2L
  2825  0000                     _CCPR2L	set	0xFBB
  2826                           	global	_CMCON
  2827  0000                     _CMCON	set	0xFB4
  2828                           	global	_CMCONbits
  2829  0000                     _CMCONbits	set	0xFB4
  2830                           	global	_CVRCON
  2831  0000                     _CVRCON	set	0xFB5
  2832                           	global	_CVRCONbits
  2833  0000                     _CVRCONbits	set	0xFB5
  2834                           	global	_DDRA
  2835  0000                     _DDRA	set	0xF92
  2836                           	global	_DDRAbits
  2837  0000                     _DDRAbits	set	0xF92
  2838                           	global	_DDRB
  2839  0000                     _DDRB	set	0xF93
  2840                           	global	_DDRBbits
  2841  0000                     _DDRBbits	set	0xF93
  2842                           	global	_DDRC
  2843  0000                     _DDRC	set	0xF94
  2844                           	global	_DDRCbits
  2845  0000                     _DDRCbits	set	0xF94
  2846                           	global	_DDRD
  2847  0000                     _DDRD	set	0xF95
  2848                           	global	_DDRDbits
  2849  0000                     _DDRDbits	set	0xF95
  2850                           	global	_DDRE
  2851  0000                     _DDRE	set	0xF96
  2852                           	global	_DDREbits
  2853  0000                     _DDREbits	set	0xF96
  2854                           	global	_ECCP1AS
  2855  0000                     _ECCP1AS	set	0xFB6
  2856                           	global	_ECCP1ASbits
  2857  0000                     _ECCP1ASbits	set	0xFB6
  2858                           	global	_ECCP1CON
  2859  0000                     _ECCP1CON	set	0xFBD
  2860                           	global	_ECCP1CONbits
  2861  0000                     _ECCP1CONbits	set	0xFBD
  2862                           	global	_ECCP1DEL
  2863  0000                     _ECCP1DEL	set	0xFB7
  2864                           	global	_ECCP1DELbits
  2865  0000                     _ECCP1DELbits	set	0xFB7
  2866                           	global	_EECON1
  2867  0000                     _EECON1	set	0xFA6
  2868                           	global	_EECON1bits
  2869  0000                     _EECON1bits	set	0xFA6
  2870                           	global	_EECON2
  2871  0000                     _EECON2	set	0xFA7
  2872                           	global	_FSR0H
  2873  0000                     _FSR0H	set	0xFEA
  2874                           	global	_FSR0L
  2875  0000                     _FSR0L	set	0xFE9
  2876                           	global	_FSR1H
  2877  0000                     _FSR1H	set	0xFE2
  2878                           	global	_FSR1L
  2879  0000                     _FSR1L	set	0xFE1
  2880                           	global	_FSR2H
  2881  0000                     _FSR2H	set	0xFDA
  2882                           	global	_FSR2L
  2883  0000                     _FSR2L	set	0xFD9
  2884                           	global	_INDF0
  2885  0000                     _INDF0	set	0xFEF
  2886                           	global	_INDF1
  2887  0000                     _INDF1	set	0xFE7
  2888                           	global	_INDF2
  2889  0000                     _INDF2	set	0xFDF
  2890                           	global	_INTCON
  2891  0000                     _INTCON	set	0xFF2
  2892                           	global	_INTCON2
  2893  0000                     _INTCON2	set	0xFF1
  2894                           	global	_INTCON2bits
  2895  0000                     _INTCON2bits	set	0xFF1
  2896                           	global	_INTCON3
  2897  0000                     _INTCON3	set	0xFF0
  2898                           	global	_INTCON3bits
  2899  0000                     _INTCON3bits	set	0xFF0
  2900                           	global	_INTCONbits
  2901  0000                     _INTCONbits	set	0xFF2
  2902                           	global	_IPR1
  2903  0000                     _IPR1	set	0xF9F
  2904                           	global	_IPR1bits
  2905  0000                     _IPR1bits	set	0xF9F
  2906                           	global	_IPR2
  2907  0000                     _IPR2	set	0xFA2
  2908                           	global	_IPR2bits
  2909  0000                     _IPR2bits	set	0xFA2
  2910                           	global	_IPR3
  2911  0000                     _IPR3	set	0xFA5
  2912                           	global	_IPR3bits
  2913  0000                     _IPR3bits	set	0xFA5
  2914                           	global	_LATA
  2915  0000                     _LATA	set	0xF89
  2916                           	global	_LATAbits
  2917  0000                     _LATAbits	set	0xF89
  2918                           	global	_LATB
  2919  0000                     _LATB	set	0xF8A
  2920                           	global	_LATBbits
  2921  0000                     _LATBbits	set	0xF8A
  2922                           	global	_LATC
  2923  0000                     _LATC	set	0xF8B
  2924                           	global	_LATCbits
  2925  0000                     _LATCbits	set	0xF8B
  2926                           	global	_LATD
  2927  0000                     _LATD	set	0xF8C
  2928                           	global	_LATDbits
  2929  0000                     _LATDbits	set	0xF8C
  2930                           	global	_LATE
  2931  0000                     _LATE	set	0xF8D
  2932                           	global	_LATEbits
  2933  0000                     _LATEbits	set	0xF8D
  2934                           	global	_MEMCON
  2935  0000                     _MEMCON	set	0xFCB
  2936                           	global	_OSCCON
  2937  0000                     _OSCCON	set	0xFD3
  2938                           	global	_OSCCONbits
  2939  0000                     _OSCCONbits	set	0xFD3
  2940                           	global	_OSCTUNE
  2941  0000                     _OSCTUNE	set	0xF9B
  2942                           	global	_OSCTUNEbits
  2943  0000                     _OSCTUNEbits	set	0xF9B
  2944                           	global	_PCL
  2945  0000                     _PCL	set	0xFF9
  2946                           	global	_PCLATH
  2947  0000                     _PCLATH	set	0xFFA
  2948                           	global	_PCLATU
  2949  0000                     _PCLATU	set	0xFFB
  2950                           	global	_PIE1
  2951  0000                     _PIE1	set	0xF9D
  2952                           	global	_PIE1bits
  2953  0000                     _PIE1bits	set	0xF9D
  2954                           	global	_PIE2
  2955  0000                     _PIE2	set	0xFA0
  2956                           	global	_PIE2bits
  2957  0000                     _PIE2bits	set	0xFA0
  2958                           	global	_PIE3
  2959  0000                     _PIE3	set	0xFA3
  2960                           	global	_PIE3bits
  2961  0000                     _PIE3bits	set	0xFA3
  2962                           	global	_PIR1
  2963  0000                     _PIR1	set	0xF9E
  2964                           	global	_PIR1bits
  2965  0000                     _PIR1bits	set	0xF9E
  2966                           	global	_PIR2
  2967  0000                     _PIR2	set	0xFA1
  2968                           	global	_PIR2bits
  2969  0000                     _PIR2bits	set	0xFA1
  2970                           	global	_PIR3
  2971  0000                     _PIR3	set	0xFA4
  2972                           	global	_PIR3bits
  2973  0000                     _PIR3bits	set	0xFA4
  2974                           	global	_PLUSW0
  2975  0000                     _PLUSW0	set	0xFEB
  2976                           	global	_PLUSW1
  2977  0000                     _PLUSW1	set	0xFE3
  2978                           	global	_PLUSW2
  2979  0000                     _PLUSW2	set	0xFDB
  2980                           	global	_PORTA
  2981  0000                     _PORTA	set	0xF80
  2982                           	global	_PORTAbits
  2983  0000                     _PORTAbits	set	0xF80
  2984                           	global	_PORTB
  2985  0000                     _PORTB	set	0xF81
  2986                           	global	_PORTBbits
  2987  0000                     _PORTBbits	set	0xF81
  2988                           	global	_PORTC
  2989  0000                     _PORTC	set	0xF82
  2990                           	global	_PORTCbits
  2991  0000                     _PORTCbits	set	0xF82
  2992                           	global	_PORTD
  2993  0000                     _PORTD	set	0xF83
  2994                           	global	_PORTDbits
  2995  0000                     _PORTDbits	set	0xF83
  2996                           	global	_PORTE
  2997  0000                     _PORTE	set	0xF84
  2998                           	global	_PORTEbits
  2999  0000                     _PORTEbits	set	0xF84
  3000                           	global	_POSTDEC0
  3001  0000                     _POSTDEC0	set	0xFED
  3002                           	global	_POSTDEC1
  3003  0000                     _POSTDEC1	set	0xFE5
  3004                           	global	_POSTDEC2
  3005  0000                     _POSTDEC2	set	0xFDD
  3006                           	global	_POSTINC0
  3007  0000                     _POSTINC0	set	0xFEE
  3008                           	global	_POSTINC1
  3009  0000                     _POSTINC1	set	0xFE6
  3010                           	global	_POSTINC2
  3011  0000                     _POSTINC2	set	0xFDE
  3012                           	global	_PR2
  3013  0000                     _PR2	set	0xFCB
  3014                           	global	_PREINC0
  3015  0000                     _PREINC0	set	0xFEC
  3016                           	global	_PREINC1
  3017  0000                     _PREINC1	set	0xFE4
  3018                           	global	_PREINC2
  3019  0000                     _PREINC2	set	0xFDC
  3020                           	global	_PRODH
  3021  0000                     _PRODH	set	0xFF4
  3022                           	global	_PRODL
  3023  0000                     _PRODL	set	0xFF3
  3024                           	global	_PWM1CON
  3025  0000                     _PWM1CON	set	0xFB7
  3026                           	global	_PWM1CONbits
  3027  0000                     _PWM1CONbits	set	0xFB7
  3028                           	global	_RCON
  3029  0000                     _RCON	set	0xFD0
  3030                           	global	_RCONbits
  3031  0000                     _RCONbits	set	0xFD0
  3032                           	global	_RCREG
  3033  0000                     _RCREG	set	0xFAE
  3034                           	global	_RCREG1
  3035  0000                     _RCREG1	set	0xFAE
  3036                           	global	_RCSTA
  3037  0000                     _RCSTA	set	0xFAB
  3038                           	global	_RCSTA1
  3039  0000                     _RCSTA1	set	0xFAB
  3040                           	global	_RCSTA1bits
  3041  0000                     _RCSTA1bits	set	0xFAB
  3042                           	global	_RCSTAbits
  3043  0000                     _RCSTAbits	set	0xFAB
  3044                           	global	_SPBRG
  3045  0000                     _SPBRG	set	0xFAF
  3046                           	global	_SPBRG1
  3047  0000                     _SPBRG1	set	0xFAF
  3048                           	global	_SPBRGH
  3049  0000                     _SPBRGH	set	0xFB0
  3050                           	global	_SSP1ADD
  3051  0000                     _SSP1ADD	set	0xFC8
  3052                           	global	_SSP1ADDbits
  3053  0000                     _SSP1ADDbits	set	0xFC8
  3054                           	global	_SSP1BUF
  3055  0000                     _SSP1BUF	set	0xFC9
  3056                           	global	_SSP1CON1
  3057  0000                     _SSP1CON1	set	0xFC6
  3058                           	global	_SSP1CON1bits
  3059  0000                     _SSP1CON1bits	set	0xFC6
  3060                           	global	_SSP1CON2
  3061  0000                     _SSP1CON2	set	0xFC5
  3062                           	global	_SSP1CON2bits
  3063  0000                     _SSP1CON2bits	set	0xFC5
  3064                           	global	_SSP1STAT
  3065  0000                     _SSP1STAT	set	0xFC7
  3066                           	global	_SSP1STATbits
  3067  0000                     _SSP1STATbits	set	0xFC7
  3068                           	global	_SSP2ADD
  3069  0000                     _SSP2ADD	set	0xF88
  3070                           	global	_SSP2ADDbits
  3071  0000                     _SSP2ADDbits	set	0xF88
  3072                           	global	_SSP2BUF
  3073  0000                     _SSP2BUF	set	0xF8E
  3074                           	global	_SSP2CON1
  3075  0000                     _SSP2CON1	set	0xF86
  3076                           	global	_SSP2CON1bits
  3077  0000                     _SSP2CON1bits	set	0xF86
  3078                           	global	_SSP2CON2
  3079  0000                     _SSP2CON2	set	0xF85
  3080                           	global	_SSP2CON2bits
  3081  0000                     _SSP2CON2bits	set	0xF85
  3082                           	global	_SSP2STAT
  3083  0000                     _SSP2STAT	set	0xF87
  3084                           	global	_SSP2STATbits
  3085  0000                     _SSP2STATbits	set	0xF87
  3086                           	global	_SSPADD
  3087  0000                     _SSPADD	set	0xFC8
  3088                           	global	_SSPADDbits
  3089  0000                     _SSPADDbits	set	0xFC8
  3090                           	global	_SSPBUF
  3091  0000                     _SSPBUF	set	0xFC9
  3092                           	global	_SSPCON1
  3093  0000                     _SSPCON1	set	0xFC6
  3094                           	global	_SSPCON1bits
  3095  0000                     _SSPCON1bits	set	0xFC6
  3096                           	global	_SSPCON2
  3097  0000                     _SSPCON2	set	0xFC5
  3098                           	global	_SSPCON2bits
  3099  0000                     _SSPCON2bits	set	0xFC5
  3100                           	global	_SSPSTAT
  3101  0000                     _SSPSTAT	set	0xFC7
  3102                           	global	_SSPSTATbits
  3103  0000                     _SSPSTATbits	set	0xFC7
  3104                           	global	_STATUS
  3105  0000                     _STATUS	set	0xFD8
  3106                           	global	_STATUSbits
  3107  0000                     _STATUSbits	set	0xFD8
  3108                           	global	_STKPTR
  3109  0000                     _STKPTR	set	0xFFC
  3110                           	global	_STKPTRbits
  3111  0000                     _STKPTRbits	set	0xFFC
  3112                           	global	_T0CON
  3113  0000                     _T0CON	set	0xFD5
  3114                           	global	_T0CONbits
  3115  0000                     _T0CONbits	set	0xFD5
  3116                           	global	_T1CON
  3117  0000                     _T1CON	set	0xFCD
  3118                           	global	_T1CONbits
  3119  0000                     _T1CONbits	set	0xFCD
  3120                           	global	_T2CON
  3121  0000                     _T2CON	set	0xFCA
  3122                           	global	_T2CONbits
  3123  0000                     _T2CONbits	set	0xFCA
  3124                           	global	_TABLAT
  3125  0000                     _TABLAT	set	0xFF5
  3126                           	global	_TBLPTRH
  3127  0000                     _TBLPTRH	set	0xFF7
  3128                           	global	_TBLPTRL
  3129  0000                     _TBLPTRL	set	0xFF6
  3130                           	global	_TBLPTRU
  3131  0000                     _TBLPTRU	set	0xFF8
  3132                           	global	_TMR0H
  3133  0000                     _TMR0H	set	0xFD7
  3134                           	global	_TMR0L
  3135  0000                     _TMR0L	set	0xFD6
  3136                           	global	_TMR1H
  3137  0000                     _TMR1H	set	0xFCF
  3138                           	global	_TMR1L
  3139  0000                     _TMR1L	set	0xFCE
  3140                           	global	_TMR2
  3141  0000                     _TMR2	set	0xFCC
  3142                           	global	_TOSH
  3143  0000                     _TOSH	set	0xFFE
  3144                           	global	_TOSL
  3145  0000                     _TOSL	set	0xFFD
  3146                           	global	_TOSU
  3147  0000                     _TOSU	set	0xFFF
  3148                           	global	_TRISA
  3149  0000                     _TRISA	set	0xF92
  3150                           	global	_TRISAbits
  3151  0000                     _TRISAbits	set	0xF92
  3152                           	global	_TRISB
  3153  0000                     _TRISB	set	0xF93
  3154                           	global	_TRISBbits
  3155  0000                     _TRISBbits	set	0xF93
  3156                           	global	_TRISC
  3157  0000                     _TRISC	set	0xF94
  3158                           	global	_TRISCbits
  3159  0000                     _TRISCbits	set	0xF94
  3160                           	global	_TRISD
  3161  0000                     _TRISD	set	0xF95
  3162                           	global	_TRISDbits
  3163  0000                     _TRISDbits	set	0xF95
  3164                           	global	_TRISE
  3165  0000                     _TRISE	set	0xF96
  3166                           	global	_TRISEbits
  3167  0000                     _TRISEbits	set	0xF96
  3168                           	global	_TXREG
  3169  0000                     _TXREG	set	0xFAD
  3170                           	global	_TXREG1
  3171  0000                     _TXREG1	set	0xFAD
  3172                           	global	_TXSTA
  3173  0000                     _TXSTA	set	0xFAC
  3174                           	global	_TXSTA1
  3175  0000                     _TXSTA1	set	0xFAC
  3176                           	global	_TXSTA1bits
  3177  0000                     _TXSTA1bits	set	0xFAC
  3178                           	global	_TXSTAbits
  3179  0000                     _TXSTAbits	set	0xFAC
  3180                           	global	_WDTCON
  3181  0000                     _WDTCON	set	0xFD1
  3182                           	global	_WDTCONbits
  3183  0000                     _WDTCONbits	set	0xFD1
  3184                           	global	_WREG
  3185  0000                     _WREG	set	0xFE8
  3186                           	global	_ABDEN
  3187  0000                     _ABDEN	set	0x7DC0
  3188                           	global	_ABDOVF
  3189  0000                     _ABDOVF	set	0x7DC7
  3190                           	global	_ACKDT
  3191  0000                     _ACKDT	set	0x7E2D
  3192                           	global	_ACKDT1
  3193  0000                     _ACKDT1	set	0x7E2D
  3194                           	global	_ACKDT2
  3195  0000                     _ACKDT2	set	0x7C2D
  3196                           	global	_ACKEN
  3197  0000                     _ACKEN	set	0x7E2C
  3198                           	global	_ACKEN1
  3199  0000                     _ACKEN1	set	0x7E2C
  3200                           	global	_ACKEN2
  3201  0000                     _ACKEN2	set	0x7C2C
  3202                           	global	_ACKSTAT
  3203  0000                     _ACKSTAT	set	0x7E2E
  3204                           	global	_ACKSTAT1
  3205  0000                     _ACKSTAT1	set	0x7E2E
  3206                           	global	_ACKSTAT2
  3207  0000                     _ACKSTAT2	set	0x7C2E
  3208                           	global	_ACQT0
  3209  0000                     _ACQT0	set	0x7E03
  3210                           	global	_ACQT1
  3211  0000                     _ACQT1	set	0x7E04
  3212                           	global	_ACQT2
  3213  0000                     _ACQT2	set	0x7E05
  3214                           	global	_ADCAL
  3215  0000                     _ADCAL	set	0x7E17
  3216                           	global	_ADCS0
  3217  0000                     _ADCS0	set	0x7E00
  3218                           	global	_ADCS1
  3219  0000                     _ADCS1	set	0x7E01
  3220                           	global	_ADCS2
  3221  0000                     _ADCS2	set	0x7E02
  3222                           	global	_ADDEN
  3223  0000                     _ADDEN	set	0x7D5B
  3224                           	global	_ADDEN1
  3225  0000                     _ADDEN1	set	0x7D5B
  3226                           	global	_ADEN
  3227  0000                     _ADEN	set	0x7D5B
  3228                           	global	_ADFM
  3229  0000                     _ADFM	set	0x7E07
  3230                           	global	_ADIE
  3231  0000                     _ADIE	set	0x7CEE
  3232                           	global	_ADIF
  3233  0000                     _ADIF	set	0x7CF6
  3234                           	global	_ADIP
  3235  0000                     _ADIP	set	0x7CFE
  3236                           	global	_ADMSK1
  3237  0000                     _ADMSK1	set	0x7E29
  3238                           	global	_ADMSK11
  3239  0000                     _ADMSK11	set	0x7E29
  3240                           	global	_ADMSK12
  3241  0000                     _ADMSK12	set	0x7C29
  3242                           	global	_ADMSK2
  3243  0000                     _ADMSK2	set	0x7E2A
  3244                           	global	_ADMSK21
  3245  0000                     _ADMSK21	set	0x7E2A
  3246                           	global	_ADMSK22
  3247  0000                     _ADMSK22	set	0x7C2A
  3248                           	global	_ADMSK3
  3249  0000                     _ADMSK3	set	0x7E2B
  3250                           	global	_ADMSK31
  3251  0000                     _ADMSK31	set	0x7E2B
  3252                           	global	_ADMSK32
  3253  0000                     _ADMSK32	set	0x7C2B
  3254                           	global	_ADMSK4
  3255  0000                     _ADMSK4	set	0x7E2C
  3256                           	global	_ADMSK41
  3257  0000                     _ADMSK41	set	0x7E2C
  3258                           	global	_ADMSK42
  3259  0000                     _ADMSK42	set	0x7C2C
  3260                           	global	_ADMSK5
  3261  0000                     _ADMSK5	set	0x7E2D
  3262                           	global	_ADMSK51
  3263  0000                     _ADMSK51	set	0x7E2D
  3264                           	global	_ADMSK52
  3265  0000                     _ADMSK52	set	0x7C2D
  3266                           	global	_ADON
  3267  0000                     _ADON	set	0x7E10
  3268                           	global	_AN0
  3269  0000                     _AN0	set	0x7C00
  3270                           	global	_AN1
  3271  0000                     _AN1	set	0x7C01
  3272                           	global	_AN10
  3273  0000                     _AN10	set	0x7C09
  3274                           	global	_AN11
  3275  0000                     _AN11	set	0x7C0C
  3276                           	global	_AN12
  3277  0000                     _AN12	set	0x7C08
  3278                           	global	_AN2
  3279  0000                     _AN2	set	0x7C02
  3280                           	global	_AN3
  3281  0000                     _AN3	set	0x7C03
  3282                           	global	_AN4
  3283  0000                     _AN4	set	0x7C05
  3284                           	global	_AN5
  3285  0000                     _AN5	set	0x7C20
  3286                           	global	_AN6
  3287  0000                     _AN6	set	0x7C21
  3288                           	global	_AN7
  3289  0000                     _AN7	set	0x7C22
  3290                           	global	_AN8
  3291  0000                     _AN8	set	0x7C0A
  3292                           	global	_AN9
  3293  0000                     _AN9	set	0x7C0B
  3294                           	global	_BCL1IE
  3295  0000                     _BCL1IE	set	0x7D03
  3296                           	global	_BCL1IF
  3297  0000                     _BCL1IF	set	0x7D0B
  3298                           	global	_BCL1IP
  3299  0000                     _BCL1IP	set	0x7D13
  3300                           	global	_BCL2IE
  3301  0000                     _BCL2IE	set	0x7D1E
  3302                           	global	_BCL2IF
  3303  0000                     _BCL2IF	set	0x7D26
  3304                           	global	_BCL2IP
  3305  0000                     _BCL2IP	set	0x7D2E
  3306                           	global	_BCLIE
  3307  0000                     _BCLIE	set	0x7D03
  3308                           	global	_BCLIF
  3309  0000                     _BCLIF	set	0x7D0B
  3310                           	global	_BCLIP
  3311  0000                     _BCLIP	set	0x7D13
  3312                           	global	_BF
  3313  0000                     _BF	set	0x7E38
  3314                           	global	_BF1
  3315  0000                     _BF1	set	0x7E38
  3316                           	global	_BF2
  3317  0000                     _BF2	set	0x7C38
  3318                           	global	_BOR
  3319  0000                     _BOR	set	0x7E80
  3320                           	global	_BRG16
  3321  0000                     _BRG16	set	0x7DC3
  3322                           	global	_BRGH
  3323  0000                     _BRGH	set	0x7D62
  3324                           	global	_BRGH1
  3325  0000                     _BRGH1	set	0x7D62
  3326                           	global	_C1INV
  3327  0000                     _C1INV	set	0x7DA4
  3328                           	global	_C1OUT
  3329  0000                     _C1OUT	set	0x7DA6
  3330                           	global	_C2INV
  3331  0000                     _C2INV	set	0x7DA5
  3332                           	global	_C2OUT
  3333  0000                     _C2OUT	set	0x7DA7
  3334                           	global	_CARRY
  3335  0000                     _CARRY	set	0x7EC0
  3336                           	global	_CCP1
  3337  0000                     _CCP1	set	0x7C12
  3338                           	global	_CCP10
  3339  0000                     _CCP10	set	0x7C22
  3340                           	global	_CCP1IE
  3341  0000                     _CCP1IE	set	0x7CEA
  3342                           	global	_CCP1IF
  3343  0000                     _CCP1IF	set	0x7CF2
  3344                           	global	_CCP1IP
  3345  0000                     _CCP1IP	set	0x7CFA
  3346                           	global	_CCP1M0
  3347  0000                     _CCP1M0	set	0x7DE8
  3348                           	global	_CCP1M1
  3349  0000                     _CCP1M1	set	0x7DE9
  3350                           	global	_CCP1M2
  3351  0000                     _CCP1M2	set	0x7DEA
  3352                           	global	_CCP1M3
  3353  0000                     _CCP1M3	set	0x7DEB
  3354                           	global	_CCP1X
  3355  0000                     _CCP1X	set	0x7DED
  3356                           	global	_CCP1Y
  3357  0000                     _CCP1Y	set	0x7DEC
  3358                           	global	_CCP2E
  3359  0000                     _CCP2E	set	0x7C27
  3360                           	global	_CCP2IE
  3361  0000                     _CCP2IE	set	0x7D00
  3362                           	global	_CCP2IF
  3363  0000                     _CCP2IF	set	0x7D08
  3364                           	global	_CCP2IP
  3365  0000                     _CCP2IP	set	0x7D10
  3366                           	global	_CCP2M0
  3367  0000                     _CCP2M0	set	0x7DD0
  3368                           	global	_CCP2M1
  3369  0000                     _CCP2M1	set	0x7DD1
  3370                           	global	_CCP2M2
  3371  0000                     _CCP2M2	set	0x7DD2
  3372                           	global	_CCP2M3
  3373  0000                     _CCP2M3	set	0x7DD3
  3374                           	global	_CCP2X
  3375  0000                     _CCP2X	set	0x7DD5
  3376                           	global	_CCP2Y
  3377  0000                     _CCP2Y	set	0x7DD4
  3378                           	global	_CCP2_PA2
  3379  0000                     _CCP2_PA2	set	0x7C0B
  3380                           	global	_CCP6E
  3381  0000                     _CCP6E	set	0x7C26
  3382                           	global	_CCP7E
  3383  0000                     _CCP7E	set	0x7C25
  3384                           	global	_CCP8E
  3385  0000                     _CCP8E	set	0x7C24
  3386                           	global	_CCP9E
  3387  0000                     _CCP9E	set	0x7C23
  3388                           	global	_CHS0
  3389  0000                     _CHS0	set	0x7E12
  3390                           	global	_CHS1
  3391  0000                     _CHS1	set	0x7E13
  3392                           	global	_CHS2
  3393  0000                     _CHS2	set	0x7E14
  3394                           	global	_CHS3
  3395  0000                     _CHS3	set	0x7E15
  3396                           	global	_CHSN3
  3397  0000                     _CHSN3	set	0x7E0B
  3398                           	global	_CIS
  3399  0000                     _CIS	set	0x7DA3
  3400                           	global	_CK
  3401  0000                     _CK	set	0x7C16
  3402                           	global	_CKE
  3403  0000                     _CKE	set	0x7E3E
  3404                           	global	_CKE1
  3405  0000                     _CKE1	set	0x7E3E
  3406                           	global	_CKE2
  3407  0000                     _CKE2	set	0x7C3E
  3408                           	global	_CKP
  3409  0000                     _CKP	set	0x7E34
  3410                           	global	_CKP1
  3411  0000                     _CKP1	set	0x7E34
  3412                           	global	_CKP2
  3413  0000                     _CKP2	set	0x7C34
  3414                           	global	_CM0
  3415  0000                     _CM0	set	0x7DA0
  3416                           	global	_CM1
  3417  0000                     _CM1	set	0x7DA1
  3418                           	global	_CM2
  3419  0000                     _CM2	set	0x7DA2
  3420                           	global	_CMEN0
  3421  0000                     _CMEN0	set	0x7DA0
  3422                           	global	_CMEN1
  3423  0000                     _CMEN1	set	0x7DA1
  3424                           	global	_CMEN2
  3425  0000                     _CMEN2	set	0x7DA2
  3426                           	global	_CMIE
  3427  0000                     _CMIE	set	0x7D06
  3428                           	global	_CMIF
  3429  0000                     _CMIF	set	0x7D0E
  3430                           	global	_CMIP
  3431  0000                     _CMIP	set	0x7D16
  3432                           	global	_CREN
  3433  0000                     _CREN	set	0x7D5C
  3434                           	global	_CREN1
  3435  0000                     _CREN1	set	0x7D5C
  3436                           	global	_CS
  3437  0000                     _CS	set	0x7C22
  3438                           	global	_CSRC
  3439  0000                     _CSRC	set	0x7D67
  3440                           	global	_CSRC1
  3441  0000                     _CSRC1	set	0x7D67
  3442                           	global	_CVR0
  3443  0000                     _CVR0	set	0x7DA8
  3444                           	global	_CVR1
  3445  0000                     _CVR1	set	0x7DA9
  3446                           	global	_CVR2
  3447  0000                     _CVR2	set	0x7DAA
  3448                           	global	_CVR3
  3449  0000                     _CVR3	set	0x7DAB
  3450                           	global	_CVREF
  3451  0000                     _CVREF	set	0x7C02
  3452                           	global	_CVREN
  3453  0000                     _CVREN	set	0x7DAF
  3454                           	global	_CVROE
  3455  0000                     _CVROE	set	0x7DAE
  3456                           	global	_CVROEN
  3457  0000                     _CVROEN	set	0x7DAE
  3458                           	global	_CVRR
  3459  0000                     _CVRR	set	0x7DAD
  3460                           	global	_CVRSS
  3461  0000                     _CVRSS	set	0x7DAC
  3462                           	global	_DA
  3463  0000                     _DA	set	0x7E3D
  3464                           	global	_DA1
  3465  0000                     _DA1	set	0x7E3D
  3466                           	global	_DA2
  3467  0000                     _DA2	set	0x7C3D
  3468                           	global	_DATA_ADDRESS2
  3469  0000                     _DATA_ADDRESS2	set	0x7C3D
  3470                           	global	_DC
  3471  0000                     _DC	set	0x7EC1
  3472                           	global	_DC1B0
  3473  0000                     _DC1B0	set	0x7DEC
  3474                           	global	_DC1B1
  3475  0000                     _DC1B1	set	0x7DED
  3476                           	global	_DC2B0
  3477  0000                     _DC2B0	set	0x7DD4
  3478                           	global	_DC2B1
  3479  0000                     _DC2B1	set	0x7DD5
  3480                           	global	_DONE
  3481  0000                     _DONE	set	0x7E11
  3482                           	global	_DT
  3483  0000                     _DT	set	0x7C17
  3484                           	global	_D_A2
  3485  0000                     _D_A2	set	0x7C3D
  3486                           	global	_D_nA2
  3487  0000                     _D_nA2	set	0x7C3D
  3488                           	global	_ECCPAS0
  3489  0000                     _ECCPAS0	set	0x7DB4
  3490                           	global	_ECCPAS1
  3491  0000                     _ECCPAS1	set	0x7DB5
  3492                           	global	_ECCPAS2
  3493  0000                     _ECCPAS2	set	0x7DB6
  3494                           	global	_ECCPASE
  3495  0000                     _ECCPASE	set	0x7DB7
  3496                           	global	_FERR
  3497  0000                     _FERR	set	0x7D5A
  3498                           	global	_FERR1
  3499  0000                     _FERR1	set	0x7D5A
  3500                           	global	_FLT0
  3501  0000                     _FLT0	set	0x7C08
  3502                           	global	_FREE
  3503  0000                     _FREE	set	0x7D34
  3504                           	global	_GCEN
  3505  0000                     _GCEN	set	0x7E2F
  3506                           	global	_GCEN1
  3507  0000                     _GCEN1	set	0x7E2F
  3508                           	global	_GCEN2
  3509  0000                     _GCEN2	set	0x7C2F
  3510                           	global	_GIE
  3511  0000                     _GIE	set	0x7F97
  3512                           	global	_GIEH
  3513  0000                     _GIEH	set	0x7F97
  3514                           	global	_GIEL
  3515  0000                     _GIEL	set	0x7F96
  3516                           	global	_GIE_GIEH
  3517  0000                     _GIE_GIEH	set	0x7F97
  3518                           	global	_GO
  3519  0000                     _GO	set	0x7E11
  3520                           	global	_GODONE
  3521  0000                     _GODONE	set	0x7E11
  3522                           	global	_GO_DONE
  3523  0000                     _GO_DONE	set	0x7E11
  3524                           	global	_GO_NOT_DONE
  3525  0000                     _GO_NOT_DONE	set	0x7E11
  3526                           	global	_GO_nDONE
  3527  0000                     _GO_nDONE	set	0x7E11
  3528                           	global	_I2C_DAT2
  3529  0000                     _I2C_DAT2	set	0x7C3D
  3530                           	global	_I2C_READ2
  3531  0000                     _I2C_READ2	set	0x7C3A
  3532                           	global	_I2C_START2
  3533  0000                     _I2C_START2	set	0x7C3B
  3534                           	global	_I2C_STOP2
  3535  0000                     _I2C_STOP2	set	0x7C3C
  3536                           	global	_IBF
  3537  0000                     _IBF	set	0x7CB7
  3538                           	global	_IBOV
  3539  0000                     _IBOV	set	0x7CB5
  3540                           	global	_IDLEN
  3541  0000                     _IDLEN	set	0x7E9F
  3542                           	global	_INT0
  3543  0000                     _INT0	set	0x7C08
  3544                           	global	_INT0E
  3545  0000                     _INT0E	set	0x7F94
  3546                           	global	_INT0F
  3547  0000                     _INT0F	set	0x7F91
  3548                           	global	_INT0IE
  3549  0000                     _INT0IE	set	0x7F94
  3550                           	global	_INT0IF
  3551  0000                     _INT0IF	set	0x7F91
  3552                           	global	_INT1
  3553  0000                     _INT1	set	0x7C09
  3554                           	global	_INT1E
  3555  0000                     _INT1E	set	0x7F83
  3556                           	global	_INT1F
  3557  0000                     _INT1F	set	0x7F80
  3558                           	global	_INT1IE
  3559  0000                     _INT1IE	set	0x7F83
  3560                           	global	_INT1IF
  3561  0000                     _INT1IF	set	0x7F80
  3562                           	global	_INT1IP
  3563  0000                     _INT1IP	set	0x7F86
  3564                           	global	_INT1P
  3565  0000                     _INT1P	set	0x7F86
  3566                           	global	_INT2
  3567  0000                     _INT2	set	0x7C0A
  3568                           	global	_INT2E
  3569  0000                     _INT2E	set	0x7F84
  3570                           	global	_INT2F
  3571  0000                     _INT2F	set	0x7F81
  3572                           	global	_INT2IE
  3573  0000                     _INT2IE	set	0x7F84
  3574                           	global	_INT2IF
  3575  0000                     _INT2IF	set	0x7F81
  3576                           	global	_INT2IP
  3577  0000                     _INT2IP	set	0x7F87
  3578                           	global	_INT2P
  3579  0000                     _INT2P	set	0x7F87
  3580                           	global	_INTEDG0
  3581  0000                     _INTEDG0	set	0x7F8E
  3582                           	global	_INTEDG1
  3583  0000                     _INTEDG1	set	0x7F8D
  3584                           	global	_INTEDG2
  3585  0000                     _INTEDG2	set	0x7F8C
  3586                           	global	_IPEN
  3587  0000                     _IPEN	set	0x7E87
  3588                           	global	_KBI0
  3589  0000                     _KBI0	set	0x7C0C
  3590                           	global	_KBI1
  3591  0000                     _KBI1	set	0x7C0D
  3592                           	global	_KBI2
  3593  0000                     _KBI2	set	0x7C0E
  3594                           	global	_KBI3
  3595  0000                     _KBI3	set	0x7C0F
  3596                           	global	_LA0
  3597  0000                     _LA0	set	0x7C48
  3598                           	global	_LA1
  3599  0000                     _LA1	set	0x7C49
  3600                           	global	_LA2
  3601  0000                     _LA2	set	0x7C4A
  3602                           	global	_LA3
  3603  0000                     _LA3	set	0x7C4B
  3604                           	global	_LA4
  3605  0000                     _LA4	set	0x7C4C
  3606                           	global	_LA5
  3607  0000                     _LA5	set	0x7C4D
  3608                           	global	_LA6
  3609  0000                     _LA6	set	0x7C4E
  3610                           	global	_LA7
  3611  0000                     _LA7	set	0x7C4F
  3612                           	global	_LATA0
  3613  0000                     _LATA0	set	0x7C48
  3614                           	global	_LATA1
  3615  0000                     _LATA1	set	0x7C49
  3616                           	global	_LATA2
  3617  0000                     _LATA2	set	0x7C4A
  3618                           	global	_LATA3
  3619  0000                     _LATA3	set	0x7C4B
  3620                           	global	_LATA5
  3621  0000                     _LATA5	set	0x7C4D
  3622                           	global	_LATA7
  3623  0000                     _LATA7	set	0x7C4F
  3624                           	global	_LATB0
  3625  0000                     _LATB0	set	0x7C50
  3626                           	global	_LATB1
  3627  0000                     _LATB1	set	0x7C51
  3628                           	global	_LATB2
  3629  0000                     _LATB2	set	0x7C52
  3630                           	global	_LATB3
  3631  0000                     _LATB3	set	0x7C53
  3632                           	global	_LATB4
  3633  0000                     _LATB4	set	0x7C54
  3634                           	global	_LATB5
  3635  0000                     _LATB5	set	0x7C55
  3636                           	global	_LATB6
  3637  0000                     _LATB6	set	0x7C56
  3638                           	global	_LATB7
  3639  0000                     _LATB7	set	0x7C57
  3640                           	global	_LATC0
  3641  0000                     _LATC0	set	0x7C58
  3642                           	global	_LATC1
  3643  0000                     _LATC1	set	0x7C59
  3644                           	global	_LATC2
  3645  0000                     _LATC2	set	0x7C5A
  3646                           	global	_LATC3
  3647  0000                     _LATC3	set	0x7C5B
  3648                           	global	_LATC4
  3649  0000                     _LATC4	set	0x7C5C
  3650                           	global	_LATC5
  3651  0000                     _LATC5	set	0x7C5D
  3652                           	global	_LATC6
  3653  0000                     _LATC6	set	0x7C5E
  3654                           	global	_LATC7
  3655  0000                     _LATC7	set	0x7C5F
  3656                           	global	_LATD0
  3657  0000                     _LATD0	set	0x7C60
  3658                           	global	_LATD1
  3659  0000                     _LATD1	set	0x7C61
  3660                           	global	_LATD2
  3661  0000                     _LATD2	set	0x7C62
  3662                           	global	_LATD3
  3663  0000                     _LATD3	set	0x7C63
  3664                           	global	_LATD4
  3665  0000                     _LATD4	set	0x7C64
  3666                           	global	_LATD5
  3667  0000                     _LATD5	set	0x7C65
  3668                           	global	_LATD6
  3669  0000                     _LATD6	set	0x7C66
  3670                           	global	_LATD7
  3671  0000                     _LATD7	set	0x7C67
  3672                           	global	_LATE0
  3673  0000                     _LATE0	set	0x7C68
  3674                           	global	_LATE1
  3675  0000                     _LATE1	set	0x7C69
  3676                           	global	_LATE2
  3677  0000                     _LATE2	set	0x7C6A
  3678                           	global	_LB0
  3679  0000                     _LB0	set	0x7C50
  3680                           	global	_LB1
  3681  0000                     _LB1	set	0x7C51
  3682                           	global	_LB2
  3683  0000                     _LB2	set	0x7C52
  3684                           	global	_LB3
  3685  0000                     _LB3	set	0x7C53
  3686                           	global	_LB4
  3687  0000                     _LB4	set	0x7C54
  3688                           	global	_LB5
  3689  0000                     _LB5	set	0x7C55
  3690                           	global	_LB6
  3691  0000                     _LB6	set	0x7C56
  3692                           	global	_LB7
  3693  0000                     _LB7	set	0x7C57
  3694                           	global	_LC0
  3695  0000                     _LC0	set	0x7C58
  3696                           	global	_LC1
  3697  0000                     _LC1	set	0x7C59
  3698                           	global	_LC2
  3699  0000                     _LC2	set	0x7C5A
  3700                           	global	_LC3
  3701  0000                     _LC3	set	0x7C5B
  3702                           	global	_LC4
  3703  0000                     _LC4	set	0x7C5C
  3704                           	global	_LC5
  3705  0000                     _LC5	set	0x7C5D
  3706                           	global	_LC6
  3707  0000                     _LC6	set	0x7C5E
  3708                           	global	_LC7
  3709  0000                     _LC7	set	0x7C5F
  3710                           	global	_LD0
  3711  0000                     _LD0	set	0x7C60
  3712                           	global	_LD1
  3713  0000                     _LD1	set	0x7C61
  3714                           	global	_LD2
  3715  0000                     _LD2	set	0x7C62
  3716                           	global	_LD3
  3717  0000                     _LD3	set	0x7C63
  3718                           	global	_LD4
  3719  0000                     _LD4	set	0x7C64
  3720                           	global	_LD5
  3721  0000                     _LD5	set	0x7C65
  3722                           	global	_LD6
  3723  0000                     _LD6	set	0x7C66
  3724                           	global	_LD7
  3725  0000                     _LD7	set	0x7C67
  3726                           	global	_LE0
  3727  0000                     _LE0	set	0x7C68
  3728                           	global	_LE1
  3729  0000                     _LE1	set	0x7C69
  3730                           	global	_LE2
  3731  0000                     _LE2	set	0x7C6A
  3732                           	global	_LE3
  3733  0000                     _LE3	set	0x7C6B
  3734                           	global	_LE4
  3735  0000                     _LE4	set	0x7C6C
  3736                           	global	_LE5
  3737  0000                     _LE5	set	0x7C6D
  3738                           	global	_LE6
  3739  0000                     _LE6	set	0x7C6E
  3740                           	global	_LE7
  3741  0000                     _LE7	set	0x7C6F
  3742                           	global	_LVDIN
  3743  0000                     _LVDIN	set	0x7C05
  3744                           	global	_MSK0
  3745  0000                     _MSK0	set	0x7E40
  3746                           	global	_MSK01
  3747  0000                     _MSK01	set	0x7E40
  3748                           	global	_MSK02
  3749  0000                     _MSK02	set	0x7C40
  3750                           	global	_MSK1
  3751  0000                     _MSK1	set	0x7E41
  3752                           	global	_MSK11
  3753  0000                     _MSK11	set	0x7E41
  3754                           	global	_MSK12
  3755  0000                     _MSK12	set	0x7C41
  3756                           	global	_MSK2
  3757  0000                     _MSK2	set	0x7E42
  3758                           	global	_MSK21
  3759  0000                     _MSK21	set	0x7E42
  3760                           	global	_MSK22
  3761  0000                     _MSK22	set	0x7C42
  3762                           	global	_MSK3
  3763  0000                     _MSK3	set	0x7E43
  3764                           	global	_MSK31
  3765  0000                     _MSK31	set	0x7E43
  3766                           	global	_MSK32
  3767  0000                     _MSK32	set	0x7C43
  3768                           	global	_MSK4
  3769  0000                     _MSK4	set	0x7E44
  3770                           	global	_MSK41
  3771  0000                     _MSK41	set	0x7E44
  3772                           	global	_MSK42
  3773  0000                     _MSK42	set	0x7C44
  3774                           	global	_MSK5
  3775  0000                     _MSK5	set	0x7E45
  3776                           	global	_MSK51
  3777  0000                     _MSK51	set	0x7E45
  3778                           	global	_MSK52
  3779  0000                     _MSK52	set	0x7C45
  3780                           	global	_MSK6
  3781  0000                     _MSK6	set	0x7E46
  3782                           	global	_MSK61
  3783  0000                     _MSK61	set	0x7E46
  3784                           	global	_MSK62
  3785  0000                     _MSK62	set	0x7C46
  3786                           	global	_MSK7
  3787  0000                     _MSK7	set	0x7E47
  3788                           	global	_MSK71
  3789  0000                     _MSK71	set	0x7E47
  3790                           	global	_MSK72
  3791  0000                     _MSK72	set	0x7C47
  3792                           	global	_NEGATIVE
  3793  0000                     _NEGATIVE	set	0x7EC4
  3794                           	global	_NOT_A
  3795  0000                     _NOT_A	set	0x7E3D
  3796                           	global	_NOT_BOR
  3797  0000                     _NOT_BOR	set	0x7E80
  3798                           	global	_NOT_CS
  3799  0000                     _NOT_CS	set	0x7C22
  3800                           	global	_NOT_DONE
  3801  0000                     _NOT_DONE	set	0x7E11
  3802                           	global	_NOT_PD
  3803  0000                     _NOT_PD	set	0x7E82
  3804                           	global	_NOT_POR
  3805  0000                     _NOT_POR	set	0x7E81
  3806                           	global	_NOT_RBPU
  3807  0000                     _NOT_RBPU	set	0x7F8F
  3808                           	global	_NOT_RC8
  3809  0000                     _NOT_RC8	set	0x7D5E
  3810                           	global	_NOT_RD
  3811  0000                     _NOT_RD	set	0x7C20
  3812                           	global	_NOT_RI
  3813  0000                     _NOT_RI	set	0x7E84
  3814                           	global	_NOT_SS1
  3815  0000                     _NOT_SS1	set	0x7C05
  3816                           	global	_NOT_SS2
  3817  0000                     _NOT_SS2	set	0x7C1B
  3818                           	global	_NOT_T1SYNC
  3819  0000                     _NOT_T1SYNC	set	0x7E6A
  3820                           	global	_NOT_TO
  3821  0000                     _NOT_TO	set	0x7E83
  3822                           	global	_NOT_TX8
  3823  0000                     _NOT_TX8	set	0x7D66
  3824                           	global	_NOT_W
  3825  0000                     _NOT_W	set	0x7E3A
  3826                           	global	_NOT_WR
  3827  0000                     _NOT_WR	set	0x7C21
  3828                           	global	_OBF
  3829  0000                     _OBF	set	0x7CB6
  3830                           	global	_OERR
  3831  0000                     _OERR	set	0x7D59
  3832                           	global	_OERR1
  3833  0000                     _OERR1	set	0x7D59
  3834                           	global	_OSCFIE
  3835  0000                     _OSCFIE	set	0x7D07
  3836                           	global	_OSCFIF
  3837  0000                     _OSCFIF	set	0x7D0F
  3838                           	global	_OSCFIP
  3839  0000                     _OSCFIP	set	0x7D17
  3840                           	global	_OSTS
  3841  0000                     _OSTS	set	0x7E9B
  3842                           	global	_OV
  3843  0000                     _OV	set	0x7EC3
  3844                           	global	_OVERFLOW
  3845  0000                     _OVERFLOW	set	0x7EC3
  3846                           	global	_P1A
  3847  0000                     _P1A	set	0x7C12
  3848                           	global	_P1B
  3849  0000                     _P1B	set	0x7C1D
  3850                           	global	_P1C
  3851  0000                     _P1C	set	0x7C1E
  3852                           	global	_P1D
  3853  0000                     _P1D	set	0x7C1F
  3854                           	global	_P1M0
  3855  0000                     _P1M0	set	0x7DEE
  3856                           	global	_P1M1
  3857  0000                     _P1M1	set	0x7DEF
  3858                           	global	_P2
  3859  0000                     _P2	set	0x7C3C
  3860                           	global	_PA1
  3861  0000                     _PA1	set	0x7C12
  3862                           	global	_PA2
  3863  0000                     _PA2	set	0x7C11
  3864                           	global	_PA2E
  3865  0000                     _PA2E	set	0x7C27
  3866                           	global	_PB1E
  3867  0000                     _PB1E	set	0x7C26
  3868                           	global	_PB2
  3869  0000                     _PB2	set	0x7C22
  3870                           	global	_PB3E
  3871  0000                     _PB3E	set	0x7C24
  3872                           	global	_PC1E
  3873  0000                     _PC1E	set	0x7C25
  3874                           	global	_PC2
  3875  0000                     _PC2	set	0x7C21
  3876                           	global	_PC3E
  3877  0000                     _PC3E	set	0x7C23
  3878                           	global	_PCFG0
  3879  0000                     _PCFG0	set	0x7E08
  3880                           	global	_PCFG1
  3881  0000                     _PCFG1	set	0x7E09
  3882                           	global	_PCFG2
  3883  0000                     _PCFG2	set	0x7E0A
  3884                           	global	_PCFG3
  3885  0000                     _PCFG3	set	0x7E0B
  3886                           	global	_PD
  3887  0000                     _PD	set	0x7E82
  3888                           	global	_PD2
  3889  0000                     _PD2	set	0x7C20
  3890                           	global	_PDC0
  3891  0000                     _PDC0	set	0x7DB8
  3892                           	global	_PDC1
  3893  0000                     _PDC1	set	0x7DB9
  3894                           	global	_PDC2
  3895  0000                     _PDC2	set	0x7DBA
  3896                           	global	_PDC3
  3897  0000                     _PDC3	set	0x7DBB
  3898                           	global	_PDC4
  3899  0000                     _PDC4	set	0x7DBC
  3900                           	global	_PDC5
  3901  0000                     _PDC5	set	0x7DBD
  3902                           	global	_PDC6
  3903  0000                     _PDC6	set	0x7DBE
  3904                           	global	_PEIE
  3905  0000                     _PEIE	set	0x7F96
  3906                           	global	_PEIE_GIEL
  3907  0000                     _PEIE_GIEL	set	0x7F96
  3908                           	global	_PEN
  3909  0000                     _PEN	set	0x7E2A
  3910                           	global	_PEN1
  3911  0000                     _PEN1	set	0x7E2A
  3912                           	global	_PEN2
  3913  0000                     _PEN2	set	0x7C2A
  3914                           	global	_PGC
  3915  0000                     _PGC	set	0x7C0E
  3916                           	global	_PGD
  3917  0000                     _PGD	set	0x7C0F
  3918                           	global	_PLLEN
  3919  0000                     _PLLEN	set	0x7CDE
  3920                           	global	_POR
  3921  0000                     _POR	set	0x7E81
  3922                           	global	_PRSEN
  3923  0000                     _PRSEN	set	0x7DBF
  3924                           	global	_PSA
  3925  0000                     _PSA	set	0x7EAB
  3926                           	global	_PSP0
  3927  0000                     _PSP0	set	0x7C18
  3928                           	global	_PSP1
  3929  0000                     _PSP1	set	0x7C19
  3930                           	global	_PSP2
  3931  0000                     _PSP2	set	0x7C1A
  3932                           	global	_PSP3
  3933  0000                     _PSP3	set	0x7C1B
  3934                           	global	_PSP4
  3935  0000                     _PSP4	set	0x7C1C
  3936                           	global	_PSP5
  3937  0000                     _PSP5	set	0x7C1D
  3938                           	global	_PSP6
  3939  0000                     _PSP6	set	0x7C1E
  3940                           	global	_PSP7
  3941  0000                     _PSP7	set	0x7C1F
  3942                           	global	_PSPIE
  3943  0000                     _PSPIE	set	0x7CEF
  3944                           	global	_PSPIF
  3945  0000                     _PSPIF	set	0x7CF7
  3946                           	global	_PSPIP
  3947  0000                     _PSPIP	set	0x7CFF
  3948                           	global	_PSPMODE
  3949  0000                     _PSPMODE	set	0x7CB4
  3950                           	global	_PSSAC0
  3951  0000                     _PSSAC0	set	0x7DB2
  3952                           	global	_PSSAC1
  3953  0000                     _PSSAC1	set	0x7DB3
  3954                           	global	_PSSBD0
  3955  0000                     _PSSBD0	set	0x7DB0
  3956                           	global	_PSSBD1
  3957  0000                     _PSSBD1	set	0x7DB1
  3958                           	global	_RA0
  3959  0000                     _RA0	set	0x7C00
  3960                           	global	_RA1
  3961  0000                     _RA1	set	0x7C01
  3962                           	global	_RA2
  3963  0000                     _RA2	set	0x7C02
  3964                           	global	_RA3
  3965  0000                     _RA3	set	0x7C03
  3966                           	global	_RA4
  3967  0000                     _RA4	set	0x7C04
  3968                           	global	_RA5
  3969  0000                     _RA5	set	0x7C05
  3970                           	global	_RA6
  3971  0000                     _RA6	set	0x7C06
  3972                           	global	_RA7
  3973  0000                     _RA7	set	0x7C07
  3974                           	global	_RB0
  3975  0000                     _RB0	set	0x7C08
  3976                           	global	_RB1
  3977  0000                     _RB1	set	0x7C09
  3978                           	global	_RB2
  3979  0000                     _RB2	set	0x7C0A
  3980                           	global	_RB3
  3981  0000                     _RB3	set	0x7C0B
  3982                           	global	_RB4
  3983  0000                     _RB4	set	0x7C0C
  3984                           	global	_RB5
  3985  0000                     _RB5	set	0x7C0D
  3986                           	global	_RB6
  3987  0000                     _RB6	set	0x7C0E
  3988                           	global	_RB7
  3989  0000                     _RB7	set	0x7C0F
  3990                           	global	_RBIE
  3991  0000                     _RBIE	set	0x7F93
  3992                           	global	_RBIF
  3993  0000                     _RBIF	set	0x7F90
  3994                           	global	_RBIP
  3995  0000                     _RBIP	set	0x7F88
  3996                           	global	_RBPU
  3997  0000                     _RBPU	set	0x7F8F
  3998                           	global	_RC0
  3999  0000                     _RC0	set	0x7C10
  4000                           	global	_RC1
  4001  0000                     _RC1	set	0x7C11
  4002                           	global	_RC1IE
  4003  0000                     _RC1IE	set	0x7CED
  4004                           	global	_RC1IF
  4005  0000                     _RC1IF	set	0x7CF5
  4006                           	global	_RC1IP
  4007  0000                     _RC1IP	set	0x7CFD
  4008                           	global	_RC2
  4009  0000                     _RC2	set	0x7C12
  4010                           	global	_RC3
  4011  0000                     _RC3	set	0x7C13
  4012                           	global	_RC4
  4013  0000                     _RC4	set	0x7C14
  4014                           	global	_RC5
  4015  0000                     _RC5	set	0x7C15
  4016                           	global	_RC6
  4017  0000                     _RC6	set	0x7C16
  4018                           	global	_RC7
  4019  0000                     _RC7	set	0x7C17
  4020                           	global	_RC8_9
  4021  0000                     _RC8_9	set	0x7D5E
  4022                           	global	_RC9
  4023  0000                     _RC9	set	0x7D5E
  4024                           	global	_RCD8
  4025  0000                     _RCD8	set	0x7D58
  4026                           	global	_RCEN
  4027  0000                     _RCEN	set	0x7E2B
  4028                           	global	_RCEN1
  4029  0000                     _RCEN1	set	0x7E2B
  4030                           	global	_RCEN2
  4031  0000                     _RCEN2	set	0x7C2B
  4032                           	global	_RCIDL
  4033  0000                     _RCIDL	set	0x7DC6
  4034                           	global	_RCIE
  4035  0000                     _RCIE	set	0x7CED
  4036                           	global	_RCIF
  4037  0000                     _RCIF	set	0x7CF5
  4038                           	global	_RCIP
  4039  0000                     _RCIP	set	0x7CFD
  4040                           	global	_RCMT
  4041  0000                     _RCMT	set	0x7DC6
  4042                           	global	_RD
  4043  0000                     _RD	set	0x7C20
  4044                           	global	_RD0
  4045  0000                     _RD0	set	0x7C18
  4046                           	global	_RD1
  4047  0000                     _RD1	set	0x7C19
  4048                           	global	_RD16
  4049  0000                     _RD16	set	0x7E6F
  4050                           	global	_RD2
  4051  0000                     _RD2	set	0x7C1A
  4052                           	global	_RD3
  4053  0000                     _RD3	set	0x7C1B
  4054                           	global	_RD4
  4055  0000                     _RD4	set	0x7C1C
  4056                           	global	_RD5
  4057  0000                     _RD5	set	0x7C1D
  4058                           	global	_RD6
  4059  0000                     _RD6	set	0x7C1E
  4060                           	global	_RD7
  4061  0000                     _RD7	set	0x7C1F
  4062                           	global	_RDE
  4063  0000                     _RDE	set	0x7C20
  4064                           	global	_RE0
  4065  0000                     _RE0	set	0x7C20
  4066                           	global	_RE1
  4067  0000                     _RE1	set	0x7C21
  4068                           	global	_RE2
  4069  0000                     _RE2	set	0x7C22
  4070                           	global	_RE3
  4071  0000                     _RE3	set	0x7CB3
  4072                           	global	_RE4
  4073  0000                     _RE4	set	0x7C24
  4074                           	global	_RE5
  4075  0000                     _RE5	set	0x7C25
  4076                           	global	_RE6
  4077  0000                     _RE6	set	0x7C26
  4078                           	global	_RE7
  4079  0000                     _RE7	set	0x7C27
  4080                           	global	_READ_WRITE2
  4081  0000                     _READ_WRITE2	set	0x7C3A
  4082                           	global	_RI
  4083  0000                     _RI	set	0x7E84
  4084                           	global	_RJPU
  4085  0000                     _RJPU	set	0x7C07
  4086                           	global	_RSEN
  4087  0000                     _RSEN	set	0x7E29
  4088                           	global	_RSEN1
  4089  0000                     _RSEN1	set	0x7E29
  4090                           	global	_RSEN2
  4091  0000                     _RSEN2	set	0x7C29
  4092                           	global	_RW
  4093  0000                     _RW	set	0x7E3A
  4094                           	global	_RW1
  4095  0000                     _RW1	set	0x7E3A
  4096                           	global	_RW2
  4097  0000                     _RW2	set	0x7C3A
  4098                           	global	_RX
  4099  0000                     _RX	set	0x7C17
  4100                           	global	_RX9
  4101  0000                     _RX9	set	0x7D5E
  4102                           	global	_RX91
  4103  0000                     _RX91	set	0x7D5E
  4104                           	global	_RX9D
  4105  0000                     _RX9D	set	0x7D58
  4106                           	global	_RX9D1
  4107  0000                     _RX9D1	set	0x7D58
  4108                           	global	_R_W2
  4109  0000                     _R_W2	set	0x7C3A
  4110                           	global	_R_nW2
  4111  0000                     _R_nW2	set	0x7C3A
  4112                           	global	_S2
  4113  0000                     _S2	set	0x7C3B
  4114                           	global	_SCK
  4115  0000                     _SCK	set	0x7C13
  4116                           	global	_SCK1
  4117  0000                     _SCK1	set	0x7C13
  4118                           	global	_SCK2
  4119  0000                     _SCK2	set	0x7C18
  4120                           	global	_SCKP
  4121  0000                     _SCKP	set	0x7DC4
  4122                           	global	_SCL
  4123  0000                     _SCL	set	0x7C13
  4124                           	global	_SCL1
  4125  0000                     _SCL1	set	0x7C13
  4126                           	global	_SCL2
  4127  0000                     _SCL2	set	0x7C18
  4128                           	global	_SCS0
  4129  0000                     _SCS0	set	0x7E98
  4130                           	global	_SCS1
  4131  0000                     _SCS1	set	0x7E99
  4132                           	global	_SDA
  4133  0000                     _SDA	set	0x7C14
  4134                           	global	_SDA1
  4135  0000                     _SDA1	set	0x7C14
  4136                           	global	_SDA2
  4137  0000                     _SDA2	set	0x7C19
  4138                           	global	_SDI
  4139  0000                     _SDI	set	0x7C14
  4140                           	global	_SDI1
  4141  0000                     _SDI1	set	0x7C14
  4142                           	global	_SDI2
  4143  0000                     _SDI2	set	0x7C19
  4144                           	global	_SDO
  4145  0000                     _SDO	set	0x7C15
  4146                           	global	_SDO1
  4147  0000                     _SDO1	set	0x7C15
  4148                           	global	_SDO2
  4149  0000                     _SDO2	set	0x7C1A
  4150                           	global	_SEN
  4151  0000                     _SEN	set	0x7E28
  4152                           	global	_SEN1
  4153  0000                     _SEN1	set	0x7E28
  4154                           	global	_SEN2
  4155  0000                     _SEN2	set	0x7C28
  4156                           	global	_SENDB
  4157  0000                     _SENDB	set	0x7D63
  4158                           	global	_SENDB1
  4159  0000                     _SENDB1	set	0x7D63
  4160                           	global	_SMP
  4161  0000                     _SMP	set	0x7E3F
  4162                           	global	_SMP1
  4163  0000                     _SMP1	set	0x7E3F
  4164                           	global	_SMP2
  4165  0000                     _SMP2	set	0x7C3F
  4166                           	global	_SOSCEN
  4167  0000                     _SOSCEN	set	0x7E6B
  4168                           	global	_SPEN
  4169  0000                     _SPEN	set	0x7D5F
  4170                           	global	_SPEN1
  4171  0000                     _SPEN1	set	0x7D5F
  4172                           	global	_SREN
  4173  0000                     _SREN	set	0x7D5D
  4174                           	global	_SREN1
  4175  0000                     _SREN1	set	0x7D5D
  4176                           	global	_SRENA
  4177  0000                     _SRENA	set	0x7D5D
  4178                           	global	_SS1
  4179  0000                     _SS1	set	0x7C05
  4180                           	global	_SS2
  4181  0000                     _SS2	set	0x7C1B
  4182                           	global	_SSP1IE
  4183  0000                     _SSP1IE	set	0x7CEB
  4184                           	global	_SSP1IF
  4185  0000                     _SSP1IF	set	0x7CF3
  4186                           	global	_SSP1IP
  4187  0000                     _SSP1IP	set	0x7CFB
  4188                           	global	_SSP2IE
  4189  0000                     _SSP2IE	set	0x7D1F
  4190                           	global	_SSP2IF
  4191  0000                     _SSP2IF	set	0x7D27
  4192                           	global	_SSP2IP
  4193  0000                     _SSP2IP	set	0x7D2F
  4194                           	global	_SSPEN
  4195  0000                     _SSPEN	set	0x7E35
  4196                           	global	_SSPEN1
  4197  0000                     _SSPEN1	set	0x7E35
  4198                           	global	_SSPEN2
  4199  0000                     _SSPEN2	set	0x7C35
  4200                           	global	_SSPIE
  4201  0000                     _SSPIE	set	0x7CEB
  4202                           	global	_SSPIF
  4203  0000                     _SSPIF	set	0x7CF3
  4204                           	global	_SSPIP
  4205  0000                     _SSPIP	set	0x7CFB
  4206                           	global	_SSPM0
  4207  0000                     _SSPM0	set	0x7E30
  4208                           	global	_SSPM01
  4209  0000                     _SSPM01	set	0x7E30
  4210                           	global	_SSPM02
  4211  0000                     _SSPM02	set	0x7C30
  4212                           	global	_SSPM1
  4213  0000                     _SSPM1	set	0x7E31
  4214                           	global	_SSPM11
  4215  0000                     _SSPM11	set	0x7E31
  4216                           	global	_SSPM12
  4217  0000                     _SSPM12	set	0x7C31
  4218                           	global	_SSPM2
  4219  0000                     _SSPM2	set	0x7E32
  4220                           	global	_SSPM21
  4221  0000                     _SSPM21	set	0x7E32
  4222                           	global	_SSPM22
  4223  0000                     _SSPM22	set	0x7C32
  4224                           	global	_SSPM3
  4225  0000                     _SSPM3	set	0x7E33
  4226                           	global	_SSPM31
  4227  0000                     _SSPM31	set	0x7E33
  4228                           	global	_SSPM32
  4229  0000                     _SSPM32	set	0x7C33
  4230                           	global	_SSPOV
  4231  0000                     _SSPOV	set	0x7E36
  4232                           	global	_SSPOV1
  4233  0000                     _SSPOV1	set	0x7E36
  4234                           	global	_SSPOV2
  4235  0000                     _SSPOV2	set	0x7C36
  4236                           	global	_START
  4237  0000                     _START	set	0x7E3B
  4238                           	global	_START1
  4239  0000                     _START1	set	0x7E3B
  4240                           	global	_START2
  4241  0000                     _START2	set	0x7C3B
  4242                           	global	_STKFUL
  4243  0000                     _STKFUL	set	0x7FE7
  4244                           	global	_STKOVF
  4245  0000                     _STKOVF	set	0x7FE7
  4246                           	global	_STKPTR0
  4247  0000                     _STKPTR0	set	0x7FE0
  4248                           	global	_STKPTR1
  4249  0000                     _STKPTR1	set	0x7FE1
  4250                           	global	_STKPTR2
  4251  0000                     _STKPTR2	set	0x7FE2
  4252                           	global	_STKPTR3
  4253  0000                     _STKPTR3	set	0x7FE3
  4254                           	global	_STKPTR4
  4255  0000                     _STKPTR4	set	0x7FE4
  4256                           	global	_STKUNF
  4257  0000                     _STKUNF	set	0x7FE6
  4258                           	global	_STOP
  4259  0000                     _STOP	set	0x7E3C
  4260                           	global	_STOP1
  4261  0000                     _STOP1	set	0x7E3C
  4262                           	global	_STOP2
  4263  0000                     _STOP2	set	0x7C3C
  4264                           	global	_SWDTE
  4265  0000                     _SWDTE	set	0x7E88
  4266                           	global	_SWDTEN
  4267  0000                     _SWDTEN	set	0x7E88
  4268                           	global	_SYNC
  4269  0000                     _SYNC	set	0x7D64
  4270                           	global	_SYNC1
  4271  0000                     _SYNC1	set	0x7D64
  4272                           	global	_T08BIT
  4273  0000                     _T08BIT	set	0x7EAE
  4274                           	global	_T0CKI
  4275  0000                     _T0CKI	set	0x7C0D
  4276                           	global	_T0CS
  4277  0000                     _T0CS	set	0x7EAD
  4278                           	global	_T0IE
  4279  0000                     _T0IE	set	0x7F95
  4280                           	global	_T0IF
  4281  0000                     _T0IF	set	0x7F92
  4282                           	global	_T0IP
  4283  0000                     _T0IP	set	0x7F8A
  4284                           	global	_T0PS0
  4285  0000                     _T0PS0	set	0x7EA8
  4286                           	global	_T0PS1
  4287  0000                     _T0PS1	set	0x7EA9
  4288                           	global	_T0PS2
  4289  0000                     _T0PS2	set	0x7EAA
  4290                           	global	_T0SE
  4291  0000                     _T0SE	set	0x7EAC
  4292                           	global	_T1CKI
  4293  0000                     _T1CKI	set	0x7C10
  4294                           	global	_T1CKPS0
  4295  0000                     _T1CKPS0	set	0x7E6C
  4296                           	global	_T1CKPS1
  4297  0000                     _T1CKPS1	set	0x7E6D
  4298                           	global	_T1INSYNC
  4299  0000                     _T1INSYNC	set	0x7E6A
  4300                           	global	_T1OSCEN
  4301  0000                     _T1OSCEN	set	0x7E6B
  4302                           	global	_T1OSI
  4303  0000                     _T1OSI	set	0x7C11
  4304                           	global	_T1OSO
  4305  0000                     _T1OSO	set	0x7C10
  4306                           	global	_T1RD16
  4307  0000                     _T1RD16	set	0x7E6F
  4308                           	global	_T1RUN
  4309  0000                     _T1RUN	set	0x7E6E
  4310                           	global	_T1SYNC
  4311  0000                     _T1SYNC	set	0x7E6A
  4312                           	global	_T2CKPS0
  4313  0000                     _T2CKPS0	set	0x7E50
  4314                           	global	_T2CKPS1
  4315  0000                     _T2CKPS1	set	0x7E51
  4316                           	global	_T2OUTPS0
  4317  0000                     _T2OUTPS0	set	0x7E53
  4318                           	global	_T2OUTPS1
  4319  0000                     _T2OUTPS1	set	0x7E54
  4320                           	global	_T2OUTPS2
  4321  0000                     _T2OUTPS2	set	0x7E55
  4322                           	global	_T2OUTPS3
  4323  0000                     _T2OUTPS3	set	0x7E56
  4324                           	global	_TMR0IE
  4325  0000                     _TMR0IE	set	0x7F95
  4326                           	global	_TMR0IF
  4327  0000                     _TMR0IF	set	0x7F92
  4328                           	global	_TMR0IP
  4329  0000                     _TMR0IP	set	0x7F8A
  4330                           	global	_TMR0ON
  4331  0000                     _TMR0ON	set	0x7EAF
  4332                           	global	_TMR1CS
  4333  0000                     _TMR1CS	set	0x7E69
  4334                           	global	_TMR1IE
  4335  0000                     _TMR1IE	set	0x7CE8
  4336                           	global	_TMR1IF
  4337  0000                     _TMR1IF	set	0x7CF0
  4338                           	global	_TMR1IP
  4339  0000                     _TMR1IP	set	0x7CF8
  4340                           	global	_TMR1ON
  4341  0000                     _TMR1ON	set	0x7E68
  4342                           	global	_TMR2IE
  4343  0000                     _TMR2IE	set	0x7CE9
  4344                           	global	_TMR2IF
  4345  0000                     _TMR2IF	set	0x7CF1
  4346                           	global	_TMR2IP
  4347  0000                     _TMR2IP	set	0x7CF9
  4348                           	global	_TMR2ON
  4349  0000                     _TMR2ON	set	0x7E52
  4350                           	global	_TO
  4351  0000                     _TO	set	0x7E83
  4352                           	global	_TOUTPS0
  4353  0000                     _TOUTPS0	set	0x7E53
  4354                           	global	_TOUTPS1
  4355  0000                     _TOUTPS1	set	0x7E54
  4356                           	global	_TOUTPS2
  4357  0000                     _TOUTPS2	set	0x7E55
  4358                           	global	_TOUTPS3
  4359  0000                     _TOUTPS3	set	0x7E56
  4360                           	global	_TRISA0
  4361  0000                     _TRISA0	set	0x7C90
  4362                           	global	_TRISA1
  4363  0000                     _TRISA1	set	0x7C91
  4364                           	global	_TRISA2
  4365  0000                     _TRISA2	set	0x7C92
  4366                           	global	_TRISA3
  4367  0000                     _TRISA3	set	0x7C93
  4368                           	global	_TRISA5
  4369  0000                     _TRISA5	set	0x7C95
  4370                           	global	_TRISB0
  4371  0000                     _TRISB0	set	0x7C98
  4372                           	global	_TRISB1
  4373  0000                     _TRISB1	set	0x7C99
  4374                           	global	_TRISB2
  4375  0000                     _TRISB2	set	0x7C9A
  4376                           	global	_TRISB3
  4377  0000                     _TRISB3	set	0x7C9B
  4378                           	global	_TRISB4
  4379  0000                     _TRISB4	set	0x7C9C
  4380                           	global	_TRISB5
  4381  0000                     _TRISB5	set	0x7C9D
  4382                           	global	_TRISB6
  4383  0000                     _TRISB6	set	0x7C9E
  4384                           	global	_TRISB7
  4385  0000                     _TRISB7	set	0x7C9F
  4386                           	global	_TRISC0
  4387  0000                     _TRISC0	set	0x7CA0
  4388                           	global	_TRISC1
  4389  0000                     _TRISC1	set	0x7CA1
  4390                           	global	_TRISC2
  4391  0000                     _TRISC2	set	0x7CA2
  4392                           	global	_TRISC3
  4393  0000                     _TRISC3	set	0x7CA3
  4394                           	global	_TRISC4
  4395  0000                     _TRISC4	set	0x7CA4
  4396                           	global	_TRISC5
  4397  0000                     _TRISC5	set	0x7CA5
  4398                           	global	_TRISC6
  4399  0000                     _TRISC6	set	0x7CA6
  4400                           	global	_TRISC7
  4401  0000                     _TRISC7	set	0x7CA7
  4402                           	global	_TRISD0
  4403  0000                     _TRISD0	set	0x7CA8
  4404                           	global	_TRISD1
  4405  0000                     _TRISD1	set	0x7CA9
  4406                           	global	_TRISD2
  4407  0000                     _TRISD2	set	0x7CAA
  4408                           	global	_TRISD3
  4409  0000                     _TRISD3	set	0x7CAB
  4410                           	global	_TRISD4
  4411  0000                     _TRISD4	set	0x7CAC
  4412                           	global	_TRISD5
  4413  0000                     _TRISD5	set	0x7CAD
  4414                           	global	_TRISD6
  4415  0000                     _TRISD6	set	0x7CAE
  4416                           	global	_TRISD7
  4417  0000                     _TRISD7	set	0x7CAF
  4418                           	global	_TRISE0
  4419  0000                     _TRISE0	set	0x7CB0
  4420                           	global	_TRISE1
  4421  0000                     _TRISE1	set	0x7CB1
  4422                           	global	_TRISE2
  4423  0000                     _TRISE2	set	0x7CB2
  4424                           	global	_TRMT
  4425  0000                     _TRMT	set	0x7D61
  4426                           	global	_TRMT1
  4427  0000                     _TRMT1	set	0x7D61
  4428                           	global	_TX
  4429  0000                     _TX	set	0x7C16
  4430                           	global	_TX1IE
  4431  0000                     _TX1IE	set	0x7CEC
  4432                           	global	_TX1IF
  4433  0000                     _TX1IF	set	0x7CF4
  4434                           	global	_TX1IP
  4435  0000                     _TX1IP	set	0x7CFC
  4436                           	global	_TX8_9
  4437  0000                     _TX8_9	set	0x7D66
  4438                           	global	_TX9
  4439  0000                     _TX9	set	0x7D66
  4440                           	global	_TX91
  4441  0000                     _TX91	set	0x7D66
  4442                           	global	_TX9D
  4443  0000                     _TX9D	set	0x7D60
  4444                           	global	_TX9D1
  4445  0000                     _TX9D1	set	0x7D60
  4446                           	global	_TXD8
  4447  0000                     _TXD8	set	0x7D60
  4448                           	global	_TXEN
  4449  0000                     _TXEN	set	0x7D65
  4450                           	global	_TXEN1
  4451  0000                     _TXEN1	set	0x7D65
  4452                           	global	_TXIE
  4453  0000                     _TXIE	set	0x7CEC
  4454                           	global	_TXIF
  4455  0000                     _TXIF	set	0x7CF4
  4456                           	global	_TXIP
  4457  0000                     _TXIP	set	0x7CFC
  4458                           	global	_UA
  4459  0000                     _UA	set	0x7E39
  4460                           	global	_UA1
  4461  0000                     _UA1	set	0x7E39
  4462                           	global	_UA2
  4463  0000                     _UA2	set	0x7C39
  4464                           	global	_ULPWUIN
  4465  0000                     _ULPWUIN	set	0x7C00
  4466                           	global	_VCFG0
  4467  0000                     _VCFG0	set	0x7E0C
  4468                           	global	_VCFG01
  4469  0000                     _VCFG01	set	0x7E0C
  4470                           	global	_VCFG1
  4471  0000                     _VCFG1	set	0x7E0D
  4472                           	global	_VCFG11
  4473  0000                     _VCFG11	set	0x7E0D
  4474                           	global	_VREFM
  4475  0000                     _VREFM	set	0x7C02
  4476                           	global	_VREFP
  4477  0000                     _VREFP	set	0x7C03
  4478                           	global	_W4E
  4479  0000                     _W4E	set	0x7DC1
  4480                           	global	_WCOL
  4481  0000                     _WCOL	set	0x7E37
  4482                           	global	_WCOL1
  4483  0000                     _WCOL1	set	0x7E37
  4484                           	global	_WCOL2
  4485  0000                     _WCOL2	set	0x7C37
  4486                           	global	_WR
  4487  0000                     _WR	set	0x7D31
  4488                           	global	_WRE
  4489  0000                     _WRE	set	0x7C21
  4490                           	global	_WREN
  4491  0000                     _WREN	set	0x7D32
  4492                           	global	_WRERR
  4493  0000                     _WRERR	set	0x7D33
  4494                           	global	_WUE
  4495  0000                     _WUE	set	0x7DC1
  4496                           	global	_ZERO
  4497  0000                     _ZERO	set	0x7EC2
  4498                           	global	_nA2
  4499  0000                     _nA2	set	0x7C3D
  4500                           	global	_nADDRESS2
  4501  0000                     _nADDRESS2	set	0x7C3D
  4502                           	global	_nBOR
  4503  0000                     _nBOR	set	0x7E80
  4504                           	global	_nCS
  4505  0000                     _nCS	set	0x7C22
  4506                           	global	_nDONE
  4507  0000                     _nDONE	set	0x7E11
  4508                           	global	_nPD
  4509  0000                     _nPD	set	0x7E82
  4510                           	global	_nPOR
  4511  0000                     _nPOR	set	0x7E81
  4512                           	global	_nRBPU
  4513  0000                     _nRBPU	set	0x7F8F
  4514                           	global	_nRC8
  4515  0000                     _nRC8	set	0x7D5E
  4516                           	global	_nRD
  4517  0000                     _nRD	set	0x7C20
  4518                           	global	_nRI
  4519  0000                     _nRI	set	0x7E84
  4520                           	global	_nSS1
  4521  0000                     _nSS1	set	0x7C05
  4522                           	global	_nSS2
  4523  0000                     _nSS2	set	0x7C1B
  4524                           	global	_nT1SYNC
  4525  0000                     _nT1SYNC	set	0x7E6A
  4526                           	global	_nTO
  4527  0000                     _nTO	set	0x7E83
  4528                           	global	_nTX8
  4529  0000                     _nTX8	set	0x7D66
  4530                           	global	_nW2
  4531  0000                     _nW2	set	0x7C3A
  4532                           	global	_nWR
  4533  0000                     _nWR	set	0x7C21
  4534                           	global	_nWRITE2
  4535  0000                     _nWRITE2	set	0x7C3A
  4536                           	global	_ic_ptr
  4537                           psect	nvCOMRAM,class=COMRAM,space=1
  4538                           global __pnvCOMRAM
  4539  00004A                     __pnvCOMRAM:
  4540  00004A                     _ic_ptr:
  4541  00004A                            ds      2
  4542                           	global	_uc_ptr
  4543  00004C                     _uc_ptr:
  4544  00004C                            ds      2
  4545                           ; #config settings
  4546                           global __CFG_WDTEN$OFF
  4547  0000                     __CFG_WDTEN$OFF equ 0x0
  4548                           global __CFG_STVREN$OFF
  4549  0000                     __CFG_STVREN$OFF equ 0x0
  4550                           global __CFG_XINST$OFF
  4551  0000                     __CFG_XINST$OFF equ 0x0
  4552                           global __CFG_CP0$OFF
  4553  0000                     __CFG_CP0$OFF equ 0x0
  4554                           global __CFG_IESO$ON
  4555  0000                     __CFG_IESO$ON equ 0x0
  4556                           global __CFG_FOSC2$ON
  4557  0000                     __CFG_FOSC2$ON equ 0x0
  4558                           global __CFG_FOSC$HSPLL
  4559  0000                     __CFG_FOSC$HSPLL equ 0x0
  4560                           global __CFG_FCMEN$ON
  4561  0000                     __CFG_FCMEN$ON equ 0x0
  4562                           global __CFG_WDTPS$32768
  4563  0000                     __CFG_WDTPS$32768 equ 0x0
  4564                           global __CFG_CCP2MX$DEFAULT
  4565  0000                     __CFG_CCP2MX$DEFAULT equ 0x0
  4566                           	file	"/tmp/cgtGc2zSB"
  4567                           	line	#
  4568                           psect	cinit,class=CODE,delta=1,reloc=2
  4569                           global __pcinit
  4570  001A92                     __pcinit:
  4571                           global start_initialization
  4572  001A92                     start_initialization:
  4573                           
  4574                           global __initialization
  4575  001A92                     __initialization:
  4576                           psect	bssCOMRAM,class=COMRAM,space=1
  4577                           global __pbssCOMRAM
  4578  000045                     __pbssCOMRAM:
  4579                           	global	_errno
  4580                           	global	_errno
  4581  000045                     _errno:
  4582  000045                            ds      2
  4583                           	global	_CapStatus
  4584                           	global	_CapStatus
  4585  000047                     _CapStatus:
  4586  000047                            ds      1
  4587  000048                     _MQ_Main_Willing_to_block:
  4588  000048                            ds      1
  4589                           	global	_USART_Status
  4590  000049                     _USART_Status:
  4591  000049                            ds      1
  4592                           psect	bssBANK0,class=BANK0,space=1
  4593                           global __pbssBANK0
  4594  000080                     __pbssBANK0:
  4595  000080                     i2c_int_handler@F5030:
  4596  000080                            ds      2
  4597  000082                     _ToMainLow_MQ:
  4598  000082                            ds      54
  4599                           psect	bssBANK1,class=BANK1,space=1
  4600                           global __pbssBANK1
  4601  000100                     __pbssBANK1:
  4602  000100                     _FromMainHigh_MQ:
  4603  000100                            ds      54
  4604  000136                     _FromMainLow_MQ:
  4605  000136                            ds      54
  4606  00016C                     _ToMainHigh_MQ:
  4607  00016C                            ds      54
  4608                           psect	cinit
  4609                           ; Clear objects allocated to BANK1 (162 bytes)
  4610                           	global __pbssBANK1
  4611  001A92  EE01  F000         lfsr	0,__pbssBANK1
  4612  001A96  0EA2               movlw	162
  4613  001A98                     clear_0:
  4614  001A98  6AEE               clrf	postinc0,c
  4615  001A9A  06E8               decf	wreg
  4616  001A9C  E1FD               bnz	clear_0
  4617                           ; Clear objects allocated to BANK0 (56 bytes)
  4618                           	global __pbssBANK0
  4619  001A9E  EE00  F080         lfsr	0,__pbssBANK0
  4620  001AA2  0E38               movlw	56
  4621  001AA4                     clear_1:
  4622  001AA4  6AEE               clrf	postinc0,c
  4623  001AA6  06E8               decf	wreg
  4624  001AA8  E1FD               bnz	clear_1
  4625                           ; Clear objects allocated to COMRAM (5 bytes)
  4626                           	global __pbssCOMRAM
  4627  001AAA  6A49               clrf	(__pbssCOMRAM+4)&0xffh,c
  4628  001AAC  6A48               clrf	(__pbssCOMRAM+3)&0xffh,c
  4629  001AAE  6A47               clrf	(__pbssCOMRAM+2)&0xffh,c
  4630  001AB0  6A46               clrf	(__pbssCOMRAM+1)&0xffh,c
  4631  001AB2  6A45               clrf	(__pbssCOMRAM+0)&0xffh,c
  4632                           psect cinit,class=CODE,delta=1
  4633                           global end_of_initialization,__end_of__initialization
  4634                           
  4635                           ;End of C runtime variable initialization code
  4636                           
  4637  001AB4                     end_of_initialization:
  4638  001AB4                     __end_of__initialization:movlb 0
  4639  001AB6  EFA8  F003         goto _main	;jump to C main() function
  4640                           psect	cstackBANK1,class=BANK1,space=1
  4641                           global __pcstackBANK1
  4642  0001A2                     __pcstackBANK1:
  4643                           	global	?_init_uart_recv
  4644  0001A2                     ?_init_uart_recv:	; 0 bytes @ 0x0
  4645                           	global	?_init_i2c
  4646  0001A2                     ?_init_i2c:	; 0 bytes @ 0x0
  4647                           	global	?_OpenTimer1
  4648  0001A2                     ?_OpenTimer1:	; 0 bytes @ 0x0
  4649                           	global	?_i2c_configure_slave
  4650  0001A2                     ?_i2c_configure_slave:	; 0 bytes @ 0x0
  4651                           	global	?_OpenUSART
  4652  0001A2                     ?_OpenUSART:	; 0 bytes @ 0x0
  4653                           	global	?_Delay1KTCYx
  4654  0001A2                     ?_Delay1KTCYx:	; 0 bytes @ 0x0
  4655                           	global	?_OpenADC
  4656  0001A2                     ?_OpenADC:	; 0 bytes @ 0x0
  4657                           	global	?_SetChanADC
  4658  0001A2                     ?_SetChanADC:	; 0 bytes @ 0x0
  4659  0001A2                     ??_ConvertADC:	; 0 bytes @ 0x0
  4660  0001A2                     ??_enable_interrupts:	; 0 bytes @ 0x0
  4661                           	global	?_init_queue
  4662  0001A2                     ?_init_queue:	; 0 bytes @ 0x0
  4663                           	global	?_check_msg
  4664  0001A2                     ?_check_msg:	; 1 bytes @ 0x0
  4665                           	global	?_timer0_lthread
  4666  0001A2                     ?_timer0_lthread:	; 2 bytes @ 0x0
  4667                           	global	?_timer1_lthread
  4668  0001A2                     ?_timer1_lthread:	; 2 bytes @ 0x0
  4669                           	global	?_uart_lthread
  4670  0001A2                     ?_uart_lthread:	; 2 bytes @ 0x0
  4671                           	global	?_memcpy
  4672  0001A2                     ?_memcpy:	; 2 bytes @ 0x0
  4673                           	global	?_in_high_int
  4674  0001A2                     ?_in_high_int:	; 2 bytes @ 0x0
  4675                           	global	i2c_configure_slave@addr
  4676  0001A2                     i2c_configure_slave@addr:	; 1 bytes @ 0x0
  4677                           	global	OpenADC@config
  4678  0001A2                     OpenADC@config:	; 1 bytes @ 0x0
  4679                           	global	SetChanADC@channel
  4680  0001A2                     SetChanADC@channel:	; 1 bytes @ 0x0
  4681                           	global	OpenTimer1@config
  4682  0001A2                     OpenTimer1@config:	; 1 bytes @ 0x0
  4683                           	global	OpenUSART@config
  4684  0001A2                     OpenUSART@config:	; 1 bytes @ 0x0
  4685                           	global	Delay1KTCYx@unit
  4686  0001A2                     Delay1KTCYx@unit:	; 1 bytes @ 0x0
  4687                           	global	init_queue@qptr
  4688  0001A2                     init_queue@qptr:	; 2 bytes @ 0x0
  4689                           	global	check_msg@qptr
  4690  0001A2                     check_msg@qptr:	; 2 bytes @ 0x0
  4691                           	global	init_i2c@ic
  4692  0001A2                     init_i2c@ic:	; 2 bytes @ 0x0
  4693                           	global	init_uart_recv@uc
  4694  0001A2                     init_uart_recv@uc:	; 2 bytes @ 0x0
  4695  0001A2                     timer0_lthread@tptr:	; 2 bytes @ 0x0
  4696                           	global	timer1_lthread@tptr
  4697  0001A2                     timer1_lthread@tptr:	; 2 bytes @ 0x0
  4698  0001A2                     uart_lthread@uptr:	; 2 bytes @ 0x0
  4699                           	global	memcpy@d1
  4700  0001A2                     memcpy@d1:	; 2 bytes @ 0x0
  4701  0001A2                     	ds   1
  4702  0001A3                     ??_OpenTimer1:	; 0 bytes @ 0x1
  4703  0001A3                     ??_i2c_configure_slave:	; 0 bytes @ 0x1
  4704  0001A3                     ??_Delay1KTCYx:	; 0 bytes @ 0x1
  4705  0001A3                     ??_SetChanADC:	; 0 bytes @ 0x1
  4706                           	global	OpenADC@config2
  4707  0001A3                     OpenADC@config2:	; 1 bytes @ 0x1
  4708                           	global	OpenUSART@spbrg
  4709  0001A3                     OpenUSART@spbrg:	; 2 bytes @ 0x1
  4710  0001A3                     	ds   1
  4711  0001A4                     ??_init_uart_recv:	; 0 bytes @ 0x2
  4712  0001A4                     ??_init_i2c:	; 0 bytes @ 0x2
  4713  0001A4                     ??_in_high_int:	; 0 bytes @ 0x2
  4714  0001A4                     ??_init_queue:	; 0 bytes @ 0x2
  4715  0001A4                     ??_check_msg:	; 0 bytes @ 0x2
  4716                           	global	?_in_low_int
  4717  0001A4                     ?_in_low_int:	; 2 bytes @ 0x2
  4718                           	global	OpenADC@portconfig
  4719  0001A4                     OpenADC@portconfig:	; 1 bytes @ 0x2
  4720  0001A4                     timer0_lthread@msgtype:	; 2 bytes @ 0x2
  4721  0001A4                     timer1_lthread@msgtype:	; 2 bytes @ 0x2
  4722                           	global	uart_lthread@msgtype
  4723  0001A4                     uart_lthread@msgtype:	; 2 bytes @ 0x2
  4724                           	global	memcpy@s1
  4725  0001A4                     memcpy@s1:	; 2 bytes @ 0x2
  4726  0001A4                     	ds   1
  4727  0001A5                     ??_OpenUSART:	; 0 bytes @ 0x3
  4728  0001A5                     ??_OpenADC:	; 0 bytes @ 0x3
  4729                           	global	init_queue@i
  4730  0001A5                     init_queue@i:	; 1 bytes @ 0x3
  4731  0001A5                     	ds   1
  4732  0001A6                     ??_init_queues:	; 0 bytes @ 0x4
  4733  0001A6                     ??_in_low_int:	; 0 bytes @ 0x4
  4734                           	global	?_in_main
  4735  0001A6                     ?_in_main:	; 2 bytes @ 0x4
  4736  0001A6                     timer0_lthread@length:	; 2 bytes @ 0x4
  4737  0001A6                     timer1_lthread@length:	; 2 bytes @ 0x4
  4738                           	global	uart_lthread@length
  4739  0001A6                     uart_lthread@length:	; 2 bytes @ 0x4
  4740                           	global	memcpy@n
  4741  0001A6                     memcpy@n:	; 2 bytes @ 0x4
  4742  0001A6                     	ds   1
  4743                           	global	?_init_timer1_lthread
  4744  0001A7                     ?_init_timer1_lthread:	; 0 bytes @ 0x5
  4745                           	global	init_timer1_lthread@tptr
  4746  0001A7                     init_timer1_lthread@tptr:	; 2 bytes @ 0x5
  4747  0001A7                     	ds   1
  4748  0001A8                     ??_block_on_To_msgqueues:	; 0 bytes @ 0x6
  4749  0001A8                     ??_memcpy:	; 0 bytes @ 0x6
  4750  0001A8                     ??_in_main:	; 0 bytes @ 0x6
  4751                           	global	timer0_lthread@msgbuffer
  4752  0001A8                     timer0_lthread@msgbuffer:	; 2 bytes @ 0x6
  4753                           	global	timer1_lthread@msgbuffer
  4754  0001A8                     timer1_lthread@msgbuffer:	; 2 bytes @ 0x6
  4755                           	global	uart_lthread@msgbuffer
  4756  0001A8                     uart_lthread@msgbuffer:	; 2 bytes @ 0x6
  4757                           	global	memcpy@d
  4758  0001A8                     memcpy@d:	; 2 bytes @ 0x6
  4759  0001A8                     	ds   1
  4760  0001A9                     ??_init_timer1_lthread:	; 0 bytes @ 0x7
  4761  0001A9                     	ds   1
  4762  0001AA                     ??_timer0_lthread:	; 0 bytes @ 0x8
  4763  0001AA                     ??_timer1_lthread:	; 0 bytes @ 0x8
  4764  0001AA                     ??_uart_lthread:	; 0 bytes @ 0x8
  4765                           	global	timer0_lthread@msgval
  4766  0001AA                     timer0_lthread@msgval:	; 2 bytes @ 0x8
  4767                           	global	memcpy@s
  4768  0001AA                     memcpy@s:	; 2 bytes @ 0x8
  4769  0001AA                     	ds   2
  4770                           	global	?_send_msg
  4771  0001AC                     ?_send_msg:	; 1 bytes @ 0xA
  4772                           	global	?_recv_msg
  4773  0001AC                     ?_recv_msg:	; 1 bytes @ 0xA
  4774                           	global	send_msg@qptr
  4775  0001AC                     send_msg@qptr:	; 2 bytes @ 0xA
  4776                           	global	recv_msg@qptr
  4777  0001AC                     recv_msg@qptr:	; 2 bytes @ 0xA
  4778  0001AC                     	ds   2
  4779                           	global	send_msg@length
  4780  0001AE                     send_msg@length:	; 1 bytes @ 0xC
  4781                           	global	recv_msg@maxlength
  4782  0001AE                     recv_msg@maxlength:	; 1 bytes @ 0xC
  4783  0001AE                     	ds   1
  4784                           	global	send_msg@msgtype
  4785  0001AF                     send_msg@msgtype:	; 1 bytes @ 0xD
  4786                           	global	recv_msg@msgtype
  4787  0001AF                     recv_msg@msgtype:	; 2 bytes @ 0xD
  4788  0001AF                     	ds   1
  4789                           	global	send_msg@data
  4790  0001B0                     send_msg@data:	; 2 bytes @ 0xE
  4791  0001B0                     	ds   1
  4792                           	global	recv_msg@data
  4793  0001B1                     recv_msg@data:	; 2 bytes @ 0xF
  4794  0001B1                     	ds   1
  4795  0001B2                     ??_send_msg:	; 0 bytes @ 0x10
  4796  0001B2                     	ds   1
  4797  0001B3                     ??_recv_msg:	; 0 bytes @ 0x11
  4798                           	global	send_msg@tlength
  4799  0001B3                     send_msg@tlength:	; 2 bytes @ 0x11
  4800  0001B3                     	ds   2
  4801                           	global	send_msg@slot
  4802  0001B5                     send_msg@slot:	; 1 bytes @ 0x13
  4803                           	global	recv_msg@slot
  4804  0001B5                     recv_msg@slot:	; 1 bytes @ 0x13
  4805  0001B5                     	ds   1
  4806                           	global	send_msg@qmsg
  4807  0001B6                     send_msg@qmsg:	; 2 bytes @ 0x14
  4808                           	global	recv_msg@tlength
  4809  0001B6                     recv_msg@tlength:	; 2 bytes @ 0x14
  4810  0001B6                     	ds   2
  4811                           	global	?_FromMainLow_sendmsg
  4812  0001B8                     ?_FromMainLow_sendmsg:	; 1 bytes @ 0x16
  4813                           	global	FromMainLow_sendmsg@length
  4814  0001B8                     FromMainLow_sendmsg@length:	; 1 bytes @ 0x16
  4815                           	global	recv_msg@qmsg
  4816  0001B8                     recv_msg@qmsg:	; 2 bytes @ 0x16
  4817  0001B8                     	ds   1
  4818                           	global	FromMainLow_sendmsg@msgtype
  4819  0001B9                     FromMainLow_sendmsg@msgtype:	; 1 bytes @ 0x17
  4820  0001B9                     	ds   1
  4821                           	global	?_ToMainHigh_recvmsg
  4822  0001BA                     ?_ToMainHigh_recvmsg:	; 1 bytes @ 0x18
  4823                           	global	?_ToMainLow_recvmsg
  4824  0001BA                     ?_ToMainLow_recvmsg:	; 1 bytes @ 0x18
  4825                           	global	ToMainLow_recvmsg@maxlength
  4826  0001BA                     ToMainLow_recvmsg@maxlength:	; 1 bytes @ 0x18
  4827                           	global	ToMainHigh_recvmsg@maxlength
  4828  0001BA                     ToMainHigh_recvmsg@maxlength:	; 1 bytes @ 0x18
  4829                           	global	FromMainLow_sendmsg@data
  4830  0001BA                     FromMainLow_sendmsg@data:	; 2 bytes @ 0x18
  4831  0001BA                     	ds   1
  4832                           	global	ToMainLow_recvmsg@msgtype
  4833  0001BB                     ToMainLow_recvmsg@msgtype:	; 2 bytes @ 0x19
  4834                           	global	ToMainHigh_recvmsg@msgtype
  4835  0001BB                     ToMainHigh_recvmsg@msgtype:	; 2 bytes @ 0x19
  4836  0001BB                     	ds   1
  4837  0001BC                     ??_FromMainLow_sendmsg:	; 0 bytes @ 0x1A
  4838  0001BC                     	ds   1
  4839                           	global	ToMainLow_recvmsg@data
  4840  0001BD                     ToMainLow_recvmsg@data:	; 2 bytes @ 0x1B
  4841                           	global	ToMainHigh_recvmsg@data
  4842  0001BD                     ToMainHigh_recvmsg@data:	; 2 bytes @ 0x1B
  4843  0001BD                     	ds   2
  4844  0001BF                     ??_ToMainHigh_recvmsg:	; 0 bytes @ 0x1D
  4845  0001BF                     ??_ToMainLow_recvmsg:	; 0 bytes @ 0x1D
  4846  0001BF                     ??_main:	; 0 bytes @ 0x1D
  4847  0001BF                     	ds   1
  4848                           	global	main@msgbuffer
  4849  0001C0                     main@msgbuffer:	; 11 bytes @ 0x1E
  4850  0001C0                     	ds   11
  4851                           	global	main@uthread_data
  4852  0001CB                     main@uthread_data:	; 2 bytes @ 0x29
  4853  0001CB                     	ds   2
  4854                           	global	main@t0thread_data
  4855  0001CD                     main@t0thread_data:	; 2 bytes @ 0x2B
  4856  0001CD                     	ds   2
  4857                           	global	main@last_reg_recvd
  4858  0001CF                     main@last_reg_recvd:	; 1 bytes @ 0x2D
  4859  0001CF                     	ds   1
  4860                           	global	main@t1thread_data
  4861  0001D0                     main@t1thread_data:	; 2 bytes @ 0x2E
  4862  0001D0                     	ds   2
  4863                           	global	main@uc
  4864  0001D2                     main@uc:	; 5 bytes @ 0x30
  4865  0001D2                     	ds   5
  4866                           	global	main@length
  4867  0001D7                     main@length:	; 1 bytes @ 0x35
  4868  0001D7                     	ds   1
  4869                           	global	main@msgtype
  4870  0001D8                     main@msgtype:	; 1 bytes @ 0x36
  4871  0001D8                     	ds   1
  4872                           	global	main@ic
  4873  0001D9                     main@ic:	; 28 bytes @ 0x37
  4874  0001D9                     	ds   28
  4875                           psect	cstackBANK0,class=BANK0,space=1
  4876                           global __pcstackBANK0
  4877  0000B8                     __pcstackBANK0:
  4878                           	global	i2recv_msg@slot
  4879  0000B8                     i2recv_msg@slot:	; 1 bytes @ 0x0
  4880                           	global	i2send_msg@tlength
  4881  0000B8                     i2send_msg@tlength:	; 2 bytes @ 0x0
  4882  0000B8                     	ds   1
  4883                           	global	i2recv_msg@tlength
  4884  0000B9                     i2recv_msg@tlength:	; 2 bytes @ 0x1
  4885  0000B9                     	ds   1
  4886                           	global	i2send_msg@slot
  4887  0000BA                     i2send_msg@slot:	; 1 bytes @ 0x2
  4888  0000BA                     	ds   1
  4889                           	global	i2send_msg@qmsg
  4890  0000BB                     i2send_msg@qmsg:	; 2 bytes @ 0x3
  4891                           	global	i2recv_msg@qmsg
  4892  0000BB                     i2recv_msg@qmsg:	; 2 bytes @ 0x3
  4893  0000BB                     	ds   2
  4894                           	global	?_ToMainHigh_sendmsg
  4895  0000BD                     ?_ToMainHigh_sendmsg:	; 1 bytes @ 0x5
  4896                           	global	?_FromMainLow_recvmsg
  4897  0000BD                     ?_FromMainLow_recvmsg:	; 1 bytes @ 0x5
  4898                           	global	?_FromMainHigh_recvmsg
  4899  0000BD                     ?_FromMainHigh_recvmsg:	; 1 bytes @ 0x5
  4900                           	global	ToMainHigh_sendmsg@length
  4901  0000BD                     ToMainHigh_sendmsg@length:	; 1 bytes @ 0x5
  4902                           	global	FromMainLow_recvmsg@maxlength
  4903  0000BD                     FromMainLow_recvmsg@maxlength:	; 1 bytes @ 0x5
  4904                           	global	FromMainHigh_recvmsg@maxlength
  4905  0000BD                     FromMainHigh_recvmsg@maxlength:	; 1 bytes @ 0x5
  4906  0000BD                     	ds   1
  4907                           	global	ToMainHigh_sendmsg@msgtype
  4908  0000BE                     ToMainHigh_sendmsg@msgtype:	; 1 bytes @ 0x6
  4909                           	global	FromMainLow_recvmsg@msgtype
  4910  0000BE                     FromMainLow_recvmsg@msgtype:	; 2 bytes @ 0x6
  4911                           	global	FromMainHigh_recvmsg@msgtype
  4912  0000BE                     FromMainHigh_recvmsg@msgtype:	; 2 bytes @ 0x6
  4913  0000BE                     	ds   1
  4914                           	global	ToMainHigh_sendmsg@data
  4915  0000BF                     ToMainHigh_sendmsg@data:	; 2 bytes @ 0x7
  4916  0000BF                     	ds   1
  4917                           	global	FromMainLow_recvmsg@data
  4918  0000C0                     FromMainLow_recvmsg@data:	; 2 bytes @ 0x8
  4919                           	global	FromMainHigh_recvmsg@data
  4920  0000C0                     FromMainHigh_recvmsg@data:	; 2 bytes @ 0x8
  4921  0000C0                     	ds   2
  4922  0000C2                     ??_i2c_int_handler:	; 0 bytes @ 0xA
  4923  0000C2                     ??_timer0_int_handler:	; 0 bytes @ 0xA
  4924  0000C2                     	ds   2
  4925                           	global	timer0_int_handler@msgtype
  4926  0000C4                     timer0_int_handler@msgtype:	; 2 bytes @ 0xC
  4927                           	global	i2c_int_handler@data
  4928  0000C4                     i2c_int_handler@data:	; 10 bytes @ 0xC
  4929  0000C4                     	ds   2
  4930                           	global	timer0_int_handler@length
  4931  0000C6                     timer0_int_handler@length:	; 2 bytes @ 0xE
  4932  0000C6                     	ds   2
  4933                           	global	timer0_int_handler@val
  4934  0000C8                     timer0_int_handler@val:	; 2 bytes @ 0x10
  4935  0000C8                     	ds   6
  4936                           	global	i2c_int_handler@empty
  4937  0000CE                     i2c_int_handler@empty:	; 2 bytes @ 0x16
  4938  0000CE                     	ds   2
  4939                           	global	i2c_int_handler@error_buf
  4940  0000D0                     i2c_int_handler@error_buf:	; 3 bytes @ 0x18
  4941  0000D0                     	ds   3
  4942                           	global	i2c_int_handler@data_written
  4943  0000D3                     i2c_int_handler@data_written:	; 1 bytes @ 0x1B
  4944  0000D3                     	ds   1
  4945                           	global	i2c_int_handler@overrun_error
  4946  0000D4                     i2c_int_handler@overrun_error:	; 1 bytes @ 0x1C
  4947  0000D4                     	ds   1
  4948                           	global	i2c_int_handler@length
  4949  0000D5                     i2c_int_handler@length:	; 2 bytes @ 0x1D
  4950  0000D5                     	ds   2
  4951                           	global	i2c_int_handler@i2c_data
  4952  0000D7                     i2c_int_handler@i2c_data:	; 1 bytes @ 0x1F
  4953  0000D7                     	ds   1
  4954                           	global	i2c_int_handler@msgtype
  4955  0000D8                     i2c_int_handler@msgtype:	; 1 bytes @ 0x20
  4956  0000D8                     	ds   1
  4957                           	global	i2c_int_handler@msg_to_send
  4958  0000D9                     i2c_int_handler@msg_to_send:	; 1 bytes @ 0x21
  4959  0000D9                     	ds   1
  4960                           	global	i2c_int_handler@msg_ready
  4961  0000DA                     i2c_int_handler@msg_ready:	; 1 bytes @ 0x22
  4962  0000DA                     	ds   1
  4963                           	global	i2c_int_handler@data_read
  4964  0000DB                     i2c_int_handler@data_read:	; 1 bytes @ 0x23
  4965  0000DB                     	ds   1
  4966  0000DC                     ??_InterruptHandlerHigh:	; 0 bytes @ 0x24
  4967  0000DC                     	ds   14
  4968                           psect	cstackCOMRAM,class=COMRAM,space=1
  4969                           global __pcstackCOMRAM
  4970  000001                     __pcstackCOMRAM:
  4971  000001                     ?_i2c_int_handler:	; 0 bytes @ 0x0
  4972  000001                     ?_timer0_int_handler:	; 0 bytes @ 0x0
  4973  000001                     ?_SleepIfOkay:	; 0 bytes @ 0x0
  4974  000001                     ?_timer1_int_handler:	; 0 bytes @ 0x0
  4975  000001                     ?_adc_int_handler:	; 0 bytes @ 0x0
  4976  000001                     ?_uart_recv_int_handler:	; 0 bytes @ 0x0
  4977  000001                     ?_init_queues:	; 0 bytes @ 0x0
  4978  000001                     ?_block_on_To_msgqueues:	; 0 bytes @ 0x0
  4979  000001                     ??_ReadUSART:	; 0 bytes @ 0x0
  4980  000001                     ?_ConvertADC:	; 0 bytes @ 0x0
  4981                           	global	?_WriteTimer1
  4982  000001                     ?_WriteTimer1:	; 0 bytes @ 0x0
  4983  000001                     ?_enable_interrupts:	; 0 bytes @ 0x0
  4984  000001                     ?_InterruptHandlerHigh:	; 0 bytes @ 0x0
  4985  000001                     ?_InterruptHandlerLow:	; 0 bytes @ 0x0
  4986  000001                     ?_main:	; 0 bytes @ 0x0
  4987  000001                     ?_enter_sleep_mode:	; 0 bytes @ 0x0
  4988  000001                     ?_ReadUSART:	; 1 bytes @ 0x0
  4989                           	global	?_ReadTimer1
  4990  000001                     ?_ReadTimer1:	; 2 bytes @ 0x0
  4991                           	global	?_ReadADC
  4992  000001                     ?_ReadADC:	; 2 bytes @ 0x0
  4993                           	global	?i1_memcpy
  4994  000001                     ?i1_memcpy:	; 2 bytes @ 0x0
  4995                           	global	ReadUSART@data
  4996  000001                     ReadUSART@data:	; 1 bytes @ 0x0
  4997                           	global	WriteTimer1@timer1
  4998  000001                     WriteTimer1@timer1:	; 2 bytes @ 0x0
  4999                           	global	i1memcpy@d1
  5000  000001                     i1memcpy@d1:	; 2 bytes @ 0x0
  5001  000001                     	ds   2
  5002  000003                     ??_ReadTimer1:	; 0 bytes @ 0x2
  5003  000003                     ??_WriteTimer1:	; 0 bytes @ 0x2
  5004  000003                     ??_ReadADC:	; 0 bytes @ 0x2
  5005                           	global	ReadTimer1@timer
  5006  000003                     ReadTimer1@timer:	; 2 bytes @ 0x2
  5007                           	global	WriteTimer1@timer
  5008  000003                     WriteTimer1@timer:	; 2 bytes @ 0x2
  5009                           	global	i1memcpy@s1
  5010  000003                     i1memcpy@s1:	; 2 bytes @ 0x2
  5011  000003                     	ds   2
  5012                           	global	i1memcpy@n
  5013  000005                     i1memcpy@n:	; 2 bytes @ 0x4
  5014  000005                     	ds   2
  5015  000007                     ??i1_memcpy:	; 0 bytes @ 0x6
  5016                           	global	i1memcpy@d
  5017  000007                     i1memcpy@d:	; 2 bytes @ 0x6
  5018  000007                     	ds   2
  5019                           	global	i1memcpy@s
  5020  000009                     i1memcpy@s:	; 2 bytes @ 0x8
  5021  000009                     	ds   2
  5022                           	global	?i1_send_msg
  5023  00000B                     ?i1_send_msg:	; 1 bytes @ 0xA
  5024                           	global	i1send_msg@qptr
  5025  00000B                     i1send_msg@qptr:	; 2 bytes @ 0xA
  5026  00000B                     	ds   2
  5027                           	global	i1send_msg@length
  5028  00000D                     i1send_msg@length:	; 1 bytes @ 0xC
  5029  00000D                     	ds   1
  5030                           	global	i1send_msg@msgtype
  5031  00000E                     i1send_msg@msgtype:	; 1 bytes @ 0xD
  5032  00000E                     	ds   1
  5033                           	global	i1send_msg@data
  5034  00000F                     i1send_msg@data:	; 2 bytes @ 0xE
  5035  00000F                     	ds   2
  5036  000011                     ??i1_send_msg:	; 0 bytes @ 0x10
  5037  000011                     	ds   1
  5038                           	global	i1send_msg@tlength
  5039  000012                     i1send_msg@tlength:	; 2 bytes @ 0x11
  5040  000012                     	ds   2
  5041                           	global	i1send_msg@slot
  5042  000014                     i1send_msg@slot:	; 1 bytes @ 0x13
  5043  000014                     	ds   1
  5044                           	global	i1send_msg@qmsg
  5045  000015                     i1send_msg@qmsg:	; 2 bytes @ 0x14
  5046  000015                     	ds   2
  5047                           	global	?_ToMainLow_sendmsg
  5048  000017                     ?_ToMainLow_sendmsg:	; 1 bytes @ 0x16
  5049                           	global	ToMainLow_sendmsg@length
  5050  000017                     ToMainLow_sendmsg@length:	; 1 bytes @ 0x16
  5051  000017                     	ds   1
  5052                           	global	ToMainLow_sendmsg@msgtype
  5053  000018                     ToMainLow_sendmsg@msgtype:	; 1 bytes @ 0x17
  5054  000018                     	ds   1
  5055                           	global	ToMainLow_sendmsg@data
  5056  000019                     ToMainLow_sendmsg@data:	; 2 bytes @ 0x18
  5057  000019                     	ds   2
  5058  00001B                     ??_timer1_int_handler:	; 0 bytes @ 0x1A
  5059  00001B                     ??_adc_int_handler:	; 0 bytes @ 0x1A
  5060  00001B                     ??_uart_recv_int_handler:	; 0 bytes @ 0x1A
  5061  00001B                     ??_ToMainLow_sendmsg:	; 0 bytes @ 0x1A
  5062  00001B                     	ds   2
  5063                           	global	timer1_int_handler@temp
  5064  00001D                     timer1_int_handler@temp:	; 2 bytes @ 0x1C
  5065                           	global	adc_int_handler@value
  5066  00001D                     adc_int_handler@value:	; 2 bytes @ 0x1C
  5067  00001D                     	ds   2
  5068                           	global	timer1_int_handler@result
  5069  00001F                     timer1_int_handler@result:	; 2 bytes @ 0x1E
  5070  00001F                     	ds   2
  5071  000021                     ??_InterruptHandlerLow:	; 0 bytes @ 0x20
  5072  000021                     	ds   17
  5073                           	global	?_WriteTimer0
  5074  000032                     ?_WriteTimer0:	; 0 bytes @ 0x31
  5075  000032                     ??_enter_sleep_mode:	; 0 bytes @ 0x31
  5076                           	global	?_start_i2c_slave_reply
  5077  000032                     ?_start_i2c_slave_reply:	; 0 bytes @ 0x31
  5078                           	global	?_handle_start
  5079  000032                     ?_handle_start:	; 0 bytes @ 0x31
  5080                           	global	?i2_check_msg
  5081  000032                     ?i2_check_msg:	; 1 bytes @ 0x31
  5082                           	global	?i2_in_high_int
  5083  000032                     ?i2_in_high_int:	; 2 bytes @ 0x31
  5084                           	global	?i2_memcpy
  5085  000032                     ?i2_memcpy:	; 2 bytes @ 0x31
  5086                           	global	start_i2c_slave_reply@length
  5087  000032                     start_i2c_slave_reply@length:	; 1 bytes @ 0x31
  5088                           	global	handle_start@data_read
  5089  000032                     handle_start@data_read:	; 1 bytes @ 0x31
  5090                           	global	WriteTimer0@timer0
  5091  000032                     WriteTimer0@timer0:	; 2 bytes @ 0x31
  5092                           	global	i2check_msg@qptr
  5093  000032                     i2check_msg@qptr:	; 2 bytes @ 0x31
  5094                           	global	i2memcpy@d1
  5095  000032                     i2memcpy@d1:	; 2 bytes @ 0x31
  5096  000032                     	ds   1
  5097  000033                     ??_handle_start:	; 0 bytes @ 0x32
  5098                           	global	start_i2c_slave_reply@msg
  5099  000033                     start_i2c_slave_reply@msg:	; 2 bytes @ 0x32
  5100  000033                     	ds   1
  5101  000034                     ??_WriteTimer0:	; 0 bytes @ 0x33
  5102  000034                     ??i2_in_high_int:	; 0 bytes @ 0x33
  5103  000034                     ??i2_check_msg:	; 0 bytes @ 0x33
  5104                           	global	?i2_in_low_int
  5105  000034                     ?i2_in_low_int:	; 2 bytes @ 0x33
  5106                           	global	WriteTimer0@timer
  5107  000034                     WriteTimer0@timer:	; 2 bytes @ 0x33
  5108                           	global	i2memcpy@s1
  5109  000034                     i2memcpy@s1:	; 2 bytes @ 0x33
  5110  000034                     	ds   1
  5111  000035                     ??_start_i2c_slave_reply:	; 0 bytes @ 0x34
  5112  000035                     	ds   1
  5113  000036                     ??_SleepIfOkay:	; 0 bytes @ 0x35
  5114  000036                     ??i2_in_low_int:	; 0 bytes @ 0x35
  5115                           	global	i2memcpy@n
  5116  000036                     i2memcpy@n:	; 2 bytes @ 0x35
  5117  000036                     	ds   2
  5118  000038                     ??i2_memcpy:	; 0 bytes @ 0x37
  5119                           	global	i2memcpy@d
  5120  000038                     i2memcpy@d:	; 2 bytes @ 0x37
  5121  000038                     	ds   2
  5122                           	global	i2memcpy@s
  5123  00003A                     i2memcpy@s:	; 2 bytes @ 0x39
  5124  00003A                     	ds   2
  5125                           	global	?i2_send_msg
  5126  00003C                     ?i2_send_msg:	; 1 bytes @ 0x3B
  5127                           	global	?i2_recv_msg
  5128  00003C                     ?i2_recv_msg:	; 1 bytes @ 0x3B
  5129                           	global	i2send_msg@qptr
  5130  00003C                     i2send_msg@qptr:	; 2 bytes @ 0x3B
  5131                           	global	i2recv_msg@qptr
  5132  00003C                     i2recv_msg@qptr:	; 2 bytes @ 0x3B
  5133  00003C                     	ds   2
  5134                           	global	i2send_msg@length
  5135  00003E                     i2send_msg@length:	; 1 bytes @ 0x3D
  5136                           	global	i2recv_msg@maxlength
  5137  00003E                     i2recv_msg@maxlength:	; 1 bytes @ 0x3D
  5138  00003E                     	ds   1
  5139                           	global	i2send_msg@msgtype
  5140  00003F                     i2send_msg@msgtype:	; 1 bytes @ 0x3E
  5141                           	global	i2recv_msg@msgtype
  5142  00003F                     i2recv_msg@msgtype:	; 2 bytes @ 0x3E
  5143  00003F                     	ds   1
  5144                           	global	i2send_msg@data
  5145  000040                     i2send_msg@data:	; 2 bytes @ 0x3F
  5146  000040                     	ds   1
  5147                           	global	i2recv_msg@data
  5148  000041                     i2recv_msg@data:	; 2 bytes @ 0x40
  5149  000041                     	ds   1
  5150  000042                     ??i2_send_msg:	; 0 bytes @ 0x41
  5151  000042                     	ds   1
  5152  000043                     ??_ToMainHigh_sendmsg:	; 0 bytes @ 0x42
  5153  000043                     ??i2_recv_msg:	; 0 bytes @ 0x42
  5154  000043                     	ds   2
  5155  000045                     ??_FromMainLow_recvmsg:	; 0 bytes @ 0x44
  5156  000045                     ??_FromMainHigh_recvmsg:	; 0 bytes @ 0x44
  5157                           ;!
  5158                           ;!Data Sizes:
  5159                           ;!    Strings     0
  5160                           ;!    Constant    0
  5161                           ;!    Data        0
  5162                           ;!    BSS         223
  5163                           ;!    Persistent  4
  5164                           ;!    Stack       0
  5165                           ;!
  5166                           ;!Auto Spaces:
  5167                           ;!    Space          Size  Autos    Used
  5168                           ;!    COMRAM          127     68      77
  5169                           ;!    BANK0           128     50     106
  5170                           ;!    BANK1           256     83     245
  5171                           ;!    BANK2           256      0       0
  5172                           ;!    BANK3           256      0       0
  5173                           
  5174                           ;!
  5175                           ;!Pointer List with Targets:
  5176                           ;!
  5177                           ;!    ?_ReadTimer1	unsigned int  size(2) Largest target is 2
  5178                           ;!		 -> WriteTimer1@timer(COMRAM[2]), ReadTimer1@timer(COMRAM[2]), 
  5179                           ;!
  5180                           ;!    ?_ReadADC	int  size(2) Largest target is 0
  5181                           ;!
  5182                           ;!    ?_memcpy	PTR void  size(2) Largest target is 54
  5183                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@data(BANK0[10]), FromMainHigh_
                                 MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
  5184                           ;!		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 
  5185                           ;!
  5186                           ;!    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
  5187                           ;!		 -> main@uthread_data(BANK1[2]), 
  5188                           ;!
  5189                           ;!    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
  5190                           ;!		 -> main@t0thread_data(BANK1[2]), 
  5191                           ;!
  5192                           ;!    ?_in_high_int	int  size(2) Largest target is 0
  5193                           ;!
  5194                           ;!    memcpy@d1	PTR void  size(2) Largest target is 54
  5195                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@data(BANK0[10]), FromMainHigh_
                                 MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
  5196                           ;!		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 
  5197                           ;!
  5198                           ;!    memcpy@d	PTR unsigned char  size(2) Largest target is 54
  5199                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@data(BANK0[10]), FromMainHigh_
                                 MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
  5200                           ;!		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 
  5201                           ;!
  5202                           ;!    memcpy@s1	PTR const void  size(2) Largest target is 54
  5203                           ;!		 -> adc_int_handler@value(COMRAM[2]), timer1_int_handler@result(COMRAM[2]), timer0_i
                                 nt_handler@val(BANK0[2]), NULL(NULL[0]), 
  5204                           ;!		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(
                                 BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
  5205                           ;!		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), main@uc(BANK1[5]), 
  5206                           ;!
  5207                           ;!    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
  5208                           ;!		 -> adc_int_handler@value(COMRAM[2]), timer1_int_handler@result(COMRAM[2]), timer0_i
                                 nt_handler@val(BANK0[2]), NULL(NULL[0]), 
  5209                           ;!		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(
                                 BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
  5210                           ;!		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), main@uc(BANK1[5]), 
  5211                           ;!
  5212                           ;!    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
  5213                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5214                           ;!
  5215                           ;!    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
  5216                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5217                           ;!
  5218                           ;!    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
  5219                           ;!		 -> main@t1thread_data(BANK1[2]), 
  5220                           ;!
  5221                           ;!    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target 
                                 is 2
  5222                           ;!		 -> main@t1thread_data(BANK1[2]), 
  5223                           ;!
  5224                           ;!    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
  5225                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5226                           ;!
  5227                           ;!    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
  5228                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5229                           ;!
  5230                           ;!    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
  5231                           ;!		 -> main@uc(BANK1[5]), 
  5232                           ;!
  5233                           ;!    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
  5234                           ;!		 -> NULL(NULL[0]), main@uc(BANK1[5]), 
  5235                           ;!
  5236                           ;!    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
  5237                           ;!		 -> main@ic(BANK1[28]), 
  5238                           ;!
  5239                           ;!    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 10
  5240                           ;!		 -> i2c_int_handler@empty(BANK0[2]), i2c_int_handler@data(BANK0[10]), 
  5241                           ;!
  5242                           ;!    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
  5243                           ;!		 -> NULL(NULL[0]), main@ic(BANK1[28]), 
  5244                           ;!
  5245                           ;!    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
  5246                           ;!		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
  5247                           ;!
  5248                           ;!    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
  5249                           ;!		 -> timer0_int_handler@val(BANK0[2]), 
  5250                           ;!
  5251                           ;!    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1023
  5252                           ;!		 -> RAM(DATA[1023]), 
  5253                           ;!
  5254                           ;!    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 10
  5255                           ;!		 -> i2c_int_handler@data(BANK0[10]), 
  5256                           ;!
  5257                           ;!    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
  5258                           ;!		 -> i2c_int_handler@msgtype(BANK0[1]), 
  5259                           ;!
  5260                           ;!    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 11
  5261                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5262                           ;!
  5263                           ;!    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
  5264                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5265                           ;!
  5266                           ;!    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
  5267                           ;!		 -> main@msgtype(BANK1[1]), 
  5268                           ;!
  5269                           ;!    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 3
  5270                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@error_buf(BANK0[3]), 
  5271                           ;!
  5272                           ;!    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
  5273                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5274                           ;!
  5275                           ;!    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
  5276                           ;!		 -> main@msgtype(BANK1[1]), 
  5277                           ;!
  5278                           ;!    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
  5279                           ;!		 -> adc_int_handler@value(COMRAM[2]), timer1_int_handler@result(COMRAM[2]), NULL(NUL
                                 L[0]), main@uc(BANK1[5]), 
  5280                           ;!
  5281                           ;!    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1023
  5282                           ;!		 -> RAM(DATA[1023]), i2c_int_handler@msgtype(BANK0[1]), main@msgtype(BANK1[1]), 
  5283                           ;!
  5284                           ;!    recv_msg@data	PTR void  size(2) Largest target is 11
  5285                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@data(BANK0[10]), main@msgbuffe
                                 r(BANK1[11]), 
  5286                           ;!
  5287                           ;!    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
  5288                           ;!		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK0[54]), 
  5289                           ;!
  5290                           ;!    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
  5291                           ;!		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK0[54]), 
  5292                           ;!
  5293                           ;!    sp__memcpy	PTR void  size(2) Largest target is 54
  5294                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@data(BANK0[10]), FromMainHigh_
                                 MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
  5295                           ;!		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 
  5296                           ;!
  5297                           ;!    send_msg@data	PTR void  size(2) Largest target is 11
  5298                           ;!		 -> adc_int_handler@value(COMRAM[2]), timer1_int_handler@result(COMRAM[2]), timer0_i
                                 nt_handler@val(BANK0[2]), NULL(NULL[0]), 
  5299                           ;!		 -> i2c_int_handler@error_buf(BANK0[3]), main@msgbuffer(BANK1[11]), main@uc(BANK1[5]
                                 ), 
  5300                           ;!
  5301                           ;!    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
  5302                           ;!		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK0[54]), 
  5303                           ;!
  5304                           ;!    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
  5305                           ;!		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK0[54]), 
  5306                           ;!
  5307                           ;!    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
  5308                           ;!		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK0[54]), 
  5309                           ;!
  5310                           
  5311                           
  5312                           ;!
  5313                           ;!Critical Paths under _main in COMRAM
  5314                           ;!
  5315                           ;!    None.
  5316                           ;!
  5317                           ;!Critical Paths under _InterruptHandlerHigh in COMRAM
  5318                           ;!
  5319                           ;!    _SleepIfOkay->i2_in_low_int
  5320                           ;!    _ToMainHigh_sendmsg->i2_send_msg
  5321                           ;!    _FromMainLow_recvmsg->i2_recv_msg
  5322                           ;!    _FromMainHigh_recvmsg->i2_recv_msg
  5323                           ;!    i2_in_low_int->i2_in_high_int
  5324                           ;!    i2_send_msg->i2_memcpy
  5325                           ;!    i2_recv_msg->i2_memcpy
  5326                           ;!    _InterruptHandlerLow->_timer1_int_handler
  5327                           ;!    _timer1_int_handler->_ToMainLow_sendmsg
  5328                           ;!    _adc_int_handler->_ToMainLow_sendmsg
  5329                           ;!    _uart_recv_int_handler->_ToMainLow_sendmsg
  5330                           ;!    _ToMainLow_sendmsg->i1_send_msg
  5331                           ;!    i1_send_msg->i1_memcpy
  5332                           ;!
  5333                           ;!Critical Paths under _main in BANK0
  5334                           ;!
  5335                           ;!    None.
  5336                           ;!
  5337                           ;!Critical Paths under _InterruptHandlerHigh in BANK0
  5338                           ;!
  5339                           ;!    _InterruptHandlerHigh->_i2c_int_handler
  5340                           ;!    _i2c_int_handler->_FromMainLow_recvmsg
  5341                           ;!    _timer0_int_handler->_FromMainHigh_recvmsg
  5342                           ;!    _ToMainHigh_sendmsg->i2_send_msg
  5343                           ;!    _FromMainLow_recvmsg->i2_recv_msg
  5344                           ;!    _FromMainHigh_recvmsg->i2_recv_msg
  5345                           ;!
  5346                           ;!Critical Paths under _main in BANK1
  5347                           ;!
  5348                           ;!    _main->_ToMainHigh_recvmsg
  5349                           ;!    _main->_ToMainLow_recvmsg
  5350                           ;!    _init_timer1_lthread->_OpenADC
  5351                           ;!    _init_queues->_init_queue
  5352                           ;!    _block_on_To_msgqueues->_in_main
  5353                           ;!    _in_main->_in_low_int
  5354                           ;!    _in_low_int->_in_high_int
  5355                           ;!    _ToMainHigh_recvmsg->_recv_msg
  5356                           ;!    _ToMainLow_recvmsg->_recv_msg
  5357                           ;!    _FromMainLow_sendmsg->_send_msg
  5358                           ;!    _send_msg->_memcpy
  5359                           ;!    _recv_msg->_memcpy
  5360                           ;!
  5361                           ;!Critical Paths under _InterruptHandlerHigh in BANK1
  5362                           ;!
  5363                           ;!    None.
  5364                           ;!
  5365                           ;!Critical Paths under _main in BANK2
  5366                           ;!
  5367                           ;!    None.
  5368                           ;!
  5369                           ;!Critical Paths under _InterruptHandlerHigh in BANK2
  5370                           ;!
  5371                           ;!    None.
  5372                           ;!
  5373                           ;!Critical Paths under _main in BANK3
  5374                           ;!
  5375                           ;!    None.
  5376                           ;!
  5377                           ;!Critical Paths under _InterruptHandlerHigh in BANK3
  5378                           ;!
  5379                           ;!    None.
  5380                           
  5381 ;;
  5382 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  5383 ;;
  5384                           
  5385                           ;!
  5386                           ;!Call Graph Tables:
  5387                           ;!
  5388                           ;! ---------------------------------------------------------------------------------
  5389                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  5390                           ;! ---------------------------------------------------------------------------------
  5391                           ;! (0) _main                                                56    56      0    4971
  5392                           ;!                                             29 BANK1     54    54      0
  5393                           ;!                     _init_uart_recv
  5394                           ;!                           _init_i2c
  5395                           ;!                _init_timer1_lthread
  5396                           ;!                        _init_queues
  5397                           ;!                         _OpenTimer1
  5398                           ;!                  _enable_interrupts
  5399                           ;!                _i2c_configure_slave
  5400                           ;!                          _OpenUSART
  5401                           ;!              _block_on_To_msgqueues
  5402                           ;!                 _ToMainHigh_recvmsg
  5403                           ;!                     _timer0_lthread
  5404                           ;!                  _ToMainLow_recvmsg
  5405                           ;!                     _timer1_lthread
  5406                           ;!                _FromMainLow_sendmsg
  5407                           ;!                       _uart_lthread
  5408                           ;! ---------------------------------------------------------------------------------
  5409                           ;! (1) _enable_interrupts                                    0     0      0       0
  5410                           ;! ---------------------------------------------------------------------------------
  5411                           ;! (1) _init_uart_recv                                       2     0      2      31
  5412                           ;!                                              0 BANK1      2     0      2
  5413                           ;! ---------------------------------------------------------------------------------
  5414                           ;! (1) _init_i2c                                             2     0      2      31
  5415                           ;!                                              0 BANK1      2     0      2
  5416                           ;! ---------------------------------------------------------------------------------
  5417                           ;! (1) _init_timer1_lthread                                  5     3      2     279
  5418                           ;!                                              5 BANK1      5     3      2
  5419                           ;!                            _OpenADC
  5420                           ;!                         _SetChanADC
  5421                           ;! ---------------------------------------------------------------------------------
  5422                           ;! (1) _init_queues                                          1     1      0     192
  5423                           ;!                                              4 BANK1      1     1      0
  5424                           ;!                         _init_queue
  5425                           ;! ---------------------------------------------------------------------------------
  5426                           ;! (1) _OpenTimer1                                           1     0      1      93
  5427                           ;!                                              0 BANK1      1     0      1
  5428                           ;! ---------------------------------------------------------------------------------
  5429                           ;! (1) _i2c_configure_slave                                  1     0      1      31
  5430                           ;!                                              0 BANK1      1     0      1
  5431                           ;! ---------------------------------------------------------------------------------
  5432                           ;! (1) _OpenUSART                                            3     0      3     310
  5433                           ;!                                              0 BANK1      3     0      3
  5434                           ;! ---------------------------------------------------------------------------------
  5435                           ;! (1) _block_on_To_msgqueues                                1     1      0      93
  5436                           ;!                                              6 BANK1      1     1      0
  5437                           ;!                            _in_main
  5438                           ;!                          _check_msg
  5439                           ;!                        _Delay1KTCYx
  5440                           ;! ---------------------------------------------------------------------------------
  5441                           ;! (2) _in_main                                              2     0      2       0
  5442                           ;!                                              4 BANK1      2     0      2
  5443                           ;!                         _in_low_int
  5444                           ;!                        _in_high_int
  5445                           ;! ---------------------------------------------------------------------------------
  5446                           ;! (3) _in_low_int                                           2     0      2       0
  5447                           ;!                                              2 BANK1      2     0      2
  5448                           ;!                        _in_high_int
  5449                           ;! ---------------------------------------------------------------------------------
  5450                           ;! (3) _in_high_int                                          2     0      2       0
  5451                           ;!                                              0 BANK1      2     0      2
  5452                           ;! ---------------------------------------------------------------------------------
  5453                           ;! (1) _ToMainHigh_recvmsg                                   5     0      5     772
  5454                           ;!                                             24 BANK1      5     0      5
  5455                           ;!                           _recv_msg
  5456                           ;! ---------------------------------------------------------------------------------
  5457                           ;! (1) _timer0_lthread                                      10     2      8      34
  5458                           ;!                                              0 BANK1     10     2      8
  5459                           ;! ---------------------------------------------------------------------------------
  5460                           ;! (1) _ToMainLow_recvmsg                                    5     0      5     772
  5461                           ;!                                             24 BANK1      5     0      5
  5462                           ;!                           _recv_msg
  5463                           ;! ---------------------------------------------------------------------------------
  5464                           ;! (1) _timer1_lthread                                      10     2      8      62
  5465                           ;!                                              0 BANK1     10     2      8
  5466                           ;!                         _ConvertADC
  5467                           ;! ---------------------------------------------------------------------------------
  5468                           ;! (1) _FromMainLow_sendmsg                                  4     0      4     741
  5469                           ;!                                             22 BANK1      4     0      4
  5470                           ;!                           _send_msg
  5471                           ;! ---------------------------------------------------------------------------------
  5472                           ;! (1) _uart_lthread                                         8     0      8     124
  5473                           ;!                                              0 BANK1      8     0      8
  5474                           ;! ---------------------------------------------------------------------------------
  5475                           ;! (2) _init_queue                                           4     2      2     192
  5476                           ;!                                              0 BANK1      4     2      2
  5477                           ;! ---------------------------------------------------------------------------------
  5478                           ;! (2) _send_msg                                            12     6      6     648
  5479                           ;!                                             10 BANK1     12     6      6
  5480                           ;!                             _memcpy
  5481                           ;! ---------------------------------------------------------------------------------
  5482                           ;! (2) _recv_msg                                            14     7      7     679
  5483                           ;!                                             10 BANK1     14     7      7
  5484                           ;!                             _memcpy
  5485                           ;! ---------------------------------------------------------------------------------
  5486                           ;! (3) _memcpy                                              10     4      6     174
  5487                           ;!                                              0 BANK1     10     4      6
  5488                           ;! ---------------------------------------------------------------------------------
  5489                           ;! (2) _check_msg                                            3     1      2      62
  5490                           ;!                                              0 BANK1      3     1      2
  5491                           ;! ---------------------------------------------------------------------------------
  5492                           ;! (2) _Delay1KTCYx                                          1     0      1      31
  5493                           ;!                                              0 BANK1      1     0      1
  5494                           ;! ---------------------------------------------------------------------------------
  5495                           ;! (2) _OpenADC                                              5     2      3     217
  5496                           ;!                                              0 BANK1      5     2      3
  5497                           ;! ---------------------------------------------------------------------------------
  5498                           ;! (2) _SetChanADC                                           2     1      1      31
  5499                           ;!                                              0 BANK1      2     1      1
  5500                           ;! ---------------------------------------------------------------------------------
  5501                           ;! (2) _ConvertADC                                           0     0      0       0
  5502                           ;! ---------------------------------------------------------------------------------
  5503                           ;! Estimated maximum stack depth 3
  5504                           ;! ---------------------------------------------------------------------------------
  5505                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  5506                           ;! ---------------------------------------------------------------------------------
  5507                           ;! (5) _InterruptHandlerLow                                 17    17      0    4864
  5508                           ;!                                             32 COMRAM    17    17      0
  5509                           ;!                 _timer1_int_handler
  5510                           ;!                    _adc_int_handler
  5511                           ;!              _uart_recv_int_handler
  5512                           ;! ---------------------------------------------------------------------------------
  5513                           ;! (6) _timer1_int_handler                                   6     6      0    1688
  5514                           ;!                                             26 COMRAM     6     6      0
  5515                           ;!                         _ReadTimer1
  5516                           ;!                  _ToMainLow_sendmsg
  5517                           ;!                        _WriteTimer1
  5518                           ;! ---------------------------------------------------------------------------------
  5519                           ;! (6) _adc_int_handler                                      4     4      0    1591
  5520                           ;!                                             26 COMRAM     4     4      0
  5521                           ;!                            _ReadADC
  5522                           ;!                  _ToMainLow_sendmsg
  5523                           ;! ---------------------------------------------------------------------------------
  5524                           ;! (6) _uart_recv_int_handler                                2     2      0    1585
  5525                           ;!                                             26 COMRAM     2     2      0
  5526                           ;!                          _ReadUSART
  5527                           ;!                  _ToMainLow_sendmsg
  5528                           ;! ---------------------------------------------------------------------------------
  5529                           ;! (7) _ToMainLow_sendmsg                                    4     0      4    1562
  5530                           ;!                                             22 COMRAM     4     0      4
  5531                           ;!                         i1_send_msg
  5532                           ;! ---------------------------------------------------------------------------------
  5533                           ;! (7) _ReadUSART                                            1     1      0      23
  5534                           ;!                                              0 COMRAM     1     1      0
  5535                           ;! ---------------------------------------------------------------------------------
  5536                           ;! (7) _ReadTimer1                                           4     2      2      30
  5537                           ;!                                              0 COMRAM     4     2      2
  5538                           ;! ---------------------------------------------------------------------------------
  5539                           ;! (7) _WriteTimer1                                          4     2      2      45
  5540                           ;!                                              0 COMRAM     4     2      2
  5541                           ;! ---------------------------------------------------------------------------------
  5542                           ;! (7) _ReadADC                                              2     0      2       0
  5543                           ;!                                              0 COMRAM     2     0      2
  5544                           ;! ---------------------------------------------------------------------------------
  5545                           ;! (8) i1_send_msg                                          12     6      6    1496
  5546                           ;!                                             10 COMRAM    12     6      6
  5547                           ;!                           i1_memcpy
  5548                           ;! ---------------------------------------------------------------------------------
  5549                           ;! (9) i1_memcpy                                            10     4      6     395
  5550                           ;!                                              0 COMRAM    10     4      6
  5551                           ;! ---------------------------------------------------------------------------------
  5552                           ;! (10) _InterruptHandlerHigh                               14    14      0    9116
  5553                           ;!                                             36 BANK0     14    14      0
  5554                           ;!                    _i2c_int_handler
  5555                           ;!                 _timer0_int_handler
  5556                           ;!                        _SleepIfOkay
  5557                           ;! ---------------------------------------------------------------------------------
  5558                           ;! (11) _i2c_int_handler                                    26    26      0    4824
  5559                           ;!                                             10 BANK0     26    26      0
  5560                           ;!                       _handle_start
  5561                           ;!                _FromMainLow_recvmsg
  5562                           ;!              _start_i2c_slave_reply
  5563                           ;!                 _ToMainHigh_sendmsg
  5564                           ;! ---------------------------------------------------------------------------------
  5565                           ;! (11) _timer0_int_handler                                  8     8      0    4146
  5566                           ;!                                             10 BANK0      8     8      0
  5567                           ;!                        _WriteTimer0
  5568                           ;!               _FromMainHigh_recvmsg
  5569                           ;!                 _ToMainHigh_sendmsg
  5570                           ;! ---------------------------------------------------------------------------------
  5571                           ;! (11) _SleepIfOkay                                         0     0      0     146
  5572                           ;!                       i2_in_low_int
  5573                           ;!                      i2_in_high_int
  5574                           ;!                        i2_check_msg
  5575                           ;!                   _enter_sleep_mode
  5576                           ;! ---------------------------------------------------------------------------------
  5577                           ;! (12) _ToMainHigh_sendmsg                                  4     0      4    1912
  5578                           ;!                                              5 BANK0      4     0      4
  5579                           ;!                         i2_send_msg
  5580                           ;! ---------------------------------------------------------------------------------
  5581                           ;! (12) _FromMainLow_recvmsg                                 5     0      5    2000
  5582                           ;!                                              5 BANK0      5     0      5
  5583                           ;!                         i2_recv_msg
  5584                           ;! ---------------------------------------------------------------------------------
  5585                           ;! (12) _FromMainHigh_recvmsg                                5     0      5    2000
  5586                           ;!                                              5 BANK0      5     0      5
  5587                           ;!                         i2_recv_msg
  5588                           ;! ---------------------------------------------------------------------------------
  5589                           ;! (12) _enter_sleep_mode                                    0     0      0       0
  5590                           ;! ---------------------------------------------------------------------------------
  5591                           ;! (12) _start_i2c_slave_reply                               5     2      3      66
  5592                           ;!                                             49 COMRAM     5     2      3
  5593                           ;! ---------------------------------------------------------------------------------
  5594                           ;! (12) _handle_start                                        1     0      1      22
  5595                           ;!                                             49 COMRAM     1     0      1
  5596                           ;! ---------------------------------------------------------------------------------
  5597                           ;! (12) _WriteTimer0                                         4     2      2      68
  5598                           ;!                                             49 COMRAM     4     2      2
  5599                           ;! ---------------------------------------------------------------------------------
  5600                           ;! (12) i2_in_low_int                                        2     0      2       0
  5601                           ;!                                             51 COMRAM     2     0      2
  5602                           ;!                      i2_in_high_int
  5603                           ;! ---------------------------------------------------------------------------------
  5604                           ;! (12) i2_in_high_int                                       2     0      2       0
  5605                           ;!                                             49 COMRAM     2     0      2
  5606                           ;! ---------------------------------------------------------------------------------
  5607                           ;! (13) i2_send_msg                                         12     6      6    1819
  5608                           ;!                                             59 COMRAM     7     1      6
  5609                           ;!                                              0 BANK0      5     5      0
  5610                           ;!                           i2_memcpy
  5611                           ;! ---------------------------------------------------------------------------------
  5612                           ;! (13) i2_recv_msg                                         14     7      7    1907
  5613                           ;!                                             59 COMRAM     9     2      7
  5614                           ;!                                              0 BANK0      5     5      0
  5615                           ;!                           i2_memcpy
  5616                           ;! ---------------------------------------------------------------------------------
  5617                           ;! (12) i2_check_msg                                         3     1      2     146
  5618                           ;!                                             49 COMRAM     3     1      2
  5619                           ;! ---------------------------------------------------------------------------------
  5620                           ;! (14) i2_memcpy                                           10     4      6     484
  5621                           ;!                                             49 COMRAM    10     4      6
  5622                           ;! ---------------------------------------------------------------------------------
  5623                           ;! Estimated maximum stack depth 14
  5624                           ;! ---------------------------------------------------------------------------------
  5625                           ;!
  5626                           ;! Call Graph Graphs:
  5627                           ;!
  5628                           ;! _main (ROOT)
  5629                           ;!   _init_uart_recv
  5630                           ;!   _init_i2c
  5631                           ;!   _init_timer1_lthread
  5632                           ;!     _OpenADC
  5633                           ;!     _SetChanADC
  5634                           ;!   _init_queues
  5635                           ;!     _init_queue
  5636                           ;!   _OpenTimer1
  5637                           ;!   _enable_interrupts
  5638                           ;!   _i2c_configure_slave
  5639                           ;!   _OpenUSART
  5640                           ;!   _block_on_To_msgqueues
  5641                           ;!     _in_main
  5642                           ;!       _in_low_int
  5643                           ;!         _in_high_int
  5644                           ;!       _in_high_int
  5645                           ;!     _check_msg
  5646                           ;!     _Delay1KTCYx
  5647                           ;!   _ToMainHigh_recvmsg
  5648                           ;!     _recv_msg
  5649                           ;!       _memcpy
  5650                           ;!   _timer0_lthread
  5651                           ;!   _ToMainLow_recvmsg
  5652                           ;!     _recv_msg
  5653                           ;!       _memcpy
  5654                           ;!   _timer1_lthread
  5655                           ;!     _ConvertADC
  5656                           ;!   _FromMainLow_sendmsg
  5657                           ;!     _send_msg
  5658                           ;!       _memcpy
  5659                           ;!   _uart_lthread
  5660                           ;!
  5661                           ;! _InterruptHandlerLow (ROOT)
  5662                           ;!   _timer1_int_handler
  5663                           ;!     _ReadTimer1
  5664                           ;!     _ToMainLow_sendmsg
  5665                           ;!       i1_send_msg
  5666                           ;!         i1_memcpy
  5667                           ;!     _WriteTimer1
  5668                           ;!   _adc_int_handler
  5669                           ;!     _ReadADC
  5670                           ;!     _ToMainLow_sendmsg
  5671                           ;!       i1_send_msg
  5672                           ;!         i1_memcpy
  5673                           ;!   _uart_recv_int_handler
  5674                           ;!     _ReadUSART
  5675                           ;!     _ToMainLow_sendmsg
  5676                           ;!       i1_send_msg
  5677                           ;!         i1_memcpy
  5678                           ;!
  5679                           
  5680                           ;! Address spaces:
  5681                           
  5682                           ;!Name               Size   Autos  Total    Cost      Usage
  5683                           ;!BIGRAM             3FF      0       0      12        0.0%
  5684                           ;!BITBANK3           100      0       0       9        0.0%
  5685                           ;!BANK3              100      0       0      10        0.0%
  5686                           ;!BITBANK2           100      0       0       7        0.0%
  5687                           ;!BANK2              100      0       0       8        0.0%
  5688                           ;!BITBANK1           100      0       0       5        0.0%
  5689                           ;!BANK1              100     53      F5       6       95.7%
  5690                           ;!BITBANK0            80      0       0       3        0.0%
  5691                           ;!BANK0               80     32      6A       4       82.8%
  5692                           ;!BITCOMRAM           7F      0       0       0        0.0%
  5693                           ;!COMRAM              7F     44      4D       1       60.6%
  5694                           ;!BITSFR               0      0       0      40        0.0%
  5695                           ;!SFR                  0      0       0      40        0.0%
  5696                           ;!STACK                0      0      22       2        0.0%
  5697                           ;!NULL                 0      0       0       0        0.0%
  5698                           ;!ABS                  0      0     1AC      11        0.0%
  5699                           ;!DATA                 0      0     1CE      13        0.0%
  5700                           ;!CODE                 0      0       0       0        0.0%
  5701                           
  5702                           	global	_main
  5703                           
  5704 ;; *************** function _main *****************
  5705 ;; Defined at:
  5706 ;;		line 79 in file "../src/main.c"
  5707 ;; Parameters:    Size  Location     Type
  5708 ;;		None
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;  ic             28   55[BANK1 ] struct __i2c_comm
  5711 ;;  msgbuffer      11   30[BANK1 ] unsigned char [11]
  5712 ;;  uc              5   48[BANK1 ] struct __uart_comm
  5713 ;;  t1thread_dat    2   46[BANK1 ] struct __timer1_thread_s
  5714 ;;  t0thread_dat    2   43[BANK1 ] struct __timer0_thread_s
  5715 ;;  uthread_data    2   41[BANK1 ] struct __uart_thread_str
  5716 ;;  msgtype         1   54[BANK1 ] unsigned char 
  5717 ;;  length          1   53[BANK1 ] char 
  5718 ;;  last_reg_rec    1   45[BANK1 ] unsigned char 
  5719 ;;  i               1    0        unsigned char 
  5720 ;;  c               1    0        unsigned char 
  5721 ;; Return value:  Size  Location     Type
  5722 ;;		None               void
  5723 ;; Registers used:
  5724 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, structret, tblptrl, tblptrh, tblptr
       u, prodl, prodh, bsr, cstack
  5725 ;; Tracked objects:
  5726 ;;		On entry : 0/0
  5727 ;;		On exit  : 0/0
  5728 ;;		Unchanged: 0/0
  5729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5730 ;;      Params:         0       0       0       0       0
  5731 ;;      Locals:         0       0      53       0       0
  5732 ;;      Temps:          0       0       1       0       0
  5733 ;;      Totals:         0       0      54       0       0
  5734 ;;Total ram usage:       54 bytes
  5735 ;; Hardware stack levels required when called:   14
  5736 ;; This function calls:
  5737 ;;		_init_uart_recv
  5738 ;;		_init_i2c
  5739 ;;		_init_timer1_lthread
  5740 ;;		_init_queues
  5741 ;;		_OpenTimer1
  5742 ;;		_enable_interrupts
  5743 ;;		_i2c_configure_slave
  5744 ;;		_OpenUSART
  5745 ;;		_block_on_To_msgqueues
  5746 ;;		_ToMainHigh_recvmsg
  5747 ;;		_timer0_lthread
  5748 ;;		_ToMainLow_recvmsg
  5749 ;;		_timer1_lthread
  5750 ;;		_FromMainLow_sendmsg
  5751 ;;		_uart_lthread
  5752 ;; This function is called by:
  5753 ;;		Startup code after reset
  5754 ;; This function uses a non-reentrant model
  5755 ;;
  5756                           psect	text0,class=CODE,space=0,reloc=2
  5757                           global __ptext0
  5758  000750                     __ptext0:
  5759                           psect	text0
  5760                           	file	"../src/main.c"
  5761                           	line	79
  5762                           	global	__size_of_main
  5763  0000                     	__size_of_main	equ	__end_of_main-_main
  5764                           	
  5765  000750                     _main:; BSR set to: 0
  5766                           
  5767                           	opt	stack 17
  5768                           	line	99
  5769                           	
  5770  000750                     l19035:
  5771                           ;main.c: 80: char c;
  5772                           ;main.c: 81: signed char length;
  5773                           ;main.c: 82: unsigned char msgtype;
  5774                           ;main.c: 83: unsigned char last_reg_recvd;
  5775                           ;main.c: 84: uart_comm uc;
  5776                           ;main.c: 85: i2c_comm ic;
  5777                           ;main.c: 86: unsigned char msgbuffer[10 + 1];
  5778                           ;main.c: 87: unsigned char i;
  5779                           ;main.c: 88: uart_thread_struct uthread_data;
  5780                           ;main.c: 91: timer1_thread_struct t1thread_data;
  5781                           ;main.c: 92: timer0_thread_struct t0thread_data;
  5782                           ;main.c: 99: OSCCON = 0x82;
  5783  000750  0E82               	movlw	low(082h)
  5784  000752  6ED3               	movwf	((c:4051)),c	;volatile
  5785                           	line	100
  5786                           	
  5787  000754                     l19037:
  5788                           ;main.c: 100: OSCTUNEbits.PLLEN = 0;
  5789  000754  9C9B               	bcf	((c:3995)),c,6	;volatile
  5790                           	line	104
  5791                           	
  5792  000756                     l19039:
  5793                           ;main.c: 104: init_uart_recv(&uc);
  5794  000756  0101               	movlb	1	; () banked
  5795  000758  0E01               	movlw	high(main@uc)
  5796  00075A  0101               	movlb	1	; () banked
  5797  00075C  0101               	movlb	1	; () banked
  5798  00075E  6FA3               	movwf	((?_init_uart_recv+1))&0ffh
  5799  000760  0101               	movlb	1	; () banked
  5800  000762  0ED2               	movlw	low(main@uc)
  5801  000764  0101               	movlb	1	; () banked
  5802  000766  6FA2               	movwf	((?_init_uart_recv))&0ffh
  5803  000768  0101               	movlb	1	; () banked
  5804  00076A  ECEF  F00D         	call	_init_uart_recv	;wreg free
  5805                           	line	107
  5806                           	
  5807  00076E                     l19041:
  5808                           ;main.c: 107: init_i2c(&ic);
  5809  00076E  0101               	movlb	1	; () banked
  5810  000770  0E01               	movlw	high(main@ic)
  5811  000772  0101               	movlb	1	; () banked
  5812  000774  0101               	movlb	1	; () banked
  5813  000776  6FA3               	movwf	((?_init_i2c+1))&0ffh
  5814  000778  0101               	movlb	1	; () banked
  5815  00077A  0ED9               	movlw	low(main@ic)
  5816  00077C  0101               	movlb	1	; () banked
  5817  00077E  6FA2               	movwf	((?_init_i2c))&0ffh
  5818  000780  0101               	movlb	1	; () banked
  5819  000782  ECE5  F00B         	call	_init_i2c	;wreg free
  5820                           	line	110
  5821                           	
  5822  000786                     l19043:
  5823                           ;main.c: 110: init_timer1_lthread(&t1thread_data);
  5824  000786  0101               	movlb	1	; () banked
  5825  000788  0E01               	movlw	high(main@t1thread_data)
  5826  00078A  0101               	movlb	1	; () banked
  5827  00078C  0101               	movlb	1	; () banked
  5828  00078E  6FA8               	movwf	((?_init_timer1_lthread+1))&0ffh
  5829  000790  0101               	movlb	1	; () banked
  5830  000792  0ED0               	movlw	low(main@t1thread_data)
  5831  000794  0101               	movlb	1	; () banked
  5832  000796  6FA7               	movwf	((?_init_timer1_lthread))&0ffh
  5833  000798  0101               	movlb	1	; () banked
  5834  00079A  EC06  F00B         	call	_init_timer1_lthread	;wreg free
  5835                           	line	113
  5836                           	
  5837  00079E                     l19045:
  5838                           ;main.c: 113: init_queues();
  5839  00079E  ECCF  F00A         	call	_init_queues	;wreg free
  5840                           	line	116
  5841                           	
  5842  0007A2                     l19047:
  5843                           ;main.c: 116: TRISB = 0x0;
  5844  0007A2  0E00               	movlw	low(0)
  5845  0007A4  6E93               	movwf	((c:3987)),c	;volatile
  5846                           	line	117
  5847                           	
  5848  0007A6                     l19049:
  5849                           ;main.c: 117: LATB = 0x0;
  5850  0007A6  0E00               	movlw	low(0)
  5851  0007A8  6E8A               	movwf	((c:3978)),c	;volatile
  5852                           	line	121
  5853                           	
  5854  0007AA                     l19051:
  5855                           ;main.c: 121: PORTA = 0x0;
  5856  0007AA  0E00               	movlw	low(0)
  5857  0007AC  6E80               	movwf	((c:3968)),c	;volatile
  5858                           	line	122
  5859                           	
  5860  0007AE                     l19053:
  5861                           ;main.c: 122: LATA = 0x0;
  5862  0007AE  0E00               	movlw	low(0)
  5863  0007B0  6E89               	movwf	((c:3977)),c	;volatile
  5864                           	line	123
  5865                           	
  5866  0007B2                     l19055:
  5867                           ;main.c: 123: ADCON1 = 0x0F;
  5868  0007B2  0E0F               	movlw	low(0Fh)
  5869  0007B4  6EC1               	movwf	((c:4033)),c	;volatile
  5870                           	line	125
  5871                           	
  5872  0007B6                     l19057:
  5873                           ;main.c: 125: TRISA = 0x0F;
  5874  0007B6  0E0F               	movlw	low(0Fh)
  5875  0007B8  6E92               	movwf	((c:3986)),c	;volatile
  5876                           	line	129
  5877                           	
  5878  0007BA                     l19059:
  5879                           ;main.c: 129: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
                                 & 0b11111111);
  5880  0007BA  0101               	movlb	1	; () banked
  5881  0007BC  6FBF               	movwf	(??_main+0+0)&0ffh
  5882  0007BE  0EF5               	movlw	low(0F5h)
  5883  0007C0  0101               	movlb	1	; () banked
  5884  0007C2  0101               	movlb	1	; () banked
  5885  0007C4  6FA2               	movwf	((?_OpenTimer1))&0ffh
  5886  0007C6  0101               	movlb	1	; () banked
  5887  0007C8  51BF               	movf	(??_main+0+0)&0ffh,w
  5888  0007CA  0101               	movlb	1	; () banked
  5889  0007CC  EC74  F00C         	call	_OpenTimer1	;wreg free
  5890                           	line	133
  5891                           	
  5892  0007D0                     l19061:
  5893                           ;main.c: 133: enable_interrupts();
  5894  0007D0  EC3D  F00E         	call	_enable_interrupts	;wreg free
  5895                           	line	138
  5896                           	
  5897  0007D4                     l19063:
  5898                           ;main.c: 138: IPR1bits.TMR1IP = 0;
  5899  0007D4  909F               	bcf	((c:3999)),c,0	;volatile
  5900                           	line	140
  5901                           	
  5902  0007D6                     l19065:
  5903                           ;main.c: 140: IPR1bits.ADIP = 0;
  5904  0007D6  9C9F               	bcf	((c:3999)),c,6	;volatile
  5905                           	line	142
  5906                           	
  5907  0007D8                     l19067:
  5908                           ;main.c: 142: IPR1bits.RCIP = 0;
  5909  0007D8  9A9F               	bcf	((c:3999)),c,5	;volatile
  5910                           	line	144
  5911                           	
  5912  0007DA                     l19069:
  5913                           ;main.c: 144: IPR1bits.SSPIP = 1;
  5914  0007DA  869F               	bsf	((c:3999)),c,3	;volatile
  5915                           	line	154
  5916                           	
  5917  0007DC                     l19071:
  5918                           ;main.c: 154: i2c_configure_slave(0x9E);
  5919  0007DC  0101               	movlb	1	; () banked
  5920  0007DE  6FBF               	movwf	(??_main+0+0)&0ffh
  5921  0007E0  0E9E               	movlw	low(09Eh)
  5922  0007E2  0101               	movlb	1	; () banked
  5923  0007E4  0101               	movlb	1	; () banked
  5924  0007E6  6FA2               	movwf	((?_i2c_configure_slave))&0ffh
  5925  0007E8  0101               	movlb	1	; () banked
  5926  0007EA  51BF               	movf	(??_main+0+0)&0ffh,w
  5927  0007EC  0101               	movlb	1	; () banked
  5928  0007EE  ECAB  F00D         	call	_i2c_configure_slave	;wreg free
  5929                           	line	167
  5930                           	
  5931  0007F2                     l19073:
  5932                           ;main.c: 167: PIE1bits.SSPIE = 1;
  5933  0007F2  869D               	bsf	((c:3997)),c,3	;volatile
  5934                           	line	171
  5935                           	
  5936  0007F4                     l19075:
  5937                           ;main.c: 170: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  5938                           ;main.c: 171: 0b11111111 & 0b11101111, 0x19);
  5939  0007F4  0101               	movlb	1	; () banked
  5940  0007F6  6FBF               	movwf	(??_main+0+0)&0ffh
  5941  0007F8  0E6C               	movlw	low(06Ch)
  5942  0007FA  0101               	movlb	1	; () banked
  5943  0007FC  0101               	movlb	1	; () banked
  5944  0007FE  6FA2               	movwf	((?_OpenUSART))&0ffh
  5945  000800  0101               	movlb	1	; () banked
  5946  000802  51BF               	movf	(??_main+0+0)&0ffh,w
  5947  000804  0E00               	movlw	high(019h)
  5948  000806  0101               	movlb	1	; () banked
  5949  000808  0101               	movlb	1	; () banked
  5950  00080A  6FA4               	movwf	(1+(?_OpenUSART+01h))&0ffh
  5951  00080C  0E19               	movlw	low(019h)
  5952  00080E  0101               	movlb	1	; () banked
  5953  000810  6FA3               	movwf	(0+(?_OpenUSART+01h))&0ffh
  5954  000812  0101               	movlb	1	; () banked
  5955  000814  ECC4  F008         	call	_OpenUSART	;wreg free
  5956  000818  D000               	goto	l19077
  5957                           	line	191
  5958                           ;main.c: 191: while (1) {
  5959                           	
  5960  00081A                     l3645:
  5961                           	line	195
  5962                           	
  5963  00081A                     l19077:
  5964                           ;main.c: 195: block_on_To_msgqueues();
  5965  00081A  EC3F  F007         	call	_block_on_To_msgqueues	;wreg free
  5966                           	line	202
  5967                           	
  5968  00081E                     l19079:
  5969                           ;main.c: 202: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  5970  00081E  0101               	movlb	1	; () banked
  5971  000820  6FBF               	movwf	(??_main+0+0)&0ffh
  5972  000822  0E0A               	movlw	low(0Ah)
  5973  000824  0101               	movlb	1	; () banked
  5974  000826  0101               	movlb	1	; () banked
  5975  000828  6FBA               	movwf	((?_ToMainHigh_recvmsg))&0ffh
  5976  00082A  0101               	movlb	1	; () banked
  5977  00082C  51BF               	movf	(??_main+0+0)&0ffh,w
  5978  00082E  0101               	movlb	1	; () banked
  5979  000830  0E01               	movlw	high(main@msgtype)
  5980  000832  0101               	movlb	1	; () banked
  5981  000834  0101               	movlb	1	; () banked
  5982  000836  6FBC               	movwf	(1+(?_ToMainHigh_recvmsg+01h))&0ffh
  5983  000838  0101               	movlb	1	; () banked
  5984  00083A  0ED8               	movlw	low(main@msgtype)
  5985  00083C  0101               	movlb	1	; () banked
  5986  00083E  6FBB               	movwf	(0+(?_ToMainHigh_recvmsg+01h))&0ffh
  5987  000840  0101               	movlb	1	; () banked
  5988  000842  0E01               	movlw	high(main@msgbuffer)
  5989  000844  0101               	movlb	1	; () banked
  5990  000846  0101               	movlb	1	; () banked
  5991  000848  6FBE               	movwf	(1+(?_ToMainHigh_recvmsg+03h))&0ffh
  5992  00084A  0101               	movlb	1	; () banked
  5993  00084C  0EC0               	movlw	low(main@msgbuffer)
  5994  00084E  0101               	movlb	1	; () banked
  5995  000850  6FBD               	movwf	(0+(?_ToMainHigh_recvmsg+03h))&0ffh
  5996  000852  0101               	movlb	1	; () banked
  5997  000854  EC03  F00D         	call	_ToMainHigh_recvmsg	;wreg free
  5998  000858  0101               	movlb	1	; () banked
  5999  00085A  0101               	movlb	1	; () banked
  6000  00085C  6FD7               	movwf	((main@length))&0ffh
  6001                           	line	203
  6002                           	
  6003  00085E                     l19081:; BSR set to: 1
  6004                           
  6005                           ;main.c: 203: if (length < 0) {
  6006  00085E  0101               	movlb	1	; () banked
  6007  000860  0101               	movlb	1	; () banked
  6008  000862  AFD7               	btfss	((main@length))&0ffh,7
  6009  000864  D001               	goto	u2221
  6010  000866  D001               	goto	u2220
  6011  000868                     u2221:
  6012  000868  D03C               	goto	l19093
  6013  00086A                     u2220:
  6014  00086A  D04C               	goto	l19095
  6015                           	line	205
  6016                           	
  6017  00086C                     l19083:; BSR set to: 1
  6018                           
  6019  00086C  D04B               	goto	l19095
  6020                           	line	207
  6021                           	
  6022  00086E                     l3647:; BSR set to: 1
  6023                           
  6024                           	line	208
  6025                           ;main.c: 207: }
  6026                           ;main.c: 208: } else {
  6027  00086E  D04A               	goto	l19095
  6028                           	
  6029  000870                     l3646:; BSR set to: 1
  6030                           
  6031                           	line	209
  6032                           ;main.c: 209: switch (msgtype) {
  6033  000870  D038               	goto	l19093
  6034                           	line	213
  6035                           ;main.c: 213: case 10:
  6036                           	
  6037  000872                     l3650:; BSR set to: 1
  6038                           
  6039                           	line	215
  6040                           	
  6041  000872                     l19085:; BSR set to: 1
  6042                           
  6043                           ;main.c: 214: {
  6044                           ;main.c: 215: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  6045  000872  0101               	movlb	1	; () banked
  6046  000874  0E01               	movlw	high(main@t0thread_data)
  6047  000876  0101               	movlb	1	; () banked
  6048  000878  0101               	movlb	1	; () banked
  6049  00087A  6FA3               	movwf	((?_timer0_lthread+1))&0ffh
  6050  00087C  0101               	movlb	1	; () banked
  6051  00087E  0ECD               	movlw	low(main@t0thread_data)
  6052  000880  0101               	movlb	1	; () banked
  6053  000882  6FA2               	movwf	((?_timer0_lthread))&0ffh
  6054  000884  0101               	movlb	1	; () banked
  6055  000886  0101               	movlb	1	; () banked
  6056  000888  C1D8  F1A4         	movff	(main@msgtype),0+(?_timer0_lthread+02h)
  6057  00088C  0101               	movlb	1	; () banked
  6058  00088E  0101               	movlb	1	; () banked
  6059  000890  6BA5               	clrf	(1+(?_timer0_lthread+02h))&0ffh
  6060  000892  0101               	movlb	1	; () banked
  6061  000894  0101               	movlb	1	; () banked
  6062  000896  51D7               	movf	((main@length))&0ffh,w
  6063  000898  0101               	movlb	1	; () banked
  6064  00089A  0101               	movlb	1	; () banked
  6065  00089C  6FA6               	movwf	(0+(?_timer0_lthread+04h))&0ffh
  6066  00089E  0101               	movlb	1	; () banked
  6067  0008A0  6BA7               	clrf	(1+(?_timer0_lthread+04h))&0ffh
  6068  0008A2  0101               	movlb	1	; () banked
  6069  0008A4  BFA6               	btfsc	(0+(?_timer0_lthread+04h))&0ffh,7
  6070  0008A6  07A7               	decf	(1+(?_timer0_lthread+04h))&0ffh
  6071  0008A8  0101               	movlb	1	; () banked
  6072  0008AA  0E01               	movlw	high(main@msgbuffer)
  6073  0008AC  0101               	movlb	1	; () banked
  6074  0008AE  0101               	movlb	1	; () banked
  6075  0008B0  6FA9               	movwf	(1+(?_timer0_lthread+06h))&0ffh
  6076  0008B2  0101               	movlb	1	; () banked
  6077  0008B4  0EC0               	movlw	low(main@msgbuffer)
  6078  0008B6  0101               	movlb	1	; () banked
  6079  0008B8  6FA8               	movwf	(0+(?_timer0_lthread+06h))&0ffh
  6080  0008BA  0101               	movlb	1	; () banked
  6081  0008BC  EC38  F00E         	call	_timer0_lthread	;wreg free
  6082                           	line	216
  6083                           ;main.c: 216: break;
  6084  0008C0  D021               	goto	l19095
  6085                           	line	218
  6086                           ;main.c: 217: };
  6087                           ;main.c: 218: case 40:
  6088                           	
  6089  0008C2                     l3652:
  6090                           	line	220
  6091                           	
  6092  0008C2                     l3653:
  6093                           	line	224
  6094                           ;main.c: 220: case 41:
  6095                           ;main.c: 221: {
  6096                           ;main.c: 224: last_reg_recvd = msgbuffer[0];
  6097  0008C2  C1C0  F1CF         	movff	(main@msgbuffer),(main@last_reg_recvd)
  6098                           	line	225
  6099                           ;main.c: 225: break;
  6100  0008C6  D01E               	goto	l19095
  6101                           	line	227
  6102                           ;main.c: 226: };
  6103                           ;main.c: 227: case 42:
  6104                           	
  6105  0008C8                     l3654:
  6106                           	line	236
  6107                           ;main.c: 228: {
  6108                           ;main.c: 236: switch (last_reg_recvd) {
  6109  0008C8  D002               	goto	l19089
  6110                           	line	237
  6111                           ;main.c: 237: case 0xaa:
  6112                           	
  6113  0008CA                     l3656:
  6114                           	line	242
  6115                           ;main.c: 238: {
  6116                           ;main.c: 242: break;
  6117  0008CA  D01C               	goto	l19095
  6118                           	line	256
  6119                           	
  6120  0008CC                     l19087:
  6121                           ;main.c: 243: }
  6122                           ;main.c: 256: };
  6123  0008CC  D01B               	goto	l19095
  6124                           	line	236
  6125                           	
  6126  0008CE                     l3655:
  6127                           	
  6128  0008CE                     l19089:
  6129  0008CE  0101               	movlb	1	; () banked
  6130  0008D0  0101               	movlb	1	; () banked
  6131  0008D2  51CF               	movf	((main@last_reg_recvd))&0ffh,w
  6132                           	; Switch size 1, requested type "space"
  6133                           ; Number of cases is 1, Range of values is 170 to 170
  6134                           ; switch strategies available:
  6135                           ; Name         Instructions Cycles
  6136                           ; simple_byte            4     3 (average)
  6137                           ;	Chosen strategy is simple_byte
  6138                           
  6139  0008D4  0AAA               	xorlw	170^0	; case 170
  6140  0008D6  B4D8               	skipnz
  6141  0008D8  D015               	goto	l19095
  6142  0008DA  D014               	goto	l19095
  6143                           
  6144                           	line	256
  6145                           	
  6146  0008DC                     l3657:; BSR set to: 1
  6147                           
  6148                           	line	258
  6149                           ;main.c: 258: break;
  6150  0008DC  D013               	goto	l19095
  6151                           	line	260
  6152                           ;main.c: 259: };
  6153                           ;main.c: 260: default:
  6154                           	
  6155  0008DE                     l3658:; BSR set to: 1
  6156                           
  6157                           	line	263
  6158                           ;main.c: 261: {
  6159                           ;main.c: 263: break;
  6160  0008DE  D012               	goto	l19095
  6161                           	line	265
  6162                           	
  6163  0008E0                     l19091:; BSR set to: 1
  6164                           
  6165                           ;main.c: 264: };
  6166                           ;main.c: 265: };
  6167  0008E0  D011               	goto	l19095
  6168                           	line	209
  6169                           	
  6170  0008E2                     l3649:; BSR set to: 1
  6171                           
  6172                           	
  6173  0008E2                     l19093:; BSR set to: 1
  6174                           
  6175  0008E2  0101               	movlb	1	; () banked
  6176  0008E4  0101               	movlb	1	; () banked
  6177  0008E6  51D8               	movf	((main@msgtype))&0ffh,w
  6178                           	; Switch size 1, requested type "space"
  6179                           ; Number of cases is 4, Range of values is 10 to 42
  6180                           ; switch strategies available:
  6181                           ; Name         Instructions Cycles
  6182                           ; simple_byte           13     7 (average)
  6183                           ;	Chosen strategy is simple_byte
  6184                           
  6185  0008E8  0A0A               	xorlw	10^0	; case 10
  6186  0008EA  B4D8               	skipnz
  6187  0008EC  D7C2               	goto	l19085
  6188  0008EE  0A22               	xorlw	40^10	; case 40
  6189  0008F0  B4D8               	skipnz
  6190  0008F2  D7E7               	goto	l3653
  6191  0008F4  0A01               	xorlw	41^40	; case 41
  6192  0008F6  B4D8               	skipnz
  6193  0008F8  D7E4               	goto	l3653
  6194  0008FA  0A03               	xorlw	42^41	; case 42
  6195  0008FC  B4D8               	skipnz
  6196  0008FE  D7E7               	goto	l19089
  6197  000900  D001               	goto	l19095
  6198                           
  6199                           	line	265
  6200                           	
  6201  000902                     l3651:; BSR set to: 1
  6202                           
  6203  000902  D000               	goto	l19095
  6204                           	line	266
  6205                           	
  6206  000904                     l3648:; BSR set to: 1
  6207                           
  6208                           	line	269
  6209                           	
  6210  000904                     l19095:
  6211                           ;main.c: 266: }
  6212                           ;main.c: 269: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  6213  000904  0101               	movlb	1	; () banked
  6214  000906  6FBF               	movwf	(??_main+0+0)&0ffh
  6215  000908  0E0A               	movlw	low(0Ah)
  6216  00090A  0101               	movlb	1	; () banked
  6217  00090C  0101               	movlb	1	; () banked
  6218  00090E  6FBA               	movwf	((?_ToMainLow_recvmsg))&0ffh
  6219  000910  0101               	movlb	1	; () banked
  6220  000912  51BF               	movf	(??_main+0+0)&0ffh,w
  6221  000914  0101               	movlb	1	; () banked
  6222  000916  0E01               	movlw	high(main@msgtype)
  6223  000918  0101               	movlb	1	; () banked
  6224  00091A  0101               	movlb	1	; () banked
  6225  00091C  6FBC               	movwf	(1+(?_ToMainLow_recvmsg+01h))&0ffh
  6226  00091E  0101               	movlb	1	; () banked
  6227  000920  0ED8               	movlw	low(main@msgtype)
  6228  000922  0101               	movlb	1	; () banked
  6229  000924  6FBB               	movwf	(0+(?_ToMainLow_recvmsg+01h))&0ffh
  6230  000926  0101               	movlb	1	; () banked
  6231  000928  0E01               	movlw	high(main@msgbuffer)
  6232  00092A  0101               	movlb	1	; () banked
  6233  00092C  0101               	movlb	1	; () banked
  6234  00092E  6FBE               	movwf	(1+(?_ToMainLow_recvmsg+03h))&0ffh
  6235  000930  0101               	movlb	1	; () banked
  6236  000932  0EC0               	movlw	low(main@msgbuffer)
  6237  000934  0101               	movlb	1	; () banked
  6238  000936  6FBD               	movwf	(0+(?_ToMainLow_recvmsg+03h))&0ffh
  6239  000938  0101               	movlb	1	; () banked
  6240  00093A  EC1B  F00D         	call	_ToMainLow_recvmsg	;wreg free
  6241  00093E  0101               	movlb	1	; () banked
  6242  000940  0101               	movlb	1	; () banked
  6243  000942  6FD7               	movwf	((main@length))&0ffh
  6244                           	line	270
  6245                           	
  6246  000944                     l19097:; BSR set to: 1
  6247                           
  6248                           ;main.c: 270: if (length < 0) {
  6249  000944  0101               	movlb	1	; () banked
  6250  000946  0101               	movlb	1	; () banked
  6251  000948  AFD7               	btfss	((main@length))&0ffh,7
  6252  00094A  D001               	goto	u2231
  6253  00094C  D001               	goto	u2230
  6254  00094E                     u2231:
  6255  00094E  D068               	goto	l19109
  6256  000950                     u2230:
  6257  000950  D764               	goto	l19077
  6258                           	line	272
  6259                           	
  6260  000952                     l19099:; BSR set to: 1
  6261                           
  6262  000952  D763               	goto	l19077
  6263                           	line	274
  6264                           	
  6265  000954                     l3660:; BSR set to: 1
  6266                           
  6267                           	line	275
  6268                           ;main.c: 274: }
  6269                           ;main.c: 275: } else {
  6270  000954  D762               	goto	l19077
  6271                           	
  6272  000956                     l3659:; BSR set to: 1
  6273                           
  6274                           	line	276
  6275                           ;main.c: 276: switch (msgtype) {
  6276  000956  D064               	goto	l19109
  6277                           	line	277
  6278                           ;main.c: 277: case 11:
  6279                           	
  6280  000958                     l3663:; BSR set to: 1
  6281                           
  6282                           	line	279
  6283                           	
  6284  000958                     l19101:; BSR set to: 1
  6285                           
  6286                           ;main.c: 278: {
  6287                           ;main.c: 279: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  6288  000958  0101               	movlb	1	; () banked
  6289  00095A  0E01               	movlw	high(main@t1thread_data)
  6290  00095C  0101               	movlb	1	; () banked
  6291  00095E  0101               	movlb	1	; () banked
  6292  000960  6FA3               	movwf	((?_timer1_lthread+1))&0ffh
  6293  000962  0101               	movlb	1	; () banked
  6294  000964  0ED0               	movlw	low(main@t1thread_data)
  6295  000966  0101               	movlb	1	; () banked
  6296  000968  6FA2               	movwf	((?_timer1_lthread))&0ffh
  6297  00096A  0101               	movlb	1	; () banked
  6298  00096C  0101               	movlb	1	; () banked
  6299  00096E  C1D8  F1A4         	movff	(main@msgtype),0+(?_timer1_lthread+02h)
  6300  000972  0101               	movlb	1	; () banked
  6301  000974  0101               	movlb	1	; () banked
  6302  000976  6BA5               	clrf	(1+(?_timer1_lthread+02h))&0ffh
  6303  000978  0101               	movlb	1	; () banked
  6304  00097A  0101               	movlb	1	; () banked
  6305  00097C  51D7               	movf	((main@length))&0ffh,w
  6306  00097E  0101               	movlb	1	; () banked
  6307  000980  0101               	movlb	1	; () banked
  6308  000982  6FA6               	movwf	(0+(?_timer1_lthread+04h))&0ffh
  6309  000984  0101               	movlb	1	; () banked
  6310  000986  6BA7               	clrf	(1+(?_timer1_lthread+04h))&0ffh
  6311  000988  0101               	movlb	1	; () banked
  6312  00098A  BFA6               	btfsc	(0+(?_timer1_lthread+04h))&0ffh,7
  6313  00098C  07A7               	decf	(1+(?_timer1_lthread+04h))&0ffh
  6314  00098E  0101               	movlb	1	; () banked
  6315  000990  0E01               	movlw	high(main@msgbuffer)
  6316  000992  0101               	movlb	1	; () banked
  6317  000994  0101               	movlb	1	; () banked
  6318  000996  6FA9               	movwf	(1+(?_timer1_lthread+06h))&0ffh
  6319  000998  0101               	movlb	1	; () banked
  6320  00099A  0EC0               	movlw	low(main@msgbuffer)
  6321  00099C  0101               	movlb	1	; () banked
  6322  00099E  6FA8               	movwf	(0+(?_timer1_lthread+06h))&0ffh
  6323  0009A0  0101               	movlb	1	; () banked
  6324  0009A2  EC85  F00D         	call	_timer1_lthread	;wreg free
  6325                           	line	280
  6326                           ;main.c: 280: break;
  6327  0009A6  D739               	goto	l19077
  6328                           	line	282
  6329                           ;main.c: 281: };
  6330                           ;main.c: 282: case 40:
  6331                           	
  6332  0009A8                     l3665:
  6333                           	line	285
  6334                           	
  6335  0009A8                     l19103:
  6336                           ;main.c: 283: {
  6337                           ;main.c: 285: FromMainLow_sendmsg(length, msgtype, (void *) msgbuffer);
  6338  0009A8  C1D7  F1B8         	movff	(main@length),(?_FromMainLow_sendmsg)
  6339  0009AC  C1D8  F1B9         	movff	(main@msgtype),0+(?_FromMainLow_sendmsg+01h)
  6340  0009B0  0101               	movlb	1	; () banked
  6341  0009B2  0E01               	movlw	high(main@msgbuffer)
  6342  0009B4  0101               	movlb	1	; () banked
  6343  0009B6  0101               	movlb	1	; () banked
  6344  0009B8  6FBB               	movwf	(1+(?_FromMainLow_sendmsg+02h))&0ffh
  6345  0009BA  0101               	movlb	1	; () banked
  6346  0009BC  0EC0               	movlw	low(main@msgbuffer)
  6347  0009BE  0101               	movlb	1	; () banked
  6348  0009C0  6FBA               	movwf	(0+(?_FromMainLow_sendmsg+02h))&0ffh
  6349  0009C2  0101               	movlb	1	; () banked
  6350  0009C4  EC33  F00D         	call	_FromMainLow_sendmsg	;wreg free
  6351  0009C8  D001               	goto	l19105
  6352                           	line	287
  6353                           ;main.c: 286: };
  6354                           ;main.c: 287: case 30:
  6355                           	
  6356  0009CA                     l3666:
  6357  0009CA  D000               	goto	l19105
  6358                           	line	288
  6359                           	
  6360  0009CC                     l3667:
  6361                           	line	290
  6362                           	
  6363  0009CC                     l19105:
  6364                           ;main.c: 288: case 31:
  6365                           ;main.c: 289: {
  6366                           ;main.c: 290: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  6367  0009CC  0101               	movlb	1	; () banked
  6368  0009CE  0E01               	movlw	high(main@uthread_data)
  6369  0009D0  0101               	movlb	1	; () banked
  6370  0009D2  0101               	movlb	1	; () banked
  6371  0009D4  6FA3               	movwf	((?_uart_lthread+1))&0ffh
  6372  0009D6  0101               	movlb	1	; () banked
  6373  0009D8  0ECB               	movlw	low(main@uthread_data)
  6374  0009DA  0101               	movlb	1	; () banked
  6375  0009DC  6FA2               	movwf	((?_uart_lthread))&0ffh
  6376  0009DE  0101               	movlb	1	; () banked
  6377  0009E0  0101               	movlb	1	; () banked
  6378  0009E2  C1D8  F1A4         	movff	(main@msgtype),0+(?_uart_lthread+02h)
  6379  0009E6  0101               	movlb	1	; () banked
  6380  0009E8  0101               	movlb	1	; () banked
  6381  0009EA  6BA5               	clrf	(1+(?_uart_lthread+02h))&0ffh
  6382  0009EC  0101               	movlb	1	; () banked
  6383  0009EE  0101               	movlb	1	; () banked
  6384  0009F0  51D7               	movf	((main@length))&0ffh,w
  6385  0009F2  0101               	movlb	1	; () banked
  6386  0009F4  0101               	movlb	1	; () banked
  6387  0009F6  6FA6               	movwf	(0+(?_uart_lthread+04h))&0ffh
  6388  0009F8  0101               	movlb	1	; () banked
  6389  0009FA  6BA7               	clrf	(1+(?_uart_lthread+04h))&0ffh
  6390  0009FC  0101               	movlb	1	; () banked
  6391  0009FE  BFA6               	btfsc	(0+(?_uart_lthread+04h))&0ffh,7
  6392  000A00  07A7               	decf	(1+(?_uart_lthread+04h))&0ffh
  6393  000A02  0101               	movlb	1	; () banked
  6394  000A04  0E01               	movlw	high(main@msgbuffer)
  6395  000A06  0101               	movlb	1	; () banked
  6396  000A08  0101               	movlb	1	; () banked
  6397  000A0A  6FA9               	movwf	(1+(?_uart_lthread+06h))&0ffh
  6398  000A0C  0101               	movlb	1	; () banked
  6399  000A0E  0EC0               	movlw	low(main@msgbuffer)
  6400  000A10  0101               	movlb	1	; () banked
  6401  000A12  6FA8               	movwf	(0+(?_uart_lthread+06h))&0ffh
  6402  000A14  0101               	movlb	1	; () banked
  6403  000A16  ECBE  F00B         	call	_uart_lthread	;wreg free
  6404                           	line	291
  6405                           ;main.c: 291: break;
  6406  000A1A  D6FF               	goto	l19077
  6407                           	line	293
  6408                           ;main.c: 292: };
  6409                           ;main.c: 293: default:
  6410                           	
  6411  000A1C                     l3668:
  6412                           	line	296
  6413                           ;main.c: 294: {
  6414                           ;main.c: 296: break;
  6415  000A1C  D6FE               	goto	l19077
  6416                           	line	298
  6417                           	
  6418  000A1E                     l19107:
  6419                           ;main.c: 297: };
  6420                           ;main.c: 298: };
  6421  000A1E  D6FD               	goto	l19077
  6422                           	line	276
  6423                           	
  6424  000A20                     l3662:
  6425                           	
  6426  000A20                     l19109:
  6427  000A20  0101               	movlb	1	; () banked
  6428  000A22  0101               	movlb	1	; () banked
  6429  000A24  51D8               	movf	((main@msgtype))&0ffh,w
  6430                           	; Switch size 1, requested type "space"
  6431                           ; Number of cases is 4, Range of values is 11 to 40
  6432                           ; switch strategies available:
  6433                           ; Name         Instructions Cycles
  6434                           ; simple_byte           13     7 (average)
  6435                           ;	Chosen strategy is simple_byte
  6436                           
  6437  000A26  0A0B               	xorlw	11^0	; case 11
  6438  000A28  B4D8               	skipnz
  6439  000A2A  D796               	goto	l19101
  6440  000A2C  0A15               	xorlw	30^11	; case 30
  6441  000A2E  B4D8               	skipnz
  6442  000A30  D7CD               	goto	l19105
  6443  000A32  0A01               	xorlw	31^30	; case 31
  6444  000A34  B4D8               	skipnz
  6445  000A36  D7CA               	goto	l19105
  6446  000A38  0A37               	xorlw	40^31	; case 40
  6447  000A3A  B4D8               	skipnz
  6448  000A3C  D7B5               	goto	l19103
  6449  000A3E  D6ED               	goto	l19077
  6450                           
  6451                           	line	298
  6452                           	
  6453  000A40                     l3664:; BSR set to: 1
  6454                           
  6455  000A40  D6EC               	goto	l19077
  6456                           	line	299
  6457                           	
  6458  000A42                     l3661:; BSR set to: 1
  6459                           
  6460  000A42  D6EB               	goto	l19077
  6461                           	line	300
  6462                           	
  6463  000A44                     l3669:; BSR set to: 1
  6464                           
  6465                           	line	191
  6466  000A44  D6EA               	goto	l19077
  6467                           	
  6468  000A46                     l3670:; BSR set to: 1
  6469                           
  6470                           	line	302
  6471                           	
  6472  000A46                     l3671:; BSR set to: 1
  6473                           
  6474                           	global	start
  6475  000A46  EF69  F000         	goto	start
  6476                           	opt stack 0
  6477                           GLOBAL	__end_of_main
  6478  000A4A                     	__end_of_main:
  6479                           	signat	_main,88
  6480                           	global	_enable_interrupts
  6481                           
  6482 ;; *************** function _enable_interrupts *****************
  6483 ;; Defined at:
  6484 ;;		line 14 in file "../src/interrupts.c"
  6485 ;; Parameters:    Size  Location     Type
  6486 ;;		None
  6487 ;; Auto vars:     Size  Location     Type
  6488 ;;		None
  6489 ;; Return value:  Size  Location     Type
  6490 ;;		None               void
  6491 ;; Registers used:
  6492 ;;		None
  6493 ;; Tracked objects:
  6494 ;;		On entry : 0/0
  6495 ;;		On exit  : 0/0
  6496 ;;		Unchanged: 0/0
  6497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6498 ;;      Params:         0       0       0       0       0
  6499 ;;      Locals:         0       0       0       0       0
  6500 ;;      Temps:          0       0       0       0       0
  6501 ;;      Totals:         0       0       0       0       0
  6502 ;;Total ram usage:        0 bytes
  6503 ;; Hardware stack levels used:    1
  6504 ;; Hardware stack levels required when called:   10
  6505 ;; This function calls:
  6506 ;;		Nothing
  6507 ;; This function is called by:
  6508 ;;		_main
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           psect	text1,class=CODE,space=0,reloc=2
  6512                           global __ptext1
  6513  001C7A                     __ptext1:
  6514                           psect	text1
  6515                           	file	"../src/interrupts.c"
  6516                           	line	14
  6517                           	global	__size_of_enable_interrupts
  6518  0000                     	__size_of_enable_interrupts	equ	__end_of_enable_interrupts-_enable_interrupts
  6519                           	
  6520  001C7A                     _enable_interrupts:; BSR set to: 1
  6521                           
  6522                           	opt	stack 20
  6523                           	line	17
  6524                           	
  6525  001C7A                     l18829:
  6526                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  6527  001C7A  8ED0               	bsf	((c:4048)),c,7	;volatile
  6528                           	line	18
  6529                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  6530  001C7C  8EF2               	bsf	((c:4082)),c,7	;volatile
  6531                           	line	19
  6532                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  6533  001C7E  8CF2               	bsf	((c:4082)),c,6	;volatile
  6534                           	line	20
  6535                           	
  6536  001C80                     l1799:
  6537  001C80  0012               	return
  6538                           	opt stack 0
  6539                           GLOBAL	__end_of_enable_interrupts
  6540  001C82                     	__end_of_enable_interrupts:
  6541                           	signat	_enable_interrupts,88
  6542                           	global	_init_uart_recv
  6543                           
  6544 ;; *************** function _init_uart_recv *****************
  6545 ;; Defined at:
  6546 ;;		line 30 in file "../src/my_uart.c"
  6547 ;; Parameters:    Size  Location     Type
  6548 ;;  uc              2    0[BANK1 ] PTR struct __uart_comm
  6549 ;;		 -> main@uc(5), 
  6550 ;; Auto vars:     Size  Location     Type
  6551 ;;		None
  6552 ;; Return value:  Size  Location     Type
  6553 ;;		None               void
  6554 ;; Registers used:
  6555 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6556 ;; Tracked objects:
  6557 ;;		On entry : 0/0
  6558 ;;		On exit  : 0/0
  6559 ;;		Unchanged: 0/0
  6560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6561 ;;      Params:         0       0       2       0       0
  6562 ;;      Locals:         0       0       0       0       0
  6563 ;;      Temps:          0       0       0       0       0
  6564 ;;      Totals:         0       0       2       0       0
  6565 ;;Total ram usage:        2 bytes
  6566 ;; Hardware stack levels used:    1
  6567 ;; Hardware stack levels required when called:   10
  6568 ;; This function calls:
  6569 ;;		Nothing
  6570 ;; This function is called by:
  6571 ;;		_main
  6572 ;; This function uses a non-reentrant model
  6573 ;;
  6574                           psect	text2,class=CODE,space=0,reloc=2
  6575                           global __ptext2
  6576  001BDE                     __ptext2:
  6577                           psect	text2
  6578                           	file	"../src/my_uart.c"
  6579                           	line	30
  6580                           	global	__size_of_init_uart_recv
  6581  0000                     	__size_of_init_uart_recv	equ	__end_of_init_uart_recv-_init_uart_recv
  6582                           	
  6583  001BDE                     _init_uart_recv:
  6584                           	opt	stack 20
  6585                           	line	31
  6586                           	
  6587  001BDE                     l19111:
  6588                           ;my_uart.c: 31: uc_ptr = uc;
  6589  001BDE  C1A2  F04C         	movff	(init_uart_recv@uc),(c:_uc_ptr)
  6590  001BE2  C1A3  F04D         	movff	(init_uart_recv@uc+1),(c:_uc_ptr+1)
  6591                           	line	32
  6592                           	
  6593  001BE6                     l19113:
  6594                           ;my_uart.c: 32: uc_ptr->buflen = 0;
  6595  001BE6  EE20 F004          	lfsr	2,04h
  6596  001BEA  504C               	movf	((c:_uc_ptr)),c,w
  6597  001BEC  26D9               	addwf	fsr2l
  6598  001BEE  504D               	movf	((c:_uc_ptr+1)),c,w
  6599  001BF0  22DA               	addwfc	fsr2h
  6600  001BF2  0E00               	movlw	low(0)
  6601  001BF4  6EDF               	movwf	indf2
  6602                           	line	33
  6603                           	
  6604  001BF6                     l9209:
  6605  001BF6  0012               	return
  6606                           	opt stack 0
  6607                           GLOBAL	__end_of_init_uart_recv
  6608  001BF8                     	__end_of_init_uart_recv:
  6609                           	signat	_init_uart_recv,4216
  6610                           	global	_init_i2c
  6611                           
  6612 ;; *************** function _init_i2c *****************
  6613 ;; Defined at:
  6614 ;;		line 286 in file "../src/my_i2c.c"
  6615 ;; Parameters:    Size  Location     Type
  6616 ;;  ic              2    0[BANK1 ] PTR struct __i2c_comm
  6617 ;;		 -> main@ic(28), 
  6618 ;; Auto vars:     Size  Location     Type
  6619 ;;		None
  6620 ;; Return value:  Size  Location     Type
  6621 ;;		None               void
  6622 ;; Registers used:
  6623 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6624 ;; Tracked objects:
  6625 ;;		On entry : 0/0
  6626 ;;		On exit  : 0/0
  6627 ;;		Unchanged: 0/0
  6628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6629 ;;      Params:         0       0       2       0       0
  6630 ;;      Locals:         0       0       0       0       0
  6631 ;;      Temps:          0       0       0       0       0
  6632 ;;      Totals:         0       0       2       0       0
  6633 ;;Total ram usage:        2 bytes
  6634 ;; Hardware stack levels used:    1
  6635 ;; Hardware stack levels required when called:   10
  6636 ;; This function calls:
  6637 ;;		Nothing
  6638 ;; This function is called by:
  6639 ;;		_main
  6640 ;; This function uses a non-reentrant model
  6641 ;;
  6642                           psect	text3,class=CODE,space=0,reloc=2
  6643                           global __ptext3
  6644  0017CA                     __ptext3:
  6645                           psect	text3
  6646                           	file	"../src/my_i2c.c"
  6647                           	line	286
  6648                           	global	__size_of_init_i2c
  6649  0000                     	__size_of_init_i2c	equ	__end_of_init_i2c-_init_i2c
  6650                           	
  6651  0017CA                     _init_i2c:
  6652                           	opt	stack 20
  6653                           	line	287
  6654                           	
  6655  0017CA                     l19115:
  6656                           ;my_i2c.c: 287: ic_ptr = ic;
  6657  0017CA  C1A2  F04A         	movff	(init_i2c@ic),(c:_ic_ptr)
  6658  0017CE  C1A3  F04B         	movff	(init_i2c@ic+1),(c:_ic_ptr+1)
  6659                           	line	288
  6660                           	
  6661  0017D2                     l19117:
  6662                           ;my_i2c.c: 288: ic_ptr->buflen = 0;
  6663  0017D2  EE20 F00A          	lfsr	2,0Ah
  6664  0017D6  504A               	movf	((c:_ic_ptr)),c,w
  6665  0017D8  26D9               	addwf	fsr2l
  6666  0017DA  504B               	movf	((c:_ic_ptr+1)),c,w
  6667  0017DC  22DA               	addwfc	fsr2h
  6668  0017DE  0E00               	movlw	low(0)
  6669  0017E0  6EDF               	movwf	indf2
  6670                           	line	289
  6671                           ;my_i2c.c: 289: ic_ptr->event_count = 0;
  6672  0017E2  EE20 F00B          	lfsr	2,0Bh
  6673  0017E6  504A               	movf	((c:_ic_ptr)),c,w
  6674  0017E8  26D9               	addwf	fsr2l
  6675  0017EA  504B               	movf	((c:_ic_ptr+1)),c,w
  6676  0017EC  22DA               	addwfc	fsr2h
  6677  0017EE  0E00               	movlw	low(0)
  6678  0017F0  6EDF               	movwf	indf2
  6679                           	line	290
  6680                           ;my_i2c.c: 290: ic_ptr->status = 0x5;
  6681  0017F2  EE20 F00C          	lfsr	2,0Ch
  6682  0017F6  504A               	movf	((c:_ic_ptr)),c,w
  6683  0017F8  26D9               	addwf	fsr2l
  6684  0017FA  504B               	movf	((c:_ic_ptr+1)),c,w
  6685  0017FC  22DA               	addwfc	fsr2h
  6686  0017FE  0E05               	movlw	low(05h)
  6687  001800  6EDF               	movwf	indf2
  6688                           	line	291
  6689                           ;my_i2c.c: 291: ic_ptr->error_count = 0;
  6690  001802  EE20 F00E          	lfsr	2,0Eh
  6691  001806  504A               	movf	((c:_ic_ptr)),c,w
  6692  001808  26D9               	addwf	fsr2l
  6693  00180A  504B               	movf	((c:_ic_ptr+1)),c,w
  6694  00180C  22DA               	addwfc	fsr2h
  6695  00180E  0E00               	movlw	low(0)
  6696  001810  6EDF               	movwf	indf2
  6697                           	line	292
  6698                           	
  6699  001812                     l7407:
  6700  001812  0012               	return
  6701                           	opt stack 0
  6702                           GLOBAL	__end_of_init_i2c
  6703  001814                     	__end_of_init_i2c:
  6704                           	signat	_init_i2c,4216
  6705                           	global	_init_timer1_lthread
  6706                           
  6707 ;; *************** function _init_timer1_lthread *****************
  6708 ;; Defined at:
  6709 ;;		line 8 in file "../src/timer1_thread.c"
  6710 ;; Parameters:    Size  Location     Type
  6711 ;;  tptr            2    5[BANK1 ] PTR struct __timer1_thre
  6712 ;;		 -> main@t1thread_data(2), 
  6713 ;; Auto vars:     Size  Location     Type
  6714 ;;		None
  6715 ;; Return value:  Size  Location     Type
  6716 ;;		None               void
  6717 ;; Registers used:
  6718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6719 ;; Tracked objects:
  6720 ;;		On entry : 0/0
  6721 ;;		On exit  : 0/0
  6722 ;;		Unchanged: 0/0
  6723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6724 ;;      Params:         0       0       2       0       0
  6725 ;;      Locals:         0       0       0       0       0
  6726 ;;      Temps:          0       0       3       0       0
  6727 ;;      Totals:         0       0       5       0       0
  6728 ;;Total ram usage:        5 bytes
  6729 ;; Hardware stack levels used:    1
  6730 ;; Hardware stack levels required when called:   11
  6731 ;; This function calls:
  6732 ;;		_OpenADC
  6733 ;;		_SetChanADC
  6734 ;; This function is called by:
  6735 ;;		_main
  6736 ;; This function uses a non-reentrant model
  6737 ;;
  6738                           psect	text4,class=CODE,space=0,reloc=2
  6739                           global __ptext4
  6740  00160C                     __ptext4:
  6741                           psect	text4
  6742                           	file	"../src/timer1_thread.c"
  6743                           	line	8
  6744                           	global	__size_of_init_timer1_lthread
  6745  0000                     	__size_of_init_timer1_lthread	equ	__end_of_init_timer1_lthread-_init_timer1_lthread
  6746                           	
  6747  00160C                     _init_timer1_lthread:
  6748                           	opt	stack 19
  6749                           	line	13
  6750                           	
  6751  00160C                     l19119:
  6752                           ;timer1_thread.c: 10: OpenADC(0b10011111 & 0b11111111 & 0b11110001,
  6753                           ;timer1_thread.c: 11: 0b10000111 & 0b10001111 &
  6754                           ;timer1_thread.c: 12: 0b01111111 & 0b11111110 &
  6755                           ;timer1_thread.c: 13: 0b11111101, 0b1011);
  6756  00160C  0101               	movlb	1	; () banked
  6757  00160E  6FA9               	movwf	(??_init_timer1_lthread+0+0)&0ffh
  6758  001610  0E91               	movlw	low(091h)
  6759  001612  0101               	movlb	1	; () banked
  6760  001614  0101               	movlb	1	; () banked
  6761  001616  6FA2               	movwf	((?_OpenADC))&0ffh
  6762  001618  0101               	movlb	1	; () banked
  6763  00161A  51A9               	movf	(??_init_timer1_lthread+0+0)&0ffh,w
  6764  00161C  0101               	movlb	1	; () banked
  6765  00161E  6FAA               	movwf	(??_init_timer1_lthread+1+0)&0ffh
  6766  001620  0E04               	movlw	low(04h)
  6767  001622  0101               	movlb	1	; () banked
  6768  001624  0101               	movlb	1	; () banked
  6769  001626  6FA3               	movwf	(0+(?_OpenADC+01h))&0ffh
  6770  001628  0101               	movlb	1	; () banked
  6771  00162A  51AA               	movf	(??_init_timer1_lthread+1+0)&0ffh,w
  6772  00162C  0101               	movlb	1	; () banked
  6773  00162E  6FAB               	movwf	(??_init_timer1_lthread+2+0)&0ffh
  6774  001630  0E0B               	movlw	low(0Bh)
  6775  001632  0101               	movlb	1	; () banked
  6776  001634  0101               	movlb	1	; () banked
  6777  001636  6FA4               	movwf	(0+(?_OpenADC+02h))&0ffh
  6778  001638  0101               	movlb	1	; () banked
  6779  00163A  51AB               	movf	(??_init_timer1_lthread+2+0)&0ffh,w
  6780  00163C  0101               	movlb	1	; () banked
  6781  00163E  EC52  F00A         	call	_OpenADC	;wreg free
  6782                           	line	14
  6783                           ;timer1_thread.c: 14: SetChanADC(0b10000111);
  6784  001642  0101               	movlb	1	; () banked
  6785  001644  6FA9               	movwf	(??_init_timer1_lthread+0+0)&0ffh
  6786  001646  0E87               	movlw	low(087h)
  6787  001648  0101               	movlb	1	; () banked
  6788  00164A  0101               	movlb	1	; () banked
  6789  00164C  6FA2               	movwf	((?_SetChanADC))&0ffh
  6790  00164E  0101               	movlb	1	; () banked
  6791  001650  51A9               	movf	(??_init_timer1_lthread+0+0)&0ffh,w
  6792  001652  0101               	movlb	1	; () banked
  6793  001654  ECE1  F00D         	call	_SetChanADC	;wreg free
  6794                           	line	16
  6795                           	
  6796  001658                     l19121:
  6797                           ;timer1_thread.c: 16: (PIR1bits.ADIF=0,INTCONbits.PEIE=1,PIE1bits.ADIE=1);
  6798  001658  9C9E               	bcf	((c:3998)),c,6	;volatile
  6799                           	
  6800  00165A                     l19123:
  6801  00165A  8CF2               	bsf	((c:4082)),c,6	;volatile
  6802                           	
  6803  00165C                     l19125:
  6804  00165C  8C9D               	bsf	((c:3997)),c,6	;volatile
  6805                           	line	17
  6806                           	
  6807  00165E                     l19127:
  6808                           ;timer1_thread.c: 17: tptr->timerval = 0;
  6809  00165E  C1A7  FFD9         	movff	(init_timer1_lthread@tptr),fsr2l
  6810  001662  C1A8  FFDA         	movff	(init_timer1_lthread@tptr+1),fsr2h
  6811  001666  0E00               	movlw	low(0)
  6812  001668  6EDE               	movwf	postinc2
  6813  00166A  0E00               	movlw	high(0)
  6814  00166C  6EDD               	movwf	postdec2
  6815                           	line	18
  6816                           	
  6817  00166E                     l12789:
  6818  00166E  0012               	return
  6819                           	opt stack 0
  6820                           GLOBAL	__end_of_init_timer1_lthread
  6821  001670                     	__end_of_init_timer1_lthread:
  6822                           	signat	_init_timer1_lthread,4216
  6823                           	global	_init_queues
  6824                           
  6825 ;; *************** function _init_queues *****************
  6826 ;; Defined at:
  6827 ;;		line 194 in file "../src/messages.c"
  6828 ;; Parameters:    Size  Location     Type
  6829 ;;		None
  6830 ;; Auto vars:     Size  Location     Type
  6831 ;;		None
  6832 ;; Return value:  Size  Location     Type
  6833 ;;		None               void
  6834 ;; Registers used:
  6835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6836 ;; Tracked objects:
  6837 ;;		On entry : 0/0
  6838 ;;		On exit  : 0/0
  6839 ;;		Unchanged: 0/0
  6840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6841 ;;      Params:         0       0       0       0       0
  6842 ;;      Locals:         0       0       0       0       0
  6843 ;;      Temps:          0       0       1       0       0
  6844 ;;      Totals:         0       0       1       0       0
  6845 ;;Total ram usage:        1 bytes
  6846 ;; Hardware stack levels used:    1
  6847 ;; Hardware stack levels required when called:   11
  6848 ;; This function calls:
  6849 ;;		_init_queue
  6850 ;; This function is called by:
  6851 ;;		_main
  6852 ;; This function uses a non-reentrant model
  6853 ;;
  6854                           psect	text5,class=CODE,space=0,reloc=2
  6855                           global __ptext5
  6856  00159E                     __ptext5:
  6857                           psect	text5
  6858                           	file	"../src/messages.c"
  6859                           	line	194
  6860                           	global	__size_of_init_queues
  6861  0000                     	__size_of_init_queues	equ	__end_of_init_queues-_init_queues
  6862                           	
  6863  00159E                     _init_queues:
  6864                           	opt	stack 19
  6865                           	line	195
  6866                           	
  6867  00159E                     l19129:
  6868                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  6869  00159E  0101               	movlb	1	; () banked
  6870  0015A0  6FA6               	movwf	(??_init_queues+0+0)&0ffh
  6871  0015A2  0E00               	movlw	low(0)
  6872  0015A4  6E48               	movwf	((c:_MQ_Main_Willing_to_block)),c
  6873  0015A6  0101               	movlb	1	; () banked
  6874  0015A8  51A6               	movf	(??_init_queues+0+0)&0ffh,w
  6875                           	line	196
  6876                           	
  6877  0015AA                     l19131:; BSR set to: 1
  6878                           
  6879                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  6880  0015AA  0100               	movlb	0	; () banked
  6881  0015AC  0E00               	movlw	high(_ToMainLow_MQ)
  6882  0015AE  0101               	movlb	1	; () banked
  6883  0015B0  0101               	movlb	1	; () banked
  6884  0015B2  6FA3               	movwf	((?_init_queue+1))&0ffh
  6885  0015B4  0100               	movlb	0	; () banked
  6886  0015B6  0E82               	movlw	low(_ToMainLow_MQ)
  6887  0015B8  0101               	movlb	1	; () banked
  6888  0015BA  6FA2               	movwf	((?_init_queue))&0ffh
  6889  0015BC  0101               	movlb	1	; () banked
  6890  0015BE  EC0F  F00A         	call	_init_queue	;wreg free
  6891                           	line	197
  6892                           	
  6893  0015C2                     l19133:
  6894                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  6895  0015C2  0101               	movlb	1	; () banked
  6896  0015C4  0E01               	movlw	high(_ToMainHigh_MQ)
  6897  0015C6  0101               	movlb	1	; () banked
  6898  0015C8  0101               	movlb	1	; () banked
  6899  0015CA  6FA3               	movwf	((?_init_queue+1))&0ffh
  6900  0015CC  0101               	movlb	1	; () banked
  6901  0015CE  0E6C               	movlw	low(_ToMainHigh_MQ)
  6902  0015D0  0101               	movlb	1	; () banked
  6903  0015D2  6FA2               	movwf	((?_init_queue))&0ffh
  6904  0015D4  0101               	movlb	1	; () banked
  6905  0015D6  EC0F  F00A         	call	_init_queue	;wreg free
  6906                           	line	198
  6907                           	
  6908  0015DA                     l19135:
  6909                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  6910  0015DA  0101               	movlb	1	; () banked
  6911  0015DC  0E01               	movlw	high(_FromMainLow_MQ)
  6912  0015DE  0101               	movlb	1	; () banked
  6913  0015E0  0101               	movlb	1	; () banked
  6914  0015E2  6FA3               	movwf	((?_init_queue+1))&0ffh
  6915  0015E4  0101               	movlb	1	; () banked
  6916  0015E6  0E36               	movlw	low(_FromMainLow_MQ)
  6917  0015E8  0101               	movlb	1	; () banked
  6918  0015EA  6FA2               	movwf	((?_init_queue))&0ffh
  6919  0015EC  0101               	movlb	1	; () banked
  6920  0015EE  EC0F  F00A         	call	_init_queue	;wreg free
  6921                           	line	199
  6922                           	
  6923  0015F2                     l19137:
  6924                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  6925  0015F2  0101               	movlb	1	; () banked
  6926  0015F4  0E01               	movlw	high(_FromMainHigh_MQ)
  6927  0015F6  0101               	movlb	1	; () banked
  6928  0015F8  0101               	movlb	1	; () banked
  6929  0015FA  6FA3               	movwf	((?_init_queue+1))&0ffh
  6930  0015FC  0101               	movlb	1	; () banked
  6931  0015FE  0E00               	movlw	low(_FromMainHigh_MQ)
  6932  001600  0101               	movlb	1	; () banked
  6933  001602  6FA2               	movwf	((?_init_queue))&0ffh
  6934  001604  0101               	movlb	1	; () banked
  6935  001606  EC0F  F00A         	call	_init_queue	;wreg free
  6936                           	line	200
  6937                           	
  6938  00160A                     l5517:
  6939  00160A  0012               	return
  6940                           	opt stack 0
  6941                           GLOBAL	__end_of_init_queues
  6942  00160C                     	__end_of_init_queues:
  6943                           	signat	_init_queues,88
  6944                           	global	_OpenTimer1
  6945                           
  6946 ;; *************** function _OpenTimer1 *****************
  6947 ;; Defined at:
  6948 ;;		line 17 in file "plib/Timers/t1open.c"
  6949 ;; Parameters:    Size  Location     Type
  6950 ;;  config          1    0[BANK1 ] unsigned char 
  6951 ;; Auto vars:     Size  Location     Type
  6952 ;;		None
  6953 ;; Return value:  Size  Location     Type
  6954 ;;		None               void
  6955 ;; Registers used:
  6956 ;;		wreg, status,2, status,0
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : 0/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6962 ;;      Params:         0       0       1       0       0
  6963 ;;      Locals:         0       0       0       0       0
  6964 ;;      Temps:          0       0       0       0       0
  6965 ;;      Totals:         0       0       1       0       0
  6966 ;;Total ram usage:        1 bytes
  6967 ;; Hardware stack levels used:    1
  6968 ;; Hardware stack levels required when called:   10
  6969 ;; This function calls:
  6970 ;;		Nothing
  6971 ;; This function is called by:
  6972 ;;		_main
  6973 ;; This function uses a non-reentrant model
  6974 ;;
  6975                           psect	text6,class=CODE,space=0,reloc=2
  6976                           global __ptext6
  6977  0018E8                     __ptext6:
  6978                           psect	text6
  6979                           	file	"plib/Timers/t1open.c"
  6980                           	line	17
  6981                           	global	__size_of_OpenTimer1
  6982  0000                     	__size_of_OpenTimer1	equ	__end_of_OpenTimer1-_OpenTimer1
  6983                           	
  6984  0018E8                     _OpenTimer1:
  6985                           	opt	stack 20
  6986                           	line	18
  6987                           	
  6988  0018E8                     l19139:
  6989  0018E8  0101               	movlb	1	; () banked
  6990  0018EA  0101               	movlb	1	; () banked
  6991  0018EC  51A2               	movf	((OpenTimer1@config))&0ffh,w
  6992  0018EE  0B7E               	andlw	low(07Eh)
  6993  0018F0  6ECD               	movwf	((c:4045)),c	;volatile
  6994                           	line	21
  6995                           	
  6996  0018F2                     l19141:; BSR set to: 1
  6997                           
  6998  0018F2  0101               	movlb	1	; () banked
  6999                           	
  7000  0018F4  0101               	movlb	1	; () banked
  7001  0018F6  ADA2               	btfss	((OpenTimer1@config))&0ffh,(6)&7
  7002  0018F8  D001               	goto	u2241
  7003  0018FA  D001               	goto	u2240
  7004  0018FC                     u2241:
  7005  0018FC  D002               	goto	l16449
  7006  0018FE                     u2240:
  7007                           	line	22
  7008                           	
  7009  0018FE                     l19143:; BSR set to: 1
  7010                           
  7011  0018FE  8ECD               	bsf	((c:4045)),c,7	;volatile
  7012  001900  D002               	goto	l19145
  7013                           	line	23
  7014                           	
  7015  001902                     l16449:; BSR set to: 1
  7016                           
  7017                           	line	24
  7018  001902  9ECD               	bcf	((c:4045)),c,7	;volatile
  7019  001904  D000               	goto	l19145
  7020                           	
  7021  001906                     l16450:; BSR set to: 1
  7022                           
  7023                           	line	26
  7024                           	
  7025  001906                     l19145:; BSR set to: 1
  7026                           
  7027  001906  0E00               	movlw	low(0)
  7028  001908  6ECF               	movwf	((c:4047)),c	;volatile
  7029                           	line	27
  7030  00190A  0E00               	movlw	low(0)
  7031  00190C  6ECE               	movwf	((c:4046)),c	;volatile
  7032                           	line	28
  7033                           	
  7034  00190E                     l19147:; BSR set to: 1
  7035                           
  7036  00190E  909E               	bcf	((c:3998)),c,0	;volatile
  7037                           	line	30
  7038                           	
  7039  001910                     l19149:; BSR set to: 1
  7040                           
  7041  001910  0101               	movlb	1	; () banked
  7042                           	
  7043  001912  0101               	movlb	1	; () banked
  7044  001914  AFA2               	btfss	((OpenTimer1@config))&0ffh,(7)&7
  7045  001916  D001               	goto	u2251
  7046  001918  D001               	goto	u2250
  7047  00191A                     u2251:
  7048  00191A  D002               	goto	l16451
  7049  00191C                     u2250:
  7050                           	line	31
  7051                           	
  7052  00191C                     l19151:; BSR set to: 1
  7053                           
  7054  00191C  809D               	bsf	((c:3997)),c,0	;volatile
  7055  00191E  D001               	goto	l16452
  7056                           	line	32
  7057                           	
  7058  001920                     l16451:; BSR set to: 1
  7059                           
  7060                           	line	33
  7061  001920  909D               	bcf	((c:3997)),c,0	;volatile
  7062                           	
  7063  001922                     l16452:; BSR set to: 1
  7064                           
  7065                           	line	35
  7066  001922  80CD               	bsf	((c:4045)),c,0	;volatile
  7067                           	line	36
  7068                           	
  7069  001924                     l16453:; BSR set to: 1
  7070                           
  7071  001924  0012               	return
  7072                           	opt stack 0
  7073                           GLOBAL	__end_of_OpenTimer1
  7074  001926                     	__end_of_OpenTimer1:
  7075                           	signat	_OpenTimer1,4216
  7076                           	global	_i2c_configure_slave
  7077                           
  7078 ;; *************** function _i2c_configure_slave *****************
  7079 ;; Defined at:
  7080 ;;		line 297 in file "../src/my_i2c.c"
  7081 ;; Parameters:    Size  Location     Type
  7082 ;;  addr            1    0[BANK1 ] unsigned char 
  7083 ;; Auto vars:     Size  Location     Type
  7084 ;;		None
  7085 ;; Return value:  Size  Location     Type
  7086 ;;		None               void
  7087 ;; Registers used:
  7088 ;;		wreg, status,2, status,0
  7089 ;; Tracked objects:
  7090 ;;		On entry : 0/0
  7091 ;;		On exit  : 0/0
  7092 ;;		Unchanged: 0/0
  7093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7094 ;;      Params:         0       0       1       0       0
  7095 ;;      Locals:         0       0       0       0       0
  7096 ;;      Temps:          0       0       0       0       0
  7097 ;;      Totals:         0       0       1       0       0
  7098 ;;Total ram usage:        1 bytes
  7099 ;; Hardware stack levels used:    1
  7100 ;; Hardware stack levels required when called:   10
  7101 ;; This function calls:
  7102 ;;		Nothing
  7103 ;; This function is called by:
  7104 ;;		_main
  7105 ;; This function uses a non-reentrant model
  7106 ;;
  7107                           psect	text7,class=CODE,space=0,reloc=2
  7108                           global __ptext7
  7109  001B56                     __ptext7:
  7110                           psect	text7
  7111                           	file	"../src/my_i2c.c"
  7112                           	line	297
  7113                           	global	__size_of_i2c_configure_slave
  7114  0000                     	__size_of_i2c_configure_slave	equ	__end_of_i2c_configure_slave-_i2c_configure_slave
  7115                           	
  7116  001B56                     _i2c_configure_slave:; BSR set to: 1
  7117                           
  7118                           	opt	stack 20
  7119                           	line	300
  7120                           	
  7121  001B56                     l19153:
  7122                           ;my_i2c.c: 300: TRISCbits.TRISC3 = 1;
  7123  001B56  8694               	bsf	((c:3988)),c,3	;volatile
  7124                           	line	301
  7125                           ;my_i2c.c: 301: TRISCbits.TRISC4 = 1;
  7126  001B58  8894               	bsf	((c:3988)),c,4	;volatile
  7127                           	line	303
  7128                           ;my_i2c.c: 303: SSPADD = addr;
  7129  001B5A  C1A2  FFC8         	movff	(i2c_configure_slave@addr),(c:4040)	;volatile
  7130                           	line	305
  7131                           	
  7132  001B5E                     l19155:
  7133                           ;my_i2c.c: 305: SSPSTAT = 0x0;
  7134  001B5E  0E00               	movlw	low(0)
  7135  001B60  6EC7               	movwf	((c:4039)),c	;volatile
  7136                           	line	306
  7137                           ;my_i2c.c: 306: SSPCON1 = 0x0;
  7138  001B62  0E00               	movlw	low(0)
  7139  001B64  6EC6               	movwf	((c:4038)),c	;volatile
  7140                           	line	307
  7141                           ;my_i2c.c: 307: SSPCON2 = 0x0;
  7142  001B66  0E00               	movlw	low(0)
  7143  001B68  6EC5               	movwf	((c:4037)),c	;volatile
  7144                           	line	308
  7145                           	
  7146  001B6A                     l19157:
  7147                           ;my_i2c.c: 308: SSPCON1 |= 0x0E;
  7148  001B6A  0E0E               	movlw	(0Eh)&0ffh
  7149  001B6C  12C6               	iorwf	((c:4038)),c	;volatile
  7150                           	line	309
  7151                           	
  7152  001B6E                     l19159:
  7153                           ;my_i2c.c: 309: SSPSTAT |= 0b10000000;
  7154  001B6E  8EC7               	bsf	(0+(7/8)+(c:4039)),c,(7)&7	;volatile
  7155                           	line	311
  7156                           	
  7157  001B70                     l19161:
  7158                           ;my_i2c.c: 311: TRISCbits.TRISC3 = 1;
  7159  001B70  8694               	bsf	((c:3988)),c,3	;volatile
  7160                           	line	312
  7161                           	
  7162  001B72                     l19163:
  7163                           ;my_i2c.c: 312: TRISCbits.TRISC4 = 1;
  7164  001B72  8894               	bsf	((c:3988)),c,4	;volatile
  7165                           	line	322
  7166                           	
  7167  001B74                     l19165:
  7168                           ;my_i2c.c: 322: SSPCON2bits.SEN = 1;
  7169  001B74  80C5               	bsf	((c:4037)),c,0	;volatile
  7170                           	line	323
  7171                           	
  7172  001B76                     l19167:
  7173                           ;my_i2c.c: 323: SSPCON1 |= 0b00100000;
  7174  001B76  8AC6               	bsf	(0+(5/8)+(c:4038)),c,(5)&7	;volatile
  7175                           	line	325
  7176                           	
  7177  001B78                     l7410:
  7178  001B78  0012               	return
  7179                           	opt stack 0
  7180                           GLOBAL	__end_of_i2c_configure_slave
  7181  001B7A                     	__end_of_i2c_configure_slave:
  7182                           	signat	_i2c_configure_slave,4216
  7183                           	global	_OpenUSART
  7184                           
  7185 ;; *************** function _OpenUSART *****************
  7186 ;; Defined at:
  7187 ;;		line 74 in file "plib/USART/uopen.c"
  7188 ;; Parameters:    Size  Location     Type
  7189 ;;  config          1    0[BANK1 ] unsigned char 
  7190 ;;  spbrg           2    1[BANK1 ] unsigned int 
  7191 ;; Auto vars:     Size  Location     Type
  7192 ;;		None
  7193 ;; Return value:  Size  Location     Type
  7194 ;;		None               void
  7195 ;; Registers used:
  7196 ;;		wreg, status,2
  7197 ;; Tracked objects:
  7198 ;;		On entry : 0/0
  7199 ;;		On exit  : 0/0
  7200 ;;		Unchanged: 0/0
  7201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7202 ;;      Params:         0       0       3       0       0
  7203 ;;      Locals:         0       0       0       0       0
  7204 ;;      Temps:          0       0       0       0       0
  7205 ;;      Totals:         0       0       3       0       0
  7206 ;;Total ram usage:        3 bytes
  7207 ;; Hardware stack levels used:    1
  7208 ;; Hardware stack levels required when called:   10
  7209 ;; This function calls:
  7210 ;;		Nothing
  7211 ;; This function is called by:
  7212 ;;		_main
  7213 ;; This function uses a non-reentrant model
  7214 ;;
  7215                           psect	text8,class=CODE,space=0,reloc=2
  7216                           global __ptext8
  7217  001188                     __ptext8:
  7218                           psect	text8
  7219                           	file	"plib/USART/uopen.c"
  7220                           	line	74
  7221                           	global	__size_of_OpenUSART
  7222  0000                     	__size_of_OpenUSART	equ	__end_of_OpenUSART-_OpenUSART
  7223                           	
  7224  001188                     _OpenUSART:
  7225                           	opt	stack 20
  7226                           	line	75
  7227                           	
  7228  001188                     l19169:
  7229  001188  0E00               	movlw	low(0)
  7230  00118A  6EAC               	movwf	((c:4012)),c	;volatile
  7231                           	line	76
  7232  00118C  0E00               	movlw	low(0)
  7233  00118E  6EAB               	movwf	((c:4011)),c	;volatile
  7234                           	line	78
  7235                           	
  7236  001190                     l19171:
  7237  001190  0101               	movlb	1	; () banked
  7238                           	
  7239  001192  0101               	movlb	1	; () banked
  7240  001194  A1A2               	btfss	((OpenUSART@config))&0ffh,(0)&7
  7241  001196  D001               	goto	u2261
  7242  001198  D001               	goto	u2260
  7243  00119A                     u2261:
  7244  00119A  D001               	goto	l16490
  7245  00119C                     u2260:
  7246                           	line	79
  7247                           	
  7248  00119C                     l19173:; BSR set to: 1
  7249                           
  7250  00119C  88AC               	bsf	((c:4012)),c,4	;volatile
  7251                           	
  7252  00119E                     l16490:; BSR set to: 1
  7253                           
  7254                           	line	81
  7255  00119E  0101               	movlb	1	; () banked
  7256                           	
  7257  0011A0  0101               	movlb	1	; () banked
  7258  0011A2  A3A2               	btfss	((OpenUSART@config))&0ffh,(1)&7
  7259  0011A4  D001               	goto	u2271
  7260  0011A6  D001               	goto	u2270
  7261  0011A8                     u2271:
  7262  0011A8  D002               	goto	l16491
  7263  0011AA                     u2270:
  7264                           	line	83
  7265                           	
  7266  0011AA                     l19175:; BSR set to: 1
  7267                           
  7268  0011AA  8CAC               	bsf	((c:4012)),c,6	;volatile
  7269                           	line	84
  7270  0011AC  8CAB               	bsf	((c:4011)),c,6	;volatile
  7271                           	line	85
  7272                           	
  7273  0011AE                     l16491:; BSR set to: 1
  7274                           
  7275                           	line	87
  7276  0011AE  0101               	movlb	1	; () banked
  7277                           	
  7278  0011B0  0101               	movlb	1	; () banked
  7279  0011B2  A5A2               	btfss	((OpenUSART@config))&0ffh,(2)&7
  7280  0011B4  D001               	goto	u2281
  7281  0011B6  D001               	goto	u2280
  7282  0011B8                     u2281:
  7283  0011B8  D001               	goto	l16492
  7284  0011BA                     u2280:
  7285                           	line	88
  7286                           	
  7287  0011BA                     l19177:; BSR set to: 1
  7288                           
  7289  0011BA  8EAC               	bsf	((c:4012)),c,7	;volatile
  7290                           	
  7291  0011BC                     l16492:; BSR set to: 1
  7292                           
  7293                           	line	90
  7294  0011BC  0101               	movlb	1	; () banked
  7295                           	
  7296  0011BE  0101               	movlb	1	; () banked
  7297  0011C0  A7A2               	btfss	((OpenUSART@config))&0ffh,(3)&7
  7298  0011C2  D001               	goto	u2291
  7299  0011C4  D001               	goto	u2290
  7300  0011C6                     u2291:
  7301  0011C6  D002               	goto	l16493
  7302  0011C8                     u2290:
  7303                           	line	91
  7304                           	
  7305  0011C8                     l19179:; BSR set to: 1
  7306                           
  7307  0011C8  88AB               	bsf	((c:4011)),c,4	;volatile
  7308  0011CA  D001               	goto	l16494
  7309                           	line	92
  7310                           	
  7311  0011CC                     l16493:; BSR set to: 1
  7312                           
  7313                           	line	93
  7314  0011CC  8AAB               	bsf	((c:4011)),c,5	;volatile
  7315                           	
  7316  0011CE                     l16494:; BSR set to: 1
  7317                           
  7318                           	line	95
  7319  0011CE  0101               	movlb	1	; () banked
  7320                           	
  7321  0011D0  0101               	movlb	1	; () banked
  7322  0011D2  A9A2               	btfss	((OpenUSART@config))&0ffh,(4)&7
  7323  0011D4  D001               	goto	u2301
  7324  0011D6  D001               	goto	u2300
  7325  0011D8                     u2301:
  7326  0011D8  D001               	goto	l16495
  7327  0011DA                     u2300:
  7328                           	line	96
  7329                           	
  7330  0011DA                     l19181:; BSR set to: 1
  7331                           
  7332  0011DA  84AC               	bsf	((c:4012)),c,2	;volatile
  7333                           	
  7334  0011DC                     l16495:; BSR set to: 1
  7335                           
  7336                           	line	98
  7337  0011DC  989E               	bcf	((c:3998)),c,4	;volatile
  7338                           	line	100
  7339  0011DE  0101               	movlb	1	; () banked
  7340                           	
  7341  0011E0  0101               	movlb	1	; () banked
  7342  0011E2  ABA2               	btfss	((OpenUSART@config))&0ffh,(5)&7
  7343  0011E4  D001               	goto	u2311
  7344  0011E6  D001               	goto	u2310
  7345  0011E8                     u2311:
  7346  0011E8  D001               	goto	l16496
  7347  0011EA                     u2310:
  7348                           	line	101
  7349                           	
  7350  0011EA                     l19183:; BSR set to: 1
  7351                           
  7352  0011EA  86AB               	bsf	((c:4011)),c,3	;volatile
  7353                           	
  7354  0011EC                     l16496:; BSR set to: 1
  7355                           
  7356                           	line	103
  7357  0011EC  0101               	movlb	1	; () banked
  7358                           	
  7359  0011EE  0101               	movlb	1	; () banked
  7360  0011F0  ADA2               	btfss	((OpenUSART@config))&0ffh,(6)&7
  7361  0011F2  D001               	goto	u2321
  7362  0011F4  D001               	goto	u2320
  7363  0011F6                     u2321:
  7364  0011F6  D002               	goto	l16497
  7365  0011F8                     u2320:
  7366                           	line	104
  7367                           	
  7368  0011F8                     l19185:; BSR set to: 1
  7369                           
  7370  0011F8  8A9D               	bsf	((c:3997)),c,5	;volatile
  7371  0011FA  D001               	goto	l16498
  7372                           	line	105
  7373                           	
  7374  0011FC                     l16497:; BSR set to: 1
  7375                           
  7376                           	line	106
  7377  0011FC  9A9D               	bcf	((c:3997)),c,5	;volatile
  7378                           	
  7379  0011FE                     l16498:; BSR set to: 1
  7380                           
  7381                           	line	108
  7382  0011FE  9A9E               	bcf	((c:3998)),c,5	;volatile
  7383                           	line	110
  7384  001200  0101               	movlb	1	; () banked
  7385                           	
  7386  001202  0101               	movlb	1	; () banked
  7387  001204  AFA2               	btfss	((OpenUSART@config))&0ffh,(7)&7
  7388  001206  D001               	goto	u2331
  7389  001208  D001               	goto	u2330
  7390  00120A                     u2331:
  7391  00120A  D002               	goto	l16499
  7392  00120C                     u2330:
  7393                           	line	111
  7394                           	
  7395  00120C                     l19187:; BSR set to: 1
  7396                           
  7397  00120C  889D               	bsf	((c:3997)),c,4	;volatile
  7398  00120E  D001               	goto	l16500
  7399                           	line	112
  7400                           	
  7401  001210                     l16499:; BSR set to: 1
  7402                           
  7403                           	line	113
  7404  001210  989D               	bcf	((c:3997)),c,4	;volatile
  7405                           	
  7406  001212                     l16500:; BSR set to: 1
  7407                           
  7408                           	line	115
  7409  001212  C1A3  FFAF         	movff	(OpenUSART@spbrg),(c:4015)	;volatile
  7410                           	line	116
  7411                           	
  7412  001216                     l19189:; BSR set to: 1
  7413                           
  7414  001216  0101               	movlb	1	; () banked
  7415  001218  0101               	movlb	1	; () banked
  7416  00121A  51A4               	movf	((OpenUSART@spbrg+1))&0ffh,w
  7417  00121C  6EB0               	movwf	((c:4016)),c	;volatile
  7418                           	line	118
  7419                           	
  7420  00121E                     l19191:; BSR set to: 1
  7421                           
  7422  00121E  8AAC               	bsf	((c:4012)),c,5	;volatile
  7423                           	line	119
  7424                           	
  7425  001220                     l19193:; BSR set to: 1
  7426                           
  7427  001220  8EAB               	bsf	((c:4011)),c,7	;volatile
  7428                           	line	137
  7429                           	
  7430  001222                     l19195:; BSR set to: 1
  7431                           
  7432  001222  9C94               	bcf	((c:3988)),c,6	;volatile
  7433                           	
  7434  001224                     l19197:; BSR set to: 1
  7435                           
  7436  001224  8E94               	bsf	((c:3988)),c,7	;volatile
  7437                           	line	138
  7438                           	
  7439  001226                     l19199:; BSR set to: 1
  7440                           
  7441                           	
  7442  001226  A8AC               	btfss	((c:4012)),c,4	;volatile
  7443  001228  D001               	goto	u2341
  7444  00122A  D001               	goto	u2340
  7445  00122C                     u2341:
  7446  00122C  D006               	goto	l16502
  7447  00122E                     u2340:
  7448                           	
  7449  00122E                     l19201:; BSR set to: 1
  7450                           
  7451                           	
  7452  00122E  BEAC               	btfsc	((c:4012)),c,7	;volatile
  7453  001230  D001               	goto	u2351
  7454  001232  D001               	goto	u2350
  7455  001234                     u2351:
  7456  001234  D002               	goto	l16502
  7457  001236                     u2350:
  7458                           	line	139
  7459                           	
  7460  001236                     l19203:; BSR set to: 1
  7461                           
  7462  001236  8C94               	bsf	((c:3988)),c,6	;volatile
  7463  001238  D000               	goto	l16502
  7464                           	
  7465  00123A                     l16501:; BSR set to: 1
  7466                           
  7467                           	line	143
  7468                           	
  7469  00123A                     l16502:; BSR set to: 1
  7470                           
  7471  00123A  0012               	return
  7472                           	opt stack 0
  7473                           GLOBAL	__end_of_OpenUSART
  7474  00123C                     	__end_of_OpenUSART:
  7475                           	signat	_OpenUSART,8312
  7476                           	global	_block_on_To_msgqueues
  7477                           
  7478 ;; *************** function _block_on_To_msgqueues *****************
  7479 ;; Defined at:
  7480 ;;		line 258 in file "../src/messages.c"
  7481 ;; Parameters:    Size  Location     Type
  7482 ;;		None
  7483 ;; Auto vars:     Size  Location     Type
  7484 ;;		None
  7485 ;; Return value:  Size  Location     Type
  7486 ;;		None               void
  7487 ;; Registers used:
  7488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7489 ;; Tracked objects:
  7490 ;;		On entry : 0/0
  7491 ;;		On exit  : 0/0
  7492 ;;		Unchanged: 0/0
  7493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7494 ;;      Params:         0       0       0       0       0
  7495 ;;      Locals:         0       0       0       0       0
  7496 ;;      Temps:          0       0       1       0       0
  7497 ;;      Totals:         0       0       1       0       0
  7498 ;;Total ram usage:        1 bytes
  7499 ;; Hardware stack levels used:    1
  7500 ;; Hardware stack levels required when called:   13
  7501 ;; This function calls:
  7502 ;;		_in_main
  7503 ;;		_check_msg
  7504 ;;		_Delay1KTCYx
  7505 ;; This function is called by:
  7506 ;;		_main
  7507 ;; This function uses a non-reentrant model
  7508 ;;
  7509                           psect	text9,class=CODE,space=0,reloc=2
  7510                           global __ptext9
  7511  000E7E                     __ptext9:
  7512                           psect	text9
  7513                           	file	"../src/messages.c"
  7514                           	line	258
  7515                           	global	__size_of_block_on_To_msgqueues
  7516  0000                     	__size_of_block_on_To_msgqueues	equ	__end_of_block_on_To_msgqueues-_block_on_To_msgqueu
                                 es
  7517                           	
  7518  000E7E                     _block_on_To_msgqueues:; BSR set to: 1
  7519                           
  7520                           	opt	stack 17
  7521                           	line	259
  7522                           	
  7523  000E7E                     l19205:
  7524                           ;messages.c: 259: if (!in_main()) {
  7525  000E7E  0101               	movlb	1	; () banked
  7526  000E80  EC67  F00B         	call	_in_main	;wreg free
  7527  000E84  0101               	movlb	1	; () banked
  7528  000E86  0101               	movlb	1	; () banked
  7529  000E88  51A7               	movf	(1+?_in_main)&0ffh,w
  7530  000E8A  0101               	movlb	1	; () banked
  7531  000E8C  11A6               	iorwf (0+?_in_main)&0ffh,w
  7532                           
  7533  000E8E  A4D8               	btfss	status,2
  7534  000E90  D001               	goto	u2361
  7535  000E92  D001               	goto	u2360
  7536  000E94                     u2361:
  7537  000E94  D002               	goto	l5534
  7538  000E96                     u2360:
  7539  000E96  D05C               	goto	l5535
  7540                           	line	260
  7541                           	
  7542  000E98                     l19207:; BSR set to: 1
  7543                           
  7544                           ;messages.c: 260: return;
  7545  000E98  D05B               	goto	l5535
  7546                           	line	261
  7547                           	
  7548  000E9A                     l5534:; BSR set to: 1
  7549                           
  7550                           	line	262
  7551                           ;messages.c: 261: }
  7552                           ;messages.c: 262: LATBbits.LATB3 = 1;
  7553  000E9A  868A               	bsf	((c:3978)),c,3	;volatile
  7554                           	line	263
  7555                           	
  7556  000E9C                     l19209:; BSR set to: 1
  7557                           
  7558                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  7559  000E9C  0101               	movlb	1	; () banked
  7560  000E9E  6FA8               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7561  000EA0  0E01               	movlw	low(01h)
  7562  000EA2  6E48               	movwf	((c:_MQ_Main_Willing_to_block)),c
  7563  000EA4  0101               	movlb	1	; () banked
  7564  000EA6  51A8               	movf	(??_block_on_To_msgqueues+0+0)&0ffh,w
  7565  000EA8  D000               	goto	l19211
  7566                           	line	264
  7567                           ;messages.c: 264: while (1) {
  7568                           	
  7569  000EAA                     l5536:; BSR set to: 1
  7570                           
  7571                           	line	265
  7572                           	
  7573  000EAA                     l19211:; BSR set to: 1
  7574                           
  7575                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  7576  000EAA  0101               	movlb	1	; () banked
  7577  000EAC  0E01               	movlw	high(_ToMainHigh_MQ)
  7578  000EAE  0101               	movlb	1	; () banked
  7579  000EB0  0101               	movlb	1	; () banked
  7580  000EB2  6FA3               	movwf	((?_check_msg+1))&0ffh
  7581  000EB4  0101               	movlb	1	; () banked
  7582  000EB6  0E6C               	movlw	low(_ToMainHigh_MQ)
  7583  000EB8  0101               	movlb	1	; () banked
  7584  000EBA  6FA2               	movwf	((?_check_msg))&0ffh
  7585  000EBC  0101               	movlb	1	; () banked
  7586  000EBE  ECB2  F00C         	call	_check_msg	;wreg free
  7587  000EC2  0900               	iorlw	0
  7588  000EC4  B4D8               	btfsc	status,2
  7589  000EC6  D001               	goto	u2371
  7590  000EC8  D001               	goto	u2370
  7591  000ECA                     u2371:
  7592  000ECA  D009               	goto	l19219
  7593  000ECC                     u2370:
  7594                           	line	266
  7595                           	
  7596  000ECC                     l19213:
  7597                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  7598  000ECC  0101               	movlb	1	; () banked
  7599  000ECE  6FA8               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7600  000ED0  0E00               	movlw	low(0)
  7601  000ED2  6E48               	movwf	((c:_MQ_Main_Willing_to_block)),c
  7602  000ED4  0101               	movlb	1	; () banked
  7603  000ED6  51A8               	movf	(??_block_on_To_msgqueues+0+0)&0ffh,w
  7604                           	line	267
  7605                           	
  7606  000ED8                     l19215:; BSR set to: 1
  7607                           
  7608                           ;messages.c: 267: LATBbits.LATB3 = 0;
  7609  000ED8  968A               	bcf	((c:3978)),c,3	;volatile
  7610  000EDA  D03A               	goto	l5535
  7611                           	line	268
  7612                           	
  7613  000EDC                     l19217:; BSR set to: 1
  7614                           
  7615                           ;messages.c: 268: return;
  7616  000EDC  D039               	goto	l5535
  7617                           	line	269
  7618                           	
  7619  000EDE                     l5537:; BSR set to: 1
  7620                           
  7621                           	line	270
  7622                           	
  7623  000EDE                     l19219:
  7624                           ;messages.c: 269: }
  7625                           ;messages.c: 270: if (check_msg(&ToMainLow_MQ)) {
  7626  000EDE  0100               	movlb	0	; () banked
  7627  000EE0  0E00               	movlw	high(_ToMainLow_MQ)
  7628  000EE2  0101               	movlb	1	; () banked
  7629  000EE4  0101               	movlb	1	; () banked
  7630  000EE6  6FA3               	movwf	((?_check_msg+1))&0ffh
  7631  000EE8  0100               	movlb	0	; () banked
  7632  000EEA  0E82               	movlw	low(_ToMainLow_MQ)
  7633  000EEC  0101               	movlb	1	; () banked
  7634  000EEE  6FA2               	movwf	((?_check_msg))&0ffh
  7635  000EF0  0101               	movlb	1	; () banked
  7636  000EF2  ECB2  F00C         	call	_check_msg	;wreg free
  7637  000EF6  0900               	iorlw	0
  7638  000EF8  B4D8               	btfsc	status,2
  7639  000EFA  D001               	goto	u2381
  7640  000EFC  D001               	goto	u2380
  7641  000EFE                     u2381:
  7642  000EFE  D009               	goto	l19227
  7643  000F00                     u2380:
  7644                           	line	271
  7645                           	
  7646  000F00                     l19221:
  7647                           ;messages.c: 271: MQ_Main_Willing_to_block = 0;
  7648  000F00  0101               	movlb	1	; () banked
  7649  000F02  6FA8               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7650  000F04  0E00               	movlw	low(0)
  7651  000F06  6E48               	movwf	((c:_MQ_Main_Willing_to_block)),c
  7652  000F08  0101               	movlb	1	; () banked
  7653  000F0A  51A8               	movf	(??_block_on_To_msgqueues+0+0)&0ffh,w
  7654                           	line	272
  7655                           	
  7656  000F0C                     l19223:; BSR set to: 1
  7657                           
  7658                           ;messages.c: 272: LATBbits.LATB3 = 0;
  7659  000F0C  968A               	bcf	((c:3978)),c,3	;volatile
  7660  000F0E  D020               	goto	l5535
  7661                           	line	273
  7662                           	
  7663  000F10                     l19225:; BSR set to: 1
  7664                           
  7665                           ;messages.c: 273: return;
  7666  000F10  D01F               	goto	l5535
  7667                           	line	274
  7668                           	
  7669  000F12                     l5538:; BSR set to: 1
  7670                           
  7671                           	line	275
  7672                           	
  7673  000F12                     l19227:
  7674                           ;messages.c: 274: }
  7675                           ;messages.c: 275: Delay1KTCYx(10);
  7676  000F12  0101               	movlb	1	; () banked
  7677  000F14  6FA8               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7678  000F16  0E0A               	movlw	low(0Ah)
  7679  000F18  0101               	movlb	1	; () banked
  7680  000F1A  0101               	movlb	1	; () banked
  7681  000F1C  6FA2               	movwf	((?_Delay1KTCYx))&0ffh
  7682  000F1E  0101               	movlb	1	; () banked
  7683  000F20  51A8               	movf	(??_block_on_To_msgqueues+0+0)&0ffh,w
  7684  000F22  0101               	movlb	1	; () banked
  7685  000F24  EC06  F00E         	call	_Delay1KTCYx	;wreg free
  7686                           	line	276
  7687                           	
  7688  000F28                     l19229:
  7689                           ;messages.c: 276: LATBbits.LATB3 = !LATBbits.LATB3;
  7690                           	
  7691  000F28  A68A               	btfss	((c:3978)),c,3	;volatile
  7692  000F2A  D001               	goto	u2391
  7693  000F2C  D002               	goto	u2390
  7694  000F2E                     u2391:
  7695  000F2E  0E01               	movlw	1
  7696  000F30  D001               	goto	u2396
  7697  000F32                     u2390:
  7698  000F32  0E00               	movlw	0
  7699  000F34                     u2396:
  7700  000F34  0101               	movlb	1	; () banked
  7701  000F36  6FA8               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7702  000F38  0101               	movlb	1	; () banked
  7703  000F3A  47A8               	rlncf	((??_block_on_To_msgqueues+0+0))&0ffh
  7704  000F3C  47A8               	rlncf	((??_block_on_To_msgqueues+0+0))&0ffh
  7705  000F3E  47A8               	rlncf	((??_block_on_To_msgqueues+0+0))&0ffh
  7706  000F40  508A               	movf	((c:3978)),c,w	;volatile
  7707  000F42  0101               	movlb	1	; () banked
  7708  000F44  19A8               	xorwf	((??_block_on_To_msgqueues+0+0))&0ffh,w
  7709  000F46  0BF7               	andlw	not (((1<<1)-1)<<3)
  7710  000F48  19A8               	xorwf	((??_block_on_To_msgqueues+0+0))&0ffh,w
  7711  000F4A  6E8A               	movwf	((c:3978)),c	;volatile
  7712  000F4C  D7AE               	goto	l19211
  7713                           	line	277
  7714                           	
  7715  000F4E                     l5539:; BSR set to: 1
  7716                           
  7717                           	line	264
  7718  000F4E  D7AD               	goto	l19211
  7719                           	
  7720  000F50                     l5540:; BSR set to: 1
  7721                           
  7722                           	line	278
  7723                           	
  7724  000F50                     l5535:; BSR set to: 1
  7725                           
  7726  000F50  0012               	return
  7727                           	opt stack 0
  7728                           GLOBAL	__end_of_block_on_To_msgqueues
  7729  000F52                     	__end_of_block_on_To_msgqueues:
  7730                           	signat	_block_on_To_msgqueues,88
  7731                           	global	_in_main
  7732                           
  7733 ;; *************** function _in_main *****************
  7734 ;; Defined at:
  7735 ;;		line 40 in file "../src/interrupts.c"
  7736 ;; Parameters:    Size  Location     Type
  7737 ;;		None
  7738 ;; Auto vars:     Size  Location     Type
  7739 ;;		None
  7740 ;; Return value:  Size  Location     Type
  7741 ;;                  2    4[BANK1 ] int 
  7742 ;; Registers used:
  7743 ;;		wreg, status,2, status,0, cstack
  7744 ;; Tracked objects:
  7745 ;;		On entry : 0/0
  7746 ;;		On exit  : 0/0
  7747 ;;		Unchanged: 0/0
  7748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7749 ;;      Params:         0       0       2       0       0
  7750 ;;      Locals:         0       0       0       0       0
  7751 ;;      Temps:          0       0       0       0       0
  7752 ;;      Totals:         0       0       2       0       0
  7753 ;;Total ram usage:        2 bytes
  7754 ;; Hardware stack levels used:    1
  7755 ;; Hardware stack levels required when called:   12
  7756 ;; This function calls:
  7757 ;;		_in_low_int
  7758 ;;		_in_high_int
  7759 ;; This function is called by:
  7760 ;;		_block_on_To_msgqueues
  7761 ;; This function uses a non-reentrant model
  7762 ;;
  7763                           psect	text10,class=CODE,space=0,reloc=2
  7764                           global __ptext10
  7765  0016CE                     __ptext10:
  7766                           psect	text10
  7767                           	file	"../src/interrupts.c"
  7768                           	line	40
  7769                           	global	__size_of_in_main
  7770  0000                     	__size_of_in_main	equ	__end_of_in_main-_in_main
  7771                           	
  7772  0016CE                     _in_main:; BSR set to: 1
  7773                           
  7774                           	opt	stack 17
  7775                           	line	41
  7776                           	
  7777  0016CE                     l18855:
  7778                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  7779  0016CE  0101               	movlb	1	; () banked
  7780  0016D0  EC38  F00B         	call	_in_low_int	;wreg free
  7781  0016D4  0101               	movlb	1	; () banked
  7782  0016D6  0101               	movlb	1	; () banked
  7783  0016D8  51A5               	movf	(1+?_in_low_int)&0ffh,w
  7784  0016DA  0101               	movlb	1	; () banked
  7785  0016DC  11A4               	iorwf (0+?_in_low_int)&0ffh,w
  7786                           
  7787  0016DE  A4D8               	btfss	status,2
  7788  0016E0  D001               	goto	u1891
  7789  0016E2  D001               	goto	u1890
  7790  0016E4                     u1891:
  7791  0016E4  D016               	goto	l18865
  7792  0016E6                     u1890:
  7793                           	
  7794  0016E6                     l18857:; BSR set to: 1
  7795                           
  7796  0016E6  0101               	movlb	1	; () banked
  7797  0016E8  ECFC  F00D         	call	_in_high_int	;wreg free
  7798  0016EC  0101               	movlb	1	; () banked
  7799  0016EE  0101               	movlb	1	; () banked
  7800  0016F0  51A3               	movf	(1+?_in_high_int)&0ffh,w
  7801  0016F2  0101               	movlb	1	; () banked
  7802  0016F4  11A2               	iorwf (0+?_in_high_int)&0ffh,w
  7803                           
  7804  0016F6  A4D8               	btfss	status,2
  7805  0016F8  D001               	goto	u1901
  7806  0016FA  D001               	goto	u1900
  7807  0016FC                     u1901:
  7808  0016FC  D00A               	goto	l18865
  7809  0016FE                     u1900:
  7810                           	line	42
  7811                           	
  7812  0016FE                     l18859:; BSR set to: 1
  7813                           
  7814                           ;interrupts.c: 42: return (1);
  7815  0016FE  0E00               	movlw	high(01h)
  7816  001700  0101               	movlb	1	; () banked
  7817  001702  0101               	movlb	1	; () banked
  7818  001704  6FA7               	movwf	((?_in_main+1))&0ffh
  7819  001706  0E01               	movlw	low(01h)
  7820  001708  0101               	movlb	1	; () banked
  7821  00170A  6FA6               	movwf	((?_in_main))&0ffh
  7822  00170C  D00B               	goto	l1816
  7823                           	
  7824  00170E                     l18861:; BSR set to: 1
  7825                           
  7826  00170E  D00A               	goto	l1816
  7827                           	line	43
  7828                           	
  7829  001710                     l18863:; BSR set to: 1
  7830                           
  7831                           ;interrupts.c: 43: } else {
  7832  001710  D009               	goto	l1816
  7833                           	
  7834  001712                     l1815:; BSR set to: 1
  7835                           
  7836                           	line	44
  7837                           	
  7838  001712                     l18865:; BSR set to: 1
  7839                           
  7840                           ;interrupts.c: 44: return (0);
  7841  001712  0E00               	movlw	high(0)
  7842  001714  0101               	movlb	1	; () banked
  7843  001716  0101               	movlb	1	; () banked
  7844  001718  6FA7               	movwf	((?_in_main+1))&0ffh
  7845  00171A  0E00               	movlw	low(0)
  7846  00171C  0101               	movlb	1	; () banked
  7847  00171E  6FA6               	movwf	((?_in_main))&0ffh
  7848  001720  D001               	goto	l1816
  7849                           	
  7850  001722                     l18867:; BSR set to: 1
  7851                           
  7852  001722  D000               	goto	l1816
  7853                           	line	45
  7854                           	
  7855  001724                     l1817:; BSR set to: 1
  7856                           
  7857                           	line	46
  7858                           	
  7859  001724                     l1816:; BSR set to: 1
  7860                           
  7861  001724  0012               	return
  7862                           	opt stack 0
  7863                           GLOBAL	__end_of_in_main
  7864  001726                     	__end_of_in_main:
  7865                           	signat	_in_main,90
  7866                           	global	_in_low_int
  7867                           
  7868 ;; *************** function _in_low_int *****************
  7869 ;; Defined at:
  7870 ;;		line 30 in file "../src/interrupts.c"
  7871 ;; Parameters:    Size  Location     Type
  7872 ;;		None
  7873 ;; Auto vars:     Size  Location     Type
  7874 ;;		None
  7875 ;; Return value:  Size  Location     Type
  7876 ;;                  2    2[BANK1 ] int 
  7877 ;; Registers used:
  7878 ;;		wreg, status,2, status,0, cstack
  7879 ;; Tracked objects:
  7880 ;;		On entry : 0/0
  7881 ;;		On exit  : 0/0
  7882 ;;		Unchanged: 0/0
  7883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7884 ;;      Params:         0       0       2       0       0
  7885 ;;      Locals:         0       0       0       0       0
  7886 ;;      Temps:          0       0       0       0       0
  7887 ;;      Totals:         0       0       2       0       0
  7888 ;;Total ram usage:        2 bytes
  7889 ;; Hardware stack levels used:    1
  7890 ;; Hardware stack levels required when called:   11
  7891 ;; This function calls:
  7892 ;;		_in_high_int
  7893 ;; This function is called by:
  7894 ;;		_in_main
  7895 ;; This function uses a non-reentrant model
  7896 ;;
  7897                           psect	text11,class=CODE,space=0,reloc=2
  7898                           global __ptext11
  7899  001670                     __ptext11:
  7900                           psect	text11
  7901                           	file	"../src/interrupts.c"
  7902                           	line	30
  7903                           	global	__size_of_in_low_int
  7904  0000                     	__size_of_in_low_int	equ	__end_of_in_low_int-_in_low_int
  7905                           	
  7906  001670                     _in_low_int:; BSR set to: 1
  7907                           
  7908                           	opt	stack 17
  7909                           	line	31
  7910                           	
  7911  001670                     l18835:
  7912                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  7913                           	
  7914  001670  ACF2               	btfss	((c:4082)),c,6	;volatile
  7915  001672  D001               	goto	u1871
  7916  001674  D001               	goto	u1870
  7917  001676                     u1871:
  7918  001676  D00A               	goto	l18843
  7919  001678                     u1870:
  7920                           	line	32
  7921                           	
  7922  001678                     l18837:
  7923                           ;interrupts.c: 32: return (0);
  7924  001678  0E00               	movlw	high(0)
  7925  00167A  0101               	movlb	1	; () banked
  7926  00167C  0101               	movlb	1	; () banked
  7927  00167E  6FA5               	movwf	((?_in_low_int+1))&0ffh
  7928  001680  0E00               	movlw	low(0)
  7929  001682  0101               	movlb	1	; () banked
  7930  001684  6FA4               	movwf	((?_in_low_int))&0ffh
  7931  001686  D022               	goto	l1809
  7932                           	
  7933  001688                     l18839:; BSR set to: 1
  7934                           
  7935  001688  D021               	goto	l1809
  7936                           	line	33
  7937                           	
  7938  00168A                     l18841:; BSR set to: 1
  7939                           
  7940                           ;interrupts.c: 33: } else if (in_high_int()) {
  7941  00168A  D020               	goto	l1809
  7942                           	
  7943  00168C                     l1808:; BSR set to: 1
  7944                           
  7945                           	
  7946  00168C                     l18843:
  7947  00168C  0101               	movlb	1	; () banked
  7948  00168E  ECFC  F00D         	call	_in_high_int	;wreg free
  7949  001692  0101               	movlb	1	; () banked
  7950  001694  0101               	movlb	1	; () banked
  7951  001696  51A3               	movf	(1+?_in_high_int)&0ffh,w
  7952  001698  0101               	movlb	1	; () banked
  7953  00169A  11A2               	iorwf (0+?_in_high_int)&0ffh,w
  7954                           
  7955  00169C  B4D8               	btfsc	status,2
  7956  00169E  D001               	goto	u1881
  7957  0016A0  D001               	goto	u1880
  7958  0016A2                     u1881:
  7959  0016A2  D00A               	goto	l18851
  7960  0016A4                     u1880:
  7961                           	line	34
  7962                           	
  7963  0016A4                     l18845:; BSR set to: 1
  7964                           
  7965                           ;interrupts.c: 34: return (0);
  7966  0016A4  0E00               	movlw	high(0)
  7967  0016A6  0101               	movlb	1	; () banked
  7968  0016A8  0101               	movlb	1	; () banked
  7969  0016AA  6FA5               	movwf	((?_in_low_int+1))&0ffh
  7970  0016AC  0E00               	movlw	low(0)
  7971  0016AE  0101               	movlb	1	; () banked
  7972  0016B0  6FA4               	movwf	((?_in_low_int))&0ffh
  7973  0016B2  D00C               	goto	l1809
  7974                           	
  7975  0016B4                     l18847:; BSR set to: 1
  7976                           
  7977  0016B4  D00B               	goto	l1809
  7978                           	line	35
  7979                           	
  7980  0016B6                     l18849:; BSR set to: 1
  7981                           
  7982                           ;interrupts.c: 35: } else {
  7983  0016B6  D00A               	goto	l1809
  7984                           	
  7985  0016B8                     l1811:; BSR set to: 1
  7986                           
  7987                           	line	36
  7988                           	
  7989  0016B8                     l18851:; BSR set to: 1
  7990                           
  7991                           ;interrupts.c: 36: return (1);
  7992  0016B8  0E00               	movlw	high(01h)
  7993  0016BA  0101               	movlb	1	; () banked
  7994  0016BC  0101               	movlb	1	; () banked
  7995  0016BE  6FA5               	movwf	((?_in_low_int+1))&0ffh
  7996  0016C0  0E01               	movlw	low(01h)
  7997  0016C2  0101               	movlb	1	; () banked
  7998  0016C4  6FA4               	movwf	((?_in_low_int))&0ffh
  7999  0016C6  D002               	goto	l1809
  8000                           	
  8001  0016C8                     l18853:; BSR set to: 1
  8002                           
  8003  0016C8  D001               	goto	l1809
  8004                           	line	37
  8005                           	
  8006  0016CA                     l1812:; BSR set to: 1
  8007                           
  8008  0016CA  D000               	goto	l1809
  8009                           	
  8010  0016CC                     l1810:; BSR set to: 1
  8011                           
  8012                           	line	38
  8013                           	
  8014  0016CC                     l1809:; BSR set to: 1
  8015                           
  8016  0016CC  0012               	return
  8017                           	opt stack 0
  8018                           GLOBAL	__end_of_in_low_int
  8019  0016CE                     	__end_of_in_low_int:
  8020                           	signat	_in_low_int,90
  8021                           	global	_in_high_int
  8022                           
  8023 ;; *************** function _in_high_int *****************
  8024 ;; Defined at:
  8025 ;;		line 22 in file "../src/interrupts.c"
  8026 ;; Parameters:    Size  Location     Type
  8027 ;;		None
  8028 ;; Auto vars:     Size  Location     Type
  8029 ;;		None
  8030 ;; Return value:  Size  Location     Type
  8031 ;;                  2    0[BANK1 ] int 
  8032 ;; Registers used:
  8033 ;;		wreg, status,2
  8034 ;; Tracked objects:
  8035 ;;		On entry : 0/0
  8036 ;;		On exit  : 0/0
  8037 ;;		Unchanged: 0/0
  8038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8039 ;;      Params:         0       0       2       0       0
  8040 ;;      Locals:         0       0       0       0       0
  8041 ;;      Temps:          0       0       0       0       0
  8042 ;;      Totals:         0       0       2       0       0
  8043 ;;Total ram usage:        2 bytes
  8044 ;; Hardware stack levels used:    1
  8045 ;; Hardware stack levels required when called:   10
  8046 ;; This function calls:
  8047 ;;		Nothing
  8048 ;; This function is called by:
  8049 ;;		_in_low_int
  8050 ;;		_in_main
  8051 ;; This function uses a non-reentrant model
  8052 ;;
  8053                           psect	text12,class=CODE,space=0,reloc=2
  8054                           global __ptext12
  8055  001BF8                     __ptext12:
  8056                           psect	text12
  8057                           	file	"../src/interrupts.c"
  8058                           	line	22
  8059                           	global	__size_of_in_high_int
  8060  0000                     	__size_of_in_high_int	equ	__end_of_in_high_int-_in_high_int
  8061                           	
  8062  001BF8                     _in_high_int:; BSR set to: 1
  8063                           
  8064                           	opt	stack 18
  8065                           	line	23
  8066                           	
  8067  001BF8                     l18831:
  8068                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  8069                           	
  8070  001BF8  0E00               	movlw	0
  8071  001BFA  AEF2               	btfss	((c:4082)),c,7	;volatile
  8072  001BFC  0E01               	movlw	1
  8073  001BFE  0101               	movlb	1	; () banked
  8074  001C00  0101               	movlb	1	; () banked
  8075  001C02  6FA2               	movwf	((?_in_high_int))&0ffh
  8076  001C04  0101               	movlb	1	; () banked
  8077  001C06  6BA3               	clrf	((?_in_high_int+1))&0ffh
  8078  001C08  D000               	goto	l1802
  8079                           	
  8080  001C0A                     l18833:; BSR set to: 1
  8081                           
  8082                           	line	24
  8083                           	
  8084  001C0A                     l1802:; BSR set to: 1
  8085                           
  8086  001C0A  0012               	return
  8087                           	opt stack 0
  8088                           GLOBAL	__end_of_in_high_int
  8089  001C0C                     	__end_of_in_high_int:
  8090                           	signat	_in_high_int,90
  8091                           	global	_ToMainHigh_recvmsg
  8092                           
  8093 ;; *************** function _ToMainHigh_recvmsg *****************
  8094 ;; Defined at:
  8095 ;;		line 135 in file "../src/messages.c"
  8096 ;; Parameters:    Size  Location     Type
  8097 ;;  maxlength       1   24[BANK1 ] unsigned char 
  8098 ;;  msgtype         2   25[BANK1 ] PTR unsigned char 
  8099 ;;		 -> main@msgtype(1), 
  8100 ;;  data            2   27[BANK1 ] PTR void 
  8101 ;;		 -> main@msgbuffer(11), 
  8102 ;; Auto vars:     Size  Location     Type
  8103 ;;		None
  8104 ;; Return value:  Size  Location     Type
  8105 ;;                  1    wreg      char 
  8106 ;; Registers used:
  8107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8108 ;; Tracked objects:
  8109 ;;		On entry : 0/0
  8110 ;;		On exit  : 0/0
  8111 ;;		Unchanged: 0/0
  8112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8113 ;;      Params:         0       0       5       0       0
  8114 ;;      Locals:         0       0       0       0       0
  8115 ;;      Temps:          0       0       0       0       0
  8116 ;;      Totals:         0       0       5       0       0
  8117 ;;Total ram usage:        5 bytes
  8118 ;; Hardware stack levels used:    1
  8119 ;; Hardware stack levels required when called:   12
  8120 ;; This function calls:
  8121 ;;		_recv_msg
  8122 ;; This function is called by:
  8123 ;;		_main
  8124 ;; This function uses a non-reentrant model
  8125 ;;
  8126                           psect	text13,class=CODE,space=0,reloc=2
  8127                           global __ptext13
  8128  001A06                     __ptext13:
  8129                           psect	text13
  8130                           	file	"../src/messages.c"
  8131                           	line	135
  8132                           	global	__size_of_ToMainHigh_recvmsg
  8133  0000                     	__size_of_ToMainHigh_recvmsg	equ	__end_of_ToMainHigh_recvmsg-_ToMainHigh_recvmsg
  8134                           	
  8135  001A06                     _ToMainHigh_recvmsg:; BSR set to: 1
  8136                           
  8137                           	opt	stack 18
  8138                           	line	141
  8139                           	
  8140  001A06                     l19231:
  8141                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  8142  001A06  0101               	movlb	1	; () banked
  8143  001A08  0E01               	movlw	high(_ToMainHigh_MQ)
  8144  001A0A  0101               	movlb	1	; () banked
  8145  001A0C  0101               	movlb	1	; () banked
  8146  001A0E  6FAD               	movwf	((?_recv_msg+1))&0ffh
  8147  001A10  0101               	movlb	1	; () banked
  8148  001A12  0E6C               	movlw	low(_ToMainHigh_MQ)
  8149  001A14  0101               	movlb	1	; () banked
  8150  001A16  6FAC               	movwf	((?_recv_msg))&0ffh
  8151  001A18  C1BA  F1AE         	movff	(ToMainHigh_recvmsg@maxlength),0+(?_recv_msg+02h)
  8152  001A1C  C1BB  F1AF         	movff	(ToMainHigh_recvmsg@msgtype),0+(?_recv_msg+03h)
  8153  001A20  C1BC  F1B0         	movff	(ToMainHigh_recvmsg@msgtype+1),1+(?_recv_msg+03h)
  8154  001A24  C1BD  F1B1         	movff	(ToMainHigh_recvmsg@data),0+(?_recv_msg+05h)
  8155  001A28  C1BE  F1B2         	movff	(ToMainHigh_recvmsg@data+1),1+(?_recv_msg+05h)
  8156  001A2C  0101               	movlb	1	; () banked
  8157  001A2E  EC25  F005         	call	_recv_msg	;wreg free
  8158  001A32  D000               	goto	l5496
  8159                           	
  8160  001A34                     l19233:
  8161                           	line	142
  8162                           	
  8163  001A34                     l5496:
  8164  001A34  0012               	return
  8165                           	opt stack 0
  8166                           GLOBAL	__end_of_ToMainHigh_recvmsg
  8167  001A36                     	__end_of_ToMainHigh_recvmsg:
  8168                           	signat	_ToMainHigh_recvmsg,12409
  8169                           	global	_timer0_lthread
  8170                           
  8171 ;; *************** function _timer0_lthread *****************
  8172 ;; Defined at:
  8173 ;;		line 9 in file "../src/timer0_thread.c"
  8174 ;; Parameters:    Size  Location     Type
  8175 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  8176 ;;		 -> main@t0thread_data(2), 
  8177 ;;  msgtype         2    2[BANK1 ] int 
  8178 ;;  length          2    4[BANK1 ] int 
  8179 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  8180 ;;		 -> main@msgbuffer(11), 
  8181 ;; Auto vars:     Size  Location     Type
  8182 ;;  msgval          2    8[BANK1 ] PTR unsigned int 
  8183 ;;		 -> main@msgbuffer(11), 
  8184 ;; Return value:  Size  Location     Type
  8185 ;;                  2    0[BANK1 ] int 
  8186 ;; Registers used:
  8187 ;;		None
  8188 ;; Tracked objects:
  8189 ;;		On entry : 0/0
  8190 ;;		On exit  : 0/0
  8191 ;;		Unchanged: 0/0
  8192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8193 ;;      Params:         0       0       8       0       0
  8194 ;;      Locals:         0       0       2       0       0
  8195 ;;      Temps:          0       0       0       0       0
  8196 ;;      Totals:         0       0      10       0       0
  8197 ;;Total ram usage:       10 bytes
  8198 ;; Hardware stack levels used:    1
  8199 ;; Hardware stack levels required when called:   10
  8200 ;; This function calls:
  8201 ;;		Nothing
  8202 ;; This function is called by:
  8203 ;;		_main
  8204 ;; This function uses a non-reentrant model
  8205 ;;
  8206                           psect	text14,class=CODE,space=0,reloc=2
  8207                           global __ptext14
  8208  001C70                     __ptext14:
  8209                           psect	text14
  8210                           	file	"../src/timer0_thread.c"
  8211                           	line	9
  8212                           	global	__size_of_timer0_lthread
  8213  0000                     	__size_of_timer0_lthread	equ	__end_of_timer0_lthread-_timer0_lthread
  8214                           	
  8215  001C70                     _timer0_lthread:
  8216                           	opt	stack 20
  8217                           	line	12
  8218                           	
  8219  001C70                     l19235:
  8220                           ;timer0_thread.c: 10: unsigned int *msgval;
  8221                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  8222  001C70  C1A8  F1AA         	movff	(timer0_lthread@msgbuffer),(timer0_lthread@msgval)
  8223  001C74  C1A9  F1AB         	movff	(timer0_lthread@msgbuffer+1),(timer0_lthread@msgval+1)
  8224                           	line	16
  8225                           	
  8226  001C78                     l10996:
  8227  001C78  0012               	return
  8228                           	opt stack 0
  8229                           GLOBAL	__end_of_timer0_lthread
  8230  001C7A                     	__end_of_timer0_lthread:
  8231                           	signat	_timer0_lthread,16506
  8232                           	global	_ToMainLow_recvmsg
  8233                           
  8234 ;; *************** function _ToMainLow_recvmsg *****************
  8235 ;; Defined at:
  8236 ;;		line 112 in file "../src/messages.c"
  8237 ;; Parameters:    Size  Location     Type
  8238 ;;  maxlength       1   24[BANK1 ] unsigned char 
  8239 ;;  msgtype         2   25[BANK1 ] PTR unsigned char 
  8240 ;;		 -> main@msgtype(1), 
  8241 ;;  data            2   27[BANK1 ] PTR void 
  8242 ;;		 -> main@msgbuffer(11), 
  8243 ;; Auto vars:     Size  Location     Type
  8244 ;;		None
  8245 ;; Return value:  Size  Location     Type
  8246 ;;                  1    wreg      char 
  8247 ;; Registers used:
  8248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8249 ;; Tracked objects:
  8250 ;;		On entry : 0/0
  8251 ;;		On exit  : 0/0
  8252 ;;		Unchanged: 0/0
  8253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8254 ;;      Params:         0       0       5       0       0
  8255 ;;      Locals:         0       0       0       0       0
  8256 ;;      Temps:          0       0       0       0       0
  8257 ;;      Totals:         0       0       5       0       0
  8258 ;;Total ram usage:        5 bytes
  8259 ;; Hardware stack levels used:    1
  8260 ;; Hardware stack levels required when called:   12
  8261 ;; This function calls:
  8262 ;;		_recv_msg
  8263 ;; This function is called by:
  8264 ;;		_main
  8265 ;; This function uses a non-reentrant model
  8266 ;;
  8267                           psect	text15,class=CODE,space=0,reloc=2
  8268                           global __ptext15
  8269  001A36                     __ptext15:
  8270                           psect	text15
  8271                           	file	"../src/messages.c"
  8272                           	line	112
  8273                           	global	__size_of_ToMainLow_recvmsg
  8274  0000                     	__size_of_ToMainLow_recvmsg	equ	__end_of_ToMainLow_recvmsg-_ToMainLow_recvmsg
  8275                           	
  8276  001A36                     _ToMainLow_recvmsg:
  8277                           	opt	stack 18
  8278                           	line	118
  8279                           	
  8280  001A36                     l19237:
  8281                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  8282  001A36  0100               	movlb	0	; () banked
  8283  001A38  0E00               	movlw	high(_ToMainLow_MQ)
  8284  001A3A  0101               	movlb	1	; () banked
  8285  001A3C  0101               	movlb	1	; () banked
  8286  001A3E  6FAD               	movwf	((?_recv_msg+1))&0ffh
  8287  001A40  0100               	movlb	0	; () banked
  8288  001A42  0E82               	movlw	low(_ToMainLow_MQ)
  8289  001A44  0101               	movlb	1	; () banked
  8290  001A46  6FAC               	movwf	((?_recv_msg))&0ffh
  8291  001A48  C1BA  F1AE         	movff	(ToMainLow_recvmsg@maxlength),0+(?_recv_msg+02h)
  8292  001A4C  C1BB  F1AF         	movff	(ToMainLow_recvmsg@msgtype),0+(?_recv_msg+03h)
  8293  001A50  C1BC  F1B0         	movff	(ToMainLow_recvmsg@msgtype+1),1+(?_recv_msg+03h)
  8294  001A54  C1BD  F1B1         	movff	(ToMainLow_recvmsg@data),0+(?_recv_msg+05h)
  8295  001A58  C1BE  F1B2         	movff	(ToMainLow_recvmsg@data+1),1+(?_recv_msg+05h)
  8296  001A5C  0101               	movlb	1	; () banked
  8297  001A5E  EC25  F005         	call	_recv_msg	;wreg free
  8298  001A62  D000               	goto	l5488
  8299                           	
  8300  001A64                     l19239:
  8301                           	line	119
  8302                           	
  8303  001A64                     l5488:
  8304  001A64  0012               	return
  8305                           	opt stack 0
  8306                           GLOBAL	__end_of_ToMainLow_recvmsg
  8307  001A66                     	__end_of_ToMainLow_recvmsg:
  8308                           	signat	_ToMainLow_recvmsg,12409
  8309                           	global	_timer1_lthread
  8310                           
  8311 ;; *************** function _timer1_lthread *****************
  8312 ;; Defined at:
  8313 ;;		line 24 in file "../src/timer1_thread.c"
  8314 ;; Parameters:    Size  Location     Type
  8315 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  8316 ;;		 -> main@t1thread_data(2), 
  8317 ;;  msgtype         2    2[BANK1 ] int 
  8318 ;;  length          2    4[BANK1 ] int 
  8319 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  8320 ;;		 -> main@msgbuffer(11), 
  8321 ;; Auto vars:     Size  Location     Type
  8322 ;;		None
  8323 ;; Return value:  Size  Location     Type
  8324 ;;                  2    0[BANK1 ] int 
  8325 ;; Registers used:
  8326 ;;		wreg, fsr2l, fsr2h, cstack
  8327 ;; Tracked objects:
  8328 ;;		On entry : 0/0
  8329 ;;		On exit  : 0/0
  8330 ;;		Unchanged: 0/0
  8331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8332 ;;      Params:         0       0       8       0       0
  8333 ;;      Locals:         0       0       0       0       0
  8334 ;;      Temps:          0       0       2       0       0
  8335 ;;      Totals:         0       0      10       0       0
  8336 ;;Total ram usage:       10 bytes
  8337 ;; Hardware stack levels used:    1
  8338 ;; Hardware stack levels required when called:   11
  8339 ;; This function calls:
  8340 ;;		_ConvertADC
  8341 ;; This function is called by:
  8342 ;;		_main
  8343 ;; This function uses a non-reentrant model
  8344 ;;
  8345                           psect	text16,class=CODE,space=0,reloc=2
  8346                           global __ptext16
  8347  001B0A                     __ptext16:
  8348                           psect	text16
  8349                           	file	"../src/timer1_thread.c"
  8350                           	line	24
  8351                           	global	__size_of_timer1_lthread
  8352  0000                     	__size_of_timer1_lthread	equ	__end_of_timer1_lthread-_timer1_lthread
  8353                           	
  8354  001B0A                     _timer1_lthread:
  8355                           	opt	stack 19
  8356                           	line	26
  8357                           	
  8358  001B0A                     l19241:
  8359                           ;timer1_thread.c: 26: tptr->timerval = msgbuffer[0];
  8360  001B0A  C1A8  FFD9         	movff	(timer1_lthread@msgbuffer),fsr2l
  8361  001B0E  C1A9  FFDA         	movff	(timer1_lthread@msgbuffer+1),fsr2h
  8362  001B12  50DF               	movf	indf2,w
  8363  001B14  0101               	movlb	1	; () banked
  8364  001B16  6FAA               	movwf	(??_timer1_lthread+0+0)&0ffh
  8365  001B18  6BAB               	clrf	(??_timer1_lthread+0+0+1)&0ffh
  8366                           
  8367  001B1A  C1A2  FFD9         	movff	(timer1_lthread@tptr),fsr2l
  8368  001B1E  C1A3  FFDA         	movff	(timer1_lthread@tptr+1),fsr2h
  8369  001B22  C1AA  FFDE         	movff	??_timer1_lthread+0+0,postinc2
  8370  001B26  C1AB  FFDD         	movff	??_timer1_lthread+0+1,postdec2
  8371                           
  8372                           	line	28
  8373                           	
  8374  001B2A                     l19243:; BSR set to: 1
  8375                           
  8376                           ;timer1_thread.c: 28: ConvertADC();
  8377  001B2A  EC44  F00E         	call	_ConvertADC	;wreg free
  8378                           	line	29
  8379                           	
  8380  001B2E                     l12792:
  8381  001B2E  0012               	return
  8382                           	opt stack 0
  8383                           GLOBAL	__end_of_timer1_lthread
  8384  001B30                     	__end_of_timer1_lthread:
  8385                           	signat	_timer1_lthread,16506
  8386                           	global	_FromMainLow_sendmsg
  8387                           
  8388 ;; *************** function _FromMainLow_sendmsg *****************
  8389 ;; Defined at:
  8390 ;;		line 150 in file "../src/messages.c"
  8391 ;; Parameters:    Size  Location     Type
  8392 ;;  length          1   22[BANK1 ] unsigned char 
  8393 ;;  msgtype         1   23[BANK1 ] unsigned char 
  8394 ;;  data            2   24[BANK1 ] PTR void 
  8395 ;;		 -> main@msgbuffer(11), 
  8396 ;; Auto vars:     Size  Location     Type
  8397 ;;		None
  8398 ;; Return value:  Size  Location     Type
  8399 ;;                  1    wreg      char 
  8400 ;; Registers used:
  8401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8402 ;; Tracked objects:
  8403 ;;		On entry : 0/0
  8404 ;;		On exit  : 0/0
  8405 ;;		Unchanged: 0/0
  8406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8407 ;;      Params:         0       0       4       0       0
  8408 ;;      Locals:         0       0       0       0       0
  8409 ;;      Temps:          0       0       0       0       0
  8410 ;;      Totals:         0       0       4       0       0
  8411 ;;Total ram usage:        4 bytes
  8412 ;; Hardware stack levels used:    1
  8413 ;; Hardware stack levels required when called:   12
  8414 ;; This function calls:
  8415 ;;		_send_msg
  8416 ;; This function is called by:
  8417 ;;		_main
  8418 ;; This function uses a non-reentrant model
  8419 ;;
  8420                           psect	text17,class=CODE,space=0,reloc=2
  8421                           global __ptext17
  8422  001A66                     __ptext17:
  8423                           psect	text17
  8424                           	file	"../src/messages.c"
  8425                           	line	150
  8426                           	global	__size_of_FromMainLow_sendmsg
  8427  0000                     	__size_of_FromMainLow_sendmsg	equ	__end_of_FromMainLow_sendmsg-_FromMainLow_sendmsg
  8428                           	
  8429  001A66                     _FromMainLow_sendmsg:
  8430                           	opt	stack 18
  8431                           	line	156
  8432                           	
  8433  001A66                     l19245:
  8434                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  8435                           ;	Return value of _FromMainLow_sendmsg is never used
  8436  001A66  0101               	movlb	1	; () banked
  8437  001A68  0E01               	movlw	high(_FromMainLow_MQ)
  8438  001A6A  0101               	movlb	1	; () banked
  8439  001A6C  0101               	movlb	1	; () banked
  8440  001A6E  6FAD               	movwf	((?_send_msg+1))&0ffh
  8441  001A70  0101               	movlb	1	; () banked
  8442  001A72  0E36               	movlw	low(_FromMainLow_MQ)
  8443  001A74  0101               	movlb	1	; () banked
  8444  001A76  6FAC               	movwf	((?_send_msg))&0ffh
  8445  001A78  C1B8  F1AE         	movff	(FromMainLow_sendmsg@length),0+(?_send_msg+02h)
  8446  001A7C  C1B9  F1AF         	movff	(FromMainLow_sendmsg@msgtype),0+(?_send_msg+03h)
  8447  001A80  C1BA  F1B0         	movff	(FromMainLow_sendmsg@data),0+(?_send_msg+04h)
  8448  001A84  C1BB  F1B1         	movff	(FromMainLow_sendmsg@data+1),1+(?_send_msg+04h)
  8449  001A88  0101               	movlb	1	; () banked
  8450  001A8A  EC4F  F006         	call	_send_msg	;wreg free
  8451  001A8E  D000               	goto	l5501
  8452                           	
  8453  001A90                     l19247:
  8454                           	line	157
  8455                           	
  8456  001A90                     l5501:
  8457  001A90  0012               	return
  8458                           	opt stack 0
  8459                           GLOBAL	__end_of_FromMainLow_sendmsg
  8460  001A92                     	__end_of_FromMainLow_sendmsg:
  8461                           	signat	_FromMainLow_sendmsg,12409
  8462                           	global	_uart_lthread
  8463                           
  8464 ;; *************** function _uart_lthread *****************
  8465 ;; Defined at:
  8466 ;;		line 9 in file "../src/uart_thread.c"
  8467 ;; Parameters:    Size  Location     Type
  8468 ;;  uptr            2    0[BANK1 ] PTR struct __uart_thread
  8469 ;;		 -> main@uthread_data(2), 
  8470 ;;  msgtype         2    2[BANK1 ] int 
  8471 ;;  length          2    4[BANK1 ] int 
  8472 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  8473 ;;		 -> main@msgbuffer(11), 
  8474 ;; Auto vars:     Size  Location     Type
  8475 ;;		None
  8476 ;; Return value:  Size  Location     Type
  8477 ;;                  2    0[BANK1 ] int 
  8478 ;; Registers used:
  8479 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8480 ;; Tracked objects:
  8481 ;;		On entry : 0/0
  8482 ;;		On exit  : 0/0
  8483 ;;		Unchanged: 0/0
  8484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8485 ;;      Params:         0       0       8       0       0
  8486 ;;      Locals:         0       0       0       0       0
  8487 ;;      Temps:          0       0       0       0       0
  8488 ;;      Totals:         0       0       8       0       0
  8489 ;;Total ram usage:        8 bytes
  8490 ;; Hardware stack levels used:    1
  8491 ;; Hardware stack levels required when called:   10
  8492 ;; This function calls:
  8493 ;;		Nothing
  8494 ;; This function is called by:
  8495 ;;		_main
  8496 ;; This function uses a non-reentrant model
  8497 ;;
  8498                           psect	text18,class=CODE,space=0,reloc=2
  8499                           global __ptext18
  8500  00177C                     __ptext18:
  8501                           psect	text18
  8502                           	file	"../src/uart_thread.c"
  8503                           	line	9
  8504                           	global	__size_of_uart_lthread
  8505  0000                     	__size_of_uart_lthread	equ	__end_of_uart_lthread-_uart_lthread
  8506                           	
  8507  00177C                     _uart_lthread:
  8508                           	opt	stack 20
  8509                           	line	10
  8510                           	
  8511  00177C                     l19249:
  8512                           ;uart_thread.c: 10: if (msgtype == 30) {
  8513  00177C  0101               	movlb	1	; () banked
  8514  00177E  0101               	movlb	1	; () banked
  8515  001780  51A4               	movf	((uart_lthread@msgtype))&0ffh,w
  8516  001782  0A1E               	xorlw	30
  8517  001784  11A5               	iorwf ((uart_lthread@msgtype+1))&0ffh,w
  8518                           
  8519  001786  A4D8               	btfss	status,2
  8520  001788  D001               	goto	u2401
  8521  00178A  D001               	goto	u2400
  8522  00178C                     u2401:
  8523  00178C  D002               	goto	l19253
  8524  00178E                     u2400:
  8525  00178E  D01C               	goto	l14582
  8526                           	line	11
  8527                           	
  8528  001790                     l19251:; BSR set to: 1
  8529                           
  8530                           ;uart_thread.c: 11: } else if (msgtype == 31) {
  8531  001790  D01B               	goto	l14582
  8532                           	
  8533  001792                     l14579:; BSR set to: 1
  8534                           
  8535                           	
  8536  001792                     l19253:; BSR set to: 1
  8537                           
  8538  001792  0101               	movlb	1	; () banked
  8539  001794  0101               	movlb	1	; () banked
  8540  001796  51A4               	movf	((uart_lthread@msgtype))&0ffh,w
  8541  001798  0A1F               	xorlw	31
  8542  00179A  11A5               	iorwf ((uart_lthread@msgtype+1))&0ffh,w
  8543                           
  8544  00179C  A4D8               	btfss	status,2
  8545  00179E  D001               	goto	u2411
  8546  0017A0  D001               	goto	u2410
  8547  0017A2                     u2411:
  8548  0017A2  D012               	goto	l14582
  8549  0017A4                     u2410:
  8550                           	line	14
  8551                           	
  8552  0017A4                     l19255:; BSR set to: 1
  8553                           
  8554                           ;uart_thread.c: 14: msgbuffer[length] = '\0';
  8555  0017A4  0101               	movlb	1	; () banked
  8556  0017A6  0101               	movlb	1	; () banked
  8557  0017A8  51A6               	movf	((uart_lthread@length))&0ffh,w
  8558  0017AA  0101               	movlb	1	; () banked
  8559  0017AC  0101               	movlb	1	; () banked
  8560  0017AE  25A8               	addwf	((uart_lthread@msgbuffer))&0ffh,w
  8561  0017B0  6ED9               	movwf	c:fsr2l
  8562  0017B2  0101               	movlb	1	; () banked
  8563  0017B4  0101               	movlb	1	; () banked
  8564  0017B6  51A7               	movf	((uart_lthread@length+1))&0ffh,w
  8565  0017B8  0101               	movlb	1	; () banked
  8566  0017BA  0101               	movlb	1	; () banked
  8567  0017BC  21A9               	addwfc	((uart_lthread@msgbuffer+1))&0ffh,w
  8568  0017BE  6EDA               	movwf	1+c:fsr2l
  8569  0017C0  0E00               	movlw	low(0)
  8570  0017C2  6EDF               	movwf	indf2
  8571  0017C4  D001               	goto	l14582
  8572                           	line	16
  8573                           	
  8574  0017C6                     l14581:; BSR set to: 1
  8575                           
  8576  0017C6  D000               	goto	l14582
  8577                           	line	17
  8578                           	
  8579  0017C8                     l14580:; BSR set to: 1
  8580                           
  8581                           	
  8582  0017C8                     l14582:; BSR set to: 1
  8583                           
  8584  0017C8  0012               	return
  8585                           	opt stack 0
  8586                           GLOBAL	__end_of_uart_lthread
  8587  0017CA                     	__end_of_uart_lthread:
  8588                           	signat	_uart_lthread,16506
  8589                           	global	_init_queue
  8590                           
  8591 ;; *************** function _init_queue *****************
  8592 ;; Defined at:
  8593 ;;		line 14 in file "../src/messages.c"
  8594 ;; Parameters:    Size  Location     Type
  8595 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  8596 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8597 ;; Auto vars:     Size  Location     Type
  8598 ;;  i               1    3[BANK1 ] unsigned char 
  8599 ;; Return value:  Size  Location     Type
  8600 ;;		None               void
  8601 ;; Registers used:
  8602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8603 ;; Tracked objects:
  8604 ;;		On entry : 0/0
  8605 ;;		On exit  : 0/0
  8606 ;;		Unchanged: 0/0
  8607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8608 ;;      Params:         0       0       2       0       0
  8609 ;;      Locals:         0       0       1       0       0
  8610 ;;      Temps:          0       0       1       0       0
  8611 ;;      Totals:         0       0       4       0       0
  8612 ;;Total ram usage:        4 bytes
  8613 ;; Hardware stack levels used:    1
  8614 ;; Hardware stack levels required when called:   10
  8615 ;; This function calls:
  8616 ;;		Nothing
  8617 ;; This function is called by:
  8618 ;;		_init_queues
  8619 ;; This function uses a non-reentrant model
  8620 ;;
  8621                           psect	text19,class=CODE,space=0,reloc=2
  8622                           global __ptext19
  8623  00141E                     __ptext19:
  8624                           psect	text19
  8625                           	file	"../src/messages.c"
  8626                           	line	14
  8627                           	global	__size_of_init_queue
  8628  0000                     	__size_of_init_queue	equ	__end_of_init_queue-_init_queue
  8629                           	
  8630  00141E                     _init_queue:; BSR set to: 1
  8631                           
  8632                           	opt	stack 19
  8633                           	line	17
  8634                           	
  8635  00141E                     l19257:
  8636                           ;messages.c: 15: unsigned char i;
  8637                           ;messages.c: 17: qptr->cur_write_ind = 0;
  8638  00141E  0101               	movlb	1	; () banked
  8639  001420  EE20 F034          	lfsr	2,034h
  8640  001424  0101               	movlb	1	; () banked
  8641  001426  51A2               	movf	((init_queue@qptr))&0ffh,w
  8642  001428  26D9               	addwf	fsr2l
  8643  00142A  0101               	movlb	1	; () banked
  8644  00142C  51A3               	movf	((init_queue@qptr+1))&0ffh,w
  8645  00142E  22DA               	addwfc	fsr2h
  8646  001430  0E00               	movlw	low(0)
  8647  001432  6EDF               	movwf	indf2
  8648                           	line	18
  8649                           ;messages.c: 18: qptr->cur_read_ind = 0;
  8650  001434  0101               	movlb	1	; () banked
  8651  001436  EE20 F035          	lfsr	2,035h
  8652  00143A  0101               	movlb	1	; () banked
  8653  00143C  51A2               	movf	((init_queue@qptr))&0ffh,w
  8654  00143E  26D9               	addwf	fsr2l
  8655  001440  0101               	movlb	1	; () banked
  8656  001442  51A3               	movf	((init_queue@qptr+1))&0ffh,w
  8657  001444  22DA               	addwfc	fsr2h
  8658  001446  0E00               	movlw	low(0)
  8659  001448  6EDF               	movwf	indf2
  8660                           	line	19
  8661                           	
  8662  00144A                     l19259:; BSR set to: 1
  8663                           
  8664                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  8665  00144A  0101               	movlb	1	; () banked
  8666  00144C  6FA4               	movwf	(??_init_queue+0+0)&0ffh
  8667  00144E  0E00               	movlw	low(0)
  8668  001450  0101               	movlb	1	; () banked
  8669  001452  0101               	movlb	1	; () banked
  8670  001454  6FA5               	movwf	((init_queue@i))&0ffh
  8671  001456  0101               	movlb	1	; () banked
  8672  001458  51A4               	movf	(??_init_queue+0+0)&0ffh,w
  8673                           	
  8674  00145A                     l19261:; BSR set to: 1
  8675                           
  8676  00145A  0E03               	movlw	(04h-1)
  8677  00145C  0101               	movlb	1	; () banked
  8678  00145E  0101               	movlb	1	; () banked
  8679  001460  65A5               	cpfsgt	((init_queue@i))&0ffh
  8680  001462  D001               	goto	u2421
  8681  001464  D001               	goto	u2420
  8682  001466                     u2421:
  8683  001466  D002               	goto	l19265
  8684  001468                     u2420:
  8685  001468  D01C               	goto	l5470
  8686                           	
  8687  00146A                     l19263:; BSR set to: 1
  8688                           
  8689  00146A  D01B               	goto	l5470
  8690                           	
  8691  00146C                     l5468:; BSR set to: 1
  8692                           
  8693                           	line	20
  8694                           	
  8695  00146C                     l19265:; BSR set to: 1
  8696                           
  8697                           ;messages.c: 20: qptr->queue[i].full = 0;
  8698  00146C  0101               	movlb	1	; () banked
  8699  00146E  0101               	movlb	1	; () banked
  8700  001470  51A5               	movf	((init_queue@i))&0ffh,w
  8701  001472  0D0D               	mullw	0Dh
  8702  001474  50F3               	movf	(prodl),c,w
  8703  001476  0101               	movlb	1	; () banked
  8704  001478  0101               	movlb	1	; () banked
  8705  00147A  25A2               	addwf	((init_queue@qptr))&0ffh,w
  8706  00147C  6ED9               	movwf	c:fsr2l
  8707  00147E  50F4               	movf	(prodh),c,w
  8708  001480  0101               	movlb	1	; () banked
  8709  001482  0101               	movlb	1	; () banked
  8710  001484  21A3               	addwfc	((init_queue@qptr+1))&0ffh,w
  8711  001486  6EDA               	movwf	1+c:fsr2l
  8712  001488  0E00               	movlw	low(0)
  8713  00148A  6EDF               	movwf	indf2
  8714                           	line	19
  8715                           	
  8716  00148C                     l19267:; BSR set to: 1
  8717                           
  8718  00148C  0101               	movlb	1	; () banked
  8719  00148E  0101               	movlb	1	; () banked
  8720  001490  2BA5               	incf	((init_queue@i))&0ffh
  8721                           	
  8722  001492                     l19269:; BSR set to: 1
  8723                           
  8724  001492  0E03               	movlw	(04h-1)
  8725  001494  0101               	movlb	1	; () banked
  8726  001496  0101               	movlb	1	; () banked
  8727  001498  65A5               	cpfsgt	((init_queue@i))&0ffh
  8728  00149A  D001               	goto	u2431
  8729  00149C  D001               	goto	u2430
  8730  00149E                     u2431:
  8731  00149E  D7E6               	goto	l19265
  8732  0014A0                     u2430:
  8733  0014A0  D000               	goto	l5470
  8734                           	
  8735  0014A2                     l5469:; BSR set to: 1
  8736                           
  8737                           	line	22
  8738                           	
  8739  0014A2                     l5470:; BSR set to: 1
  8740                           
  8741  0014A2  0012               	return
  8742                           	opt stack 0
  8743                           GLOBAL	__end_of_init_queue
  8744  0014A4                     	__end_of_init_queue:
  8745                           	signat	_init_queue,4216
  8746                           	global	_send_msg
  8747                           
  8748 ;; *************** function _send_msg *****************
  8749 ;; Defined at:
  8750 ;;		line 24 in file "../src/messages.c"
  8751 ;; Parameters:    Size  Location     Type
  8752 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  8753 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8754 ;;  length          1   12[BANK1 ] unsigned char 
  8755 ;;  msgtype         1   13[BANK1 ] unsigned char 
  8756 ;;  data            2   14[BANK1 ] PTR void 
  8757 ;;		 -> adc_int_handler@value(2), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
  8758 ;;		 -> i2c_int_handler@error_buf(3), main@msgbuffer(11), main@uc(5), 
  8759 ;; Auto vars:     Size  Location     Type
  8760 ;;  qmsg            2   20[BANK1 ] PTR struct __msg
  8761 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8762 ;;  tlength         2   17[BANK1 ] unsigned int 
  8763 ;;  slot            1   19[BANK1 ] unsigned char 
  8764 ;; Return value:  Size  Location     Type
  8765 ;;                  1    wreg      char 
  8766 ;; Registers used:
  8767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8768 ;; Tracked objects:
  8769 ;;		On entry : 0/0
  8770 ;;		On exit  : 0/0
  8771 ;;		Unchanged: 0/0
  8772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8773 ;;      Params:         0       0       6       0       0
  8774 ;;      Locals:         0       0       5       0       0
  8775 ;;      Temps:          0       0       1       0       0
  8776 ;;      Totals:         0       0      12       0       0
  8777 ;;Total ram usage:       12 bytes
  8778 ;; Hardware stack levels used:    1
  8779 ;; Hardware stack levels required when called:   11
  8780 ;; This function calls:
  8781 ;;		_memcpy
  8782 ;; This function is called by:
  8783 ;;		_FromMainLow_sendmsg
  8784 ;;		_FromMainHigh_sendmsg
  8785 ;; This function uses a non-reentrant model
  8786 ;;
  8787                           psect	text20,class=CODE,space=0,reloc=2
  8788                           global __ptext20
  8789  000C9E                     __ptext20:
  8790                           psect	text20
  8791                           	file	"../src/messages.c"
  8792                           	line	24
  8793                           	global	__size_of_send_msg
  8794  0000                     	__size_of_send_msg	equ	__end_of_send_msg-_send_msg
  8795                           	
  8796  000C9E                     _send_msg:; BSR set to: 1
  8797                           
  8798                           	opt	stack 18
  8799                           	line	28
  8800                           	
  8801  000C9E                     l19271:
  8802                           ;messages.c: 25: unsigned char slot;
  8803                           ;messages.c: 27: msg *qmsg;
  8804                           ;messages.c: 28: size_t tlength = length;
  8805  000C9E  0101               	movlb	1	; () banked
  8806  000CA0  0101               	movlb	1	; () banked
  8807  000CA2  C1AE  F1B3         	movff	(send_msg@length),(send_msg@tlength)
  8808  000CA6  0101               	movlb	1	; () banked
  8809  000CA8  0101               	movlb	1	; () banked
  8810  000CAA  6BB4               	clrf	((send_msg@tlength+1))&0ffh
  8811                           	line	38
  8812                           	
  8813  000CAC                     l19273:; BSR set to: 1
  8814                           
  8815                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8816  000CAC  0101               	movlb	1	; () banked
  8817  000CAE  EE20 F034          	lfsr	2,034h
  8818  000CB2  0101               	movlb	1	; () banked
  8819  000CB4  51AC               	movf	((send_msg@qptr))&0ffh,w
  8820  000CB6  26D9               	addwf	fsr2l
  8821  000CB8  0101               	movlb	1	; () banked
  8822  000CBA  51AD               	movf	((send_msg@qptr+1))&0ffh,w
  8823  000CBC  22DA               	addwfc	fsr2h
  8824  000CBE  50DF               	movf	indf2,w
  8825  000CC0  0101               	movlb	1	; () banked
  8826  000CC2  0101               	movlb	1	; () banked
  8827  000CC4  6FB5               	movwf	((send_msg@slot))&0ffh
  8828                           	line	39
  8829                           	
  8830  000CC6                     l19275:; BSR set to: 1
  8831                           
  8832                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8833  000CC6  0101               	movlb	1	; () banked
  8834  000CC8  0101               	movlb	1	; () banked
  8835  000CCA  51B5               	movf	((send_msg@slot))&0ffh,w
  8836  000CCC  0D0D               	mullw	0Dh
  8837  000CCE  50F3               	movf	(prodl),c,w
  8838  000CD0  0101               	movlb	1	; () banked
  8839  000CD2  0101               	movlb	1	; () banked
  8840  000CD4  25AC               	addwf	((send_msg@qptr))&0ffh,w
  8841  000CD6  0101               	movlb	1	; () banked
  8842                           	
  8843  000CD8  0101               	movlb	1	; () banked
  8844  000CDA  6FB6               	movwf	((send_msg@qmsg))&0ffh
  8845  000CDC  50F4               	movf	(prodh),c,w
  8846  000CDE  0101               	movlb	1	; () banked
  8847  000CE0  0101               	movlb	1	; () banked
  8848  000CE2  21AD               	addwfc	((send_msg@qptr+1))&0ffh,w
  8849  000CE4  0101               	movlb	1	; () banked
  8850  000CE6  6FB7               	movwf	1+((send_msg@qmsg))&0ffh
  8851                           	line	41
  8852                           	
  8853  000CE8                     l19277:; BSR set to: 1
  8854                           
  8855                           ;messages.c: 41: if (qmsg->full != 0) {
  8856  000CE8  C1B6  FFD9         	movff	(send_msg@qmsg),fsr2l
  8857  000CEC  C1B7  FFDA         	movff	(send_msg@qmsg+1),fsr2h
  8858  000CF0  50DF               	movf	indf2,w
  8859  000CF2  B4D8               	btfsc	status,2
  8860  000CF4  D001               	goto	u2441
  8861  000CF6  D001               	goto	u2440
  8862  000CF8                     u2441:
  8863  000CF8  D003               	goto	l19283
  8864  000CFA                     u2440:
  8865                           	line	42
  8866                           	
  8867  000CFA                     l19279:; BSR set to: 1
  8868                           
  8869                           ;messages.c: 42: return (-1);
  8870  000CFA  0EFF               	movlw	(-1)&0ffh
  8871  000CFC  D052               	goto	l5474
  8872                           	
  8873  000CFE                     l19281:; BSR set to: 1
  8874                           
  8875  000CFE  D051               	goto	l5474
  8876                           	line	43
  8877                           	
  8878  000D00                     l5473:; BSR set to: 1
  8879                           
  8880                           	line	46
  8881                           	
  8882  000D00                     l19283:; BSR set to: 1
  8883                           
  8884                           ;messages.c: 43: }
  8885                           ;messages.c: 46: qmsg->length = length;
  8886  000D00  0101               	movlb	1	; () banked
  8887  000D02  EE20 F001          	lfsr	2,01h
  8888  000D06  0101               	movlb	1	; () banked
  8889  000D08  51B6               	movf	((send_msg@qmsg))&0ffh,w
  8890  000D0A  26D9               	addwf	fsr2l
  8891  000D0C  0101               	movlb	1	; () banked
  8892  000D0E  51B7               	movf	((send_msg@qmsg+1))&0ffh,w
  8893  000D10  22DA               	addwfc	fsr2h
  8894  000D12  0101               	movlb	1	; () banked
  8895  000D14  C1AE  FFDF         	movff	(send_msg@length),indf2
  8896                           
  8897                           	line	47
  8898                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8899  000D18  0101               	movlb	1	; () banked
  8900  000D1A  EE20 F002          	lfsr	2,02h
  8901  000D1E  0101               	movlb	1	; () banked
  8902  000D20  51B6               	movf	((send_msg@qmsg))&0ffh,w
  8903  000D22  26D9               	addwf	fsr2l
  8904  000D24  0101               	movlb	1	; () banked
  8905  000D26  51B7               	movf	((send_msg@qmsg+1))&0ffh,w
  8906  000D28  22DA               	addwfc	fsr2h
  8907  000D2A  0101               	movlb	1	; () banked
  8908  000D2C  C1AF  FFDF         	movff	(send_msg@msgtype),indf2
  8909                           
  8910                           	line	55
  8911                           	
  8912  000D30                     l19285:; BSR set to: 1
  8913                           
  8914                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8915  000D30  0E03               	movlw	low(03h)
  8916  000D32  0101               	movlb	1	; () banked
  8917  000D34  0101               	movlb	1	; () banked
  8918  000D36  25B6               	addwf	((send_msg@qmsg))&0ffh,w
  8919  000D38  0101               	movlb	1	; () banked
  8920                           	
  8921  000D3A  0101               	movlb	1	; () banked
  8922  000D3C  6FA2               	movwf	((?_memcpy))&0ffh
  8923  000D3E  0E00               	movlw	high(03h)
  8924  000D40  0101               	movlb	1	; () banked
  8925  000D42  0101               	movlb	1	; () banked
  8926  000D44  21B7               	addwfc	((send_msg@qmsg+1))&0ffh,w
  8927  000D46  0101               	movlb	1	; () banked
  8928  000D48  6FA3               	movwf	1+((?_memcpy))&0ffh
  8929  000D4A  C1B0  F1A4         	movff	(send_msg@data),0+(?_memcpy+02h)
  8930  000D4E  C1B1  F1A5         	movff	(send_msg@data+1),1+(?_memcpy+02h)
  8931  000D52  C1B3  F1A6         	movff	(send_msg@tlength),0+(?_memcpy+04h)
  8932  000D56  C1B4  F1A7         	movff	(send_msg@tlength+1),1+(?_memcpy+04h)
  8933  000D5A  0101               	movlb	1	; () banked
  8934  000D5C  EC93  F00B         	call	_memcpy	;wreg free
  8935                           	line	56
  8936                           	
  8937  000D60                     l19287:
  8938                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8939  000D60  0101               	movlb	1	; () banked
  8940  000D62  EE20 F034          	lfsr	2,034h
  8941  000D66  0101               	movlb	1	; () banked
  8942  000D68  51AC               	movf	((send_msg@qptr))&0ffh,w
  8943  000D6A  26D9               	addwf	fsr2l
  8944  000D6C  0101               	movlb	1	; () banked
  8945  000D6E  51AD               	movf	((send_msg@qptr+1))&0ffh,w
  8946  000D70  22DA               	addwfc	fsr2h
  8947  000D72  0101               	movlb	1	; () banked
  8948  000D74  EE10 F034          	lfsr	1,034h
  8949  000D78  0101               	movlb	1	; () banked
  8950  000D7A  51AC               	movf	((send_msg@qptr))&0ffh,w
  8951  000D7C  26E1               	addwf	fsr1l
  8952  000D7E  0101               	movlb	1	; () banked
  8953  000D80  51AD               	movf	((send_msg@qptr+1))&0ffh,w
  8954  000D82  22E2               	addwfc	fsr1h
  8955  000D84  50E7               	movf	indf1,w
  8956  000D86  0101               	movlb	1	; () banked
  8957  000D88  6FB2               	movwf	(??_send_msg+0+0)&0ffh
  8958  000D8A  0101               	movlb	1	; () banked
  8959  000D8C  29B2               	incf	((??_send_msg+0+0))&0ffh,w
  8960  000D8E  0B03               	andlw	low(03h)
  8961  000D90  6EDF               	movwf	indf2
  8962                           
  8963                           	line	59
  8964                           	
  8965  000D92                     l19289:; BSR set to: 1
  8966                           
  8967                           ;messages.c: 59: qmsg->full = 1;
  8968  000D92  C1B6  FFD9         	movff	(send_msg@qmsg),fsr2l
  8969  000D96  C1B7  FFDA         	movff	(send_msg@qmsg+1),fsr2h
  8970  000D9A  0E01               	movlw	low(01h)
  8971  000D9C  6EDF               	movwf	indf2
  8972                           	line	60
  8973                           	
  8974  000D9E                     l19291:; BSR set to: 1
  8975                           
  8976                           ;messages.c: 60: return (1);
  8977  000D9E  0E01               	movlw	(01h)&0ffh
  8978  000DA0  D000               	goto	l5474
  8979                           	
  8980  000DA2                     l19293:; BSR set to: 1
  8981                           
  8982                           	line	61
  8983                           	
  8984  000DA2                     l5474:; BSR set to: 1
  8985                           
  8986  000DA2  0012               	return
  8987                           	opt stack 0
  8988                           GLOBAL	__end_of_send_msg
  8989  000DA4                     	__end_of_send_msg:
  8990                           	signat	_send_msg,16505
  8991                           	global	_recv_msg
  8992                           
  8993 ;; *************** function _recv_msg *****************
  8994 ;; Defined at:
  8995 ;;		line 63 in file "../src/messages.c"
  8996 ;; Parameters:    Size  Location     Type
  8997 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  8998 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8999 ;;  maxlength       1   12[BANK1 ] unsigned char 
  9000 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  9001 ;;		 -> RAM(1023), i2c_int_handler@msgtype(1), main@msgtype(1), 
  9002 ;;  data            2   15[BANK1 ] PTR void 
  9003 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@data(10), main@msgbuffer(11), 
  9004 ;; Auto vars:     Size  Location     Type
  9005 ;;  qmsg            2   22[BANK1 ] PTR struct __msg
  9006 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9007 ;;  tlength         2   20[BANK1 ] unsigned int 
  9008 ;;  slot            1   19[BANK1 ] unsigned char 
  9009 ;; Return value:  Size  Location     Type
  9010 ;;                  1    wreg      char 
  9011 ;; Registers used:
  9012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9013 ;; Tracked objects:
  9014 ;;		On entry : 0/0
  9015 ;;		On exit  : 0/0
  9016 ;;		Unchanged: 0/0
  9017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9018 ;;      Params:         0       0       7       0       0
  9019 ;;      Locals:         0       0       5       0       0
  9020 ;;      Temps:          0       0       2       0       0
  9021 ;;      Totals:         0       0      14       0       0
  9022 ;;Total ram usage:       14 bytes
  9023 ;; Hardware stack levels used:    1
  9024 ;; Hardware stack levels required when called:   11
  9025 ;; This function calls:
  9026 ;;		_memcpy
  9027 ;; This function is called by:
  9028 ;;		_ToMainLow_recvmsg
  9029 ;;		_ToMainHigh_recvmsg
  9030 ;; This function uses a non-reentrant model
  9031 ;;
  9032                           psect	text21,class=CODE,space=0,reloc=2
  9033                           global __ptext21
  9034  000A4A                     __ptext21:
  9035                           psect	text21
  9036                           	file	"../src/messages.c"
  9037                           	line	63
  9038                           	global	__size_of_recv_msg
  9039  0000                     	__size_of_recv_msg	equ	__end_of_recv_msg-_recv_msg
  9040                           	
  9041  000A4A                     _recv_msg:; BSR set to: 1
  9042                           
  9043                           	opt	stack 18
  9044                           	line	72
  9045                           	
  9046  000A4A                     l19305:
  9047                           ;messages.c: 64: unsigned char slot;
  9048                           ;messages.c: 68: msg *qmsg;
  9049                           ;messages.c: 69: size_t tlength;
  9050                           ;messages.c: 72: slot = qptr->cur_read_ind;
  9051  000A4A  0101               	movlb	1	; () banked
  9052  000A4C  EE20 F035          	lfsr	2,035h
  9053  000A50  0101               	movlb	1	; () banked
  9054  000A52  51AC               	movf	((recv_msg@qptr))&0ffh,w
  9055  000A54  26D9               	addwf	fsr2l
  9056  000A56  0101               	movlb	1	; () banked
  9057  000A58  51AD               	movf	((recv_msg@qptr+1))&0ffh,w
  9058  000A5A  22DA               	addwfc	fsr2h
  9059  000A5C  50DF               	movf	indf2,w
  9060  000A5E  0101               	movlb	1	; () banked
  9061  000A60  0101               	movlb	1	; () banked
  9062  000A62  6FB5               	movwf	((recv_msg@slot))&0ffh
  9063                           	line	73
  9064                           	
  9065  000A64                     l19307:; BSR set to: 1
  9066                           
  9067                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  9068  000A64  0101               	movlb	1	; () banked
  9069  000A66  0101               	movlb	1	; () banked
  9070  000A68  51B5               	movf	((recv_msg@slot))&0ffh,w
  9071  000A6A  0D0D               	mullw	0Dh
  9072  000A6C  50F3               	movf	(prodl),c,w
  9073  000A6E  0101               	movlb	1	; () banked
  9074  000A70  0101               	movlb	1	; () banked
  9075  000A72  25AC               	addwf	((recv_msg@qptr))&0ffh,w
  9076  000A74  0101               	movlb	1	; () banked
  9077                           	
  9078  000A76  0101               	movlb	1	; () banked
  9079  000A78  6FB8               	movwf	((recv_msg@qmsg))&0ffh
  9080  000A7A  50F4               	movf	(prodh),c,w
  9081  000A7C  0101               	movlb	1	; () banked
  9082  000A7E  0101               	movlb	1	; () banked
  9083  000A80  21AD               	addwfc	((recv_msg@qptr+1))&0ffh,w
  9084  000A82  0101               	movlb	1	; () banked
  9085  000A84  6FB9               	movwf	1+((recv_msg@qmsg))&0ffh
  9086                           	line	74
  9087                           	
  9088  000A86                     l19309:; BSR set to: 1
  9089                           
  9090                           ;messages.c: 74: if (qmsg->full == 1) {
  9091  000A86  0E01               	movlw	(01h)&0ffh
  9092  000A88  C1B8  FFD9         	movff	(recv_msg@qmsg),fsr2l
  9093  000A8C  C1B9  FFDA         	movff	(recv_msg@qmsg+1),fsr2h
  9094  000A90  62DF               	cpfseq	indf2
  9095  000A92  D001               	goto	u2461
  9096  000A94  D001               	goto	u2460
  9097  000A96                     u2461:
  9098  000A96  D075               	goto	l19333
  9099  000A98                     u2460:
  9100                           	line	76
  9101                           	
  9102  000A98                     l19311:; BSR set to: 1
  9103                           
  9104                           ;messages.c: 76: if (qmsg->length > maxlength) {
  9105  000A98  0101               	movlb	1	; () banked
  9106  000A9A  EE20 F001          	lfsr	2,01h
  9107  000A9E  0101               	movlb	1	; () banked
  9108  000AA0  51B8               	movf	((recv_msg@qmsg))&0ffh,w
  9109  000AA2  26D9               	addwf	fsr2l
  9110  000AA4  0101               	movlb	1	; () banked
  9111  000AA6  51B9               	movf	((recv_msg@qmsg+1))&0ffh,w
  9112  000AA8  22DA               	addwfc	fsr2h
  9113  000AAA  50DF               	movf	indf2,w
  9114  000AAC  0101               	movlb	1	; () banked
  9115  000AAE  0101               	movlb	1	; () banked
  9116  000AB0  61AE               	cpfslt	((recv_msg@maxlength))&0ffh
  9117  000AB2  D001               	goto	u2471
  9118  000AB4  D001               	goto	u2470
  9119  000AB6                     u2471:
  9120  000AB6  D003               	goto	l19317
  9121  000AB8                     u2470:
  9122                           	line	77
  9123                           	
  9124  000AB8                     l19313:; BSR set to: 1
  9125                           
  9126                           ;messages.c: 77: return (-3);
  9127  000AB8  0EFD               	movlw	(-3)&0ffh
  9128  000ABA  D066               	goto	l5479
  9129                           	
  9130  000ABC                     l19315:; BSR set to: 1
  9131                           
  9132  000ABC  D065               	goto	l5479
  9133                           	line	78
  9134                           	
  9135  000ABE                     l5478:; BSR set to: 1
  9136                           
  9137                           	line	80
  9138                           	
  9139  000ABE                     l19317:; BSR set to: 1
  9140                           
  9141                           ;messages.c: 78: }
  9142                           ;messages.c: 80: tlength = qmsg->length;
  9143  000ABE  0101               	movlb	1	; () banked
  9144  000AC0  EE20 F001          	lfsr	2,01h
  9145  000AC4  0101               	movlb	1	; () banked
  9146  000AC6  51B8               	movf	((recv_msg@qmsg))&0ffh,w
  9147  000AC8  26D9               	addwf	fsr2l
  9148  000ACA  0101               	movlb	1	; () banked
  9149  000ACC  51B9               	movf	((recv_msg@qmsg+1))&0ffh,w
  9150  000ACE  22DA               	addwfc	fsr2h
  9151  000AD0  50DF               	movf	indf2,w
  9152  000AD2  0101               	movlb	1	; () banked
  9153  000AD4  6FB3               	movwf	(??_recv_msg+0+0)&0ffh
  9154  000AD6  0101               	movlb	1	; () banked
  9155  000AD8  51B3               	movf	((??_recv_msg+0+0))&0ffh,w
  9156  000ADA  0101               	movlb	1	; () banked
  9157  000ADC  0101               	movlb	1	; () banked
  9158  000ADE  6FB6               	movwf	((recv_msg@tlength))&0ffh
  9159  000AE0  0101               	movlb	1	; () banked
  9160  000AE2  6BB7               	clrf	((recv_msg@tlength+1))&0ffh
  9161                           	line	81
  9162                           	
  9163  000AE4                     l19319:; BSR set to: 1
  9164                           
  9165                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  9166  000AE4  C1B1  F1A2         	movff	(recv_msg@data),(?_memcpy)
  9167  000AE8  C1B2  F1A3         	movff	(recv_msg@data+1),(?_memcpy+1)
  9168  000AEC  0E03               	movlw	03h
  9169  000AEE  0101               	movlb	1	; () banked
  9170  000AF0  0101               	movlb	1	; () banked
  9171  000AF2  25B8               	addwf	((recv_msg@qmsg))&0ffh,w
  9172  000AF4  0101               	movlb	1	; () banked
  9173  000AF6  6FB3               	movwf	(??_recv_msg+0+0)&0ffh
  9174  000AF8  0E00               	movlw	0
  9175  000AFA  0101               	movlb	1	; () banked
  9176  000AFC  0101               	movlb	1	; () banked
  9177  000AFE  21B9               	addwfc	((recv_msg@qmsg+1))&0ffh,w
  9178  000B00  0101               	movlb	1	; () banked
  9179  000B02  6FB4               	movwf	(??_recv_msg+0+0+1)&0ffh
  9180  000B04  C1B3  F1A4         	movff	??_recv_msg+0+0,0+(?_memcpy+02h)
  9181  000B08  C1B4  F1A5         	movff	??_recv_msg+0+1,1+(?_memcpy+02h)
  9182  000B0C  C1B6  F1A6         	movff	(recv_msg@tlength),0+(?_memcpy+04h)
  9183  000B10  C1B7  F1A7         	movff	(recv_msg@tlength+1),1+(?_memcpy+04h)
  9184  000B14  0101               	movlb	1	; () banked
  9185  000B16  EC93  F00B         	call	_memcpy	;wreg free
  9186                           	line	87
  9187                           	
  9188  000B1A                     l19321:
  9189                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  9190  000B1A  0101               	movlb	1	; () banked
  9191  000B1C  EE20 F035          	lfsr	2,035h
  9192  000B20  0101               	movlb	1	; () banked
  9193  000B22  51AC               	movf	((recv_msg@qptr))&0ffh,w
  9194  000B24  26D9               	addwf	fsr2l
  9195  000B26  0101               	movlb	1	; () banked
  9196  000B28  51AD               	movf	((recv_msg@qptr+1))&0ffh,w
  9197  000B2A  22DA               	addwfc	fsr2h
  9198  000B2C  0101               	movlb	1	; () banked
  9199  000B2E  EE10 F035          	lfsr	1,035h
  9200  000B32  0101               	movlb	1	; () banked
  9201  000B34  51AC               	movf	((recv_msg@qptr))&0ffh,w
  9202  000B36  26E1               	addwf	fsr1l
  9203  000B38  0101               	movlb	1	; () banked
  9204  000B3A  51AD               	movf	((recv_msg@qptr+1))&0ffh,w
  9205  000B3C  22E2               	addwfc	fsr1h
  9206  000B3E  50E7               	movf	indf1,w
  9207  000B40  0101               	movlb	1	; () banked
  9208  000B42  6FB3               	movwf	(??_recv_msg+0+0)&0ffh
  9209  000B44  0101               	movlb	1	; () banked
  9210  000B46  29B3               	incf	((??_recv_msg+0+0))&0ffh,w
  9211  000B48  0B03               	andlw	low(03h)
  9212  000B4A  6EDF               	movwf	indf2
  9213                           
  9214                           	line	89
  9215                           	
  9216  000B4C                     l19323:; BSR set to: 1
  9217                           
  9218                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  9219  000B4C  0101               	movlb	1	; () banked
  9220  000B4E  EE20 F002          	lfsr	2,02h
  9221  000B52  0101               	movlb	1	; () banked
  9222  000B54  51B8               	movf	((recv_msg@qmsg))&0ffh,w
  9223  000B56  26D9               	addwf	fsr2l
  9224  000B58  0101               	movlb	1	; () banked
  9225  000B5A  51B9               	movf	((recv_msg@qmsg+1))&0ffh,w
  9226  000B5C  22DA               	addwfc	fsr2h
  9227  000B5E  C1AF  FFE1         	movff	(recv_msg@msgtype),fsr1l
  9228  000B62  C1B0  FFE2         	movff	(recv_msg@msgtype+1),fsr1h
  9229  000B66  CFDF FFE7          	movff	indf2,indf1
  9230                           	line	91
  9231                           	
  9232  000B6A                     l19325:; BSR set to: 1
  9233                           
  9234                           ;messages.c: 91: qmsg->full = 0;
  9235  000B6A  C1B8  FFD9         	movff	(recv_msg@qmsg),fsr2l
  9236  000B6E  C1B9  FFDA         	movff	(recv_msg@qmsg+1),fsr2h
  9237  000B72  0E00               	movlw	low(0)
  9238  000B74  6EDF               	movwf	indf2
  9239                           	line	92
  9240                           	
  9241  000B76                     l19327:; BSR set to: 1
  9242                           
  9243                           ;messages.c: 92: return (tlength);
  9244  000B76  0101               	movlb	1	; () banked
  9245  000B78  0101               	movlb	1	; () banked
  9246  000B7A  51B6               	movf	((recv_msg@tlength))&0ffh,w
  9247  000B7C  D005               	goto	l5479
  9248                           	
  9249  000B7E                     l19329:; BSR set to: 1
  9250                           
  9251  000B7E  D004               	goto	l5479
  9252                           	line	93
  9253                           	
  9254  000B80                     l19331:; BSR set to: 1
  9255                           
  9256                           ;messages.c: 93: } else {
  9257  000B80  D003               	goto	l5479
  9258                           	
  9259  000B82                     l5477:; BSR set to: 1
  9260                           
  9261                           	line	94
  9262                           	
  9263  000B82                     l19333:; BSR set to: 1
  9264                           
  9265                           ;messages.c: 94: return (-4);
  9266  000B82  0EFC               	movlw	(-4)&0ffh
  9267  000B84  D001               	goto	l5479
  9268                           	
  9269  000B86                     l19335:; BSR set to: 1
  9270                           
  9271  000B86  D000               	goto	l5479
  9272                           	line	95
  9273                           	
  9274  000B88                     l5480:; BSR set to: 1
  9275                           
  9276                           	line	96
  9277                           	
  9278  000B88                     l5479:; BSR set to: 1
  9279                           
  9280  000B88  0012               	return
  9281                           	opt stack 0
  9282                           GLOBAL	__end_of_recv_msg
  9283  000B8A                     	__end_of_recv_msg:
  9284                           	signat	_recv_msg,16505
  9285                           	global	_memcpy
  9286                           
  9287 ;; *************** function _memcpy *****************
  9288 ;; Defined at:
  9289 ;;		line 13 in file "/opt/microchip/xc8/v1.10/sources/memcpy.c"
  9290 ;; Parameters:    Size  Location     Type
  9291 ;;  d1              2    0[BANK1 ] PTR void 
  9292 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  9293 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  9294 ;;  s1              2    2[BANK1 ] PTR const void 
  9295 ;;		 -> adc_int_handler@value(2), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
  9296 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  9297 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(5), 
  9298 ;;  n               2    4[BANK1 ] unsigned int 
  9299 ;; Auto vars:     Size  Location     Type
  9300 ;;  s               2    8[BANK1 ] PTR const unsigned char 
  9301 ;;		 -> adc_int_handler@value(2), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
  9302 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  9303 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(5), 
  9304 ;;  d               2    6[BANK1 ] PTR unsigned char 
  9305 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  9306 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  9307 ;; Return value:  Size  Location     Type
  9308 ;;                  2    0[BANK1 ] PTR void 
  9309 ;; Registers used:
  9310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9311 ;; Tracked objects:
  9312 ;;		On entry : 0/0
  9313 ;;		On exit  : 0/0
  9314 ;;		Unchanged: 0/0
  9315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9316 ;;      Params:         0       0       6       0       0
  9317 ;;      Locals:         0       0       4       0       0
  9318 ;;      Temps:          0       0       0       0       0
  9319 ;;      Totals:         0       0      10       0       0
  9320 ;;Total ram usage:       10 bytes
  9321 ;; Hardware stack levels used:    1
  9322 ;; Hardware stack levels required when called:   10
  9323 ;; This function calls:
  9324 ;;		Nothing
  9325 ;; This function is called by:
  9326 ;;		_send_msg
  9327 ;;		_recv_msg
  9328 ;; This function uses a non-reentrant model
  9329 ;;
  9330                           psect	text22,class=CODE,space=0,reloc=2
  9331                           global __ptext22
  9332  001726                     __ptext22:
  9333                           psect	text22
  9334                           	file	"/opt/microchip/xc8/v1.10/sources/memcpy.c"
  9335                           	line	13
  9336                           	global	__size_of_memcpy
  9337  0000                     	__size_of_memcpy	equ	__end_of_memcpy-_memcpy
  9338                           	
  9339  001726                     _memcpy:; BSR set to: 1
  9340                           
  9341                           	opt	stack 18
  9342                           	line	24
  9343                           	
  9344  001726                     l19295:
  9345  001726  C1A4  F1AA         	movff	(memcpy@s1),(memcpy@s)
  9346  00172A  C1A5  F1AB         	movff	(memcpy@s1+1),(memcpy@s+1)
  9347                           	line	25
  9348  00172E  C1A2  F1A8         	movff	(memcpy@d1),(memcpy@d)
  9349  001732  C1A3  F1A9         	movff	(memcpy@d1+1),(memcpy@d+1)
  9350                           	line	26
  9351  001736  D013               	goto	l19303
  9352                           	
  9353  001738                     l17009:
  9354                           	line	27
  9355                           	
  9356  001738                     l19297:
  9357  001738  C1AA  FFD9         	movff	(memcpy@s),fsr2l
  9358  00173C  C1AB  FFDA         	movff	(memcpy@s+1),fsr2h
  9359  001740  C1A8  FFE1         	movff	(memcpy@d),fsr1l
  9360  001744  C1A9  FFE2         	movff	(memcpy@d+1),fsr1h
  9361  001748  CFDF FFE7          	movff	indf2,indf1
  9362                           	
  9363  00174C                     l19299:
  9364  00174C  0101               	movlb	1	; () banked
  9365  00174E  0101               	movlb	1	; () banked
  9366  001750  4BAA               	infsnz	((memcpy@s))&0ffh
  9367  001752  2BAB               	incf	((memcpy@s+1))&0ffh
  9368                           	
  9369  001754                     l19301:; BSR set to: 1
  9370                           
  9371  001754  0101               	movlb	1	; () banked
  9372  001756  0101               	movlb	1	; () banked
  9373  001758  4BA8               	infsnz	((memcpy@d))&0ffh
  9374  00175A  2BA9               	incf	((memcpy@d+1))&0ffh
  9375  00175C  D000               	goto	l19303
  9376                           	
  9377  00175E                     l17008:; BSR set to: 1
  9378                           
  9379                           	line	26
  9380                           	
  9381  00175E                     l19303:
  9382  00175E  0101               	movlb	1	; () banked
  9383  001760  0101               	movlb	1	; () banked
  9384  001762  07A6               	decf	((memcpy@n))&0ffh
  9385  001764  A0D8               	btfss	status,0
  9386  001766  07A7               	decf	((memcpy@n+1))&0ffh
  9387  001768  0101               	movlb	1	; () banked
  9388  00176A  29A6               	incf	((memcpy@n))&0ffh,w
  9389  00176C  B4D8               	btfsc	status,2
  9390  00176E  29A7               	incf ((memcpy@n+1))&0ffh,w
  9391                           
  9392  001770  A4D8               	btfss	status,2
  9393  001772  D001               	goto	u2451
  9394  001774  D001               	goto	u2450
  9395  001776                     u2451:
  9396  001776  D7E0               	goto	l19297
  9397  001778                     u2450:
  9398  001778  D000               	goto	l17011
  9399                           	
  9400  00177A                     l17010:; BSR set to: 1
  9401                           
  9402                           	line	32
  9403                           ;	Return value of _memcpy is never used
  9404                           	
  9405  00177A                     l17011:; BSR set to: 1
  9406                           
  9407  00177A  0012               	return
  9408                           	opt stack 0
  9409                           GLOBAL	__end_of_memcpy
  9410  00177C                     	__end_of_memcpy:
  9411                           	signat	_memcpy,12410
  9412                           	global	_check_msg
  9413                           
  9414 ;; *************** function _check_msg *****************
  9415 ;; Defined at:
  9416 ;;		line 222 in file "../src/messages.c"
  9417 ;; Parameters:    Size  Location     Type
  9418 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  9419 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9420 ;; Auto vars:     Size  Location     Type
  9421 ;;		None
  9422 ;; Return value:  Size  Location     Type
  9423 ;;                  1    wreg      unsigned char 
  9424 ;; Registers used:
  9425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9426 ;; Tracked objects:
  9427 ;;		On entry : 0/0
  9428 ;;		On exit  : 0/0
  9429 ;;		Unchanged: 0/0
  9430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9431 ;;      Params:         0       0       2       0       0
  9432 ;;      Locals:         0       0       0       0       0
  9433 ;;      Temps:          0       0       1       0       0
  9434 ;;      Totals:         0       0       3       0       0
  9435 ;;Total ram usage:        3 bytes
  9436 ;; Hardware stack levels used:    1
  9437 ;; Hardware stack levels required when called:   10
  9438 ;; This function calls:
  9439 ;;		Nothing
  9440 ;; This function is called by:
  9441 ;;		_block_on_To_msgqueues
  9442 ;; This function uses a non-reentrant model
  9443 ;;
  9444                           psect	text23,class=CODE,space=0,reloc=2
  9445                           global __ptext23
  9446  001964                     __ptext23:
  9447                           psect	text23
  9448                           	file	"../src/messages.c"
  9449                           	line	222
  9450                           	global	__size_of_check_msg
  9451  0000                     	__size_of_check_msg	equ	__end_of_check_msg-_check_msg
  9452                           	
  9453  001964                     _check_msg:; BSR set to: 1
  9454                           
  9455                           	opt	stack 19
  9456                           	line	223
  9457                           	
  9458  001964                     l19353:
  9459                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  9460  001964  0101               	movlb	1	; () banked
  9461  001966  EE20 F035          	lfsr	2,035h
  9462  00196A  0101               	movlb	1	; () banked
  9463  00196C  51A2               	movf	((check_msg@qptr))&0ffh,w
  9464  00196E  26D9               	addwf	fsr2l
  9465  001970  0101               	movlb	1	; () banked
  9466  001972  51A3               	movf	((check_msg@qptr+1))&0ffh,w
  9467  001974  22DA               	addwfc	fsr2h
  9468  001976  50DF               	movf	indf2,w
  9469  001978  0101               	movlb	1	; () banked
  9470  00197A  6FA4               	movwf	(??_check_msg+0+0)&0ffh
  9471  00197C  0101               	movlb	1	; () banked
  9472  00197E  51A4               	movf	((??_check_msg+0+0))&0ffh,w
  9473  001980  0D0D               	mullw	0Dh
  9474  001982  50F3               	movf	(prodl),c,w
  9475  001984  0101               	movlb	1	; () banked
  9476  001986  0101               	movlb	1	; () banked
  9477  001988  25A2               	addwf	((check_msg@qptr))&0ffh,w
  9478  00198A  6ED9               	movwf	c:fsr2l
  9479  00198C  50F4               	movf	(prodh),c,w
  9480  00198E  0101               	movlb	1	; () banked
  9481  001990  0101               	movlb	1	; () banked
  9482  001992  21A3               	addwfc	((check_msg@qptr+1))&0ffh,w
  9483  001994  6EDA               	movwf	1+c:fsr2l
  9484  001996  50DF               	movf	indf2,w
  9485  001998  D000               	goto	l5523
  9486                           	
  9487  00199A                     l19355:; BSR set to: 1
  9488                           
  9489                           	line	224
  9490                           	
  9491  00199A                     l5523:; BSR set to: 1
  9492                           
  9493  00199A  0012               	return
  9494                           	opt stack 0
  9495                           GLOBAL	__end_of_check_msg
  9496  00199C                     	__end_of_check_msg:
  9497                           	signat	_check_msg,4217
  9498                           	global	_Delay1KTCYx
  9499                           
  9500 ;; *************** function _Delay1KTCYx *****************
  9501 ;; Defined at:
  9502 ;;		line 9 in file "../common/d1ktcyx.c"
  9503 ;; Parameters:    Size  Location     Type
  9504 ;;  unit            1    0[BANK1 ] unsigned char 
  9505 ;; Auto vars:     Size  Location     Type
  9506 ;;		None
  9507 ;; Return value:  Size  Location     Type
  9508 ;;		None               void
  9509 ;; Registers used:
  9510 ;;		wreg
  9511 ;; Tracked objects:
  9512 ;;		On entry : 0/0
  9513 ;;		On exit  : 0/0
  9514 ;;		Unchanged: 0/0
  9515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9516 ;;      Params:         0       0       1       0       0
  9517 ;;      Locals:         0       0       0       0       0
  9518 ;;      Temps:          0       0       0       0       0
  9519 ;;      Totals:         0       0       1       0       0
  9520 ;;Total ram usage:        1 bytes
  9521 ;; Hardware stack levels used:    1
  9522 ;; Hardware stack levels required when called:   10
  9523 ;; This function calls:
  9524 ;;		Nothing
  9525 ;; This function is called by:
  9526 ;;		_block_on_To_msgqueues
  9527 ;; This function uses a non-reentrant model
  9528 ;;
  9529                           psect	text24,class=CODE,space=0,reloc=2
  9530                           global __ptext24
  9531  001C0C                     __ptext24:
  9532                           psect	text24
  9533                           	file	"../common/d1ktcyx.c"
  9534                           	line	9
  9535                           	global	__size_of_Delay1KTCYx
  9536  0000                     	__size_of_Delay1KTCYx	equ	__end_of_Delay1KTCYx-_Delay1KTCYx
  9537                           	
  9538  001C0C                     _Delay1KTCYx:; BSR set to: 1
  9539                           
  9540                           	opt	stack 19
  9541                           	line	10
  9542                           	
  9543  001C0C                     l17073:
  9544                           	line	11
  9545                           	
  9546  001C0C                     l19357:
  9547  001C0C  0EFA               	movlw	250
  9548  001C0E                     u2537:
  9549  001C0E  F000               	nop
  9550  001C10  2EE8               decfsz	wreg,f
  9551  001C12  D7FD               	goto	u2537
  9552                           
  9553                           	line	12
  9554                           	
  9555  001C14                     l19359:
  9556  001C14  0101               	movlb	1	; () banked
  9557  001C16  0101               	movlb	1	; () banked
  9558  001C18  2FA2               	decfsz	((Delay1KTCYx@unit))&0ffh
  9559                           	
  9560  001C1A  D7F8               	goto	l17073
  9561  001C1C  D000               	goto	l17075
  9562                           	
  9563  001C1E                     l17074:; BSR set to: 1
  9564                           
  9565                           	line	13
  9566                           	
  9567  001C1E                     l17075:; BSR set to: 1
  9568                           
  9569  001C1E  0012               	return
  9570                           	opt stack 0
  9571                           GLOBAL	__end_of_Delay1KTCYx
  9572  001C20                     	__end_of_Delay1KTCYx:
  9573                           	signat	_Delay1KTCYx,4216
  9574                           	global	_OpenADC
  9575                           
  9576 ;; *************** function _OpenADC *****************
  9577 ;; Defined at:
  9578 ;;		line 71 in file "plib/ADC/adcopen.c"
  9579 ;; Parameters:    Size  Location     Type
  9580 ;;  config          1    0[BANK1 ] unsigned char 
  9581 ;;  config2         1    1[BANK1 ] unsigned char 
  9582 ;;  portconfig      1    2[BANK1 ] unsigned char 
  9583 ;; Auto vars:     Size  Location     Type
  9584 ;;		None
  9585 ;; Return value:  Size  Location     Type
  9586 ;;		None               void
  9587 ;; Registers used:
  9588 ;;		wreg, status,2, status,0
  9589 ;; Tracked objects:
  9590 ;;		On entry : 0/0
  9591 ;;		On exit  : 0/0
  9592 ;;		Unchanged: 0/0
  9593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9594 ;;      Params:         0       0       3       0       0
  9595 ;;      Locals:         0       0       0       0       0
  9596 ;;      Temps:          0       0       2       0       0
  9597 ;;      Totals:         0       0       5       0       0
  9598 ;;Total ram usage:        5 bytes
  9599 ;; Hardware stack levels used:    1
  9600 ;; Hardware stack levels required when called:   10
  9601 ;; This function calls:
  9602 ;;		Nothing
  9603 ;; This function is called by:
  9604 ;;		_init_timer1_lthread
  9605 ;; This function uses a non-reentrant model
  9606 ;;
  9607                           psect	text25,class=CODE,space=0,reloc=2
  9608                           global __ptext25
  9609  0014A4                     __ptext25:
  9610                           psect	text25
  9611                           	file	"plib/ADC/adcopen.c"
  9612                           	line	71
  9613                           	global	__size_of_OpenADC
  9614  0000                     	__size_of_OpenADC	equ	__end_of_OpenADC-_OpenADC
  9615                           	
  9616  0014A4                     _OpenADC:; BSR set to: 1
  9617                           
  9618                           	opt	stack 19
  9619                           	line	72
  9620                           	
  9621  0014A4                     l19361:
  9622  0014A4  0E00               	movlw	low(0)
  9623  0014A6  6EC2               	movwf	((c:4034)),c	;volatile
  9624                           	line	73
  9625  0014A8  0E00               	movlw	low(0)
  9626  0014AA  6EC0               	movwf	((c:4032)),c	;volatile
  9627                           	line	75
  9628                           	
  9629  0014AC                     l19363:
  9630  0014AC  0101               	movlb	1	; () banked
  9631  0014AE  0101               	movlb	1	; () banked
  9632  0014B0  90D8               	bcf	status,0
  9633  0014B2  31A3               	rrcf	((OpenADC@config2))&0ffh,w
  9634  0014B4  0B3C               	andlw	low(03Ch)
  9635  0014B6  6EC2               	movwf	((c:4034)),c	;volatile
  9636                           	line	77
  9637                           	
  9638  0014B8                     l19365:; BSR set to: 1
  9639                           
  9640  0014B8  C1A3  F1A5         	movff	(OpenADC@config2),??_OpenADC+0+0
  9641  0014BC  0101               	movlb	1	; () banked
  9642  0014BE  3BA5               	swapf	(??_OpenADC+0+0)&0ffh
  9643  0014C0  0EF0               	movlw	(0ffh shl 4) & 0ffh
  9644  0014C2  17A5               	andwf	(??_OpenADC+0+0)&0ffh
  9645  0014C4  0E30               	movlw	030h
  9646  0014C6  0101               	movlb	1	; () banked
  9647  0014C8  17A5               	andwf	(??_OpenADC+0+0)&0ffh
  9648  0014CA  0101               	movlb	1	; () banked
  9649  0014CC  0101               	movlb	1	; () banked
  9650  0014CE  51A4               	movf	((OpenADC@portconfig))&0ffh,w
  9651  0014D0  0B0F               	andlw	low(0Fh)
  9652  0014D2  0101               	movlb	1	; () banked
  9653  0014D4  11A5               	iorwf	(??_OpenADC+0+0)&0ffh,w
  9654  0014D6  6EC1               	movwf	((c:4033)),c	;volatile
  9655                           	line	80
  9656                           	
  9657  0014D8                     l19367:; BSR set to: 1
  9658                           
  9659  0014D8  C1A2  F1A5         	movff	(OpenADC@config),??_OpenADC+0+0
  9660  0014DC  0101               	movlb	1	; () banked
  9661  0014DE  90D8               	bcf	status,0
  9662  0014E0  37A5               	rlcf	(??_OpenADC+0+0)&0ffh
  9663  0014E2  0101               	movlb	1	; () banked
  9664  0014E4  90D8               	bcf	status,0
  9665  0014E6  37A5               	rlcf	(??_OpenADC+0+0)&0ffh
  9666                           
  9667  0014E8  0E38               	movlw	038h
  9668  0014EA  0101               	movlb	1	; () banked
  9669  0014EC  17A5               	andwf	(??_OpenADC+0+0)&0ffh
  9670  0014EE  C1A2  F1A6         	movff	(OpenADC@config),??_OpenADC+1+0
  9671  0014F2  0101               	movlb	1	; () banked
  9672  0014F4  3BA6               	swapf	(??_OpenADC+1+0)&0ffh
  9673  0014F6  0E0F               	movlw	(0ffh shr 4) & 0ffh
  9674  0014F8  17A6               	andwf	(??_OpenADC+1+0)&0ffh
  9675  0014FA  0E07               	movlw	07h
  9676  0014FC  0101               	movlb	1	; () banked
  9677  0014FE  17A6               	andwf	(??_OpenADC+1+0)&0ffh
  9678  001500  0101               	movlb	1	; () banked
  9679  001502  0101               	movlb	1	; () banked
  9680  001504  51A2               	movf	((OpenADC@config))&0ffh,w
  9681  001506  0B80               	andlw	low(080h)
  9682  001508  0101               	movlb	1	; () banked
  9683  00150A  11A6               	iorwf	(??_OpenADC+1+0)&0ffh,w
  9684  00150C  0101               	movlb	1	; () banked
  9685  00150E  11A5               	iorwf	(??_OpenADC+0+0)&0ffh,w
  9686  001510  6EC0               	movwf	((c:4032)),c	;volatile
  9687                           	line	82
  9688                           	
  9689  001512                     l19369:; BSR set to: 1
  9690                           
  9691  001512  0101               	movlb	1	; () banked
  9692                           	
  9693  001514  0101               	movlb	1	; () banked
  9694  001516  AFA3               	btfss	((OpenADC@config2))&0ffh,(7)&7
  9695  001518  D001               	goto	u2481
  9696  00151A  D001               	goto	u2480
  9697  00151C                     u2481:
  9698  00151C  D003               	goto	l16412
  9699  00151E                     u2480:
  9700                           	line	84
  9701                           	
  9702  00151E                     l19371:; BSR set to: 1
  9703                           
  9704  00151E  9C9E               	bcf	((c:3998)),c,6	;volatile
  9705                           	line	85
  9706  001520  8C9D               	bsf	((c:3997)),c,6	;volatile
  9707                           	line	86
  9708  001522  8CF2               	bsf	((c:4082)),c,6	;volatile
  9709                           	line	87
  9710                           	
  9711  001524                     l16412:; BSR set to: 1
  9712                           
  9713                           	line	88
  9714  001524  80C2               	bsf	((c:4034)),c,0	;volatile
  9715                           	line	89
  9716                           	
  9717  001526                     l16413:; BSR set to: 1
  9718                           
  9719  001526  0012               	return
  9720                           	opt stack 0
  9721                           GLOBAL	__end_of_OpenADC
  9722  001528                     	__end_of_OpenADC:
  9723                           	signat	_OpenADC,12408
  9724                           	global	_SetChanADC
  9725                           
  9726 ;; *************** function _SetChanADC *****************
  9727 ;; Defined at:
  9728 ;;		line 31 in file "plib/ADC/adcsetch.c"
  9729 ;; Parameters:    Size  Location     Type
  9730 ;;  channel         1    0[BANK1 ] unsigned char 
  9731 ;; Auto vars:     Size  Location     Type
  9732 ;;		None
  9733 ;; Return value:  Size  Location     Type
  9734 ;;		None               void
  9735 ;; Registers used:
  9736 ;;		wreg, status,2, status,0
  9737 ;; Tracked objects:
  9738 ;;		On entry : 0/0
  9739 ;;		On exit  : 0/0
  9740 ;;		Unchanged: 0/0
  9741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9742 ;;      Params:         0       0       1       0       0
  9743 ;;      Locals:         0       0       0       0       0
  9744 ;;      Temps:          0       0       1       0       0
  9745 ;;      Totals:         0       0       2       0       0
  9746 ;;Total ram usage:        2 bytes
  9747 ;; Hardware stack levels used:    1
  9748 ;; Hardware stack levels required when called:   10
  9749 ;; This function calls:
  9750 ;;		Nothing
  9751 ;; This function is called by:
  9752 ;;		_init_timer1_lthread
  9753 ;; This function uses a non-reentrant model
  9754 ;;
  9755                           psect	text26,class=CODE,space=0,reloc=2
  9756                           global __ptext26
  9757  001BC2                     __ptext26:
  9758                           psect	text26
  9759                           	file	"plib/ADC/adcsetch.c"
  9760                           	line	31
  9761                           	global	__size_of_SetChanADC
  9762  0000                     	__size_of_SetChanADC	equ	__end_of_SetChanADC-_SetChanADC
  9763                           	
  9764  001BC2                     _SetChanADC:; BSR set to: 1
  9765                           
  9766                           	opt	stack 19
  9767                           	line	34
  9768                           	
  9769  001BC2                     l19373:
  9770  001BC2  CFC2 F1A3          	movff	(c:4034),??_SetChanADC+0+0	;volatile
  9771  001BC6  0EC3               	movlw	0C3h
  9772  001BC8  0101               	movlb	1	; () banked
  9773  001BCA  17A3               	andwf	(??_SetChanADC+0+0)&0ffh
  9774  001BCC  0101               	movlb	1	; () banked
  9775  001BCE  0101               	movlb	1	; () banked
  9776  001BD0  90D8               	bcf	status,0
  9777  001BD2  31A2               	rrcf	((SetChanADC@channel))&0ffh,w
  9778  001BD4  0B3C               	andlw	low(03Ch)
  9779  001BD6  0101               	movlb	1	; () banked
  9780  001BD8  11A3               	iorwf	(??_SetChanADC+0+0)&0ffh,w
  9781  001BDA  6EC2               	movwf	((c:4034)),c	;volatile
  9782                           	line	36
  9783                           	
  9784  001BDC                     l16425:; BSR set to: 1
  9785                           
  9786  001BDC  0012               	return
  9787                           	opt stack 0
  9788                           GLOBAL	__end_of_SetChanADC
  9789  001BDE                     	__end_of_SetChanADC:
  9790                           	signat	_SetChanADC,4216
  9791                           	global	_ConvertADC
  9792                           
  9793 ;; *************** function _ConvertADC *****************
  9794 ;; Defined at:
  9795 ;;		line 23 in file "plib/ADC/adcconv.c"
  9796 ;; Parameters:    Size  Location     Type
  9797 ;;		None
  9798 ;; Auto vars:     Size  Location     Type
  9799 ;;		None
  9800 ;; Return value:  Size  Location     Type
  9801 ;;		None               void
  9802 ;; Registers used:
  9803 ;;		None
  9804 ;; Tracked objects:
  9805 ;;		On entry : 0/0
  9806 ;;		On exit  : 0/0
  9807 ;;		Unchanged: 0/0
  9808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9809 ;;      Params:         0       0       0       0       0
  9810 ;;      Locals:         0       0       0       0       0
  9811 ;;      Temps:          0       0       0       0       0
  9812 ;;      Totals:         0       0       0       0       0
  9813 ;;Total ram usage:        0 bytes
  9814 ;; Hardware stack levels used:    1
  9815 ;; Hardware stack levels required when called:   10
  9816 ;; This function calls:
  9817 ;;		Nothing
  9818 ;; This function is called by:
  9819 ;;		_timer1_lthread
  9820 ;; This function uses a non-reentrant model
  9821 ;;
  9822                           psect	text27,class=CODE,space=0,reloc=2
  9823                           global __ptext27
  9824  001C88                     __ptext27:
  9825                           psect	text27
  9826                           	file	"plib/ADC/adcconv.c"
  9827                           	line	23
  9828                           	global	__size_of_ConvertADC
  9829  0000                     	__size_of_ConvertADC	equ	__end_of_ConvertADC-_ConvertADC
  9830                           	
  9831  001C88                     _ConvertADC:; BSR set to: 1
  9832                           
  9833                           	opt	stack 19
  9834                           	line	24
  9835                           	
  9836  001C88                     l19375:
  9837  001C88  82C2               	bsf	((c:4034)),c,1	;volatile
  9838                           	line	25
  9839                           	
  9840  001C8A                     l16395:
  9841  001C8A  0012               	return
  9842                           	opt stack 0
  9843                           GLOBAL	__end_of_ConvertADC
  9844  001C8C                     	__end_of_ConvertADC:
  9845                           	signat	_ConvertADC,88
  9846                           	global	_InterruptHandlerLow
  9847                           
  9848 ;; *************** function _InterruptHandlerLow *****************
  9849 ;; Defined at:
  9850 ;;		line 122 in file "../src/interrupts.c"
  9851 ;; Parameters:    Size  Location     Type
  9852 ;;		None
  9853 ;; Auto vars:     Size  Location     Type
  9854 ;;		None
  9855 ;; Return value:  Size  Location     Type
  9856 ;;		None               void
  9857 ;; Registers used:
  9858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9859 ;; Tracked objects:
  9860 ;;		On entry : 0/0
  9861 ;;		On exit  : 0/0
  9862 ;;		Unchanged: 0/0
  9863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9864 ;;      Params:         0       0       0       0       0
  9865 ;;      Locals:         0       0       0       0       0
  9866 ;;      Temps:         17       0       0       0       0
  9867 ;;      Totals:        17       0       0       0       0
  9868 ;;Total ram usage:       17 bytes
  9869 ;; Hardware stack levels used:    1
  9870 ;; Hardware stack levels required when called:    9
  9871 ;; This function calls:
  9872 ;;		_timer1_int_handler
  9873 ;;		_adc_int_handler
  9874 ;;		_uart_recv_int_handler
  9875 ;; This function is called by:
  9876 ;;		Interrupt level 1
  9877 ;; This function uses a non-reentrant model
  9878 ;;
  9879                           psect	intcodelo,class=CODE,space=0,reloc=2
  9880                           global __pintcodelo
  9881  000018                     __pintcodelo:
  9882                           psect	intcodelo
  9883                           	file	"../src/interrupts.c"
  9884                           	line	122
  9885                           	global	__size_of_InterruptHandlerLow
  9886  0000                     	__size_of_InterruptHandlerLow	equ	__end_of_InterruptHandlerLow-_InterruptHandlerLow
  9887                           	
  9888  000018                     _InterruptHandlerLow:
  9889                           	opt	stack 17
  9890  000018  CFD8 F021          	movff	status+0,??_InterruptHandlerLow+0
  9891  00001C  CFE8 F022          	movff	wreg+0,??_InterruptHandlerLow+1
  9892  000020  CFE0 F023          	movff	bsr+0,??_InterruptHandlerLow+2
  9893  000024  CFFA F024          	movff	pclat+0,??_InterruptHandlerLow+3
  9894  000028  CFFB F025          	movff	pclat+1,??_InterruptHandlerLow+4
  9895  00002C  CFE9 F026          	movff	fsr0l+0,??_InterruptHandlerLow+5
  9896  000030  CFEA F027          	movff	fsr0h+0,??_InterruptHandlerLow+6
  9897  000034  CFE1 F028          	movff	fsr1l+0,??_InterruptHandlerLow+7
  9898  000038  CFE2 F029          	movff	fsr1h+0,??_InterruptHandlerLow+8
  9899  00003C  CFD9 F02A          	movff	fsr2l+0,??_InterruptHandlerLow+9
  9900  000040  CFDA F02B          	movff	fsr2h+0,??_InterruptHandlerLow+10
  9901  000044  CFF3 F02C          	movff	prodl+0,??_InterruptHandlerLow+11
  9902  000048  CFF4 F02D          	movff	prodh+0,??_InterruptHandlerLow+12
  9903  00004C  CFF6 F02E          	movff	tblptrl+0,??_InterruptHandlerLow+13
  9904  000050  CFF7 F02F          	movff	tblptrh+0,??_InterruptHandlerLow+14
  9905  000054  CFF8 F030          	movff	tblptru+0,??_InterruptHandlerLow+15
  9906  000058  CFF5 F031          	movff	tablat+0,??_InterruptHandlerLow+16
  9907                           	line	124
  9908                           	
  9909  00005C                     i1l18811:
  9910                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  9911                           	
  9912  00005C  A09E               	btfss	((c:3998)),c,0	;volatile
  9913  00005E  D001               	goto	i1u184_21
  9914  000060  D001               	goto	i1u184_20
  9915  000062                     i1u184_21:
  9916  000062  D004               	goto	i1l18817
  9917  000064                     i1u184_20:
  9918                           	line	125
  9919                           	
  9920  000064                     i1l18813:
  9921                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  9922  000064  909E               	bcf	((c:3998)),c,0	;volatile
  9923                           	line	126
  9924                           	
  9925  000066                     i1l18815:
  9926                           ;interrupts.c: 126: timer1_int_handler();
  9927  000066  EC93  F00C         	call	_timer1_int_handler	;wreg free
  9928  00006A  D000               	goto	i1l18817
  9929                           	line	127
  9930                           	
  9931  00006C                     i1l1825:
  9932                           	line	130
  9933                           	
  9934  00006C                     i1l18817:
  9935                           ;interrupts.c: 127: }
  9936                           ;interrupts.c: 130: if(PIR1bits.ADIF){
  9937                           	
  9938  00006C  AC9E               	btfss	((c:3998)),c,6	;volatile
  9939  00006E  D001               	goto	i1u185_21
  9940  000070  D001               	goto	i1u185_20
  9941  000072                     i1u185_21:
  9942  000072  D004               	goto	i1l18823
  9943  000074                     i1u185_20:
  9944                           	line	131
  9945                           	
  9946  000074                     i1l18819:
  9947                           ;interrupts.c: 131: PIR1bits.ADIF = 0;
  9948  000074  9C9E               	bcf	((c:3998)),c,6	;volatile
  9949                           	line	132
  9950                           	
  9951  000076                     i1l18821:
  9952                           ;interrupts.c: 132: adc_int_handler();
  9953  000076  ECEA  F00C         	call	_adc_int_handler	;wreg free
  9954  00007A  D000               	goto	i1l18823
  9955                           	line	133
  9956                           	
  9957  00007C                     i1l1826:
  9958                           	line	136
  9959                           	
  9960  00007C                     i1l18823:
  9961                           ;interrupts.c: 133: }
  9962                           ;interrupts.c: 136: if (PIR1bits.RCIF) {
  9963                           	
  9964  00007C  AA9E               	btfss	((c:3998)),c,5	;volatile
  9965  00007E  D001               	goto	i1u186_21
  9966  000080  D001               	goto	i1u186_20
  9967  000082                     i1u186_21:
  9968  000082  D004               	goto	i1l1828
  9969  000084                     i1u186_20:
  9970                           	line	137
  9971                           	
  9972  000084                     i1l18825:
  9973                           ;interrupts.c: 137: PIR1bits.RCIF = 0;
  9974  000084  9A9E               	bcf	((c:3998)),c,5	;volatile
  9975                           	line	138
  9976                           	
  9977  000086                     i1l18827:
  9978                           ;interrupts.c: 138: uart_recv_int_handler();
  9979  000086  EC69  F008         	call	_uart_recv_int_handler	;wreg free
  9980  00008A  D000               	goto	i1l1828
  9981                           	line	139
  9982                           	
  9983  00008C                     i1l1827:
  9984                           	line	140
  9985                           	
  9986  00008C                     i1l1828:
  9987  00008C  C031  FFF5         	movff	??_InterruptHandlerLow+16,tablat+0
  9988  000090  C030  FFF8         	movff	??_InterruptHandlerLow+15,tblptru+0
  9989  000094  C02F  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh+0
  9990  000098  C02E  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl+0
  9991  00009C  C02D  FFF4         	movff	??_InterruptHandlerLow+12,prodh+0
  9992  0000A0  C02C  FFF3         	movff	??_InterruptHandlerLow+11,prodl+0
  9993  0000A4  C02B  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h+0
  9994  0000A8  C02A  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l+0
  9995  0000AC  C029  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h+0
  9996  0000B0  C028  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l+0
  9997  0000B4  C027  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h+0
  9998  0000B8  C026  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l+0
  9999  0000BC  C025  FFFB         	movff	??_InterruptHandlerLow+4,pclat+1
 10000  0000C0  C024  FFFA         	movff	??_InterruptHandlerLow+3,pclat+0
 10001  0000C4  C023  FFE0         	movff	??_InterruptHandlerLow+2,bsr+0
 10002  0000C8  C022  FFE8         	movff	??_InterruptHandlerLow+1,wreg+0
 10003  0000CC  C021  FFD8         	movff	??_InterruptHandlerLow+0,status+0
 10004  0000D0  0010               	retfie
 10005                           	opt stack 0
 10006                           GLOBAL	__end_of_InterruptHandlerLow
 10007  0000D2                     	__end_of_InterruptHandlerLow:
 10008                           	signat	_InterruptHandlerLow,1112
 10009                           	global	_timer1_int_handler
 10010                           
 10011 ;; *************** function _timer1_int_handler *****************
 10012 ;; Defined at:
 10013 ;;		line 35 in file "../src/user_interrupts.c"
 10014 ;; Parameters:    Size  Location     Type
 10015 ;;		None
 10016 ;; Auto vars:     Size  Location     Type
 10017 ;;  result          2   30[COMRAM] unsigned int 
 10018 ;;  temp            2   28[COMRAM] unsigned int 
 10019 ;; Return value:  Size  Location     Type
 10020 ;;		None               void
 10021 ;; Registers used:
 10022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10023 ;; Tracked objects:
 10024 ;;		On entry : 0/0
 10025 ;;		On exit  : 0/0
 10026 ;;		Unchanged: 0/0
 10027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10028 ;;      Params:         0       0       0       0       0
 10029 ;;      Locals:         4       0       0       0       0
 10030 ;;      Temps:          2       0       0       0       0
 10031 ;;      Totals:         6       0       0       0       0
 10032 ;;Total ram usage:        6 bytes
 10033 ;; Hardware stack levels used:    1
 10034 ;; Hardware stack levels required when called:    8
 10035 ;; This function calls:
 10036 ;;		_ReadTimer1
 10037 ;;		_ToMainLow_sendmsg
 10038 ;;		_WriteTimer1
 10039 ;; This function is called by:
 10040 ;;		_InterruptHandlerLow
 10041 ;; This function uses a non-reentrant model
 10042 ;;
 10043                           psect	text29,class=CODE,space=0,reloc=2
 10044                           global __ptext29
 10045  001926                     __ptext29:
 10046                           psect	text29
 10047                           	file	"../src/user_interrupts.c"
 10048                           	line	35
 10049                           	global	__size_of_timer1_int_handler
 10050  0000                     	__size_of_timer1_int_handler	equ	__end_of_timer1_int_handler-_timer1_int_handler
 10051                           	
 10052  001926                     _timer1_int_handler:
 10053                           	opt	stack 17
 10054                           	line	40
 10055                           	
 10056  001926                     i1l18779:
 10057                           ;user_interrupts.c: 36: unsigned int result;
 10058                           ;user_interrupts.c: 40: result = ReadTimer1();
 10059  001926  EC10  F00E         	call	_ReadTimer1	;wreg free
 10060  00192A  C001  F01F         	movff	0+?_ReadTimer1,(c:timer1_int_handler@result)
 10061  00192E  C002  F020         	movff	1+?_ReadTimer1,(c:timer1_int_handler@result+1)
 10062                           	line	41
 10063                           	
 10064  001932                     i1l18781:
 10065                           ;user_interrupts.c: 41: ToMainLow_sendmsg(sizeof(result), 11, (void *) &result);
 10066  001932  6E1B               	movwf	(??_timer1_int_handler+0+0)&0ffh,c
 10067  001934  0E02               	movlw	low(02h)
 10068  001936  6E17               	movwf	((c:?_ToMainLow_sendmsg)),c
 10069  001938  501B               	movf	(??_timer1_int_handler+0+0)&0ffh,c,w
 10070  00193A  6E1C               	movwf	(??_timer1_int_handler+1+0)&0ffh,c
 10071  00193C  0E0B               	movlw	low(0Bh)
 10072  00193E  6E18               	movwf	(0+((c:?_ToMainLow_sendmsg)+01h)),c
 10073  001940  501C               	movf	(??_timer1_int_handler+1+0)&0ffh,c,w
 10074  001942  0E00               	movlw	high((c:timer1_int_handler@result))
 10075  001944  6E1A               	movwf	(1+((c:?_ToMainLow_sendmsg)+02h)),c
 10076  001946  0E1F               	movlw	low((c:timer1_int_handler@result))
 10077  001948  6E19               	movwf	(0+((c:?_ToMainLow_sendmsg)+02h)),c
 10078  00194A  ECBD  F00D         	call	_ToMainLow_sendmsg	;wreg free
 10079                           	line	44
 10080                           	
 10081  00194E                     i1l18783:
 10082                           ;user_interrupts.c: 44: unsigned int temp = 0x1;
 10083  00194E  0E00               	movlw	high(01h)
 10084  001950  6E1E               	movwf	((c:timer1_int_handler@temp+1)),c
 10085  001952  0E01               	movlw	low(01h)
 10086  001954  6E1D               	movwf	((c:timer1_int_handler@temp)),c
 10087                           	line	45
 10088                           	
 10089  001956                     i1l18785:
 10090                           ;user_interrupts.c: 45: WriteTimer1(temp);
 10091  001956  C01D  F001         	movff	(c:timer1_int_handler@temp),(c:?_WriteTimer1)
 10092  00195A  C01E  F002         	movff	(c:timer1_int_handler@temp+1),(c:?_WriteTimer1+1)
 10093  00195E  EC19  F00E         	call	_WriteTimer1	;wreg free
 10094                           	line	46
 10095                           	
 10096  001962                     i1l16387:
 10097  001962  0012               	return
 10098                           	opt stack 0
 10099                           GLOBAL	__end_of_timer1_int_handler
 10100  001964                     	__end_of_timer1_int_handler:
 10101                           	signat	_timer1_int_handler,88
 10102                           	global	_adc_int_handler
 10103                           
 10104 ;; *************** function _adc_int_handler *****************
 10105 ;; Defined at:
 10106 ;;		line 48 in file "../src/user_interrupts.c"
 10107 ;; Parameters:    Size  Location     Type
 10108 ;;		None
 10109 ;; Auto vars:     Size  Location     Type
 10110 ;;  value           2   28[COMRAM] unsigned int 
 10111 ;; Return value:  Size  Location     Type
 10112 ;;		None               void
 10113 ;; Registers used:
 10114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10115 ;; Tracked objects:
 10116 ;;		On entry : 0/0
 10117 ;;		On exit  : 0/0
 10118 ;;		Unchanged: 0/0
 10119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10120 ;;      Params:         0       0       0       0       0
 10121 ;;      Locals:         2       0       0       0       0
 10122 ;;      Temps:          2       0       0       0       0
 10123 ;;      Totals:         4       0       0       0       0
 10124 ;;Total ram usage:        4 bytes
 10125 ;; Hardware stack levels used:    1
 10126 ;; Hardware stack levels required when called:    8
 10127 ;; This function calls:
 10128 ;;		_ReadADC
 10129 ;;		_ToMainLow_sendmsg
 10130 ;; This function is called by:
 10131 ;;		_InterruptHandlerLow
 10132 ;; This function uses a non-reentrant model
 10133 ;;
 10134                           psect	text30,class=CODE,space=0,reloc=2
 10135                           global __ptext30
 10136  0019D4                     __ptext30:
 10137                           psect	text30
 10138                           	file	"../src/user_interrupts.c"
 10139                           	line	48
 10140                           	global	__size_of_adc_int_handler
 10141  0000                     	__size_of_adc_int_handler	equ	__end_of_adc_int_handler-_adc_int_handler
 10142                           	
 10143  0019D4                     _adc_int_handler:
 10144                           	opt	stack 17
 10145                           	line	49
 10146                           	
 10147  0019D4                     i1l18787:
 10148                           ;user_interrupts.c: 49: unsigned int value = ReadADC();
 10149  0019D4  EC32  F00E         	call	_ReadADC	;wreg free
 10150  0019D8  C001  F01D         	movff	0+?_ReadADC,(c:adc_int_handler@value)
 10151  0019DC  C002  F01E         	movff	1+?_ReadADC,(c:adc_int_handler@value+1)
 10152                           	line	50
 10153                           	
 10154  0019E0                     i1l18789:
 10155                           ;user_interrupts.c: 50: value = 0x105;
 10156  0019E0  0E01               	movlw	high(0105h)
 10157  0019E2  6E1E               	movwf	((c:adc_int_handler@value+1)),c
 10158  0019E4  0E05               	movlw	low(0105h)
 10159  0019E6  6E1D               	movwf	((c:adc_int_handler@value)),c
 10160                           	line	51
 10161                           	
 10162  0019E8                     i1l18791:
 10163                           ;user_interrupts.c: 51: ToMainLow_sendmsg(sizeof(value),40,(void *) &value);
 10164  0019E8  6E1B               	movwf	(??_adc_int_handler+0+0)&0ffh,c
 10165  0019EA  0E02               	movlw	low(02h)
 10166  0019EC  6E17               	movwf	((c:?_ToMainLow_sendmsg)),c
 10167  0019EE  501B               	movf	(??_adc_int_handler+0+0)&0ffh,c,w
 10168  0019F0  6E1C               	movwf	(??_adc_int_handler+1+0)&0ffh,c
 10169  0019F2  0E28               	movlw	low(028h)
 10170  0019F4  6E18               	movwf	(0+((c:?_ToMainLow_sendmsg)+01h)),c
 10171  0019F6  501C               	movf	(??_adc_int_handler+1+0)&0ffh,c,w
 10172  0019F8  0E00               	movlw	high((c:adc_int_handler@value))
 10173  0019FA  6E1A               	movwf	(1+((c:?_ToMainLow_sendmsg)+02h)),c
 10174  0019FC  0E1D               	movlw	low((c:adc_int_handler@value))
 10175  0019FE  6E19               	movwf	(0+((c:?_ToMainLow_sendmsg)+02h)),c
 10176  001A00  ECBD  F00D         	call	_ToMainLow_sendmsg	;wreg free
 10177                           	line	52
 10178                           	
 10179  001A04                     i1l16390:
 10180  001A04  0012               	return
 10181                           	opt stack 0
 10182                           GLOBAL	__end_of_adc_int_handler
 10183  001A06                     	__end_of_adc_int_handler:
 10184                           	signat	_adc_int_handler,88
 10185                           	global	_uart_recv_int_handler
 10186                           
 10187 ;; *************** function _uart_recv_int_handler *****************
 10188 ;; Defined at:
 10189 ;;		line 11 in file "../src/my_uart.c"
 10190 ;; Parameters:    Size  Location     Type
 10191 ;;		None
 10192 ;; Auto vars:     Size  Location     Type
 10193 ;;		None
 10194 ;; Return value:  Size  Location     Type
 10195 ;;		None               void
 10196 ;; Registers used:
 10197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10198 ;; Tracked objects:
 10199 ;;		On entry : 0/0
 10200 ;;		On exit  : 0/0
 10201 ;;		Unchanged: 0/0
 10202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10203 ;;      Params:         0       0       0       0       0
 10204 ;;      Locals:         0       0       0       0       0
 10205 ;;      Temps:          2       0       0       0       0
 10206 ;;      Totals:         2       0       0       0       0
 10207 ;;Total ram usage:        2 bytes
 10208 ;; Hardware stack levels used:    1
 10209 ;; Hardware stack levels required when called:    8
 10210 ;; This function calls:
 10211 ;;		_ReadUSART
 10212 ;;		_ToMainLow_sendmsg
 10213 ;; This function is called by:
 10214 ;;		_InterruptHandlerLow
 10215 ;; This function uses a non-reentrant model
 10216 ;;
 10217                           psect	text31,class=CODE,space=0,reloc=2
 10218                           global __ptext31
 10219  0010D2                     __ptext31:
 10220                           psect	text31
 10221                           	file	"../src/my_uart.c"
 10222                           	line	11
 10223                           	global	__size_of_uart_recv_int_handler
 10224  0000                     	__size_of_uart_recv_int_handler	equ	__end_of_uart_recv_int_handler-_uart_recv_int_handl
                                 er
 10225                           	
 10226  0010D2                     _uart_recv_int_handler:
 10227                           	opt	stack 17
 10228                           	line	12
 10229                           	
 10230  0010D2                     i1l18793:
 10231                           ;my_uart.c: 12: if ((PIR1bits.RCIF)) {
 10232                           	
 10233  0010D2  AA9E               	btfss	((c:3998)),c,5	;volatile
 10234  0010D4  D001               	goto	i1u181_21
 10235  0010D6  D001               	goto	i1u181_20
 10236  0010D8                     i1u181_21:
 10237  0010D8  D041               	goto	i1l18805
 10238  0010DA                     i1u181_20:
 10239                           	line	13
 10240                           	
 10241  0010DA                     i1l18795:
 10242                           ;my_uart.c: 13: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
 10243  0010DA  EE20 F004          	lfsr	2,04h
 10244  0010DE  504C               	movf	((c:_uc_ptr)),c,w
 10245  0010E0  26D9               	addwf	fsr2l
 10246  0010E2  504D               	movf	((c:_uc_ptr+1)),c,w
 10247  0010E4  22DA               	addwfc	fsr2h
 10248  0010E6  50DF               	movf	indf2,w
 10249  0010E8  6E1B               	movwf	(??_uart_recv_int_handler+0+0)&0ffh,c
 10250  0010EA  501B               	movf	((??_uart_recv_int_handler+0+0)),c,w
 10251  0010EC  0D01               	mullw	01h
 10252  0010EE  50F3               	movf	(prodl),c,w
 10253  0010F0  244C               	addwf	((c:_uc_ptr)),c,w
 10254  0010F2  6ED9               	movwf	c:fsr2l
 10255  0010F4  50F4               	movf	(prodh),c,w
 10256  0010F6  204D               	addwfc	((c:_uc_ptr+1)),c,w
 10257  0010F8  6EDA               	movwf	1+c:fsr2l
 10258  0010FA  ECCE  F00C         	call	_ReadUSART	;wreg free
 10259  0010FE  6EDF               	movwf	indf2
 10260                           
 10261                           	line	14
 10262                           	
 10263  001100                     i1l18797:
 10264                           ;my_uart.c: 14: uc_ptr->buflen++;
 10265  001100  EE20 F004          	lfsr	2,04h
 10266  001104  504C               	movf	((c:_uc_ptr)),c,w
 10267  001106  26D9               	addwf	fsr2l
 10268  001108  504D               	movf	((c:_uc_ptr+1)),c,w
 10269  00110A  22DA               	addwfc	fsr2h
 10270  00110C  2ADF               	incf	indf2
 10271                           
 10272                           	line	16
 10273                           	
 10274  00110E                     i1l18799:
 10275                           ;my_uart.c: 16: if (uc_ptr->buflen == 4) {
 10276  00110E  EE20 F004          	lfsr	2,04h
 10277  001112  504C               	movf	((c:_uc_ptr)),c,w
 10278  001114  26D9               	addwf	fsr2l
 10279  001116  504D               	movf	((c:_uc_ptr+1)),c,w
 10280  001118  22DA               	addwfc	fsr2h
 10281  00111A  0E04               	movlw	(04h)&0ffh
 10282  00111C  62DF               	cpfseq	indf2
 10283  00111E  D001               	goto	i1u182_21
 10284  001120  D001               	goto	i1u182_20
 10285  001122                     i1u182_21:
 10286  001122  D01C               	goto	i1l18805
 10287  001124                     i1u182_20:
 10288                           	line	17
 10289                           	
 10290  001124                     i1l18801:
 10291                           ;my_uart.c: 17: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
 10292  001124  EE20 F004          	lfsr	2,04h
 10293  001128  504C               	movf	((c:_uc_ptr)),c,w
 10294  00112A  26D9               	addwf	fsr2l
 10295  00112C  504D               	movf	((c:_uc_ptr+1)),c,w
 10296  00112E  22DA               	addwfc	fsr2h
 10297  001130  50DF               	movf	indf2,w
 10298  001132  6E17               	movwf	((c:?_ToMainLow_sendmsg)),c
 10299  001134  6E1B               	movwf	(??_uart_recv_int_handler+0+0)&0ffh,c
 10300  001136  0E1F               	movlw	low(01Fh)
 10301  001138  6E18               	movwf	(0+((c:?_ToMainLow_sendmsg)+01h)),c
 10302  00113A  501B               	movf	(??_uart_recv_int_handler+0+0)&0ffh,c,w
 10303  00113C  C04C  F019         	movff	(c:_uc_ptr),0+((c:?_ToMainLow_sendmsg)+02h)
 10304  001140  C04D  F01A         	movff	(c:_uc_ptr+1),1+((c:?_ToMainLow_sendmsg)+02h)
 10305  001144  ECBD  F00D         	call	_ToMainLow_sendmsg	;wreg free
 10306                           	line	18
 10307                           	
 10308  001148                     i1l18803:
 10309                           ;my_uart.c: 18: uc_ptr->buflen = 0;
 10310  001148  EE20 F004          	lfsr	2,04h
 10311  00114C  504C               	movf	((c:_uc_ptr)),c,w
 10312  00114E  26D9               	addwf	fsr2l
 10313  001150  504D               	movf	((c:_uc_ptr+1)),c,w
 10314  001152  22DA               	addwfc	fsr2h
 10315  001154  0E00               	movlw	low(0)
 10316  001156  6EDF               	movwf	indf2
 10317  001158  D001               	goto	i1l18805
 10318                           	line	19
 10319                           	
 10320  00115A                     i1l9204:
 10321  00115A  D000               	goto	i1l18805
 10322                           	line	20
 10323                           	
 10324  00115C                     i1l9203:
 10325                           	line	21
 10326                           	
 10327  00115C                     i1l18805:
 10328                           ;my_uart.c: 19: }
 10329                           ;my_uart.c: 20: }
 10330                           ;my_uart.c: 21: if (USART_Status.OVERRUN_ERROR == 1) {
 10331                           	
 10332  00115C  A649               	btfss	((c:_USART_Status)),c,3
 10333  00115E  D001               	goto	i1u183_21
 10334  001160  D001               	goto	i1u183_20
 10335  001162                     i1u183_21:
 10336  001162  D011               	goto	i1l9206
 10337  001164                     i1u183_20:
 10338                           	line	24
 10339                           	
 10340  001164                     i1l18807:
 10341                           ;my_uart.c: 24: RCSTAbits.CREN = 0;
 10342  001164  98AB               	bcf	((c:4011)),c,4	;volatile
 10343                           	line	25
 10344                           ;my_uart.c: 25: RCSTAbits.CREN = 1;
 10345  001166  88AB               	bsf	((c:4011)),c,4	;volatile
 10346                           	line	26
 10347                           	
 10348  001168                     i1l18809:
 10349                           ;my_uart.c: 26: ToMainLow_sendmsg(0, 30, (void *) 0);
 10350  001168  6E1B               	movwf	(??_uart_recv_int_handler+0+0)&0ffh,c
 10351  00116A  0E00               	movlw	low(0)
 10352  00116C  6E17               	movwf	((c:?_ToMainLow_sendmsg)),c
 10353  00116E  501B               	movf	(??_uart_recv_int_handler+0+0)&0ffh,c,w
 10354  001170  6E1C               	movwf	(??_uart_recv_int_handler+1+0)&0ffh,c
 10355  001172  0E1E               	movlw	low(01Eh)
 10356  001174  6E18               	movwf	(0+((c:?_ToMainLow_sendmsg)+01h)),c
 10357  001176  501C               	movf	(??_uart_recv_int_handler+1+0)&0ffh,c,w
 10358  001178  0E00               	movlw	high(0)
 10359  00117A  6E1A               	movwf	(1+((c:?_ToMainLow_sendmsg)+02h)),c
 10360  00117C  0E00               	movlw	low(0)
 10361  00117E  6E19               	movwf	(0+((c:?_ToMainLow_sendmsg)+02h)),c
 10362  001180  ECBD  F00D         	call	_ToMainLow_sendmsg	;wreg free
 10363  001184  D000               	goto	i1l9206
 10364                           	line	27
 10365                           	
 10366  001186                     i1l9205:
 10367                           	line	28
 10368                           	
 10369  001186                     i1l9206:
 10370  001186  0012               	return
 10371                           	opt stack 0
 10372                           GLOBAL	__end_of_uart_recv_int_handler
 10373  001188                     	__end_of_uart_recv_int_handler:
 10374                           	signat	_uart_recv_int_handler,88
 10375                           	global	_ToMainLow_sendmsg
 10376                           
 10377 ;; *************** function _ToMainLow_sendmsg *****************
 10378 ;; Defined at:
 10379 ;;		line 103 in file "../src/messages.c"
 10380 ;; Parameters:    Size  Location     Type
 10381 ;;  length          1   22[COMRAM] unsigned char 
 10382 ;;  msgtype         1   23[COMRAM] unsigned char 
 10383 ;;  data            2   24[COMRAM] PTR void 
 10384 ;;		 -> adc_int_handler@value(2), timer1_int_handler@result(2), NULL(0), main@uc(5), 
 10385 ;; Auto vars:     Size  Location     Type
 10386 ;;		None
 10387 ;; Return value:  Size  Location     Type
 10388 ;;                  1    wreg      char 
 10389 ;; Registers used:
 10390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10391 ;; Tracked objects:
 10392 ;;		On entry : 0/0
 10393 ;;		On exit  : 0/0
 10394 ;;		Unchanged: 0/0
 10395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10396 ;;      Params:         4       0       0       0       0
 10397 ;;      Locals:         0       0       0       0       0
 10398 ;;      Temps:          0       0       0       0       0
 10399 ;;      Totals:         4       0       0       0       0
 10400 ;;Total ram usage:        4 bytes
 10401 ;; Hardware stack levels used:    1
 10402 ;; Hardware stack levels required when called:    7
 10403 ;; This function calls:
 10404 ;;		i1_send_msg
 10405 ;; This function is called by:
 10406 ;;		_uart_recv_int_handler
 10407 ;;		_timer1_int_handler
 10408 ;;		_adc_int_handler
 10409 ;; This function uses a non-reentrant model
 10410 ;;
 10411                           psect	text32,class=CODE,space=0,reloc=2
 10412                           global __ptext32
 10413  001B7A                     __ptext32:
 10414                           psect	text32
 10415                           	file	"../src/messages.c"
 10416                           	line	103
 10417                           	global	__size_of_ToMainLow_sendmsg
 10418  0000                     	__size_of_ToMainLow_sendmsg	equ	__end_of_ToMainLow_sendmsg-_ToMainLow_sendmsg
 10419                           	
 10420  001B7A                     _ToMainLow_sendmsg:
 10421                           	opt	stack 17
 10422                           	line	109
 10423                           	
 10424  001B7A                     i1l18775:
 10425                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
 10426                           ;	Return value of _ToMainLow_sendmsg is never used
 10427  001B7A  0100               	movlb	0	; () banked
 10428  001B7C  0E00               	movlw	high(_ToMainLow_MQ)
 10429  001B7E  6E0C               	movwf	((c:?i1_send_msg+1)),c
 10430  001B80  0100               	movlb	0	; () banked
 10431  001B82  0E82               	movlw	low(_ToMainLow_MQ)
 10432  001B84  6E0B               	movwf	((c:?i1_send_msg)),c
 10433  001B86  C017  F00D         	movff	(c:ToMainLow_sendmsg@length),0+((c:?i1_send_msg)+02h)
 10434  001B8A  C018  F00E         	movff	(c:ToMainLow_sendmsg@msgtype),0+((c:?i1_send_msg)+03h)
 10435  001B8E  C019  F00F         	movff	(c:ToMainLow_sendmsg@data),0+((c:?i1_send_msg)+04h)
 10436  001B92  C01A  F010         	movff	(c:ToMainLow_sendmsg@data+1),1+((c:?i1_send_msg)+04h)
 10437  001B96  EC1E  F009         	call	i1_send_msg	;wreg free
 10438  001B9A  D000               	goto	i1l5485
 10439                           	
 10440  001B9C                     i1l18777:
 10441                           	line	110
 10442                           	
 10443  001B9C                     i1l5485:
 10444  001B9C  0012               	return
 10445                           	opt stack 0
 10446                           GLOBAL	__end_of_ToMainLow_sendmsg
 10447  001B9E                     	__end_of_ToMainLow_sendmsg:
 10448                           	signat	_ToMainLow_sendmsg,12409
 10449                           	global	_ReadUSART
 10450                           
 10451 ;; *************** function _ReadUSART *****************
 10452 ;; Defined at:
 10453 ;;		line 16 in file "plib/USART/uread.c"
 10454 ;; Parameters:    Size  Location     Type
 10455 ;;		None
 10456 ;; Auto vars:     Size  Location     Type
 10457 ;;  data            1    0[COMRAM] unsigned char 
 10458 ;; Return value:  Size  Location     Type
 10459 ;;                  1    wreg      unsigned char 
 10460 ;; Registers used:
 10461 ;;		wreg, status,2, status,0
 10462 ;; Tracked objects:
 10463 ;;		On entry : 0/0
 10464 ;;		On exit  : 0/0
 10465 ;;		Unchanged: 0/0
 10466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10467 ;;      Params:         0       0       0       0       0
 10468 ;;      Locals:         1       0       0       0       0
 10469 ;;      Temps:          0       0       0       0       0
 10470 ;;      Totals:         1       0       0       0       0
 10471 ;;Total ram usage:        1 bytes
 10472 ;; Hardware stack levels used:    1
 10473 ;; Hardware stack levels required when called:    5
 10474 ;; This function calls:
 10475 ;;		Nothing
 10476 ;; This function is called by:
 10477 ;;		_uart_recv_int_handler
 10478 ;; This function uses a non-reentrant model
 10479 ;;
 10480                           psect	text33,class=CODE,space=0,reloc=2
 10481                           global __ptext33
 10482  00199C                     __ptext33:
 10483                           psect	text33
 10484                           	file	"plib/USART/uread.c"
 10485                           	line	16
 10486                           	global	__size_of_ReadUSART
 10487  0000                     	__size_of_ReadUSART	equ	__end_of_ReadUSART-_ReadUSART
 10488                           	
 10489  00199C                     _ReadUSART:
 10490                           	opt	stack 19
 10491                           	line	19
 10492                           	
 10493  00199C                     i1l18613:
 10494  00199C  0EF2               	movlw	(0F2h)&0ffh
 10495  00199E  1649               	andwf	((c:_USART_Status)),c
 10496                           	line	21
 10497                           	
 10498  0019A0                     i1l18615:
 10499                           	
 10500  0019A0  ACAB               	btfss	((c:4011)),c,6	;volatile
 10501  0019A2  D001               	goto	i1u168_21
 10502  0019A4  D001               	goto	i1u168_20
 10503  0019A6                     i1u168_21:
 10504  0019A6  D007               	goto	i1l16511
 10505  0019A8                     i1u168_20:
 10506                           	line	23
 10507                           	
 10508  0019A8                     i1l18617:
 10509  0019A8  9049               	bcf	((c:_USART_Status)),c,0
 10510                           	line	24
 10511                           	
 10512  0019AA  A0AB               	btfss	((c:4011)),c,0	;volatile
 10513  0019AC  D001               	goto	i1u169_21
 10514  0019AE  D001               	goto	i1u169_20
 10515  0019B0                     i1u169_21:
 10516  0019B0  D002               	goto	i1l16511
 10517  0019B2                     i1u169_20:
 10518                           	line	25
 10519                           	
 10520  0019B2                     i1l18619:
 10521  0019B2  8049               	bsf	((c:_USART_Status)),c,0
 10522  0019B4  D000               	goto	i1l16511
 10523                           	
 10524  0019B6                     i1l16512:
 10525                           	line	26
 10526                           	
 10527  0019B6                     i1l16511:
 10528                           	line	28
 10529                           	
 10530  0019B6  A4AB               	btfss	((c:4011)),c,2	;volatile
 10531  0019B8  D001               	goto	i1u170_21
 10532  0019BA  D001               	goto	i1u170_20
 10533  0019BC                     i1u170_21:
 10534  0019BC  D001               	goto	i1l16513
 10535  0019BE                     i1u170_20:
 10536                           	line	29
 10537                           	
 10538  0019BE                     i1l18621:
 10539  0019BE  8449               	bsf	((c:_USART_Status)),c,2
 10540                           	
 10541  0019C0                     i1l16513:
 10542                           	line	31
 10543                           	
 10544  0019C0  A2AB               	btfss	((c:4011)),c,1	;volatile
 10545  0019C2  D001               	goto	i1u171_21
 10546  0019C4  D001               	goto	i1u171_20
 10547  0019C6                     i1u171_21:
 10548  0019C6  D001               	goto	i1l16514
 10549  0019C8                     i1u171_20:
 10550                           	line	32
 10551                           	
 10552  0019C8                     i1l18623:
 10553  0019C8  8649               	bsf	((c:_USART_Status)),c,3
 10554                           	
 10555  0019CA                     i1l16514:
 10556                           	line	34
 10557  0019CA  CFAE F001          	movff	(c:4014),(c:ReadUSART@data)	;volatile
 10558                           	line	36
 10559                           	
 10560  0019CE                     i1l18625:
 10561  0019CE  5001               	movf	((c:ReadUSART@data)),c,w
 10562  0019D0  D000               	goto	i1l16515
 10563                           	
 10564  0019D2                     i1l18627:
 10565                           	line	37
 10566                           	
 10567  0019D2                     i1l16515:
 10568  0019D2  0012               	return
 10569                           	opt stack 0
 10570                           GLOBAL	__end_of_ReadUSART
 10571  0019D4                     	__end_of_ReadUSART:
 10572                           	signat	_ReadUSART,89
 10573                           	global	_ReadTimer1
 10574                           
 10575 ;; *************** function _ReadTimer1 *****************
 10576 ;; Defined at:
 10577 ;;		line 16 in file "plib/Timers/t1read.c"
 10578 ;; Parameters:    Size  Location     Type
 10579 ;;		None
 10580 ;; Auto vars:     Size  Location     Type
 10581 ;;  timer           2    2[COMRAM] struct Timers
 10582 ;; Return value:  Size  Location     Type
 10583 ;;                  2    0[COMRAM] unsigned int 
 10584 ;; Registers used:
 10585 ;;		None
 10586 ;; Tracked objects:
 10587 ;;		On entry : 0/0
 10588 ;;		On exit  : 0/0
 10589 ;;		Unchanged: 0/0
 10590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10591 ;;      Params:         2       0       0       0       0
 10592 ;;      Locals:         2       0       0       0       0
 10593 ;;      Temps:          0       0       0       0       0
 10594 ;;      Totals:         4       0       0       0       0
 10595 ;;Total ram usage:        4 bytes
 10596 ;; Hardware stack levels used:    1
 10597 ;; Hardware stack levels required when called:    5
 10598 ;; This function calls:
 10599 ;;		Nothing
 10600 ;; This function is called by:
 10601 ;;		_timer1_int_handler
 10602 ;; This function uses a non-reentrant model
 10603 ;;
 10604                           psect	text34,class=CODE,space=0,reloc=2
 10605                           global __ptext34
 10606  001C20                     __ptext34:
 10607                           psect	text34
 10608                           	file	"plib/Timers/t1read.c"
 10609                           	line	16
 10610                           	global	__size_of_ReadTimer1
 10611  0000                     	__size_of_ReadTimer1	equ	__end_of_ReadTimer1-_ReadTimer1
 10612                           	
 10613  001C20                     _ReadTimer1:
 10614                           	opt	stack 19
 10615                           	line	19
 10616                           	
 10617  001C20                     i1l17731:
 10618  001C20  CFCE F003          	movff	(c:4046),(c:ReadTimer1@timer)	;volatile
 10619                           	line	20
 10620  001C24  CFCF F004          	movff	(c:4047),0+((c:ReadTimer1@timer)+01h)	;volatile
 10621                           	line	22
 10622  001C28  C003  F001         	movff	(c:ReadTimer1@timer),(c:?_ReadTimer1)
 10623  001C2C  C004  F002         	movff	(c:ReadTimer1@timer+1),(c:?_ReadTimer1+1)
 10624                           	line	23
 10625                           	
 10626  001C30                     i1l16460:
 10627  001C30  0012               	return
 10628                           	opt stack 0
 10629                           GLOBAL	__end_of_ReadTimer1
 10630  001C32                     	__end_of_ReadTimer1:
 10631                           	signat	_ReadTimer1,90
 10632                           	global	_WriteTimer1
 10633                           
 10634 ;; *************** function _WriteTimer1 *****************
 10635 ;; Defined at:
 10636 ;;		line 15 in file "plib/Timers/t1write.c"
 10637 ;; Parameters:    Size  Location     Type
 10638 ;;  timer1          2    0[COMRAM] unsigned int 
 10639 ;; Auto vars:     Size  Location     Type
 10640 ;;  timer           2    2[COMRAM] struct Timers
 10641 ;; Return value:  Size  Location     Type
 10642 ;;		None               void
 10643 ;; Registers used:
 10644 ;;		None
 10645 ;; Tracked objects:
 10646 ;;		On entry : 0/0
 10647 ;;		On exit  : 0/0
 10648 ;;		Unchanged: 0/0
 10649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10650 ;;      Params:         2       0       0       0       0
 10651 ;;      Locals:         2       0       0       0       0
 10652 ;;      Temps:          0       0       0       0       0
 10653 ;;      Totals:         4       0       0       0       0
 10654 ;;Total ram usage:        4 bytes
 10655 ;; Hardware stack levels used:    1
 10656 ;; Hardware stack levels required when called:    5
 10657 ;; This function calls:
 10658 ;;		Nothing
 10659 ;; This function is called by:
 10660 ;;		_timer1_int_handler
 10661 ;; This function uses a non-reentrant model
 10662 ;;
 10663                           psect	text35,class=CODE,space=0,reloc=2
 10664                           global __ptext35
 10665  001C32                     __ptext35:
 10666                           psect	text35
 10667                           	file	"plib/Timers/t1write.c"
 10668                           	line	15
 10669                           	global	__size_of_WriteTimer1
 10670  0000                     	__size_of_WriteTimer1	equ	__end_of_WriteTimer1-_WriteTimer1
 10671                           	
 10672  001C32                     _WriteTimer1:
 10673                           	opt	stack 19
 10674                           	line	18
 10675                           	
 10676  001C32                     i1l17733:
 10677  001C32  C001  F003         	movff	(c:WriteTimer1@timer1),(c:WriteTimer1@timer)
 10678  001C36  C002  F004         	movff	(c:WriteTimer1@timer1+1),(c:WriteTimer1@timer+1)
 10679                           	line	20
 10680  001C3A  C004  FFCF         	movff	0+((c:WriteTimer1@timer)+01h),(c:4047)	;volatile
 10681                           	line	21
 10682  001C3E  C003  FFCE         	movff	(c:WriteTimer1@timer),(c:4046)	;volatile
 10683                           	line	22
 10684                           	
 10685  001C42                     i1l16467:
 10686  001C42  0012               	return
 10687                           	opt stack 0
 10688                           GLOBAL	__end_of_WriteTimer1
 10689  001C44                     	__end_of_WriteTimer1:
 10690                           	signat	_WriteTimer1,4216
 10691                           	global	_ReadADC
 10692                           
 10693 ;; *************** function _ReadADC *****************
 10694 ;; Defined at:
 10695 ;;		line 25 in file "plib/ADC/adcread.c"
 10696 ;; Parameters:    Size  Location     Type
 10697 ;;		None
 10698 ;; Auto vars:     Size  Location     Type
 10699 ;;		None
 10700 ;; Return value:  Size  Location     Type
 10701 ;;                  2    0[COMRAM] int 
 10702 ;; Registers used:
 10703 ;;		wreg, status,2
 10704 ;; Tracked objects:
 10705 ;;		On entry : 0/0
 10706 ;;		On exit  : 0/0
 10707 ;;		Unchanged: 0/0
 10708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10709 ;;      Params:         2       0       0       0       0
 10710 ;;      Locals:         0       0       0       0       0
 10711 ;;      Temps:          0       0       0       0       0
 10712 ;;      Totals:         2       0       0       0       0
 10713 ;;Total ram usage:        2 bytes
 10714 ;; Hardware stack levels used:    1
 10715 ;; Hardware stack levels required when called:    5
 10716 ;; This function calls:
 10717 ;;		Nothing
 10718 ;; This function is called by:
 10719 ;;		_adc_int_handler
 10720 ;; This function uses a non-reentrant model
 10721 ;;
 10722                           psect	text36,class=CODE,space=0,reloc=2
 10723                           global __ptext36
 10724  001C64                     __ptext36:
 10725                           psect	text36
 10726                           	file	"plib/ADC/adcread.c"
 10727                           	line	25
 10728                           	global	__size_of_ReadADC
 10729  0000                     	__size_of_ReadADC	equ	__end_of_ReadADC-_ReadADC
 10730                           	
 10731  001C64                     _ReadADC:
 10732                           	opt	stack 19
 10733                           	line	26
 10734                           	
 10735  001C64                     i1l17735:
 10736  001C64  50C4               	movf	((c:4036)),c,w	;volatile
 10737  001C66  6E02               	movwf	((c:?_ReadADC+1)),c
 10738  001C68  50C3               	movf	((c:4035)),c,w	;volatile
 10739  001C6A  6E01               	movwf	((c:?_ReadADC)),c
 10740  001C6C  D000               	goto	i1l16420
 10741                           	
 10742  001C6E                     i1l17737:
 10743                           	line	27
 10744                           	
 10745  001C6E                     i1l16420:
 10746  001C6E  0012               	return
 10747                           	opt stack 0
 10748                           GLOBAL	__end_of_ReadADC
 10749  001C70                     	__end_of_ReadADC:
 10750                           	signat	_ReadADC,90
 10751                           	global	i1_send_msg
 10752                           
 10753 ;; *************** function i1_send_msg *****************
 10754 ;; Defined at:
 10755 ;;		line 24 in file "../src/messages.c"
 10756 ;; Parameters:    Size  Location     Type
 10757 ;;  send_msg        2   10[COMRAM] PTR struct __msg_queue
 10758 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 10759 ;;  send_msg        1   12[COMRAM] unsigned char 
 10760 ;;  send_msg        1   13[COMRAM] unsigned char 
 10761 ;;  send_msg        2   14[COMRAM] PTR void 
 10762 ;;		 -> adc_int_handler@value(2), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 10763 ;;		 -> i2c_int_handler@error_buf(3), main@msgbuffer(11), main@uc(5), 
 10764 ;; Auto vars:     Size  Location     Type
 10765 ;;  send_msg        2   20[COMRAM] PTR struct __msg
 10766 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 10767 ;;  send_msg        2   17[COMRAM] unsigned int 
 10768 ;;  send_msg        1   19[COMRAM] unsigned char 
 10769 ;; Return value:  Size  Location     Type
 10770 ;;                  1    wreg      char 
 10771 ;; Registers used:
 10772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10773 ;; Tracked objects:
 10774 ;;		On entry : 0/0
 10775 ;;		On exit  : 0/0
 10776 ;;		Unchanged: 0/0
 10777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10778 ;;      Params:         6       0       0       0       0
 10779 ;;      Locals:         5       0       0       0       0
 10780 ;;      Temps:          1       0       0       0       0
 10781 ;;      Totals:        12       0       0       0       0
 10782 ;;Total ram usage:       12 bytes
 10783 ;; Hardware stack levels used:    1
 10784 ;; Hardware stack levels required when called:    6
 10785 ;; This function calls:
 10786 ;;		i1_memcpy
 10787 ;; This function is called by:
 10788 ;;		_ToMainLow_sendmsg
 10789 ;; This function uses a non-reentrant model
 10790 ;;
 10791                           psect	text37,class=CODE,space=0,reloc=2
 10792                           global __ptext37
 10793  00123C                     __ptext37:
 10794                           psect	text37
 10795                           	file	"../src/messages.c"
 10796                           	line	24
 10797                           	global	__size_ofi1_send_msg
 10798  0000                     	__size_ofi1_send_msg	equ	__end_ofi1_send_msg-i1_send_msg
 10799                           	
 10800  00123C                     i1_send_msg:
 10801                           	opt	stack 17
 10802                           	line	28
 10803                           	
 10804  00123C                     i1l18751:
 10805                           ;messages.c: 25: unsigned char slot;
 10806                           ;messages.c: 27: msg *qmsg;
 10807                           ;messages.c: 28: size_t tlength = length;
 10808  00123C  C00D  F012         	movff	(c:i1send_msg@length),(c:i1send_msg@tlength)
 10809  001240  6A13               	clrf	((c:i1send_msg@tlength+1)),c
 10810                           	line	38
 10811                           	
 10812  001242                     i1l18753:
 10813                           ;messages.c: 38: slot = qptr->cur_write_ind;
 10814  001242  EE20 F034          	lfsr	2,034h
 10815  001246  500B               	movf	((c:i1send_msg@qptr)),c,w
 10816  001248  26D9               	addwf	fsr2l
 10817  00124A  500C               	movf	((c:i1send_msg@qptr+1)),c,w
 10818  00124C  22DA               	addwfc	fsr2h
 10819  00124E  50DF               	movf	indf2,w
 10820  001250  6E14               	movwf	((c:i1send_msg@slot)),c
 10821                           	line	39
 10822                           	
 10823  001252                     i1l18755:
 10824                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
 10825  001252  5014               	movf	((c:i1send_msg@slot)),c,w
 10826  001254  0D0D               	mullw	0Dh
 10827  001256  50F3               	movf	(prodl),c,w
 10828  001258  240B               	addwf	((c:i1send_msg@qptr)),c,w
 10829                           	
 10830  00125A  6E15               	movwf	((c:i1send_msg@qmsg)),c
 10831  00125C  50F4               	movf	(prodh),c,w
 10832  00125E  200C               	addwfc	((c:i1send_msg@qptr+1)),c,w
 10833  001260  6E16               	movwf	1+((c:i1send_msg@qmsg)),c
 10834                           	line	41
 10835                           	
 10836  001262                     i1l18757:
 10837                           ;messages.c: 41: if (qmsg->full != 0) {
 10838  001262  C015  FFD9         	movff	(c:i1send_msg@qmsg),fsr2l
 10839  001266  C016  FFDA         	movff	(c:i1send_msg@qmsg+1),fsr2h
 10840  00126A  50DF               	movf	indf2,w
 10841  00126C  B4D8               	btfsc	status,2
 10842  00126E  D001               	goto	i1u180_21
 10843  001270  D001               	goto	i1u180_20
 10844  001272                     i1u180_21:
 10845  001272  D003               	goto	i1l18763
 10846  001274                     i1u180_20:
 10847                           	line	42
 10848                           	
 10849  001274                     i1l18759:
 10850                           ;messages.c: 42: return (-1);
 10851  001274  0EFF               	movlw	(-1)&0ffh
 10852  001276  D03A               	goto	i1l5474
 10853                           	
 10854  001278                     i1l18761:
 10855  001278  D039               	goto	i1l5474
 10856                           	line	43
 10857                           	
 10858  00127A                     i1l5473:
 10859                           	line	46
 10860                           	
 10861  00127A                     i1l18763:
 10862                           ;messages.c: 43: }
 10863                           ;messages.c: 46: qmsg->length = length;
 10864  00127A  EE20 F001          	lfsr	2,01h
 10865  00127E  5015               	movf	((c:i1send_msg@qmsg)),c,w
 10866  001280  26D9               	addwf	fsr2l
 10867  001282  5016               	movf	((c:i1send_msg@qmsg+1)),c,w
 10868  001284  22DA               	addwfc	fsr2h
 10869  001286  C00D  FFDF         	movff	(c:i1send_msg@length),indf2
 10870                           
 10871                           	line	47
 10872                           ;messages.c: 47: qmsg->msgtype = msgtype;
 10873  00128A  EE20 F002          	lfsr	2,02h
 10874  00128E  5015               	movf	((c:i1send_msg@qmsg)),c,w
 10875  001290  26D9               	addwf	fsr2l
 10876  001292  5016               	movf	((c:i1send_msg@qmsg+1)),c,w
 10877  001294  22DA               	addwfc	fsr2h
 10878  001296  C00E  FFDF         	movff	(c:i1send_msg@msgtype),indf2
 10879                           
 10880                           	line	55
 10881                           	
 10882  00129A                     i1l18765:
 10883                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
 10884  00129A  0E03               	movlw	low(03h)
 10885  00129C  2415               	addwf	((c:i1send_msg@qmsg)),c,w
 10886                           	
 10887  00129E  6E01               	movwf	((c:?i1_memcpy)),c
 10888  0012A0  0E00               	movlw	high(03h)
 10889  0012A2  2016               	addwfc	((c:i1send_msg@qmsg+1)),c,w
 10890  0012A4  6E02               	movwf	1+((c:?i1_memcpy)),c
 10891  0012A6  C00F  F003         	movff	(c:i1send_msg@data),0+((c:?i1_memcpy)+02h)
 10892  0012AA  C010  F004         	movff	(c:i1send_msg@data+1),1+((c:?i1_memcpy)+02h)
 10893  0012AE  C012  F005         	movff	(c:i1send_msg@tlength),0+((c:?i1_memcpy)+04h)
 10894  0012B2  C013  F006         	movff	(c:i1send_msg@tlength+1),1+((c:?i1_memcpy)+04h)
 10895  0012B6  EC0A  F00C         	call	i1_memcpy	;wreg free
 10896                           	line	56
 10897                           	
 10898  0012BA                     i1l18767:
 10899                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
 10900  0012BA  EE20 F034          	lfsr	2,034h
 10901  0012BE  500B               	movf	((c:i1send_msg@qptr)),c,w
 10902  0012C0  26D9               	addwf	fsr2l
 10903  0012C2  500C               	movf	((c:i1send_msg@qptr+1)),c,w
 10904  0012C4  22DA               	addwfc	fsr2h
 10905  0012C6  EE10 F034          	lfsr	1,034h
 10906  0012CA  500B               	movf	((c:i1send_msg@qptr)),c,w
 10907  0012CC  26E1               	addwf	fsr1l
 10908  0012CE  500C               	movf	((c:i1send_msg@qptr+1)),c,w
 10909  0012D0  22E2               	addwfc	fsr1h
 10910  0012D2  50E7               	movf	indf1,w
 10911  0012D4  6E11               	movwf	(??i1_send_msg+0+0)&0ffh,c
 10912  0012D6  2811               	incf	((??i1_send_msg+0+0)),c,w
 10913  0012D8  0B03               	andlw	low(03h)
 10914  0012DA  6EDF               	movwf	indf2
 10915                           
 10916                           	line	59
 10917                           	
 10918  0012DC                     i1l18769:
 10919                           ;messages.c: 59: qmsg->full = 1;
 10920  0012DC  C015  FFD9         	movff	(c:i1send_msg@qmsg),fsr2l
 10921  0012E0  C016  FFDA         	movff	(c:i1send_msg@qmsg+1),fsr2h
 10922  0012E4  0E01               	movlw	low(01h)
 10923  0012E6  6EDF               	movwf	indf2
 10924                           	line	60
 10925                           	
 10926  0012E8                     i1l18771:
 10927                           ;messages.c: 60: return (1);
 10928  0012E8  0E01               	movlw	(01h)&0ffh
 10929  0012EA  D000               	goto	i1l5474
 10930                           	
 10931  0012EC                     i1l18773:
 10932                           	line	61
 10933                           	
 10934  0012EC                     i1l5474:
 10935  0012EC  0012               	return
 10936                           	opt stack 0
 10937                           GLOBAL	__end_ofi1_send_msg
 10938  0012EE                     	__end_ofi1_send_msg:
 10939                           	signat	i1_send_msg,89
 10940                           	global	i1_memcpy
 10941                           
 10942 ;; *************** function i1_memcpy *****************
 10943 ;; Defined at:
 10944 ;;		line 13 in file "/opt/microchip/xc8/v1.10/sources/memcpy.c"
 10945 ;; Parameters:    Size  Location     Type
 10946 ;;  memcpy          2    0[COMRAM] PTR void 
 10947 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
 10948 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
 10949 ;;  memcpy          2    2[COMRAM] PTR const void 
 10950 ;;		 -> adc_int_handler@value(2), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 10951 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 10952 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(5), 
 10953 ;;  memcpy          2    4[COMRAM] unsigned int 
 10954 ;; Auto vars:     Size  Location     Type
 10955 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 10956 ;;		 -> adc_int_handler@value(2), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 10957 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 10958 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(5), 
 10959 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 10960 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
 10961 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
 10962 ;; Return value:  Size  Location     Type
 10963 ;;                  2    0[COMRAM] PTR void 
 10964 ;; Registers used:
 10965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10966 ;; Tracked objects:
 10967 ;;		On entry : 0/0
 10968 ;;		On exit  : 0/0
 10969 ;;		Unchanged: 0/0
 10970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10971 ;;      Params:         6       0       0       0       0
 10972 ;;      Locals:         4       0       0       0       0
 10973 ;;      Temps:          0       0       0       0       0
 10974 ;;      Totals:        10       0       0       0       0
 10975 ;;Total ram usage:       10 bytes
 10976 ;; Hardware stack levels used:    1
 10977 ;; Hardware stack levels required when called:    5
 10978 ;; This function calls:
 10979 ;;		Nothing
 10980 ;; This function is called by:
 10981 ;;		i1_send_msg
 10982 ;; This function uses a non-reentrant model
 10983 ;;
 10984                           psect	text38,class=CODE,space=0,reloc=2
 10985                           global __ptext38
 10986  001814                     __ptext38:
 10987                           psect	text38
 10988                           	file	"/opt/microchip/xc8/v1.10/sources/memcpy.c"
 10989                           	line	13
 10990                           	global	__size_ofi1_memcpy
 10991  0000                     	__size_ofi1_memcpy	equ	__end_ofi1_memcpy-i1_memcpy
 10992                           	
 10993  001814                     i1_memcpy:
 10994                           	opt	stack 17
 10995                           	line	24
 10996                           	
 10997  001814                     i1l18731:
 10998  001814  C003  F009         	movff	(c:i1memcpy@s1),(c:i1memcpy@s)
 10999  001818  C004  F00A         	movff	(c:i1memcpy@s1+1),(c:i1memcpy@s+1)
 11000                           	line	25
 11001  00181C  C001  F007         	movff	(c:i1memcpy@d1),(c:i1memcpy@d)
 11002  001820  C002  F008         	movff	(c:i1memcpy@d1+1),(c:i1memcpy@d+1)
 11003                           	line	26
 11004  001824  D00F               	goto	i1l18739
 11005                           	
 11006  001826                     i1l17009:
 11007                           	line	27
 11008                           	
 11009  001826                     i1l18733:
 11010  001826  C009  FFD9         	movff	(c:i1memcpy@s),fsr2l
 11011  00182A  C00A  FFDA         	movff	(c:i1memcpy@s+1),fsr2h
 11012  00182E  C007  FFE1         	movff	(c:i1memcpy@d),fsr1l
 11013  001832  C008  FFE2         	movff	(c:i1memcpy@d+1),fsr1h
 11014  001836  CFDF FFE7          	movff	indf2,indf1
 11015                           	
 11016  00183A                     i1l18735:
 11017  00183A  4A09               	infsnz	((c:i1memcpy@s)),c
 11018  00183C  2A0A               	incf	((c:i1memcpy@s+1)),c
 11019                           	
 11020  00183E                     i1l18737:
 11021  00183E  4A07               	infsnz	((c:i1memcpy@d)),c
 11022  001840  2A08               	incf	((c:i1memcpy@d+1)),c
 11023  001842  D000               	goto	i1l18739
 11024                           	
 11025  001844                     i1l17008:
 11026                           	line	26
 11027                           	
 11028  001844                     i1l18739:
 11029  001844  0605               	decf	((c:i1memcpy@n)),c
 11030  001846  A0D8               	btfss	status,0
 11031  001848  0606               	decf	((c:i1memcpy@n+1)),c
 11032  00184A  2805               	incf	((c:i1memcpy@n))&0ffh,w
 11033  00184C  B4D8               	btfsc	status,2
 11034  00184E  2806               	incf ((c:i1memcpy@n+1))&0ffh,w
 11035                           
 11036  001850  A4D8               	btfss	status,2
 11037  001852  D001               	goto	i1u178_21
 11038  001854  D001               	goto	i1u178_20
 11039  001856                     i1u178_21:
 11040  001856  D7E7               	goto	i1l18733
 11041  001858                     i1u178_20:
 11042  001858  D000               	goto	i1l17011
 11043                           	
 11044  00185A                     i1l17010:
 11045                           	line	32
 11046                           ;	Return value of i1_memcpy is never used
 11047                           	
 11048  00185A                     i1l17011:
 11049  00185A  0012               	return
 11050                           	opt stack 0
 11051                           GLOBAL	__end_ofi1_memcpy
 11052  00185C                     	__end_ofi1_memcpy:
 11053                           	signat	i1_memcpy,90
 11054                           	global	_InterruptHandlerHigh
 11055                           
 11056 ;; *************** function _InterruptHandlerHigh *****************
 11057 ;; Defined at:
 11058 ;;		line 83 in file "../src/interrupts.c"
 11059 ;; Parameters:    Size  Location     Type
 11060 ;;		None
 11061 ;; Auto vars:     Size  Location     Type
 11062 ;;		None
 11063 ;; Return value:  Size  Location     Type
 11064 ;;		None               void
 11065 ;; Registers used:
 11066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11067 ;; Tracked objects:
 11068 ;;		On entry : 0/0
 11069 ;;		On exit  : 0/0
 11070 ;;		Unchanged: 0/0
 11071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11072 ;;      Params:         0       0       0       0       0
 11073 ;;      Locals:         0       0       0       0       0
 11074 ;;      Temps:          0      14       0       0       0
 11075 ;;      Totals:         0      14       0       0       0
 11076 ;;Total ram usage:       14 bytes
 11077 ;; Hardware stack levels used:    1
 11078 ;; Hardware stack levels required when called:    4
 11079 ;; This function calls:
 11080 ;;		_i2c_int_handler
 11081 ;;		_timer0_int_handler
 11082 ;;		_SleepIfOkay
 11083 ;; This function is called by:
 11084 ;;		Interrupt level 2
 11085 ;; This function uses a non-reentrant model
 11086 ;;
 11087                           psect	intcode,class=CODE,space=0,reloc=2
 11088                           global __pintcode
 11089  000008                     __pintcode:
 11090                           psect	intcode
 11091                           	file	"../src/interrupts.c"
 11092                           	line	83
 11093                           	global	__size_of_InterruptHandlerHigh
 11094  0000                     	__size_of_InterruptHandlerHigh	equ	__end_of_InterruptHandlerHigh-_InterruptHandlerHigh
 11095                           	
 11096  000008                     _InterruptHandlerHigh:
 11097                           	opt	stack 17
 11098  000008  CFFA F0DC          	movff	pclat+0,??_InterruptHandlerHigh+0
 11099  00000C  CFFB F0DD          	movff	pclat+1,??_InterruptHandlerHigh+1
 11100  000010  CFE9 F0DE          	movff	fsr0l+0,??_InterruptHandlerHigh+2
 11101                           	global	int_func
 11102  000014  EFCA  F009         	goto	int_func
 11103                           psect	intcode_body,class=CODE,space=0,reloc=2
 11104                           global __pintcode_body
 11105  001394                     __pintcode_body:
 11106  001394                     int_func:
 11107  001394  CFEA F0DF          	movff	fsr0h+0,??_InterruptHandlerHigh+3
 11108  001398  CFE1 F0E0          	movff	fsr1l+0,??_InterruptHandlerHigh+4
 11109  00139C  CFE2 F0E1          	movff	fsr1h+0,??_InterruptHandlerHigh+5
 11110  0013A0  CFD9 F0E2          	movff	fsr2l+0,??_InterruptHandlerHigh+6
 11111  0013A4  CFDA F0E3          	movff	fsr2h+0,??_InterruptHandlerHigh+7
 11112  0013A8  CFF3 F0E4          	movff	prodl+0,??_InterruptHandlerHigh+8
 11113  0013AC  CFF4 F0E5          	movff	prodh+0,??_InterruptHandlerHigh+9
 11114  0013B0  CFF6 F0E6          	movff	tblptrl+0,??_InterruptHandlerHigh+10
 11115  0013B4  CFF7 F0E7          	movff	tblptrh+0,??_InterruptHandlerHigh+11
 11116  0013B8  CFF8 F0E8          	movff	tblptru+0,??_InterruptHandlerHigh+12
 11117  0013BC  CFF5 F0E9          	movff	tablat+0,??_InterruptHandlerHigh+13
 11118                           	line	88
 11119                           	
 11120  0013C0                     i2l18869:
 11121                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
 11122                           	
 11123  0013C0  A69E               	btfss	((c:3998)),c,3	;volatile
 11124  0013C2  D001               	goto	i2u191_41
 11125  0013C4  D001               	goto	i2u191_40
 11126  0013C6                     i2u191_41:
 11127  0013C6  D004               	goto	i2l18875
 11128  0013C8                     i2u191_40:
 11129                           	line	90
 11130                           	
 11131  0013C8                     i2l18871:
 11132                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
 11133  0013C8  969E               	bcf	((c:3998)),c,3	;volatile
 11134                           	line	92
 11135                           	
 11136  0013CA                     i2l18873:
 11137                           ;interrupts.c: 92: i2c_int_handler();
 11138  0013CA  EC6B  F000         	call	_i2c_int_handler	;wreg free
 11139  0013CE  D000               	goto	i2l18875
 11140                           	line	93
 11141                           	
 11142  0013D0                     i2l1820:
 11143                           	line	96
 11144                           	
 11145  0013D0                     i2l18875:
 11146                           ;interrupts.c: 93: }
 11147                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
 11148                           	
 11149  0013D0  A4F2               	btfss	((c:4082)),c,2	;volatile
 11150  0013D2  D001               	goto	i2u192_41
 11151  0013D4  D001               	goto	i2u192_40
 11152  0013D6                     i2u192_41:
 11153  0013D6  D004               	goto	i2l18881
 11154  0013D8                     i2u192_40:
 11155                           	line	97
 11156                           	
 11157  0013D8                     i2l18877:
 11158                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
 11159  0013D8  94F2               	bcf	((c:4082)),c,2	;volatile
 11160                           	line	99
 11161                           	
 11162  0013DA                     i2l18879:
 11163                           ;interrupts.c: 99: timer0_int_handler();
 11164  0013DA  ECA9  F007         	call	_timer0_int_handler	;wreg free
 11165  0013DE  D000               	goto	i2l18881
 11166                           	line	100
 11167                           	
 11168  0013E0                     i2l1821:
 11169                           	line	109
 11170                           	
 11171  0013E0                     i2l18881:
 11172                           ;interrupts.c: 100: }
 11173                           ;interrupts.c: 109: SleepIfOkay();
 11174  0013E0  EC94  F00A         	call	_SleepIfOkay	;wreg free
 11175                           	line	110
 11176                           	
 11177  0013E4                     i2l1822:
 11178  0013E4  C0E9  FFF5         	movff	??_InterruptHandlerHigh+13,tablat+0
 11179  0013E8  C0E8  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru+0
 11180  0013EC  C0E7  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh+0
 11181  0013F0  C0E6  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl+0
 11182  0013F4  C0E5  FFF4         	movff	??_InterruptHandlerHigh+9,prodh+0
 11183  0013F8  C0E4  FFF3         	movff	??_InterruptHandlerHigh+8,prodl+0
 11184  0013FC  C0E3  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h+0
 11185  001400  C0E2  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l+0
 11186  001404  C0E1  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h+0
 11187  001408  C0E0  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l+0
 11188  00140C  C0DF  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h+0
 11189  001410  C0DE  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l+0
 11190  001414  C0DD  FFFB         	movff	??_InterruptHandlerHigh+1,pclat+1
 11191  001418  C0DC  FFFA         	movff	??_InterruptHandlerHigh+0,pclat+0
 11192  00141C  0011               	retfie f
 11193                           	opt stack 0
 11194                           GLOBAL	__end_of_InterruptHandlerHigh
 11195  00141E                     	__end_of_InterruptHandlerHigh:
 11196                           	signat	_InterruptHandlerHigh,88
 11197                           	global	_i2c_int_handler
 11198                           
 11199 ;; *************** function _i2c_int_handler *****************
 11200 ;; Defined at:
 11201 ;;		line 100 in file "../src/my_i2c.c"
 11202 ;; Parameters:    Size  Location     Type
 11203 ;;		None
 11204 ;; Auto vars:     Size  Location     Type
 11205 ;;  empty           2   22[BANK0 ] unsigned char [2]
 11206 ;;  data           10   12[BANK0 ] unsigned char [10]
 11207 ;;  length          2   29[BANK0 ] int 
 11208 ;;  msgtype         1   32[BANK0 ] unsigned char 
 11209 ;;  error_buf       3   24[BANK0 ] unsigned char [3]
 11210 ;;  data_read       1   35[BANK0 ] unsigned char 
 11211 ;;  msg_ready       1   34[BANK0 ] unsigned char 
 11212 ;;  msg_to_send     1   33[BANK0 ] unsigned char 
 11213 ;;  i2c_data        1   31[BANK0 ] unsigned char 
 11214 ;;  overrun_erro    1   28[BANK0 ] unsigned char 
 11215 ;;  data_written    1   27[BANK0 ] unsigned char 
 11216 ;; Return value:  Size  Location     Type
 11217 ;;		None               void
 11218 ;; Registers used:
 11219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11220 ;; Tracked objects:
 11221 ;;		On entry : 0/0
 11222 ;;		On exit  : 0/0
 11223 ;;		Unchanged: 0/0
 11224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11225 ;;      Params:         0       0       0       0       0
 11226 ;;      Locals:         0      24       0       0       0
 11227 ;;      Temps:          0       2       0       0       0
 11228 ;;      Totals:         0      26       0       0       0
 11229 ;;Total ram usage:       26 bytes
 11230 ;; Hardware stack levels used:    1
 11231 ;; Hardware stack levels required when called:    3
 11232 ;; This function calls:
 11233 ;;		_handle_start
 11234 ;;		_FromMainLow_recvmsg
 11235 ;;		_start_i2c_slave_reply
 11236 ;;		_ToMainHigh_sendmsg
 11237 ;; This function is called by:
 11238 ;;		_InterruptHandlerHigh
 11239 ;; This function uses a non-reentrant model
 11240 ;;
 11241                           psect	text40,class=CODE,space=0,reloc=2
 11242                           global __ptext40
 11243  0000D6                     __ptext40:
 11244                           psect	text40
 11245                           	file	"../src/my_i2c.c"
 11246                           	line	100
 11247                           	global	__size_of_i2c_int_handler
 11248  0000                     	__size_of_i2c_int_handler	equ	__end_of_i2c_int_handler-_i2c_int_handler
 11249                           	
 11250  0000D6                     _i2c_int_handler:
 11251                           	opt	stack 17
 11252                           	line	102
 11253                           	
 11254  0000D6                     i2l18883:
 11255                           ;my_i2c.c: 101: unsigned char i2c_data;
 11256                           ;my_i2c.c: 102: unsigned char data_read = 0;
 11257  0000D6  0100               	movlb	0	; () banked
 11258  0000D8  6FC2               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11259  0000DA  0E00               	movlw	low(0)
 11260  0000DC  0100               	movlb	0	; () banked
 11261  0000DE  0100               	movlb	0	; () banked
 11262  0000E0  6FDB               	movwf	((i2c_int_handler@data_read))&0ffh
 11263  0000E2  0100               	movlb	0	; () banked
 11264  0000E4  51C2               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11265                           	line	103
 11266                           ;my_i2c.c: 103: unsigned char data_written = 0;
 11267  0000E6  0100               	movlb	0	; () banked
 11268  0000E8  6FC2               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11269  0000EA  0E00               	movlw	low(0)
 11270  0000EC  0100               	movlb	0	; () banked
 11271  0000EE  0100               	movlb	0	; () banked
 11272  0000F0  6FD3               	movwf	((i2c_int_handler@data_written))&0ffh
 11273  0000F2  0100               	movlb	0	; () banked
 11274  0000F4  51C2               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11275                           	line	104
 11276                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
 11277  0000F6  0100               	movlb	0	; () banked
 11278  0000F8  6FC2               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11279  0000FA  0E00               	movlw	low(0)
 11280  0000FC  0100               	movlb	0	; () banked
 11281  0000FE  0100               	movlb	0	; () banked
 11282  000100  6FDA               	movwf	((i2c_int_handler@msg_ready))&0ffh
 11283  000102  0100               	movlb	0	; () banked
 11284  000104  51C2               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11285                           	line	105
 11286                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
 11287  000106  0100               	movlb	0	; () banked
 11288  000108  6FC2               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11289  00010A  0E00               	movlw	low(0)
 11290  00010C  0100               	movlb	0	; () banked
 11291  00010E  0100               	movlb	0	; () banked
 11292  000110  6FD9               	movwf	((i2c_int_handler@msg_to_send))&0ffh
 11293  000112  0100               	movlb	0	; () banked
 11294  000114  51C2               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11295                           	line	106
 11296                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
 11297  000116  0100               	movlb	0	; () banked
 11298  000118  6FC2               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11299  00011A  0E00               	movlw	low(0)
 11300  00011C  0100               	movlb	0	; () banked
 11301  00011E  0100               	movlb	0	; () banked
 11302  000120  6FD4               	movwf	((i2c_int_handler@overrun_error))&0ffh
 11303  000122  0100               	movlb	0	; () banked
 11304  000124  51C2               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11305                           	line	110
 11306                           	
 11307  000126                     i2l18885:; BSR set to: 0
 11308                           
 11309                           ;my_i2c.c: 107: unsigned char error_buf[3];
 11310                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
 11311                           	
 11312  000126  ACC6               	btfss	((c:4038)),c,6	;volatile
 11313  000128  D001               	goto	i2u193_41
 11314  00012A  D001               	goto	i2u193_40
 11315  00012C                     i2u193_41:
 11316  00012C  D021               	goto	i2l18897
 11317  00012E                     i2u193_40:
 11318                           	line	111
 11319                           	
 11320  00012E                     i2l18887:; BSR set to: 0
 11321                           
 11322                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
 11323  00012E  9CC6               	bcf	((c:4038)),c,6	;volatile
 11324                           	line	115
 11325                           	
 11326  000130                     i2l18889:; BSR set to: 0
 11327                           
 11328                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
 11329  000130  EE20 F00C          	lfsr	2,0Ch
 11330  000134  504A               	movf	((c:_ic_ptr)),c,w
 11331  000136  26D9               	addwf	fsr2l
 11332  000138  504B               	movf	((c:_ic_ptr+1)),c,w
 11333  00013A  22DA               	addwfc	fsr2h
 11334  00013C  0E05               	movlw	low(05h)
 11335  00013E  6EDF               	movwf	indf2
 11336                           	line	116
 11337                           	
 11338  000140                     i2l18891:; BSR set to: 0
 11339                           
 11340                           ;my_i2c.c: 116: overrun_error = 1;
 11341  000140  0100               	movlb	0	; () banked
 11342  000142  6FC2               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11343  000144  0E01               	movlw	low(01h)
 11344  000146  0100               	movlb	0	; () banked
 11345  000148  0100               	movlb	0	; () banked
 11346  00014A  6FD4               	movwf	((i2c_int_handler@overrun_error))&0ffh
 11347  00014C  0100               	movlb	0	; () banked
 11348  00014E  51C2               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11349                           	line	117
 11350                           	
 11351  000150                     i2l18893:; BSR set to: 0
 11352                           
 11353                           ;my_i2c.c: 117: ic_ptr->error_count++;
 11354  000150  EE20 F00E          	lfsr	2,0Eh
 11355  000154  504A               	movf	((c:_ic_ptr)),c,w
 11356  000156  26D9               	addwf	fsr2l
 11357  000158  504B               	movf	((c:_ic_ptr+1)),c,w
 11358  00015A  22DA               	addwfc	fsr2h
 11359  00015C  2ADF               	incf	indf2
 11360                           
 11361                           	line	118
 11362                           	
 11363  00015E                     i2l18895:; BSR set to: 0
 11364                           
 11365                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
 11366  00015E  EE20 F00D          	lfsr	2,0Dh
 11367  000162  504A               	movf	((c:_ic_ptr)),c,w
 11368  000164  26D9               	addwf	fsr2l
 11369  000166  504B               	movf	((c:_ic_ptr+1)),c,w
 11370  000168  22DA               	addwfc	fsr2h
 11371  00016A  0E04               	movlw	low(04h)
 11372  00016C  6EDF               	movwf	indf2
 11373  00016E  D000               	goto	i2l18897
 11374                           	line	119
 11375                           	
 11376  000170                     i2l7357:; BSR set to: 0
 11377                           
 11378                           	line	121
 11379                           	
 11380  000170                     i2l18897:; BSR set to: 0
 11381                           
 11382                           ;my_i2c.c: 119: }
 11383                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
 11384                           	
 11385  000170  A0C7               	btfss	((c:4039)),c,0	;volatile
 11386  000172  D001               	goto	i2u194_41
 11387  000174  D001               	goto	i2u194_40
 11388  000176                     i2u194_41:
 11389  000176  D00B               	goto	i2l18903
 11390  000178                     i2u194_40:
 11391                           	line	122
 11392                           	
 11393  000178                     i2l18899:; BSR set to: 0
 11394                           
 11395                           ;my_i2c.c: 122: i2c_data = SSPBUF;
 11396  000178  CFC9 F0D7          	movff	(c:4041),(i2c_int_handler@i2c_data)	;volatile
 11397                           	line	123
 11398                           	
 11399  00017C                     i2l18901:; BSR set to: 0
 11400                           
 11401                           ;my_i2c.c: 123: data_read = 1;
 11402  00017C  0100               	movlb	0	; () banked
 11403  00017E  6FC2               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11404  000180  0E01               	movlw	low(01h)
 11405  000182  0100               	movlb	0	; () banked
 11406  000184  0100               	movlb	0	; () banked
 11407  000186  6FDB               	movwf	((i2c_int_handler@data_read))&0ffh
 11408  000188  0100               	movlb	0	; () banked
 11409  00018A  51C2               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11410  00018C  D000               	goto	i2l18903
 11411                           	line	124
 11412                           	
 11413  00018E                     i2l7358:; BSR set to: 0
 11414                           
 11415                           	line	129
 11416                           	
 11417  00018E                     i2l18903:; BSR set to: 0
 11418                           
 11419                           ;my_i2c.c: 124: }
 11420                           ;my_i2c.c: 129: if (!overrun_error) {
 11421  00018E  0100               	movlb	0	; () banked
 11422  000190  0100               	movlb	0	; () banked
 11423  000192  67D4               	tstfsz	((i2c_int_handler@overrun_error))&0ffh
 11424  000194  D001               	goto	i2u195_41
 11425  000196  D001               	goto	i2u195_40
 11426  000198                     i2u195_41:
 11427  000198  D1E7               	goto	i2l7359
 11428  00019A                     i2u195_40:
 11429  00019A  D1D2               	goto	i2l18991
 11430                           	line	130
 11431                           	
 11432  00019C                     i2l18905:; BSR set to: 0
 11433                           
 11434                           ;my_i2c.c: 130: switch (ic_ptr->status) {
 11435  00019C  D1D1               	goto	i2l18991
 11436                           	line	131
 11437                           ;my_i2c.c: 131: case 0x5:
 11438                           	
 11439  00019E                     i2l7361:; BSR set to: 0
 11440                           
 11441                           	line	134
 11442                           ;my_i2c.c: 132: {
 11443                           ;my_i2c.c: 134: if (SSPSTATbits.S == 1) {
 11444                           	
 11445  00019E  A6C7               	btfss	((c:4039)),c,3	;volatile
 11446  0001A0  D001               	goto	i2u196_41
 11447  0001A2  D001               	goto	i2u196_40
 11448  0001A4                     i2u196_41:
 11449  0001A4  D1E1               	goto	i2l7359
 11450  0001A6                     i2u196_40:
 11451                           	line	135
 11452                           	
 11453  0001A6                     i2l18907:; BSR set to: 0
 11454                           
 11455                           ;my_i2c.c: 135: handle_start(data_read);
 11456  0001A6  C0DB  F032         	movff	(i2c_int_handler@data_read),(c:?_handle_start)
 11457  0001AA  EC77  F009         	call	_handle_start	;wreg free
 11458                           	line	137
 11459                           	
 11460  0001AE                     i2l18909:
 11461                           ;my_i2c.c: 137: if (ic_ptr->status == 0x8) {
 11462  0001AE  EE20 F00C          	lfsr	2,0Ch
 11463  0001B2  504A               	movf	((c:_ic_ptr)),c,w
 11464  0001B4  26D9               	addwf	fsr2l
 11465  0001B6  504B               	movf	((c:_ic_ptr+1)),c,w
 11466  0001B8  22DA               	addwfc	fsr2h
 11467  0001BA  0E08               	movlw	(08h)&0ffh
 11468  0001BC  62DF               	cpfseq	indf2
 11469  0001BE  D001               	goto	i2u197_41
 11470  0001C0  D001               	goto	i2u197_40
 11471  0001C2                     i2u197_41:
 11472  0001C2  D1D2               	goto	i2l7359
 11473  0001C4                     i2u197_40:
 11474                           	line	138
 11475                           	
 11476  0001C4                     i2l18911:
 11477                           ;my_i2c.c: 138: data_read = 0;
 11478  0001C4  0100               	movlb	0	; () banked
 11479  0001C6  6FC2               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11480  0001C8  0E00               	movlw	low(0)
 11481  0001CA  0100               	movlb	0	; () banked
 11482  0001CC  0100               	movlb	0	; () banked
 11483  0001CE  6FDB               	movwf	((i2c_int_handler@data_read))&0ffh
 11484  0001D0  0100               	movlb	0	; () banked
 11485  0001D2  51C2               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11486                           	line	139
 11487                           ;my_i2c.c: 139: msg_to_send = 1;
 11488  0001D4  0100               	movlb	0	; () banked
 11489  0001D6  6FC2               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11490  0001D8  0E01               	movlw	low(01h)
 11491  0001DA  0100               	movlb	0	; () banked
 11492  0001DC  0100               	movlb	0	; () banked
 11493  0001DE  6FD9               	movwf	((i2c_int_handler@msg_to_send))&0ffh
 11494  0001E0  0100               	movlb	0	; () banked
 11495  0001E2  51C2               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11496  0001E4  D1C1               	goto	i2l7359
 11497                           	line	140
 11498                           	
 11499  0001E6                     i2l7363:; BSR set to: 0
 11500                           
 11501  0001E6  D1C0               	goto	i2l7359
 11502                           	line	141
 11503                           	
 11504  0001E8                     i2l7362:; BSR set to: 0
 11505                           
 11506                           	line	142
 11507                           ;my_i2c.c: 140: }
 11508                           ;my_i2c.c: 141: }
 11509                           ;my_i2c.c: 142: break;
 11510  0001E8  D1BF               	goto	i2l7359
 11511                           	line	144
 11512                           ;my_i2c.c: 143: }
 11513                           ;my_i2c.c: 144: case 0x6:
 11514                           	
 11515  0001EA                     i2l7365:; BSR set to: 0
 11516                           
 11517                           	line	147
 11518                           ;my_i2c.c: 145: {
 11519                           ;my_i2c.c: 147: if (SSPSTATbits.P == 1) {
 11520                           	
 11521  0001EA  A8C7               	btfss	((c:4039)),c,4	;volatile
 11522  0001EC  D001               	goto	i2u198_41
 11523  0001EE  D001               	goto	i2u198_40
 11524  0001F0                     i2u198_41:
 11525  0001F0  D034               	goto	i2l18923
 11526  0001F2                     i2u198_40:
 11527                           	line	150
 11528                           	
 11529  0001F2                     i2l18913:; BSR set to: 0
 11530                           
 11531                           ;my_i2c.c: 150: ic_ptr->event_count++;
 11532  0001F2  EE20 F00B          	lfsr	2,0Bh
 11533  0001F6  504A               	movf	((c:_ic_ptr)),c,w
 11534  0001F8  26D9               	addwf	fsr2l
 11535  0001FA  504B               	movf	((c:_ic_ptr+1)),c,w
 11536  0001FC  22DA               	addwfc	fsr2h
 11537  0001FE  2ADF               	incf	indf2
 11538                           
 11539                           	line	151
 11540                           	
 11541  000200                     i2l18915:; BSR set to: 0
 11542                           
 11543                           ;my_i2c.c: 151: if (data_read) {
 11544  000200  0100               	movlb	0	; () banked
 11545  000202  0100               	movlb	0	; () banked
 11546  000204  51DB               	movf	((i2c_int_handler@data_read))&0ffh,w
 11547  000206  B4D8               	btfsc	status,2
 11548  000208  D001               	goto	i2u199_41
 11549  00020A  D001               	goto	i2u199_40
 11550  00020C                     i2u199_41:
 11551  00020C  D01D               	goto	i2l7367
 11552  00020E                     i2u199_40:
 11553                           	line	152
 11554                           	
 11555  00020E                     i2l18917:; BSR set to: 0
 11556                           
 11557                           ;my_i2c.c: 152: if (SSPSTATbits.D_A == 0) {
 11558                           	
 11559  00020E  BAC7               	btfsc	((c:4039)),c,5	;volatile
 11560  000210  D001               	goto	i2u200_41
 11561  000212  D001               	goto	i2u200_40
 11562  000214                     i2u200_41:
 11563  000214  D009               	goto	i2l18921
 11564  000216                     i2u200_40:
 11565                           	line	153
 11566                           	
 11567  000216                     i2l18919:; BSR set to: 0
 11568                           
 11569                           ;my_i2c.c: 153: msg_ready = 1;
 11570  000216  0100               	movlb	0	; () banked
 11571  000218  6FC2               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11572  00021A  0E01               	movlw	low(01h)
 11573  00021C  0100               	movlb	0	; () banked
 11574  00021E  0100               	movlb	0	; () banked
 11575  000220  6FDA               	movwf	((i2c_int_handler@msg_ready))&0ffh
 11576  000222  0100               	movlb	0	; () banked
 11577  000224  51C2               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11578                           	line	154
 11579                           ;my_i2c.c: 154: } else {
 11580  000226  D010               	goto	i2l7367
 11581                           	
 11582  000228                     i2l7368:; BSR set to: 0
 11583                           
 11584                           	line	155
 11585                           	
 11586  000228                     i2l18921:; BSR set to: 0
 11587                           
 11588                           ;my_i2c.c: 155: ic_ptr->error_count++;
 11589  000228  EE20 F00E          	lfsr	2,0Eh
 11590  00022C  504A               	movf	((c:_ic_ptr)),c,w
 11591  00022E  26D9               	addwf	fsr2l
 11592  000230  504B               	movf	((c:_ic_ptr+1)),c,w
 11593  000232  22DA               	addwfc	fsr2h
 11594  000234  2ADF               	incf	indf2
 11595                           
 11596                           	line	156
 11597                           ;my_i2c.c: 156: ic_ptr->error_code = 0x6;
 11598  000236  EE20 F00D          	lfsr	2,0Dh
 11599  00023A  504A               	movf	((c:_ic_ptr)),c,w
 11600  00023C  26D9               	addwf	fsr2l
 11601  00023E  504B               	movf	((c:_ic_ptr+1)),c,w
 11602  000240  22DA               	addwfc	fsr2h
 11603  000242  0E06               	movlw	low(06h)
 11604  000244  6EDF               	movwf	indf2
 11605  000246  D000               	goto	i2l7367
 11606                           	line	157
 11607                           	
 11608  000248                     i2l7369:; BSR set to: 0
 11609                           
 11610                           	line	158
 11611                           	
 11612  000248                     i2l7367:; BSR set to: 0
 11613                           
 11614                           	line	159
 11615                           ;my_i2c.c: 157: }
 11616                           ;my_i2c.c: 158: }
 11617                           ;my_i2c.c: 159: ic_ptr->status = 0x5;
 11618  000248  EE20 F00C          	lfsr	2,0Ch
 11619  00024C  504A               	movf	((c:_ic_ptr)),c,w
 11620  00024E  26D9               	addwf	fsr2l
 11621  000250  504B               	movf	((c:_ic_ptr+1)),c,w
 11622  000252  22DA               	addwfc	fsr2h
 11623  000254  0E05               	movlw	low(05h)
 11624  000256  6EDF               	movwf	indf2
 11625                           	line	160
 11626                           ;my_i2c.c: 160: } else if (data_read) {
 11627  000258  D187               	goto	i2l7359
 11628                           	
 11629  00025A                     i2l7366:; BSR set to: 0
 11630                           
 11631                           	
 11632  00025A                     i2l18923:; BSR set to: 0
 11633                           
 11634  00025A  0100               	movlb	0	; () banked
 11635  00025C  0100               	movlb	0	; () banked
 11636  00025E  51DB               	movf	((i2c_int_handler@data_read))&0ffh,w
 11637  000260  B4D8               	btfsc	status,2
 11638  000262  D001               	goto	i2u201_41
 11639  000264  D001               	goto	i2u201_40
 11640  000266                     i2u201_41:
 11641  000266  D180               	goto	i2l7359
 11642  000268                     i2u201_40:
 11643                           	line	161
 11644                           	
 11645  000268                     i2l18925:; BSR set to: 0
 11646                           
 11647                           ;my_i2c.c: 161: ic_ptr->event_count++;
 11648  000268  EE20 F00B          	lfsr	2,0Bh
 11649  00026C  504A               	movf	((c:_ic_ptr)),c,w
 11650  00026E  26D9               	addwf	fsr2l
 11651  000270  504B               	movf	((c:_ic_ptr+1)),c,w
 11652  000272  22DA               	addwfc	fsr2h
 11653  000274  2ADF               	incf	indf2
 11654                           
 11655                           	line	162
 11656                           	
 11657  000276                     i2l18927:; BSR set to: 0
 11658                           
 11659                           ;my_i2c.c: 162: if (SSPSTATbits.D_A == 0) {
 11660                           	
 11661  000276  BAC7               	btfsc	((c:4039)),c,5	;volatile
 11662  000278  D001               	goto	i2u202_41
 11663  00027A  D001               	goto	i2u202_40
 11664  00027C                     i2u202_41:
 11665  00027C  D027               	goto	i2l18939
 11666  00027E                     i2u202_40:
 11667                           	line	163
 11668                           	
 11669  00027E                     i2l18929:; BSR set to: 0
 11670                           
 11671                           ;my_i2c.c: 163: if (SSPSTATbits.R_W == 0) {
 11672                           	
 11673  00027E  B4C7               	btfsc	((c:4039)),c,2	;volatile
 11674  000280  D001               	goto	i2u203_41
 11675  000282  D001               	goto	i2u203_40
 11676  000284                     i2u203_41:
 11677  000284  D009               	goto	i2l18933
 11678  000286                     i2u203_40:
 11679                           	line	164
 11680                           	
 11681  000286                     i2l18931:; BSR set to: 0
 11682                           
 11683                           ;my_i2c.c: 164: ic_ptr->status = 0x7;
 11684  000286  EE20 F00C          	lfsr	2,0Ch
 11685  00028A  504A               	movf	((c:_ic_ptr)),c,w
 11686  00028C  26D9               	addwf	fsr2l
 11687  00028E  504B               	movf	((c:_ic_ptr+1)),c,w
 11688  000290  22DA               	addwfc	fsr2h
 11689  000292  0E07               	movlw	low(07h)
 11690  000294  6EDF               	movwf	indf2
 11691                           	line	165
 11692                           ;my_i2c.c: 165: } else {
 11693  000296  D168               	goto	i2l7359
 11694                           	
 11695  000298                     i2l7373:; BSR set to: 0
 11696                           
 11697                           	line	166
 11698                           	
 11699  000298                     i2l18933:; BSR set to: 0
 11700                           
 11701                           ;my_i2c.c: 166: ic_ptr->status = 0x8;
 11702  000298  EE20 F00C          	lfsr	2,0Ch
 11703  00029C  504A               	movf	((c:_ic_ptr)),c,w
 11704  00029E  26D9               	addwf	fsr2l
 11705  0002A0  504B               	movf	((c:_ic_ptr+1)),c,w
 11706  0002A2  22DA               	addwfc	fsr2h
 11707  0002A4  0E08               	movlw	low(08h)
 11708  0002A6  6EDF               	movwf	indf2
 11709                           	line	167
 11710                           	
 11711  0002A8                     i2l18935:; BSR set to: 0
 11712                           
 11713                           ;my_i2c.c: 167: msg_to_send = 1;
 11714  0002A8  0100               	movlb	0	; () banked
 11715  0002AA  6FC2               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11716  0002AC  0E01               	movlw	low(01h)
 11717  0002AE  0100               	movlb	0	; () banked
 11718  0002B0  0100               	movlb	0	; () banked
 11719  0002B2  6FD9               	movwf	((i2c_int_handler@msg_to_send))&0ffh
 11720  0002B4  0100               	movlb	0	; () banked
 11721  0002B6  51C2               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11722                           	line	169
 11723                           	
 11724  0002B8                     i2l18937:; BSR set to: 0
 11725                           
 11726                           ;my_i2c.c: 169: data_read = 0;
 11727  0002B8  0100               	movlb	0	; () banked
 11728  0002BA  6FC2               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11729  0002BC  0E00               	movlw	low(0)
 11730  0002BE  0100               	movlb	0	; () banked
 11731  0002C0  0100               	movlb	0	; () banked
 11732  0002C2  6FDB               	movwf	((i2c_int_handler@data_read))&0ffh
 11733  0002C4  0100               	movlb	0	; () banked
 11734  0002C6  51C2               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11735  0002C8  D14F               	goto	i2l7359
 11736                           	line	170
 11737                           	
 11738  0002CA                     i2l7374:; BSR set to: 0
 11739                           
 11740                           	line	171
 11741                           ;my_i2c.c: 170: }
 11742                           ;my_i2c.c: 171: } else {
 11743  0002CA  D14E               	goto	i2l7359
 11744                           	
 11745  0002CC                     i2l7372:; BSR set to: 0
 11746                           
 11747                           	line	172
 11748                           	
 11749  0002CC                     i2l18939:; BSR set to: 0
 11750                           
 11751                           ;my_i2c.c: 172: ic_ptr->error_count++;
 11752  0002CC  EE20 F00E          	lfsr	2,0Eh
 11753  0002D0  504A               	movf	((c:_ic_ptr)),c,w
 11754  0002D2  26D9               	addwf	fsr2l
 11755  0002D4  504B               	movf	((c:_ic_ptr+1)),c,w
 11756  0002D6  22DA               	addwfc	fsr2h
 11757  0002D8  2ADF               	incf	indf2
 11758                           
 11759                           	line	173
 11760                           ;my_i2c.c: 173: ic_ptr->status = 0x5;
 11761  0002DA  EE20 F00C          	lfsr	2,0Ch
 11762  0002DE  504A               	movf	((c:_ic_ptr)),c,w
 11763  0002E0  26D9               	addwf	fsr2l
 11764  0002E2  504B               	movf	((c:_ic_ptr+1)),c,w
 11765  0002E4  22DA               	addwfc	fsr2h
 11766  0002E6  0E05               	movlw	low(05h)
 11767  0002E8  6EDF               	movwf	indf2
 11768                           	line	174
 11769                           ;my_i2c.c: 174: ic_ptr->error_code = 0x6;
 11770  0002EA  EE20 F00D          	lfsr	2,0Dh
 11771  0002EE  504A               	movf	((c:_ic_ptr)),c,w
 11772  0002F0  26D9               	addwf	fsr2l
 11773  0002F2  504B               	movf	((c:_ic_ptr+1)),c,w
 11774  0002F4  22DA               	addwfc	fsr2h
 11775  0002F6  0E06               	movlw	low(06h)
 11776  0002F8  6EDF               	movwf	indf2
 11777  0002FA  D136               	goto	i2l7359
 11778                           	line	175
 11779                           	
 11780  0002FC                     i2l7375:; BSR set to: 0
 11781                           
 11782  0002FC  D135               	goto	i2l7359
 11783                           	line	176
 11784                           	
 11785  0002FE                     i2l7371:; BSR set to: 0
 11786                           
 11787  0002FE  D134               	goto	i2l7359
 11788                           	line	177
 11789                           	
 11790  000300                     i2l7370:; BSR set to: 0
 11791                           
 11792                           ;my_i2c.c: 175: }
 11793                           ;my_i2c.c: 176: }
 11794                           ;my_i2c.c: 177: break;
 11795  000300  D133               	goto	i2l7359
 11796                           	line	179
 11797                           ;my_i2c.c: 178: }
 11798                           ;my_i2c.c: 179: case 0x8:
 11799                           	
 11800  000302                     i2l7376:; BSR set to: 0
 11801                           
 11802                           	line	181
 11803                           	
 11804  000302                     i2l18941:; BSR set to: 0
 11805                           
 11806                           ;my_i2c.c: 180: {
 11807                           ;my_i2c.c: 181: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
 11808  000302  EE20 F01A          	lfsr	2,01Ah
 11809  000306  504A               	movf	((c:_ic_ptr)),c,w
 11810  000308  26D9               	addwf	fsr2l
 11811  00030A  504B               	movf	((c:_ic_ptr+1)),c,w
 11812  00030C  22DA               	addwfc	fsr2h
 11813  00030E  50DF               	movf	indf2,w
 11814  000310  0100               	movlb	0	; () banked
 11815  000312  6FC2               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11816  000314  EE20 F019          	lfsr	2,019h
 11817  000318  504A               	movf	((c:_ic_ptr)),c,w
 11818  00031A  26D9               	addwf	fsr2l
 11819  00031C  504B               	movf	((c:_ic_ptr+1)),c,w
 11820  00031E  22DA               	addwfc	fsr2h
 11821  000320  50DF               	movf	indf2,w
 11822  000322  0100               	movlb	0	; () banked
 11823  000324  5DC2               	subwf	((??_i2c_int_handler+0+0))&0ffh,w
 11824  000326  B0D8               	btfsc	status,0
 11825  000328  D001               	goto	i2u204_41
 11826  00032A  D001               	goto	i2u204_40
 11827  00032C                     i2u204_41:
 11828  00032C  D028               	goto	i2l18949
 11829  00032E                     i2u204_40:
 11830                           	line	182
 11831                           	
 11832  00032E                     i2l18943:; BSR set to: 0
 11833                           
 11834                           ;my_i2c.c: 182: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
 11835  00032E  EE20 F01A          	lfsr	2,01Ah
 11836  000332  504A               	movf	((c:_ic_ptr)),c,w
 11837  000334  26D9               	addwf	fsr2l
 11838  000336  504B               	movf	((c:_ic_ptr+1)),c,w
 11839  000338  22DA               	addwfc	fsr2h
 11840  00033A  50DF               	movf	indf2,w
 11841  00033C  0100               	movlb	0	; () banked
 11842  00033E  6FC2               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11843  000340  0100               	movlb	0	; () banked
 11844  000342  51C2               	movf	((??_i2c_int_handler+0+0))&0ffh,w
 11845  000344  0D01               	mullw	01h
 11846  000346  0E0F               	movlw	0Fh
 11847  000348  26F3               	addwf	(prodl),c
 11848  00034A  0E00               	movlw	0
 11849  00034C  22F4               	addwfc	(prodh),c
 11850  00034E  50F3               	movf	(prodl),c,w
 11851  000350  244A               	addwf	((c:_ic_ptr)),c,w
 11852  000352  6ED9               	movwf	c:fsr2l
 11853  000354  50F4               	movf	(prodh),c,w
 11854  000356  204B               	addwfc	((c:_ic_ptr+1)),c,w
 11855  000358  6EDA               	movwf	1+c:fsr2l
 11856  00035A  50DF               	movf	indf2,w
 11857  00035C  6EC9               	movwf	((c:4041)),c	;volatile
 11858                           	line	183
 11859                           	
 11860  00035E                     i2l18945:; BSR set to: 0
 11861                           
 11862                           ;my_i2c.c: 183: ic_ptr->outbufind++;
 11863  00035E  EE20 F01A          	lfsr	2,01Ah
 11864  000362  504A               	movf	((c:_ic_ptr)),c,w
 11865  000364  26D9               	addwf	fsr2l
 11866  000366  504B               	movf	((c:_ic_ptr+1)),c,w
 11867  000368  22DA               	addwfc	fsr2h
 11868  00036A  2ADF               	incf	indf2
 11869                           
 11870                           	line	184
 11871                           	
 11872  00036C                     i2l18947:; BSR set to: 0
 11873                           
 11874                           ;my_i2c.c: 184: data_written = 1;
 11875  00036C  0100               	movlb	0	; () banked
 11876  00036E  6FC2               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11877  000370  0E01               	movlw	low(01h)
 11878  000372  0100               	movlb	0	; () banked
 11879  000374  0100               	movlb	0	; () banked
 11880  000376  6FD3               	movwf	((i2c_int_handler@data_written))&0ffh
 11881  000378  0100               	movlb	0	; () banked
 11882  00037A  51C2               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 11883                           	line	185
 11884                           ;my_i2c.c: 185: } else {
 11885  00037C  D0F5               	goto	i2l7359
 11886                           	
 11887  00037E                     i2l7377:; BSR set to: 0
 11888                           
 11889                           	line	187
 11890                           	
 11891  00037E                     i2l18949:; BSR set to: 0
 11892                           
 11893                           ;my_i2c.c: 187: ic_ptr->status = 0x5;
 11894  00037E  EE20 F00C          	lfsr	2,0Ch
 11895  000382  504A               	movf	((c:_ic_ptr)),c,w
 11896  000384  26D9               	addwf	fsr2l
 11897  000386  504B               	movf	((c:_ic_ptr+1)),c,w
 11898  000388  22DA               	addwfc	fsr2h
 11899  00038A  0E05               	movlw	low(05h)
 11900  00038C  6EDF               	movwf	indf2
 11901  00038E  D0EC               	goto	i2l7359
 11902                           	line	188
 11903                           	
 11904  000390                     i2l7378:; BSR set to: 0
 11905                           
 11906                           	line	189
 11907                           ;my_i2c.c: 188: }
 11908                           ;my_i2c.c: 189: break;
 11909  000390  D0EB               	goto	i2l7359
 11910                           	line	191
 11911                           ;my_i2c.c: 190: }
 11912                           ;my_i2c.c: 191: case 0x7:
 11913                           	
 11914  000392                     i2l7379:; BSR set to: 0
 11915                           
 11916                           	line	194
 11917                           ;my_i2c.c: 192: {
 11918                           ;my_i2c.c: 194: if (SSPSTATbits.P == 1) {
 11919                           	
 11920  000392  A8C7               	btfss	((c:4039)),c,4	;volatile
 11921  000394  D001               	goto	i2u205_41
 11922  000396  D001               	goto	i2u205_40
 11923  000398                     i2u205_41:
 11924  000398  D062               	goto	i2l18969
 11925  00039A                     i2u205_40:
 11926                           	line	196
 11927                           	
 11928  00039A                     i2l18951:; BSR set to: 0
 11929                           
 11930                           ;my_i2c.c: 196: ic_ptr->event_count++;
 11931  00039A  EE20 F00B          	lfsr	2,0Bh
 11932  00039E  504A               	movf	((c:_ic_ptr)),c,w
 11933  0003A0  26D9               	addwf	fsr2l
 11934  0003A2  504B               	movf	((c:_ic_ptr+1)),c,w
 11935  0003A4  22DA               	addwfc	fsr2h
 11936  0003A6  2ADF               	incf	indf2
 11937                           
 11938                           	line	197
 11939                           	
 11940  0003A8                     i2l18953:; BSR set to: 0
 11941                           
 11942                           ;my_i2c.c: 197: if (data_read) {
 11943  0003A8  0100               	movlb	0	; () banked
 11944  0003AA  0100               	movlb	0	; () banked
 11945  0003AC  51DB               	movf	((i2c_int_handler@data_read))&0ffh,w
 11946  0003AE  B4D8               	btfsc	status,2
 11947  0003B0  D001               	goto	i2u206_41
 11948  0003B2  D001               	goto	i2u206_40
 11949  0003B4                     i2u206_41:
 11950  0003B4  D042               	goto	i2l18965
 11951  0003B6                     i2u206_40:
 11952                           	line	198
 11953                           	
 11954  0003B6                     i2l18955:; BSR set to: 0
 11955                           
 11956                           ;my_i2c.c: 198: if (SSPSTATbits.D_A == 1) {
 11957                           	
 11958  0003B6  AAC7               	btfss	((c:4039)),c,5	;volatile
 11959  0003B8  D001               	goto	i2u207_41
 11960  0003BA  D001               	goto	i2u207_40
 11961  0003BC                     i2u207_41:
 11962  0003BC  D025               	goto	i2l18963
 11963  0003BE                     i2u207_40:
 11964                           	line	199
 11965                           	
 11966  0003BE                     i2l18957:; BSR set to: 0
 11967                           
 11968                           ;my_i2c.c: 199: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
 11969  0003BE  EE20 F00A          	lfsr	2,0Ah
 11970  0003C2  504A               	movf	((c:_ic_ptr)),c,w
 11971  0003C4  26D9               	addwf	fsr2l
 11972  0003C6  504B               	movf	((c:_ic_ptr+1)),c,w
 11973  0003C8  22DA               	addwfc	fsr2h
 11974  0003CA  50DF               	movf	indf2,w
 11975  0003CC  0100               	movlb	0	; () banked
 11976  0003CE  6FC2               	movwf	(??_i2c_int_handler+0+0)&0ffh
 11977  0003D0  0100               	movlb	0	; () banked
 11978  0003D2  51C2               	movf	((??_i2c_int_handler+0+0))&0ffh,w
 11979  0003D4  0D01               	mullw	01h
 11980  0003D6  50F3               	movf	(prodl),c,w
 11981  0003D8  244A               	addwf	((c:_ic_ptr)),c,w
 11982  0003DA  6ED9               	movwf	c:fsr2l
 11983  0003DC  50F4               	movf	(prodh),c,w
 11984  0003DE  204B               	addwfc	((c:_ic_ptr+1)),c,w
 11985  0003E0  6EDA               	movwf	1+c:fsr2l
 11986  0003E2  0100               	movlb	0	; () banked
 11987  0003E4  C0D7  FFDF         	movff	(i2c_int_handler@i2c_data),indf2
 11988                           
 11989                           	line	200
 11990                           	
 11991  0003E8                     i2l18959:; BSR set to: 0
 11992                           
 11993                           ;my_i2c.c: 200: ic_ptr->buflen++;
 11994  0003E8  EE20 F00A          	lfsr	2,0Ah
 11995  0003EC  504A               	movf	((c:_ic_ptr)),c,w
 11996  0003EE  26D9               	addwf	fsr2l
 11997  0003F0  504B               	movf	((c:_ic_ptr+1)),c,w
 11998  0003F2  22DA               	addwfc	fsr2h
 11999  0003F4  2ADF               	incf	indf2
 12000                           
 12001                           	line	201
 12002                           	
 12003  0003F6                     i2l18961:; BSR set to: 0
 12004                           
 12005                           ;my_i2c.c: 201: msg_ready = 1;
 12006  0003F6  0100               	movlb	0	; () banked
 12007  0003F8  6FC2               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12008  0003FA  0E01               	movlw	low(01h)
 12009  0003FC  0100               	movlb	0	; () banked
 12010  0003FE  0100               	movlb	0	; () banked
 12011  000400  6FDA               	movwf	((i2c_int_handler@msg_ready))&0ffh
 12012  000402  0100               	movlb	0	; () banked
 12013  000404  51C2               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 12014                           	line	202
 12015                           ;my_i2c.c: 202: } else {
 12016  000406  D022               	goto	i2l18967
 12017                           	
 12018  000408                     i2l7382:; BSR set to: 0
 12019                           
 12020                           	line	203
 12021                           	
 12022  000408                     i2l18963:; BSR set to: 0
 12023                           
 12024                           ;my_i2c.c: 203: ic_ptr->error_count++;
 12025  000408  EE20 F00E          	lfsr	2,0Eh
 12026  00040C  504A               	movf	((c:_ic_ptr)),c,w
 12027  00040E  26D9               	addwf	fsr2l
 12028  000410  504B               	movf	((c:_ic_ptr+1)),c,w
 12029  000412  22DA               	addwfc	fsr2h
 12030  000414  2ADF               	incf	indf2
 12031                           
 12032                           	line	204
 12033                           ;my_i2c.c: 204: ic_ptr->error_code = 0x6;
 12034  000416  EE20 F00D          	lfsr	2,0Dh
 12035  00041A  504A               	movf	((c:_ic_ptr)),c,w
 12036  00041C  26D9               	addwf	fsr2l
 12037  00041E  504B               	movf	((c:_ic_ptr+1)),c,w
 12038  000420  22DA               	addwfc	fsr2h
 12039  000422  0E06               	movlw	low(06h)
 12040  000424  6EDF               	movwf	indf2
 12041                           	line	205
 12042                           ;my_i2c.c: 205: ic_ptr->status = 0x5;
 12043  000426  EE20 F00C          	lfsr	2,0Ch
 12044  00042A  504A               	movf	((c:_ic_ptr)),c,w
 12045  00042C  26D9               	addwf	fsr2l
 12046  00042E  504B               	movf	((c:_ic_ptr+1)),c,w
 12047  000430  22DA               	addwfc	fsr2h
 12048  000432  0E05               	movlw	low(05h)
 12049  000434  6EDF               	movwf	indf2
 12050  000436  D00A               	goto	i2l18967
 12051                           	line	206
 12052                           	
 12053  000438                     i2l7383:; BSR set to: 0
 12054                           
 12055                           	line	207
 12056                           ;my_i2c.c: 206: }
 12057                           ;my_i2c.c: 207: } else {
 12058  000438  D009               	goto	i2l18967
 12059                           	
 12060  00043A                     i2l7381:; BSR set to: 0
 12061                           
 12062                           	line	208
 12063                           	
 12064  00043A                     i2l18965:; BSR set to: 0
 12065                           
 12066                           ;my_i2c.c: 208: msg_ready = 1;
 12067  00043A  0100               	movlb	0	; () banked
 12068  00043C  6FC2               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12069  00043E  0E01               	movlw	low(01h)
 12070  000440  0100               	movlb	0	; () banked
 12071  000442  0100               	movlb	0	; () banked
 12072  000444  6FDA               	movwf	((i2c_int_handler@msg_ready))&0ffh
 12073  000446  0100               	movlb	0	; () banked
 12074  000448  51C2               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 12075  00044A  D000               	goto	i2l18967
 12076                           	line	209
 12077                           	
 12078  00044C                     i2l7384:; BSR set to: 0
 12079                           
 12080                           	line	210
 12081                           	
 12082  00044C                     i2l18967:; BSR set to: 0
 12083                           
 12084                           ;my_i2c.c: 209: }
 12085                           ;my_i2c.c: 210: ic_ptr->status = 0x5;
 12086  00044C  EE20 F00C          	lfsr	2,0Ch
 12087  000450  504A               	movf	((c:_ic_ptr)),c,w
 12088  000452  26D9               	addwf	fsr2l
 12089  000454  504B               	movf	((c:_ic_ptr+1)),c,w
 12090  000456  22DA               	addwfc	fsr2h
 12091  000458  0E05               	movlw	low(05h)
 12092  00045A  6EDF               	movwf	indf2
 12093                           	line	211
 12094                           ;my_i2c.c: 211: } else if (data_read) {
 12095  00045C  D085               	goto	i2l7359
 12096                           	
 12097  00045E                     i2l7380:; BSR set to: 0
 12098                           
 12099                           	
 12100  00045E                     i2l18969:; BSR set to: 0
 12101                           
 12102  00045E  0100               	movlb	0	; () banked
 12103  000460  0100               	movlb	0	; () banked
 12104  000462  51DB               	movf	((i2c_int_handler@data_read))&0ffh,w
 12105  000464  B4D8               	btfsc	status,2
 12106  000466  D001               	goto	i2u208_41
 12107  000468  D001               	goto	i2u208_40
 12108  00046A                     i2u208_41:
 12109  00046A  D07E               	goto	i2l7359
 12110  00046C                     i2u208_40:
 12111                           	line	212
 12112                           	
 12113  00046C                     i2l18971:; BSR set to: 0
 12114                           
 12115                           ;my_i2c.c: 212: ic_ptr->event_count++;
 12116  00046C  EE20 F00B          	lfsr	2,0Bh
 12117  000470  504A               	movf	((c:_ic_ptr)),c,w
 12118  000472  26D9               	addwf	fsr2l
 12119  000474  504B               	movf	((c:_ic_ptr+1)),c,w
 12120  000476  22DA               	addwfc	fsr2h
 12121  000478  2ADF               	incf	indf2
 12122                           
 12123                           	line	213
 12124                           	
 12125  00047A                     i2l18973:; BSR set to: 0
 12126                           
 12127                           ;my_i2c.c: 213: if (SSPSTATbits.D_A == 1) {
 12128                           	
 12129  00047A  AAC7               	btfss	((c:4039)),c,5	;volatile
 12130  00047C  D001               	goto	i2u209_41
 12131  00047E  D001               	goto	i2u209_40
 12132  000480                     i2u209_41:
 12133  000480  D01D               	goto	i2l7387
 12134  000482                     i2u209_40:
 12135                           	line	214
 12136                           	
 12137  000482                     i2l18975:; BSR set to: 0
 12138                           
 12139                           ;my_i2c.c: 214: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
 12140  000482  EE20 F00A          	lfsr	2,0Ah
 12141  000486  504A               	movf	((c:_ic_ptr)),c,w
 12142  000488  26D9               	addwf	fsr2l
 12143  00048A  504B               	movf	((c:_ic_ptr+1)),c,w
 12144  00048C  22DA               	addwfc	fsr2h
 12145  00048E  50DF               	movf	indf2,w
 12146  000490  0100               	movlb	0	; () banked
 12147  000492  6FC2               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12148  000494  0100               	movlb	0	; () banked
 12149  000496  51C2               	movf	((??_i2c_int_handler+0+0))&0ffh,w
 12150  000498  0D01               	mullw	01h
 12151  00049A  50F3               	movf	(prodl),c,w
 12152  00049C  244A               	addwf	((c:_ic_ptr)),c,w
 12153  00049E  6ED9               	movwf	c:fsr2l
 12154  0004A0  50F4               	movf	(prodh),c,w
 12155  0004A2  204B               	addwfc	((c:_ic_ptr+1)),c,w
 12156  0004A4  6EDA               	movwf	1+c:fsr2l
 12157  0004A6  0100               	movlb	0	; () banked
 12158  0004A8  C0D7  FFDF         	movff	(i2c_int_handler@i2c_data),indf2
 12159                           
 12160                           	line	215
 12161                           	
 12162  0004AC                     i2l18977:; BSR set to: 0
 12163                           
 12164                           ;my_i2c.c: 215: ic_ptr->buflen++;
 12165  0004AC  EE20 F00A          	lfsr	2,0Ah
 12166  0004B0  504A               	movf	((c:_ic_ptr)),c,w
 12167  0004B2  26D9               	addwf	fsr2l
 12168  0004B4  504B               	movf	((c:_ic_ptr+1)),c,w
 12169  0004B6  22DA               	addwfc	fsr2h
 12170  0004B8  2ADF               	incf	indf2
 12171                           
 12172                           	line	216
 12173                           ;my_i2c.c: 216: } else {
 12174  0004BA  D056               	goto	i2l7359
 12175                           	
 12176  0004BC                     i2l7387:; BSR set to: 0
 12177                           
 12178                           	line	217
 12179                           ;my_i2c.c: 217: if (SSPSTATbits.R_W == 1) {
 12180                           	
 12181  0004BC  A4C7               	btfss	((c:4039)),c,2	;volatile
 12182  0004BE  D001               	goto	i2u210_41
 12183  0004C0  D001               	goto	i2u210_40
 12184  0004C2                     i2u210_41:
 12185  0004C2  D021               	goto	i2l18987
 12186  0004C4                     i2u210_40:
 12187                           	line	218
 12188                           	
 12189  0004C4                     i2l18979:; BSR set to: 0
 12190                           
 12191                           ;my_i2c.c: 218: ic_ptr->status = 0x8;
 12192  0004C4  EE20 F00C          	lfsr	2,0Ch
 12193  0004C8  504A               	movf	((c:_ic_ptr)),c,w
 12194  0004CA  26D9               	addwf	fsr2l
 12195  0004CC  504B               	movf	((c:_ic_ptr+1)),c,w
 12196  0004CE  22DA               	addwfc	fsr2h
 12197  0004D0  0E08               	movlw	low(08h)
 12198  0004D2  6EDF               	movwf	indf2
 12199                           	line	219
 12200                           	
 12201  0004D4                     i2l18981:; BSR set to: 0
 12202                           
 12203                           ;my_i2c.c: 219: msg_ready = 1;
 12204  0004D4  0100               	movlb	0	; () banked
 12205  0004D6  6FC2               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12206  0004D8  0E01               	movlw	low(01h)
 12207  0004DA  0100               	movlb	0	; () banked
 12208  0004DC  0100               	movlb	0	; () banked
 12209  0004DE  6FDA               	movwf	((i2c_int_handler@msg_ready))&0ffh
 12210  0004E0  0100               	movlb	0	; () banked
 12211  0004E2  51C2               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 12212                           	line	220
 12213                           	
 12214  0004E4                     i2l18983:; BSR set to: 0
 12215                           
 12216                           ;my_i2c.c: 220: msg_to_send = 1;
 12217  0004E4  0100               	movlb	0	; () banked
 12218  0004E6  6FC2               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12219  0004E8  0E01               	movlw	low(01h)
 12220  0004EA  0100               	movlb	0	; () banked
 12221  0004EC  0100               	movlb	0	; () banked
 12222  0004EE  6FD9               	movwf	((i2c_int_handler@msg_to_send))&0ffh
 12223  0004F0  0100               	movlb	0	; () banked
 12224  0004F2  51C2               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 12225                           	line	222
 12226                           	
 12227  0004F4                     i2l18985:; BSR set to: 0
 12228                           
 12229                           ;my_i2c.c: 222: data_read = 0;
 12230  0004F4  0100               	movlb	0	; () banked
 12231  0004F6  6FC2               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12232  0004F8  0E00               	movlw	low(0)
 12233  0004FA  0100               	movlb	0	; () banked
 12234  0004FC  0100               	movlb	0	; () banked
 12235  0004FE  6FDB               	movwf	((i2c_int_handler@data_read))&0ffh
 12236  000500  0100               	movlb	0	; () banked
 12237  000502  51C2               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 12238                           	line	223
 12239                           ;my_i2c.c: 223: } else {
 12240  000504  D031               	goto	i2l7359
 12241                           	
 12242  000506                     i2l7389:; BSR set to: 0
 12243                           
 12244                           	line	224
 12245                           	
 12246  000506                     i2l18987:; BSR set to: 0
 12247                           
 12248                           ;my_i2c.c: 224: ic_ptr->error_count++;
 12249  000506  EE20 F00E          	lfsr	2,0Eh
 12250  00050A  504A               	movf	((c:_ic_ptr)),c,w
 12251  00050C  26D9               	addwf	fsr2l
 12252  00050E  504B               	movf	((c:_ic_ptr+1)),c,w
 12253  000510  22DA               	addwfc	fsr2h
 12254  000512  2ADF               	incf	indf2
 12255                           
 12256                           	line	225
 12257                           ;my_i2c.c: 225: ic_ptr->error_code = 0x6;
 12258  000514  EE20 F00D          	lfsr	2,0Dh
 12259  000518  504A               	movf	((c:_ic_ptr)),c,w
 12260  00051A  26D9               	addwf	fsr2l
 12261  00051C  504B               	movf	((c:_ic_ptr+1)),c,w
 12262  00051E  22DA               	addwfc	fsr2h
 12263  000520  0E06               	movlw	low(06h)
 12264  000522  6EDF               	movwf	indf2
 12265                           	line	226
 12266                           ;my_i2c.c: 226: ic_ptr->status = 0x5;
 12267  000524  EE20 F00C          	lfsr	2,0Ch
 12268  000528  504A               	movf	((c:_ic_ptr)),c,w
 12269  00052A  26D9               	addwf	fsr2l
 12270  00052C  504B               	movf	((c:_ic_ptr+1)),c,w
 12271  00052E  22DA               	addwfc	fsr2h
 12272  000530  0E05               	movlw	low(05h)
 12273  000532  6EDF               	movwf	indf2
 12274  000534  D019               	goto	i2l7359
 12275                           	line	227
 12276                           	
 12277  000536                     i2l7390:; BSR set to: 0
 12278                           
 12279  000536  D018               	goto	i2l7359
 12280                           	line	228
 12281                           	
 12282  000538                     i2l7388:; BSR set to: 0
 12283                           
 12284  000538  D017               	goto	i2l7359
 12285                           	line	229
 12286                           	
 12287  00053A                     i2l7386:; BSR set to: 0
 12288                           
 12289  00053A  D016               	goto	i2l7359
 12290                           	line	230
 12291                           	
 12292  00053C                     i2l7385:; BSR set to: 0
 12293                           
 12294                           ;my_i2c.c: 227: }
 12295                           ;my_i2c.c: 228: }
 12296                           ;my_i2c.c: 229: }
 12297                           ;my_i2c.c: 230: break;
 12298  00053C  D015               	goto	i2l7359
 12299                           	line	232
 12300                           	
 12301  00053E                     i2l18989:; BSR set to: 0
 12302                           
 12303                           ;my_i2c.c: 231: }
 12304                           ;my_i2c.c: 232: }
 12305  00053E  D014               	goto	i2l7359
 12306                           	line	130
 12307                           	
 12308  000540                     i2l7360:; BSR set to: 0
 12309                           
 12310                           	
 12311  000540                     i2l18991:; BSR set to: 0
 12312                           
 12313  000540  EE20 F00C          	lfsr	2,0Ch
 12314  000544  504A               	movf	((c:_ic_ptr)),c,w
 12315  000546  26D9               	addwf	fsr2l
 12316  000548  504B               	movf	((c:_ic_ptr+1)),c,w
 12317  00054A  22DA               	addwfc	fsr2h
 12318  00054C  50DF               	movf	indf2,w
 12319                           	; Switch size 1, requested type "space"
 12320                           ; Number of cases is 4, Range of values is 5 to 8
 12321                           ; switch strategies available:
 12322                           ; Name         Instructions Cycles
 12323                           ; simple_byte           13     7 (average)
 12324                           ;	Chosen strategy is simple_byte
 12325                           
 12326  00054E  0A05               	xorlw	5^0	; case 5
 12327  000550  B4D8               	skipnz
 12328  000552  D625               	goto	i2l7361
 12329  000554  0A03               	xorlw	6^5	; case 6
 12330  000556  B4D8               	skipnz
 12331  000558  D648               	goto	i2l7365
 12332  00055A  0A01               	xorlw	7^6	; case 7
 12333  00055C  B4D8               	skipnz
 12334  00055E  D719               	goto	i2l7379
 12335  000560  0A0F               	xorlw	8^7	; case 8
 12336  000562  B4D8               	skipnz
 12337  000564  D6CE               	goto	i2l18941
 12338  000566  D000               	goto	i2l7359
 12339                           
 12340                           	line	232
 12341                           	
 12342  000568                     i2l7364:; BSR set to: 0
 12343                           
 12344                           	line	233
 12345                           	
 12346  000568                     i2l7359:
 12347                           	line	236
 12348                           ;my_i2c.c: 233: }
 12349                           ;my_i2c.c: 236: if (data_read || data_written) {
 12350  000568  0100               	movlb	0	; () banked
 12351  00056A  0100               	movlb	0	; () banked
 12352  00056C  67DB               	tstfsz	((i2c_int_handler@data_read))&0ffh
 12353  00056E  D001               	goto	i2u211_41
 12354  000570  D001               	goto	i2u211_40
 12355  000572                     i2u211_41:
 12356  000572  D007               	goto	i2l7393
 12357  000574                     i2u211_40:
 12358                           	
 12359  000574                     i2l18993:; BSR set to: 0
 12360                           
 12361  000574  0100               	movlb	0	; () banked
 12362  000576  0100               	movlb	0	; () banked
 12363  000578  51D3               	movf	((i2c_int_handler@data_written))&0ffh,w
 12364  00057A  B4D8               	btfsc	status,2
 12365  00057C  D001               	goto	i2u212_41
 12366  00057E  D001               	goto	i2u212_40
 12367  000580                     i2u212_41:
 12368  000580  D007               	goto	i2l18997
 12369  000582                     i2u212_40:
 12370                           	
 12371  000582                     i2l7393:; BSR set to: 0
 12372                           
 12373                           	line	238
 12374                           ;my_i2c.c: 238: if (SSPCON1bits.CKP == 0) {
 12375                           	
 12376  000582  B8C6               	btfsc	((c:4038)),c,4	;volatile
 12377  000584  D001               	goto	i2u213_41
 12378  000586  D001               	goto	i2u213_40
 12379  000588                     i2u213_41:
 12380  000588  D003               	goto	i2l18997
 12381  00058A                     i2u213_40:
 12382                           	line	239
 12383                           	
 12384  00058A                     i2l18995:; BSR set to: 0
 12385                           
 12386                           ;my_i2c.c: 239: SSPCON1bits.CKP = 1;
 12387  00058A  88C6               	bsf	((c:4038)),c,4	;volatile
 12388  00058C  D001               	goto	i2l18997
 12389                           	line	240
 12390                           	
 12391  00058E                     i2l7394:; BSR set to: 0
 12392                           
 12393  00058E  D000               	goto	i2l18997
 12394                           	line	241
 12395                           	
 12396  000590                     i2l7391:; BSR set to: 0
 12397                           
 12398                           	line	244
 12399                           	
 12400  000590                     i2l18997:; BSR set to: 0
 12401                           
 12402                           ;my_i2c.c: 240: }
 12403                           ;my_i2c.c: 241: }
 12404                           ;my_i2c.c: 244: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
 12405  000590  EE20 F00A          	lfsr	2,0Ah
 12406  000594  504A               	movf	((c:_ic_ptr)),c,w
 12407  000596  26D9               	addwf	fsr2l
 12408  000598  504B               	movf	((c:_ic_ptr+1)),c,w
 12409  00059A  22DA               	addwfc	fsr2h
 12410  00059C  0E08               	movlw	(09h-1)
 12411  00059E  64DF               	cpfsgt	indf2
 12412  0005A0  D001               	goto	i2u214_41
 12413  0005A2  D001               	goto	i2u214_40
 12414  0005A4                     i2u214_41:
 12415  0005A4  D01E               	goto	i2l19003
 12416  0005A6                     i2u214_40:
 12417                           	
 12418  0005A6                     i2l18999:; BSR set to: 0
 12419                           
 12420  0005A6  0100               	movlb	0	; () banked
 12421  0005A8  0100               	movlb	0	; () banked
 12422  0005AA  67DA               	tstfsz	((i2c_int_handler@msg_ready))&0ffh
 12423  0005AC  D001               	goto	i2u215_41
 12424  0005AE  D001               	goto	i2u215_40
 12425  0005B0                     i2u215_41:
 12426  0005B0  D018               	goto	i2l19003
 12427  0005B2                     i2u215_40:
 12428                           	line	245
 12429                           	
 12430  0005B2                     i2l19001:; BSR set to: 0
 12431                           
 12432                           ;my_i2c.c: 245: ic_ptr->status = 0x5;
 12433  0005B2  EE20 F00C          	lfsr	2,0Ch
 12434  0005B6  504A               	movf	((c:_ic_ptr)),c,w
 12435  0005B8  26D9               	addwf	fsr2l
 12436  0005BA  504B               	movf	((c:_ic_ptr+1)),c,w
 12437  0005BC  22DA               	addwfc	fsr2h
 12438  0005BE  0E05               	movlw	low(05h)
 12439  0005C0  6EDF               	movwf	indf2
 12440                           	line	246
 12441                           ;my_i2c.c: 246: ic_ptr->error_count++;
 12442  0005C2  EE20 F00E          	lfsr	2,0Eh
 12443  0005C6  504A               	movf	((c:_ic_ptr)),c,w
 12444  0005C8  26D9               	addwf	fsr2l
 12445  0005CA  504B               	movf	((c:_ic_ptr+1)),c,w
 12446  0005CC  22DA               	addwfc	fsr2h
 12447  0005CE  2ADF               	incf	indf2
 12448                           
 12449                           	line	247
 12450                           ;my_i2c.c: 247: ic_ptr->error_code = 0x7;
 12451  0005D0  EE20 F00D          	lfsr	2,0Dh
 12452  0005D4  504A               	movf	((c:_ic_ptr)),c,w
 12453  0005D6  26D9               	addwf	fsr2l
 12454  0005D8  504B               	movf	((c:_ic_ptr+1)),c,w
 12455  0005DA  22DA               	addwfc	fsr2h
 12456  0005DC  0E07               	movlw	low(07h)
 12457  0005DE  6EDF               	movwf	indf2
 12458  0005E0  D000               	goto	i2l19003
 12459                           	line	248
 12460                           	
 12461  0005E2                     i2l7395:; BSR set to: 0
 12462                           
 12463                           	line	250
 12464                           	
 12465  0005E2                     i2l19003:; BSR set to: 0
 12466                           
 12467                           ;my_i2c.c: 248: }
 12468                           ;my_i2c.c: 250: if (msg_ready) {
 12469  0005E2  0100               	movlb	0	; () banked
 12470  0005E4  0100               	movlb	0	; () banked
 12471  0005E6  51DA               	movf	((i2c_int_handler@msg_ready))&0ffh,w
 12472  0005E8  B4D8               	btfsc	status,2
 12473  0005EA  D001               	goto	i2u216_41
 12474  0005EC  D001               	goto	i2u216_40
 12475  0005EE                     i2u216_41:
 12476  0005EE  D050               	goto	i2l19013
 12477  0005F0                     i2u216_40:
 12478                           	line	254
 12479                           	
 12480  0005F0                     i2l19005:; BSR set to: 0
 12481                           
 12482                           ;my_i2c.c: 252: unsigned char data[10];
 12483                           ;my_i2c.c: 253: unsigned char msgtype;
 12484                           ;my_i2c.c: 254: int length = FromMainLow_recvmsg(10, &msgtype, (void *) data);
 12485  0005F0  0100               	movlb	0	; () banked
 12486  0005F2  6FC2               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12487  0005F4  0E0A               	movlw	low(0Ah)
 12488  0005F6  0100               	movlb	0	; () banked
 12489  0005F8  0100               	movlb	0	; () banked
 12490  0005FA  6FBD               	movwf	((?_FromMainLow_recvmsg))&0ffh
 12491  0005FC  0100               	movlb	0	; () banked
 12492  0005FE  51C2               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 12493  000600  0100               	movlb	0	; () banked
 12494  000602  0E00               	movlw	high(i2c_int_handler@msgtype)
 12495  000604  0100               	movlb	0	; () banked
 12496  000606  0100               	movlb	0	; () banked
 12497  000608  6FBF               	movwf	(1+(?_FromMainLow_recvmsg+01h))&0ffh
 12498  00060A  0100               	movlb	0	; () banked
 12499  00060C  0ED8               	movlw	low(i2c_int_handler@msgtype)
 12500  00060E  0100               	movlb	0	; () banked
 12501  000610  6FBE               	movwf	(0+(?_FromMainLow_recvmsg+01h))&0ffh
 12502  000612  0100               	movlb	0	; () banked
 12503  000614  0E00               	movlw	high(i2c_int_handler@data)
 12504  000616  0100               	movlb	0	; () banked
 12505  000618  0100               	movlb	0	; () banked
 12506  00061A  6FC1               	movwf	(1+(?_FromMainLow_recvmsg+03h))&0ffh
 12507  00061C  0100               	movlb	0	; () banked
 12508  00061E  0EC4               	movlw	low(i2c_int_handler@data)
 12509  000620  0100               	movlb	0	; () banked
 12510  000622  6FC0               	movwf	(0+(?_FromMainLow_recvmsg+03h))&0ffh
 12511  000624  0100               	movlb	0	; () banked
 12512  000626  EC5D  F00D         	call	_FromMainLow_recvmsg	;wreg free
 12513  00062A  0100               	movlb	0	; () banked
 12514  00062C  0100               	movlb	0	; () banked
 12515  00062E  6FD5               	movwf	((i2c_int_handler@length))&0ffh
 12516  000630  0100               	movlb	0	; () banked
 12517  000632  6BD6               	clrf	((i2c_int_handler@length+1))&0ffh
 12518  000634  0100               	movlb	0	; () banked
 12519  000636  BFD5               	btfsc	((i2c_int_handler@length))&0ffh,7
 12520  000638  07D6               	decf	((i2c_int_handler@length+1))&0ffh
 12521                           	line	255
 12522                           	
 12523  00063A                     i2l19007:; BSR set to: 0
 12524                           
 12525                           ;my_i2c.c: 255: if(length > 0){
 12526  00063A  0100               	movlb	0	; () banked
 12527  00063C  0100               	movlb	0	; () banked
 12528  00063E  51D6               	movf	((i2c_int_handler@length+1))&0ffh,w
 12529  000640  0A80               	xorlw	80h
 12530  000642  0F80               	addlw	-((0)^80h)
 12531  000644  0E01               	movlw	01h
 12532  000646  B4D8               	btfsc	status,2
 12533  000648  5DD5               	subwf	((i2c_int_handler@length))&0ffh,w
 12534  00064A  A0D8               	btfss	status,0
 12535  00064C  D001               	goto	i2u217_41
 12536  00064E  D001               	goto	i2u217_40
 12537  000650                     i2u217_41:
 12538  000650  D00B               	goto	i2l7397
 12539  000652                     i2u217_40:
 12540                           	line	256
 12541                           	
 12542  000652                     i2l19009:; BSR set to: 0
 12543                           
 12544                           ;my_i2c.c: 256: start_i2c_slave_reply(length, data);
 12545  000652  C0D5  F032         	movff	(i2c_int_handler@length),(c:?_start_i2c_slave_reply)
 12546  000656  0100               	movlb	0	; () banked
 12547  000658  0E00               	movlw	high(i2c_int_handler@data)
 12548  00065A  6E34               	movwf	(1+((c:?_start_i2c_slave_reply)+01h)),c
 12549  00065C  0100               	movlb	0	; () banked
 12550  00065E  0EC4               	movlw	low(i2c_int_handler@data)
 12551  000660  6E33               	movwf	(0+((c:?_start_i2c_slave_reply)+01h)),c
 12552  000662  EC09  F008         	call	_start_i2c_slave_reply	;wreg free
 12553                           	line	257
 12554                           ;my_i2c.c: 257: }
 12555  000666  D063               	goto	i2l19021
 12556                           	line	258
 12557                           	
 12558  000668                     i2l7397:; BSR set to: 0
 12559                           
 12560                           	line	260
 12561                           ;my_i2c.c: 258: else {
 12562                           ;my_i2c.c: 260: unsigned char empty[] = {0x0,0x0};
 12563  000668  C080  F0CE         	movff	(i2c_int_handler@F5030),(i2c_int_handler@empty)
 12564  00066C  C081  F0CF         	movff	(i2c_int_handler@F5030+1),(i2c_int_handler@empty+1)
 12565                           	line	261
 12566                           	
 12567  000670                     i2l19011:; BSR set to: 0
 12568                           
 12569                           ;my_i2c.c: 261: start_i2c_slave_reply(2,empty);
 12570  000670  0100               	movlb	0	; () banked
 12571  000672  6FC2               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12572  000674  0E02               	movlw	low(02h)
 12573  000676  6E32               	movwf	((c:?_start_i2c_slave_reply)),c
 12574  000678  0100               	movlb	0	; () banked
 12575  00067A  51C2               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 12576  00067C  0100               	movlb	0	; () banked
 12577  00067E  0E00               	movlw	high(i2c_int_handler@empty)
 12578  000680  6E34               	movwf	(1+((c:?_start_i2c_slave_reply)+01h)),c
 12579  000682  0100               	movlb	0	; () banked
 12580  000684  0ECE               	movlw	low(i2c_int_handler@empty)
 12581  000686  6E33               	movwf	(0+((c:?_start_i2c_slave_reply)+01h)),c
 12582  000688  EC09  F008         	call	_start_i2c_slave_reply	;wreg free
 12583  00068C  D050               	goto	i2l19021
 12584                           	line	262
 12585                           	
 12586  00068E                     i2l7398:
 12587                           	line	265
 12588                           ;my_i2c.c: 262: }
 12589                           ;my_i2c.c: 265: } else if (ic_ptr->error_count >= 1) {
 12590  00068E  D04F               	goto	i2l19021
 12591                           	
 12592  000690                     i2l7396:
 12593                           	
 12594  000690                     i2l19013:
 12595  000690  EE20 F00E          	lfsr	2,0Eh
 12596  000694  504A               	movf	((c:_ic_ptr)),c,w
 12597  000696  26D9               	addwf	fsr2l
 12598  000698  504B               	movf	((c:_ic_ptr+1)),c,w
 12599  00069A  22DA               	addwfc	fsr2h
 12600  00069C  50DF               	movf	indf2,w
 12601  00069E  B4D8               	btfsc	status,2
 12602  0006A0  D001               	goto	i2u218_41
 12603  0006A2  D001               	goto	i2u218_40
 12604  0006A4                     i2u218_41:
 12605  0006A4  D044               	goto	i2l19021
 12606  0006A6                     i2u218_40:
 12607                           	line	266
 12608                           	
 12609  0006A6                     i2l19015:
 12610                           ;my_i2c.c: 266: error_buf[0] = ic_ptr->error_count;
 12611  0006A6  EE20 F00E          	lfsr	2,0Eh
 12612  0006AA  504A               	movf	((c:_ic_ptr)),c,w
 12613  0006AC  26D9               	addwf	fsr2l
 12614  0006AE  504B               	movf	((c:_ic_ptr+1)),c,w
 12615  0006B0  22DA               	addwfc	fsr2h
 12616  0006B2  50DF               	movf	indf2,w
 12617  0006B4  0100               	movlb	0	; () banked
 12618  0006B6  0100               	movlb	0	; () banked
 12619  0006B8  6FD0               	movwf	((i2c_int_handler@error_buf))&0ffh
 12620                           	line	267
 12621                           ;my_i2c.c: 267: error_buf[1] = ic_ptr->error_code;
 12622  0006BA  EE20 F00D          	lfsr	2,0Dh
 12623  0006BE  504A               	movf	((c:_ic_ptr)),c,w
 12624  0006C0  26D9               	addwf	fsr2l
 12625  0006C2  504B               	movf	((c:_ic_ptr+1)),c,w
 12626  0006C4  22DA               	addwfc	fsr2h
 12627  0006C6  50DF               	movf	indf2,w
 12628  0006C8  0100               	movlb	0	; () banked
 12629  0006CA  0100               	movlb	0	; () banked
 12630  0006CC  6FD1               	movwf	(0+(i2c_int_handler@error_buf+01h))&0ffh
 12631                           	line	268
 12632                           ;my_i2c.c: 268: error_buf[2] = ic_ptr->event_count;
 12633  0006CE  EE20 F00B          	lfsr	2,0Bh
 12634  0006D2  504A               	movf	((c:_ic_ptr)),c,w
 12635  0006D4  26D9               	addwf	fsr2l
 12636  0006D6  504B               	movf	((c:_ic_ptr+1)),c,w
 12637  0006D8  22DA               	addwfc	fsr2h
 12638  0006DA  50DF               	movf	indf2,w
 12639  0006DC  0100               	movlb	0	; () banked
 12640  0006DE  0100               	movlb	0	; () banked
 12641  0006E0  6FD2               	movwf	(0+(i2c_int_handler@error_buf+02h))&0ffh
 12642                           	line	269
 12643                           	
 12644  0006E2                     i2l19017:; BSR set to: 0
 12645                           
 12646                           ;my_i2c.c: 269: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
 12647  0006E2  0100               	movlb	0	; () banked
 12648  0006E4  6FC2               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12649  0006E6  0E03               	movlw	low(03h)
 12650  0006E8  0100               	movlb	0	; () banked
 12651  0006EA  0100               	movlb	0	; () banked
 12652  0006EC  6FBD               	movwf	((?_ToMainHigh_sendmsg))&0ffh
 12653  0006EE  0100               	movlb	0	; () banked
 12654  0006F0  51C2               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 12655  0006F2  0100               	movlb	0	; () banked
 12656  0006F4  6FC3               	movwf	(??_i2c_int_handler+1+0)&0ffh
 12657  0006F6  0E29               	movlw	low(029h)
 12658  0006F8  0100               	movlb	0	; () banked
 12659  0006FA  0100               	movlb	0	; () banked
 12660  0006FC  6FBE               	movwf	(0+(?_ToMainHigh_sendmsg+01h))&0ffh
 12661  0006FE  0100               	movlb	0	; () banked
 12662  000700  51C3               	movf	(??_i2c_int_handler+1+0)&0ffh,w
 12663  000702  0100               	movlb	0	; () banked
 12664  000704  0E00               	movlw	high(i2c_int_handler@error_buf)
 12665  000706  0100               	movlb	0	; () banked
 12666  000708  0100               	movlb	0	; () banked
 12667  00070A  6FC0               	movwf	(1+(?_ToMainHigh_sendmsg+02h))&0ffh
 12668  00070C  0100               	movlb	0	; () banked
 12669  00070E  0ED0               	movlw	low(i2c_int_handler@error_buf)
 12670  000710  0100               	movlb	0	; () banked
 12671  000712  6FBF               	movwf	(0+(?_ToMainHigh_sendmsg+02h))&0ffh
 12672  000714  0100               	movlb	0	; () banked
 12673  000716  ECCF  F00D         	call	_ToMainHigh_sendmsg	;wreg free
 12674                           	line	270
 12675                           	
 12676  00071A                     i2l19019:
 12677                           ;my_i2c.c: 270: ic_ptr->error_count = 0;
 12678  00071A  EE20 F00E          	lfsr	2,0Eh
 12679  00071E  504A               	movf	((c:_ic_ptr)),c,w
 12680  000720  26D9               	addwf	fsr2l
 12681  000722  504B               	movf	((c:_ic_ptr+1)),c,w
 12682  000724  22DA               	addwfc	fsr2h
 12683  000726  0E00               	movlw	low(0)
 12684  000728  6EDF               	movwf	indf2
 12685  00072A  D001               	goto	i2l19021
 12686                           	line	271
 12687                           	
 12688  00072C                     i2l7402:
 12689  00072C  D000               	goto	i2l19021
 12690                           	line	272
 12691                           	
 12692  00072E                     i2l7401:
 12693                           	
 12694  00072E                     i2l19021:
 12695                           ;my_i2c.c: 271: }
 12696                           ;my_i2c.c: 272: if (msg_to_send) {
 12697  00072E  0100               	movlb	0	; () banked
 12698  000730  0100               	movlb	0	; () banked
 12699  000732  51D9               	movf	((i2c_int_handler@msg_to_send))&0ffh,w
 12700  000734  B4D8               	btfsc	status,2
 12701  000736  D001               	goto	i2u219_41
 12702  000738  D001               	goto	i2u219_40
 12703  00073A                     i2u219_41:
 12704  00073A  D009               	goto	i2l7404
 12705  00073C                     i2u219_40:
 12706                           	line	279
 12707                           	
 12708  00073C                     i2l19023:; BSR set to: 0
 12709                           
 12710                           ;my_i2c.c: 279: msg_to_send = 0;
 12711  00073C  0100               	movlb	0	; () banked
 12712  00073E  6FC2               	movwf	(??_i2c_int_handler+0+0)&0ffh
 12713  000740  0E00               	movlw	low(0)
 12714  000742  0100               	movlb	0	; () banked
 12715  000744  0100               	movlb	0	; () banked
 12716  000746  6FD9               	movwf	((i2c_int_handler@msg_to_send))&0ffh
 12717  000748  0100               	movlb	0	; () banked
 12718  00074A  51C2               	movf	(??_i2c_int_handler+0+0)&0ffh,w
 12719  00074C  D000               	goto	i2l7404
 12720                           	line	280
 12721                           	
 12722  00074E                     i2l7403:; BSR set to: 0
 12723                           
 12724                           	line	281
 12725                           	
 12726  00074E                     i2l7404:; BSR set to: 0
 12727                           
 12728  00074E  0012               	return
 12729                           	opt stack 0
 12730                           GLOBAL	__end_of_i2c_int_handler
 12731  000750                     	__end_of_i2c_int_handler:
 12732                           	signat	_i2c_int_handler,88
 12733                           	global	_timer0_int_handler
 12734                           
 12735 ;; *************** function _timer0_int_handler *****************
 12736 ;; Defined at:
 12737 ;;		line 17 in file "../src/user_interrupts.c"
 12738 ;; Parameters:    Size  Location     Type
 12739 ;;		None
 12740 ;; Auto vars:     Size  Location     Type
 12741 ;;  val             2   16[BANK0 ] unsigned int 
 12742 ;;  length          2   14[BANK0 ] int 
 12743 ;;  msgtype         2   12[BANK0 ] int 
 12744 ;; Return value:  Size  Location     Type
 12745 ;;		None               void
 12746 ;; Registers used:
 12747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12748 ;; Tracked objects:
 12749 ;;		On entry : 0/0
 12750 ;;		On exit  : 0/0
 12751 ;;		Unchanged: 0/0
 12752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12753 ;;      Params:         0       0       0       0       0
 12754 ;;      Locals:         0       6       0       0       0
 12755 ;;      Temps:          0       2       0       0       0
 12756 ;;      Totals:         0       8       0       0       0
 12757 ;;Total ram usage:        8 bytes
 12758 ;; Hardware stack levels used:    1
 12759 ;; Hardware stack levels required when called:    3
 12760 ;; This function calls:
 12761 ;;		_WriteTimer0
 12762 ;;		_FromMainHigh_recvmsg
 12763 ;;		_ToMainHigh_sendmsg
 12764 ;; This function is called by:
 12765 ;;		_InterruptHandlerHigh
 12766 ;; This function uses a non-reentrant model
 12767 ;;
 12768                           psect	text41,class=CODE,space=0,reloc=2
 12769                           global __ptext41
 12770  000F52                     __ptext41:
 12771                           psect	text41
 12772                           	file	"../src/user_interrupts.c"
 12773                           	line	17
 12774                           	global	__size_of_timer0_int_handler
 12775  0000                     	__size_of_timer0_int_handler	equ	__end_of_timer0_int_handler-_timer0_int_handler
 12776                           	
 12777  000F52                     _timer0_int_handler:; BSR set to: 0
 12778                           
 12779                           	opt	stack 17
 12780                           	line	22
 12781                           	
 12782  000F52                     i2l19025:
 12783                           ;user_interrupts.c: 18: unsigned int val;
 12784                           ;user_interrupts.c: 19: int length, msgtype;
 12785                           ;user_interrupts.c: 22: LATBbits.LATB0 = !LATBbits.LATB0;
 12786                           	
 12787  000F52  A08A               	btfss	((c:3978)),c,0	;volatile
 12788  000F54  D001               	goto	i2u220_41
 12789  000F56  D002               	goto	i2u220_40
 12790  000F58                     i2u220_41:
 12791  000F58  0E01               	movlw	1
 12792  000F5A  D001               	goto	i2u220_46
 12793  000F5C                     i2u220_40:
 12794  000F5C  0E00               	movlw	0
 12795  000F5E                     i2u220_46:
 12796  000F5E  0100               	movlb	0	; () banked
 12797  000F60  6FC2               	movwf	(??_timer0_int_handler+0+0)&0ffh
 12798  000F62  508A               	movf	((c:3978)),c,w	;volatile
 12799  000F64  0100               	movlb	0	; () banked
 12800  000F66  19C2               	xorwf	((??_timer0_int_handler+0+0))&0ffh,w
 12801  000F68  0BFE               	andlw	not ((1<<1)-1)
 12802  000F6A  19C2               	xorwf	((??_timer0_int_handler+0+0))&0ffh,w
 12803  000F6C  6E8A               	movwf	((c:3978)),c	;volatile
 12804                           	line	24
 12805                           	
 12806  000F6E                     i2l19027:; BSR set to: 0
 12807                           
 12808                           ;user_interrupts.c: 24: WriteTimer0(0);
 12809  000F6E  0E00               	movlw	high(0)
 12810  000F70  6E33               	movwf	((c:?_WriteTimer0+1)),c
 12811  000F72  0E00               	movlw	low(0)
 12812  000F74  6E32               	movwf	((c:?_WriteTimer0)),c
 12813  000F76  EC22  F00E         	call	_WriteTimer0	;wreg free
 12814                           	line	26
 12815                           	
 12816  000F7A                     i2l19029:
 12817                           ;user_interrupts.c: 26: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)(uns
                                 igned int)&msgtype, (void *) &val);
 12818  000F7A  0100               	movlb	0	; () banked
 12819  000F7C  6FC2               	movwf	(??_timer0_int_handler+0+0)&0ffh
 12820  000F7E  0E02               	movlw	low(02h)
 12821  000F80  0100               	movlb	0	; () banked
 12822  000F82  0100               	movlb	0	; () banked
 12823  000F84  6FBD               	movwf	((?_FromMainHigh_recvmsg))&0ffh
 12824  000F86  0100               	movlb	0	; () banked
 12825  000F88  51C2               	movf	(??_timer0_int_handler+0+0)&0ffh,w
 12826  000F8A  0100               	movlb	0	; () banked
 12827  000F8C  0E00               	movlw	high(timer0_int_handler@msgtype)
 12828  000F8E  0100               	movlb	0	; () banked
 12829  000F90  0100               	movlb	0	; () banked
 12830  000F92  6FBF               	movwf	(1+(?_FromMainHigh_recvmsg+01h))&0ffh
 12831  000F94  0100               	movlb	0	; () banked
 12832  000F96  0EC4               	movlw	low(timer0_int_handler@msgtype)
 12833  000F98  0100               	movlb	0	; () banked
 12834  000F9A  6FBE               	movwf	(0+(?_FromMainHigh_recvmsg+01h))&0ffh
 12835  000F9C  0100               	movlb	0	; () banked
 12836  000F9E  0E00               	movlw	high(timer0_int_handler@val)
 12837  000FA0  0100               	movlb	0	; () banked
 12838  000FA2  0100               	movlb	0	; () banked
 12839  000FA4  6FC1               	movwf	(1+(?_FromMainHigh_recvmsg+03h))&0ffh
 12840  000FA6  0100               	movlb	0	; () banked
 12841  000FA8  0EC8               	movlw	low(timer0_int_handler@val)
 12842  000FAA  0100               	movlb	0	; () banked
 12843  000FAC  6FC0               	movwf	(0+(?_FromMainHigh_recvmsg+03h))&0ffh
 12844  000FAE  0100               	movlb	0	; () banked
 12845  000FB0  EC71  F00D         	call	_FromMainHigh_recvmsg	;wreg free
 12846  000FB4  0100               	movlb	0	; () banked
 12847  000FB6  0100               	movlb	0	; () banked
 12848  000FB8  6FC6               	movwf	((timer0_int_handler@length))&0ffh
 12849  000FBA  0100               	movlb	0	; () banked
 12850  000FBC  6BC7               	clrf	((timer0_int_handler@length+1))&0ffh
 12851  000FBE  0100               	movlb	0	; () banked
 12852  000FC0  BFC6               	btfsc	((timer0_int_handler@length))&0ffh,7
 12853  000FC2  07C7               	decf	((timer0_int_handler@length+1))&0ffh
 12854                           	line	27
 12855                           	
 12856  000FC4                     i2l19031:; BSR set to: 0
 12857                           
 12858                           ;user_interrupts.c: 27: if (length == sizeof (val)) {
 12859  000FC4  0100               	movlb	0	; () banked
 12860  000FC6  0100               	movlb	0	; () banked
 12861  000FC8  51C6               	movf	((timer0_int_handler@length))&0ffh,w
 12862  000FCA  0A02               	xorlw	2
 12863  000FCC  11C7               	iorwf ((timer0_int_handler@length+1))&0ffh,w
 12864                           
 12865  000FCE  A4D8               	btfss	status,2
 12866  000FD0  D001               	goto	i2u221_41
 12867  000FD2  D001               	goto	i2u221_40
 12868  000FD4                     i2u221_41:
 12869  000FD4  D01D               	goto	i2l16384
 12870  000FD6                     i2u221_40:
 12871                           	line	28
 12872                           	
 12873  000FD6                     i2l19033:; BSR set to: 0
 12874                           
 12875                           ;user_interrupts.c: 28: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
 12876  000FD6  0100               	movlb	0	; () banked
 12877  000FD8  6FC2               	movwf	(??_timer0_int_handler+0+0)&0ffh
 12878  000FDA  0E02               	movlw	low(02h)
 12879  000FDC  0100               	movlb	0	; () banked
 12880  000FDE  0100               	movlb	0	; () banked
 12881  000FE0  6FBD               	movwf	((?_ToMainHigh_sendmsg))&0ffh
 12882  000FE2  0100               	movlb	0	; () banked
 12883  000FE4  51C2               	movf	(??_timer0_int_handler+0+0)&0ffh,w
 12884  000FE6  0100               	movlb	0	; () banked
 12885  000FE8  6FC3               	movwf	(??_timer0_int_handler+1+0)&0ffh
 12886  000FEA  0E0A               	movlw	low(0Ah)
 12887  000FEC  0100               	movlb	0	; () banked
 12888  000FEE  0100               	movlb	0	; () banked
 12889  000FF0  6FBE               	movwf	(0+(?_ToMainHigh_sendmsg+01h))&0ffh
 12890  000FF2  0100               	movlb	0	; () banked
 12891  000FF4  51C3               	movf	(??_timer0_int_handler+1+0)&0ffh,w
 12892  000FF6  0100               	movlb	0	; () banked
 12893  000FF8  0E00               	movlw	high(timer0_int_handler@val)
 12894  000FFA  0100               	movlb	0	; () banked
 12895  000FFC  0100               	movlb	0	; () banked
 12896  000FFE  6FC0               	movwf	(1+(?_ToMainHigh_sendmsg+02h))&0ffh
 12897  001000  0100               	movlb	0	; () banked
 12898  001002  0EC8               	movlw	low(timer0_int_handler@val)
 12899  001004  0100               	movlb	0	; () banked
 12900  001006  6FBF               	movwf	(0+(?_ToMainHigh_sendmsg+02h))&0ffh
 12901  001008  0100               	movlb	0	; () banked
 12902  00100A  ECCF  F00D         	call	_ToMainHigh_sendmsg	;wreg free
 12903  00100E  D000               	goto	i2l16384
 12904                           	line	29
 12905                           	
 12906  001010                     i2l16383:
 12907                           	line	30
 12908                           	
 12909  001010                     i2l16384:
 12910  001010  0012               	return
 12911                           	opt stack 0
 12912                           GLOBAL	__end_of_timer0_int_handler
 12913  001012                     	__end_of_timer0_int_handler:
 12914                           	signat	_timer0_int_handler,88
 12915                           	global	_SleepIfOkay
 12916                           
 12917 ;; *************** function _SleepIfOkay *****************
 12918 ;; Defined at:
 12919 ;;		line 228 in file "../src/messages.c"
 12920 ;; Parameters:    Size  Location     Type
 12921 ;;		None
 12922 ;; Auto vars:     Size  Location     Type
 12923 ;;		None
 12924 ;; Return value:  Size  Location     Type
 12925 ;;		None               void
 12926 ;; Registers used:
 12927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12928 ;; Tracked objects:
 12929 ;;		On entry : 0/0
 12930 ;;		On exit  : 0/0
 12931 ;;		Unchanged: 0/0
 12932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12933 ;;      Params:         0       0       0       0       0
 12934 ;;      Locals:         0       0       0       0       0
 12935 ;;      Temps:          0       0       0       0       0
 12936 ;;      Totals:         0       0       0       0       0
 12937 ;;Total ram usage:        0 bytes
 12938 ;; Hardware stack levels used:    1
 12939 ;; Hardware stack levels required when called:    2
 12940 ;; This function calls:
 12941 ;;		i2_in_low_int
 12942 ;;		i2_in_high_int
 12943 ;;		i2_check_msg
 12944 ;;		_enter_sleep_mode
 12945 ;; This function is called by:
 12946 ;;		_InterruptHandlerHigh
 12947 ;; This function uses a non-reentrant model
 12948 ;;
 12949                           psect	text42,class=CODE,space=0,reloc=2
 12950                           global __ptext42
 12951  001528                     __ptext42:
 12952                           psect	text42
 12953                           	file	"../src/messages.c"
 12954                           	line	228
 12955                           	global	__size_of_SleepIfOkay
 12956  0000                     	__size_of_SleepIfOkay	equ	__end_of_SleepIfOkay-_SleepIfOkay
 12957                           	
 12958  001528                     _SleepIfOkay:
 12959                           	opt	stack 18
 12960                           	line	230
 12961                           	
 12962  001528                     i2l18251:
 12963                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
 12964  001528  6648               	tstfsz	((c:_MQ_Main_Willing_to_block)),c
 12965  00152A  D001               	goto	i2u133_41
 12966  00152C  D001               	goto	i2u133_40
 12967  00152E                     i2u133_41:
 12968  00152E  D002               	goto	i2l18255
 12969  001530                     i2u133_40:
 12970  001530  D035               	goto	i2l5527
 12971                           	line	231
 12972                           	
 12973  001532                     i2l18253:
 12974                           ;messages.c: 231: return;
 12975  001532  D034               	goto	i2l5527
 12976                           	line	232
 12977                           	
 12978  001534                     i2l5526:
 12979                           	line	235
 12980                           	
 12981  001534                     i2l18255:
 12982                           ;messages.c: 232: }
 12983                           ;messages.c: 235: if (in_low_int()) {
 12984  001534  EC52  F00C         	call	i2_in_low_int	;wreg free
 12985  001538  5035               	movf	(1+?i2_in_low_int),c,w
 12986  00153A  1034               	iorwf (0+?i2_in_low_int),c,w
 12987                           
 12988  00153C  B4D8               	btfsc	status,2
 12989  00153E  D001               	goto	i2u134_41
 12990  001540  D001               	goto	i2u134_40
 12991  001542                     i2u134_41:
 12992  001542  D002               	goto	i2l18259
 12993  001544                     i2u134_40:
 12994  001544  D02B               	goto	i2l5527
 12995                           	line	236
 12996                           	
 12997  001546                     i2l18257:
 12998                           ;messages.c: 236: return;
 12999  001546  D02A               	goto	i2l5527
 13000                           	line	237
 13001                           	
 13002  001548                     i2l5528:
 13003                           	line	240
 13004                           	
 13005  001548                     i2l18259:
 13006                           ;messages.c: 237: }
 13007                           ;messages.c: 240: if (!in_high_int()) {
 13008  001548  EC2B  F00E         	call	i2_in_high_int	;wreg free
 13009  00154C  5033               	movf	(1+?i2_in_high_int),c,w
 13010  00154E  1032               	iorwf (0+?i2_in_high_int),c,w
 13011                           
 13012  001550  A4D8               	btfss	status,2
 13013  001552  D001               	goto	i2u135_41
 13014  001554  D001               	goto	i2u135_40
 13015  001556                     i2u135_41:
 13016  001556  D002               	goto	i2l18263
 13017  001558                     i2u135_40:
 13018  001558  D021               	goto	i2l5527
 13019                           	line	241
 13020                           	
 13021  00155A                     i2l18261:
 13022                           ;messages.c: 241: return;
 13023  00155A  D020               	goto	i2l5527
 13024                           	line	242
 13025                           	
 13026  00155C                     i2l5529:
 13027                           	line	247
 13028                           	
 13029  00155C                     i2l18263:
 13030                           ;messages.c: 242: }
 13031                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
 13032  00155C  0101               	movlb	1	; () banked
 13033  00155E  0E01               	movlw	high(_ToMainHigh_MQ)
 13034  001560  6E33               	movwf	((c:?i2_check_msg+1)),c
 13035  001562  0101               	movlb	1	; () banked
 13036  001564  0E6C               	movlw	low(_ToMainHigh_MQ)
 13037  001566  6E32               	movwf	((c:?i2_check_msg)),c
 13038  001568  EC98  F00D         	call	i2_check_msg	;wreg free
 13039  00156C  0900               	iorlw	0
 13040  00156E  B4D8               	btfsc	status,2
 13041  001570  D001               	goto	i2u136_41
 13042  001572  D001               	goto	i2u136_40
 13043  001574                     i2u136_41:
 13044  001574  D002               	goto	i2l18267
 13045  001576                     i2u136_40:
 13046  001576  D012               	goto	i2l5527
 13047                           	line	248
 13048                           	
 13049  001578                     i2l18265:
 13050                           ;messages.c: 248: return;
 13051  001578  D011               	goto	i2l5527
 13052                           	line	249
 13053                           	
 13054  00157A                     i2l5530:
 13055                           	line	250
 13056                           	
 13057  00157A                     i2l18267:
 13058                           ;messages.c: 249: }
 13059                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
 13060  00157A  0100               	movlb	0	; () banked
 13061  00157C  0E00               	movlw	high(_ToMainLow_MQ)
 13062  00157E  6E33               	movwf	((c:?i2_check_msg+1)),c
 13063  001580  0100               	movlb	0	; () banked
 13064  001582  0E82               	movlw	low(_ToMainLow_MQ)
 13065  001584  6E32               	movwf	((c:?i2_check_msg)),c
 13066  001586  EC98  F00D         	call	i2_check_msg	;wreg free
 13067  00158A  0900               	iorlw	0
 13068  00158C  B4D8               	btfsc	status,2
 13069  00158E  D001               	goto	i2u137_41
 13070  001590  D001               	goto	i2u137_40
 13071  001592                     i2u137_41:
 13072  001592  D002               	goto	i2l18271
 13073  001594                     i2u137_40:
 13074  001594  D003               	goto	i2l5527
 13075                           	line	251
 13076                           	
 13077  001596                     i2l18269:
 13078                           ;messages.c: 251: return;
 13079  001596  D002               	goto	i2l5527
 13080                           	line	252
 13081                           	
 13082  001598                     i2l5531:
 13083                           	line	253
 13084                           	
 13085  001598                     i2l18271:
 13086                           ;messages.c: 252: }
 13087                           ;messages.c: 253: enter_sleep_mode();
 13088  001598  EC41  F00E         	call	_enter_sleep_mode	;wreg free
 13089                           	line	254
 13090                           	
 13091  00159C                     i2l5527:
 13092  00159C  0012               	return
 13093                           	opt stack 0
 13094                           GLOBAL	__end_of_SleepIfOkay
 13095  00159E                     	__end_of_SleepIfOkay:
 13096                           	signat	_SleepIfOkay,88
 13097                           	global	_ToMainHigh_sendmsg
 13098                           
 13099 ;; *************** function _ToMainHigh_sendmsg *****************
 13100 ;; Defined at:
 13101 ;;		line 126 in file "../src/messages.c"
 13102 ;; Parameters:    Size  Location     Type
 13103 ;;  length          1    5[BANK0 ] unsigned char 
 13104 ;;  msgtype         1    6[BANK0 ] unsigned char 
 13105 ;;  data            2    7[BANK0 ] PTR void 
 13106 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@error_buf(3), 
 13107 ;; Auto vars:     Size  Location     Type
 13108 ;;		None
 13109 ;; Return value:  Size  Location     Type
 13110 ;;                  1    wreg      char 
 13111 ;; Registers used:
 13112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13113 ;; Tracked objects:
 13114 ;;		On entry : 0/0
 13115 ;;		On exit  : 0/0
 13116 ;;		Unchanged: 0/0
 13117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13118 ;;      Params:         0       4       0       0       0
 13119 ;;      Locals:         0       0       0       0       0
 13120 ;;      Temps:          0       0       0       0       0
 13121 ;;      Totals:         0       4       0       0       0
 13122 ;;Total ram usage:        4 bytes
 13123 ;; Hardware stack levels used:    1
 13124 ;; Hardware stack levels required when called:    2
 13125 ;; This function calls:
 13126 ;;		i2_send_msg
 13127 ;; This function is called by:
 13128 ;;		_i2c_int_handler
 13129 ;;		_timer0_int_handler
 13130 ;; This function uses a non-reentrant model
 13131 ;;
 13132                           psect	text43,class=CODE,space=0,reloc=2
 13133                           global __ptext43
 13134  001B9E                     __ptext43:
 13135                           psect	text43
 13136                           	file	"../src/messages.c"
 13137                           	line	126
 13138                           	global	__size_of_ToMainHigh_sendmsg
 13139  0000                     	__size_of_ToMainHigh_sendmsg	equ	__end_of_ToMainHigh_sendmsg-_ToMainHigh_sendmsg
 13140                           	
 13141  001B9E                     _ToMainHigh_sendmsg:
 13142                           	opt	stack 17
 13143                           	line	132
 13144                           	
 13145  001B9E                     i2l19337:
 13146                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
 13147                           ;	Return value of _ToMainHigh_sendmsg is never used
 13148  001B9E  0101               	movlb	1	; () banked
 13149  001BA0  0E01               	movlw	high(_ToMainHigh_MQ)
 13150  001BA2  6E3D               	movwf	((c:?i2_send_msg+1)),c
 13151  001BA4  0101               	movlb	1	; () banked
 13152  001BA6  0E6C               	movlw	low(_ToMainHigh_MQ)
 13153  001BA8  6E3C               	movwf	((c:?i2_send_msg)),c
 13154  001BAA  C0BD  F03E         	movff	(ToMainHigh_sendmsg@length),0+((c:?i2_send_msg)+02h)
 13155  001BAE  C0BE  F03F         	movff	(ToMainHigh_sendmsg@msgtype),0+((c:?i2_send_msg)+03h)
 13156  001BB2  C0BF  F040         	movff	(ToMainHigh_sendmsg@data),0+((c:?i2_send_msg)+04h)
 13157  001BB6  C0C0  F041         	movff	(ToMainHigh_sendmsg@data+1),1+((c:?i2_send_msg)+04h)
 13158  001BBA  ECD2  F006         	call	i2_send_msg	;wreg free
 13159  001BBE  D000               	goto	i2l5493
 13160                           	
 13161  001BC0                     i2l19339:
 13162                           	line	133
 13163                           	
 13164  001BC0                     i2l5493:
 13165  001BC0  0012               	return
 13166                           	opt stack 0
 13167                           GLOBAL	__end_of_ToMainHigh_sendmsg
 13168  001BC2                     	__end_of_ToMainHigh_sendmsg:
 13169                           	signat	_ToMainHigh_sendmsg,12409
 13170                           	global	_FromMainLow_recvmsg
 13171                           
 13172 ;; *************** function _FromMainLow_recvmsg *****************
 13173 ;; Defined at:
 13174 ;;		line 159 in file "../src/messages.c"
 13175 ;; Parameters:    Size  Location     Type
 13176 ;;  maxlength       1    5[BANK0 ] unsigned char 
 13177 ;;  msgtype         2    6[BANK0 ] PTR unsigned char 
 13178 ;;		 -> i2c_int_handler@msgtype(1), 
 13179 ;;  data            2    8[BANK0 ] PTR void 
 13180 ;;		 -> i2c_int_handler@data(10), 
 13181 ;; Auto vars:     Size  Location     Type
 13182 ;;		None
 13183 ;; Return value:  Size  Location     Type
 13184 ;;                  1    wreg      char 
 13185 ;; Registers used:
 13186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13187 ;; Tracked objects:
 13188 ;;		On entry : 0/0
 13189 ;;		On exit  : 0/0
 13190 ;;		Unchanged: 0/0
 13191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13192 ;;      Params:         0       5       0       0       0
 13193 ;;      Locals:         0       0       0       0       0
 13194 ;;      Temps:          0       0       0       0       0
 13195 ;;      Totals:         0       5       0       0       0
 13196 ;;Total ram usage:        5 bytes
 13197 ;; Hardware stack levels used:    1
 13198 ;; Hardware stack levels required when called:    2
 13199 ;; This function calls:
 13200 ;;		i2_recv_msg
 13201 ;; This function is called by:
 13202 ;;		_i2c_int_handler
 13203 ;; This function uses a non-reentrant model
 13204 ;;
 13205                           psect	text44,class=CODE,space=0,reloc=2
 13206                           global __ptext44
 13207  001ABA                     __ptext44:
 13208                           psect	text44
 13209                           	file	"../src/messages.c"
 13210                           	line	159
 13211                           	global	__size_of_FromMainLow_recvmsg
 13212  0000                     	__size_of_FromMainLow_recvmsg	equ	__end_of_FromMainLow_recvmsg-_FromMainLow_recvmsg
 13213                           	
 13214  001ABA                     _FromMainLow_recvmsg:
 13215                           	opt	stack 17
 13216                           	line	165
 13217                           	
 13218  001ABA                     i2l19341:
 13219                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
 13220  001ABA  0101               	movlb	1	; () banked
 13221  001ABC  0E01               	movlw	high(_FromMainLow_MQ)
 13222  001ABE  6E3D               	movwf	((c:?i2_recv_msg+1)),c
 13223  001AC0  0101               	movlb	1	; () banked
 13224  001AC2  0E36               	movlw	low(_FromMainLow_MQ)
 13225  001AC4  6E3C               	movwf	((c:?i2_recv_msg)),c
 13226  001AC6  C0BD  F03E         	movff	(FromMainLow_recvmsg@maxlength),0+((c:?i2_recv_msg)+02h)
 13227  001ACA  C0BE  F03F         	movff	(FromMainLow_recvmsg@msgtype),0+((c:?i2_recv_msg)+03h)
 13228  001ACE  C0BF  F040         	movff	(FromMainLow_recvmsg@msgtype+1),1+((c:?i2_recv_msg)+03h)
 13229  001AD2  C0C0  F041         	movff	(FromMainLow_recvmsg@data),0+((c:?i2_recv_msg)+05h)
 13230  001AD6  C0C1  F042         	movff	(FromMainLow_recvmsg@data+1),1+((c:?i2_recv_msg)+05h)
 13231  001ADA  ECC5  F005         	call	i2_recv_msg	;wreg free
 13232  001ADE  D000               	goto	i2l5504
 13233                           	
 13234  001AE0                     i2l19343:
 13235                           	line	166
 13236                           	
 13237  001AE0                     i2l5504:
 13238  001AE0  0012               	return
 13239                           	opt stack 0
 13240                           GLOBAL	__end_of_FromMainLow_recvmsg
 13241  001AE2                     	__end_of_FromMainLow_recvmsg:
 13242                           	signat	_FromMainLow_recvmsg,12409
 13243                           	global	_FromMainHigh_recvmsg
 13244                           
 13245 ;; *************** function _FromMainHigh_recvmsg *****************
 13246 ;; Defined at:
 13247 ;;		line 183 in file "../src/messages.c"
 13248 ;; Parameters:    Size  Location     Type
 13249 ;;  maxlength       1    5[BANK0 ] unsigned char 
 13250 ;;  msgtype         2    6[BANK0 ] PTR unsigned char 
 13251 ;;		 -> RAM(1023), 
 13252 ;;  data            2    8[BANK0 ] PTR void 
 13253 ;;		 -> timer0_int_handler@val(2), 
 13254 ;; Auto vars:     Size  Location     Type
 13255 ;;		None
 13256 ;; Return value:  Size  Location     Type
 13257 ;;                  1    wreg      char 
 13258 ;; Registers used:
 13259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13260 ;; Tracked objects:
 13261 ;;		On entry : 0/0
 13262 ;;		On exit  : 0/0
 13263 ;;		Unchanged: 0/0
 13264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13265 ;;      Params:         0       5       0       0       0
 13266 ;;      Locals:         0       0       0       0       0
 13267 ;;      Temps:          0       0       0       0       0
 13268 ;;      Totals:         0       5       0       0       0
 13269 ;;Total ram usage:        5 bytes
 13270 ;; Hardware stack levels used:    1
 13271 ;; Hardware stack levels required when called:    2
 13272 ;; This function calls:
 13273 ;;		i2_recv_msg
 13274 ;; This function is called by:
 13275 ;;		_timer0_int_handler
 13276 ;; This function uses a non-reentrant model
 13277 ;;
 13278                           psect	text45,class=CODE,space=0,reloc=2
 13279                           global __ptext45
 13280  001AE2                     __ptext45:
 13281                           psect	text45
 13282                           	file	"../src/messages.c"
 13283                           	line	183
 13284                           	global	__size_of_FromMainHigh_recvmsg
 13285  0000                     	__size_of_FromMainHigh_recvmsg	equ	__end_of_FromMainHigh_recvmsg-_FromMainHigh_recvmsg
 13286                           	
 13287  001AE2                     _FromMainHigh_recvmsg:
 13288                           	opt	stack 17
 13289                           	line	189
 13290                           	
 13291  001AE2                     i2l19349:
 13292                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
 13293  001AE2  0101               	movlb	1	; () banked
 13294  001AE4  0E01               	movlw	high(_FromMainHigh_MQ)
 13295  001AE6  6E3D               	movwf	((c:?i2_recv_msg+1)),c
 13296  001AE8  0101               	movlb	1	; () banked
 13297  001AEA  0E00               	movlw	low(_FromMainHigh_MQ)
 13298  001AEC  6E3C               	movwf	((c:?i2_recv_msg)),c
 13299  001AEE  C0BD  F03E         	movff	(FromMainHigh_recvmsg@maxlength),0+((c:?i2_recv_msg)+02h)
 13300  001AF2  C0BE  F03F         	movff	(FromMainHigh_recvmsg@msgtype),0+((c:?i2_recv_msg)+03h)
 13301  001AF6  C0BF  F040         	movff	(FromMainHigh_recvmsg@msgtype+1),1+((c:?i2_recv_msg)+03h)
 13302  001AFA  C0C0  F041         	movff	(FromMainHigh_recvmsg@data),0+((c:?i2_recv_msg)+05h)
 13303  001AFE  C0C1  F042         	movff	(FromMainHigh_recvmsg@data+1),1+((c:?i2_recv_msg)+05h)
 13304  001B02  ECC5  F005         	call	i2_recv_msg	;wreg free
 13305  001B06  D000               	goto	i2l5512
 13306                           	
 13307  001B08                     i2l19351:
 13308                           	line	190
 13309                           	
 13310  001B08                     i2l5512:
 13311  001B08  0012               	return
 13312                           	opt stack 0
 13313                           GLOBAL	__end_of_FromMainHigh_recvmsg
 13314  001B0A                     	__end_of_FromMainHigh_recvmsg:
 13315                           	signat	_FromMainHigh_recvmsg,12409
 13316                           	global	_enter_sleep_mode
 13317                           
 13318 ;; *************** function _enter_sleep_mode *****************
 13319 ;; Defined at:
 13320 ;;		line 202 in file "../src/messages.c"
 13321 ;; Parameters:    Size  Location     Type
 13322 ;;		None
 13323 ;; Auto vars:     Size  Location     Type
 13324 ;;		None
 13325 ;; Return value:  Size  Location     Type
 13326 ;;		None               void
 13327 ;; Registers used:
 13328 ;;		None
 13329 ;; Tracked objects:
 13330 ;;		On entry : 0/0
 13331 ;;		On exit  : 0/0
 13332 ;;		Unchanged: 0/0
 13333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13334 ;;      Params:         0       0       0       0       0
 13335 ;;      Locals:         0       0       0       0       0
 13336 ;;      Temps:          0       0       0       0       0
 13337 ;;      Totals:         0       0       0       0       0
 13338 ;;Total ram usage:        0 bytes
 13339 ;; Hardware stack levels used:    1
 13340 ;; This function calls:
 13341 ;;		Nothing
 13342 ;; This function is called by:
 13343 ;;		_SleepIfOkay
 13344 ;; This function uses a non-reentrant model
 13345 ;;
 13346                           psect	text46,class=CODE,space=0,reloc=2
 13347                           global __ptext46
 13348  001C82                     __ptext46:
 13349                           psect	text46
 13350                           	file	"../src/messages.c"
 13351                           	line	202
 13352                           	global	__size_of_enter_sleep_mode
 13353  0000                     	__size_of_enter_sleep_mode	equ	__end_of_enter_sleep_mode-_enter_sleep_mode
 13354                           	
 13355  001C82                     _enter_sleep_mode:
 13356                           	opt	stack 19
 13357                           	line	204
 13358                           	
 13359  001C82                     i2l18577:
 13360                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
 13361  001C82  8ED3               	bsf	((c:4051)),c,7	;volatile
 13362                           	line	213
 13363                           # 213 "../src/messages.c"
 13364  001C84  0003               SLEEP ;# 
 13365                           	line	215
 13366                           # 215 "../src/messages.c"
 13367                           # 214 ;# 
 13368                           psect	text46
 13369                           	line	218
 13370                           	
 13371  001C86                     i2l5520:
 13372  001C86  0012               	return
 13373                           	opt stack 0
 13374                           GLOBAL	__end_of_enter_sleep_mode
 13375  001C88                     	__end_of_enter_sleep_mode:
 13376                           	signat	_enter_sleep_mode,88
 13377                           	global	_start_i2c_slave_reply
 13378                           
 13379 ;; *************** function _start_i2c_slave_reply *****************
 13380 ;; Defined at:
 13381 ;;		line 53 in file "../src/my_i2c.c"
 13382 ;; Parameters:    Size  Location     Type
 13383 ;;  length          1   49[COMRAM] unsigned char 
 13384 ;;  msg             2   50[COMRAM] PTR unsigned char 
 13385 ;;		 -> i2c_int_handler@empty(2), i2c_int_handler@data(10), 
 13386 ;; Auto vars:     Size  Location     Type
 13387 ;;		None
 13388 ;; Return value:  Size  Location     Type
 13389 ;;		None               void
 13390 ;; Registers used:
 13391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13392 ;; Tracked objects:
 13393 ;;		On entry : 0/0
 13394 ;;		On exit  : 0/0
 13395 ;;		Unchanged: 0/0
 13396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13397 ;;      Params:         3       0       0       0       0
 13398 ;;      Locals:         0       0       0       0       0
 13399 ;;      Temps:          2       0       0       0       0
 13400 ;;      Totals:         5       0       0       0       0
 13401 ;;Total ram usage:        5 bytes
 13402 ;; Hardware stack levels used:    1
 13403 ;; This function calls:
 13404 ;;		Nothing
 13405 ;; This function is called by:
 13406 ;;		_i2c_int_handler
 13407 ;; This function uses a non-reentrant model
 13408 ;;
 13409                           psect	text47,class=CODE,space=0,reloc=2
 13410                           global __ptext47
 13411  001012                     __ptext47:
 13412                           psect	text47
 13413                           	file	"../src/my_i2c.c"
 13414                           	line	53
 13415                           	global	__size_of_start_i2c_slave_reply
 13416  0000                     	__size_of_start_i2c_slave_reply	equ	__end_of_start_i2c_slave_reply-_start_i2c_slave_rep
                                 ly
 13417                           	
 13418  001012                     _start_i2c_slave_reply:
 13419                           	opt	stack 19
 13420                           	line	55
 13421                           	
 13422  001012                     i2l18587:
 13423                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
                                 ++) {
 13424  001012  EE20 F019          	lfsr	2,019h
 13425  001016  504A               	movf	((c:_ic_ptr)),c,w
 13426  001018  26D9               	addwf	fsr2l
 13427  00101A  504B               	movf	((c:_ic_ptr+1)),c,w
 13428  00101C  22DA               	addwfc	fsr2h
 13429  00101E  0E00               	movlw	low(0)
 13430  001020  6EDF               	movwf	indf2
 13431  001022  D02E               	goto	i2l18593
 13432                           	
 13433  001024                     i2l7343:
 13434                           	line	56
 13435                           	
 13436  001024                     i2l18589:
 13437                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
 13438  001024  EE20 F019          	lfsr	2,019h
 13439  001028  504A               	movf	((c:_ic_ptr)),c,w
 13440  00102A  26D9               	addwf	fsr2l
 13441  00102C  504B               	movf	((c:_ic_ptr+1)),c,w
 13442  00102E  22DA               	addwfc	fsr2h
 13443  001030  50DF               	movf	indf2,w
 13444  001032  6E35               	movwf	(??_start_i2c_slave_reply+0+0)&0ffh,c
 13445  001034  5035               	movf	((??_start_i2c_slave_reply+0+0)),c,w
 13446  001036  0D01               	mullw	01h
 13447  001038  50F3               	movf	(prodl),c,w
 13448  00103A  2433               	addwf	((c:start_i2c_slave_reply@msg)),c,w
 13449  00103C  6ED9               	movwf	c:fsr2l
 13450  00103E  50F4               	movf	(prodh),c,w
 13451  001040  2034               	addwfc	((c:start_i2c_slave_reply@msg+1)),c,w
 13452  001042  6EDA               	movwf	1+c:fsr2l
 13453  001044  EE10 F019          	lfsr	1,019h
 13454  001048  504A               	movf	((c:_ic_ptr)),c,w
 13455  00104A  26E1               	addwf	fsr1l
 13456  00104C  504B               	movf	((c:_ic_ptr+1)),c,w
 13457  00104E  22E2               	addwfc	fsr1h
 13458  001050  50E7               	movf	indf1,w
 13459  001052  6E36               	movwf	(??_start_i2c_slave_reply+1+0)&0ffh,c
 13460  001054  5036               	movf	((??_start_i2c_slave_reply+1+0)),c,w
 13461  001056  0D01               	mullw	01h
 13462  001058  0E0F               	movlw	0Fh
 13463  00105A  26F3               	addwf	(prodl),c
 13464  00105C  0E00               	movlw	0
 13465  00105E  22F4               	addwfc	(prodh),c
 13466  001060  50F3               	movf	(prodl),c,w
 13467  001062  244A               	addwf	((c:_ic_ptr)),c,w
 13468  001064  6EE1               	movwf	c:fsr1l
 13469  001066  50F4               	movf	(prodh),c,w
 13470  001068  204B               	addwfc	((c:_ic_ptr+1)),c,w
 13471  00106A  6EE2               	movwf	1+c:fsr1l
 13472  00106C  CFDF FFE7          	movff	indf2,indf1
 13473                           	line	55
 13474                           	
 13475  001070                     i2l18591:
 13476  001070  EE20 F019          	lfsr	2,019h
 13477  001074  504A               	movf	((c:_ic_ptr)),c,w
 13478  001076  26D9               	addwf	fsr2l
 13479  001078  504B               	movf	((c:_ic_ptr+1)),c,w
 13480  00107A  22DA               	addwfc	fsr2h
 13481  00107C  2ADF               	incf	indf2
 13482                           
 13483  00107E  D000               	goto	i2l18593
 13484                           	
 13485  001080                     i2l7342:
 13486                           	
 13487  001080                     i2l18593:
 13488  001080  EE20 F019          	lfsr	2,019h
 13489  001084  504A               	movf	((c:_ic_ptr)),c,w
 13490  001086  26D9               	addwf	fsr2l
 13491  001088  504B               	movf	((c:_ic_ptr+1)),c,w
 13492  00108A  22DA               	addwfc	fsr2h
 13493  00108C  50DF               	movf	indf2,w
 13494  00108E  6E35               	movwf	(??_start_i2c_slave_reply+0+0)&0ffh,c
 13495  001090  5032               	movf	((c:start_i2c_slave_reply@length)),c,w
 13496  001092  5C35               	subwf	((??_start_i2c_slave_reply+0+0)),c,w
 13497  001094  A0D8               	btfss	status,0
 13498  001096  D001               	goto	i2u164_41
 13499  001098  D001               	goto	i2u164_40
 13500  00109A                     i2u164_41:
 13501  00109A  D7C4               	goto	i2l18589
 13502  00109C                     i2u164_40:
 13503  00109C  D000               	goto	i2l18595
 13504                           	
 13505  00109E                     i2l7344:
 13506                           	line	58
 13507                           	
 13508  00109E                     i2l18595:
 13509                           ;my_i2c.c: 57: }
 13510                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
 13511  00109E  EE20 F019          	lfsr	2,019h
 13512  0010A2  504A               	movf	((c:_ic_ptr)),c,w
 13513  0010A4  26D9               	addwf	fsr2l
 13514  0010A6  504B               	movf	((c:_ic_ptr+1)),c,w
 13515  0010A8  22DA               	addwfc	fsr2h
 13516  0010AA  C032  FFDF         	movff	(c:start_i2c_slave_reply@length),indf2
 13517                           
 13518                           	line	59
 13519                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
 13520  0010AE  EE20 F01A          	lfsr	2,01Ah
 13521  0010B2  504A               	movf	((c:_ic_ptr)),c,w
 13522  0010B4  26D9               	addwf	fsr2l
 13523  0010B6  504B               	movf	((c:_ic_ptr+1)),c,w
 13524  0010B8  22DA               	addwfc	fsr2h
 13525  0010BA  0E01               	movlw	low(01h)
 13526  0010BC  6EDF               	movwf	indf2
 13527                           	line	62
 13528                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
 13529  0010BE  EE20 F00F          	lfsr	2,0Fh
 13530  0010C2  504A               	movf	((c:_ic_ptr)),c,w
 13531  0010C4  26D9               	addwf	fsr2l
 13532  0010C6  504B               	movf	((c:_ic_ptr+1)),c,w
 13533  0010C8  22DA               	addwfc	fsr2h
 13534  0010CA  50DF               	movf	indf2,w
 13535  0010CC  6EC9               	movwf	((c:4041)),c	;volatile
 13536                           	line	65
 13537                           	
 13538  0010CE                     i2l18597:
 13539                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
 13540  0010CE  88C6               	bsf	((c:4038)),c,4	;volatile
 13541                           	line	67
 13542                           	
 13543  0010D0                     i2l7345:
 13544  0010D0  0012               	return
 13545                           	opt stack 0
 13546                           GLOBAL	__end_of_start_i2c_slave_reply
 13547  0010D2                     	__end_of_start_i2c_slave_reply:
 13548                           	signat	_start_i2c_slave_reply,8312
 13549                           	global	_handle_start
 13550                           
 13551 ;; *************** function _handle_start *****************
 13552 ;; Defined at:
 13553 ;;		line 71 in file "../src/my_i2c.c"
 13554 ;; Parameters:    Size  Location     Type
 13555 ;;  data_read       1   49[COMRAM] unsigned char 
 13556 ;; Auto vars:     Size  Location     Type
 13557 ;;		None
 13558 ;; Return value:  Size  Location     Type
 13559 ;;		None               void
 13560 ;; Registers used:
 13561 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13562 ;; Tracked objects:
 13563 ;;		On entry : 0/0
 13564 ;;		On exit  : 0/0
 13565 ;;		Unchanged: 0/0
 13566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13567 ;;      Params:         1       0       0       0       0
 13568 ;;      Locals:         0       0       0       0       0
 13569 ;;      Temps:          0       0       0       0       0
 13570 ;;      Totals:         1       0       0       0       0
 13571 ;;Total ram usage:        1 bytes
 13572 ;; Hardware stack levels used:    1
 13573 ;; This function calls:
 13574 ;;		Nothing
 13575 ;; This function is called by:
 13576 ;;		_i2c_int_handler
 13577 ;; This function uses a non-reentrant model
 13578 ;;
 13579                           psect	text48,class=CODE,space=0,reloc=2
 13580                           global __ptext48
 13581  0012EE                     __ptext48:
 13582                           psect	text48
 13583                           	file	"../src/my_i2c.c"
 13584                           	line	71
 13585                           	global	__size_of_handle_start
 13586  0000                     	__size_of_handle_start	equ	__end_of_handle_start-_handle_start
 13587                           	
 13588  0012EE                     _handle_start:
 13589                           	opt	stack 19
 13590                           	line	72
 13591                           	
 13592  0012EE                     i2l18599:
 13593                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
 13594  0012EE  EE20 F00B          	lfsr	2,0Bh
 13595  0012F2  504A               	movf	((c:_ic_ptr)),c,w
 13596  0012F4  26D9               	addwf	fsr2l
 13597  0012F6  504B               	movf	((c:_ic_ptr+1)),c,w
 13598  0012F8  22DA               	addwfc	fsr2h
 13599  0012FA  0E01               	movlw	low(01h)
 13600  0012FC  6EDF               	movwf	indf2
 13601                           	line	73
 13602                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
 13603  0012FE  EE20 F00A          	lfsr	2,0Ah
 13604  001302  504A               	movf	((c:_ic_ptr)),c,w
 13605  001304  26D9               	addwf	fsr2l
 13606  001306  504B               	movf	((c:_ic_ptr+1)),c,w
 13607  001308  22DA               	addwfc	fsr2h
 13608  00130A  0E00               	movlw	low(0)
 13609  00130C  6EDF               	movwf	indf2
 13610                           	line	75
 13611                           	
 13612  00130E                     i2l18601:
 13613                           ;my_i2c.c: 75: if (data_read) {
 13614  00130E  5032               	movf	((c:handle_start@data_read)),c,w
 13615  001310  B4D8               	btfsc	status,2
 13616  001312  D001               	goto	i2u165_41
 13617  001314  D001               	goto	i2u165_40
 13618  001316                     i2u165_41:
 13619  001316  D034               	goto	i2l18611
 13620  001318                     i2u165_40:
 13621                           	line	76
 13622                           	
 13623  001318                     i2l18603:
 13624                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
 13625                           	
 13626  001318  AAC7               	btfss	((c:4039)),c,5	;volatile
 13627  00131A  D001               	goto	i2u166_41
 13628  00131C  D001               	goto	i2u166_40
 13629  00131E                     i2u166_41:
 13630  00131E  D018               	goto	i2l7349
 13631  001320                     i2u166_40:
 13632                           	line	79
 13633                           	
 13634  001320                     i2l18605:
 13635                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
 13636  001320  EE20 F00C          	lfsr	2,0Ch
 13637  001324  504A               	movf	((c:_ic_ptr)),c,w
 13638  001326  26D9               	addwf	fsr2l
 13639  001328  504B               	movf	((c:_ic_ptr+1)),c,w
 13640  00132A  22DA               	addwfc	fsr2h
 13641  00132C  0E05               	movlw	low(05h)
 13642  00132E  6EDF               	movwf	indf2
 13643                           	line	80
 13644                           ;my_i2c.c: 80: ic_ptr->error_count++;
 13645  001330  EE20 F00E          	lfsr	2,0Eh
 13646  001334  504A               	movf	((c:_ic_ptr)),c,w
 13647  001336  26D9               	addwf	fsr2l
 13648  001338  504B               	movf	((c:_ic_ptr+1)),c,w
 13649  00133A  22DA               	addwfc	fsr2h
 13650  00133C  2ADF               	incf	indf2
 13651                           
 13652                           	line	81
 13653                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
 13654  00133E  EE20 F00D          	lfsr	2,0Dh
 13655  001342  504A               	movf	((c:_ic_ptr)),c,w
 13656  001344  26D9               	addwf	fsr2l
 13657  001346  504B               	movf	((c:_ic_ptr+1)),c,w
 13658  001348  22DA               	addwfc	fsr2h
 13659  00134A  0E05               	movlw	low(05h)
 13660  00134C  6EDF               	movwf	indf2
 13661                           	line	82
 13662                           ;my_i2c.c: 82: } else {
 13663  00134E  D021               	goto	i2l7354
 13664                           	
 13665  001350                     i2l7349:
 13666                           	line	83
 13667                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
 13668                           	
 13669  001350  A4C7               	btfss	((c:4039)),c,2	;volatile
 13670  001352  D001               	goto	i2u167_41
 13671  001354  D001               	goto	i2u167_40
 13672  001356                     i2u167_41:
 13673  001356  D009               	goto	i2l18609
 13674  001358                     i2u167_40:
 13675                           	line	84
 13676                           	
 13677  001358                     i2l18607:
 13678                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
 13679  001358  EE20 F00C          	lfsr	2,0Ch
 13680  00135C  504A               	movf	((c:_ic_ptr)),c,w
 13681  00135E  26D9               	addwf	fsr2l
 13682  001360  504B               	movf	((c:_ic_ptr+1)),c,w
 13683  001362  22DA               	addwfc	fsr2h
 13684  001364  0E08               	movlw	low(08h)
 13685  001366  6EDF               	movwf	indf2
 13686                           	line	85
 13687                           ;my_i2c.c: 85: } else {
 13688  001368  D014               	goto	i2l7354
 13689                           	
 13690  00136A                     i2l7351:
 13691                           	line	86
 13692                           	
 13693  00136A                     i2l18609:
 13694                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
 13695  00136A  EE20 F00C          	lfsr	2,0Ch
 13696  00136E  504A               	movf	((c:_ic_ptr)),c,w
 13697  001370  26D9               	addwf	fsr2l
 13698  001372  504B               	movf	((c:_ic_ptr+1)),c,w
 13699  001374  22DA               	addwfc	fsr2h
 13700  001376  0E07               	movlw	low(07h)
 13701  001378  6EDF               	movwf	indf2
 13702  00137A  D00B               	goto	i2l7354
 13703                           	line	87
 13704                           	
 13705  00137C                     i2l7352:
 13706  00137C  D00A               	goto	i2l7354
 13707                           	line	88
 13708                           	
 13709  00137E                     i2l7350:
 13710                           	line	89
 13711                           ;my_i2c.c: 87: }
 13712                           ;my_i2c.c: 88: }
 13713                           ;my_i2c.c: 89: } else {
 13714  00137E  D009               	goto	i2l7354
 13715                           	
 13716  001380                     i2l7348:
 13717                           	line	90
 13718                           	
 13719  001380                     i2l18611:
 13720                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
 13721  001380  EE20 F00C          	lfsr	2,0Ch
 13722  001384  504A               	movf	((c:_ic_ptr)),c,w
 13723  001386  26D9               	addwf	fsr2l
 13724  001388  504B               	movf	((c:_ic_ptr+1)),c,w
 13725  00138A  22DA               	addwfc	fsr2h
 13726  00138C  0E06               	movlw	low(06h)
 13727  00138E  6EDF               	movwf	indf2
 13728  001390  D000               	goto	i2l7354
 13729                           	line	91
 13730                           	
 13731  001392                     i2l7353:
 13732                           	line	92
 13733                           	
 13734  001392                     i2l7354:
 13735  001392  0012               	return
 13736                           	opt stack 0
 13737                           GLOBAL	__end_of_handle_start
 13738  001394                     	__end_of_handle_start:
 13739                           	signat	_handle_start,4216
 13740                           	global	_WriteTimer0
 13741                           
 13742 ;; *************** function _WriteTimer0 *****************
 13743 ;; Defined at:
 13744 ;;		line 17 in file "plib/Timers/t0write.c"
 13745 ;; Parameters:    Size  Location     Type
 13746 ;;  timer0          2   49[COMRAM] unsigned int 
 13747 ;; Auto vars:     Size  Location     Type
 13748 ;;  timer           2   51[COMRAM] struct Timers
 13749 ;; Return value:  Size  Location     Type
 13750 ;;		None               void
 13751 ;; Registers used:
 13752 ;;		None
 13753 ;; Tracked objects:
 13754 ;;		On entry : 0/0
 13755 ;;		On exit  : 0/0
 13756 ;;		Unchanged: 0/0
 13757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13758 ;;      Params:         2       0       0       0       0
 13759 ;;      Locals:         2       0       0       0       0
 13760 ;;      Temps:          0       0       0       0       0
 13761 ;;      Totals:         4       0       0       0       0
 13762 ;;Total ram usage:        4 bytes
 13763 ;; Hardware stack levels used:    1
 13764 ;; This function calls:
 13765 ;;		Nothing
 13766 ;; This function is called by:
 13767 ;;		_timer0_int_handler
 13768 ;; This function uses a non-reentrant model
 13769 ;;
 13770                           psect	text49,class=CODE,space=0,reloc=2
 13771                           global __ptext49
 13772  001C44                     __ptext49:
 13773                           psect	text49
 13774                           	file	"plib/Timers/t0write.c"
 13775                           	line	17
 13776                           	global	__size_of_WriteTimer0
 13777  0000                     	__size_of_WriteTimer0	equ	__end_of_WriteTimer0-_WriteTimer0
 13778                           	
 13779  001C44                     _WriteTimer0:
 13780                           	opt	stack 19
 13781                           	line	20
 13782                           	
 13783  001C44                     i2l18645:
 13784  001C44  C032  F034         	movff	(c:WriteTimer0@timer0),(c:WriteTimer0@timer)
 13785  001C48  C033  F035         	movff	(c:WriteTimer0@timer0+1),(c:WriteTimer0@timer+1)
 13786                           	line	22
 13787  001C4C  C035  FFD7         	movff	0+((c:WriteTimer0@timer)+01h),(c:4055)	;volatile
 13788                           	line	23
 13789  001C50  C034  FFD6         	movff	(c:WriteTimer0@timer),(c:4054)	;volatile
 13790                           	line	24
 13791                           	
 13792  001C54                     i2l16434:
 13793  001C54  0012               	return
 13794                           	opt stack 0
 13795                           GLOBAL	__end_of_WriteTimer0
 13796  001C56                     	__end_of_WriteTimer0:
 13797                           	signat	_WriteTimer0,4216
 13798                           	global	i2_in_low_int
 13799                           
 13800 ;; *************** function i2_in_low_int *****************
 13801 ;; Defined at:
 13802 ;;		line 30 in file "../src/interrupts.c"
 13803 ;; Parameters:    Size  Location     Type
 13804 ;;		None
 13805 ;; Auto vars:     Size  Location     Type
 13806 ;;		None
 13807 ;; Return value:  Size  Location     Type
 13808 ;;                  2   51[COMRAM] int 
 13809 ;; Registers used:
 13810 ;;		wreg, status,2, status,0, cstack
 13811 ;; Tracked objects:
 13812 ;;		On entry : 0/0
 13813 ;;		On exit  : 0/0
 13814 ;;		Unchanged: 0/0
 13815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13816 ;;      Params:         2       0       0       0       0
 13817 ;;      Locals:         0       0       0       0       0
 13818 ;;      Temps:          0       0       0       0       0
 13819 ;;      Totals:         2       0       0       0       0
 13820 ;;Total ram usage:        2 bytes
 13821 ;; Hardware stack levels used:    1
 13822 ;; Hardware stack levels required when called:    1
 13823 ;; This function calls:
 13824 ;;		i2_in_high_int
 13825 ;; This function is called by:
 13826 ;;		_SleepIfOkay
 13827 ;; This function uses a non-reentrant model
 13828 ;;
 13829                           psect	text50,class=CODE,space=0,reloc=2
 13830                           global __ptext50
 13831  0018A4                     __ptext50:
 13832                           psect	text50
 13833                           	file	"../src/interrupts.c"
 13834                           	line	30
 13835                           	global	__size_ofi2_in_low_int
 13836  0000                     	__size_ofi2_in_low_int	equ	__end_ofi2_in_low_int-i2_in_low_int
 13837                           	
 13838  0018A4                     i2_in_low_int:
 13839                           	opt	stack 18
 13840                           	line	31
 13841                           	
 13842  0018A4                     i2l18651:
 13843                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
 13844                           	
 13845  0018A4  ACF2               	btfss	((c:4082)),c,6	;volatile
 13846  0018A6  D001               	goto	i2u173_41
 13847  0018A8  D001               	goto	i2u173_40
 13848  0018AA                     i2u173_41:
 13849  0018AA  D007               	goto	i2l18659
 13850  0018AC                     i2u173_40:
 13851                           	line	32
 13852                           	
 13853  0018AC                     i2l18653:
 13854                           ;interrupts.c: 32: return (0);
 13855  0018AC  0E00               	movlw	high(0)
 13856  0018AE  6E35               	movwf	((c:?i2_in_low_int+1)),c
 13857  0018B0  0E00               	movlw	low(0)
 13858  0018B2  6E34               	movwf	((c:?i2_in_low_int)),c
 13859  0018B4  D018               	goto	i2l1809
 13860                           	
 13861  0018B6                     i2l18655:
 13862  0018B6  D017               	goto	i2l1809
 13863                           	line	33
 13864                           	
 13865  0018B8                     i2l18657:
 13866                           ;interrupts.c: 33: } else if (in_high_int()) {
 13867  0018B8  D016               	goto	i2l1809
 13868                           	
 13869  0018BA                     i2l1808:
 13870                           	
 13871  0018BA                     i2l18659:
 13872  0018BA  EC2B  F00E         	call	i2_in_high_int	;wreg free
 13873  0018BE  5033               	movf	(1+?i2_in_high_int),c,w
 13874  0018C0  1032               	iorwf (0+?i2_in_high_int),c,w
 13875                           
 13876  0018C2  B4D8               	btfsc	status,2
 13877  0018C4  D001               	goto	i2u174_41
 13878  0018C6  D001               	goto	i2u174_40
 13879  0018C8                     i2u174_41:
 13880  0018C8  D007               	goto	i2l18667
 13881  0018CA                     i2u174_40:
 13882                           	line	34
 13883                           	
 13884  0018CA                     i2l18661:
 13885                           ;interrupts.c: 34: return (0);
 13886  0018CA  0E00               	movlw	high(0)
 13887  0018CC  6E35               	movwf	((c:?i2_in_low_int+1)),c
 13888  0018CE  0E00               	movlw	low(0)
 13889  0018D0  6E34               	movwf	((c:?i2_in_low_int)),c
 13890  0018D2  D009               	goto	i2l1809
 13891                           	
 13892  0018D4                     i2l18663:
 13893  0018D4  D008               	goto	i2l1809
 13894                           	line	35
 13895                           	
 13896  0018D6                     i2l18665:
 13897                           ;interrupts.c: 35: } else {
 13898  0018D6  D007               	goto	i2l1809
 13899                           	
 13900  0018D8                     i2l1811:
 13901                           	line	36
 13902                           	
 13903  0018D8                     i2l18667:
 13904                           ;interrupts.c: 36: return (1);
 13905  0018D8  0E00               	movlw	high(01h)
 13906  0018DA  6E35               	movwf	((c:?i2_in_low_int+1)),c
 13907  0018DC  0E01               	movlw	low(01h)
 13908  0018DE  6E34               	movwf	((c:?i2_in_low_int)),c
 13909  0018E0  D002               	goto	i2l1809
 13910                           	
 13911  0018E2                     i2l18669:
 13912  0018E2  D001               	goto	i2l1809
 13913                           	line	37
 13914                           	
 13915  0018E4                     i2l1812:
 13916  0018E4  D000               	goto	i2l1809
 13917                           	
 13918  0018E6                     i2l1810:
 13919                           	line	38
 13920                           	
 13921  0018E6                     i2l1809:
 13922  0018E6  0012               	return
 13923                           	opt stack 0
 13924                           GLOBAL	__end_ofi2_in_low_int
 13925  0018E8                     	__end_ofi2_in_low_int:
 13926                           	signat	i2_in_low_int,90
 13927                           	global	i2_in_high_int
 13928                           
 13929 ;; *************** function i2_in_high_int *****************
 13930 ;; Defined at:
 13931 ;;		line 22 in file "../src/interrupts.c"
 13932 ;; Parameters:    Size  Location     Type
 13933 ;;		None
 13934 ;; Auto vars:     Size  Location     Type
 13935 ;;		None
 13936 ;; Return value:  Size  Location     Type
 13937 ;;                  2   49[COMRAM] int 
 13938 ;; Registers used:
 13939 ;;		wreg, status,2
 13940 ;; Tracked objects:
 13941 ;;		On entry : 0/0
 13942 ;;		On exit  : 0/0
 13943 ;;		Unchanged: 0/0
 13944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13945 ;;      Params:         2       0       0       0       0
 13946 ;;      Locals:         0       0       0       0       0
 13947 ;;      Temps:          0       0       0       0       0
 13948 ;;      Totals:         2       0       0       0       0
 13949 ;;Total ram usage:        2 bytes
 13950 ;; Hardware stack levels used:    1
 13951 ;; This function calls:
 13952 ;;		Nothing
 13953 ;; This function is called by:
 13954 ;;		_SleepIfOkay
 13955 ;;		i2_in_low_int
 13956 ;; This function uses a non-reentrant model
 13957 ;;
 13958                           psect	text51,class=CODE,space=0,reloc=2
 13959                           global __ptext51
 13960  001C56                     __ptext51:
 13961                           psect	text51
 13962                           	file	"../src/interrupts.c"
 13963                           	line	22
 13964                           	global	__size_ofi2_in_high_int
 13965  0000                     	__size_ofi2_in_high_int	equ	__end_ofi2_in_high_int-i2_in_high_int
 13966                           	
 13967  001C56                     i2_in_high_int:
 13968                           	opt	stack 19
 13969                           	line	23
 13970                           	
 13971  001C56                     i2l18647:
 13972                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
 13973                           	
 13974  001C56  0E00               	movlw	0
 13975  001C58  AEF2               	btfss	((c:4082)),c,7	;volatile
 13976  001C5A  0E01               	movlw	1
 13977  001C5C  6E32               	movwf	((c:?i2_in_high_int)),c
 13978  001C5E  6A33               	clrf	((c:?i2_in_high_int+1)),c
 13979  001C60  D000               	goto	i2l1802
 13980                           	
 13981  001C62                     i2l18649:
 13982                           	line	24
 13983                           	
 13984  001C62                     i2l1802:
 13985  001C62  0012               	return
 13986                           	opt stack 0
 13987                           GLOBAL	__end_ofi2_in_high_int
 13988  001C64                     	__end_ofi2_in_high_int:
 13989                           	signat	i2_in_high_int,90
 13990                           	global	i2_send_msg
 13991                           
 13992 ;; *************** function i2_send_msg *****************
 13993 ;; Defined at:
 13994 ;;		line 24 in file "../src/messages.c"
 13995 ;; Parameters:    Size  Location     Type
 13996 ;;  send_msg        2   59[COMRAM] PTR struct __msg_queue
 13997 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 13998 ;;  send_msg        1   61[COMRAM] unsigned char 
 13999 ;;  send_msg        1   62[COMRAM] unsigned char 
 14000 ;;  send_msg        2   63[COMRAM] PTR void 
 14001 ;;		 -> adc_int_handler@value(2), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 14002 ;;		 -> i2c_int_handler@error_buf(3), main@msgbuffer(11), main@uc(5), 
 14003 ;; Auto vars:     Size  Location     Type
 14004 ;;  send_msg        2    3[BANK0 ] PTR struct __msg
 14005 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 14006 ;;  send_msg        2    0[BANK0 ] unsigned int 
 14007 ;;  send_msg        1    2[BANK0 ] unsigned char 
 14008 ;; Return value:  Size  Location     Type
 14009 ;;                  1    wreg      char 
 14010 ;; Registers used:
 14011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14012 ;; Tracked objects:
 14013 ;;		On entry : 0/0
 14014 ;;		On exit  : 0/0
 14015 ;;		Unchanged: 0/0
 14016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14017 ;;      Params:         6       0       0       0       0
 14018 ;;      Locals:         0       5       0       0       0
 14019 ;;      Temps:          1       0       0       0       0
 14020 ;;      Totals:         7       5       0       0       0
 14021 ;;Total ram usage:       12 bytes
 14022 ;; Hardware stack levels used:    1
 14023 ;; Hardware stack levels required when called:    1
 14024 ;; This function calls:
 14025 ;;		i2_memcpy
 14026 ;; This function is called by:
 14027 ;;		_ToMainHigh_sendmsg
 14028 ;; This function uses a non-reentrant model
 14029 ;;
 14030                           psect	text52,class=CODE,space=0,reloc=2
 14031                           global __ptext52
 14032  000DA4                     __ptext52:
 14033                           psect	text52
 14034                           	file	"../src/messages.c"
 14035                           	global	__size_ofi2_send_msg
 14036  0000                     	__size_ofi2_send_msg	equ	__end_ofi2_send_msg-i2_send_msg
 14037                           	
 14038  000DA4                     i2_send_msg:
 14039                           	opt	stack 17
 14040                           	line	28
 14041                           	
 14042  000DA4                     i2l19377:
 14043                           ;messages.c: 25: unsigned char slot;
 14044                           ;messages.c: 27: msg *qmsg;
 14045                           ;messages.c: 28: size_t tlength = length;
 14046  000DA4  0100               	movlb	0	; () banked
 14047  000DA6  C03E  F0B8         	movff	(c:i2send_msg@length),(i2send_msg@tlength)
 14048  000DAA  0100               	movlb	0	; () banked
 14049  000DAC  0100               	movlb	0	; () banked
 14050  000DAE  6BB9               	clrf	((i2send_msg@tlength+1))&0ffh
 14051                           	line	38
 14052                           	
 14053  000DB0                     i2l19379:; BSR set to: 0
 14054                           
 14055                           ;messages.c: 38: slot = qptr->cur_write_ind;
 14056  000DB0  EE20 F034          	lfsr	2,034h
 14057  000DB4  503C               	movf	((c:i2send_msg@qptr)),c,w
 14058  000DB6  26D9               	addwf	fsr2l
 14059  000DB8  503D               	movf	((c:i2send_msg@qptr+1)),c,w
 14060  000DBA  22DA               	addwfc	fsr2h
 14061  000DBC  50DF               	movf	indf2,w
 14062  000DBE  0100               	movlb	0	; () banked
 14063  000DC0  0100               	movlb	0	; () banked
 14064  000DC2  6FBA               	movwf	((i2send_msg@slot))&0ffh
 14065                           	line	39
 14066                           	
 14067  000DC4                     i2l19381:; BSR set to: 0
 14068                           
 14069                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
 14070  000DC4  0100               	movlb	0	; () banked
 14071  000DC6  0100               	movlb	0	; () banked
 14072  000DC8  51BA               	movf	((i2send_msg@slot))&0ffh,w
 14073  000DCA  0D0D               	mullw	0Dh
 14074  000DCC  50F3               	movf	(prodl),c,w
 14075  000DCE  243C               	addwf	((c:i2send_msg@qptr)),c,w
 14076  000DD0  0100               	movlb	0	; () banked
 14077                           	
 14078  000DD2  0100               	movlb	0	; () banked
 14079  000DD4  6FBB               	movwf	((i2send_msg@qmsg))&0ffh
 14080  000DD6  50F4               	movf	(prodh),c,w
 14081  000DD8  203D               	addwfc	((c:i2send_msg@qptr+1)),c,w
 14082  000DDA  0100               	movlb	0	; () banked
 14083  000DDC  6FBC               	movwf	1+((i2send_msg@qmsg))&0ffh
 14084                           	line	41
 14085                           	
 14086  000DDE                     i2l19383:; BSR set to: 0
 14087                           
 14088                           ;messages.c: 41: if (qmsg->full != 0) {
 14089  000DDE  C0BB  FFD9         	movff	(i2send_msg@qmsg),fsr2l
 14090  000DE2  C0BC  FFDA         	movff	(i2send_msg@qmsg+1),fsr2h
 14091  000DE6  50DF               	movf	indf2,w
 14092  000DE8  B4D8               	btfsc	status,2
 14093  000DEA  D001               	goto	i2u249_41
 14094  000DEC  D001               	goto	i2u249_40
 14095  000DEE                     i2u249_41:
 14096  000DEE  D003               	goto	i2l19389
 14097  000DF0                     i2u249_40:
 14098                           	line	42
 14099                           	
 14100  000DF0                     i2l19385:; BSR set to: 0
 14101                           
 14102                           ;messages.c: 42: return (-1);
 14103  000DF0  0EFF               	movlw	(-1)&0ffh
 14104  000DF2  D044               	goto	i2l5474
 14105                           	
 14106  000DF4                     i2l19387:; BSR set to: 0
 14107                           
 14108  000DF4  D043               	goto	i2l5474
 14109                           	line	43
 14110                           	
 14111  000DF6                     i2l5473:; BSR set to: 0
 14112                           
 14113                           	line	46
 14114                           	
 14115  000DF6                     i2l19389:; BSR set to: 0
 14116                           
 14117                           ;messages.c: 43: }
 14118                           ;messages.c: 46: qmsg->length = length;
 14119  000DF6  0100               	movlb	0	; () banked
 14120  000DF8  EE20 F001          	lfsr	2,01h
 14121  000DFC  0100               	movlb	0	; () banked
 14122  000DFE  51BB               	movf	((i2send_msg@qmsg))&0ffh,w
 14123  000E00  26D9               	addwf	fsr2l
 14124  000E02  0100               	movlb	0	; () banked
 14125  000E04  51BC               	movf	((i2send_msg@qmsg+1))&0ffh,w
 14126  000E06  22DA               	addwfc	fsr2h
 14127  000E08  C03E  FFDF         	movff	(c:i2send_msg@length),indf2
 14128                           
 14129                           	line	47
 14130                           ;messages.c: 47: qmsg->msgtype = msgtype;
 14131  000E0C  0100               	movlb	0	; () banked
 14132  000E0E  EE20 F002          	lfsr	2,02h
 14133  000E12  0100               	movlb	0	; () banked
 14134  000E14  51BB               	movf	((i2send_msg@qmsg))&0ffh,w
 14135  000E16  26D9               	addwf	fsr2l
 14136  000E18  0100               	movlb	0	; () banked
 14137  000E1A  51BC               	movf	((i2send_msg@qmsg+1))&0ffh,w
 14138  000E1C  22DA               	addwfc	fsr2h
 14139  000E1E  C03F  FFDF         	movff	(c:i2send_msg@msgtype),indf2
 14140                           
 14141                           	line	55
 14142                           	
 14143  000E22                     i2l19391:; BSR set to: 0
 14144                           
 14145                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
 14146  000E22  0E03               	movlw	low(03h)
 14147  000E24  0100               	movlb	0	; () banked
 14148  000E26  0100               	movlb	0	; () banked
 14149  000E28  25BB               	addwf	((i2send_msg@qmsg))&0ffh,w
 14150                           	
 14151  000E2A  6E32               	movwf	((c:?i2_memcpy)),c
 14152  000E2C  0E00               	movlw	high(03h)
 14153  000E2E  0100               	movlb	0	; () banked
 14154  000E30  0100               	movlb	0	; () banked
 14155  000E32  21BC               	addwfc	((i2send_msg@qmsg+1))&0ffh,w
 14156  000E34  6E33               	movwf	1+((c:?i2_memcpy)),c
 14157  000E36  C040  F034         	movff	(c:i2send_msg@data),0+((c:?i2_memcpy)+02h)
 14158  000E3A  C041  F035         	movff	(c:i2send_msg@data+1),1+((c:?i2_memcpy)+02h)
 14159  000E3E  C0B8  F036         	movff	(i2send_msg@tlength),0+((c:?i2_memcpy)+04h)
 14160  000E42  C0B9  F037         	movff	(i2send_msg@tlength+1),1+((c:?i2_memcpy)+04h)
 14161  000E46  EC2E  F00C         	call	i2_memcpy	;wreg free
 14162                           	line	56
 14163                           	
 14164  000E4A                     i2l19393:
 14165                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
 14166  000E4A  EE20 F034          	lfsr	2,034h
 14167  000E4E  503C               	movf	((c:i2send_msg@qptr)),c,w
 14168  000E50  26D9               	addwf	fsr2l
 14169  000E52  503D               	movf	((c:i2send_msg@qptr+1)),c,w
 14170  000E54  22DA               	addwfc	fsr2h
 14171  000E56  EE10 F034          	lfsr	1,034h
 14172  000E5A  503C               	movf	((c:i2send_msg@qptr)),c,w
 14173  000E5C  26E1               	addwf	fsr1l
 14174  000E5E  503D               	movf	((c:i2send_msg@qptr+1)),c,w
 14175  000E60  22E2               	addwfc	fsr1h
 14176  000E62  50E7               	movf	indf1,w
 14177  000E64  6E42               	movwf	(??i2_send_msg+0+0)&0ffh,c
 14178  000E66  2842               	incf	((??i2_send_msg+0+0)),c,w
 14179  000E68  0B03               	andlw	low(03h)
 14180  000E6A  6EDF               	movwf	indf2
 14181                           
 14182                           	line	59
 14183                           	
 14184  000E6C                     i2l19395:
 14185                           ;messages.c: 59: qmsg->full = 1;
 14186  000E6C  C0BB  FFD9         	movff	(i2send_msg@qmsg),fsr2l
 14187  000E70  C0BC  FFDA         	movff	(i2send_msg@qmsg+1),fsr2h
 14188  000E74  0E01               	movlw	low(01h)
 14189  000E76  6EDF               	movwf	indf2
 14190                           	line	60
 14191                           	
 14192  000E78                     i2l19397:
 14193                           ;messages.c: 60: return (1);
 14194  000E78  0E01               	movlw	(01h)&0ffh
 14195  000E7A  D000               	goto	i2l5474
 14196                           	
 14197  000E7C                     i2l19399:
 14198                           	line	61
 14199                           	
 14200  000E7C                     i2l5474:
 14201  000E7C  0012               	return
 14202                           	opt stack 0
 14203                           GLOBAL	__end_ofi2_send_msg
 14204  000E7E                     	__end_ofi2_send_msg:
 14205                           	signat	i2_send_msg,89
 14206                           	global	i2_recv_msg
 14207                           
 14208 ;; *************** function i2_recv_msg *****************
 14209 ;; Defined at:
 14210 ;;		line 63 in file "../src/messages.c"
 14211 ;; Parameters:    Size  Location     Type
 14212 ;;  recv_msg        2   59[COMRAM] PTR struct __msg_queue
 14213 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 14214 ;;  recv_msg        1   61[COMRAM] unsigned char 
 14215 ;;  recv_msg        2   62[COMRAM] PTR unsigned char 
 14216 ;;		 -> RAM(1023), i2c_int_handler@msgtype(1), main@msgtype(1), 
 14217 ;;  recv_msg        2   64[COMRAM] PTR void 
 14218 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@data(10), main@msgbuffer(11), 
 14219 ;; Auto vars:     Size  Location     Type
 14220 ;;  recv_msg        2    3[BANK0 ] PTR struct __msg
 14221 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 14222 ;;  recv_msg        2    1[BANK0 ] unsigned int 
 14223 ;;  recv_msg        1    0[BANK0 ] unsigned char 
 14224 ;; Return value:  Size  Location     Type
 14225 ;;                  1    wreg      char 
 14226 ;; Registers used:
 14227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14228 ;; Tracked objects:
 14229 ;;		On entry : 0/0
 14230 ;;		On exit  : 0/0
 14231 ;;		Unchanged: 0/0
 14232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14233 ;;      Params:         7       0       0       0       0
 14234 ;;      Locals:         0       5       0       0       0
 14235 ;;      Temps:          2       0       0       0       0
 14236 ;;      Totals:         9       5       0       0       0
 14237 ;;Total ram usage:       14 bytes
 14238 ;; Hardware stack levels used:    1
 14239 ;; Hardware stack levels required when called:    1
 14240 ;; This function calls:
 14241 ;;		i2_memcpy
 14242 ;; This function is called by:
 14243 ;;		_FromMainLow_recvmsg
 14244 ;;		_FromMainHigh_recvmsg
 14245 ;; This function uses a non-reentrant model
 14246 ;;
 14247                           psect	text53,class=CODE,space=0,reloc=2
 14248                           global __ptext53
 14249  000B8A                     __ptext53:
 14250                           psect	text53
 14251                           	file	"../src/messages.c"
 14252                           	line	63
 14253                           	global	__size_ofi2_recv_msg
 14254  0000                     	__size_ofi2_recv_msg	equ	__end_ofi2_recv_msg-i2_recv_msg
 14255                           	
 14256  000B8A                     i2_recv_msg:
 14257                           	opt	stack 17
 14258                           	line	72
 14259                           	
 14260  000B8A                     i2l19401:
 14261                           ;messages.c: 64: unsigned char slot;
 14262                           ;messages.c: 68: msg *qmsg;
 14263                           ;messages.c: 69: size_t tlength;
 14264                           ;messages.c: 72: slot = qptr->cur_read_ind;
 14265  000B8A  EE20 F035          	lfsr	2,035h
 14266  000B8E  503C               	movf	((c:i2recv_msg@qptr)),c,w
 14267  000B90  26D9               	addwf	fsr2l
 14268  000B92  503D               	movf	((c:i2recv_msg@qptr+1)),c,w
 14269  000B94  22DA               	addwfc	fsr2h
 14270  000B96  50DF               	movf	indf2,w
 14271  000B98  0100               	movlb	0	; () banked
 14272  000B9A  0100               	movlb	0	; () banked
 14273  000B9C  6FB8               	movwf	((i2recv_msg@slot))&0ffh
 14274                           	line	73
 14275                           	
 14276  000B9E                     i2l19403:; BSR set to: 0
 14277                           
 14278                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
 14279  000B9E  0100               	movlb	0	; () banked
 14280  000BA0  0100               	movlb	0	; () banked
 14281  000BA2  51B8               	movf	((i2recv_msg@slot))&0ffh,w
 14282  000BA4  0D0D               	mullw	0Dh
 14283  000BA6  50F3               	movf	(prodl),c,w
 14284  000BA8  243C               	addwf	((c:i2recv_msg@qptr)),c,w
 14285  000BAA  0100               	movlb	0	; () banked
 14286                           	
 14287  000BAC  0100               	movlb	0	; () banked
 14288  000BAE  6FBB               	movwf	((i2recv_msg@qmsg))&0ffh
 14289  000BB0  50F4               	movf	(prodh),c,w
 14290  000BB2  203D               	addwfc	((c:i2recv_msg@qptr+1)),c,w
 14291  000BB4  0100               	movlb	0	; () banked
 14292  000BB6  6FBC               	movwf	1+((i2recv_msg@qmsg))&0ffh
 14293                           	line	74
 14294                           	
 14295  000BB8                     i2l19405:; BSR set to: 0
 14296                           
 14297                           ;messages.c: 74: if (qmsg->full == 1) {
 14298  000BB8  0E01               	movlw	(01h)&0ffh
 14299  000BBA  C0BB  FFD9         	movff	(i2recv_msg@qmsg),fsr2l
 14300  000BBE  C0BC  FFDA         	movff	(i2recv_msg@qmsg+1),fsr2h
 14301  000BC2  62DF               	cpfseq	indf2
 14302  000BC4  D001               	goto	i2u250_41
 14303  000BC6  D001               	goto	i2u250_40
 14304  000BC8                     i2u250_41:
 14305  000BC8  D066               	goto	i2l19429
 14306  000BCA                     i2u250_40:
 14307                           	line	76
 14308                           	
 14309  000BCA                     i2l19407:; BSR set to: 0
 14310                           
 14311                           ;messages.c: 76: if (qmsg->length > maxlength) {
 14312  000BCA  0100               	movlb	0	; () banked
 14313  000BCC  EE20 F001          	lfsr	2,01h
 14314  000BD0  0100               	movlb	0	; () banked
 14315  000BD2  51BB               	movf	((i2recv_msg@qmsg))&0ffh,w
 14316  000BD4  26D9               	addwf	fsr2l
 14317  000BD6  0100               	movlb	0	; () banked
 14318  000BD8  51BC               	movf	((i2recv_msg@qmsg+1))&0ffh,w
 14319  000BDA  22DA               	addwfc	fsr2h
 14320  000BDC  50DF               	movf	indf2,w
 14321  000BDE  603E               	cpfslt	((c:i2recv_msg@maxlength)),c
 14322  000BE0  D001               	goto	i2u251_41
 14323  000BE2  D001               	goto	i2u251_40
 14324  000BE4                     i2u251_41:
 14325  000BE4  D003               	goto	i2l19413
 14326  000BE6                     i2u251_40:
 14327                           	line	77
 14328                           	
 14329  000BE6                     i2l19409:; BSR set to: 0
 14330                           
 14331                           ;messages.c: 77: return (-3);
 14332  000BE6  0EFD               	movlw	(-3)&0ffh
 14333  000BE8  D059               	goto	i2l5479
 14334                           	
 14335  000BEA                     i2l19411:; BSR set to: 0
 14336                           
 14337  000BEA  D058               	goto	i2l5479
 14338                           	line	78
 14339                           	
 14340  000BEC                     i2l5478:; BSR set to: 0
 14341                           
 14342                           	line	80
 14343                           	
 14344  000BEC                     i2l19413:; BSR set to: 0
 14345                           
 14346                           ;messages.c: 78: }
 14347                           ;messages.c: 80: tlength = qmsg->length;
 14348  000BEC  0100               	movlb	0	; () banked
 14349  000BEE  EE20 F001          	lfsr	2,01h
 14350  000BF2  0100               	movlb	0	; () banked
 14351  000BF4  51BB               	movf	((i2recv_msg@qmsg))&0ffh,w
 14352  000BF6  26D9               	addwf	fsr2l
 14353  000BF8  0100               	movlb	0	; () banked
 14354  000BFA  51BC               	movf	((i2recv_msg@qmsg+1))&0ffh,w
 14355  000BFC  22DA               	addwfc	fsr2h
 14356  000BFE  50DF               	movf	indf2,w
 14357  000C00  6E43               	movwf	(??i2_recv_msg+0+0)&0ffh,c
 14358  000C02  5043               	movf	((??i2_recv_msg+0+0)),c,w
 14359  000C04  0100               	movlb	0	; () banked
 14360  000C06  0100               	movlb	0	; () banked
 14361  000C08  6FB9               	movwf	((i2recv_msg@tlength))&0ffh
 14362  000C0A  0100               	movlb	0	; () banked
 14363  000C0C  6BBA               	clrf	((i2recv_msg@tlength+1))&0ffh
 14364                           	line	81
 14365                           	
 14366  000C0E                     i2l19415:; BSR set to: 0
 14367                           
 14368                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
 14369  000C0E  C041  F032         	movff	(c:i2recv_msg@data),(c:?i2_memcpy)
 14370  000C12  C042  F033         	movff	(c:i2recv_msg@data+1),(c:?i2_memcpy+1)
 14371  000C16  0E03               	movlw	03h
 14372  000C18  0100               	movlb	0	; () banked
 14373  000C1A  0100               	movlb	0	; () banked
 14374  000C1C  25BB               	addwf	((i2recv_msg@qmsg))&0ffh,w
 14375  000C1E  6E43               	movwf	(??i2_recv_msg+0+0)&0ffh,c
 14376  000C20  0E00               	movlw	0
 14377  000C22  0100               	movlb	0	; () banked
 14378  000C24  0100               	movlb	0	; () banked
 14379  000C26  21BC               	addwfc	((i2recv_msg@qmsg+1))&0ffh,w
 14380  000C28  6E44               	movwf	(??i2_recv_msg+0+0+1)&0ffh,c
 14381  000C2A  C043  F034         	movff	??i2_recv_msg+0+0,0+((c:?i2_memcpy)+02h)
 14382  000C2E  C044  F035         	movff	??i2_recv_msg+0+1,1+((c:?i2_memcpy)+02h)
 14383  000C32  C0B9  F036         	movff	(i2recv_msg@tlength),0+((c:?i2_memcpy)+04h)
 14384  000C36  C0BA  F037         	movff	(i2recv_msg@tlength+1),1+((c:?i2_memcpy)+04h)
 14385  000C3A  EC2E  F00C         	call	i2_memcpy	;wreg free
 14386                           	line	87
 14387                           	
 14388  000C3E                     i2l19417:
 14389                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
 14390  000C3E  EE20 F035          	lfsr	2,035h
 14391  000C42  503C               	movf	((c:i2recv_msg@qptr)),c,w
 14392  000C44  26D9               	addwf	fsr2l
 14393  000C46  503D               	movf	((c:i2recv_msg@qptr+1)),c,w
 14394  000C48  22DA               	addwfc	fsr2h
 14395  000C4A  EE10 F035          	lfsr	1,035h
 14396  000C4E  503C               	movf	((c:i2recv_msg@qptr)),c,w
 14397  000C50  26E1               	addwf	fsr1l
 14398  000C52  503D               	movf	((c:i2recv_msg@qptr+1)),c,w
 14399  000C54  22E2               	addwfc	fsr1h
 14400  000C56  50E7               	movf	indf1,w
 14401  000C58  6E43               	movwf	(??i2_recv_msg+0+0)&0ffh,c
 14402  000C5A  2843               	incf	((??i2_recv_msg+0+0)),c,w
 14403  000C5C  0B03               	andlw	low(03h)
 14404  000C5E  6EDF               	movwf	indf2
 14405                           
 14406                           	line	89
 14407                           	
 14408  000C60                     i2l19419:
 14409                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
 14410  000C60  0100               	movlb	0	; () banked
 14411  000C62  EE20 F002          	lfsr	2,02h
 14412  000C66  0100               	movlb	0	; () banked
 14413  000C68  51BB               	movf	((i2recv_msg@qmsg))&0ffh,w
 14414  000C6A  26D9               	addwf	fsr2l
 14415  000C6C  0100               	movlb	0	; () banked
 14416  000C6E  51BC               	movf	((i2recv_msg@qmsg+1))&0ffh,w
 14417  000C70  22DA               	addwfc	fsr2h
 14418  000C72  C03F  FFE1         	movff	(c:i2recv_msg@msgtype),fsr1l
 14419  000C76  C040  FFE2         	movff	(c:i2recv_msg@msgtype+1),fsr1h
 14420  000C7A  CFDF FFE7          	movff	indf2,indf1
 14421                           	line	91
 14422                           	
 14423  000C7E                     i2l19421:; BSR set to: 0
 14424                           
 14425                           ;messages.c: 91: qmsg->full = 0;
 14426  000C7E  C0BB  FFD9         	movff	(i2recv_msg@qmsg),fsr2l
 14427  000C82  C0BC  FFDA         	movff	(i2recv_msg@qmsg+1),fsr2h
 14428  000C86  0E00               	movlw	low(0)
 14429  000C88  6EDF               	movwf	indf2
 14430                           	line	92
 14431                           	
 14432  000C8A                     i2l19423:; BSR set to: 0
 14433                           
 14434                           ;messages.c: 92: return (tlength);
 14435  000C8A  0100               	movlb	0	; () banked
 14436  000C8C  0100               	movlb	0	; () banked
 14437  000C8E  51B9               	movf	((i2recv_msg@tlength))&0ffh,w
 14438  000C90  D005               	goto	i2l5479
 14439                           	
 14440  000C92                     i2l19425:; BSR set to: 0
 14441                           
 14442  000C92  D004               	goto	i2l5479
 14443                           	line	93
 14444                           	
 14445  000C94                     i2l19427:; BSR set to: 0
 14446                           
 14447                           ;messages.c: 93: } else {
 14448  000C94  D003               	goto	i2l5479
 14449                           	
 14450  000C96                     i2l5477:; BSR set to: 0
 14451                           
 14452                           	line	94
 14453                           	
 14454  000C96                     i2l19429:; BSR set to: 0
 14455                           
 14456                           ;messages.c: 94: return (-4);
 14457  000C96  0EFC               	movlw	(-4)&0ffh
 14458  000C98  D001               	goto	i2l5479
 14459                           	
 14460  000C9A                     i2l19431:; BSR set to: 0
 14461                           
 14462  000C9A  D000               	goto	i2l5479
 14463                           	line	95
 14464                           	
 14465  000C9C                     i2l5480:; BSR set to: 0
 14466                           
 14467                           	line	96
 14468                           	
 14469  000C9C                     i2l5479:; BSR set to: 0
 14470                           
 14471  000C9C  0012               	return
 14472                           	opt stack 0
 14473                           GLOBAL	__end_ofi2_recv_msg
 14474  000C9E                     	__end_ofi2_recv_msg:
 14475                           	signat	i2_recv_msg,89
 14476                           	global	i2_check_msg
 14477                           
 14478 ;; *************** function i2_check_msg *****************
 14479 ;; Defined at:
 14480 ;;		line 222 in file "../src/messages.c"
 14481 ;; Parameters:    Size  Location     Type
 14482 ;;  check_msg       2   49[COMRAM] PTR struct __msg_queue
 14483 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 14484 ;; Auto vars:     Size  Location     Type
 14485 ;;		None
 14486 ;; Return value:  Size  Location     Type
 14487 ;;                  1    wreg      unsigned char 
 14488 ;; Registers used:
 14489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14490 ;; Tracked objects:
 14491 ;;		On entry : 0/0
 14492 ;;		On exit  : 0/0
 14493 ;;		Unchanged: 0/0
 14494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14495 ;;      Params:         2       0       0       0       0
 14496 ;;      Locals:         0       0       0       0       0
 14497 ;;      Temps:          1       0       0       0       0
 14498 ;;      Totals:         3       0       0       0       0
 14499 ;;Total ram usage:        3 bytes
 14500 ;; Hardware stack levels used:    1
 14501 ;; This function calls:
 14502 ;;		Nothing
 14503 ;; This function is called by:
 14504 ;;		_SleepIfOkay
 14505 ;; This function uses a non-reentrant model
 14506 ;;
 14507                           psect	text54,class=CODE,space=0,reloc=2
 14508                           global __ptext54
 14509  001B30                     __ptext54:
 14510                           psect	text54
 14511                           	file	"../src/messages.c"
 14512                           	line	222
 14513                           	global	__size_ofi2_check_msg
 14514  0000                     	__size_ofi2_check_msg	equ	__end_ofi2_check_msg-i2_check_msg
 14515                           	
 14516  001B30                     i2_check_msg:; BSR set to: 0
 14517                           
 14518                           	opt	stack 19
 14519                           	line	223
 14520                           	
 14521  001B30                     i2l18727:
 14522                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
 14523  001B30  EE20 F035          	lfsr	2,035h
 14524  001B34  5032               	movf	((c:i2check_msg@qptr)),c,w
 14525  001B36  26D9               	addwf	fsr2l
 14526  001B38  5033               	movf	((c:i2check_msg@qptr+1)),c,w
 14527  001B3A  22DA               	addwfc	fsr2h
 14528  001B3C  50DF               	movf	indf2,w
 14529  001B3E  6E34               	movwf	(??i2_check_msg+0+0)&0ffh,c
 14530  001B40  5034               	movf	((??i2_check_msg+0+0)),c,w
 14531  001B42  0D0D               	mullw	0Dh
 14532  001B44  50F3               	movf	(prodl),c,w
 14533  001B46  2432               	addwf	((c:i2check_msg@qptr)),c,w
 14534  001B48  6ED9               	movwf	c:fsr2l
 14535  001B4A  50F4               	movf	(prodh),c,w
 14536  001B4C  2033               	addwfc	((c:i2check_msg@qptr+1)),c,w
 14537  001B4E  6EDA               	movwf	1+c:fsr2l
 14538  001B50  50DF               	movf	indf2,w
 14539  001B52  D000               	goto	i2l5523
 14540                           	
 14541  001B54                     i2l18729:
 14542                           	line	224
 14543                           	
 14544  001B54                     i2l5523:
 14545  001B54  0012               	return
 14546                           	opt stack 0
 14547                           GLOBAL	__end_ofi2_check_msg
 14548  001B56                     	__end_ofi2_check_msg:
 14549                           	signat	i2_check_msg,89
 14550                           	global	i2_memcpy
 14551                           
 14552 ;; *************** function i2_memcpy *****************
 14553 ;; Defined at:
 14554 ;;		line 13 in file "/opt/microchip/xc8/v1.10/sources/memcpy.c"
 14555 ;; Parameters:    Size  Location     Type
 14556 ;;  memcpy          2   49[COMRAM] PTR void 
 14557 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
 14558 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
 14559 ;;  memcpy          2   51[COMRAM] PTR const void 
 14560 ;;		 -> adc_int_handler@value(2), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 14561 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 14562 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(5), 
 14563 ;;  memcpy          2   53[COMRAM] unsigned int 
 14564 ;; Auto vars:     Size  Location     Type
 14565 ;;  memcpy          2   57[COMRAM] PTR const unsigned char 
 14566 ;;		 -> adc_int_handler@value(2), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 14567 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 14568 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(5), 
 14569 ;;  memcpy          2   55[COMRAM] PTR unsigned char 
 14570 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
 14571 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
 14572 ;; Return value:  Size  Location     Type
 14573 ;;                  2   49[COMRAM] PTR void 
 14574 ;; Registers used:
 14575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 14576 ;; Tracked objects:
 14577 ;;		On entry : 0/0
 14578 ;;		On exit  : 0/0
 14579 ;;		Unchanged: 0/0
 14580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14581 ;;      Params:         6       0       0       0       0
 14582 ;;      Locals:         4       0       0       0       0
 14583 ;;      Temps:          0       0       0       0       0
 14584 ;;      Totals:        10       0       0       0       0
 14585 ;;Total ram usage:       10 bytes
 14586 ;; Hardware stack levels used:    1
 14587 ;; This function calls:
 14588 ;;		Nothing
 14589 ;; This function is called by:
 14590 ;;		i2_send_msg
 14591 ;;		i2_recv_msg
 14592 ;; This function uses a non-reentrant model
 14593 ;;
 14594                           psect	text55,class=CODE,space=0,reloc=2
 14595                           global __ptext55
 14596  00185C                     __ptext55:
 14597                           psect	text55
 14598                           	file	"/opt/microchip/xc8/v1.10/sources/memcpy.c"
 14599                           	line	13
 14600                           	global	__size_ofi2_memcpy
 14601  0000                     	__size_ofi2_memcpy	equ	__end_ofi2_memcpy-i2_memcpy
 14602                           	
 14603  00185C                     i2_memcpy:
 14604                           	opt	stack 17
 14605                           	line	24
 14606                           	
 14607  00185C                     i2l19433:
 14608  00185C  C034  F03A         	movff	(c:i2memcpy@s1),(c:i2memcpy@s)
 14609  001860  C035  F03B         	movff	(c:i2memcpy@s1+1),(c:i2memcpy@s+1)
 14610                           	line	25
 14611  001864  C032  F038         	movff	(c:i2memcpy@d1),(c:i2memcpy@d)
 14612  001868  C033  F039         	movff	(c:i2memcpy@d1+1),(c:i2memcpy@d+1)
 14613                           	line	26
 14614  00186C  D00F               	goto	i2l19441
 14615                           	
 14616  00186E                     i2l17009:
 14617                           	line	27
 14618                           	
 14619  00186E                     i2l19435:
 14620  00186E  C03A  FFD9         	movff	(c:i2memcpy@s),fsr2l
 14621  001872  C03B  FFDA         	movff	(c:i2memcpy@s+1),fsr2h
 14622  001876  C038  FFE1         	movff	(c:i2memcpy@d),fsr1l
 14623  00187A  C039  FFE2         	movff	(c:i2memcpy@d+1),fsr1h
 14624  00187E  CFDF FFE7          	movff	indf2,indf1
 14625                           	
 14626  001882                     i2l19437:
 14627  001882  4A3A               	infsnz	((c:i2memcpy@s)),c
 14628  001884  2A3B               	incf	((c:i2memcpy@s+1)),c
 14629                           	
 14630  001886                     i2l19439:
 14631  001886  4A38               	infsnz	((c:i2memcpy@d)),c
 14632  001888  2A39               	incf	((c:i2memcpy@d+1)),c
 14633  00188A  D000               	goto	i2l19441
 14634                           	
 14635  00188C                     i2l17008:
 14636                           	line	26
 14637                           	
 14638  00188C                     i2l19441:
 14639  00188C  0636               	decf	((c:i2memcpy@n)),c
 14640  00188E  A0D8               	btfss	status,0
 14641  001890  0637               	decf	((c:i2memcpy@n+1)),c
 14642  001892  2836               	incf	((c:i2memcpy@n))&0ffh,w
 14643  001894  B4D8               	btfsc	status,2
 14644  001896  2837               	incf ((c:i2memcpy@n+1))&0ffh,w
 14645                           
 14646  001898  A4D8               	btfss	status,2
 14647  00189A  D001               	goto	i2u252_41
 14648  00189C  D001               	goto	i2u252_40
 14649  00189E                     i2u252_41:
 14650  00189E  D7E7               	goto	i2l19435
 14651  0018A0                     i2u252_40:
 14652  0018A0  D000               	goto	i2l17011
 14653                           	
 14654  0018A2                     i2l17010:
 14655                           	line	32
 14656                           ;	Return value of i2_memcpy is never used
 14657                           	
 14658  0018A2                     i2l17011:
 14659  0018A2  0012               	return
 14660                           	opt stack 0
 14661                           GLOBAL	__end_ofi2_memcpy
 14662  0018A4                     	__end_ofi2_memcpy:
 14663                           	signat	i2_memcpy,90
 14664                           	GLOBAL	__activetblptr
 14665  0000                     __activetblptr	EQU	0
 14666                           	psect	intsave_regs,class=BIGRAM,space=1
 14667                           psect	text56,class=CODE,space=0,reloc=2
 14668                           global __ptext56
 14669  000000                     __ptext56:
 14670                           	PSECT	rparam,class=COMRAM,space=1
 14671                           	GLOBAL	__Lrparam
 14672                           	FNCONF	rparam,??,?
 14673                           GLOBAL	__Lparam, __Hparam
 14674                           GLOBAL	__Lrparam, __Hrparam
 14675  0000                     __Lparam	EQU	__Lrparam
 14676  0000                     __Hparam	EQU	__Hrparam


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         223
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     68      77
    BANK0           128     50     106
    BANK1           256     83     245
    BANK2           256      0       0
    BANK3           256      0       0

Pointer List with Targets:

    ?_ReadTimer1	unsigned int  size(2) Largest target is 2
		 -> WriteTimer1@timer(COMRAM[2]), ReadTimer1@timer(COMRAM[2]), 

    ?_ReadADC	int  size(2) Largest target is 0

    ?_memcpy	PTR void  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@data(BANK0[10]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    ?_in_high_int	int  size(2) Largest target is 0

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@data(BANK0[10]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@data(BANK0[10]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> adc_int_handler@value(COMRAM[2]), timer1_int_handler@result(COMRAM[2]), timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), main@uc(BANK1[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> adc_int_handler@value(COMRAM[2]), timer1_int_handler@result(COMRAM[2]), timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), main@uc(BANK1[5]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 10
		 -> i2c_int_handler@empty(BANK0[2]), i2c_int_handler@data(BANK0[10]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK1[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1023
		 -> RAM(DATA[1023]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 10
		 -> i2c_int_handler@data(BANK0[10]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> i2c_int_handler@msgtype(BANK0[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 3
		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@error_buf(BANK0[3]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> adc_int_handler@value(COMRAM[2]), timer1_int_handler@result(COMRAM[2]), NULL(NULL[0]), main@uc(BANK1[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1023
		 -> RAM(DATA[1023]), i2c_int_handler@msgtype(BANK0[1]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@data(BANK0[10]), main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@data(BANK0[10]), FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 11
		 -> adc_int_handler@value(COMRAM[2]), timer1_int_handler@result(COMRAM[2]), timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), main@msgbuffer(BANK1[11]), main@uc(BANK1[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _SleepIfOkay->i2_in_low_int
    _ToMainHigh_sendmsg->i2_send_msg
    _FromMainLow_recvmsg->i2_recv_msg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_in_low_int->i2_in_high_int
    i2_send_msg->i2_memcpy
    i2_recv_msg->i2_memcpy
    _InterruptHandlerLow->_timer1_int_handler
    _timer1_int_handler->_ToMainLow_sendmsg
    _adc_int_handler->_ToMainLow_sendmsg
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _i2c_int_handler->_FromMainLow_recvmsg
    _timer0_int_handler->_FromMainHigh_recvmsg
    _ToMainHigh_sendmsg->i2_send_msg
    _FromMainLow_recvmsg->i2_recv_msg
    _FromMainHigh_recvmsg->i2_recv_msg

Critical Paths under _main in BANK1

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _init_timer1_lthread->_OpenADC
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainHigh_recvmsg->_recv_msg
    _ToMainLow_recvmsg->_recv_msg
    _FromMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                56    56      0    4971
                                             29 BANK1     54    54      0
                     _init_uart_recv
                           _init_i2c
                _init_timer1_lthread
                        _init_queues
                         _OpenTimer1
                  _enable_interrupts
                _i2c_configure_slave
                          _OpenUSART
              _block_on_To_msgqueues
                 _ToMainHigh_recvmsg
                     _timer0_lthread
                  _ToMainLow_recvmsg
                     _timer1_lthread
                _FromMainLow_sendmsg
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      31
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      31
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  5     3      2     279
                                              5 BANK1      5     3      2
                            _OpenADC
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     192
                                              4 BANK1      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     0      1      93
                                              0 BANK1      1     0      1
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     0      1      31
                                              0 BANK1      1     0      1
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            3     0      3     310
                                              0 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0      93
                                              6 BANK1      1     1      0
                            _in_main
                          _check_msg
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                              4 BANK1      2     0      2
                         _in_low_int
                        _in_high_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                              2 BANK1      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (3) _in_high_int                                          2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     0      5     772
                                             24 BANK1      5     0      5
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8      34
                                              0 BANK1     10     2      8
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     0      5     772
                                             24 BANK1      5     0      5
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8      62
                                              0 BANK1     10     2      8
                         _ConvertADC
 ---------------------------------------------------------------------------------
 (1) _FromMainLow_sendmsg                                  4     0      4     741
                                             22 BANK1      4     0      4
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     124
                                              0 BANK1      8     0      8
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     192
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) _send_msg                                            12     6      6     648
                                             10 BANK1     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7     679
                                             10 BANK1     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     174
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2      62
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     0      1      31
                                              0 BANK1      1     0      1
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     2      3     217
                                              0 BANK1      5     2      3
 ---------------------------------------------------------------------------------
 (2) _SetChanADC                                           2     1      1      31
                                              0 BANK1      2     1      1
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    4864
                                             32 COMRAM    17    17      0
                 _timer1_int_handler
                    _adc_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   6     6      0    1688
                                             26 COMRAM     6     6      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (6) _adc_int_handler                                      4     4      0    1591
                                             26 COMRAM     4     4      0
                            _ReadADC
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                2     2      0    1585
                                             26 COMRAM     2     2      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     0      4    1562
                                             22 COMRAM     4     0      4
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      45
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ReadADC                                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    1496
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     395
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    9116
                                             36 BANK0     14    14      0
                    _i2c_int_handler
                 _timer0_int_handler
                        _SleepIfOkay
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    26    26      0    4824
                                             10 BANK0     26    26      0
                       _handle_start
                _FromMainLow_recvmsg
              _start_i2c_slave_reply
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  8     8      0    4146
                                             10 BANK0      8     8      0
                        _WriteTimer0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     146
                       i2_in_low_int
                      i2_in_high_int
                        i2_check_msg
                   _enter_sleep_mode
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     0      4    1912
                                              5 BANK0      4     0      4
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (12) _FromMainLow_recvmsg                                 5     0      5    2000
                                              5 BANK0      5     0      5
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     0      5    2000
                                              5 BANK0      5     0      5
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _start_i2c_slave_reply                               5     2      3      66
                                             49 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     0      1      22
                                             49 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2      68
                                             49 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             51 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (12) i2_in_high_int                                       2     0      2       0
                                             49 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    1819
                                             59 COMRAM     7     1      6
                                              0 BANK0      5     5      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    1907
                                             59 COMRAM     9     2      7
                                              0 BANK0      5     5      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     146
                                             49 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     484
                                             49 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_uart_recv
   _init_i2c
   _init_timer1_lthread
     _OpenADC
     _SetChanADC
   _init_queues
     _init_queue
   _OpenTimer1
   _enable_interrupts
   _i2c_configure_slave
   _OpenUSART
   _block_on_To_msgqueues
     _in_main
       _in_low_int
         _in_high_int
       _in_high_int
     _check_msg
     _Delay1KTCYx
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _timer0_lthread
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _timer1_lthread
     _ConvertADC
   _FromMainLow_sendmsg
     _send_msg
       _memcpy
   _uart_lthread

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _adc_int_handler
     _ReadADC
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     53      F5       6       95.7%
BITBANK0            80      0       0       3        0.0%
BANK0               80     32      6A       4       82.8%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     44      4D       1       60.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0      22       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AC      11        0.0%
DATA                 0      0     1CE      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.10 build 47796 
Symbol Table                                                                                   Mon Sep 24 01:29:28 2012

                    _STKPTRbits 000FFC                main@uthread_data 01CB        _MQ_Main_Willing_to_block 0048  
                   _SSPSTATbits 000FC7                              _DA 007E3D                              _BF 007E38  
                            _DC 007EC1                              _CK 007C16                              _P2 007C3C  
                            _S2 007C3B                              _CS 007C22                              _DT 007C17  
                            _GO 007E11                              _PC 000FF9                              _PD 007E82  
                            _RD 007C20                              _UA 007E39                              _RI 007E84  
                            _OV 007EC3                              _TO 007E83                              _RW 007E3A  
                            _RX 007C17                              _WR 007D31                              _TX 007C16  
     __end_of_ToMainLow_recvmsg 1A66                              bsr 000FE0       __end_of_ToMainLow_sendmsg 1B9E  
                  __CFG_CP0$OFF 000000               i2recv_msg@msgtype 003F               i2recv_msg@tlength 00B9  
          ?_FromMainLow_recvmsg 00BD                             _DA1 007E3D                             _DA2 007C3D  
                           _BF1 007E38                             _BF2 007C38                             _AN0 007C00  
                           _AN1 007C01                             _AN2 007C02                             _AN3 007C03  
                           _AN4 007C05                             _AN5 007C20                             _CM0 007DA0  
                           _AN6 007C21                             _CM1 007DA1                             _AN7 007C22  
                           _CM2 007DA2                             _AN8 007C0A                             _AN9 007C0B  
                           _LA0 007C48                             _P1A 007C12                             _LA1 007C49  
                           _P1B 007C1D                             _LB0 007C50                             _LA2 007C4A  
                           _P1C 007C1E                             _LB1 007C51                             _LA3 007C4B  
                           _P1D 007C1F                             _LC0 007C58                             _LB2 007C52  
                           _LA4 007C4C                             _LC1 007C59                             _LB3 007C53  
                           _LA5 007C4D                             _CKE 007E3E            ?_FromMainLow_sendmsg 01B8  
                           _LD0 007C60                             _LC2 007C5A                             _LB4 007C54  
                           _LA6 007C4E                             _LD1 007C61                             _LC3 007C5B  
                           _LB5 007C55                             _LA7 007C4F                             _LE0 007C68  
                           _LD2 007C62                             _LC4 007C5C                             _LB6 007C56  
                           _LE1 007C69                             _LD3 007C63                             _LC5 007C5D  
                           _LB7 007C57                             _LE2 007C6A                             _LD4 007C64  
                           _LC6 007C5E                             _LE3 007C6B                             _LD5 007C65  
                           _LC7 007C5F                             _LE4 007C6C                             _LD6 007C66  
                           _IBF 007CB7                             _LE5 007C6D                             _LD7 007C67  
                           _LE6 007C6E                             _LE7 007C6F                             _CIS 007DA3  
                           _CKP 007E34                             _PA1 007C12                             _GIE 007F97  
                           _PA2 007C11                             _PB2 007C22                             _PC2 007C21  
                           _BOR 007E80                             _RA0 007C00                             _PD2 007C20  
                           _RA1 007C01                             _RB0 007C08                             _RA2 007C02  
                           _RB1 007C09                             _RA3 007C03                             _RC0 007C10  
                           _RB2 007C0A                             _RA4 007C04                             _RC1 007C11  
                           _RB3 007C0B                             _RA5 007C05                             _RD0 007C18  
                           _RC2 007C12                             _RB4 007C0C                             _RA6 007C06  
                           _BSR 000FE0                             _RD1 007C19                             _RC3 007C13  
                           _RB5 007C0D                             _RA7 007C07                             _RE0 007C20  
                           _RD2 007C1A                             _RC4 007C14                             _RB6 007C0E  
                           _RE1 007C21                             _RD3 007C1B                             _RC5 007C15  
                           _RB7 007C0F                             _RE2 007C22                             _RD4 007C1C  
                           _RC6 007C16                             _RE3 007CB3                             _RD5 007C1D  
                           _RC7 007C17                             _RE4 007C24                             _RD6 007C1E  
                           _OBF 007CB6                             _UA1 007E39                             _RE5 007C25  
                           _RD7 007C1F                             _RC9 007D5E                             _UA2 007C39  
                           _RE6 007C26                             _W4E 007DC1                             _RE7 007C27  
                           _PGC 007C0E                             _PGD 007C0F                             _PCL 000FF9  
                           _SDA 007C14                             _RDE 007C20                             _PR2 000FCB  
                           _PEN 007E2A                             _SDI 007C14                             _SCK 007C13  
                           _SCL 007C13                             _SS1 007C05                             _SDO 007C15  
                           _SS2 007C1B                             _SEN 007E28                             _RW1 007E3A  
                           _PSA 007EAB                             _RW2 007C3A                             _POR 007E81  
                           _RX9 007D5E                             _SMP 007E3F                             _TX9 007D66  
                           _TOS 000FFD                             _WRE 007C21                             _WUE 007DC1  
                           _nA2 007C3D                             _nCS 007C22                             _nW2 007C3A  
                           _nPD 007E82            __size_of_WriteTimer0 0012            __size_of_WriteTimer1 0012  
                           _nRD 007C20                             _nRI 007E84                             _nTO 007E83  
                           _nWR 007C21                  _FromMainLow_MQ 0136                             wreg 000FE8  
                    _TXSTA1bits 000FAC                    __CFG_IESO$ON 000000                    ?_in_high_int 01A2  
              ??_init_uart_recv 01A4                 ReadTimer1@timer 0003             i2recv_msg@maxlength 003E  
                          l1802 1C0A                            l1810 16CC                            l1811 16B8  
                          l1812 16CA                            l1815 1712                            l1808 168C  
                          l1816 1724                            l1809 16CC                            l1817 1724  
                          _AN10 007C09                            _AN11 007C0C                            _AN12 007C08  
                          l3650 0872                            l3651 0902                            l3660 0954  
                          l3652 08C2                            l5501 1A90                            l3661 0A42  
                          l3653 08C2                            l3645 081A                            l3670 0A46  
                          l3662 0A20                            l3654 08C8                            l3646 0870  
                          l1799 1C80                            l3671 0A46                            l3663 0958  
                          l3655 08CE                            l3647 086E                            l3664 0A40  
                          l3648 0904                            l3656 08CA                            l3665 09A8  
                          l3649 08E2                            l3657 08DC                            l3666 09CA  
                          l3658 08DE                            l5523 199A                            l3667 09CC  
                          l3659 0956                            l5540 0F50                            l3668 0A1C  
                          l5517 160A                            l3669 0A44                            l5470 14A2  
                          l5534 0E9A                            l5535 0F50                            l5480 0B88  
                          l5536 0EAA                            l5473 0D00                            l5537 0EDE  
                          l5474 0DA2                            l5538 0F12                            l7410 1B78  
                          l5539 0F4E                            l5468 146C                            l5477 0B82  
                          l5469 14A2                            l5478 0ABE                            l5479 0B88  
                          l7407 1812                            _ADIE 007CEE                            l5488 1A64  
                          l5496 1A34                            _ADIF 007CF6                            _ADEN 007D5B  
                          _ADFM 007E07                            _CCP1 007C12                            l9209 1BF6  
                          _ADIP 007CFE                            _CKE1 007E3E                            _CKE2 007C3E  
                          _ADON 007E10                            _P1M0 007DEE                            _CHS0 007E12  
                          _P1M1 007DEF                            _CHS1 007E13                            _CHS2 007E14  
                          _CHS3 007E15                            _CKP1 007E34                            _DDRA 000F92  
                          _CKP2 007C34                            _DDRB 000F93                            _DDRC 000F94  
                          _DDRD 000F95                            _DDRE 000F96                            _GCEN 007E2F  
                          _KBI0 007C0C                            _KBI1 007C0D                            _CMIE 007D06  
                          _KBI2 007C0E                            _CMIF 007D0E                            _KBI3 007C0F  
                          _PA2E 007C27                            _GIEH 007F97                            _CMIP 007D16  
                          _BRGH 007D62                            _PB1E 007C26                            _GIEL 007F96  
                          _PC1E 007C25                            _PB3E 007C24                            _T0IE 007F95  
                          _PC3E 007C23                            _T0IF 007F92                            _RD16 007E6F  
                          _FLT0 007C08                            _CREN 007D5C                            _T0CS 007EAD  
                          _FERR 007D5A                            _DONE 007E11                            _T0IP 007F8A  
                          _IBOV 007CB5                            _CVR0 007DA8                            _CVR1 007DA9  
                          _PDC0 007DB8                            _CVR2 007DAA                            _PDC1 007DB9  
                          _FREE 007D34                            _CVR3 007DAB                            _PDC2 007DBA  
                          _PDC3 007DBB                            _PDC4 007DBC                            _T0SE 007EAC  
                          _PDC5 007DBD                            _CSRC 007D67                            u2300 11DA  
                          u2220 086A                            _PDC6 007DBE                            u2301 11D8  
                          u2221 0868                            _LATA 000F89                            u2310 11EA  
                          u2230 0950                            _LATB 000F8A                            u2311 11E8  
                          u2231 094E                            _LATC 000F8B                            u2400 178E  
                          u2320 11F8                            u2240 18FE                            _D_A2 007C3D  
                          _LATD 000F8C                            _FSR0 000FE9                            u2401 178C  
                          u2321 11F6                            u2241 18FC                            _LATE 000F8D  
                          _FSR1 000FE1                            u2410 17A4                            u2330 120C  
                          u2250 191C                            _FSR2 000FD9                            u2411 17A2  
                          u2331 120A                            u2251 191A                            u2420 1468  
                          u2340 122E                            u2260 119C                            u2421 1466  
                          u2341 122C                            u2261 119A                            u2430 14A0  
                          u2350 1236                            u2270 11AA                            u2431 149E  
                          u2351 1234                            u2271 11A8                            u2440 0CFA  
                          u2360 0E96                            u2280 11BA                            _INT0 007C08  
                          u2441 0CF8                            u2361 0E94                            u2281 11B8  
                          _INT1 007C09                            u2450 1778                            u2370 0ECC  
                          u2290 11C8                            _INT2 007C0A                            u2451 1776  
                          u2371 0ECA                            u2291 11C6                            _SDA1 007C14  
                          u2460 0A98                            u1900 16FE                            u2380 0F00  
                          _SDA2 007C19                            _RCD8 007D58                            u2461 0A96  
                          u1901 16FC                            u2381 0EFE                            _IPR1 000F9F  
                          u2470 0AB8                            u2390 0F32                            _IPR2 000FA2  
                          u2471 0AB6                            u2391 0F2E                            _PIE1 000F9D  
                          _IPR3 000FA5                            u2480 151E                            _IPEN 007E87  
                          _PIE2 000FA0                            u2481 151C                            u2537 1C0E  
                          _PEN1 007E2A                            _PIE3 000FA3                            _PEN2 007C2A  
                          u2396 0F34                            u1870 1678                            _CVRR 007DAD  
                          u1871 1676                            u1880 16A4                            u1881 16A2  
                          u1890 16E6                            u1891 16E4                            _SDI1 007C14  
                          _SCK1 007C13                            _PEIE 007F96                            _SDI2 007C19  
                          _SCK2 007C18                            _SCL1 007C13                            _SCL2 007C18  
                          _RBIE 007F93                            _RBIF 007F90                            _RCIE 007CED  
                          _RCIF 007CF5                            _RCEN 007E2B                            _SDO1 007C15  
                          _SDO2 007C1A                            _SEN1 007E28                            _PIR1 000F9E  
                          _SEN2 007C28                            _SCS0 007E98                            _RBIP 007F88  
                          _MSK0 007E40                            _PIR2 000FA1                            _SCS1 007E99  
                          _MSK1 007E41                            _PIR3 000FA4                            _MSK2 007E42  
                          _MSK3 007E43                            _RCIP 007CFD                            _MSK4 007E44  
                          _MSK5 007E45                            _MSK6 007E46                            _MSK7 007E47  
                          _OERR 007D59                            _RCON 000FD0                            _SCKP 007DC4  
                          _RCMT 007DC6                            _RBPU 007F8F                            _RX91 007D5E  
                          _PSP0 007C18                            _SMP1 007E3F                            _PSP1 007C19  
                          _SMP2 007C3F                            _PSP2 007C1A                            _PSP3 007C1B  
                          _PSP4 007C1C                            _PSP5 007C1D                            _PSP6 007C1E  
                          _TX91 007D66                            _PSP7 007C1F                            _RX9D 007D58  
                          _TMR0 000FD6                            _TMR1 000FCE                            _TMR2 000FCC  
                          _PROD 000FF3                            _RJPU 007C07                            _WCOL 007E37  
                          _SPEN 007D5F                            _RSEN 007E29                            _TX9D 007D60  
                          _SREN 007D5D                            _OSTS 007E9B                            _TXD8 007D60  
                          _TOSH 000FFE                            _TOSL 000FFD                            _WREG 000FE8  
                          _TRMT 007D61                            _STOP 007E3C                            _ZERO 007EC2  
                          _TXIE 007CEC                            _TOSU 000FFF                            _WREN 007D32  
                          _TXIF 007CF4                            _TXEN 007D65                            _SYNC 007D64  
                          _TXIP 007CFC                            _R_W2 007C3A                 _FromMainHigh_MQ 0100  
                          _nBOR 007E80                   __CFG_FCMEN$ON 000000                            _nRC8 007D5E  
                          _nSS1 007C05                            _nSS2 007C1B                            _nPOR 007E81  
                          _nTX8 007D66          ?_block_on_To_msgqueues 0001                            _main 0750  
                          fsr0h 000FEA                            fsr1h 000FE2                            fsr0l 000FE9  
                          fsr2h 000FDA                            indf1 000FE7                            fsr1l 000FE1  
                          indf2 000FDF                            fsr2l 000FD9                     main@msgtype 01D8  
                    i1_send_msg 123C                            pclat 000FFA                     i2_check_msg 1B30  
                          prodh 000FF4                            prodl 000FF3           handle_start@data_read 0032  
                          start 00D2                      i2_recv_msg 0B8A                   __CFG_FOSC2$ON 000000  
              ?_adc_int_handler 0001                      i2_send_msg 0DA4       ToMainHigh_recvmsg@msgtype 01BB  
                  _ECCP1DELbits 000FB7                 __end_of_ReadADC 1C70                    _ECCP1CONbits 000FBD  
                send_msg@length 01AE                 __end_of_OpenADC 1528     __size_of_timer0_int_handler 00C0  
                   _Delay1KTCYx 1C0C           ??_FromMainLow_recvmsg 0045                           l17010 177A  
                         l17011 177A                           l10996 1C78                           l17008 175E  
                         l12792 1B2E                           l17009 1738                           l16412 1524  
                         l14580 17C8                           l16500 1212                           l16413 1526  
                         l14581 17C6                           l16501 123A                           l12789 166E  
                         l14582 17C8                           l16502 123A                           l16425 1BDC  
                         l17073 1C0C                           l17074 1C1E                           l16450 1906  
                         l17075 1C1E                           l14579 1792                           l16451 1920  
                         l16452 1922                           l16453 1924                           l19101 0958  
                         _C1INV 007DA4                           l19111 1BDE                           l19103 09A8  
                         _DC1B0 007DEC                           l19201 122E                           l16449 1902  
                         l19121 1658                           l19113 1BE6                           l19105 09CC  
                         l19041 076E                           _DC1B1 007DED                           l16490 119E  
                         l16395 1C8A                           l19211 0EAA                           l19203 1236  
                         l16491 11AE                           l19131 15AA                           l19123 165A  
                         l19115 17CA                           l19107 0A1E                           l19051 07AA  
                         l19043 0786                           l19035 0750                           l16492 11BC  
                         _DC2B0 007DD4                           l19301 1754                           l19221 0F00  
                         l19213 0ECC                           l19205 0E7E                           l16493 11CC  
                         l19141 18F2                           l19133 15C2                           l19125 165C  
                         l19117 17D2                           l19109 0A20                           l19061 07D0  
                         l19053 07AE                           l19045 079E                           l19037 0754  
                         _DC2B1 007DD5                           l16494 11CE                           _C2INV 007DA5  
                         l19303 175E                           l19311 0A98                           l19231 1A06  
                         l19223 0F0C                           l19215 0ED8                           l19207 0E98  
                         l16495 11DC                           l19151 191C                           l19143 18FE  
                         l19135 15DA                           l19127 165E                           l19119 160C  
                         l19071 07DC                           l19063 07D4                           l19055 07B2  
                         l19047 07A2                           l19039 0756                           l16496 11EC  
                         l19321 0B1A                           l19313 0AB8                           l19305 0A4A  
                         l19241 1B0A                           l19233 1A34                           l19225 0F10  
                         l19217 0EDC                           l19209 0E9C                           l16497 11FC  
                         l19161 1B70                           l19153 1B56                           l19145 1906  
                         l19137 15F2                           l19129 159E                           l19081 085E  
                         l19073 07F2                           l19065 07D6                           l19057 07B6  
                         l19049 07A6                           l16498 11FE                           l19331 0B80  
                         l19323 0B4C                           l19315 0ABC                           l19307 0A64  
                         l19251 1790                           l19243 1B2A                           l19235 1C70  
                         l19227 0F12                           l19219 0EDE                           l16499 1210  
                         l19171 1190                           l19163 1B72                           l19155 1B5E  
                         l19147 190E                           l19139 18E8                           l19091 08E0  
                         l19083 086C                           l19075 07F4                           l19067 07D8  
                         l19059 07BA                           l19325 0B6A                           l19317 0ABE  
                         l19333 0B82                           l19309 0A86                           l19261 145A  
                         l19253 1792                           l19245 1A66                           l19237 1A36  
                         l19229 0F28                           l19181 11DA                           l19173 119C  
                         l19165 1B74                           l19157 1B6A                           l19149 1910  
                         l19085 0872                           l19093 08E2                           l19077 081A  
                         l19069 07DA                           l19335 0B86                           l19327 0B76  
                         l19319 0AE4                           l19271 0C9E                           l19263 146A  
                         l19255 17A4                           l19247 1A90                           l19239 1A64  
                         l19191 121E                           l19183 11EA                           l19175 11AA  
                         l19167 1B76                           l19159 1B6E                           l19087 08CC  
                         l19095 0904                           l19079 081E                           l19361 14A4  
                         l19353 1964                           l19329 0B7E                           l19281 0CFE  
                         l19273 0CAC                           l19265 146C                           l19257 141E  
                         l19249 177C                           l19193 1220                           l19185 11F8  
                         l19177 11BA                           l19169 1188                           l19097 0944  
                         l19089 08CE                           l19371 151E                           l19363 14AC  
                         l19355 199A                           l19291 0D9E                           l19283 0D00  
                         l19275 0CC6                           l19267 148C                           l19259 144A  
                         l19195 1222                           l19187 120C                           l19179 11C8  
                         l19099 0952                           l19373 1BC2                           l19365 14B8  
                         l19357 1C0C                           l19293 0DA2                           l19285 0D30  
                         l19277 0CE8                           l19269 1492                           l19197 1224  
                         l19189 1216                           l19375 1C88                           l19367 14D8  
                         l19359 1C14                           l19295 1726                           l19287 0D60  
                         l19279 0CFA                           l18831 1BF8                           l19199 1226  
                         l19369 1512                           l19297 1738                           l19289 0D92  
                         l18833 1C0A                           l18841 168A                           l19299 174C  
                         l18851 16B8                           l18843 168C                           l18835 1670  
                         l18853 16C8                           l18845 16A4                           l18837 1678  
                         l18861 170E                           l18829 1C7A                           l18847 16B4  
                         l18839 1688                           l18863 1710                           l18855 16CE  
                         l18849 16B6                           l18857 16E6                           l18865 1712  
                         _C1OUT 007DA6                           l18867 1722                           l18859 16FE  
                         _C2OUT 007DA7                           _ABDEN 007DC0                           _ADCAL 007E17  
                         _ADCS0 007E00                           _ADCS1 007E01                           _ADCS2 007E02  
         ??_FromMainLow_sendmsg 01BC                           _ADDEN 007D5B                           _CCP10 007C22  
                         ?_main 0001                           _ACKEN 007E2C                           _ACKDT 007E2D  
                         _CCP2E 007C27                           _CCP6E 007C26                           _CCP7E 007C25  
                         _CCP8E 007C24                           _CCP9E 007C23                           _BCLIE 007D03  
                         _BCLIF 007D0B                           _CCP1X 007DED                           _CCP1Y 007DEC  
                         _CCP2X 007DD5                           _ACQT0 007E03                           _CCP2Y 007DD4  
                         _ACQT1 007E04                           _ACQT2 007E05                           _BCLIP 007D13  
                         _ADRES 000FC3                           _CCPR1 000FBE                           _CCPR2 000FBB  
                         _BRG16 007DC3                           _GCEN1 007E2F                           _GCEN2 007C2F  
                         _CMEN0 007DA0                           _CMEN1 007DA1                           _CMEN2 007DA2  
                         _CARRY 007EC0                           _CHSN3 007E0B                           _BRGH1 007D62  
                         _CMCON 000FB4                           _CREN1 007D5C                           _FERR1 007D5A  
                         _T0CKI 007C0D                           _T1CKI 007C10                           _IDLEN 007E9F  
                         _T0CON 000FD5                           _T1CON 000FCD                           _CSRC1 007D67  
                         _T2CON 000FCA                           _LATA0 007C48                           _LATA1 007C49  
                         _LATB0 007C50                           _LATA2 007C4A                           _INDF0 000FEF  
                         _LATB1 007C51                           _LATA3 007C4B                           _INDF1 000FE7  
                         _LATC0 007C58                           _LATB2 007C52                           _INDF2 000FDF  
                         _LATC1 007C59                           _LATB3 007C53                           _LATA5 007C4D  
                         _LATD0 007C60                           _LATC2 007C5A                           _LATB4 007C54  
                         _LATD1 007C61                           _LATC3 007C5B                           _LATB5 007C55  
                         _LATA7 007C4F                           _LATE0 007C68                           _LATD2 007C62  
                         _LATC4 007C5C                           _LATB6 007C56                           _RC1IE 007CED  
                         _LATE1 007C69                           _LATD3 007C63                           _LATC5 007C5D  
                         _LATB7 007C57                           _RC1IF 007CF5                           _LATE2 007C6A  
                         _LATD4 007C64                           _LATC6 007C5E                           _LATD5 007C65  
                         _LATC7 007C5F                           _T0PS0 007EA8                           _LATD6 007C66  
                         _T0PS1 007EA9                           _LATD7 007C67                           _T0PS2 007EAA  
                         _RC1IP 007CFD                           _FSR0H 000FEA                           _FSR1H 000FE2  
                         _FSR2H 000FDA                           _FSR0L 000FE9                           _PCFG0 007E08  
                         _FSR1L 000FE1                           _PCFG1 007E09                           _PCFG2 007E0A  
                         _FSR2L 000FD9                           _PCFG3 007E0B                           _T1OSI 007C11  
                         _INT0E 007F94                           _INT0F 007F91                           _INT1E 007F83  
                         _INT1F 007F80                           _CVREF 007C02                           _T1OSO 007C10  
                         _INT2E 007F84                           _INT2F 007F81                           _CVREN 007DAF  
                         _INT1P 007F86                           _INT2P 007F87                           _T1RUN 007E6E  
                         _CVROE 007DAE                           _RC8_9 007D5E                           _RCEN1 007E2B  
                    i1memcpy@d1 0001                           _RCEN2 007C2B                           _PCLAT 000FF9  
                         _CVRSS 007DAC                           _MSK01 007E40                           _MSK02 007C40  
                         _MSK11 007E41                           _MSK12 007C41                           _MSK21 007E42  
                         _MSK22 007C42                           _MSK31 007E43                           _MSK32 007C43  
                         _MSK41 007E44                           _MSK42 007C44                           _MSK51 007E45  
                         _RCIDL 007DC6                           _MSK52 007C45                           _MSK61 007E46  
                         _MSK62 007C46                           _MSK71 007E47                           _MSK72 007C47  
                         _OERR1 007D59                      i1memcpy@s1 0003     FromMainHigh_recvmsg@msgtype 00BE  
                         _VCFG0 007E0C                           _VCFG1 007E0D                           _RCREG 000FAE  
                         _SENDB 007D63                           _LVDIN 007C05                           _PLLEN 007CDE  
                         _RCSTA 000FAB                           _RX9D1 007D58                           _WCOL1 007E37  
                         _WCOL2 007C37                           _SPEN1 007D5F                           _TMR0H 000FD7  
                         _RSEN1 007E29                           _RSEN2 007C29                           _TMR1H 000FCF  
                         _TX1IE 007CEC                           _TX1IF 007CF4                           _TMR0L 000FD6  
                         _PRODH 000FF4                           _TX9D1 007D60                           _TMR1L 000FCE  
                         _PRODL 000FF3                           _SREN1 007D5D                           _SPBRG 000FAF  
                         _D_nA2 007C3D                           _TX1IP 007CFC                           _NOT_A 007E3D  
                         _PORTA 000F80                           _PORTB 000F81                           _PORTC 000F82  
                         _PORTD 000F83                           _PORTE 000F84                           _PSPIE 007CEF  
                         _PSPIF 007CF7                           _SRENA 007D5D                           _PRSEN 007DBF  
                         _PSPIP 007CFF                           _NOT_W 007E3A                           _START 007E3B  
                         _SSPM0 007E30                           _SSPM1 007E31                           _SSPM2 007E32  
                         _SSPM3 007E33                           _TX8_9 007D66                           _TRISA 000F92  
                         _TRISB 000F93                           _VREFM 007C02                           _TRMT1 007D61  
                         _STOP1 007E3C                           _TRISC 000F94                           _STOP2 007C3C  
                         _TRISD 000F95                           _SSPIE 007CEB                           _TRISE 000F96  
                         _VREFP 007C03                           _SSPIF 007CF3                           _SSPEN 007E35  
                         _TXEN1 007D65                           _SWDTE 007E88                           _SYNC1 007D64  
                         _SSPIP 007CFB                           _SSPOV 007E36                           _WRERR 007D33  
                         _TXREG 000FAD                           _TXSTA 000FAC                           _R_nW2 007C3A  
                    i2memcpy@d1 0032                           _nDONE 007E11                      i2memcpy@s1 0034  
                  ?_init_queues 0001                           _nRBPU 007F8F       __size_of_enter_sleep_mode 0006  
               __end_of_in_main 1726                           _errno 0045      ToMainLow_recvmsg@maxlength 01BA  
       timer0_lthread@msgbuffer 01A8                      _ConvertADC 1C88         i2c_configure_slave@addr 01A2  
                         tablat 000FF5                           status 000FD8                __end_ofi1_memcpy 185C  
              __end_ofi2_memcpy 18A4                 __initialization 1A92                    __end_of_main 0A4A  
                    _ReadTimer1 1C20     __size_of_timer1_int_handler 003E      __size_of_ToMainLow_recvmsg 0030  
    __size_of_ToMainLow_sendmsg 0024   __size_of_FromMainHigh_recvmsg 0028           __size_ofi2_in_low_int 0044  
                        ??_main 01BF                 send_msg@msgtype 01AF                   __activetblptr 000000  
               send_msg@tlength 01B3      FromMainLow_sendmsg@msgtype 01B9                      _SetChanADC 1BC2  
          __end_of_handle_start 1394          i2c_int_handler@msgtype 00D8                          _ADDEN1 007D5B  
                        _BCL1IE 007D03                          _BCL1IF 007D0B                          _BCL2IE 007D1E  
                        _BCL2IF 007D26                          _BCL1IP 007D13                          _BCL2IP 007D2E  
                        _ADCON0 000FC2                          _ADCON1 000FC1                          _ADCON2 000FC0  
                        _ACKEN1 007E2C                          _ACKEN2 007C2C                          _ABDOVF 007DC7  
                        _ACKDT1 007E2D                          _ACKDT2 007C2D                          _CCP1M0 007DE8  
                        _CCP1M1 007DE9                          _CCP1M2 007DEA                          _CCP1M3 007DEB  
                        _CCP2M0 007DD0                          _CCP2M1 007DD1                          _CCP2M2 007DD2  
                        _CCP2M3 007DD3                          _CCP1IE 007CEA                          _CCP1IF 007CF2  
                        _CCP2IE 007D00                          _CCP2IF 007D08                          _CCP1IP 007CFA  
                        _CCP2IP 007D10                          _ADMSK1 007E29                          _ADMSK2 007E2A  
                        _ADMSK3 007E2B                          _ADMSK4 007E2C                          _ADMSK5 007E2D  
                        _ADRESH 000FC4                          _ADRESL 000FC3                          _CCPR1H 000FBF  
                        _CCPR2H 000FBC                          _CCPR1L 000FBE                          _CCPR2L 000FBB  
                        _EECON1 000FA6                          _EECON2 000FA7                          _T08BIT 007EAE  
       ??_uart_recv_int_handler 001B                          _T1RD16 007E6F                          _GODONE 007E11  
                        _INT0IE 007F94                          _INT0IF 007F91                          _INT1IE 007F83  
                        _INT1IF 007F80                          _INT2IE 007F84                          _INT2IF 007F81  
                        _INT1IP 007F86                          _CVRCON 000FB5                          _INT2IP 007F87  
                        _MEMCON 000FCB                          i1l1825 006C                          i1l1826 007C  
                        i1l1827 008C                          i1l1828 008C                          _CVROEN 007DAE  
                        _T1SYNC 007E6A                          i1l5473 127A                          i2l1802 1C62  
                        i2l1810 18E6                          i1l5474 12EC                      _OpenTimer1 18E8  
                        i2l1811 18D8                          i2l1812 18E4                          i2l1820 13D0  
                        i2l1821 13E0                          i1l5485 1B9C                          i2l1822 13E4  
                __CFG_WDTEN$OFF 000000                          i2l1808 18BA                          i2l1809 18E6  
                        i1l9203 115C                          i1l9204 115A                          _PCLATH 000FFA  
                        i1l9205 1186                          i1l9206 1186                          i2l5520 1C86  
                        i2l5512 1B08                          i2l5504 1AE0                          _PCLATU 000FFB  
                        i2l5530 157A                          i2l5523 1B54                          i2l5531 1598  
                        i2l5526 1534                          i2l5527 159C                          i2l5480 0C9C  
                        i2l5528 1548                          _INTCON 000FF2                          i2l5473 0DF6  
                        i2l5529 155C                          i2l7401 072E                          i2l5474 0E7C  
                        i2l7402 072C                          i2l7403 074E                          i2l7404 074E  
                        i2l5477 0C96                          i2l5493 1BC0                          i2l5478 0BEC  
                        i2l7350 137E                          i2l7342 1080                          i2l5479 0C9C  
                        i2l7351 136A                          i2l7343 1024                          i2l7352 137C  
                        i2l7344 109E                          i2l7360 0540                          i2l7353 1392  
                        i2l7345 10D0                          i2l7361 019E                          i2l7354 1392  
                        i2l7370 0300                          i2l7362 01E8                          i2l7371 02FE  
                        i2l7363 01E6                          i2l7348 1380                          i2l7364 0568  
                        i2l7380 045E                          i2l7372 02CC                          i2l7349 1350  
                        i2l7381 043A                          i2l7373 0298                          i2l7365 01EA  
                        i2l7357 0170                          i2l7390 0536                          i2l7382 0408  
                        i2l7374 02CA                          i2l7366 025A                          i2l7358 018E  
                        _TABLAT 000FF5                          i2l7391 0590                          i2l7383 0438  
                        i2l7375 02FC                          i2l7367 0248                          i2l7359 0568  
                        i2l7384 044C                          i2l7376 0302                          i2l7368 0228  
                        i2l7393 0582                          i2l7385 053C                          i2l7377 037E  
                        i2l7369 0248                          i2l7394 058E                          i2l7386 053A  
                        i2l7378 0390                          i2l7395 05E2                          i2l7387 04BC  
                        i2l7379 0392                          i2l7396 0690                          i2l7388 0538  
                        i2l7397 0668                          i2l7389 0506                          i2l7398 068E  
                        _VCFG01 007E0C                          _VCFG11 007E0D                          _RCREG1 000FAE  
   __end_of_i2c_configure_slave 1B7A                          _SENDB1 007D63                   ??_SleepIfOkay 0036  
            __size_of_ReadUSART 0038                          _RCSTA1 000FAB                          _OSCFIE 007D07  
                        _OSCFIF 007D0F                          _OSCCON 000FD3                          _OSCFIP 007D17  
                        _TBLPTR 000FF6                          _TMR0IE 007F95                          _SPBRG1 000FAF  
                        _TMR0IF 007F92                          _TMR1IE 007CE8                          _TMR1IF 007CF0  
                        _TMR1CS 007E69                          _TMR2IE 007CE9                          _TMR2IF 007CF1  
                        _TMR0IP 007F8A                          _PSSAC0 007DB2                          _PSSAC1 007DB3  
                        _TMR1IP 007CF8                          _PSSBD0 007DB0                          _PSSBD1 007DB1  
                        _TMR2IP 007CF9                          _TMR0ON 007EAF                          _SPBRGH 000FB0  
                        _TMR1ON 007E68                          _PLUSW0 000FEB                          _PLUSW1 000FE3  
                        _TMR2ON 007E52                          _PLUSW2 000FDB                          _NOT_CS 007C22  
                        _SSP1IE 007CEB                          _SSP1IF 007CF3                          _SSP2IE 007D1F  
                        _SSP2IF 007D27                          _NOT_PD 007E82                          _NOT_RD 007C20  
                        _SSP1IP 007CFB                          _WDTCON 000FD1                          _NOT_RI 007E84  
                        _SSP2IP 007D2F                          _NOT_TO 007E83                          _START1 007E3B  
                        _START2 007C3B                          _SOSCEN 007E6B                          _NOT_WR 007C21  
                        _SSPM01 007E30                          _SSPM02 007C30                          _SSPM11 007E31  
                        _SSPM12 007C31                          _SSPM21 007E32                          _SSPM22 007C32  
                        _SSPM31 007E33                          _SSPM32 007C33                          _SSPADD 000FC8  
                        _TRISA0 007C90                          _TRISA1 007C91                          _TRISB0 007C98  
                        _TRISA2 007C92                          _TRISB1 007C99                          _TRISA3 007C93  
                        _TRISC0 007CA0                          _TRISB2 007C9A                          _TRISC1 007CA1  
                        _TRISB3 007C9B                          _TRISA5 007C95                          _TRISD0 007CA8  
                        _TRISC2 007CA2                          _TRISB4 007C9C                          _TRISD1 007CA9  
                        _TRISC3 007CA3                          _TRISB5 007C9D                          _TRISE0 007CB0  
                        _TRISD2 007CAA                          _TRISC4 007CA4                          _TRISB6 007C9E  
                        _TRISE1 007CB1                          _TRISD3 007CAB                          _TRISC5 007CA5  
                        _TRISB7 007C9F                          _TRISE2 007CB2                          _TRISD4 007CAC  
                        _TRISC6 007CA6                          _TRISD5 007CAD                          _TRISC7 007CA7  
                        _SSPEN1 007E35                          _TRISD6 007CAE                          _SSPEN2 007C35  
                        _TRISD7 007CAF                          _STATUS 000FD8                          _STKFUL 007FE7  
                        _SSPBUF 000FC9                          _SWDTEN 007E88                          _STKOVF 007FE7  
                        _SSPOV1 007E36                          _SSPOV2 007C36                          _STKUNF 007FE6  
                        _STKPTR 000FFC  __size_of_start_i2c_slave_reply 00C0                          _TXREG1 000FAD  
                   ?i1_send_msg 000B                       ??_ReadADC 0003                          _TXSTA1 000FAC  
 __end_of_start_i2c_slave_reply 10D2              timer0_lthread@tptr 01A2         FromMainLow_recvmsg@data 00C0  
                   ?i2_recv_msg 003C                       ??_OpenADC 01A5                    i2_in_low_int 18A4  
                   ?i2_send_msg 003C                  __CFG_XINST$OFF 000000              __size_of_OpenUSART 00B4  
               _i2c_int_handler 00D6                          _ic_ptr 004A                   main@msgbuffer 01C0  
              __end_of_init_i2c 1814                OpenTimer1@config 01A2                          _memcpy 1726  
                        clear_0 1A98                          clear_1 1AA4                          _uc_ptr 004C  
                        main@ic 01D9                          main@uc 01D2                __end_of_recv_msg 0B8A  
   start_i2c_slave_reply@length 0032                       ??_in_main 01A8                __end_of_send_msg 0DA4  
         timer0_int_handler@val 00C8         i2c_int_handler@i2c_data 00D7                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                     init_queue@i 01A5  
      ToMainLow_recvmsg@msgtype 01BB            __size_of_in_high_int 0014                     ?_ConvertADC 0001  
       FromMainLow_sendmsg@data 01BA                 __CFG_FOSC$HSPLL 000000                      __accesstop 0080  
       __end_of__initialization 1AB4      __end_of_ToMainHigh_recvmsg 1A36      __end_of_ToMainHigh_sendmsg 1BC2  
   __end_of_init_timer1_lthread 1670             __end_of_SleepIfOkay 159E                  __pcstackCOMRAM 0001  
        __size_ofi2_in_high_int 000E                     ?_ReadTimer1 0001              __size_of_check_msg 0038  
             __end_of_ReadUSART 19D4       timer0_int_handler@msgtype 00C4                     ?_SetChanADC 01A2  
           __size_ofi1_send_msg 00B2                       ?i1_memcpy 0001   __size_of_InterruptHandlerHigh 1416  
   __end_of_InterruptHandlerLow 00D2                       ?i2_memcpy 0032                   _ToMainHigh_MQ 016C  
           __size_ofi2_recv_msg 0114                _enter_sleep_mode 1C82             __size_ofi2_send_msg 00DA  
          timer1_lthread@length 01A6                   ReadUSART@data 0001               __end_of_OpenUSART 123C  
                 check_msg@qptr 01A2         ??_block_on_To_msgqueues 01A8            __size_of_init_queues 006E  
                    __pbssBANK0 0080                      __pbssBANK1 0100                     ?_OpenTimer1 01A2  
                    __pnvCOMRAM 004A         __end_of_i2c_int_handler 0750                    ?i2_check_msg 0032  
            timer1_lthread@tptr 01A2                   _DATA_ADDRESS2 007C3D               recv_msg@maxlength 01AE  
               recv_msg@msgtype 01AF                 recv_msg@tlength 01B6                         _CCP1CON 000FBD  
                       _CCP2CON 000FBA           __size_of_handle_start 00A6                    ?_Delay1KTCYx 01A2  
              WriteTimer0@timer 0034                         _ADMSK11 007E29                         _ADMSK12 007C29  
                       _ADMSK21 007E2A                         _ECCP1AS 000FB6                         _ADMSK22 007C2A  
                       _ADMSK31 007E2B                         _ADMSK32 007C2B                         _ADMSK41 007E2C  
                       _ADMSK42 007C2C                         _ADMSK51 007E2D                         _ADMSK52 007C2D  
                       ?_memcpy 01A2                         _BAUDCON 000FB8                         _ACKSTAT 007E2E  
                       _BAUDCTL 000FB8                WriteTimer1@timer 0003                   ??_WriteTimer0 0034  
                 ??_WriteTimer1 0003                         _ECCPAS0 007DB4                         _ECCPAS1 007DB5  
                       _ECCPAS2 007DB6                         _ECCPASE 007DB7             __size_of_ConvertADC 0004  
       __size_of_timer0_lthread 000A                         _T1CKPS0 007E6C                         _T1CKPS1 007E6D  
                       _T2CKPS0 007E50                         _T2CKPS1 007E51         __size_of_timer1_lthread 0026  
                       _T1OSCEN 007E6B                         i1l17010 185A                         i1l17011 185A  
                       i1l17008 1844                         i1l17009 1826                         i1l16420 1C6E  
                       i1l16511 19B6                         i1l16512 19B6                         i1l16513 19C0  
                       i1l16514 19CA                         i1l16515 19D2                         i1l16460 1C30  
                       i1l16390 1A04                         i1l16467 1C42                         i1l16387 1962  
                       i1l17731 1C20                         i1l17733 1C32                         i1l18621 19BE  
                       i1l18613 199C                         i1l17735 1C64                         i1l18623 19C8  
                       i1l18615 19A0                         i1l17737 1C6E                         i1l18625 19CE  
                       i1l18617 19A8                         i1l18801 1124                         i1l18731 1814  
                       i1l18627 19D2                         i1l18619 19B2                         i1l18803 1148  
                       i1l18811 005C                         i1l18733 1826                         i1l18805 115C  
                       i1l18821 0076                         i1l18813 0064                         i1l18735 183A  
                       i1l18751 123C                         i1l18807 1164                         i1l18823 007C  
                       i1l18815 0066                         i1l18737 183E                         i1l18761 1278  
                       i1l18753 1242                         i1l18809 1168                         i1l18825 0084  
                       i1l18817 006C                         i1l18739 1844                         i1l18771 12E8  
                       i1l18763 127A                         i1l18755 1252                         i1l18827 0086  
                       i1l18819 0074                         i1l18773 12EC                         i1l18765 129A  
                       i1l18757 1262                         i1l18781 1932                         i1l18767 12BA  
                       i1l18759 1274                         i1l18775 1B7A                         i1l18791 19E8  
                       i1l18783 194E                         i1l18769 12DC                         i1l18777 1B9C  
                       i1l18793 10D2                         i1l18785 1956                         i1l18795 10DA  
                       i1l18787 19D4                         i1l18779 1926                         i1l18797 1100  
                       i1l18789 19E0                         i1l18799 110E                         i2l17010 18A2  
                       i2l17011 18A2                         i2l17008 188C                         i2l17009 186E  
                       i2l19001 05B2                         i2l16434 1C54                         i2l19011 0670  
                       i2l19003 05E2                         i2l19021 072E                         i2l19005 05F0  
                       i2l19013 0690                         i2l16383 1010                         i2l19031 0FC4  
                       i2l19023 073C                         i2l19015 06A6                         i2l19007 063A  
                       i2l16384 1010                         i2l19033 0FD6                         i2l19025 0F52  
                       i2l19017 06E2                         i2l19009 0652                         i2l18251 1528  
                       i2l19027 0F6E                         i2l19019 071A                         i2l18261 155A  
                       i2l18253 1532                         i2l19029 0F7A                         _INTEDG0 007F8E  
                       i2l18271 1598                         i2l18263 155C                         i2l18255 1534  
                       _INTEDG1 007F8D                         _INTEDG2 007F8C                         i2l19401 0B8A  
                       i2l18601 130E                         i2l18265 1578                         i2l18257 1546  
                       i2l19411 0BEA                         i2l19403 0B9E                         i2l18603 1318  
                       i2l18611 1380                         i2l18267 157A                         i2l18259 1548  
                       i2l19421 0C7E                         i2l19413 0BEC                         i2l19405 0BB8  
                       i2l18605 1320                         i2l19341 1ABA                         i2l18269 1596  
                       i2l19431 0C9A                         i2l19423 0C8A                         i2l19415 0C0E  
                       i2l19407 0BCA                         i2l18607 1358                         i2l19351 1B08  
                       i2l19343 1AE0                         i2l19441 188C                         i2l19433 185C  
                       i2l19425 0C92                         i2l19417 0C3E                         i2l19409 0BE6  
                       i2l18609 136A                         i2l19337 1B9E                         i2l19435 186E  
                       i2l19427 0C94                         i2l19419 0C60                         i2l18651 18A4  
                       i2l19339 1BC0                         i2l19437 1882                         i2l19429 0C96  
                       i2l19381 0DC4                         i2l18661 18CA                         i2l18653 18AC  
                       i2l18645 1C44                         i2l19349 1AE2                         i2l18901 017C  
                       i2l19439 1886                         i2l18727 1B30                         i2l19391 0E22  
                       i2l19383 0DDE                         i2l18647 1C56                         i2l18663 18D4  
                       i2l18655 18B6                         i2l18591 1070                         i2l18911 01C4  
                       i2l18903 018E                         i2l18729 1B54                         i2l19393 0E4A  
                       i2l19385 0DF0                         i2l19377 0DA4                         i2l18649 1C62  
                       i2l18665 18D6                         i2l18657 18B8                         i2l18593 1080  
                       i2l18577 1C82                         i2l18921 0228                         i2l18913 01F2  
                       i2l18905 019C                         i2l19395 0E6C                         i2l19387 0DF4  
                       i2l19379 0DB0                         i2l18667 18D8                         i2l18659 18BA  
                       i2l18595 109E                         i2l18587 1012                         i2l18931 0286  
                       i2l18915 0200                         i2l18923 025A                         i2l18907 01A6  
                       i2l19397 0E78                         i2l19389 0DF6                         i2l18669 18E2  
                       i2l18597 10CE                         i2l18589 1024                         i2l18941 0302  
                       i2l18933 0298                         i2l18925 0268                         i2l18917 020E  
                       i2l18909 01AE                         i2l19399 0E7C                         i2l18599 12EE  
                       i2l18951 039A                         i2l18943 032E                         i2l18935 02A8  
                       i2l18927 0276                         i2l18919 0216                         i2l18871 13C8  
                       i2l18961 03F6                         i2l18953 03A8                         i2l18945 035E  
                       i2l18937 02B8                         i2l18929 027E                         i2l18881 13E0  
                       i2l18873 13CA                         i2l18971 046C                         i2l18963 0408  
                       i2l18955 03B6                         i2l18947 036C                         i2l18939 02CC  
                       i2l18891 0140                         i2l18883 00D6                         i2l18875 13D0  
                       i2l18981 04D4                         i2l18973 047A                         i2l18957 03BE  
                       i2l18965 043A                         i2l18949 037E                         i2l18893 0150  
                       i2l18885 0126                         i2l18877 13D8                         i2l18869 13C0  
                       i2l18983 04E4                         i2l18975 0482                         i2l18967 044C  
                       i2l18959 03E8                         i2l18991 0540                         i2l18895 015E  
                       i2l18887 012E                         i2l18879 13DA                         i2l18993 0574  
                       i2l18985 04F4                         i2l18977 04AC                         i2l18969 045E  
                       i2l18889 0130                         i2l18897 0170                         i2l18995 058A  
                       i2l18979 04C4                         i2l18987 0506                         i2l18899 0178  
                       i2l18997 0590                         i2l18989 053E                         i2l18999 05A6  
                       _INTCON2 000FF1                      ??i1_memcpy 0007                         _INTCON3 000FF0  
                       _GO_DONE 007E11                      ??i2_memcpy 0038                         _TBLPTRH 000FF7  
                       _TBLPTRL 000FF6                         _PREINC0 000FEC                         _PREINC1 000FE4  
                       _PREINC2 000FDC                         _TBLPTRU 000FF8                         _OSCTUNE 000F9B  
                       _PWM1CON 000FB7                i1send_msg@length 000D                         _SSP1ADD 000FC8  
                       _SSP2ADD 000F88                         _NOT_BOR 007E80                         _NOT_RC8 007D5E  
                       _SSP1BUF 000FC9                         _SSP2BUF 000F8E                         _NOT_SS1 007C05  
                       _NOT_SS2 007C1B                         _NOT_POR 007E81                         _NOT_TX8 007D66  
                       _PSPMODE 007CB4                   i2_in_high_int 1C56                         _SSPCON1 000FC6  
                       _SSPCON2 000FC5                         _STKPTR0 007FE0                         _STKPTR1 007FE1  
                       _STKPTR2 007FE2                         _STKPTR3 007FE3                         _STKPTR4 007FE4  
                       _ULPWUIN 007C00                         _SSPSTAT 000FC7                         _TOUTPS0 007E53  
                       _TOUTPS1 007E54                         _TOUTPS2 007E55                         _TOUTPS3 007E56  
           __size_of_ReadTimer1 0012               __end_of_check_msg 199C                       _I2C_READ2 007C3A  
                     _I2C_STOP2 007C3C                       ?_init_i2c 01A2                     _SleepIfOkay 1528  
                       _ReadADC 1C64                       ?_recv_msg 01AC                         _OpenADC 14A4  
                    _in_low_int 1670                    _handle_start 12EE                         __Hparam 0000  
           __size_of_SetChanADC 001C                         _nT1SYNC 007E6A                       ?_send_msg 01AC  
                       __Lparam 0000      __end_of_timer0_int_handler 1012     __end_of_FromMainLow_recvmsg 1AE2  
   __end_of_FromMainLow_sendmsg 1A92                init_uart_recv@uc 01A2                         _nWRITE2 007C3A  
                     _CMCONbits 000FB4                 __CFG_STVREN$OFF 000000                         __pcinit 1A92  
               __size_of_memcpy 0056        __size_of_adc_int_handler 0032                      _init_queue 141E  
                       __ramtop 0400             __size_of_OpenTimer1 003E                         __ptext0 0750  
                       __ptext1 1C7A                         __ptext2 1BDE                         __ptext3 17CA  
                       __ptext4 160C                         __ptext5 159E                         __ptext6 18E8  
                       __ptext7 1B56                         __ptext8 1188                         __ptext9 0E7E  
                     _T0CONbits 000FD5                         _in_main 16CE                       _T1CONbits 000FCD  
                     _T2CONbits 000FCA             __end_of_WriteTimer0 1C56             __end_of_WriteTimer1 1C44  
                ?i2_in_high_int 0032                  OpenADC@config2 01A3                  __pintcode_body 1394  
  __end_of_FromMainHigh_recvmsg 1B0A            end_of_initialization 1AB4         timer1_lthread@msgbuffer 01A8  
                     _PEIE_GIEL 007F96  __size_of_uart_recv_int_handler 00B6                         memcpy@d 01A8  
                       memcpy@n 01A6                         memcpy@s 01AA   __end_of_uart_recv_int_handler 1188  
                    ??_init_i2c 01A4     i2c_int_handler@data_written 00D3                         int_func 1394  
                  ??i1_send_msg 0011                   ?_uart_lthread 01A2         __size_of_init_uart_recv 001A  
              ?_i2c_int_handler 0001                    ??i2_recv_msg 0043                      ??_recv_msg 01B3  
                  ??i2_send_msg 0042                      ??_send_msg 01B2            adc_int_handler@value 001D  
    __end_of_timer1_int_handler 1964                       _RCSTAbits 000FAB                         postdec2 000FDD  
                       postinc0 000FEE                         postinc2 000FDE       ToMainHigh_sendmsg@msgtype 00BE  
                     _PORTAbits 000F80                       _PORTBbits 000F81                       _PORTCbits 000F82  
                     _PORTDbits 000F83                       _PORTEbits 000F84              __end_ofi1_send_msg 12EE  
                     _TRISAbits 000F92                       _TRISBbits 000F93                       _TRISCbits 000F94  
                     _TRISDbits 000F95                       _TRISEbits 000F96              __end_ofi2_recv_msg 0C9E  
            __end_ofi2_send_msg 0E7E                    ??_ConvertADC 01A2                       _CapStatus 0047  
 FromMainHigh_recvmsg@maxlength 00BD        timer1_int_handler@result 001F                  ??_uart_lthread 01AA  
                   _CCP1CONbits 000FBD                     _CCP2CONbits 000FBA                       _TXSTAbits 000FAC  
                    main@length 01D7                     ?_in_low_int 01A4           timer0_lthread@msgtype 01A4  
         _start_i2c_slave_reply 1012    __size_of_i2c_configure_slave 0024            __size_ofi2_check_msg 0026  
      __end_of_enter_sleep_mode 1C88                    ??_ReadTimer1 0003                     _ECCP1ASbits 000FB6  
            _ToMainHigh_recvmsg 1A06                       i1memcpy@d 0007              _ToMainHigh_sendmsg 1B9E  
                     i1memcpy@n 0005                       i1memcpy@s 0009                     _BAUDCONbits 000FB8  
                _timer0_lthread 1C70                     ?_init_queue 01A2                       i2memcpy@d 0038  
                   _BAUDCTLbits 000FB8                     _WriteTimer0 1C44                     _WriteTimer1 1C32  
                     i2memcpy@n 0036                       i2memcpy@s 003A              __end_of_ConvertADC 1C8C  
                _timer1_lthread 1B0A                  __end_of_memcpy 177C               _enable_interrupts 1C7A  
          __size_of_Delay1KTCYx 0014                       _nADDRESS2 007C3D                    ??_SetChanADC 01A3  
           ?_ToMainHigh_recvmsg 01BA                 ??i2_in_high_int 0034        i2c_int_handler@data_read 00DB  
           ?_ToMainHigh_sendmsg 00BD              ?_enable_interrupts 0001             start_initialization 1A92  
                 ??_in_high_int 01A4                       _ReadUSART 199C               ??_adc_int_handler 001B  
             __size_ofi1_memcpy 0048               __size_ofi2_memcpy 0048       FromMainLow_sendmsg@length 01B8  
         i2c_int_handler@length 00D5             ??_enable_interrupts 01A2                    ??_OpenTimer1 01A3  
__size_of_block_on_To_msgqueues 00D4              __end_of_ReadTimer1 1C32   __end_of_block_on_To_msgqueues 0F52  
                     _OpenUSART 1188    __end_of_InterruptHandlerHigh 141E                      init_i2c@ic 01A2  
          ??_ToMainHigh_recvmsg 01BF            ??_ToMainHigh_sendmsg 0043              __end_of_SetChanADC 1BDE  
        __end_of_timer0_lthread 1C7A        i2c_int_handler@error_buf 00D0          __end_of_timer1_lthread 1B30  
     __end_of_enable_interrupts 1C82                        ??_memcpy 01A8           timer1_lthread@msgtype 01A4  
          _FromMainHigh_recvmsg 1AE2    __size_of_init_timer1_lthread 0064              __end_of_OpenTimer1 1926  
      i2c_int_handler@msg_ready 00DA                     __pbssCOMRAM 0045          timer1_int_handler@temp 001D  
                    ?_ReadUSART 0001                   ??_init_queues 01A6                   __pcstackBANK0 00B8  
                 __pcstackBANK1 01A2             __size_of_in_low_int 005E        start_i2c_slave_reply@msg 0033  
           __CFG_CCP2MX$DEFAULT 000000                 Delay1KTCYx@unit 01A2        ToMainLow_sendmsg@msgtype 0018  
  __size_of_InterruptHandlerLow 00BA             __end_of_in_high_int 1C0C                      ?_OpenUSART 01A2  
                  ?_SleepIfOkay 0001           ToMainLow_recvmsg@data 01BD                    _ToMainLow_MQ 0082  
           __size_of_init_queue 0086                  _init_uart_recv 1BDE                        ?_ReadADC 0001  
                     _check_msg 1964          ?_start_i2c_slave_reply 0032               __size_of_init_i2c 004A  
             OpenADC@portconfig 01A4                        ?_OpenADC 01A2                    recv_msg@data 01B1  
                  recv_msg@qmsg 01B8                    recv_msg@slot 01B5                    recv_msg@qptr 01AC  
             __size_of_recv_msg 0140                       __pintcode 0008               __size_of_send_msg 0106  
               ?_timer0_lthread 01A2           ?_FromMainHigh_recvmsg 00BD                 ?_timer1_lthread 01A2  
                   __pintcodelo 0018          ToMainHigh_recvmsg@data 01BD            __end_of_uart_lthread 17CA  
                      _I2C_DAT2 007C3D      i2c_int_handler@msg_to_send 00D9                        ?_in_main 01A6  
             WriteTimer0@timer0 0032                        _ECCP1DEL 000FB7                        _ECCP1CON 000FBD  
                      _CCP2_PA2 007C0B                        _ACKSTAT1 007E2E                        _ACKSTAT2 007C2E  
            _timer0_int_handler 0F52               WriteTimer1@timer1 0001             uart_lthread@msgtype 01A4  
         ToMainLow_sendmsg@data 0019                        _DDRAbits 000F92                        _DDRBbits 000F93  
                      _DDRCbits 000F94                        _DDRDbits 000F95                        _DDREbits 000F96  
           ?_timer0_int_handler 0001                        _GIE_GIEH 007F97                        _T1INSYNC 007E6A  
              uart_lthread@uptr 01A2          __end_of_init_uart_recv 1BF8             __end_of_init_queues 160C  
                      _NEGATIVE 007EC4                        _T2OUTPS0 007E53                        _T2OUTPS1 007E54  
                      _T2OUTPS2 007E55                        _T2OUTPS3 007E56                   OpenADC@config 01A2  
                      _LATAbits 000F89                        _LATBbits 000F8A                        _LATCbits 000F8B  
                      _LATDbits 000F8C                        _LATEbits 000F8D                 i2check_msg@qptr 0032  
                    ?_check_msg 01A2                        _IPR1bits 000F9F                        _IPR2bits 000FA2  
                      _PIE1bits 000F9D                        _IPR3bits 000FA5                        _PIE2bits 000FA0  
                      _PIE3bits 000FA3                   ?i2_in_low_int 0034                        i1u170_20 19BE  
                      i1u170_21 19BC                        i1u171_20 19C8                        i1u171_21 19C6  
                      i1u180_20 1274                        i1u180_21 1272                        i1u181_20 10DA  
                      i1u181_21 10D8                        i1u182_20 1124                        i1u182_21 1122  
                      i1u183_20 1164                        i1u183_21 1162                        i1u168_20 19A8  
                      i1u184_20 0064                        i1u168_21 19A6                        i1u184_21 0062  
                      i2u200_40 0216                        i2u200_41 0214                        i1u169_20 19B2  
                      i1u185_20 0074                        i1u169_21 19B0                        i1u185_21 0072  
                      i2u201_40 0268                        i2u201_41 0266                        i1u178_20 1858  
                      i1u186_20 0084                        i1u178_21 1856                        i1u186_21 0082  
                      i2u210_40 04C4                        i2u202_40 027E                        i2u210_41 04C2  
                      i2u202_41 027C                        i2u211_40 0574                        i2u203_40 0286  
                      i2u211_41 0572                        i2u203_41 0284                        i2u220_40 0F5C  
                      i2u212_40 0582                        i2u204_40 032E                        i2u220_41 0F58  
                      i2u212_41 0580                        i2u204_41 032C                        i2u220_46 0F5E  
                      i2u133_40 1530                        i2u221_40 0FD6                        i2u213_40 058A  
                      i2u205_40 039A                        i2u133_41 152E                        i2u221_41 0FD4  
                      i2u213_41 0588                        i2u205_41 0398                        i2u134_40 1544  
                      i2u214_40 05A6                        i2u206_40 03B6                        i2u134_41 1542  
                      i2u214_41 05A4                        i2u206_41 03B4                        i2u135_40 1558  
                      i2u215_40 05B2                        i2u207_40 03BE                        i2u135_41 1556  
                      i2u215_41 05B0                        i2u207_41 03BC                        i2u136_40 1576  
                      i2u216_40 05F0                        i2u208_40 046C                        i2u136_41 1574  
                      i2u216_41 05EE                        i2u208_41 046A                        i2u137_40 1594  
                      i2u217_40 0652                        i2u209_40 0482                        i2u137_41 1592  
                      i2u217_41 0650                        i2u209_41 0480                        i2u250_40 0BCA  
                      i2u218_40 06A6                        i2u250_41 0BC8                        i2u218_41 06A4  
                      i2u251_40 0BE6                        i2u219_40 073C                        i2u251_41 0BE4  
                      i2u219_41 073A                        i2u252_40 18A0                        i2u164_40 109C  
                      i2u252_41 189E                        i2u164_41 109A                        i2u173_40 18AC  
                      i2u165_40 1318                        i2u173_41 18AA                        i2u165_41 1316  
                      i2u174_40 18CA                        i2u166_40 1320                        i2u174_41 18C8  
                      i2u166_41 131E                        i2u167_40 1358                        i2u191_40 13C8  
                      i2u167_41 1356                        i2u191_41 13C6                        i2u192_40 13D8  
                      i2u192_41 13D6                        i2u249_40 0DF0                        i2u193_40 012E  
                      i2u249_41 0DEE                        i2u193_41 012C                        _PIR1bits 000F9E  
                      i2u194_40 0178                        i2u194_41 0176                        i2u195_40 019A  
                      i2u195_41 0198                        _PIR2bits 000FA1                        i2u196_40 01A6  
                      i2u196_41 01A4                        i2u197_40 01C4                        i2u197_41 01C2  
                      _PIR3bits 000FA4                        i2u198_40 01F2                        i2u198_41 01F0  
                      i2u199_40 020E                        i2u199_41 020C          ToMainHigh_sendmsg@data 00BF  
                      _GO_nDONE 007E11                        _RCONbits 000FD0                __CFG_WDTPS$32768 000000  
                      _OVERFLOW 007EC3                        _POSTDEC0 000FED                        _POSTDEC1 000FE5  
                      _POSTDEC2 000FDD                        _NOT_DONE 007E11                        _SSP1CON1 000FC6  
                      _SSP1CON2 000FC5                        _SSP2CON1 000F86                        _SSP2CON2 000F85  
                      _POSTINC0 000FEE                        _POSTINC1 000FE6                        _POSTINC2 000FDE  
                      _NOT_RBPU 007F8F            ??_timer0_int_handler 00C2                        _SSP1STAT 000FC7  
                      _SSP2STAT 000F87    FromMainLow_recvmsg@maxlength 00BD      __size_of_enable_interrupts 0008  
             i1send_msg@msgtype 000E               i1send_msg@tlength 0012      FromMainLow_recvmsg@msgtype 00BE  
                    _ADCON0bits 000FC2                      _ADCON1bits 000FC1                      _ADCON2bits 000FC0  
  __size_of_FromMainLow_recvmsg 0028    __size_of_FromMainLow_sendmsg 002C            timer0_lthread@length 01A6  
            _timer1_int_handler 1926                        i1_memcpy 1814            _InterruptHandlerHigh 0008  
                   ??_ReadUSART 0001                        i2_memcpy 185C            i2c_int_handler@F5030 0080  
          timer0_lthread@msgval 01AA        FromMainHigh_recvmsg@data 00C0                      _I2C_START2 007C3B  
                   _in_high_int 1BF8                    send_msg@data 01B0             _i2c_configure_slave 1B56  
                  send_msg@qmsg 01B6                    send_msg@slot 01B5                    send_msg@qptr 01AC  
                   _INTCON2bits 000FF1                     _INTCON3bits 000FF0           uart_lthread@msgbuffer 01A8  
           ?_timer1_int_handler 0001                 ?_init_uart_recv 01A2                     ??_OpenUSART 01A5  
          i2c_int_handler@empty 00CE                 OpenUSART@config 01A2                      _EECON1bits 000FA6  
                ??i2_in_low_int 0036           _uart_recv_int_handler 10D2                    ??_in_low_int 01A6  
              __size_of_ReadADC 000C                     _READ_WRITE2 007C3A                        __Hrparam 0000  
              __size_of_OpenADC 0084            ?_i2c_configure_slave 01A2                        __Lrparam 0000  
             ?_enter_sleep_mode 0001          ??_FromMainHigh_recvmsg 0045            ??_timer1_int_handler 001B  
               _adc_int_handler 19D4        __size_of_i2c_int_handler 067A              ??_enter_sleep_mode 0032  
                  ??_init_queue 01A4                    ?_WriteTimer0 0032                    ?_WriteTimer1 0001  
       ToMainLow_sendmsg@length 0017               main@t0thread_data 01CD           ?_InterruptHandlerHigh 0001  
                   _GO_NOT_DONE 007E11                __size_of_in_main 0058               i2send_msg@msgtype 003F  
   ToMainHigh_recvmsg@maxlength 01BA               i2send_msg@tlength 00B8         init_timer1_lthread@tptr 01A7  
                   _init_queues 159E              __end_of_in_low_int 16CE                        __ptext10 16CE  
                      __ptext11 1670                        __ptext20 0C9E                        __ptext12 1BF8  
                      __ptext21 0A4A                        __ptext13 1A06                        __ptext30 19D4  
                      __ptext22 1726                        __ptext14 1C70                        __ptext31 10D2  
                      __ptext23 1964                        __ptext15 1A36                        __ptext40 00D6  
                      __ptext32 1B7A                        __ptext24 1C0C                        __ptext16 1B0A  
                      __ptext41 0F52                        __ptext33 199C                        __ptext25 14A4  
                      __ptext17 1A66                        __ptext50 18A4                        __ptext42 1528  
                      __ptext34 1C20                        __ptext26 1BC2                        __ptext18 177C  
                      __ptext51 1C56                        __ptext43 1B9E                        __ptext35 1C32  
                      __ptext27 1C88                        __ptext19 141E                        __ptext52 0DA4  
                      __ptext44 1ABA                        __ptext36 1C64                        __ptext53 0B8A  
                      __ptext45 1AE2                        __ptext37 123C                        __ptext29 1926  
                      __ptext54 1B30                        __ptext46 1C82                        __ptext38 1814  
                      __ptext55 185C                        __ptext47 1012                        __ptext56 0000  
                      __ptext48 12EE                        __ptext49 1C44                    _SSP1CON1bits 000FC6  
                  _SSP1CON2bits 000FC5                  i1send_msg@data 000F                    _SSP2CON1bits 000F86  
                  _SSP2CON2bits 000F85                  i1send_msg@qmsg 0015                  i1send_msg@slot 0014  
                i1send_msg@qptr 000B              uart_lthread@length 01A6        timer0_int_handler@length 00C6  
                      _init_i2c 17CA             _init_timer1_lthread 160C                   __size_of_main 02FA  
                 ??i2_check_msg 0034               main@t1thread_data 01D0                     ??_check_msg 01A4  
            __end_of_init_queue 14A4            __size_of_SleepIfOkay 0076                        _recv_msg 0A4A  
         ??_i2c_configure_slave 01A3                        _send_msg 0C9E                  init_queue@qptr 01A2  
                    _CVRCONbits 000FB5           __size_of_uart_lthread 004E                  i2recv_msg@data 0041  
                i2recv_msg@qmsg 00BB                   ??_Delay1KTCYx 01A3                  i2recv_msg@slot 00B8  
                i2recv_msg@qptr 003C                    _SSP1STATbits 000FC7             _InterruptHandlerLow 0018  
          ?_init_timer1_lthread 01A7                    _SSP2STATbits 000F87             i2c_int_handler@data 00C4  
                   _OSCTUNEbits 000F9B                      _INTCONbits 000FF2                     _PWM1CONbits 000FB7  
                OpenUSART@spbrg 01A3                        memcpy@d1 01A2                        memcpy@s1 01A4  
         __end_ofi2_in_high_int 1C64    i2c_int_handler@overrun_error 00D4                i2send_msg@length 003E  
                      intlevel1 0000                        intlevel2 0000            ?_InterruptHandlerLow 0001  
       ??_start_i2c_slave_reply 0035                     _SSP1ADDbits 000FC8                     _SSP2ADDbits 000F88  
        ?_uart_recv_int_handler 0001                    _uart_lthread 177C               SetChanADC@channel 01A2  
                    _RCSTA1bits 000FAB           _block_on_To_msgqueues 0E7E                   ?_handle_start 0032  
              ??_timer0_lthread 01AA     __size_of_ToMainHigh_recvmsg 0030         __end_of_adc_int_handler 1A06  
   __size_of_ToMainHigh_sendmsg 0024                      _OSCCONbits 000FD3                ??_timer1_lthread 01AA  
      ToMainHigh_sendmsg@length 00BD             __end_ofi2_check_msg 1B56           ??_init_timer1_lthread 01A9  
        ??_InterruptHandlerHigh 00DC               _ToMainLow_recvmsg 1A36               _ToMainLow_sendmsg 1B7A  
            main@last_reg_recvd 01CF                      _NOT_T1SYNC 007E6A            __end_ofi2_in_low_int 18E8  
            ?_ToMainLow_recvmsg 01BA             __end_of_Delay1KTCYx 1C20               ??_i2c_int_handler 00C2  
            ?_ToMainLow_sendmsg 0017                     _SSPCON1bits 000FC6                     _SSPCON2bits 000FC5  
                    _WDTCONbits 000FD1                  i2send_msg@data 0040           ??_InterruptHandlerLow 0021  
           ??_ToMainLow_recvmsg 01BF                  i2send_msg@qmsg 00BB                  i2send_msg@slot 00BA  
                i2send_msg@qptr 003C             ??_ToMainLow_sendmsg 001B                      _SSPADDbits 000FC8  
                    _STATUSbits 000FD8             _FromMainLow_recvmsg 1ABA                  ??_handle_start 0033  
           _FromMainLow_sendmsg 1A66                    _USART_Status 0049  
