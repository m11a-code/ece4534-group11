

Microchip Technology PIC18 LITE Macro Assembler V1.10 build 47796 
                                                                                               Tue Sep 25 05:46:57 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 47796
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 47796"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	18F45J10
     8  0000                     porta	equ	0F80h
     9  0000                     portb	equ	0F81h
    10  0000                     portc	equ	0F82h
    11  0000                     portd	equ	0F83h
    12  0000                     porte	equ	0F84h
    13  0000                     lata	equ	0F89h
    14  0000                     latb	equ	0F8Ah
    15  0000                     latc	equ	0F8Bh
    16  0000                     latd	equ	0F8Ch
    17  0000                     late	equ	0F8Dh
    18  0000                     trisa	equ	0F92h
    19  0000                     trisb	equ	0F93h
    20  0000                     trisc	equ	0F94h
    21  0000                     trisd	equ	0F95h
    22  0000                     trise	equ	0F96h
    23  0000                     pie1	equ	0F9Dh
    24  0000                     pir1	equ	0F9Eh
    25  0000                     ipr1	equ	0F9Fh
    26  0000                     pie2	equ	0FA0h
    27  0000                     pir2	equ	0FA1h
    28  0000                     ipr2	equ	0FA2h
    29  0000                     t3con	equ	0FB1h
    30  0000                     tmr3l	equ	0FB2h
    31  0000                     tmr3h	equ	0FB3h
    32  0000                     ccp1con	equ	0FBDh
    33  0000                     ccpr1l	equ	0FBEh
    34  0000                     ccpr1h	equ	0FBFh
    35  0000                     adcon1	equ	0FC1h
    36  0000                     adcon0	equ	0FC2h
    37  0000                     adresl	equ	0FC3h
    38  0000                     adresh	equ	0FC4h
    39  0000                     sspcon2	equ	0FC5h
    40  0000                     sspcon1	equ	0FC6h
    41  0000                     sspstat	equ	0FC7h
    42  0000                     sspadd	equ	0FC8h
    43  0000                     sspbuf	equ	0FC9h
    44  0000                     t2con	equ	0FCAh
    45  0000                     pr2	equ	0FCBh
    46  0000                     tmr2	equ	0FCCh
    47  0000                     t1con	equ	0FCDh
    48  0000                     tmr1l	equ	0FCEh
    49  0000                     tmr1h	equ	0FCFh
    50  0000                     rcon	equ	0FD0h
    51  0000                     wdtcon	equ	0FD1h
    52  0000                     lvdcon	equ	0FD2h
    53  0000                     osccon	equ	0FD3h
    54  0000                     t0con	equ	0FD5h
    55  0000                     tmr0l	equ	0FD6h
    56  0000                     tmr0h	equ	0FD7h
    57  0000                     status	equ	0FD8h
    58  0000                     fsr2	equ	0FD9h
    59  0000                     fsr2l	equ	0FD9h
    60  0000                     fsr2h	equ	0FDAh
    61  0000                     plusw2	equ	0FDBh
    62  0000                     preinc2	equ	0FDCh
    63  0000                     postdec2	equ	0FDDh
    64  0000                     postinc2	equ	0FDEh
    65  0000                     indf2	equ	0FDFh
    66  0000                     bsr	equ	0FE0h
    67  0000                     fsr1	equ	0FE1h
    68  0000                     fsr1l	equ	0FE1h
    69  0000                     fsr1h	equ	0FE2h
    70  0000                     plusw1	equ	0FE3h
    71  0000                     preinc1	equ	0FE4h
    72  0000                     postdec1	equ	0FE5h
    73  0000                     postinc1	equ	0FE6h
    74  0000                     indf1	equ	0FE7h
    75  0000                     wreg	equ	0FE8h
    76  0000                     fsr0	equ	0FE9h
    77  0000                     fsr0l	equ	0FE9h
    78  0000                     fsr0h	equ	0FEAh
    79  0000                     plusw0	equ	0FEBh
    80  0000                     preinc0	equ	0FECh
    81  0000                     postdec0	equ	0FEDh
    82  0000                     postinc0	equ	0FEEh
    83  0000                     indf0	equ	0FEFh
    84  0000                     intcon3	equ	0FF0h
    85  0000                     intcon2	equ	0FF1h
    86  0000                     intcon	equ	0FF2h
    87  0000                     prod	equ	0FF3h
    88  0000                     prodl	equ	0FF3h
    89  0000                     prodh	equ	0FF4h
    90  0000                     tablat	equ	0FF5h
    91  0000                     tblptr	equ	0FF6h
    92  0000                     tblptrl	equ	0FF6h
    93  0000                     tblptrh	equ	0FF7h
    94  0000                     tblptru	equ	0FF8h
    95  0000                     pcl	equ	0FF9h
    96  0000                     pclat	equ	0FFAh
    97  0000                     pclath	equ	0FFAh
    98  0000                     pclatu	equ	0FFBh
    99  0000                     stkptr	equ	0FFCh
   100  0000                     tosl	equ	0FFDh
   101  0000                     tosh	equ	0FFEh
   102  0000                     tosu	equ	0FFFh
   103                           skipnz macro
   104                           	btfsc	status,2
   105  0000                     	endm
   106                           	global	__ramtop
   107                           	global	__accesstop
   108                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   109  0000                     PORTA equ 0F80h ;# 
   110                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   111  0000                     PORTB equ 0F81h ;# 
   112                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   113  0000                     PORTC equ 0F82h ;# 
   114                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   115  0000                     PORTD equ 0F83h ;# 
   116                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   117  0000                     PORTE equ 0F84h ;# 
   118                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   119  0000                     SSP2CON2 equ 0F85h ;# 
   120                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   121  0000                     SSP2CON1 equ 0F86h ;# 
   122                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   123  0000                     SSP2STAT equ 0F87h ;# 
   124                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   125  0000                     SSP2ADD equ 0F88h ;# 
   126                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   127  0000                     LATA equ 0F89h ;# 
   128                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   129  0000                     LATB equ 0F8Ah ;# 
   130                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   131  0000                     LATC equ 0F8Bh ;# 
   132                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   133  0000                     LATD equ 0F8Ch ;# 
   134                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   135  0000                     LATE equ 0F8Dh ;# 
   136                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   137  0000                     SSP2BUF equ 0F8Eh ;# 
   138                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   139  0000                     TRISA equ 0F92h ;# 
   140                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   141  0000                     DDRA equ 0F92h ;# 
   142                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   143  0000                     TRISB equ 0F93h ;# 
   144                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   145  0000                     DDRB equ 0F93h ;# 
   146                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   147  0000                     TRISC equ 0F94h ;# 
   148                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   149  0000                     DDRC equ 0F94h ;# 
   150                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   151  0000                     TRISD equ 0F95h ;# 
   152                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   153  0000                     DDRD equ 0F95h ;# 
   154                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   155  0000                     TRISE equ 0F96h ;# 
   156                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   157  0000                     DDRE equ 0F96h ;# 
   158                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   159  0000                     OSCTUNE equ 0F9Bh ;# 
   160                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   161  0000                     PIE1 equ 0F9Dh ;# 
   162                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   163  0000                     PIR1 equ 0F9Eh ;# 
   164                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   165  0000                     IPR1 equ 0F9Fh ;# 
   166                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   167  0000                     PIE2 equ 0FA0h ;# 
   168                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   169  0000                     PIR2 equ 0FA1h ;# 
   170                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   171  0000                     IPR2 equ 0FA2h ;# 
   172                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   173  0000                     PIE3 equ 0FA3h ;# 
   174                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   175  0000                     PIR3 equ 0FA4h ;# 
   176                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   177  0000                     IPR3 equ 0FA5h ;# 
   178                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   179  0000                     EECON1 equ 0FA6h ;# 
   180                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   181  0000                     EECON2 equ 0FA7h ;# 
   182                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   183  0000                     RCSTA equ 0FABh ;# 
   184                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   185  0000                     RCSTA1 equ 0FABh ;# 
   186                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   187  0000                     TXSTA equ 0FACh ;# 
   188                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   189  0000                     TXSTA1 equ 0FACh ;# 
   190                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   191  0000                     TXREG equ 0FADh ;# 
   192                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   193  0000                     TXREG1 equ 0FADh ;# 
   194                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   195  0000                     RCREG equ 0FAEh ;# 
   196                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   197  0000                     RCREG1 equ 0FAEh ;# 
   198                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   199  0000                     SPBRG equ 0FAFh ;# 
   200                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   201  0000                     SPBRG1 equ 0FAFh ;# 
   202                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   203  0000                     SPBRGH equ 0FB0h ;# 
   204                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   205  0000                     CMCON equ 0FB4h ;# 
   206                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   207  0000                     CVRCON equ 0FB5h ;# 
   208                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   209  0000                     ECCP1AS equ 0FB6h ;# 
   210                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   211  0000                     ECCP1DEL equ 0FB7h ;# 
   212                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   213  0000                     PWM1CON equ 0FB7h ;# 
   214                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   215  0000                     BAUDCON equ 0FB8h ;# 
   216                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   217  0000                     BAUDCTL equ 0FB8h ;# 
   218                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   219  0000                     CCP2CON equ 0FBAh ;# 
   220                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   221  0000                     CCPR2 equ 0FBBh ;# 
   222                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   223  0000                     CCPR2L equ 0FBBh ;# 
   224                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   225  0000                     CCPR2H equ 0FBCh ;# 
   226                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   227  0000                     ECCP1CON equ 0FBDh ;# 
   228                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   229  0000                     CCP1CON equ 0FBDh ;# 
   230                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   231  0000                     CCPR1 equ 0FBEh ;# 
   232                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   233  0000                     CCPR1L equ 0FBEh ;# 
   234                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   235  0000                     CCPR1H equ 0FBFh ;# 
   236                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   237  0000                     ADCON2 equ 0FC0h ;# 
   238                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   239  0000                     ADCON1 equ 0FC1h ;# 
   240                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   241  0000                     ADCON0 equ 0FC2h ;# 
   242                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   243  0000                     ADRES equ 0FC3h ;# 
   244                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   245  0000                     ADRESL equ 0FC3h ;# 
   246                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   247  0000                     ADRESH equ 0FC4h ;# 
   248                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   249  0000                     SSPCON2 equ 0FC5h ;# 
   250                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   251  0000                     SSP1CON2 equ 0FC5h ;# 
   252                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   253  0000                     SSPCON1 equ 0FC6h ;# 
   254                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   255  0000                     SSP1CON1 equ 0FC6h ;# 
   256                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   257  0000                     SSPSTAT equ 0FC7h ;# 
   258                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   259  0000                     SSP1STAT equ 0FC7h ;# 
   260                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   261  0000                     SSPADD equ 0FC8h ;# 
   262                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   263  0000                     SSP1ADD equ 0FC8h ;# 
   264                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   265  0000                     SSPBUF equ 0FC9h ;# 
   266                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   267  0000                     SSP1BUF equ 0FC9h ;# 
   268                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   269  0000                     T2CON equ 0FCAh ;# 
   270                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   271  0000                     PR2 equ 0FCBh ;# 
   272                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   273  0000                     MEMCON equ 0FCBh ;# 
   274                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   275  0000                     TMR2 equ 0FCCh ;# 
   276                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   277  0000                     T1CON equ 0FCDh ;# 
   278                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   279  0000                     TMR1 equ 0FCEh ;# 
   280                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   281  0000                     TMR1L equ 0FCEh ;# 
   282                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   283  0000                     TMR1H equ 0FCFh ;# 
   284                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   285  0000                     RCON equ 0FD0h ;# 
   286                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   287  0000                     WDTCON equ 0FD1h ;# 
   288                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   289  0000                     OSCCON equ 0FD3h ;# 
   290                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   291  0000                     T0CON equ 0FD5h ;# 
   292                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   293  0000                     TMR0 equ 0FD6h ;# 
   294                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   295  0000                     TMR0L equ 0FD6h ;# 
   296                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   297  0000                     TMR0H equ 0FD7h ;# 
   298                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   299  0000                     STATUS equ 0FD8h ;# 
   300                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   301  0000                     FSR2 equ 0FD9h ;# 
   302                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   303  0000                     FSR2L equ 0FD9h ;# 
   304                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   305  0000                     FSR2H equ 0FDAh ;# 
   306                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   307  0000                     PLUSW2 equ 0FDBh ;# 
   308                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   309  0000                     PREINC2 equ 0FDCh ;# 
   310                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   311  0000                     POSTDEC2 equ 0FDDh ;# 
   312                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   313  0000                     POSTINC2 equ 0FDEh ;# 
   314                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   315  0000                     INDF2 equ 0FDFh ;# 
   316                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   317  0000                     BSR equ 0FE0h ;# 
   318                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   319  0000                     FSR1 equ 0FE1h ;# 
   320                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   321  0000                     FSR1L equ 0FE1h ;# 
   322                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   323  0000                     FSR1H equ 0FE2h ;# 
   324                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   325  0000                     PLUSW1 equ 0FE3h ;# 
   326                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   327  0000                     PREINC1 equ 0FE4h ;# 
   328                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   329  0000                     POSTDEC1 equ 0FE5h ;# 
   330                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   331  0000                     POSTINC1 equ 0FE6h ;# 
   332                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   333  0000                     INDF1 equ 0FE7h ;# 
   334                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   335  0000                     WREG equ 0FE8h ;# 
   336                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   337  0000                     FSR0 equ 0FE9h ;# 
   338                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   339  0000                     FSR0L equ 0FE9h ;# 
   340                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   341  0000                     FSR0H equ 0FEAh ;# 
   342                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   343  0000                     PLUSW0 equ 0FEBh ;# 
   344                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   345  0000                     PREINC0 equ 0FECh ;# 
   346                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   347  0000                     POSTDEC0 equ 0FEDh ;# 
   348                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   349  0000                     POSTINC0 equ 0FEEh ;# 
   350                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   351  0000                     INDF0 equ 0FEFh ;# 
   352                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   353  0000                     INTCON3 equ 0FF0h ;# 
   354                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   355  0000                     INTCON2 equ 0FF1h ;# 
   356                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   357  0000                     INTCON equ 0FF2h ;# 
   358                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   359  0000                     PROD equ 0FF3h ;# 
   360                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   361  0000                     PRODL equ 0FF3h ;# 
   362                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   363  0000                     PRODH equ 0FF4h ;# 
   364                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   365  0000                     TABLAT equ 0FF5h ;# 
   366                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   367  0000                     TBLPTR equ 0FF6h ;# 
   368                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   369  0000                     TBLPTRL equ 0FF6h ;# 
   370                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   371  0000                     TBLPTRH equ 0FF7h ;# 
   372                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   373  0000                     TBLPTRU equ 0FF8h ;# 
   374                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   375  0000                     PCLAT equ 0FF9h ;# 
   376                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   377  0000                     PC equ 0FF9h ;# 
   378                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   379  0000                     PCL equ 0FF9h ;# 
   380                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   381  0000                     PCLATH equ 0FFAh ;# 
   382                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   383  0000                     PCLATU equ 0FFBh ;# 
   384                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   385  0000                     STKPTR equ 0FFCh ;# 
   386                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   387  0000                     TOS equ 0FFDh ;# 
   388                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   389  0000                     TOSL equ 0FFDh ;# 
   390                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   391  0000                     TOSH equ 0FFEh ;# 
   392                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   393  0000                     TOSU equ 0FFFh ;# 
   394                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   395  0000                     PORTA equ 0F80h ;# 
   396                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   397  0000                     PORTB equ 0F81h ;# 
   398                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   399  0000                     PORTC equ 0F82h ;# 
   400                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   401  0000                     PORTD equ 0F83h ;# 
   402                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   403  0000                     PORTE equ 0F84h ;# 
   404                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   405  0000                     SSP2CON2 equ 0F85h ;# 
   406                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   407  0000                     SSP2CON1 equ 0F86h ;# 
   408                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   409  0000                     SSP2STAT equ 0F87h ;# 
   410                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   411  0000                     SSP2ADD equ 0F88h ;# 
   412                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   413  0000                     LATA equ 0F89h ;# 
   414                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   415  0000                     LATB equ 0F8Ah ;# 
   416                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   417  0000                     LATC equ 0F8Bh ;# 
   418                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   419  0000                     LATD equ 0F8Ch ;# 
   420                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   421  0000                     LATE equ 0F8Dh ;# 
   422                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   423  0000                     SSP2BUF equ 0F8Eh ;# 
   424                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   425  0000                     TRISA equ 0F92h ;# 
   426                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   427  0000                     DDRA equ 0F92h ;# 
   428                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   429  0000                     TRISB equ 0F93h ;# 
   430                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   431  0000                     DDRB equ 0F93h ;# 
   432                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   433  0000                     TRISC equ 0F94h ;# 
   434                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   435  0000                     DDRC equ 0F94h ;# 
   436                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   437  0000                     TRISD equ 0F95h ;# 
   438                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   439  0000                     DDRD equ 0F95h ;# 
   440                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   441  0000                     TRISE equ 0F96h ;# 
   442                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   443  0000                     DDRE equ 0F96h ;# 
   444                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   445  0000                     OSCTUNE equ 0F9Bh ;# 
   446                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   447  0000                     PIE1 equ 0F9Dh ;# 
   448                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   449  0000                     PIR1 equ 0F9Eh ;# 
   450                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   451  0000                     IPR1 equ 0F9Fh ;# 
   452                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   453  0000                     PIE2 equ 0FA0h ;# 
   454                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   455  0000                     PIR2 equ 0FA1h ;# 
   456                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   457  0000                     IPR2 equ 0FA2h ;# 
   458                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   459  0000                     PIE3 equ 0FA3h ;# 
   460                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   461  0000                     PIR3 equ 0FA4h ;# 
   462                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   463  0000                     IPR3 equ 0FA5h ;# 
   464                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   465  0000                     EECON1 equ 0FA6h ;# 
   466                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   467  0000                     EECON2 equ 0FA7h ;# 
   468                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   469  0000                     RCSTA equ 0FABh ;# 
   470                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   471  0000                     RCSTA1 equ 0FABh ;# 
   472                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   473  0000                     TXSTA equ 0FACh ;# 
   474                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   475  0000                     TXSTA1 equ 0FACh ;# 
   476                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   477  0000                     TXREG equ 0FADh ;# 
   478                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   479  0000                     TXREG1 equ 0FADh ;# 
   480                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   481  0000                     RCREG equ 0FAEh ;# 
   482                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   483  0000                     RCREG1 equ 0FAEh ;# 
   484                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   485  0000                     SPBRG equ 0FAFh ;# 
   486                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   487  0000                     SPBRG1 equ 0FAFh ;# 
   488                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   489  0000                     SPBRGH equ 0FB0h ;# 
   490                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   491  0000                     CMCON equ 0FB4h ;# 
   492                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   493  0000                     CVRCON equ 0FB5h ;# 
   494                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   495  0000                     ECCP1AS equ 0FB6h ;# 
   496                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   497  0000                     ECCP1DEL equ 0FB7h ;# 
   498                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   499  0000                     PWM1CON equ 0FB7h ;# 
   500                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   501  0000                     BAUDCON equ 0FB8h ;# 
   502                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   503  0000                     BAUDCTL equ 0FB8h ;# 
   504                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   505  0000                     CCP2CON equ 0FBAh ;# 
   506                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   507  0000                     CCPR2 equ 0FBBh ;# 
   508                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   509  0000                     CCPR2L equ 0FBBh ;# 
   510                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   511  0000                     CCPR2H equ 0FBCh ;# 
   512                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   513  0000                     ECCP1CON equ 0FBDh ;# 
   514                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   515  0000                     CCP1CON equ 0FBDh ;# 
   516                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   517  0000                     CCPR1 equ 0FBEh ;# 
   518                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   519  0000                     CCPR1L equ 0FBEh ;# 
   520                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   521  0000                     CCPR1H equ 0FBFh ;# 
   522                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   523  0000                     ADCON2 equ 0FC0h ;# 
   524                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   525  0000                     ADCON1 equ 0FC1h ;# 
   526                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   527  0000                     ADCON0 equ 0FC2h ;# 
   528                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   529  0000                     ADRES equ 0FC3h ;# 
   530                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   531  0000                     ADRESL equ 0FC3h ;# 
   532                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   533  0000                     ADRESH equ 0FC4h ;# 
   534                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   535  0000                     SSPCON2 equ 0FC5h ;# 
   536                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   537  0000                     SSP1CON2 equ 0FC5h ;# 
   538                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   539  0000                     SSPCON1 equ 0FC6h ;# 
   540                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   541  0000                     SSP1CON1 equ 0FC6h ;# 
   542                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   543  0000                     SSPSTAT equ 0FC7h ;# 
   544                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   545  0000                     SSP1STAT equ 0FC7h ;# 
   546                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   547  0000                     SSPADD equ 0FC8h ;# 
   548                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   549  0000                     SSP1ADD equ 0FC8h ;# 
   550                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   551  0000                     SSPBUF equ 0FC9h ;# 
   552                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   553  0000                     SSP1BUF equ 0FC9h ;# 
   554                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   555  0000                     T2CON equ 0FCAh ;# 
   556                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   557  0000                     PR2 equ 0FCBh ;# 
   558                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   559  0000                     MEMCON equ 0FCBh ;# 
   560                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   561  0000                     TMR2 equ 0FCCh ;# 
   562                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   563  0000                     T1CON equ 0FCDh ;# 
   564                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   565  0000                     TMR1 equ 0FCEh ;# 
   566                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   567  0000                     TMR1L equ 0FCEh ;# 
   568                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   569  0000                     TMR1H equ 0FCFh ;# 
   570                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   571  0000                     RCON equ 0FD0h ;# 
   572                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   573  0000                     WDTCON equ 0FD1h ;# 
   574                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   575  0000                     OSCCON equ 0FD3h ;# 
   576                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   577  0000                     T0CON equ 0FD5h ;# 
   578                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   579  0000                     TMR0 equ 0FD6h ;# 
   580                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   581  0000                     TMR0L equ 0FD6h ;# 
   582                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   583  0000                     TMR0H equ 0FD7h ;# 
   584                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   585  0000                     STATUS equ 0FD8h ;# 
   586                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   587  0000                     FSR2 equ 0FD9h ;# 
   588                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   589  0000                     FSR2L equ 0FD9h ;# 
   590                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   591  0000                     FSR2H equ 0FDAh ;# 
   592                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   593  0000                     PLUSW2 equ 0FDBh ;# 
   594                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   595  0000                     PREINC2 equ 0FDCh ;# 
   596                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   597  0000                     POSTDEC2 equ 0FDDh ;# 
   598                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   599  0000                     POSTINC2 equ 0FDEh ;# 
   600                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   601  0000                     INDF2 equ 0FDFh ;# 
   602                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   603  0000                     BSR equ 0FE0h ;# 
   604                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   605  0000                     FSR1 equ 0FE1h ;# 
   606                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   607  0000                     FSR1L equ 0FE1h ;# 
   608                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   609  0000                     FSR1H equ 0FE2h ;# 
   610                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   611  0000                     PLUSW1 equ 0FE3h ;# 
   612                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   613  0000                     PREINC1 equ 0FE4h ;# 
   614                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   615  0000                     POSTDEC1 equ 0FE5h ;# 
   616                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   617  0000                     POSTINC1 equ 0FE6h ;# 
   618                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   619  0000                     INDF1 equ 0FE7h ;# 
   620                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   621  0000                     WREG equ 0FE8h ;# 
   622                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   623  0000                     FSR0 equ 0FE9h ;# 
   624                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   625  0000                     FSR0L equ 0FE9h ;# 
   626                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   627  0000                     FSR0H equ 0FEAh ;# 
   628                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   629  0000                     PLUSW0 equ 0FEBh ;# 
   630                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   631  0000                     PREINC0 equ 0FECh ;# 
   632                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   633  0000                     POSTDEC0 equ 0FEDh ;# 
   634                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   635  0000                     POSTINC0 equ 0FEEh ;# 
   636                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   637  0000                     INDF0 equ 0FEFh ;# 
   638                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   639  0000                     INTCON3 equ 0FF0h ;# 
   640                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   641  0000                     INTCON2 equ 0FF1h ;# 
   642                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   643  0000                     INTCON equ 0FF2h ;# 
   644                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   645  0000                     PROD equ 0FF3h ;# 
   646                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   647  0000                     PRODL equ 0FF3h ;# 
   648                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   649  0000                     PRODH equ 0FF4h ;# 
   650                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   651  0000                     TABLAT equ 0FF5h ;# 
   652                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   653  0000                     TBLPTR equ 0FF6h ;# 
   654                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   655  0000                     TBLPTRL equ 0FF6h ;# 
   656                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   657  0000                     TBLPTRH equ 0FF7h ;# 
   658                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   659  0000                     TBLPTRU equ 0FF8h ;# 
   660                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   661  0000                     PCLAT equ 0FF9h ;# 
   662                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   663  0000                     PC equ 0FF9h ;# 
   664                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   665  0000                     PCL equ 0FF9h ;# 
   666                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   667  0000                     PCLATH equ 0FFAh ;# 
   668                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   669  0000                     PCLATU equ 0FFBh ;# 
   670                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   671  0000                     STKPTR equ 0FFCh ;# 
   672                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   673  0000                     TOS equ 0FFDh ;# 
   674                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   675  0000                     TOSL equ 0FFDh ;# 
   676                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   677  0000                     TOSH equ 0FFEh ;# 
   678                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   679  0000                     TOSU equ 0FFFh ;# 
   680                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   681  0000                     PORTA equ 0F80h ;# 
   682                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   683  0000                     PORTB equ 0F81h ;# 
   684                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   685  0000                     PORTC equ 0F82h ;# 
   686                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   687  0000                     PORTD equ 0F83h ;# 
   688                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   689  0000                     PORTE equ 0F84h ;# 
   690                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   691  0000                     SSP2CON2 equ 0F85h ;# 
   692                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   693  0000                     SSP2CON1 equ 0F86h ;# 
   694                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   695  0000                     SSP2STAT equ 0F87h ;# 
   696                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   697  0000                     SSP2ADD equ 0F88h ;# 
   698                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   699  0000                     LATA equ 0F89h ;# 
   700                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   701  0000                     LATB equ 0F8Ah ;# 
   702                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   703  0000                     LATC equ 0F8Bh ;# 
   704                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   705  0000                     LATD equ 0F8Ch ;# 
   706                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   707  0000                     LATE equ 0F8Dh ;# 
   708                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   709  0000                     SSP2BUF equ 0F8Eh ;# 
   710                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   711  0000                     TRISA equ 0F92h ;# 
   712                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   713  0000                     DDRA equ 0F92h ;# 
   714                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   715  0000                     TRISB equ 0F93h ;# 
   716                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   717  0000                     DDRB equ 0F93h ;# 
   718                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   719  0000                     TRISC equ 0F94h ;# 
   720                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   721  0000                     DDRC equ 0F94h ;# 
   722                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   723  0000                     TRISD equ 0F95h ;# 
   724                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   725  0000                     DDRD equ 0F95h ;# 
   726                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   727  0000                     TRISE equ 0F96h ;# 
   728                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   729  0000                     DDRE equ 0F96h ;# 
   730                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   731  0000                     OSCTUNE equ 0F9Bh ;# 
   732                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   733  0000                     PIE1 equ 0F9Dh ;# 
   734                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   735  0000                     PIR1 equ 0F9Eh ;# 
   736                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   737  0000                     IPR1 equ 0F9Fh ;# 
   738                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   739  0000                     PIE2 equ 0FA0h ;# 
   740                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   741  0000                     PIR2 equ 0FA1h ;# 
   742                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   743  0000                     IPR2 equ 0FA2h ;# 
   744                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   745  0000                     PIE3 equ 0FA3h ;# 
   746                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   747  0000                     PIR3 equ 0FA4h ;# 
   748                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   749  0000                     IPR3 equ 0FA5h ;# 
   750                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   751  0000                     EECON1 equ 0FA6h ;# 
   752                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   753  0000                     EECON2 equ 0FA7h ;# 
   754                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   755  0000                     RCSTA equ 0FABh ;# 
   756                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   757  0000                     RCSTA1 equ 0FABh ;# 
   758                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   759  0000                     TXSTA equ 0FACh ;# 
   760                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   761  0000                     TXSTA1 equ 0FACh ;# 
   762                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   763  0000                     TXREG equ 0FADh ;# 
   764                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   765  0000                     TXREG1 equ 0FADh ;# 
   766                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   767  0000                     RCREG equ 0FAEh ;# 
   768                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   769  0000                     RCREG1 equ 0FAEh ;# 
   770                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   771  0000                     SPBRG equ 0FAFh ;# 
   772                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   773  0000                     SPBRG1 equ 0FAFh ;# 
   774                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   775  0000                     SPBRGH equ 0FB0h ;# 
   776                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   777  0000                     CMCON equ 0FB4h ;# 
   778                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   779  0000                     CVRCON equ 0FB5h ;# 
   780                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   781  0000                     ECCP1AS equ 0FB6h ;# 
   782                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   783  0000                     ECCP1DEL equ 0FB7h ;# 
   784                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   785  0000                     PWM1CON equ 0FB7h ;# 
   786                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   787  0000                     BAUDCON equ 0FB8h ;# 
   788                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   789  0000                     BAUDCTL equ 0FB8h ;# 
   790                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   791  0000                     CCP2CON equ 0FBAh ;# 
   792                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   793  0000                     CCPR2 equ 0FBBh ;# 
   794                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   795  0000                     CCPR2L equ 0FBBh ;# 
   796                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   797  0000                     CCPR2H equ 0FBCh ;# 
   798                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   799  0000                     ECCP1CON equ 0FBDh ;# 
   800                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   801  0000                     CCP1CON equ 0FBDh ;# 
   802                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   803  0000                     CCPR1 equ 0FBEh ;# 
   804                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   805  0000                     CCPR1L equ 0FBEh ;# 
   806                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   807  0000                     CCPR1H equ 0FBFh ;# 
   808                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   809  0000                     ADCON2 equ 0FC0h ;# 
   810                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   811  0000                     ADCON1 equ 0FC1h ;# 
   812                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   813  0000                     ADCON0 equ 0FC2h ;# 
   814                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   815  0000                     ADRES equ 0FC3h ;# 
   816                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   817  0000                     ADRESL equ 0FC3h ;# 
   818                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   819  0000                     ADRESH equ 0FC4h ;# 
   820                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   821  0000                     SSPCON2 equ 0FC5h ;# 
   822                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   823  0000                     SSP1CON2 equ 0FC5h ;# 
   824                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   825  0000                     SSPCON1 equ 0FC6h ;# 
   826                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   827  0000                     SSP1CON1 equ 0FC6h ;# 
   828                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   829  0000                     SSPSTAT equ 0FC7h ;# 
   830                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   831  0000                     SSP1STAT equ 0FC7h ;# 
   832                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   833  0000                     SSPADD equ 0FC8h ;# 
   834                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   835  0000                     SSP1ADD equ 0FC8h ;# 
   836                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   837  0000                     SSPBUF equ 0FC9h ;# 
   838                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   839  0000                     SSP1BUF equ 0FC9h ;# 
   840                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   841  0000                     T2CON equ 0FCAh ;# 
   842                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   843  0000                     PR2 equ 0FCBh ;# 
   844                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   845  0000                     MEMCON equ 0FCBh ;# 
   846                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   847  0000                     TMR2 equ 0FCCh ;# 
   848                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   849  0000                     T1CON equ 0FCDh ;# 
   850                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   851  0000                     TMR1 equ 0FCEh ;# 
   852                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   853  0000                     TMR1L equ 0FCEh ;# 
   854                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   855  0000                     TMR1H equ 0FCFh ;# 
   856                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   857  0000                     RCON equ 0FD0h ;# 
   858                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   859  0000                     WDTCON equ 0FD1h ;# 
   860                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   861  0000                     OSCCON equ 0FD3h ;# 
   862                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   863  0000                     T0CON equ 0FD5h ;# 
   864                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   865  0000                     TMR0 equ 0FD6h ;# 
   866                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   867  0000                     TMR0L equ 0FD6h ;# 
   868                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   869  0000                     TMR0H equ 0FD7h ;# 
   870                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   871  0000                     STATUS equ 0FD8h ;# 
   872                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   873  0000                     FSR2 equ 0FD9h ;# 
   874                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   875  0000                     FSR2L equ 0FD9h ;# 
   876                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   877  0000                     FSR2H equ 0FDAh ;# 
   878                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   879  0000                     PLUSW2 equ 0FDBh ;# 
   880                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   881  0000                     PREINC2 equ 0FDCh ;# 
   882                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   883  0000                     POSTDEC2 equ 0FDDh ;# 
   884                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   885  0000                     POSTINC2 equ 0FDEh ;# 
   886                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   887  0000                     INDF2 equ 0FDFh ;# 
   888                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   889  0000                     BSR equ 0FE0h ;# 
   890                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   891  0000                     FSR1 equ 0FE1h ;# 
   892                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   893  0000                     FSR1L equ 0FE1h ;# 
   894                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   895  0000                     FSR1H equ 0FE2h ;# 
   896                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   897  0000                     PLUSW1 equ 0FE3h ;# 
   898                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   899  0000                     PREINC1 equ 0FE4h ;# 
   900                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   901  0000                     POSTDEC1 equ 0FE5h ;# 
   902                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   903  0000                     POSTINC1 equ 0FE6h ;# 
   904                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   905  0000                     INDF1 equ 0FE7h ;# 
   906                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   907  0000                     WREG equ 0FE8h ;# 
   908                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   909  0000                     FSR0 equ 0FE9h ;# 
   910                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   911  0000                     FSR0L equ 0FE9h ;# 
   912                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   913  0000                     FSR0H equ 0FEAh ;# 
   914                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   915  0000                     PLUSW0 equ 0FEBh ;# 
   916                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   917  0000                     PREINC0 equ 0FECh ;# 
   918                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   919  0000                     POSTDEC0 equ 0FEDh ;# 
   920                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   921  0000                     POSTINC0 equ 0FEEh ;# 
   922                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   923  0000                     INDF0 equ 0FEFh ;# 
   924                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   925  0000                     INTCON3 equ 0FF0h ;# 
   926                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   927  0000                     INTCON2 equ 0FF1h ;# 
   928                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   929  0000                     INTCON equ 0FF2h ;# 
   930                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   931  0000                     PROD equ 0FF3h ;# 
   932                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   933  0000                     PRODL equ 0FF3h ;# 
   934                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   935  0000                     PRODH equ 0FF4h ;# 
   936                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   937  0000                     TABLAT equ 0FF5h ;# 
   938                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   939  0000                     TBLPTR equ 0FF6h ;# 
   940                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   941  0000                     TBLPTRL equ 0FF6h ;# 
   942                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   943  0000                     TBLPTRH equ 0FF7h ;# 
   944                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   945  0000                     TBLPTRU equ 0FF8h ;# 
   946                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   947  0000                     PCLAT equ 0FF9h ;# 
   948                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   949  0000                     PC equ 0FF9h ;# 
   950                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   951  0000                     PCL equ 0FF9h ;# 
   952                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   953  0000                     PCLATH equ 0FFAh ;# 
   954                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   955  0000                     PCLATU equ 0FFBh ;# 
   956                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   957  0000                     STKPTR equ 0FFCh ;# 
   958                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   959  0000                     TOS equ 0FFDh ;# 
   960                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   961  0000                     TOSL equ 0FFDh ;# 
   962                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   963  0000                     TOSH equ 0FFEh ;# 
   964                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   965  0000                     TOSU equ 0FFFh ;# 
   966                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   967  0000                     PORTA equ 0F80h ;# 
   968                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   969  0000                     PORTB equ 0F81h ;# 
   970                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   971  0000                     PORTC equ 0F82h ;# 
   972                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   973  0000                     PORTD equ 0F83h ;# 
   974                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   975  0000                     PORTE equ 0F84h ;# 
   976                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   977  0000                     SSP2CON2 equ 0F85h ;# 
   978                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   979  0000                     SSP2CON1 equ 0F86h ;# 
   980                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   981  0000                     SSP2STAT equ 0F87h ;# 
   982                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   983  0000                     SSP2ADD equ 0F88h ;# 
   984                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   985  0000                     LATA equ 0F89h ;# 
   986                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   987  0000                     LATB equ 0F8Ah ;# 
   988                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   989  0000                     LATC equ 0F8Bh ;# 
   990                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   991  0000                     LATD equ 0F8Ch ;# 
   992                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   993  0000                     LATE equ 0F8Dh ;# 
   994                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   995  0000                     SSP2BUF equ 0F8Eh ;# 
   996                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   997  0000                     TRISA equ 0F92h ;# 
   998                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   999  0000                     DDRA equ 0F92h ;# 
  1000                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1001  0000                     TRISB equ 0F93h ;# 
  1002                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1003  0000                     DDRB equ 0F93h ;# 
  1004                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1005  0000                     TRISC equ 0F94h ;# 
  1006                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1007  0000                     DDRC equ 0F94h ;# 
  1008                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1009  0000                     TRISD equ 0F95h ;# 
  1010                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1011  0000                     DDRD equ 0F95h ;# 
  1012                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1013  0000                     TRISE equ 0F96h ;# 
  1014                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1015  0000                     DDRE equ 0F96h ;# 
  1016                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1017  0000                     OSCTUNE equ 0F9Bh ;# 
  1018                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1019  0000                     PIE1 equ 0F9Dh ;# 
  1020                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1021  0000                     PIR1 equ 0F9Eh ;# 
  1022                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1023  0000                     IPR1 equ 0F9Fh ;# 
  1024                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1025  0000                     PIE2 equ 0FA0h ;# 
  1026                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1027  0000                     PIR2 equ 0FA1h ;# 
  1028                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1029  0000                     IPR2 equ 0FA2h ;# 
  1030                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1031  0000                     PIE3 equ 0FA3h ;# 
  1032                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1033  0000                     PIR3 equ 0FA4h ;# 
  1034                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1035  0000                     IPR3 equ 0FA5h ;# 
  1036                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1037  0000                     EECON1 equ 0FA6h ;# 
  1038                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1039  0000                     EECON2 equ 0FA7h ;# 
  1040                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1041  0000                     RCSTA equ 0FABh ;# 
  1042                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1043  0000                     RCSTA1 equ 0FABh ;# 
  1044                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1045  0000                     TXSTA equ 0FACh ;# 
  1046                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1047  0000                     TXSTA1 equ 0FACh ;# 
  1048                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1049  0000                     TXREG equ 0FADh ;# 
  1050                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1051  0000                     TXREG1 equ 0FADh ;# 
  1052                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1053  0000                     RCREG equ 0FAEh ;# 
  1054                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1055  0000                     RCREG1 equ 0FAEh ;# 
  1056                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1057  0000                     SPBRG equ 0FAFh ;# 
  1058                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1059  0000                     SPBRG1 equ 0FAFh ;# 
  1060                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1061  0000                     SPBRGH equ 0FB0h ;# 
  1062                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1063  0000                     CMCON equ 0FB4h ;# 
  1064                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1065  0000                     CVRCON equ 0FB5h ;# 
  1066                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1067  0000                     ECCP1AS equ 0FB6h ;# 
  1068                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1069  0000                     ECCP1DEL equ 0FB7h ;# 
  1070                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1071  0000                     PWM1CON equ 0FB7h ;# 
  1072                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1073  0000                     BAUDCON equ 0FB8h ;# 
  1074                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1075  0000                     BAUDCTL equ 0FB8h ;# 
  1076                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1077  0000                     CCP2CON equ 0FBAh ;# 
  1078                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1079  0000                     CCPR2 equ 0FBBh ;# 
  1080                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1081  0000                     CCPR2L equ 0FBBh ;# 
  1082                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1083  0000                     CCPR2H equ 0FBCh ;# 
  1084                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1085  0000                     ECCP1CON equ 0FBDh ;# 
  1086                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1087  0000                     CCP1CON equ 0FBDh ;# 
  1088                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1089  0000                     CCPR1 equ 0FBEh ;# 
  1090                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1091  0000                     CCPR1L equ 0FBEh ;# 
  1092                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1093  0000                     CCPR1H equ 0FBFh ;# 
  1094                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1095  0000                     ADCON2 equ 0FC0h ;# 
  1096                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1097  0000                     ADCON1 equ 0FC1h ;# 
  1098                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1099  0000                     ADCON0 equ 0FC2h ;# 
  1100                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1101  0000                     ADRES equ 0FC3h ;# 
  1102                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1103  0000                     ADRESL equ 0FC3h ;# 
  1104                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1105  0000                     ADRESH equ 0FC4h ;# 
  1106                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1107  0000                     SSPCON2 equ 0FC5h ;# 
  1108                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1109  0000                     SSP1CON2 equ 0FC5h ;# 
  1110                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1111  0000                     SSPCON1 equ 0FC6h ;# 
  1112                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1113  0000                     SSP1CON1 equ 0FC6h ;# 
  1114                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1115  0000                     SSPSTAT equ 0FC7h ;# 
  1116                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1117  0000                     SSP1STAT equ 0FC7h ;# 
  1118                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1119  0000                     SSPADD equ 0FC8h ;# 
  1120                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1121  0000                     SSP1ADD equ 0FC8h ;# 
  1122                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1123  0000                     SSPBUF equ 0FC9h ;# 
  1124                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1125  0000                     SSP1BUF equ 0FC9h ;# 
  1126                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1127  0000                     T2CON equ 0FCAh ;# 
  1128                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1129  0000                     PR2 equ 0FCBh ;# 
  1130                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1131  0000                     MEMCON equ 0FCBh ;# 
  1132                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1133  0000                     TMR2 equ 0FCCh ;# 
  1134                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1135  0000                     T1CON equ 0FCDh ;# 
  1136                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1137  0000                     TMR1 equ 0FCEh ;# 
  1138                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1139  0000                     TMR1L equ 0FCEh ;# 
  1140                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1141  0000                     TMR1H equ 0FCFh ;# 
  1142                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1143  0000                     RCON equ 0FD0h ;# 
  1144                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1145  0000                     WDTCON equ 0FD1h ;# 
  1146                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1147  0000                     OSCCON equ 0FD3h ;# 
  1148                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1149  0000                     T0CON equ 0FD5h ;# 
  1150                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1151  0000                     TMR0 equ 0FD6h ;# 
  1152                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1153  0000                     TMR0L equ 0FD6h ;# 
  1154                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1155  0000                     TMR0H equ 0FD7h ;# 
  1156                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1157  0000                     STATUS equ 0FD8h ;# 
  1158                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1159  0000                     FSR2 equ 0FD9h ;# 
  1160                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1161  0000                     FSR2L equ 0FD9h ;# 
  1162                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1163  0000                     FSR2H equ 0FDAh ;# 
  1164                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1165  0000                     PLUSW2 equ 0FDBh ;# 
  1166                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1167  0000                     PREINC2 equ 0FDCh ;# 
  1168                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1169  0000                     POSTDEC2 equ 0FDDh ;# 
  1170                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1171  0000                     POSTINC2 equ 0FDEh ;# 
  1172                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1173  0000                     INDF2 equ 0FDFh ;# 
  1174                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1175  0000                     BSR equ 0FE0h ;# 
  1176                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1177  0000                     FSR1 equ 0FE1h ;# 
  1178                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1179  0000                     FSR1L equ 0FE1h ;# 
  1180                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1181  0000                     FSR1H equ 0FE2h ;# 
  1182                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1183  0000                     PLUSW1 equ 0FE3h ;# 
  1184                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1185  0000                     PREINC1 equ 0FE4h ;# 
  1186                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1187  0000                     POSTDEC1 equ 0FE5h ;# 
  1188                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1189  0000                     POSTINC1 equ 0FE6h ;# 
  1190                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1191  0000                     INDF1 equ 0FE7h ;# 
  1192                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1193  0000                     WREG equ 0FE8h ;# 
  1194                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1195  0000                     FSR0 equ 0FE9h ;# 
  1196                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1197  0000                     FSR0L equ 0FE9h ;# 
  1198                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1199  0000                     FSR0H equ 0FEAh ;# 
  1200                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1201  0000                     PLUSW0 equ 0FEBh ;# 
  1202                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1203  0000                     PREINC0 equ 0FECh ;# 
  1204                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1205  0000                     POSTDEC0 equ 0FEDh ;# 
  1206                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1207  0000                     POSTINC0 equ 0FEEh ;# 
  1208                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1209  0000                     INDF0 equ 0FEFh ;# 
  1210                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1211  0000                     INTCON3 equ 0FF0h ;# 
  1212                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1213  0000                     INTCON2 equ 0FF1h ;# 
  1214                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1215  0000                     INTCON equ 0FF2h ;# 
  1216                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1217  0000                     PROD equ 0FF3h ;# 
  1218                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1219  0000                     PRODL equ 0FF3h ;# 
  1220                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1221  0000                     PRODH equ 0FF4h ;# 
  1222                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1223  0000                     TABLAT equ 0FF5h ;# 
  1224                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1225  0000                     TBLPTR equ 0FF6h ;# 
  1226                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1227  0000                     TBLPTRL equ 0FF6h ;# 
  1228                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1229  0000                     TBLPTRH equ 0FF7h ;# 
  1230                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1231  0000                     TBLPTRU equ 0FF8h ;# 
  1232                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1233  0000                     PCLAT equ 0FF9h ;# 
  1234                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1235  0000                     PC equ 0FF9h ;# 
  1236                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1237  0000                     PCL equ 0FF9h ;# 
  1238                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1239  0000                     PCLATH equ 0FFAh ;# 
  1240                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1241  0000                     PCLATU equ 0FFBh ;# 
  1242                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1243  0000                     STKPTR equ 0FFCh ;# 
  1244                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1245  0000                     TOS equ 0FFDh ;# 
  1246                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1247  0000                     TOSL equ 0FFDh ;# 
  1248                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1249  0000                     TOSH equ 0FFEh ;# 
  1250                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1251  0000                     TOSU equ 0FFFh ;# 
  1252                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1253  0000                     PORTA equ 0F80h ;# 
  1254                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1255  0000                     PORTB equ 0F81h ;# 
  1256                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1257  0000                     PORTC equ 0F82h ;# 
  1258                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1259  0000                     PORTD equ 0F83h ;# 
  1260                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1261  0000                     PORTE equ 0F84h ;# 
  1262                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1263  0000                     SSP2CON2 equ 0F85h ;# 
  1264                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1265  0000                     SSP2CON1 equ 0F86h ;# 
  1266                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1267  0000                     SSP2STAT equ 0F87h ;# 
  1268                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1269  0000                     SSP2ADD equ 0F88h ;# 
  1270                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1271  0000                     LATA equ 0F89h ;# 
  1272                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1273  0000                     LATB equ 0F8Ah ;# 
  1274                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1275  0000                     LATC equ 0F8Bh ;# 
  1276                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1277  0000                     LATD equ 0F8Ch ;# 
  1278                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1279  0000                     LATE equ 0F8Dh ;# 
  1280                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1281  0000                     SSP2BUF equ 0F8Eh ;# 
  1282                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1283  0000                     TRISA equ 0F92h ;# 
  1284                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1285  0000                     DDRA equ 0F92h ;# 
  1286                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1287  0000                     TRISB equ 0F93h ;# 
  1288                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1289  0000                     DDRB equ 0F93h ;# 
  1290                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1291  0000                     TRISC equ 0F94h ;# 
  1292                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1293  0000                     DDRC equ 0F94h ;# 
  1294                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1295  0000                     TRISD equ 0F95h ;# 
  1296                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1297  0000                     DDRD equ 0F95h ;# 
  1298                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1299  0000                     TRISE equ 0F96h ;# 
  1300                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1301  0000                     DDRE equ 0F96h ;# 
  1302                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1303  0000                     OSCTUNE equ 0F9Bh ;# 
  1304                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1305  0000                     PIE1 equ 0F9Dh ;# 
  1306                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1307  0000                     PIR1 equ 0F9Eh ;# 
  1308                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1309  0000                     IPR1 equ 0F9Fh ;# 
  1310                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1311  0000                     PIE2 equ 0FA0h ;# 
  1312                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1313  0000                     PIR2 equ 0FA1h ;# 
  1314                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1315  0000                     IPR2 equ 0FA2h ;# 
  1316                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1317  0000                     PIE3 equ 0FA3h ;# 
  1318                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1319  0000                     PIR3 equ 0FA4h ;# 
  1320                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1321  0000                     IPR3 equ 0FA5h ;# 
  1322                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1323  0000                     EECON1 equ 0FA6h ;# 
  1324                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1325  0000                     EECON2 equ 0FA7h ;# 
  1326                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1327  0000                     RCSTA equ 0FABh ;# 
  1328                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1329  0000                     RCSTA1 equ 0FABh ;# 
  1330                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1331  0000                     TXSTA equ 0FACh ;# 
  1332                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1333  0000                     TXSTA1 equ 0FACh ;# 
  1334                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1335  0000                     TXREG equ 0FADh ;# 
  1336                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1337  0000                     TXREG1 equ 0FADh ;# 
  1338                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1339  0000                     RCREG equ 0FAEh ;# 
  1340                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1341  0000                     RCREG1 equ 0FAEh ;# 
  1342                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1343  0000                     SPBRG equ 0FAFh ;# 
  1344                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1345  0000                     SPBRG1 equ 0FAFh ;# 
  1346                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1347  0000                     SPBRGH equ 0FB0h ;# 
  1348                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1349  0000                     CMCON equ 0FB4h ;# 
  1350                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1351  0000                     CVRCON equ 0FB5h ;# 
  1352                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1353  0000                     ECCP1AS equ 0FB6h ;# 
  1354                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1355  0000                     ECCP1DEL equ 0FB7h ;# 
  1356                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1357  0000                     PWM1CON equ 0FB7h ;# 
  1358                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1359  0000                     BAUDCON equ 0FB8h ;# 
  1360                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1361  0000                     BAUDCTL equ 0FB8h ;# 
  1362                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1363  0000                     CCP2CON equ 0FBAh ;# 
  1364                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1365  0000                     CCPR2 equ 0FBBh ;# 
  1366                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1367  0000                     CCPR2L equ 0FBBh ;# 
  1368                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1369  0000                     CCPR2H equ 0FBCh ;# 
  1370                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1371  0000                     ECCP1CON equ 0FBDh ;# 
  1372                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1373  0000                     CCP1CON equ 0FBDh ;# 
  1374                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1375  0000                     CCPR1 equ 0FBEh ;# 
  1376                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1377  0000                     CCPR1L equ 0FBEh ;# 
  1378                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1379  0000                     CCPR1H equ 0FBFh ;# 
  1380                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1381  0000                     ADCON2 equ 0FC0h ;# 
  1382                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1383  0000                     ADCON1 equ 0FC1h ;# 
  1384                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1385  0000                     ADCON0 equ 0FC2h ;# 
  1386                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1387  0000                     ADRES equ 0FC3h ;# 
  1388                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1389  0000                     ADRESL equ 0FC3h ;# 
  1390                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1391  0000                     ADRESH equ 0FC4h ;# 
  1392                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1393  0000                     SSPCON2 equ 0FC5h ;# 
  1394                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1395  0000                     SSP1CON2 equ 0FC5h ;# 
  1396                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1397  0000                     SSPCON1 equ 0FC6h ;# 
  1398                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1399  0000                     SSP1CON1 equ 0FC6h ;# 
  1400                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1401  0000                     SSPSTAT equ 0FC7h ;# 
  1402                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1403  0000                     SSP1STAT equ 0FC7h ;# 
  1404                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1405  0000                     SSPADD equ 0FC8h ;# 
  1406                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1407  0000                     SSP1ADD equ 0FC8h ;# 
  1408                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1409  0000                     SSPBUF equ 0FC9h ;# 
  1410                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1411  0000                     SSP1BUF equ 0FC9h ;# 
  1412                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1413  0000                     T2CON equ 0FCAh ;# 
  1414                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1415  0000                     PR2 equ 0FCBh ;# 
  1416                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1417  0000                     MEMCON equ 0FCBh ;# 
  1418                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1419  0000                     TMR2 equ 0FCCh ;# 
  1420                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1421  0000                     T1CON equ 0FCDh ;# 
  1422                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1423  0000                     TMR1 equ 0FCEh ;# 
  1424                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1425  0000                     TMR1L equ 0FCEh ;# 
  1426                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1427  0000                     TMR1H equ 0FCFh ;# 
  1428                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1429  0000                     RCON equ 0FD0h ;# 
  1430                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1431  0000                     WDTCON equ 0FD1h ;# 
  1432                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1433  0000                     OSCCON equ 0FD3h ;# 
  1434                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1435  0000                     T0CON equ 0FD5h ;# 
  1436                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1437  0000                     TMR0 equ 0FD6h ;# 
  1438                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1439  0000                     TMR0L equ 0FD6h ;# 
  1440                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1441  0000                     TMR0H equ 0FD7h ;# 
  1442                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1443  0000                     STATUS equ 0FD8h ;# 
  1444                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1445  0000                     FSR2 equ 0FD9h ;# 
  1446                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1447  0000                     FSR2L equ 0FD9h ;# 
  1448                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1449  0000                     FSR2H equ 0FDAh ;# 
  1450                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1451  0000                     PLUSW2 equ 0FDBh ;# 
  1452                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1453  0000                     PREINC2 equ 0FDCh ;# 
  1454                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1455  0000                     POSTDEC2 equ 0FDDh ;# 
  1456                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1457  0000                     POSTINC2 equ 0FDEh ;# 
  1458                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1459  0000                     INDF2 equ 0FDFh ;# 
  1460                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1461  0000                     BSR equ 0FE0h ;# 
  1462                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1463  0000                     FSR1 equ 0FE1h ;# 
  1464                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1465  0000                     FSR1L equ 0FE1h ;# 
  1466                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1467  0000                     FSR1H equ 0FE2h ;# 
  1468                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1469  0000                     PLUSW1 equ 0FE3h ;# 
  1470                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1471  0000                     PREINC1 equ 0FE4h ;# 
  1472                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1473  0000                     POSTDEC1 equ 0FE5h ;# 
  1474                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1475  0000                     POSTINC1 equ 0FE6h ;# 
  1476                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1477  0000                     INDF1 equ 0FE7h ;# 
  1478                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1479  0000                     WREG equ 0FE8h ;# 
  1480                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1481  0000                     FSR0 equ 0FE9h ;# 
  1482                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1483  0000                     FSR0L equ 0FE9h ;# 
  1484                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1485  0000                     FSR0H equ 0FEAh ;# 
  1486                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1487  0000                     PLUSW0 equ 0FEBh ;# 
  1488                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1489  0000                     PREINC0 equ 0FECh ;# 
  1490                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1491  0000                     POSTDEC0 equ 0FEDh ;# 
  1492                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1493  0000                     POSTINC0 equ 0FEEh ;# 
  1494                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1495  0000                     INDF0 equ 0FEFh ;# 
  1496                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1497  0000                     INTCON3 equ 0FF0h ;# 
  1498                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1499  0000                     INTCON2 equ 0FF1h ;# 
  1500                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1501  0000                     INTCON equ 0FF2h ;# 
  1502                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1503  0000                     PROD equ 0FF3h ;# 
  1504                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1505  0000                     PRODL equ 0FF3h ;# 
  1506                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1507  0000                     PRODH equ 0FF4h ;# 
  1508                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1509  0000                     TABLAT equ 0FF5h ;# 
  1510                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1511  0000                     TBLPTR equ 0FF6h ;# 
  1512                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1513  0000                     TBLPTRL equ 0FF6h ;# 
  1514                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1515  0000                     TBLPTRH equ 0FF7h ;# 
  1516                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1517  0000                     TBLPTRU equ 0FF8h ;# 
  1518                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1519  0000                     PCLAT equ 0FF9h ;# 
  1520                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1521  0000                     PC equ 0FF9h ;# 
  1522                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1523  0000                     PCL equ 0FF9h ;# 
  1524                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1525  0000                     PCLATH equ 0FFAh ;# 
  1526                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1527  0000                     PCLATU equ 0FFBh ;# 
  1528                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1529  0000                     STKPTR equ 0FFCh ;# 
  1530                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1531  0000                     TOS equ 0FFDh ;# 
  1532                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1533  0000                     TOSL equ 0FFDh ;# 
  1534                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1535  0000                     TOSH equ 0FFEh ;# 
  1536                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1537  0000                     TOSU equ 0FFFh ;# 
  1538                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1539  0000                     PORTA equ 0F80h ;# 
  1540                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1541  0000                     PORTB equ 0F81h ;# 
  1542                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1543  0000                     PORTC equ 0F82h ;# 
  1544                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1545  0000                     PORTD equ 0F83h ;# 
  1546                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1547  0000                     PORTE equ 0F84h ;# 
  1548                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1549  0000                     SSP2CON2 equ 0F85h ;# 
  1550                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1551  0000                     SSP2CON1 equ 0F86h ;# 
  1552                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1553  0000                     SSP2STAT equ 0F87h ;# 
  1554                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1555  0000                     SSP2ADD equ 0F88h ;# 
  1556                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1557  0000                     LATA equ 0F89h ;# 
  1558                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1559  0000                     LATB equ 0F8Ah ;# 
  1560                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1561  0000                     LATC equ 0F8Bh ;# 
  1562                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1563  0000                     LATD equ 0F8Ch ;# 
  1564                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1565  0000                     LATE equ 0F8Dh ;# 
  1566                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1567  0000                     SSP2BUF equ 0F8Eh ;# 
  1568                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1569  0000                     TRISA equ 0F92h ;# 
  1570                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1571  0000                     DDRA equ 0F92h ;# 
  1572                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1573  0000                     TRISB equ 0F93h ;# 
  1574                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1575  0000                     DDRB equ 0F93h ;# 
  1576                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1577  0000                     TRISC equ 0F94h ;# 
  1578                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1579  0000                     DDRC equ 0F94h ;# 
  1580                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1581  0000                     TRISD equ 0F95h ;# 
  1582                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1583  0000                     DDRD equ 0F95h ;# 
  1584                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1585  0000                     TRISE equ 0F96h ;# 
  1586                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1587  0000                     DDRE equ 0F96h ;# 
  1588                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1589  0000                     OSCTUNE equ 0F9Bh ;# 
  1590                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1591  0000                     PIE1 equ 0F9Dh ;# 
  1592                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1593  0000                     PIR1 equ 0F9Eh ;# 
  1594                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1595  0000                     IPR1 equ 0F9Fh ;# 
  1596                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1597  0000                     PIE2 equ 0FA0h ;# 
  1598                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1599  0000                     PIR2 equ 0FA1h ;# 
  1600                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1601  0000                     IPR2 equ 0FA2h ;# 
  1602                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1603  0000                     PIE3 equ 0FA3h ;# 
  1604                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1605  0000                     PIR3 equ 0FA4h ;# 
  1606                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1607  0000                     IPR3 equ 0FA5h ;# 
  1608                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1609  0000                     EECON1 equ 0FA6h ;# 
  1610                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1611  0000                     EECON2 equ 0FA7h ;# 
  1612                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1613  0000                     RCSTA equ 0FABh ;# 
  1614                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1615  0000                     RCSTA1 equ 0FABh ;# 
  1616                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1617  0000                     TXSTA equ 0FACh ;# 
  1618                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1619  0000                     TXSTA1 equ 0FACh ;# 
  1620                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1621  0000                     TXREG equ 0FADh ;# 
  1622                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1623  0000                     TXREG1 equ 0FADh ;# 
  1624                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1625  0000                     RCREG equ 0FAEh ;# 
  1626                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1627  0000                     RCREG1 equ 0FAEh ;# 
  1628                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1629  0000                     SPBRG equ 0FAFh ;# 
  1630                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1631  0000                     SPBRG1 equ 0FAFh ;# 
  1632                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1633  0000                     SPBRGH equ 0FB0h ;# 
  1634                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1635  0000                     CMCON equ 0FB4h ;# 
  1636                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1637  0000                     CVRCON equ 0FB5h ;# 
  1638                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1639  0000                     ECCP1AS equ 0FB6h ;# 
  1640                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1641  0000                     ECCP1DEL equ 0FB7h ;# 
  1642                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1643  0000                     PWM1CON equ 0FB7h ;# 
  1644                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1645  0000                     BAUDCON equ 0FB8h ;# 
  1646                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1647  0000                     BAUDCTL equ 0FB8h ;# 
  1648                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1649  0000                     CCP2CON equ 0FBAh ;# 
  1650                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1651  0000                     CCPR2 equ 0FBBh ;# 
  1652                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1653  0000                     CCPR2L equ 0FBBh ;# 
  1654                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1655  0000                     CCPR2H equ 0FBCh ;# 
  1656                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1657  0000                     ECCP1CON equ 0FBDh ;# 
  1658                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1659  0000                     CCP1CON equ 0FBDh ;# 
  1660                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1661  0000                     CCPR1 equ 0FBEh ;# 
  1662                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1663  0000                     CCPR1L equ 0FBEh ;# 
  1664                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1665  0000                     CCPR1H equ 0FBFh ;# 
  1666                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1667  0000                     ADCON2 equ 0FC0h ;# 
  1668                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1669  0000                     ADCON1 equ 0FC1h ;# 
  1670                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1671  0000                     ADCON0 equ 0FC2h ;# 
  1672                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1673  0000                     ADRES equ 0FC3h ;# 
  1674                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1675  0000                     ADRESL equ 0FC3h ;# 
  1676                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1677  0000                     ADRESH equ 0FC4h ;# 
  1678                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1679  0000                     SSPCON2 equ 0FC5h ;# 
  1680                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1681  0000                     SSP1CON2 equ 0FC5h ;# 
  1682                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1683  0000                     SSPCON1 equ 0FC6h ;# 
  1684                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1685  0000                     SSP1CON1 equ 0FC6h ;# 
  1686                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1687  0000                     SSPSTAT equ 0FC7h ;# 
  1688                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1689  0000                     SSP1STAT equ 0FC7h ;# 
  1690                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1691  0000                     SSPADD equ 0FC8h ;# 
  1692                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1693  0000                     SSP1ADD equ 0FC8h ;# 
  1694                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1695  0000                     SSPBUF equ 0FC9h ;# 
  1696                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1697  0000                     SSP1BUF equ 0FC9h ;# 
  1698                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1699  0000                     T2CON equ 0FCAh ;# 
  1700                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1701  0000                     PR2 equ 0FCBh ;# 
  1702                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1703  0000                     MEMCON equ 0FCBh ;# 
  1704                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1705  0000                     TMR2 equ 0FCCh ;# 
  1706                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1707  0000                     T1CON equ 0FCDh ;# 
  1708                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1709  0000                     TMR1 equ 0FCEh ;# 
  1710                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1711  0000                     TMR1L equ 0FCEh ;# 
  1712                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1713  0000                     TMR1H equ 0FCFh ;# 
  1714                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1715  0000                     RCON equ 0FD0h ;# 
  1716                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1717  0000                     WDTCON equ 0FD1h ;# 
  1718                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1719  0000                     OSCCON equ 0FD3h ;# 
  1720                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1721  0000                     T0CON equ 0FD5h ;# 
  1722                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1723  0000                     TMR0 equ 0FD6h ;# 
  1724                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1725  0000                     TMR0L equ 0FD6h ;# 
  1726                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1727  0000                     TMR0H equ 0FD7h ;# 
  1728                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1729  0000                     STATUS equ 0FD8h ;# 
  1730                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1731  0000                     FSR2 equ 0FD9h ;# 
  1732                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1733  0000                     FSR2L equ 0FD9h ;# 
  1734                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1735  0000                     FSR2H equ 0FDAh ;# 
  1736                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1737  0000                     PLUSW2 equ 0FDBh ;# 
  1738                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1739  0000                     PREINC2 equ 0FDCh ;# 
  1740                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1741  0000                     POSTDEC2 equ 0FDDh ;# 
  1742                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1743  0000                     POSTINC2 equ 0FDEh ;# 
  1744                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1745  0000                     INDF2 equ 0FDFh ;# 
  1746                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1747  0000                     BSR equ 0FE0h ;# 
  1748                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1749  0000                     FSR1 equ 0FE1h ;# 
  1750                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1751  0000                     FSR1L equ 0FE1h ;# 
  1752                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1753  0000                     FSR1H equ 0FE2h ;# 
  1754                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1755  0000                     PLUSW1 equ 0FE3h ;# 
  1756                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1757  0000                     PREINC1 equ 0FE4h ;# 
  1758                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1759  0000                     POSTDEC1 equ 0FE5h ;# 
  1760                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1761  0000                     POSTINC1 equ 0FE6h ;# 
  1762                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1763  0000                     INDF1 equ 0FE7h ;# 
  1764                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1765  0000                     WREG equ 0FE8h ;# 
  1766                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1767  0000                     FSR0 equ 0FE9h ;# 
  1768                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1769  0000                     FSR0L equ 0FE9h ;# 
  1770                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1771  0000                     FSR0H equ 0FEAh ;# 
  1772                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1773  0000                     PLUSW0 equ 0FEBh ;# 
  1774                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1775  0000                     PREINC0 equ 0FECh ;# 
  1776                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1777  0000                     POSTDEC0 equ 0FEDh ;# 
  1778                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1779  0000                     POSTINC0 equ 0FEEh ;# 
  1780                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1781  0000                     INDF0 equ 0FEFh ;# 
  1782                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1783  0000                     INTCON3 equ 0FF0h ;# 
  1784                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1785  0000                     INTCON2 equ 0FF1h ;# 
  1786                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1787  0000                     INTCON equ 0FF2h ;# 
  1788                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1789  0000                     PROD equ 0FF3h ;# 
  1790                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1791  0000                     PRODL equ 0FF3h ;# 
  1792                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1793  0000                     PRODH equ 0FF4h ;# 
  1794                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1795  0000                     TABLAT equ 0FF5h ;# 
  1796                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1797  0000                     TBLPTR equ 0FF6h ;# 
  1798                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1799  0000                     TBLPTRL equ 0FF6h ;# 
  1800                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1801  0000                     TBLPTRH equ 0FF7h ;# 
  1802                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1803  0000                     TBLPTRU equ 0FF8h ;# 
  1804                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1805  0000                     PCLAT equ 0FF9h ;# 
  1806                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1807  0000                     PC equ 0FF9h ;# 
  1808                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1809  0000                     PCL equ 0FF9h ;# 
  1810                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1811  0000                     PCLATH equ 0FFAh ;# 
  1812                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1813  0000                     PCLATU equ 0FFBh ;# 
  1814                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1815  0000                     STKPTR equ 0FFCh ;# 
  1816                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1817  0000                     TOS equ 0FFDh ;# 
  1818                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1819  0000                     TOSL equ 0FFDh ;# 
  1820                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1821  0000                     TOSH equ 0FFEh ;# 
  1822                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1823  0000                     TOSU equ 0FFFh ;# 
  1824                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1825  0000                     PORTA equ 0F80h ;# 
  1826                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1827  0000                     PORTB equ 0F81h ;# 
  1828                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1829  0000                     PORTC equ 0F82h ;# 
  1830                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1831  0000                     PORTD equ 0F83h ;# 
  1832                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1833  0000                     PORTE equ 0F84h ;# 
  1834                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1835  0000                     SSP2CON2 equ 0F85h ;# 
  1836                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1837  0000                     SSP2CON1 equ 0F86h ;# 
  1838                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1839  0000                     SSP2STAT equ 0F87h ;# 
  1840                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1841  0000                     SSP2ADD equ 0F88h ;# 
  1842                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1843  0000                     LATA equ 0F89h ;# 
  1844                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1845  0000                     LATB equ 0F8Ah ;# 
  1846                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1847  0000                     LATC equ 0F8Bh ;# 
  1848                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1849  0000                     LATD equ 0F8Ch ;# 
  1850                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1851  0000                     LATE equ 0F8Dh ;# 
  1852                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1853  0000                     SSP2BUF equ 0F8Eh ;# 
  1854                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1855  0000                     TRISA equ 0F92h ;# 
  1856                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1857  0000                     DDRA equ 0F92h ;# 
  1858                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1859  0000                     TRISB equ 0F93h ;# 
  1860                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1861  0000                     DDRB equ 0F93h ;# 
  1862                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1863  0000                     TRISC equ 0F94h ;# 
  1864                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1865  0000                     DDRC equ 0F94h ;# 
  1866                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1867  0000                     TRISD equ 0F95h ;# 
  1868                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1869  0000                     DDRD equ 0F95h ;# 
  1870                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1871  0000                     TRISE equ 0F96h ;# 
  1872                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1873  0000                     DDRE equ 0F96h ;# 
  1874                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1875  0000                     OSCTUNE equ 0F9Bh ;# 
  1876                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1877  0000                     PIE1 equ 0F9Dh ;# 
  1878                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1879  0000                     PIR1 equ 0F9Eh ;# 
  1880                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1881  0000                     IPR1 equ 0F9Fh ;# 
  1882                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1883  0000                     PIE2 equ 0FA0h ;# 
  1884                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1885  0000                     PIR2 equ 0FA1h ;# 
  1886                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1887  0000                     IPR2 equ 0FA2h ;# 
  1888                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1889  0000                     PIE3 equ 0FA3h ;# 
  1890                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1891  0000                     PIR3 equ 0FA4h ;# 
  1892                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1893  0000                     IPR3 equ 0FA5h ;# 
  1894                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1895  0000                     EECON1 equ 0FA6h ;# 
  1896                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1897  0000                     EECON2 equ 0FA7h ;# 
  1898                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1899  0000                     RCSTA equ 0FABh ;# 
  1900                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1901  0000                     RCSTA1 equ 0FABh ;# 
  1902                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1903  0000                     TXSTA equ 0FACh ;# 
  1904                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1905  0000                     TXSTA1 equ 0FACh ;# 
  1906                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1907  0000                     TXREG equ 0FADh ;# 
  1908                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1909  0000                     TXREG1 equ 0FADh ;# 
  1910                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1911  0000                     RCREG equ 0FAEh ;# 
  1912                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1913  0000                     RCREG1 equ 0FAEh ;# 
  1914                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1915  0000                     SPBRG equ 0FAFh ;# 
  1916                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1917  0000                     SPBRG1 equ 0FAFh ;# 
  1918                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1919  0000                     SPBRGH equ 0FB0h ;# 
  1920                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1921  0000                     CMCON equ 0FB4h ;# 
  1922                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1923  0000                     CVRCON equ 0FB5h ;# 
  1924                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1925  0000                     ECCP1AS equ 0FB6h ;# 
  1926                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1927  0000                     ECCP1DEL equ 0FB7h ;# 
  1928                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1929  0000                     PWM1CON equ 0FB7h ;# 
  1930                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1931  0000                     BAUDCON equ 0FB8h ;# 
  1932                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1933  0000                     BAUDCTL equ 0FB8h ;# 
  1934                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1935  0000                     CCP2CON equ 0FBAh ;# 
  1936                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1937  0000                     CCPR2 equ 0FBBh ;# 
  1938                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1939  0000                     CCPR2L equ 0FBBh ;# 
  1940                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1941  0000                     CCPR2H equ 0FBCh ;# 
  1942                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1943  0000                     ECCP1CON equ 0FBDh ;# 
  1944                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1945  0000                     CCP1CON equ 0FBDh ;# 
  1946                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1947  0000                     CCPR1 equ 0FBEh ;# 
  1948                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1949  0000                     CCPR1L equ 0FBEh ;# 
  1950                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1951  0000                     CCPR1H equ 0FBFh ;# 
  1952                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1953  0000                     ADCON2 equ 0FC0h ;# 
  1954                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1955  0000                     ADCON1 equ 0FC1h ;# 
  1956                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1957  0000                     ADCON0 equ 0FC2h ;# 
  1958                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1959  0000                     ADRES equ 0FC3h ;# 
  1960                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1961  0000                     ADRESL equ 0FC3h ;# 
  1962                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1963  0000                     ADRESH equ 0FC4h ;# 
  1964                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1965  0000                     SSPCON2 equ 0FC5h ;# 
  1966                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1967  0000                     SSP1CON2 equ 0FC5h ;# 
  1968                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1969  0000                     SSPCON1 equ 0FC6h ;# 
  1970                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1971  0000                     SSP1CON1 equ 0FC6h ;# 
  1972                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1973  0000                     SSPSTAT equ 0FC7h ;# 
  1974                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1975  0000                     SSP1STAT equ 0FC7h ;# 
  1976                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1977  0000                     SSPADD equ 0FC8h ;# 
  1978                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1979  0000                     SSP1ADD equ 0FC8h ;# 
  1980                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1981  0000                     SSPBUF equ 0FC9h ;# 
  1982                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1983  0000                     SSP1BUF equ 0FC9h ;# 
  1984                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1985  0000                     T2CON equ 0FCAh ;# 
  1986                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1987  0000                     PR2 equ 0FCBh ;# 
  1988                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1989  0000                     MEMCON equ 0FCBh ;# 
  1990                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1991  0000                     TMR2 equ 0FCCh ;# 
  1992                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1993  0000                     T1CON equ 0FCDh ;# 
  1994                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1995  0000                     TMR1 equ 0FCEh ;# 
  1996                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1997  0000                     TMR1L equ 0FCEh ;# 
  1998                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1999  0000                     TMR1H equ 0FCFh ;# 
  2000                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2001  0000                     RCON equ 0FD0h ;# 
  2002                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2003  0000                     WDTCON equ 0FD1h ;# 
  2004                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2005  0000                     OSCCON equ 0FD3h ;# 
  2006                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2007  0000                     T0CON equ 0FD5h ;# 
  2008                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2009  0000                     TMR0 equ 0FD6h ;# 
  2010                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2011  0000                     TMR0L equ 0FD6h ;# 
  2012                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2013  0000                     TMR0H equ 0FD7h ;# 
  2014                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2015  0000                     STATUS equ 0FD8h ;# 
  2016                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2017  0000                     FSR2 equ 0FD9h ;# 
  2018                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2019  0000                     FSR2L equ 0FD9h ;# 
  2020                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2021  0000                     FSR2H equ 0FDAh ;# 
  2022                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2023  0000                     PLUSW2 equ 0FDBh ;# 
  2024                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2025  0000                     PREINC2 equ 0FDCh ;# 
  2026                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2027  0000                     POSTDEC2 equ 0FDDh ;# 
  2028                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2029  0000                     POSTINC2 equ 0FDEh ;# 
  2030                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2031  0000                     INDF2 equ 0FDFh ;# 
  2032                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2033  0000                     BSR equ 0FE0h ;# 
  2034                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2035  0000                     FSR1 equ 0FE1h ;# 
  2036                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2037  0000                     FSR1L equ 0FE1h ;# 
  2038                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2039  0000                     FSR1H equ 0FE2h ;# 
  2040                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2041  0000                     PLUSW1 equ 0FE3h ;# 
  2042                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2043  0000                     PREINC1 equ 0FE4h ;# 
  2044                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2045  0000                     POSTDEC1 equ 0FE5h ;# 
  2046                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2047  0000                     POSTINC1 equ 0FE6h ;# 
  2048                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2049  0000                     INDF1 equ 0FE7h ;# 
  2050                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2051  0000                     WREG equ 0FE8h ;# 
  2052                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2053  0000                     FSR0 equ 0FE9h ;# 
  2054                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2055  0000                     FSR0L equ 0FE9h ;# 
  2056                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2057  0000                     FSR0H equ 0FEAh ;# 
  2058                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2059  0000                     PLUSW0 equ 0FEBh ;# 
  2060                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2061  0000                     PREINC0 equ 0FECh ;# 
  2062                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2063  0000                     POSTDEC0 equ 0FEDh ;# 
  2064                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2065  0000                     POSTINC0 equ 0FEEh ;# 
  2066                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2067  0000                     INDF0 equ 0FEFh ;# 
  2068                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2069  0000                     INTCON3 equ 0FF0h ;# 
  2070                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2071  0000                     INTCON2 equ 0FF1h ;# 
  2072                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2073  0000                     INTCON equ 0FF2h ;# 
  2074                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2075  0000                     PROD equ 0FF3h ;# 
  2076                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2077  0000                     PRODL equ 0FF3h ;# 
  2078                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2079  0000                     PRODH equ 0FF4h ;# 
  2080                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2081  0000                     TABLAT equ 0FF5h ;# 
  2082                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2083  0000                     TBLPTR equ 0FF6h ;# 
  2084                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2085  0000                     TBLPTRL equ 0FF6h ;# 
  2086                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2087  0000                     TBLPTRH equ 0FF7h ;# 
  2088                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2089  0000                     TBLPTRU equ 0FF8h ;# 
  2090                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2091  0000                     PCLAT equ 0FF9h ;# 
  2092                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2093  0000                     PC equ 0FF9h ;# 
  2094                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2095  0000                     PCL equ 0FF9h ;# 
  2096                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2097  0000                     PCLATH equ 0FFAh ;# 
  2098                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2099  0000                     PCLATU equ 0FFBh ;# 
  2100                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2101  0000                     STKPTR equ 0FFCh ;# 
  2102                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2103  0000                     TOS equ 0FFDh ;# 
  2104                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2105  0000                     TOSL equ 0FFDh ;# 
  2106                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2107  0000                     TOSH equ 0FFEh ;# 
  2108                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2109  0000                     TOSU equ 0FFFh ;# 
  2110                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2111  0000                     PORTA equ 0F80h ;# 
  2112                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2113  0000                     PORTB equ 0F81h ;# 
  2114                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2115  0000                     PORTC equ 0F82h ;# 
  2116                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2117  0000                     PORTD equ 0F83h ;# 
  2118                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2119  0000                     PORTE equ 0F84h ;# 
  2120                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2121  0000                     SSP2CON2 equ 0F85h ;# 
  2122                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2123  0000                     SSP2CON1 equ 0F86h ;# 
  2124                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2125  0000                     SSP2STAT equ 0F87h ;# 
  2126                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2127  0000                     SSP2ADD equ 0F88h ;# 
  2128                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2129  0000                     LATA equ 0F89h ;# 
  2130                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2131  0000                     LATB equ 0F8Ah ;# 
  2132                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2133  0000                     LATC equ 0F8Bh ;# 
  2134                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2135  0000                     LATD equ 0F8Ch ;# 
  2136                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2137  0000                     LATE equ 0F8Dh ;# 
  2138                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2139  0000                     SSP2BUF equ 0F8Eh ;# 
  2140                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2141  0000                     TRISA equ 0F92h ;# 
  2142                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2143  0000                     DDRA equ 0F92h ;# 
  2144                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2145  0000                     TRISB equ 0F93h ;# 
  2146                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2147  0000                     DDRB equ 0F93h ;# 
  2148                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2149  0000                     TRISC equ 0F94h ;# 
  2150                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2151  0000                     DDRC equ 0F94h ;# 
  2152                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2153  0000                     TRISD equ 0F95h ;# 
  2154                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2155  0000                     DDRD equ 0F95h ;# 
  2156                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2157  0000                     TRISE equ 0F96h ;# 
  2158                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2159  0000                     DDRE equ 0F96h ;# 
  2160                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2161  0000                     OSCTUNE equ 0F9Bh ;# 
  2162                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2163  0000                     PIE1 equ 0F9Dh ;# 
  2164                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2165  0000                     PIR1 equ 0F9Eh ;# 
  2166                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2167  0000                     IPR1 equ 0F9Fh ;# 
  2168                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2169  0000                     PIE2 equ 0FA0h ;# 
  2170                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2171  0000                     PIR2 equ 0FA1h ;# 
  2172                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2173  0000                     IPR2 equ 0FA2h ;# 
  2174                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2175  0000                     PIE3 equ 0FA3h ;# 
  2176                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2177  0000                     PIR3 equ 0FA4h ;# 
  2178                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2179  0000                     IPR3 equ 0FA5h ;# 
  2180                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2181  0000                     EECON1 equ 0FA6h ;# 
  2182                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2183  0000                     EECON2 equ 0FA7h ;# 
  2184                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2185  0000                     RCSTA equ 0FABh ;# 
  2186                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2187  0000                     RCSTA1 equ 0FABh ;# 
  2188                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2189  0000                     TXSTA equ 0FACh ;# 
  2190                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2191  0000                     TXSTA1 equ 0FACh ;# 
  2192                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2193  0000                     TXREG equ 0FADh ;# 
  2194                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2195  0000                     TXREG1 equ 0FADh ;# 
  2196                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2197  0000                     RCREG equ 0FAEh ;# 
  2198                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2199  0000                     RCREG1 equ 0FAEh ;# 
  2200                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2201  0000                     SPBRG equ 0FAFh ;# 
  2202                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2203  0000                     SPBRG1 equ 0FAFh ;# 
  2204                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2205  0000                     SPBRGH equ 0FB0h ;# 
  2206                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2207  0000                     CMCON equ 0FB4h ;# 
  2208                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2209  0000                     CVRCON equ 0FB5h ;# 
  2210                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2211  0000                     ECCP1AS equ 0FB6h ;# 
  2212                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2213  0000                     ECCP1DEL equ 0FB7h ;# 
  2214                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2215  0000                     PWM1CON equ 0FB7h ;# 
  2216                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2217  0000                     BAUDCON equ 0FB8h ;# 
  2218                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2219  0000                     BAUDCTL equ 0FB8h ;# 
  2220                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2221  0000                     CCP2CON equ 0FBAh ;# 
  2222                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2223  0000                     CCPR2 equ 0FBBh ;# 
  2224                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2225  0000                     CCPR2L equ 0FBBh ;# 
  2226                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2227  0000                     CCPR2H equ 0FBCh ;# 
  2228                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2229  0000                     ECCP1CON equ 0FBDh ;# 
  2230                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2231  0000                     CCP1CON equ 0FBDh ;# 
  2232                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2233  0000                     CCPR1 equ 0FBEh ;# 
  2234                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2235  0000                     CCPR1L equ 0FBEh ;# 
  2236                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2237  0000                     CCPR1H equ 0FBFh ;# 
  2238                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2239  0000                     ADCON2 equ 0FC0h ;# 
  2240                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2241  0000                     ADCON1 equ 0FC1h ;# 
  2242                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2243  0000                     ADCON0 equ 0FC2h ;# 
  2244                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2245  0000                     ADRES equ 0FC3h ;# 
  2246                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2247  0000                     ADRESL equ 0FC3h ;# 
  2248                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2249  0000                     ADRESH equ 0FC4h ;# 
  2250                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2251  0000                     SSPCON2 equ 0FC5h ;# 
  2252                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2253  0000                     SSP1CON2 equ 0FC5h ;# 
  2254                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2255  0000                     SSPCON1 equ 0FC6h ;# 
  2256                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2257  0000                     SSP1CON1 equ 0FC6h ;# 
  2258                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2259  0000                     SSPSTAT equ 0FC7h ;# 
  2260                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2261  0000                     SSP1STAT equ 0FC7h ;# 
  2262                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2263  0000                     SSPADD equ 0FC8h ;# 
  2264                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2265  0000                     SSP1ADD equ 0FC8h ;# 
  2266                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2267  0000                     SSPBUF equ 0FC9h ;# 
  2268                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2269  0000                     SSP1BUF equ 0FC9h ;# 
  2270                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2271  0000                     T2CON equ 0FCAh ;# 
  2272                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2273  0000                     PR2 equ 0FCBh ;# 
  2274                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2275  0000                     MEMCON equ 0FCBh ;# 
  2276                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2277  0000                     TMR2 equ 0FCCh ;# 
  2278                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2279  0000                     T1CON equ 0FCDh ;# 
  2280                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2281  0000                     TMR1 equ 0FCEh ;# 
  2282                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2283  0000                     TMR1L equ 0FCEh ;# 
  2284                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2285  0000                     TMR1H equ 0FCFh ;# 
  2286                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2287  0000                     RCON equ 0FD0h ;# 
  2288                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2289  0000                     WDTCON equ 0FD1h ;# 
  2290                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2291  0000                     OSCCON equ 0FD3h ;# 
  2292                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2293  0000                     T0CON equ 0FD5h ;# 
  2294                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2295  0000                     TMR0 equ 0FD6h ;# 
  2296                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2297  0000                     TMR0L equ 0FD6h ;# 
  2298                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2299  0000                     TMR0H equ 0FD7h ;# 
  2300                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2301  0000                     STATUS equ 0FD8h ;# 
  2302                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2303  0000                     FSR2 equ 0FD9h ;# 
  2304                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2305  0000                     FSR2L equ 0FD9h ;# 
  2306                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2307  0000                     FSR2H equ 0FDAh ;# 
  2308                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2309  0000                     PLUSW2 equ 0FDBh ;# 
  2310                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2311  0000                     PREINC2 equ 0FDCh ;# 
  2312                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2313  0000                     POSTDEC2 equ 0FDDh ;# 
  2314                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2315  0000                     POSTINC2 equ 0FDEh ;# 
  2316                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2317  0000                     INDF2 equ 0FDFh ;# 
  2318                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2319  0000                     BSR equ 0FE0h ;# 
  2320                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2321  0000                     FSR1 equ 0FE1h ;# 
  2322                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2323  0000                     FSR1L equ 0FE1h ;# 
  2324                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2325  0000                     FSR1H equ 0FE2h ;# 
  2326                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2327  0000                     PLUSW1 equ 0FE3h ;# 
  2328                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2329  0000                     PREINC1 equ 0FE4h ;# 
  2330                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2331  0000                     POSTDEC1 equ 0FE5h ;# 
  2332                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2333  0000                     POSTINC1 equ 0FE6h ;# 
  2334                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2335  0000                     INDF1 equ 0FE7h ;# 
  2336                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2337  0000                     WREG equ 0FE8h ;# 
  2338                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2339  0000                     FSR0 equ 0FE9h ;# 
  2340                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2341  0000                     FSR0L equ 0FE9h ;# 
  2342                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2343  0000                     FSR0H equ 0FEAh ;# 
  2344                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2345  0000                     PLUSW0 equ 0FEBh ;# 
  2346                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2347  0000                     PREINC0 equ 0FECh ;# 
  2348                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2349  0000                     POSTDEC0 equ 0FEDh ;# 
  2350                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2351  0000                     POSTINC0 equ 0FEEh ;# 
  2352                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2353  0000                     INDF0 equ 0FEFh ;# 
  2354                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2355  0000                     INTCON3 equ 0FF0h ;# 
  2356                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2357  0000                     INTCON2 equ 0FF1h ;# 
  2358                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2359  0000                     INTCON equ 0FF2h ;# 
  2360                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2361  0000                     PROD equ 0FF3h ;# 
  2362                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2363  0000                     PRODL equ 0FF3h ;# 
  2364                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2365  0000                     PRODH equ 0FF4h ;# 
  2366                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2367  0000                     TABLAT equ 0FF5h ;# 
  2368                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2369  0000                     TBLPTR equ 0FF6h ;# 
  2370                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2371  0000                     TBLPTRL equ 0FF6h ;# 
  2372                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2373  0000                     TBLPTRH equ 0FF7h ;# 
  2374                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2375  0000                     TBLPTRU equ 0FF8h ;# 
  2376                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2377  0000                     PCLAT equ 0FF9h ;# 
  2378                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2379  0000                     PC equ 0FF9h ;# 
  2380                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2381  0000                     PCL equ 0FF9h ;# 
  2382                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2383  0000                     PCLATH equ 0FFAh ;# 
  2384                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2385  0000                     PCLATU equ 0FFBh ;# 
  2386                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2387  0000                     STKPTR equ 0FFCh ;# 
  2388                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2389  0000                     TOS equ 0FFDh ;# 
  2390                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2391  0000                     TOSL equ 0FFDh ;# 
  2392                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2393  0000                     TOSH equ 0FFEh ;# 
  2394                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2395  0000                     TOSU equ 0FFFh ;# 
  2396                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2397  0000                     PORTA equ 0F80h ;# 
  2398                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2399  0000                     PORTB equ 0F81h ;# 
  2400                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2401  0000                     PORTC equ 0F82h ;# 
  2402                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2403  0000                     PORTD equ 0F83h ;# 
  2404                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2405  0000                     PORTE equ 0F84h ;# 
  2406                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2407  0000                     SSP2CON2 equ 0F85h ;# 
  2408                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2409  0000                     SSP2CON1 equ 0F86h ;# 
  2410                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2411  0000                     SSP2STAT equ 0F87h ;# 
  2412                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2413  0000                     SSP2ADD equ 0F88h ;# 
  2414                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2415  0000                     LATA equ 0F89h ;# 
  2416                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2417  0000                     LATB equ 0F8Ah ;# 
  2418                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2419  0000                     LATC equ 0F8Bh ;# 
  2420                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2421  0000                     LATD equ 0F8Ch ;# 
  2422                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2423  0000                     LATE equ 0F8Dh ;# 
  2424                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2425  0000                     SSP2BUF equ 0F8Eh ;# 
  2426                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2427  0000                     TRISA equ 0F92h ;# 
  2428                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2429  0000                     DDRA equ 0F92h ;# 
  2430                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2431  0000                     TRISB equ 0F93h ;# 
  2432                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2433  0000                     DDRB equ 0F93h ;# 
  2434                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2435  0000                     TRISC equ 0F94h ;# 
  2436                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2437  0000                     DDRC equ 0F94h ;# 
  2438                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2439  0000                     TRISD equ 0F95h ;# 
  2440                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2441  0000                     DDRD equ 0F95h ;# 
  2442                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2443  0000                     TRISE equ 0F96h ;# 
  2444                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2445  0000                     DDRE equ 0F96h ;# 
  2446                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2447  0000                     OSCTUNE equ 0F9Bh ;# 
  2448                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2449  0000                     PIE1 equ 0F9Dh ;# 
  2450                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2451  0000                     PIR1 equ 0F9Eh ;# 
  2452                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2453  0000                     IPR1 equ 0F9Fh ;# 
  2454                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2455  0000                     PIE2 equ 0FA0h ;# 
  2456                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2457  0000                     PIR2 equ 0FA1h ;# 
  2458                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2459  0000                     IPR2 equ 0FA2h ;# 
  2460                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2461  0000                     PIE3 equ 0FA3h ;# 
  2462                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2463  0000                     PIR3 equ 0FA4h ;# 
  2464                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2465  0000                     IPR3 equ 0FA5h ;# 
  2466                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2467  0000                     EECON1 equ 0FA6h ;# 
  2468                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2469  0000                     EECON2 equ 0FA7h ;# 
  2470                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2471  0000                     RCSTA equ 0FABh ;# 
  2472                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2473  0000                     RCSTA1 equ 0FABh ;# 
  2474                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2475  0000                     TXSTA equ 0FACh ;# 
  2476                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2477  0000                     TXSTA1 equ 0FACh ;# 
  2478                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2479  0000                     TXREG equ 0FADh ;# 
  2480                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2481  0000                     TXREG1 equ 0FADh ;# 
  2482                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2483  0000                     RCREG equ 0FAEh ;# 
  2484                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2485  0000                     RCREG1 equ 0FAEh ;# 
  2486                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2487  0000                     SPBRG equ 0FAFh ;# 
  2488                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2489  0000                     SPBRG1 equ 0FAFh ;# 
  2490                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2491  0000                     SPBRGH equ 0FB0h ;# 
  2492                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2493  0000                     CMCON equ 0FB4h ;# 
  2494                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2495  0000                     CVRCON equ 0FB5h ;# 
  2496                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2497  0000                     ECCP1AS equ 0FB6h ;# 
  2498                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2499  0000                     ECCP1DEL equ 0FB7h ;# 
  2500                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2501  0000                     PWM1CON equ 0FB7h ;# 
  2502                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2503  0000                     BAUDCON equ 0FB8h ;# 
  2504                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2505  0000                     BAUDCTL equ 0FB8h ;# 
  2506                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2507  0000                     CCP2CON equ 0FBAh ;# 
  2508                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2509  0000                     CCPR2 equ 0FBBh ;# 
  2510                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2511  0000                     CCPR2L equ 0FBBh ;# 
  2512                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2513  0000                     CCPR2H equ 0FBCh ;# 
  2514                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2515  0000                     ECCP1CON equ 0FBDh ;# 
  2516                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2517  0000                     CCP1CON equ 0FBDh ;# 
  2518                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2519  0000                     CCPR1 equ 0FBEh ;# 
  2520                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2521  0000                     CCPR1L equ 0FBEh ;# 
  2522                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2523  0000                     CCPR1H equ 0FBFh ;# 
  2524                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2525  0000                     ADCON2 equ 0FC0h ;# 
  2526                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2527  0000                     ADCON1 equ 0FC1h ;# 
  2528                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2529  0000                     ADCON0 equ 0FC2h ;# 
  2530                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2531  0000                     ADRES equ 0FC3h ;# 
  2532                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2533  0000                     ADRESL equ 0FC3h ;# 
  2534                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2535  0000                     ADRESH equ 0FC4h ;# 
  2536                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2537  0000                     SSPCON2 equ 0FC5h ;# 
  2538                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2539  0000                     SSP1CON2 equ 0FC5h ;# 
  2540                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2541  0000                     SSPCON1 equ 0FC6h ;# 
  2542                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2543  0000                     SSP1CON1 equ 0FC6h ;# 
  2544                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2545  0000                     SSPSTAT equ 0FC7h ;# 
  2546                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2547  0000                     SSP1STAT equ 0FC7h ;# 
  2548                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2549  0000                     SSPADD equ 0FC8h ;# 
  2550                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2551  0000                     SSP1ADD equ 0FC8h ;# 
  2552                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2553  0000                     SSPBUF equ 0FC9h ;# 
  2554                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2555  0000                     SSP1BUF equ 0FC9h ;# 
  2556                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2557  0000                     T2CON equ 0FCAh ;# 
  2558                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2559  0000                     PR2 equ 0FCBh ;# 
  2560                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2561  0000                     MEMCON equ 0FCBh ;# 
  2562                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2563  0000                     TMR2 equ 0FCCh ;# 
  2564                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2565  0000                     T1CON equ 0FCDh ;# 
  2566                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2567  0000                     TMR1 equ 0FCEh ;# 
  2568                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2569  0000                     TMR1L equ 0FCEh ;# 
  2570                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2571  0000                     TMR1H equ 0FCFh ;# 
  2572                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2573  0000                     RCON equ 0FD0h ;# 
  2574                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2575  0000                     WDTCON equ 0FD1h ;# 
  2576                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2577  0000                     OSCCON equ 0FD3h ;# 
  2578                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2579  0000                     T0CON equ 0FD5h ;# 
  2580                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2581  0000                     TMR0 equ 0FD6h ;# 
  2582                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2583  0000                     TMR0L equ 0FD6h ;# 
  2584                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2585  0000                     TMR0H equ 0FD7h ;# 
  2586                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2587  0000                     STATUS equ 0FD8h ;# 
  2588                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2589  0000                     FSR2 equ 0FD9h ;# 
  2590                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2591  0000                     FSR2L equ 0FD9h ;# 
  2592                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2593  0000                     FSR2H equ 0FDAh ;# 
  2594                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2595  0000                     PLUSW2 equ 0FDBh ;# 
  2596                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2597  0000                     PREINC2 equ 0FDCh ;# 
  2598                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2599  0000                     POSTDEC2 equ 0FDDh ;# 
  2600                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2601  0000                     POSTINC2 equ 0FDEh ;# 
  2602                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2603  0000                     INDF2 equ 0FDFh ;# 
  2604                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2605  0000                     BSR equ 0FE0h ;# 
  2606                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2607  0000                     FSR1 equ 0FE1h ;# 
  2608                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2609  0000                     FSR1L equ 0FE1h ;# 
  2610                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2611  0000                     FSR1H equ 0FE2h ;# 
  2612                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2613  0000                     PLUSW1 equ 0FE3h ;# 
  2614                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2615  0000                     PREINC1 equ 0FE4h ;# 
  2616                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2617  0000                     POSTDEC1 equ 0FE5h ;# 
  2618                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2619  0000                     POSTINC1 equ 0FE6h ;# 
  2620                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2621  0000                     INDF1 equ 0FE7h ;# 
  2622                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2623  0000                     WREG equ 0FE8h ;# 
  2624                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2625  0000                     FSR0 equ 0FE9h ;# 
  2626                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2627  0000                     FSR0L equ 0FE9h ;# 
  2628                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2629  0000                     FSR0H equ 0FEAh ;# 
  2630                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2631  0000                     PLUSW0 equ 0FEBh ;# 
  2632                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2633  0000                     PREINC0 equ 0FECh ;# 
  2634                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2635  0000                     POSTDEC0 equ 0FEDh ;# 
  2636                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2637  0000                     POSTINC0 equ 0FEEh ;# 
  2638                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2639  0000                     INDF0 equ 0FEFh ;# 
  2640                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2641  0000                     INTCON3 equ 0FF0h ;# 
  2642                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2643  0000                     INTCON2 equ 0FF1h ;# 
  2644                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2645  0000                     INTCON equ 0FF2h ;# 
  2646                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2647  0000                     PROD equ 0FF3h ;# 
  2648                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2649  0000                     PRODL equ 0FF3h ;# 
  2650                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2651  0000                     PRODH equ 0FF4h ;# 
  2652                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2653  0000                     TABLAT equ 0FF5h ;# 
  2654                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2655  0000                     TBLPTR equ 0FF6h ;# 
  2656                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2657  0000                     TBLPTRL equ 0FF6h ;# 
  2658                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2659  0000                     TBLPTRH equ 0FF7h ;# 
  2660                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2661  0000                     TBLPTRU equ 0FF8h ;# 
  2662                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2663  0000                     PCLAT equ 0FF9h ;# 
  2664                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2665  0000                     PC equ 0FF9h ;# 
  2666                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2667  0000                     PCL equ 0FF9h ;# 
  2668                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2669  0000                     PCLATH equ 0FFAh ;# 
  2670                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2671  0000                     PCLATU equ 0FFBh ;# 
  2672                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2673  0000                     STKPTR equ 0FFCh ;# 
  2674                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2675  0000                     TOS equ 0FFDh ;# 
  2676                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2677  0000                     TOSL equ 0FFDh ;# 
  2678                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2679  0000                     TOSH equ 0FFEh ;# 
  2680                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2681  0000                     TOSU equ 0FFFh ;# 
  2682                           	FNCALL	_main,_init_uart_recv
  2683                           	FNCALL	_main,_init_i2c
  2684                           	FNCALL	_main,_init_timer1_lthread
  2685                           	FNCALL	_main,_init_queues
  2686                           	FNCALL	_main,_OpenTimer1
  2687                           	FNCALL	_main,_enable_interrupts
  2688                           	FNCALL	_main,_i2c_configure_slave
  2689                           	FNCALL	_main,_OpenUSART
  2690                           	FNCALL	_main,_block_on_To_msgqueues
  2691                           	FNCALL	_main,_ToMainHigh_recvmsg
  2692                           	FNCALL	_main,_timer0_lthread
  2693                           	FNCALL	_main,_ToMainLow_recvmsg
  2694                           	FNCALL	_main,_timer1_lthread
  2695                           	FNCALL	_main,_FromMainLow_sendmsg
  2696                           	FNCALL	_main,_uart_lthread
  2697                           	FNCALL	_init_timer1_lthread,_OpenADC
  2698                           	FNCALL	_init_timer1_lthread,_SetChanADC
  2699                           	FNCALL	_init_queues,_init_queue
  2700                           	FNCALL	_block_on_To_msgqueues,_in_main
  2701                           	FNCALL	_block_on_To_msgqueues,_check_msg
  2702                           	FNCALL	_block_on_To_msgqueues,_Delay1KTCYx
  2703                           	FNCALL	_in_main,_in_low_int
  2704                           	FNCALL	_in_main,_in_high_int
  2705                           	FNCALL	_in_low_int,_in_high_int
  2706                           	FNCALL	_ToMainHigh_recvmsg,_recv_msg
  2707                           	FNCALL	_ToMainLow_recvmsg,_recv_msg
  2708                           	FNCALL	_timer1_lthread,_i2c_master_send
  2709                           	FNCALL	_FromMainLow_sendmsg,_send_msg
  2710                           	FNCALL	_send_msg,_memcpy
  2711                           	FNCALL	_recv_msg,_memcpy
  2712                           	FNROOT	_main
  2713                           	FNCALL	_InterruptHandlerHigh,_i2c_int_handler
  2714                           	FNCALL	_InterruptHandlerHigh,_timer0_int_handler
  2715                           	FNCALL	_InterruptHandlerHigh,_SleepIfOkay
  2716                           	FNCALL	_i2c_int_handler,_i2c_slave_int_handler
  2717                           	FNCALL	_i2c_int_handler,_i2c_master_int_handler
  2718                           	FNCALL	_timer0_int_handler,_WriteTimer0
  2719                           	FNCALL	_timer0_int_handler,_FromMainHigh_recvmsg
  2720                           	FNCALL	_timer0_int_handler,_ToMainHigh_sendmsg
  2721                           	FNCALL	_SleepIfOkay,i2_in_low_int
  2722                           	FNCALL	_SleepIfOkay,i2_in_high_int
  2723                           	FNCALL	_SleepIfOkay,i2_check_msg
  2724                           	FNCALL	_SleepIfOkay,_enter_sleep_mode
  2725                           	FNCALL	_FromMainHigh_recvmsg,i2_recv_msg
  2726                           	FNCALL	_i2c_slave_int_handler,_handle_start
  2727                           	FNCALL	_i2c_slave_int_handler,_FromMainLow_recvmsg
  2728                           	FNCALL	_i2c_slave_int_handler,_start_i2c_slave_reply
  2729                           	FNCALL	_i2c_slave_int_handler,_ToMainHigh_sendmsg
  2730                           	FNCALL	_ToMainHigh_sendmsg,i2_send_msg
  2731                           	FNCALL	_FromMainLow_recvmsg,i2_recv_msg
  2732                           	FNCALL	i2_in_low_int,i2_in_high_int
  2733                           	FNCALL	i2_send_msg,i2_memcpy
  2734                           	FNCALL	i2_recv_msg,i2_memcpy
  2735                           	FNCALL	intlevel2,_InterruptHandlerHigh
  2736                           	global	intlevel2
  2737                           	FNROOT	intlevel2
  2738                           	FNCALL	_InterruptHandlerLow,_timer1_int_handler
  2739                           	FNCALL	_InterruptHandlerLow,_adc_int_handler
  2740                           	FNCALL	_InterruptHandlerLow,_uart_recv_int_handler
  2741                           	FNCALL	_timer1_int_handler,_ReadTimer1
  2742                           	FNCALL	_timer1_int_handler,_ToMainLow_sendmsg
  2743                           	FNCALL	_timer1_int_handler,_WriteTimer1
  2744                           	FNCALL	_adc_int_handler,_ReadADC
  2745                           	FNCALL	_adc_int_handler,_ToMainLow_sendmsg
  2746                           	FNCALL	_uart_recv_int_handler,_ReadUSART
  2747                           	FNCALL	_uart_recv_int_handler,_ToMainLow_sendmsg
  2748                           	FNCALL	_ToMainLow_sendmsg,i1_send_msg
  2749                           	FNCALL	i1_send_msg,i1_memcpy
  2750                           	FNCALL	intlevel1,_InterruptHandlerLow
  2751                           	global	intlevel1
  2752                           	FNROOT	intlevel1
  2753                           	global	timer1_lthread@F5089
  2754                           psect	idataBANK0,class=CODE,space=0,delta=1
  2755                           global __pidataBANK0
  2756  00215E                     __pidataBANK0:
  2757                           	file	"../src/timer1_thread.c"
  2758                           	line	29
  2759                           
  2760                           ;initializer for timer1_lthread@F5089
  2761  00215E  AB                 	db	low(0ABh)
  2762  00215F  55                 	db	low(055h)
  2763                           	global	_MQ_Main_Willing_to_block
  2764                           	global	_USART_Status
  2765                           	global	_adcMsgCount
  2766                           	global	_emptyMsgCount
  2767                           	global	_i2cMode
  2768                           	global	_FromMainLow_MQ
  2769                           	global	_ToMainHigh_MQ
  2770                           	global	_ToMainLow_MQ
  2771                           	global	_FromMainHigh_MQ
  2772                           	global	_PC
  2773  0000                     _PC	set	0xFF9
  2774                           	global	_PCLAT
  2775  0000                     _PCLAT	set	0xFF9
  2776                           	global	_TBLPTR
  2777  0000                     _TBLPTR	set	0xFF6
  2778                           	global	_TOS
  2779  0000                     _TOS	set	0xFFD
  2780                           	global	_ADRES
  2781  0000                     _ADRES	set	0xFC3
  2782                           	global	_CCPR1
  2783  0000                     _CCPR1	set	0xFBE
  2784                           	global	_CCPR2
  2785  0000                     _CCPR2	set	0xFBB
  2786                           	global	_FSR0
  2787  0000                     _FSR0	set	0xFE9
  2788                           	global	_FSR1
  2789  0000                     _FSR1	set	0xFE1
  2790                           	global	_FSR2
  2791  0000                     _FSR2	set	0xFD9
  2792                           	global	_PROD
  2793  0000                     _PROD	set	0xFF3
  2794                           	global	_TMR0
  2795  0000                     _TMR0	set	0xFD6
  2796                           	global	_TMR1
  2797  0000                     _TMR1	set	0xFCE
  2798                           	global	_ADCON0
  2799  0000                     _ADCON0	set	0xFC2
  2800                           	global	_ADCON0bits
  2801  0000                     _ADCON0bits	set	0xFC2
  2802                           	global	_ADCON1
  2803  0000                     _ADCON1	set	0xFC1
  2804                           	global	_ADCON1bits
  2805  0000                     _ADCON1bits	set	0xFC1
  2806                           	global	_ADCON2
  2807  0000                     _ADCON2	set	0xFC0
  2808                           	global	_ADCON2bits
  2809  0000                     _ADCON2bits	set	0xFC0
  2810                           	global	_ADRESH
  2811  0000                     _ADRESH	set	0xFC4
  2812                           	global	_ADRESL
  2813  0000                     _ADRESL	set	0xFC3
  2814                           	global	_BAUDCON
  2815  0000                     _BAUDCON	set	0xFB8
  2816                           	global	_BAUDCONbits
  2817  0000                     _BAUDCONbits	set	0xFB8
  2818                           	global	_BAUDCTL
  2819  0000                     _BAUDCTL	set	0xFB8
  2820                           	global	_BAUDCTLbits
  2821  0000                     _BAUDCTLbits	set	0xFB8
  2822                           	global	_BSR
  2823  0000                     _BSR	set	0xFE0
  2824                           	global	_CCP1CON
  2825  0000                     _CCP1CON	set	0xFBD
  2826                           	global	_CCP1CONbits
  2827  0000                     _CCP1CONbits	set	0xFBD
  2828                           	global	_CCP2CON
  2829  0000                     _CCP2CON	set	0xFBA
  2830                           	global	_CCP2CONbits
  2831  0000                     _CCP2CONbits	set	0xFBA
  2832                           	global	_CCPR1H
  2833  0000                     _CCPR1H	set	0xFBF
  2834                           	global	_CCPR1L
  2835  0000                     _CCPR1L	set	0xFBE
  2836                           	global	_CCPR2H
  2837  0000                     _CCPR2H	set	0xFBC
  2838                           	global	_CCPR2L
  2839  0000                     _CCPR2L	set	0xFBB
  2840                           	global	_CMCON
  2841  0000                     _CMCON	set	0xFB4
  2842                           	global	_CMCONbits
  2843  0000                     _CMCONbits	set	0xFB4
  2844                           	global	_CVRCON
  2845  0000                     _CVRCON	set	0xFB5
  2846                           	global	_CVRCONbits
  2847  0000                     _CVRCONbits	set	0xFB5
  2848                           	global	_DDRA
  2849  0000                     _DDRA	set	0xF92
  2850                           	global	_DDRAbits
  2851  0000                     _DDRAbits	set	0xF92
  2852                           	global	_DDRB
  2853  0000                     _DDRB	set	0xF93
  2854                           	global	_DDRBbits
  2855  0000                     _DDRBbits	set	0xF93
  2856                           	global	_DDRC
  2857  0000                     _DDRC	set	0xF94
  2858                           	global	_DDRCbits
  2859  0000                     _DDRCbits	set	0xF94
  2860                           	global	_DDRD
  2861  0000                     _DDRD	set	0xF95
  2862                           	global	_DDRDbits
  2863  0000                     _DDRDbits	set	0xF95
  2864                           	global	_DDRE
  2865  0000                     _DDRE	set	0xF96
  2866                           	global	_DDREbits
  2867  0000                     _DDREbits	set	0xF96
  2868                           	global	_ECCP1AS
  2869  0000                     _ECCP1AS	set	0xFB6
  2870                           	global	_ECCP1ASbits
  2871  0000                     _ECCP1ASbits	set	0xFB6
  2872                           	global	_ECCP1CON
  2873  0000                     _ECCP1CON	set	0xFBD
  2874                           	global	_ECCP1CONbits
  2875  0000                     _ECCP1CONbits	set	0xFBD
  2876                           	global	_ECCP1DEL
  2877  0000                     _ECCP1DEL	set	0xFB7
  2878                           	global	_ECCP1DELbits
  2879  0000                     _ECCP1DELbits	set	0xFB7
  2880                           	global	_EECON1
  2881  0000                     _EECON1	set	0xFA6
  2882                           	global	_EECON1bits
  2883  0000                     _EECON1bits	set	0xFA6
  2884                           	global	_EECON2
  2885  0000                     _EECON2	set	0xFA7
  2886                           	global	_FSR0H
  2887  0000                     _FSR0H	set	0xFEA
  2888                           	global	_FSR0L
  2889  0000                     _FSR0L	set	0xFE9
  2890                           	global	_FSR1H
  2891  0000                     _FSR1H	set	0xFE2
  2892                           	global	_FSR1L
  2893  0000                     _FSR1L	set	0xFE1
  2894                           	global	_FSR2H
  2895  0000                     _FSR2H	set	0xFDA
  2896                           	global	_FSR2L
  2897  0000                     _FSR2L	set	0xFD9
  2898                           	global	_INDF0
  2899  0000                     _INDF0	set	0xFEF
  2900                           	global	_INDF1
  2901  0000                     _INDF1	set	0xFE7
  2902                           	global	_INDF2
  2903  0000                     _INDF2	set	0xFDF
  2904                           	global	_INTCON
  2905  0000                     _INTCON	set	0xFF2
  2906                           	global	_INTCON2
  2907  0000                     _INTCON2	set	0xFF1
  2908                           	global	_INTCON2bits
  2909  0000                     _INTCON2bits	set	0xFF1
  2910                           	global	_INTCON3
  2911  0000                     _INTCON3	set	0xFF0
  2912                           	global	_INTCON3bits
  2913  0000                     _INTCON3bits	set	0xFF0
  2914                           	global	_INTCONbits
  2915  0000                     _INTCONbits	set	0xFF2
  2916                           	global	_IPR1
  2917  0000                     _IPR1	set	0xF9F
  2918                           	global	_IPR1bits
  2919  0000                     _IPR1bits	set	0xF9F
  2920                           	global	_IPR2
  2921  0000                     _IPR2	set	0xFA2
  2922                           	global	_IPR2bits
  2923  0000                     _IPR2bits	set	0xFA2
  2924                           	global	_IPR3
  2925  0000                     _IPR3	set	0xFA5
  2926                           	global	_IPR3bits
  2927  0000                     _IPR3bits	set	0xFA5
  2928                           	global	_LATA
  2929  0000                     _LATA	set	0xF89
  2930                           	global	_LATAbits
  2931  0000                     _LATAbits	set	0xF89
  2932                           	global	_LATB
  2933  0000                     _LATB	set	0xF8A
  2934                           	global	_LATBbits
  2935  0000                     _LATBbits	set	0xF8A
  2936                           	global	_LATC
  2937  0000                     _LATC	set	0xF8B
  2938                           	global	_LATCbits
  2939  0000                     _LATCbits	set	0xF8B
  2940                           	global	_LATD
  2941  0000                     _LATD	set	0xF8C
  2942                           	global	_LATDbits
  2943  0000                     _LATDbits	set	0xF8C
  2944                           	global	_LATE
  2945  0000                     _LATE	set	0xF8D
  2946                           	global	_LATEbits
  2947  0000                     _LATEbits	set	0xF8D
  2948                           	global	_MEMCON
  2949  0000                     _MEMCON	set	0xFCB
  2950                           	global	_OSCCON
  2951  0000                     _OSCCON	set	0xFD3
  2952                           	global	_OSCCONbits
  2953  0000                     _OSCCONbits	set	0xFD3
  2954                           	global	_OSCTUNE
  2955  0000                     _OSCTUNE	set	0xF9B
  2956                           	global	_OSCTUNEbits
  2957  0000                     _OSCTUNEbits	set	0xF9B
  2958                           	global	_PCL
  2959  0000                     _PCL	set	0xFF9
  2960                           	global	_PCLATH
  2961  0000                     _PCLATH	set	0xFFA
  2962                           	global	_PCLATU
  2963  0000                     _PCLATU	set	0xFFB
  2964                           	global	_PIE1
  2965  0000                     _PIE1	set	0xF9D
  2966                           	global	_PIE1bits
  2967  0000                     _PIE1bits	set	0xF9D
  2968                           	global	_PIE2
  2969  0000                     _PIE2	set	0xFA0
  2970                           	global	_PIE2bits
  2971  0000                     _PIE2bits	set	0xFA0
  2972                           	global	_PIE3
  2973  0000                     _PIE3	set	0xFA3
  2974                           	global	_PIE3bits
  2975  0000                     _PIE3bits	set	0xFA3
  2976                           	global	_PIR1
  2977  0000                     _PIR1	set	0xF9E
  2978                           	global	_PIR1bits
  2979  0000                     _PIR1bits	set	0xF9E
  2980                           	global	_PIR2
  2981  0000                     _PIR2	set	0xFA1
  2982                           	global	_PIR2bits
  2983  0000                     _PIR2bits	set	0xFA1
  2984                           	global	_PIR3
  2985  0000                     _PIR3	set	0xFA4
  2986                           	global	_PIR3bits
  2987  0000                     _PIR3bits	set	0xFA4
  2988                           	global	_PLUSW0
  2989  0000                     _PLUSW0	set	0xFEB
  2990                           	global	_PLUSW1
  2991  0000                     _PLUSW1	set	0xFE3
  2992                           	global	_PLUSW2
  2993  0000                     _PLUSW2	set	0xFDB
  2994                           	global	_PORTA
  2995  0000                     _PORTA	set	0xF80
  2996                           	global	_PORTAbits
  2997  0000                     _PORTAbits	set	0xF80
  2998                           	global	_PORTB
  2999  0000                     _PORTB	set	0xF81
  3000                           	global	_PORTBbits
  3001  0000                     _PORTBbits	set	0xF81
  3002                           	global	_PORTC
  3003  0000                     _PORTC	set	0xF82
  3004                           	global	_PORTCbits
  3005  0000                     _PORTCbits	set	0xF82
  3006                           	global	_PORTD
  3007  0000                     _PORTD	set	0xF83
  3008                           	global	_PORTDbits
  3009  0000                     _PORTDbits	set	0xF83
  3010                           	global	_PORTE
  3011  0000                     _PORTE	set	0xF84
  3012                           	global	_PORTEbits
  3013  0000                     _PORTEbits	set	0xF84
  3014                           	global	_POSTDEC0
  3015  0000                     _POSTDEC0	set	0xFED
  3016                           	global	_POSTDEC1
  3017  0000                     _POSTDEC1	set	0xFE5
  3018                           	global	_POSTDEC2
  3019  0000                     _POSTDEC2	set	0xFDD
  3020                           	global	_POSTINC0
  3021  0000                     _POSTINC0	set	0xFEE
  3022                           	global	_POSTINC1
  3023  0000                     _POSTINC1	set	0xFE6
  3024                           	global	_POSTINC2
  3025  0000                     _POSTINC2	set	0xFDE
  3026                           	global	_PR2
  3027  0000                     _PR2	set	0xFCB
  3028                           	global	_PREINC0
  3029  0000                     _PREINC0	set	0xFEC
  3030                           	global	_PREINC1
  3031  0000                     _PREINC1	set	0xFE4
  3032                           	global	_PREINC2
  3033  0000                     _PREINC2	set	0xFDC
  3034                           	global	_PRODH
  3035  0000                     _PRODH	set	0xFF4
  3036                           	global	_PRODL
  3037  0000                     _PRODL	set	0xFF3
  3038                           	global	_PWM1CON
  3039  0000                     _PWM1CON	set	0xFB7
  3040                           	global	_PWM1CONbits
  3041  0000                     _PWM1CONbits	set	0xFB7
  3042                           	global	_RCON
  3043  0000                     _RCON	set	0xFD0
  3044                           	global	_RCONbits
  3045  0000                     _RCONbits	set	0xFD0
  3046                           	global	_RCREG
  3047  0000                     _RCREG	set	0xFAE
  3048                           	global	_RCREG1
  3049  0000                     _RCREG1	set	0xFAE
  3050                           	global	_RCSTA
  3051  0000                     _RCSTA	set	0xFAB
  3052                           	global	_RCSTA1
  3053  0000                     _RCSTA1	set	0xFAB
  3054                           	global	_RCSTA1bits
  3055  0000                     _RCSTA1bits	set	0xFAB
  3056                           	global	_RCSTAbits
  3057  0000                     _RCSTAbits	set	0xFAB
  3058                           	global	_SPBRG
  3059  0000                     _SPBRG	set	0xFAF
  3060                           	global	_SPBRG1
  3061  0000                     _SPBRG1	set	0xFAF
  3062                           	global	_SPBRGH
  3063  0000                     _SPBRGH	set	0xFB0
  3064                           	global	_SSP1ADD
  3065  0000                     _SSP1ADD	set	0xFC8
  3066                           	global	_SSP1ADDbits
  3067  0000                     _SSP1ADDbits	set	0xFC8
  3068                           	global	_SSP1BUF
  3069  0000                     _SSP1BUF	set	0xFC9
  3070                           	global	_SSP1CON1bits
  3071  0000                     _SSP1CON1bits	set	0xFC6
  3072                           	global	_SSP1CON2
  3073  0000                     _SSP1CON2	set	0xFC5
  3074                           	global	_SSP1CON2bits
  3075  0000                     _SSP1CON2bits	set	0xFC5
  3076                           	global	_SSP1STAT
  3077  0000                     _SSP1STAT	set	0xFC7
  3078                           	global	_SSP1STATbits
  3079  0000                     _SSP1STATbits	set	0xFC7
  3080                           	global	_SSP2ADD
  3081  0000                     _SSP2ADD	set	0xF88
  3082                           	global	_SSP2ADDbits
  3083  0000                     _SSP2ADDbits	set	0xF88
  3084                           	global	_SSP2BUF
  3085  0000                     _SSP2BUF	set	0xF8E
  3086                           	global	_SSP2CON1
  3087  0000                     _SSP2CON1	set	0xF86
  3088                           	global	_SSP2CON1bits
  3089  0000                     _SSP2CON1bits	set	0xF86
  3090                           	global	_SSP2CON2
  3091  0000                     _SSP2CON2	set	0xF85
  3092                           	global	_SSP2CON2bits
  3093  0000                     _SSP2CON2bits	set	0xF85
  3094                           	global	_SSP2STAT
  3095  0000                     _SSP2STAT	set	0xF87
  3096                           	global	_SSP2STATbits
  3097  0000                     _SSP2STATbits	set	0xF87
  3098                           	global	_SSPADD
  3099  0000                     _SSPADD	set	0xFC8
  3100                           	global	_SSPADDbits
  3101  0000                     _SSPADDbits	set	0xFC8
  3102                           	global	_SSPBUF
  3103  0000                     _SSPBUF	set	0xFC9
  3104                           	global	_SSPCON1
  3105  0000                     _SSPCON1	set	0xFC6
  3106                           	global	_SSPCON1bits
  3107  0000                     _SSPCON1bits	set	0xFC6
  3108                           	global	_SSPCON2
  3109  0000                     _SSPCON2	set	0xFC5
  3110                           	global	_SSPCON2bits
  3111  0000                     _SSPCON2bits	set	0xFC5
  3112                           	global	_SSPSTAT
  3113  0000                     _SSPSTAT	set	0xFC7
  3114                           	global	_SSPSTATbits
  3115  0000                     _SSPSTATbits	set	0xFC7
  3116                           	global	_STATUS
  3117  0000                     _STATUS	set	0xFD8
  3118                           	global	_STATUSbits
  3119  0000                     _STATUSbits	set	0xFD8
  3120                           	global	_STKPTR
  3121  0000                     _STKPTR	set	0xFFC
  3122                           	global	_STKPTRbits
  3123  0000                     _STKPTRbits	set	0xFFC
  3124                           	global	_T0CON
  3125  0000                     _T0CON	set	0xFD5
  3126                           	global	_T0CONbits
  3127  0000                     _T0CONbits	set	0xFD5
  3128                           	global	_T1CON
  3129  0000                     _T1CON	set	0xFCD
  3130                           	global	_T1CONbits
  3131  0000                     _T1CONbits	set	0xFCD
  3132                           	global	_T2CON
  3133  0000                     _T2CON	set	0xFCA
  3134                           	global	_T2CONbits
  3135  0000                     _T2CONbits	set	0xFCA
  3136                           	global	_TABLAT
  3137  0000                     _TABLAT	set	0xFF5
  3138                           	global	_TBLPTRH
  3139  0000                     _TBLPTRH	set	0xFF7
  3140                           	global	_TBLPTRL
  3141  0000                     _TBLPTRL	set	0xFF6
  3142                           	global	_TBLPTRU
  3143  0000                     _TBLPTRU	set	0xFF8
  3144                           	global	_TMR0H
  3145  0000                     _TMR0H	set	0xFD7
  3146                           	global	_TMR0L
  3147  0000                     _TMR0L	set	0xFD6
  3148                           	global	_TMR1H
  3149  0000                     _TMR1H	set	0xFCF
  3150                           	global	_TMR1L
  3151  0000                     _TMR1L	set	0xFCE
  3152                           	global	_TMR2
  3153  0000                     _TMR2	set	0xFCC
  3154                           	global	_TOSH
  3155  0000                     _TOSH	set	0xFFE
  3156                           	global	_TOSL
  3157  0000                     _TOSL	set	0xFFD
  3158                           	global	_TOSU
  3159  0000                     _TOSU	set	0xFFF
  3160                           	global	_TRISA
  3161  0000                     _TRISA	set	0xF92
  3162                           	global	_TRISAbits
  3163  0000                     _TRISAbits	set	0xF92
  3164                           	global	_TRISB
  3165  0000                     _TRISB	set	0xF93
  3166                           	global	_TRISBbits
  3167  0000                     _TRISBbits	set	0xF93
  3168                           	global	_TRISC
  3169  0000                     _TRISC	set	0xF94
  3170                           	global	_TRISCbits
  3171  0000                     _TRISCbits	set	0xF94
  3172                           	global	_TRISD
  3173  0000                     _TRISD	set	0xF95
  3174                           	global	_TRISDbits
  3175  0000                     _TRISDbits	set	0xF95
  3176                           	global	_TRISE
  3177  0000                     _TRISE	set	0xF96
  3178                           	global	_TRISEbits
  3179  0000                     _TRISEbits	set	0xF96
  3180                           	global	_TXREG
  3181  0000                     _TXREG	set	0xFAD
  3182                           	global	_TXREG1
  3183  0000                     _TXREG1	set	0xFAD
  3184                           	global	_TXSTA
  3185  0000                     _TXSTA	set	0xFAC
  3186                           	global	_TXSTA1
  3187  0000                     _TXSTA1	set	0xFAC
  3188                           	global	_TXSTA1bits
  3189  0000                     _TXSTA1bits	set	0xFAC
  3190                           	global	_TXSTAbits
  3191  0000                     _TXSTAbits	set	0xFAC
  3192                           	global	_WDTCON
  3193  0000                     _WDTCON	set	0xFD1
  3194                           	global	_WDTCONbits
  3195  0000                     _WDTCONbits	set	0xFD1
  3196                           	global	_WREG
  3197  0000                     _WREG	set	0xFE8
  3198                           	global	_ABDEN
  3199  0000                     _ABDEN	set	0x7DC0
  3200                           	global	_ABDOVF
  3201  0000                     _ABDOVF	set	0x7DC7
  3202                           	global	_ACKDT
  3203  0000                     _ACKDT	set	0x7E2D
  3204                           	global	_ACKDT1
  3205  0000                     _ACKDT1	set	0x7E2D
  3206                           	global	_ACKDT2
  3207  0000                     _ACKDT2	set	0x7C2D
  3208                           	global	_ACKEN
  3209  0000                     _ACKEN	set	0x7E2C
  3210                           	global	_ACKEN1
  3211  0000                     _ACKEN1	set	0x7E2C
  3212                           	global	_ACKEN2
  3213  0000                     _ACKEN2	set	0x7C2C
  3214                           	global	_ACKSTAT
  3215  0000                     _ACKSTAT	set	0x7E2E
  3216                           	global	_ACKSTAT1
  3217  0000                     _ACKSTAT1	set	0x7E2E
  3218                           	global	_ACKSTAT2
  3219  0000                     _ACKSTAT2	set	0x7C2E
  3220                           	global	_ACQT0
  3221  0000                     _ACQT0	set	0x7E03
  3222                           	global	_ACQT1
  3223  0000                     _ACQT1	set	0x7E04
  3224                           	global	_ACQT2
  3225  0000                     _ACQT2	set	0x7E05
  3226                           	global	_ADCAL
  3227  0000                     _ADCAL	set	0x7E17
  3228                           	global	_ADCS0
  3229  0000                     _ADCS0	set	0x7E00
  3230                           	global	_ADCS1
  3231  0000                     _ADCS1	set	0x7E01
  3232                           	global	_ADCS2
  3233  0000                     _ADCS2	set	0x7E02
  3234                           	global	_ADDEN
  3235  0000                     _ADDEN	set	0x7D5B
  3236                           	global	_ADDEN1
  3237  0000                     _ADDEN1	set	0x7D5B
  3238                           	global	_ADEN
  3239  0000                     _ADEN	set	0x7D5B
  3240                           	global	_ADFM
  3241  0000                     _ADFM	set	0x7E07
  3242                           	global	_ADIE
  3243  0000                     _ADIE	set	0x7CEE
  3244                           	global	_ADIF
  3245  0000                     _ADIF	set	0x7CF6
  3246                           	global	_ADIP
  3247  0000                     _ADIP	set	0x7CFE
  3248                           	global	_ADMSK1
  3249  0000                     _ADMSK1	set	0x7E29
  3250                           	global	_ADMSK11
  3251  0000                     _ADMSK11	set	0x7E29
  3252                           	global	_ADMSK12
  3253  0000                     _ADMSK12	set	0x7C29
  3254                           	global	_ADMSK2
  3255  0000                     _ADMSK2	set	0x7E2A
  3256                           	global	_ADMSK21
  3257  0000                     _ADMSK21	set	0x7E2A
  3258                           	global	_ADMSK22
  3259  0000                     _ADMSK22	set	0x7C2A
  3260                           	global	_ADMSK3
  3261  0000                     _ADMSK3	set	0x7E2B
  3262                           	global	_ADMSK31
  3263  0000                     _ADMSK31	set	0x7E2B
  3264                           	global	_ADMSK32
  3265  0000                     _ADMSK32	set	0x7C2B
  3266                           	global	_ADMSK4
  3267  0000                     _ADMSK4	set	0x7E2C
  3268                           	global	_ADMSK41
  3269  0000                     _ADMSK41	set	0x7E2C
  3270                           	global	_ADMSK42
  3271  0000                     _ADMSK42	set	0x7C2C
  3272                           	global	_ADMSK5
  3273  0000                     _ADMSK5	set	0x7E2D
  3274                           	global	_ADMSK51
  3275  0000                     _ADMSK51	set	0x7E2D
  3276                           	global	_ADMSK52
  3277  0000                     _ADMSK52	set	0x7C2D
  3278                           	global	_ADON
  3279  0000                     _ADON	set	0x7E10
  3280                           	global	_AN0
  3281  0000                     _AN0	set	0x7C00
  3282                           	global	_AN1
  3283  0000                     _AN1	set	0x7C01
  3284                           	global	_AN10
  3285  0000                     _AN10	set	0x7C09
  3286                           	global	_AN11
  3287  0000                     _AN11	set	0x7C0C
  3288                           	global	_AN12
  3289  0000                     _AN12	set	0x7C08
  3290                           	global	_AN2
  3291  0000                     _AN2	set	0x7C02
  3292                           	global	_AN3
  3293  0000                     _AN3	set	0x7C03
  3294                           	global	_AN4
  3295  0000                     _AN4	set	0x7C05
  3296                           	global	_AN5
  3297  0000                     _AN5	set	0x7C20
  3298                           	global	_AN6
  3299  0000                     _AN6	set	0x7C21
  3300                           	global	_AN7
  3301  0000                     _AN7	set	0x7C22
  3302                           	global	_AN8
  3303  0000                     _AN8	set	0x7C0A
  3304                           	global	_AN9
  3305  0000                     _AN9	set	0x7C0B
  3306                           	global	_BCL1IE
  3307  0000                     _BCL1IE	set	0x7D03
  3308                           	global	_BCL1IF
  3309  0000                     _BCL1IF	set	0x7D0B
  3310                           	global	_BCL1IP
  3311  0000                     _BCL1IP	set	0x7D13
  3312                           	global	_BCL2IE
  3313  0000                     _BCL2IE	set	0x7D1E
  3314                           	global	_BCL2IF
  3315  0000                     _BCL2IF	set	0x7D26
  3316                           	global	_BCL2IP
  3317  0000                     _BCL2IP	set	0x7D2E
  3318                           	global	_BCLIE
  3319  0000                     _BCLIE	set	0x7D03
  3320                           	global	_BCLIF
  3321  0000                     _BCLIF	set	0x7D0B
  3322                           	global	_BCLIP
  3323  0000                     _BCLIP	set	0x7D13
  3324                           	global	_BF
  3325  0000                     _BF	set	0x7E38
  3326                           	global	_BF1
  3327  0000                     _BF1	set	0x7E38
  3328                           	global	_BF2
  3329  0000                     _BF2	set	0x7C38
  3330                           	global	_BOR
  3331  0000                     _BOR	set	0x7E80
  3332                           	global	_BRG16
  3333  0000                     _BRG16	set	0x7DC3
  3334                           	global	_BRGH
  3335  0000                     _BRGH	set	0x7D62
  3336                           	global	_BRGH1
  3337  0000                     _BRGH1	set	0x7D62
  3338                           	global	_C1INV
  3339  0000                     _C1INV	set	0x7DA4
  3340                           	global	_C1OUT
  3341  0000                     _C1OUT	set	0x7DA6
  3342                           	global	_C2INV
  3343  0000                     _C2INV	set	0x7DA5
  3344                           	global	_C2OUT
  3345  0000                     _C2OUT	set	0x7DA7
  3346                           	global	_CARRY
  3347  0000                     _CARRY	set	0x7EC0
  3348                           	global	_CCP1
  3349  0000                     _CCP1	set	0x7C12
  3350                           	global	_CCP10
  3351  0000                     _CCP10	set	0x7C22
  3352                           	global	_CCP1IE
  3353  0000                     _CCP1IE	set	0x7CEA
  3354                           	global	_CCP1IF
  3355  0000                     _CCP1IF	set	0x7CF2
  3356                           	global	_CCP1IP
  3357  0000                     _CCP1IP	set	0x7CFA
  3358                           	global	_CCP1M0
  3359  0000                     _CCP1M0	set	0x7DE8
  3360                           	global	_CCP1M1
  3361  0000                     _CCP1M1	set	0x7DE9
  3362                           	global	_CCP1M2
  3363  0000                     _CCP1M2	set	0x7DEA
  3364                           	global	_CCP1M3
  3365  0000                     _CCP1M3	set	0x7DEB
  3366                           	global	_CCP1X
  3367  0000                     _CCP1X	set	0x7DED
  3368                           	global	_CCP1Y
  3369  0000                     _CCP1Y	set	0x7DEC
  3370                           	global	_CCP2E
  3371  0000                     _CCP2E	set	0x7C27
  3372                           	global	_CCP2IE
  3373  0000                     _CCP2IE	set	0x7D00
  3374                           	global	_CCP2IF
  3375  0000                     _CCP2IF	set	0x7D08
  3376                           	global	_CCP2IP
  3377  0000                     _CCP2IP	set	0x7D10
  3378                           	global	_CCP2M0
  3379  0000                     _CCP2M0	set	0x7DD0
  3380                           	global	_CCP2M1
  3381  0000                     _CCP2M1	set	0x7DD1
  3382                           	global	_CCP2M2
  3383  0000                     _CCP2M2	set	0x7DD2
  3384                           	global	_CCP2M3
  3385  0000                     _CCP2M3	set	0x7DD3
  3386                           	global	_CCP2X
  3387  0000                     _CCP2X	set	0x7DD5
  3388                           	global	_CCP2Y
  3389  0000                     _CCP2Y	set	0x7DD4
  3390                           	global	_CCP2_PA2
  3391  0000                     _CCP2_PA2	set	0x7C0B
  3392                           	global	_CCP6E
  3393  0000                     _CCP6E	set	0x7C26
  3394                           	global	_CCP7E
  3395  0000                     _CCP7E	set	0x7C25
  3396                           	global	_CCP8E
  3397  0000                     _CCP8E	set	0x7C24
  3398                           	global	_CCP9E
  3399  0000                     _CCP9E	set	0x7C23
  3400                           	global	_CHS0
  3401  0000                     _CHS0	set	0x7E12
  3402                           	global	_CHS1
  3403  0000                     _CHS1	set	0x7E13
  3404                           	global	_CHS2
  3405  0000                     _CHS2	set	0x7E14
  3406                           	global	_CHS3
  3407  0000                     _CHS3	set	0x7E15
  3408                           	global	_CHSN3
  3409  0000                     _CHSN3	set	0x7E0B
  3410                           	global	_CIS
  3411  0000                     _CIS	set	0x7DA3
  3412                           	global	_CK
  3413  0000                     _CK	set	0x7C16
  3414                           	global	_CKE
  3415  0000                     _CKE	set	0x7E3E
  3416                           	global	_CKE1
  3417  0000                     _CKE1	set	0x7E3E
  3418                           	global	_CKE2
  3419  0000                     _CKE2	set	0x7C3E
  3420                           	global	_CKP
  3421  0000                     _CKP	set	0x7E34
  3422                           	global	_CKP1
  3423  0000                     _CKP1	set	0x7E34
  3424                           	global	_CKP2
  3425  0000                     _CKP2	set	0x7C34
  3426                           	global	_CM0
  3427  0000                     _CM0	set	0x7DA0
  3428                           	global	_CM1
  3429  0000                     _CM1	set	0x7DA1
  3430                           	global	_CM2
  3431  0000                     _CM2	set	0x7DA2
  3432                           	global	_CMEN0
  3433  0000                     _CMEN0	set	0x7DA0
  3434                           	global	_CMEN1
  3435  0000                     _CMEN1	set	0x7DA1
  3436                           	global	_CMEN2
  3437  0000                     _CMEN2	set	0x7DA2
  3438                           	global	_CMIE
  3439  0000                     _CMIE	set	0x7D06
  3440                           	global	_CMIF
  3441  0000                     _CMIF	set	0x7D0E
  3442                           	global	_CMIP
  3443  0000                     _CMIP	set	0x7D16
  3444                           	global	_CREN
  3445  0000                     _CREN	set	0x7D5C
  3446                           	global	_CREN1
  3447  0000                     _CREN1	set	0x7D5C
  3448                           	global	_CS
  3449  0000                     _CS	set	0x7C22
  3450                           	global	_CSRC
  3451  0000                     _CSRC	set	0x7D67
  3452                           	global	_CSRC1
  3453  0000                     _CSRC1	set	0x7D67
  3454                           	global	_CVR0
  3455  0000                     _CVR0	set	0x7DA8
  3456                           	global	_CVR1
  3457  0000                     _CVR1	set	0x7DA9
  3458                           	global	_CVR2
  3459  0000                     _CVR2	set	0x7DAA
  3460                           	global	_CVR3
  3461  0000                     _CVR3	set	0x7DAB
  3462                           	global	_CVREF
  3463  0000                     _CVREF	set	0x7C02
  3464                           	global	_CVREN
  3465  0000                     _CVREN	set	0x7DAF
  3466                           	global	_CVROE
  3467  0000                     _CVROE	set	0x7DAE
  3468                           	global	_CVROEN
  3469  0000                     _CVROEN	set	0x7DAE
  3470                           	global	_CVRR
  3471  0000                     _CVRR	set	0x7DAD
  3472                           	global	_CVRSS
  3473  0000                     _CVRSS	set	0x7DAC
  3474                           	global	_DA
  3475  0000                     _DA	set	0x7E3D
  3476                           	global	_DA1
  3477  0000                     _DA1	set	0x7E3D
  3478                           	global	_DA2
  3479  0000                     _DA2	set	0x7C3D
  3480                           	global	_DATA_ADDRESS2
  3481  0000                     _DATA_ADDRESS2	set	0x7C3D
  3482                           	global	_DC
  3483  0000                     _DC	set	0x7EC1
  3484                           	global	_DC1B0
  3485  0000                     _DC1B0	set	0x7DEC
  3486                           	global	_DC1B1
  3487  0000                     _DC1B1	set	0x7DED
  3488                           	global	_DC2B0
  3489  0000                     _DC2B0	set	0x7DD4
  3490                           	global	_DC2B1
  3491  0000                     _DC2B1	set	0x7DD5
  3492                           	global	_DONE
  3493  0000                     _DONE	set	0x7E11
  3494                           	global	_DT
  3495  0000                     _DT	set	0x7C17
  3496                           	global	_D_A2
  3497  0000                     _D_A2	set	0x7C3D
  3498                           	global	_D_nA2
  3499  0000                     _D_nA2	set	0x7C3D
  3500                           	global	_ECCPAS0
  3501  0000                     _ECCPAS0	set	0x7DB4
  3502                           	global	_ECCPAS1
  3503  0000                     _ECCPAS1	set	0x7DB5
  3504                           	global	_ECCPAS2
  3505  0000                     _ECCPAS2	set	0x7DB6
  3506                           	global	_ECCPASE
  3507  0000                     _ECCPASE	set	0x7DB7
  3508                           	global	_FERR
  3509  0000                     _FERR	set	0x7D5A
  3510                           	global	_FERR1
  3511  0000                     _FERR1	set	0x7D5A
  3512                           	global	_FLT0
  3513  0000                     _FLT0	set	0x7C08
  3514                           	global	_FREE
  3515  0000                     _FREE	set	0x7D34
  3516                           	global	_GCEN
  3517  0000                     _GCEN	set	0x7E2F
  3518                           	global	_GCEN1
  3519  0000                     _GCEN1	set	0x7E2F
  3520                           	global	_GCEN2
  3521  0000                     _GCEN2	set	0x7C2F
  3522                           	global	_GIE
  3523  0000                     _GIE	set	0x7F97
  3524                           	global	_GIEH
  3525  0000                     _GIEH	set	0x7F97
  3526                           	global	_GIEL
  3527  0000                     _GIEL	set	0x7F96
  3528                           	global	_GIE_GIEH
  3529  0000                     _GIE_GIEH	set	0x7F97
  3530                           	global	_GO
  3531  0000                     _GO	set	0x7E11
  3532                           	global	_GODONE
  3533  0000                     _GODONE	set	0x7E11
  3534                           	global	_GO_DONE
  3535  0000                     _GO_DONE	set	0x7E11
  3536                           	global	_GO_NOT_DONE
  3537  0000                     _GO_NOT_DONE	set	0x7E11
  3538                           	global	_GO_nDONE
  3539  0000                     _GO_nDONE	set	0x7E11
  3540                           	global	_I2C_DAT2
  3541  0000                     _I2C_DAT2	set	0x7C3D
  3542                           	global	_I2C_READ2
  3543  0000                     _I2C_READ2	set	0x7C3A
  3544                           	global	_I2C_START2
  3545  0000                     _I2C_START2	set	0x7C3B
  3546                           	global	_I2C_STOP2
  3547  0000                     _I2C_STOP2	set	0x7C3C
  3548                           	global	_IBF
  3549  0000                     _IBF	set	0x7CB7
  3550                           	global	_IBOV
  3551  0000                     _IBOV	set	0x7CB5
  3552                           	global	_IDLEN
  3553  0000                     _IDLEN	set	0x7E9F
  3554                           	global	_INT0
  3555  0000                     _INT0	set	0x7C08
  3556                           	global	_INT0E
  3557  0000                     _INT0E	set	0x7F94
  3558                           	global	_INT0F
  3559  0000                     _INT0F	set	0x7F91
  3560                           	global	_INT0IE
  3561  0000                     _INT0IE	set	0x7F94
  3562                           	global	_INT0IF
  3563  0000                     _INT0IF	set	0x7F91
  3564                           	global	_INT1
  3565  0000                     _INT1	set	0x7C09
  3566                           	global	_INT1E
  3567  0000                     _INT1E	set	0x7F83
  3568                           	global	_INT1F
  3569  0000                     _INT1F	set	0x7F80
  3570                           	global	_INT1IE
  3571  0000                     _INT1IE	set	0x7F83
  3572                           	global	_INT1IF
  3573  0000                     _INT1IF	set	0x7F80
  3574                           	global	_INT1IP
  3575  0000                     _INT1IP	set	0x7F86
  3576                           	global	_INT1P
  3577  0000                     _INT1P	set	0x7F86
  3578                           	global	_INT2
  3579  0000                     _INT2	set	0x7C0A
  3580                           	global	_INT2E
  3581  0000                     _INT2E	set	0x7F84
  3582                           	global	_INT2F
  3583  0000                     _INT2F	set	0x7F81
  3584                           	global	_INT2IE
  3585  0000                     _INT2IE	set	0x7F84
  3586                           	global	_INT2IF
  3587  0000                     _INT2IF	set	0x7F81
  3588                           	global	_INT2IP
  3589  0000                     _INT2IP	set	0x7F87
  3590                           	global	_INT2P
  3591  0000                     _INT2P	set	0x7F87
  3592                           	global	_INTEDG0
  3593  0000                     _INTEDG0	set	0x7F8E
  3594                           	global	_INTEDG1
  3595  0000                     _INTEDG1	set	0x7F8D
  3596                           	global	_INTEDG2
  3597  0000                     _INTEDG2	set	0x7F8C
  3598                           	global	_IPEN
  3599  0000                     _IPEN	set	0x7E87
  3600                           	global	_KBI0
  3601  0000                     _KBI0	set	0x7C0C
  3602                           	global	_KBI1
  3603  0000                     _KBI1	set	0x7C0D
  3604                           	global	_KBI2
  3605  0000                     _KBI2	set	0x7C0E
  3606                           	global	_KBI3
  3607  0000                     _KBI3	set	0x7C0F
  3608                           	global	_LA0
  3609  0000                     _LA0	set	0x7C48
  3610                           	global	_LA1
  3611  0000                     _LA1	set	0x7C49
  3612                           	global	_LA2
  3613  0000                     _LA2	set	0x7C4A
  3614                           	global	_LA3
  3615  0000                     _LA3	set	0x7C4B
  3616                           	global	_LA4
  3617  0000                     _LA4	set	0x7C4C
  3618                           	global	_LA5
  3619  0000                     _LA5	set	0x7C4D
  3620                           	global	_LA6
  3621  0000                     _LA6	set	0x7C4E
  3622                           	global	_LA7
  3623  0000                     _LA7	set	0x7C4F
  3624                           	global	_LATA0
  3625  0000                     _LATA0	set	0x7C48
  3626                           	global	_LATA1
  3627  0000                     _LATA1	set	0x7C49
  3628                           	global	_LATA2
  3629  0000                     _LATA2	set	0x7C4A
  3630                           	global	_LATA3
  3631  0000                     _LATA3	set	0x7C4B
  3632                           	global	_LATA5
  3633  0000                     _LATA5	set	0x7C4D
  3634                           	global	_LATA7
  3635  0000                     _LATA7	set	0x7C4F
  3636                           	global	_LATB0
  3637  0000                     _LATB0	set	0x7C50
  3638                           	global	_LATB1
  3639  0000                     _LATB1	set	0x7C51
  3640                           	global	_LATB2
  3641  0000                     _LATB2	set	0x7C52
  3642                           	global	_LATB3
  3643  0000                     _LATB3	set	0x7C53
  3644                           	global	_LATB4
  3645  0000                     _LATB4	set	0x7C54
  3646                           	global	_LATB5
  3647  0000                     _LATB5	set	0x7C55
  3648                           	global	_LATB6
  3649  0000                     _LATB6	set	0x7C56
  3650                           	global	_LATB7
  3651  0000                     _LATB7	set	0x7C57
  3652                           	global	_LATC0
  3653  0000                     _LATC0	set	0x7C58
  3654                           	global	_LATC1
  3655  0000                     _LATC1	set	0x7C59
  3656                           	global	_LATC2
  3657  0000                     _LATC2	set	0x7C5A
  3658                           	global	_LATC3
  3659  0000                     _LATC3	set	0x7C5B
  3660                           	global	_LATC4
  3661  0000                     _LATC4	set	0x7C5C
  3662                           	global	_LATC5
  3663  0000                     _LATC5	set	0x7C5D
  3664                           	global	_LATC6
  3665  0000                     _LATC6	set	0x7C5E
  3666                           	global	_LATC7
  3667  0000                     _LATC7	set	0x7C5F
  3668                           	global	_LATD0
  3669  0000                     _LATD0	set	0x7C60
  3670                           	global	_LATD1
  3671  0000                     _LATD1	set	0x7C61
  3672                           	global	_LATD2
  3673  0000                     _LATD2	set	0x7C62
  3674                           	global	_LATD3
  3675  0000                     _LATD3	set	0x7C63
  3676                           	global	_LATD4
  3677  0000                     _LATD4	set	0x7C64
  3678                           	global	_LATD5
  3679  0000                     _LATD5	set	0x7C65
  3680                           	global	_LATD6
  3681  0000                     _LATD6	set	0x7C66
  3682                           	global	_LATD7
  3683  0000                     _LATD7	set	0x7C67
  3684                           	global	_LATE0
  3685  0000                     _LATE0	set	0x7C68
  3686                           	global	_LATE1
  3687  0000                     _LATE1	set	0x7C69
  3688                           	global	_LATE2
  3689  0000                     _LATE2	set	0x7C6A
  3690                           	global	_LB0
  3691  0000                     _LB0	set	0x7C50
  3692                           	global	_LB1
  3693  0000                     _LB1	set	0x7C51
  3694                           	global	_LB2
  3695  0000                     _LB2	set	0x7C52
  3696                           	global	_LB3
  3697  0000                     _LB3	set	0x7C53
  3698                           	global	_LB4
  3699  0000                     _LB4	set	0x7C54
  3700                           	global	_LB5
  3701  0000                     _LB5	set	0x7C55
  3702                           	global	_LB6
  3703  0000                     _LB6	set	0x7C56
  3704                           	global	_LB7
  3705  0000                     _LB7	set	0x7C57
  3706                           	global	_LC0
  3707  0000                     _LC0	set	0x7C58
  3708                           	global	_LC1
  3709  0000                     _LC1	set	0x7C59
  3710                           	global	_LC2
  3711  0000                     _LC2	set	0x7C5A
  3712                           	global	_LC3
  3713  0000                     _LC3	set	0x7C5B
  3714                           	global	_LC4
  3715  0000                     _LC4	set	0x7C5C
  3716                           	global	_LC5
  3717  0000                     _LC5	set	0x7C5D
  3718                           	global	_LC6
  3719  0000                     _LC6	set	0x7C5E
  3720                           	global	_LC7
  3721  0000                     _LC7	set	0x7C5F
  3722                           	global	_LD0
  3723  0000                     _LD0	set	0x7C60
  3724                           	global	_LD1
  3725  0000                     _LD1	set	0x7C61
  3726                           	global	_LD2
  3727  0000                     _LD2	set	0x7C62
  3728                           	global	_LD3
  3729  0000                     _LD3	set	0x7C63
  3730                           	global	_LD4
  3731  0000                     _LD4	set	0x7C64
  3732                           	global	_LD5
  3733  0000                     _LD5	set	0x7C65
  3734                           	global	_LD6
  3735  0000                     _LD6	set	0x7C66
  3736                           	global	_LD7
  3737  0000                     _LD7	set	0x7C67
  3738                           	global	_LE0
  3739  0000                     _LE0	set	0x7C68
  3740                           	global	_LE1
  3741  0000                     _LE1	set	0x7C69
  3742                           	global	_LE2
  3743  0000                     _LE2	set	0x7C6A
  3744                           	global	_LE3
  3745  0000                     _LE3	set	0x7C6B
  3746                           	global	_LE4
  3747  0000                     _LE4	set	0x7C6C
  3748                           	global	_LE5
  3749  0000                     _LE5	set	0x7C6D
  3750                           	global	_LE6
  3751  0000                     _LE6	set	0x7C6E
  3752                           	global	_LE7
  3753  0000                     _LE7	set	0x7C6F
  3754                           	global	_LVDIN
  3755  0000                     _LVDIN	set	0x7C05
  3756                           	global	_MSK0
  3757  0000                     _MSK0	set	0x7E40
  3758                           	global	_MSK01
  3759  0000                     _MSK01	set	0x7E40
  3760                           	global	_MSK02
  3761  0000                     _MSK02	set	0x7C40
  3762                           	global	_MSK1
  3763  0000                     _MSK1	set	0x7E41
  3764                           	global	_MSK11
  3765  0000                     _MSK11	set	0x7E41
  3766                           	global	_MSK12
  3767  0000                     _MSK12	set	0x7C41
  3768                           	global	_MSK2
  3769  0000                     _MSK2	set	0x7E42
  3770                           	global	_MSK21
  3771  0000                     _MSK21	set	0x7E42
  3772                           	global	_MSK22
  3773  0000                     _MSK22	set	0x7C42
  3774                           	global	_MSK3
  3775  0000                     _MSK3	set	0x7E43
  3776                           	global	_MSK31
  3777  0000                     _MSK31	set	0x7E43
  3778                           	global	_MSK32
  3779  0000                     _MSK32	set	0x7C43
  3780                           	global	_MSK4
  3781  0000                     _MSK4	set	0x7E44
  3782                           	global	_MSK41
  3783  0000                     _MSK41	set	0x7E44
  3784                           	global	_MSK42
  3785  0000                     _MSK42	set	0x7C44
  3786                           	global	_MSK5
  3787  0000                     _MSK5	set	0x7E45
  3788                           	global	_MSK51
  3789  0000                     _MSK51	set	0x7E45
  3790                           	global	_MSK52
  3791  0000                     _MSK52	set	0x7C45
  3792                           	global	_MSK6
  3793  0000                     _MSK6	set	0x7E46
  3794                           	global	_MSK61
  3795  0000                     _MSK61	set	0x7E46
  3796                           	global	_MSK62
  3797  0000                     _MSK62	set	0x7C46
  3798                           	global	_MSK7
  3799  0000                     _MSK7	set	0x7E47
  3800                           	global	_MSK71
  3801  0000                     _MSK71	set	0x7E47
  3802                           	global	_MSK72
  3803  0000                     _MSK72	set	0x7C47
  3804                           	global	_NEGATIVE
  3805  0000                     _NEGATIVE	set	0x7EC4
  3806                           	global	_NOT_A
  3807  0000                     _NOT_A	set	0x7E3D
  3808                           	global	_NOT_BOR
  3809  0000                     _NOT_BOR	set	0x7E80
  3810                           	global	_NOT_CS
  3811  0000                     _NOT_CS	set	0x7C22
  3812                           	global	_NOT_DONE
  3813  0000                     _NOT_DONE	set	0x7E11
  3814                           	global	_NOT_PD
  3815  0000                     _NOT_PD	set	0x7E82
  3816                           	global	_NOT_POR
  3817  0000                     _NOT_POR	set	0x7E81
  3818                           	global	_NOT_RBPU
  3819  0000                     _NOT_RBPU	set	0x7F8F
  3820                           	global	_NOT_RC8
  3821  0000                     _NOT_RC8	set	0x7D5E
  3822                           	global	_NOT_RD
  3823  0000                     _NOT_RD	set	0x7C20
  3824                           	global	_NOT_RI
  3825  0000                     _NOT_RI	set	0x7E84
  3826                           	global	_NOT_SS1
  3827  0000                     _NOT_SS1	set	0x7C05
  3828                           	global	_NOT_SS2
  3829  0000                     _NOT_SS2	set	0x7C1B
  3830                           	global	_NOT_T1SYNC
  3831  0000                     _NOT_T1SYNC	set	0x7E6A
  3832                           	global	_NOT_TO
  3833  0000                     _NOT_TO	set	0x7E83
  3834                           	global	_NOT_TX8
  3835  0000                     _NOT_TX8	set	0x7D66
  3836                           	global	_NOT_W
  3837  0000                     _NOT_W	set	0x7E3A
  3838                           	global	_NOT_WR
  3839  0000                     _NOT_WR	set	0x7C21
  3840                           	global	_OBF
  3841  0000                     _OBF	set	0x7CB6
  3842                           	global	_OERR
  3843  0000                     _OERR	set	0x7D59
  3844                           	global	_OERR1
  3845  0000                     _OERR1	set	0x7D59
  3846                           	global	_OSCFIE
  3847  0000                     _OSCFIE	set	0x7D07
  3848                           	global	_OSCFIF
  3849  0000                     _OSCFIF	set	0x7D0F
  3850                           	global	_OSCFIP
  3851  0000                     _OSCFIP	set	0x7D17
  3852                           	global	_OSTS
  3853  0000                     _OSTS	set	0x7E9B
  3854                           	global	_OV
  3855  0000                     _OV	set	0x7EC3
  3856                           	global	_OVERFLOW
  3857  0000                     _OVERFLOW	set	0x7EC3
  3858                           	global	_P1A
  3859  0000                     _P1A	set	0x7C12
  3860                           	global	_P1B
  3861  0000                     _P1B	set	0x7C1D
  3862                           	global	_P1C
  3863  0000                     _P1C	set	0x7C1E
  3864                           	global	_P1D
  3865  0000                     _P1D	set	0x7C1F
  3866                           	global	_P1M0
  3867  0000                     _P1M0	set	0x7DEE
  3868                           	global	_P1M1
  3869  0000                     _P1M1	set	0x7DEF
  3870                           	global	_P2
  3871  0000                     _P2	set	0x7C3C
  3872                           	global	_PA1
  3873  0000                     _PA1	set	0x7C12
  3874                           	global	_PA2
  3875  0000                     _PA2	set	0x7C11
  3876                           	global	_PA2E
  3877  0000                     _PA2E	set	0x7C27
  3878                           	global	_PB1E
  3879  0000                     _PB1E	set	0x7C26
  3880                           	global	_PB2
  3881  0000                     _PB2	set	0x7C22
  3882                           	global	_PB3E
  3883  0000                     _PB3E	set	0x7C24
  3884                           	global	_PC1E
  3885  0000                     _PC1E	set	0x7C25
  3886                           	global	_PC2
  3887  0000                     _PC2	set	0x7C21
  3888                           	global	_PC3E
  3889  0000                     _PC3E	set	0x7C23
  3890                           	global	_PCFG0
  3891  0000                     _PCFG0	set	0x7E08
  3892                           	global	_PCFG1
  3893  0000                     _PCFG1	set	0x7E09
  3894                           	global	_PCFG2
  3895  0000                     _PCFG2	set	0x7E0A
  3896                           	global	_PCFG3
  3897  0000                     _PCFG3	set	0x7E0B
  3898                           	global	_PD
  3899  0000                     _PD	set	0x7E82
  3900                           	global	_PD2
  3901  0000                     _PD2	set	0x7C20
  3902                           	global	_PDC0
  3903  0000                     _PDC0	set	0x7DB8
  3904                           	global	_PDC1
  3905  0000                     _PDC1	set	0x7DB9
  3906                           	global	_PDC2
  3907  0000                     _PDC2	set	0x7DBA
  3908                           	global	_PDC3
  3909  0000                     _PDC3	set	0x7DBB
  3910                           	global	_PDC4
  3911  0000                     _PDC4	set	0x7DBC
  3912                           	global	_PDC5
  3913  0000                     _PDC5	set	0x7DBD
  3914                           	global	_PDC6
  3915  0000                     _PDC6	set	0x7DBE
  3916                           	global	_PEIE
  3917  0000                     _PEIE	set	0x7F96
  3918                           	global	_PEIE_GIEL
  3919  0000                     _PEIE_GIEL	set	0x7F96
  3920                           	global	_PEN
  3921  0000                     _PEN	set	0x7E2A
  3922                           	global	_PEN1
  3923  0000                     _PEN1	set	0x7E2A
  3924                           	global	_PEN2
  3925  0000                     _PEN2	set	0x7C2A
  3926                           	global	_PGC
  3927  0000                     _PGC	set	0x7C0E
  3928                           	global	_PGD
  3929  0000                     _PGD	set	0x7C0F
  3930                           	global	_PLLEN
  3931  0000                     _PLLEN	set	0x7CDE
  3932                           	global	_POR
  3933  0000                     _POR	set	0x7E81
  3934                           	global	_PRSEN
  3935  0000                     _PRSEN	set	0x7DBF
  3936                           	global	_PSA
  3937  0000                     _PSA	set	0x7EAB
  3938                           	global	_PSP0
  3939  0000                     _PSP0	set	0x7C18
  3940                           	global	_PSP1
  3941  0000                     _PSP1	set	0x7C19
  3942                           	global	_PSP2
  3943  0000                     _PSP2	set	0x7C1A
  3944                           	global	_PSP3
  3945  0000                     _PSP3	set	0x7C1B
  3946                           	global	_PSP4
  3947  0000                     _PSP4	set	0x7C1C
  3948                           	global	_PSP5
  3949  0000                     _PSP5	set	0x7C1D
  3950                           	global	_PSP6
  3951  0000                     _PSP6	set	0x7C1E
  3952                           	global	_PSP7
  3953  0000                     _PSP7	set	0x7C1F
  3954                           	global	_PSPIE
  3955  0000                     _PSPIE	set	0x7CEF
  3956                           	global	_PSPIF
  3957  0000                     _PSPIF	set	0x7CF7
  3958                           	global	_PSPIP
  3959  0000                     _PSPIP	set	0x7CFF
  3960                           	global	_PSPMODE
  3961  0000                     _PSPMODE	set	0x7CB4
  3962                           	global	_PSSAC0
  3963  0000                     _PSSAC0	set	0x7DB2
  3964                           	global	_PSSAC1
  3965  0000                     _PSSAC1	set	0x7DB3
  3966                           	global	_PSSBD0
  3967  0000                     _PSSBD0	set	0x7DB0
  3968                           	global	_PSSBD1
  3969  0000                     _PSSBD1	set	0x7DB1
  3970                           	global	_RA0
  3971  0000                     _RA0	set	0x7C00
  3972                           	global	_RA1
  3973  0000                     _RA1	set	0x7C01
  3974                           	global	_RA2
  3975  0000                     _RA2	set	0x7C02
  3976                           	global	_RA3
  3977  0000                     _RA3	set	0x7C03
  3978                           	global	_RA4
  3979  0000                     _RA4	set	0x7C04
  3980                           	global	_RA5
  3981  0000                     _RA5	set	0x7C05
  3982                           	global	_RA6
  3983  0000                     _RA6	set	0x7C06
  3984                           	global	_RA7
  3985  0000                     _RA7	set	0x7C07
  3986                           	global	_RB0
  3987  0000                     _RB0	set	0x7C08
  3988                           	global	_RB1
  3989  0000                     _RB1	set	0x7C09
  3990                           	global	_RB2
  3991  0000                     _RB2	set	0x7C0A
  3992                           	global	_RB3
  3993  0000                     _RB3	set	0x7C0B
  3994                           	global	_RB4
  3995  0000                     _RB4	set	0x7C0C
  3996                           	global	_RB5
  3997  0000                     _RB5	set	0x7C0D
  3998                           	global	_RB6
  3999  0000                     _RB6	set	0x7C0E
  4000                           	global	_RB7
  4001  0000                     _RB7	set	0x7C0F
  4002                           	global	_RBIE
  4003  0000                     _RBIE	set	0x7F93
  4004                           	global	_RBIF
  4005  0000                     _RBIF	set	0x7F90
  4006                           	global	_RBIP
  4007  0000                     _RBIP	set	0x7F88
  4008                           	global	_RBPU
  4009  0000                     _RBPU	set	0x7F8F
  4010                           	global	_RC0
  4011  0000                     _RC0	set	0x7C10
  4012                           	global	_RC1
  4013  0000                     _RC1	set	0x7C11
  4014                           	global	_RC1IE
  4015  0000                     _RC1IE	set	0x7CED
  4016                           	global	_RC1IF
  4017  0000                     _RC1IF	set	0x7CF5
  4018                           	global	_RC1IP
  4019  0000                     _RC1IP	set	0x7CFD
  4020                           	global	_RC2
  4021  0000                     _RC2	set	0x7C12
  4022                           	global	_RC3
  4023  0000                     _RC3	set	0x7C13
  4024                           	global	_RC4
  4025  0000                     _RC4	set	0x7C14
  4026                           	global	_RC5
  4027  0000                     _RC5	set	0x7C15
  4028                           	global	_RC6
  4029  0000                     _RC6	set	0x7C16
  4030                           	global	_RC7
  4031  0000                     _RC7	set	0x7C17
  4032                           	global	_RC8_9
  4033  0000                     _RC8_9	set	0x7D5E
  4034                           	global	_RC9
  4035  0000                     _RC9	set	0x7D5E
  4036                           	global	_RCD8
  4037  0000                     _RCD8	set	0x7D58
  4038                           	global	_RCEN
  4039  0000                     _RCEN	set	0x7E2B
  4040                           	global	_RCEN1
  4041  0000                     _RCEN1	set	0x7E2B
  4042                           	global	_RCEN2
  4043  0000                     _RCEN2	set	0x7C2B
  4044                           	global	_RCIDL
  4045  0000                     _RCIDL	set	0x7DC6
  4046                           	global	_RCIE
  4047  0000                     _RCIE	set	0x7CED
  4048                           	global	_RCIF
  4049  0000                     _RCIF	set	0x7CF5
  4050                           	global	_RCIP
  4051  0000                     _RCIP	set	0x7CFD
  4052                           	global	_RCMT
  4053  0000                     _RCMT	set	0x7DC6
  4054                           	global	_RD
  4055  0000                     _RD	set	0x7C20
  4056                           	global	_RD0
  4057  0000                     _RD0	set	0x7C18
  4058                           	global	_RD1
  4059  0000                     _RD1	set	0x7C19
  4060                           	global	_RD16
  4061  0000                     _RD16	set	0x7E6F
  4062                           	global	_RD2
  4063  0000                     _RD2	set	0x7C1A
  4064                           	global	_RD3
  4065  0000                     _RD3	set	0x7C1B
  4066                           	global	_RD4
  4067  0000                     _RD4	set	0x7C1C
  4068                           	global	_RD5
  4069  0000                     _RD5	set	0x7C1D
  4070                           	global	_RD6
  4071  0000                     _RD6	set	0x7C1E
  4072                           	global	_RD7
  4073  0000                     _RD7	set	0x7C1F
  4074                           	global	_RDE
  4075  0000                     _RDE	set	0x7C20
  4076                           	global	_RE0
  4077  0000                     _RE0	set	0x7C20
  4078                           	global	_RE1
  4079  0000                     _RE1	set	0x7C21
  4080                           	global	_RE2
  4081  0000                     _RE2	set	0x7C22
  4082                           	global	_RE3
  4083  0000                     _RE3	set	0x7CB3
  4084                           	global	_RE4
  4085  0000                     _RE4	set	0x7C24
  4086                           	global	_RE5
  4087  0000                     _RE5	set	0x7C25
  4088                           	global	_RE6
  4089  0000                     _RE6	set	0x7C26
  4090                           	global	_RE7
  4091  0000                     _RE7	set	0x7C27
  4092                           	global	_READ_WRITE2
  4093  0000                     _READ_WRITE2	set	0x7C3A
  4094                           	global	_RI
  4095  0000                     _RI	set	0x7E84
  4096                           	global	_RJPU
  4097  0000                     _RJPU	set	0x7C07
  4098                           	global	_RSEN
  4099  0000                     _RSEN	set	0x7E29
  4100                           	global	_RSEN1
  4101  0000                     _RSEN1	set	0x7E29
  4102                           	global	_RSEN2
  4103  0000                     _RSEN2	set	0x7C29
  4104                           	global	_RW
  4105  0000                     _RW	set	0x7E3A
  4106                           	global	_RW1
  4107  0000                     _RW1	set	0x7E3A
  4108                           	global	_RW2
  4109  0000                     _RW2	set	0x7C3A
  4110                           	global	_RX
  4111  0000                     _RX	set	0x7C17
  4112                           	global	_RX9
  4113  0000                     _RX9	set	0x7D5E
  4114                           	global	_RX91
  4115  0000                     _RX91	set	0x7D5E
  4116                           	global	_RX9D
  4117  0000                     _RX9D	set	0x7D58
  4118                           	global	_RX9D1
  4119  0000                     _RX9D1	set	0x7D58
  4120                           	global	_R_W2
  4121  0000                     _R_W2	set	0x7C3A
  4122                           	global	_R_nW2
  4123  0000                     _R_nW2	set	0x7C3A
  4124                           	global	_S2
  4125  0000                     _S2	set	0x7C3B
  4126                           	global	_SCK
  4127  0000                     _SCK	set	0x7C13
  4128                           	global	_SCK1
  4129  0000                     _SCK1	set	0x7C13
  4130                           	global	_SCK2
  4131  0000                     _SCK2	set	0x7C18
  4132                           	global	_SCKP
  4133  0000                     _SCKP	set	0x7DC4
  4134                           	global	_SCL
  4135  0000                     _SCL	set	0x7C13
  4136                           	global	_SCL1
  4137  0000                     _SCL1	set	0x7C13
  4138                           	global	_SCL2
  4139  0000                     _SCL2	set	0x7C18
  4140                           	global	_SCS0
  4141  0000                     _SCS0	set	0x7E98
  4142                           	global	_SCS1
  4143  0000                     _SCS1	set	0x7E99
  4144                           	global	_SDA
  4145  0000                     _SDA	set	0x7C14
  4146                           	global	_SDA1
  4147  0000                     _SDA1	set	0x7C14
  4148                           	global	_SDA2
  4149  0000                     _SDA2	set	0x7C19
  4150                           	global	_SDI
  4151  0000                     _SDI	set	0x7C14
  4152                           	global	_SDI1
  4153  0000                     _SDI1	set	0x7C14
  4154                           	global	_SDI2
  4155  0000                     _SDI2	set	0x7C19
  4156                           	global	_SDO
  4157  0000                     _SDO	set	0x7C15
  4158                           	global	_SDO1
  4159  0000                     _SDO1	set	0x7C15
  4160                           	global	_SDO2
  4161  0000                     _SDO2	set	0x7C1A
  4162                           	global	_SEN
  4163  0000                     _SEN	set	0x7E28
  4164                           	global	_SEN1
  4165  0000                     _SEN1	set	0x7E28
  4166                           	global	_SEN2
  4167  0000                     _SEN2	set	0x7C28
  4168                           	global	_SENDB
  4169  0000                     _SENDB	set	0x7D63
  4170                           	global	_SENDB1
  4171  0000                     _SENDB1	set	0x7D63
  4172                           	global	_SMP
  4173  0000                     _SMP	set	0x7E3F
  4174                           	global	_SMP1
  4175  0000                     _SMP1	set	0x7E3F
  4176                           	global	_SMP2
  4177  0000                     _SMP2	set	0x7C3F
  4178                           	global	_SOSCEN
  4179  0000                     _SOSCEN	set	0x7E6B
  4180                           	global	_SPEN
  4181  0000                     _SPEN	set	0x7D5F
  4182                           	global	_SPEN1
  4183  0000                     _SPEN1	set	0x7D5F
  4184                           	global	_SREN
  4185  0000                     _SREN	set	0x7D5D
  4186                           	global	_SREN1
  4187  0000                     _SREN1	set	0x7D5D
  4188                           	global	_SRENA
  4189  0000                     _SRENA	set	0x7D5D
  4190                           	global	_SS1
  4191  0000                     _SS1	set	0x7C05
  4192                           	global	_SS2
  4193  0000                     _SS2	set	0x7C1B
  4194                           	global	_SSP1IE
  4195  0000                     _SSP1IE	set	0x7CEB
  4196                           	global	_SSP1IF
  4197  0000                     _SSP1IF	set	0x7CF3
  4198                           	global	_SSP1IP
  4199  0000                     _SSP1IP	set	0x7CFB
  4200                           	global	_SSP2IE
  4201  0000                     _SSP2IE	set	0x7D1F
  4202                           	global	_SSP2IF
  4203  0000                     _SSP2IF	set	0x7D27
  4204                           	global	_SSP2IP
  4205  0000                     _SSP2IP	set	0x7D2F
  4206                           	global	_SSPEN
  4207  0000                     _SSPEN	set	0x7E35
  4208                           	global	_SSPEN1
  4209  0000                     _SSPEN1	set	0x7E35
  4210                           	global	_SSPEN2
  4211  0000                     _SSPEN2	set	0x7C35
  4212                           	global	_SSPIE
  4213  0000                     _SSPIE	set	0x7CEB
  4214                           	global	_SSPIF
  4215  0000                     _SSPIF	set	0x7CF3
  4216                           	global	_SSPIP
  4217  0000                     _SSPIP	set	0x7CFB
  4218                           	global	_SSPM0
  4219  0000                     _SSPM0	set	0x7E30
  4220                           	global	_SSPM01
  4221  0000                     _SSPM01	set	0x7E30
  4222                           	global	_SSPM02
  4223  0000                     _SSPM02	set	0x7C30
  4224                           	global	_SSPM1
  4225  0000                     _SSPM1	set	0x7E31
  4226                           	global	_SSPM11
  4227  0000                     _SSPM11	set	0x7E31
  4228                           	global	_SSPM12
  4229  0000                     _SSPM12	set	0x7C31
  4230                           	global	_SSPM2
  4231  0000                     _SSPM2	set	0x7E32
  4232                           	global	_SSPM21
  4233  0000                     _SSPM21	set	0x7E32
  4234                           	global	_SSPM22
  4235  0000                     _SSPM22	set	0x7C32
  4236                           	global	_SSPM3
  4237  0000                     _SSPM3	set	0x7E33
  4238                           	global	_SSPM31
  4239  0000                     _SSPM31	set	0x7E33
  4240                           	global	_SSPM32
  4241  0000                     _SSPM32	set	0x7C33
  4242                           	global	_SSPOV
  4243  0000                     _SSPOV	set	0x7E36
  4244                           	global	_SSPOV1
  4245  0000                     _SSPOV1	set	0x7E36
  4246                           	global	_SSPOV2
  4247  0000                     _SSPOV2	set	0x7C36
  4248                           	global	_START
  4249  0000                     _START	set	0x7E3B
  4250                           	global	_START1
  4251  0000                     _START1	set	0x7E3B
  4252                           	global	_START2
  4253  0000                     _START2	set	0x7C3B
  4254                           	global	_STKFUL
  4255  0000                     _STKFUL	set	0x7FE7
  4256                           	global	_STKOVF
  4257  0000                     _STKOVF	set	0x7FE7
  4258                           	global	_STKPTR0
  4259  0000                     _STKPTR0	set	0x7FE0
  4260                           	global	_STKPTR1
  4261  0000                     _STKPTR1	set	0x7FE1
  4262                           	global	_STKPTR2
  4263  0000                     _STKPTR2	set	0x7FE2
  4264                           	global	_STKPTR3
  4265  0000                     _STKPTR3	set	0x7FE3
  4266                           	global	_STKPTR4
  4267  0000                     _STKPTR4	set	0x7FE4
  4268                           	global	_STKUNF
  4269  0000                     _STKUNF	set	0x7FE6
  4270                           	global	_STOP
  4271  0000                     _STOP	set	0x7E3C
  4272                           	global	_STOP1
  4273  0000                     _STOP1	set	0x7E3C
  4274                           	global	_STOP2
  4275  0000                     _STOP2	set	0x7C3C
  4276                           	global	_SWDTE
  4277  0000                     _SWDTE	set	0x7E88
  4278                           	global	_SWDTEN
  4279  0000                     _SWDTEN	set	0x7E88
  4280                           	global	_SYNC
  4281  0000                     _SYNC	set	0x7D64
  4282                           	global	_SYNC1
  4283  0000                     _SYNC1	set	0x7D64
  4284                           	global	_T08BIT
  4285  0000                     _T08BIT	set	0x7EAE
  4286                           	global	_T0CKI
  4287  0000                     _T0CKI	set	0x7C0D
  4288                           	global	_T0CS
  4289  0000                     _T0CS	set	0x7EAD
  4290                           	global	_T0IE
  4291  0000                     _T0IE	set	0x7F95
  4292                           	global	_T0IF
  4293  0000                     _T0IF	set	0x7F92
  4294                           	global	_T0IP
  4295  0000                     _T0IP	set	0x7F8A
  4296                           	global	_T0PS0
  4297  0000                     _T0PS0	set	0x7EA8
  4298                           	global	_T0PS1
  4299  0000                     _T0PS1	set	0x7EA9
  4300                           	global	_T0PS2
  4301  0000                     _T0PS2	set	0x7EAA
  4302                           	global	_T0SE
  4303  0000                     _T0SE	set	0x7EAC
  4304                           	global	_T1CKI
  4305  0000                     _T1CKI	set	0x7C10
  4306                           	global	_T1CKPS0
  4307  0000                     _T1CKPS0	set	0x7E6C
  4308                           	global	_T1CKPS1
  4309  0000                     _T1CKPS1	set	0x7E6D
  4310                           	global	_T1INSYNC
  4311  0000                     _T1INSYNC	set	0x7E6A
  4312                           	global	_T1OSCEN
  4313  0000                     _T1OSCEN	set	0x7E6B
  4314                           	global	_T1OSI
  4315  0000                     _T1OSI	set	0x7C11
  4316                           	global	_T1OSO
  4317  0000                     _T1OSO	set	0x7C10
  4318                           	global	_T1RD16
  4319  0000                     _T1RD16	set	0x7E6F
  4320                           	global	_T1RUN
  4321  0000                     _T1RUN	set	0x7E6E
  4322                           	global	_T1SYNC
  4323  0000                     _T1SYNC	set	0x7E6A
  4324                           	global	_T2CKPS0
  4325  0000                     _T2CKPS0	set	0x7E50
  4326                           	global	_T2CKPS1
  4327  0000                     _T2CKPS1	set	0x7E51
  4328                           	global	_T2OUTPS0
  4329  0000                     _T2OUTPS0	set	0x7E53
  4330                           	global	_T2OUTPS1
  4331  0000                     _T2OUTPS1	set	0x7E54
  4332                           	global	_T2OUTPS2
  4333  0000                     _T2OUTPS2	set	0x7E55
  4334                           	global	_T2OUTPS3
  4335  0000                     _T2OUTPS3	set	0x7E56
  4336                           	global	_TMR0IE
  4337  0000                     _TMR0IE	set	0x7F95
  4338                           	global	_TMR0IF
  4339  0000                     _TMR0IF	set	0x7F92
  4340                           	global	_TMR0IP
  4341  0000                     _TMR0IP	set	0x7F8A
  4342                           	global	_TMR0ON
  4343  0000                     _TMR0ON	set	0x7EAF
  4344                           	global	_TMR1CS
  4345  0000                     _TMR1CS	set	0x7E69
  4346                           	global	_TMR1IE
  4347  0000                     _TMR1IE	set	0x7CE8
  4348                           	global	_TMR1IF
  4349  0000                     _TMR1IF	set	0x7CF0
  4350                           	global	_TMR1IP
  4351  0000                     _TMR1IP	set	0x7CF8
  4352                           	global	_TMR1ON
  4353  0000                     _TMR1ON	set	0x7E68
  4354                           	global	_TMR2IE
  4355  0000                     _TMR2IE	set	0x7CE9
  4356                           	global	_TMR2IF
  4357  0000                     _TMR2IF	set	0x7CF1
  4358                           	global	_TMR2IP
  4359  0000                     _TMR2IP	set	0x7CF9
  4360                           	global	_TMR2ON
  4361  0000                     _TMR2ON	set	0x7E52
  4362                           	global	_TO
  4363  0000                     _TO	set	0x7E83
  4364                           	global	_TOUTPS0
  4365  0000                     _TOUTPS0	set	0x7E53
  4366                           	global	_TOUTPS1
  4367  0000                     _TOUTPS1	set	0x7E54
  4368                           	global	_TOUTPS2
  4369  0000                     _TOUTPS2	set	0x7E55
  4370                           	global	_TOUTPS3
  4371  0000                     _TOUTPS3	set	0x7E56
  4372                           	global	_TRISA0
  4373  0000                     _TRISA0	set	0x7C90
  4374                           	global	_TRISA1
  4375  0000                     _TRISA1	set	0x7C91
  4376                           	global	_TRISA2
  4377  0000                     _TRISA2	set	0x7C92
  4378                           	global	_TRISA3
  4379  0000                     _TRISA3	set	0x7C93
  4380                           	global	_TRISA5
  4381  0000                     _TRISA5	set	0x7C95
  4382                           	global	_TRISB0
  4383  0000                     _TRISB0	set	0x7C98
  4384                           	global	_TRISB1
  4385  0000                     _TRISB1	set	0x7C99
  4386                           	global	_TRISB2
  4387  0000                     _TRISB2	set	0x7C9A
  4388                           	global	_TRISB3
  4389  0000                     _TRISB3	set	0x7C9B
  4390                           	global	_TRISB4
  4391  0000                     _TRISB4	set	0x7C9C
  4392                           	global	_TRISB5
  4393  0000                     _TRISB5	set	0x7C9D
  4394                           	global	_TRISB6
  4395  0000                     _TRISB6	set	0x7C9E
  4396                           	global	_TRISB7
  4397  0000                     _TRISB7	set	0x7C9F
  4398                           	global	_TRISC0
  4399  0000                     _TRISC0	set	0x7CA0
  4400                           	global	_TRISC1
  4401  0000                     _TRISC1	set	0x7CA1
  4402                           	global	_TRISC2
  4403  0000                     _TRISC2	set	0x7CA2
  4404                           	global	_TRISC3
  4405  0000                     _TRISC3	set	0x7CA3
  4406                           	global	_TRISC4
  4407  0000                     _TRISC4	set	0x7CA4
  4408                           	global	_TRISC5
  4409  0000                     _TRISC5	set	0x7CA5
  4410                           	global	_TRISC6
  4411  0000                     _TRISC6	set	0x7CA6
  4412                           	global	_TRISC7
  4413  0000                     _TRISC7	set	0x7CA7
  4414                           	global	_TRISD0
  4415  0000                     _TRISD0	set	0x7CA8
  4416                           	global	_TRISD1
  4417  0000                     _TRISD1	set	0x7CA9
  4418                           	global	_TRISD2
  4419  0000                     _TRISD2	set	0x7CAA
  4420                           	global	_TRISD3
  4421  0000                     _TRISD3	set	0x7CAB
  4422                           	global	_TRISD4
  4423  0000                     _TRISD4	set	0x7CAC
  4424                           	global	_TRISD5
  4425  0000                     _TRISD5	set	0x7CAD
  4426                           	global	_TRISD6
  4427  0000                     _TRISD6	set	0x7CAE
  4428                           	global	_TRISD7
  4429  0000                     _TRISD7	set	0x7CAF
  4430                           	global	_TRISE0
  4431  0000                     _TRISE0	set	0x7CB0
  4432                           	global	_TRISE1
  4433  0000                     _TRISE1	set	0x7CB1
  4434                           	global	_TRISE2
  4435  0000                     _TRISE2	set	0x7CB2
  4436                           	global	_TRMT
  4437  0000                     _TRMT	set	0x7D61
  4438                           	global	_TRMT1
  4439  0000                     _TRMT1	set	0x7D61
  4440                           	global	_TX
  4441  0000                     _TX	set	0x7C16
  4442                           	global	_TX1IE
  4443  0000                     _TX1IE	set	0x7CEC
  4444                           	global	_TX1IF
  4445  0000                     _TX1IF	set	0x7CF4
  4446                           	global	_TX1IP
  4447  0000                     _TX1IP	set	0x7CFC
  4448                           	global	_TX8_9
  4449  0000                     _TX8_9	set	0x7D66
  4450                           	global	_TX9
  4451  0000                     _TX9	set	0x7D66
  4452                           	global	_TX91
  4453  0000                     _TX91	set	0x7D66
  4454                           	global	_TX9D
  4455  0000                     _TX9D	set	0x7D60
  4456                           	global	_TX9D1
  4457  0000                     _TX9D1	set	0x7D60
  4458                           	global	_TXD8
  4459  0000                     _TXD8	set	0x7D60
  4460                           	global	_TXEN
  4461  0000                     _TXEN	set	0x7D65
  4462                           	global	_TXEN1
  4463  0000                     _TXEN1	set	0x7D65
  4464                           	global	_TXIE
  4465  0000                     _TXIE	set	0x7CEC
  4466                           	global	_TXIF
  4467  0000                     _TXIF	set	0x7CF4
  4468                           	global	_TXIP
  4469  0000                     _TXIP	set	0x7CFC
  4470                           	global	_UA
  4471  0000                     _UA	set	0x7E39
  4472                           	global	_UA1
  4473  0000                     _UA1	set	0x7E39
  4474                           	global	_UA2
  4475  0000                     _UA2	set	0x7C39
  4476                           	global	_ULPWUIN
  4477  0000                     _ULPWUIN	set	0x7C00
  4478                           	global	_VCFG0
  4479  0000                     _VCFG0	set	0x7E0C
  4480                           	global	_VCFG01
  4481  0000                     _VCFG01	set	0x7E0C
  4482                           	global	_VCFG1
  4483  0000                     _VCFG1	set	0x7E0D
  4484                           	global	_VCFG11
  4485  0000                     _VCFG11	set	0x7E0D
  4486                           	global	_VREFM
  4487  0000                     _VREFM	set	0x7C02
  4488                           	global	_VREFP
  4489  0000                     _VREFP	set	0x7C03
  4490                           	global	_W4E
  4491  0000                     _W4E	set	0x7DC1
  4492                           	global	_WCOL
  4493  0000                     _WCOL	set	0x7E37
  4494                           	global	_WCOL1
  4495  0000                     _WCOL1	set	0x7E37
  4496                           	global	_WCOL2
  4497  0000                     _WCOL2	set	0x7C37
  4498                           	global	_WR
  4499  0000                     _WR	set	0x7D31
  4500                           	global	_WRE
  4501  0000                     _WRE	set	0x7C21
  4502                           	global	_WREN
  4503  0000                     _WREN	set	0x7D32
  4504                           	global	_WRERR
  4505  0000                     _WRERR	set	0x7D33
  4506                           	global	_WUE
  4507  0000                     _WUE	set	0x7DC1
  4508                           	global	_ZERO
  4509  0000                     _ZERO	set	0x7EC2
  4510                           	global	_nA2
  4511  0000                     _nA2	set	0x7C3D
  4512                           	global	_nADDRESS2
  4513  0000                     _nADDRESS2	set	0x7C3D
  4514                           	global	_nBOR
  4515  0000                     _nBOR	set	0x7E80
  4516                           	global	_nCS
  4517  0000                     _nCS	set	0x7C22
  4518                           	global	_nDONE
  4519  0000                     _nDONE	set	0x7E11
  4520                           	global	_nPD
  4521  0000                     _nPD	set	0x7E82
  4522                           	global	_nPOR
  4523  0000                     _nPOR	set	0x7E81
  4524                           	global	_nRBPU
  4525  0000                     _nRBPU	set	0x7F8F
  4526                           	global	_nRC8
  4527  0000                     _nRC8	set	0x7D5E
  4528                           	global	_nRD
  4529  0000                     _nRD	set	0x7C20
  4530                           	global	_nRI
  4531  0000                     _nRI	set	0x7E84
  4532                           	global	_nSS1
  4533  0000                     _nSS1	set	0x7C05
  4534                           	global	_nSS2
  4535  0000                     _nSS2	set	0x7C1B
  4536                           	global	_nT1SYNC
  4537  0000                     _nT1SYNC	set	0x7E6A
  4538                           	global	_nTO
  4539  0000                     _nTO	set	0x7E83
  4540                           	global	_nTX8
  4541  0000                     _nTX8	set	0x7D66
  4542                           	global	_nW2
  4543  0000                     _nW2	set	0x7C3A
  4544                           	global	_nWR
  4545  0000                     _nWR	set	0x7C21
  4546                           	global	_nWRITE2
  4547  0000                     _nWRITE2	set	0x7C3A
  4548                           	global	_SSP1CON1
  4549  0000                     _SSP1CON1	set	0xFC6
  4550                           	global	_uc_ptr
  4551                           psect	nvCOMRAM,class=COMRAM,space=1
  4552                           global __pnvCOMRAM
  4553  00004B                     __pnvCOMRAM:
  4554  00004B                     _uc_ptr:
  4555  00004B                            ds      2
  4556                           	global	_ic_ptr
  4557                           psect	nvBANK0,class=BANK0,space=1
  4558                           global __pnvBANK0
  4559  0000C4                     __pnvBANK0:
  4560  0000C4                     _ic_ptr:
  4561  0000C4                            ds      2
  4562                           ; #config settings
  4563                           global __CFG_WDTEN$OFF
  4564  0000                     __CFG_WDTEN$OFF equ 0x0
  4565                           global __CFG_STVREN$OFF
  4566  0000                     __CFG_STVREN$OFF equ 0x0
  4567                           global __CFG_XINST$OFF
  4568  0000                     __CFG_XINST$OFF equ 0x0
  4569                           global __CFG_CP0$OFF
  4570  0000                     __CFG_CP0$OFF equ 0x0
  4571                           global __CFG_IESO$ON
  4572  0000                     __CFG_IESO$ON equ 0x0
  4573                           global __CFG_FOSC2$ON
  4574  0000                     __CFG_FOSC2$ON equ 0x0
  4575                           global __CFG_FOSC$HSPLL
  4576  0000                     __CFG_FOSC$HSPLL equ 0x0
  4577                           global __CFG_FCMEN$ON
  4578  0000                     __CFG_FCMEN$ON equ 0x0
  4579                           global __CFG_WDTPS$32768
  4580  0000                     __CFG_WDTPS$32768 equ 0x0
  4581                           global __CFG_CCP2MX$DEFAULT
  4582  0000                     __CFG_CCP2MX$DEFAULT equ 0x0
  4583                           	file	"/tmp/cgtszxmxV"
  4584                           	line	#
  4585                           psect	cinit,class=CODE,delta=1,reloc=2
  4586                           global __pcinit
  4587  001CAC                     __pcinit:
  4588                           global start_initialization
  4589  001CAC                     start_initialization:
  4590                           
  4591                           global __initialization
  4592  001CAC                     __initialization:
  4593                           psect	bssCOMRAM,class=COMRAM,space=1
  4594                           global __pbssCOMRAM
  4595  000045                     __pbssCOMRAM:
  4596                           	global	_errno
  4597                           	global	_errno
  4598  000045                     _errno:
  4599  000045                            ds      2
  4600                           	global	_CapStatus
  4601                           	global	_CapStatus
  4602  000047                     _CapStatus:
  4603  000047                            ds      1
  4604  000048                     _MQ_Main_Willing_to_block:
  4605  000048                            ds      1
  4606                           	global	_USART_Status
  4607  000049                     _USART_Status:
  4608  000049                            ds      1
  4609  00004A                     _adcMsgCount:
  4610  00004A                            ds      1
  4611                           psect	bssBANK0,class=BANK0,space=1
  4612                           global __pbssBANK0
  4613  0000C6                     __pbssBANK0:
  4614  0000C6                     _emptyMsgCount:
  4615  0000C6                            ds      1
  4616  0000C7                     _i2cMode:
  4617  0000C7                            ds      1
  4618                           psect	dataBANK0,class=BANK0,space=1
  4619                           global __pdataBANK0
  4620  0000C8                     __pdataBANK0:
  4621                           	file	"../src/timer1_thread.c"
  4622  0000C8                     timer1_lthread@F5089:
  4623  0000C8                            ds      2
  4624                           psect	bssBANK1,class=BANK1,space=1
  4625                           global __pbssBANK1
  4626  000100                     __pbssBANK1:
  4627  000100                     _FromMainLow_MQ:
  4628  000100                            ds      54
  4629  000136                     _ToMainHigh_MQ:
  4630  000136                            ds      54
  4631  00016C                     _ToMainLow_MQ:
  4632  00016C                            ds      54
  4633                           psect	bssBANK2,class=BANK2,space=1
  4634                           global __pbssBANK2
  4635  000200                     __pbssBANK2:
  4636  000200                     _FromMainHigh_MQ:
  4637  000200                            ds      54
  4638                           psect	cinit
  4639                           ; Clear objects allocated to BANK2 (54 bytes)
  4640                           	global __pbssBANK2
  4641  001CAC  EE02  F000         lfsr	0,__pbssBANK2
  4642  001CB0  0E36               movlw	54
  4643  001CB2                     clear_0:
  4644  001CB2  6AEE               clrf	postinc0,c
  4645  001CB4  06E8               decf	wreg
  4646  001CB6  E1FD               bnz	clear_0
  4647                           ; Clear objects allocated to BANK1 (162 bytes)
  4648                           	global __pbssBANK1
  4649  001CB8  EE01  F000         lfsr	0,__pbssBANK1
  4650  001CBC  0EA2               movlw	162
  4651  001CBE                     clear_1:
  4652  001CBE  6AEE               clrf	postinc0,c
  4653  001CC0  06E8               decf	wreg
  4654  001CC2  E1FD               bnz	clear_1
  4655                           ; Clear objects allocated to BANK0 (2 bytes)
  4656                           	global __pbssBANK0
  4657  001CC4  0100               movlb	0
  4658  001CC6  6BC7               clrf	(__pbssBANK0+1)&0xffh,b
  4659  001CC8  6BC6               clrf	(__pbssBANK0+0)&0xffh,b
  4660                           ; Clear objects allocated to COMRAM (6 bytes)
  4661                           	global __pbssCOMRAM
  4662  001CCA  6A4A               clrf	(__pbssCOMRAM+5)&0xffh,c
  4663  001CCC  6A49               clrf	(__pbssCOMRAM+4)&0xffh,c
  4664  001CCE  6A48               clrf	(__pbssCOMRAM+3)&0xffh,c
  4665  001CD0  6A47               clrf	(__pbssCOMRAM+2)&0xffh,c
  4666  001CD2  6A46               clrf	(__pbssCOMRAM+1)&0xffh,c
  4667  001CD4  6A45               clrf	(__pbssCOMRAM+0)&0xffh,c
  4668                           ; Initialize objects allocated to BANK0 (2 bytes)
  4669                           	global __pidataBANK0
  4670                           	; load TBLPTR registers with __pidataBANK0
  4671  001CD6  0E5E               	movlw	low (__pidataBANK0)
  4672  001CD8  6EF6               	movwf	tblptrl
  4673  001CDA  0E21               	movlw	high(__pidataBANK0)
  4674  001CDC  6EF7               	movwf	tblptrh
  4675  001CDE  0E00               	movlw	low highword(__pidataBANK0)
  4676  001CE0  6EF8               	movwf	tblptru
  4677  001CE2  0009               	tblrd*+ ;fetch initializer
  4678  001CE4  CFF5 F0C8          	movff	tablat, __pdataBANK0+0		
  4679  001CE8  0009               	tblrd*+ ;fetch initializer
  4680  001CEA  CFF5 F0C9          	movff	tablat, __pdataBANK0+1		
  4681                           psect cinit,class=CODE,delta=1
  4682                           global end_of_initialization,__end_of__initialization
  4683                           
  4684                           ;End of C runtime variable initialization code
  4685                           
  4686  001CEE                     end_of_initialization:
  4687  001CEE                     __end_of__initialization:movlb 0
  4688  001CF0  EF4E  F004         goto _main	;jump to C main() function
  4689                           psect	cstackBANK1,class=BANK1,space=1
  4690                           global __pcstackBANK1
  4691  0001A2                     __pcstackBANK1:
  4692  0001A2                     ??_timer1_lthread:	; 0 bytes @ 0x0
  4693                           	global	?_send_msg
  4694  0001A2                     ?_send_msg:	; 1 bytes @ 0x0
  4695                           	global	?_recv_msg
  4696  0001A2                     ?_recv_msg:	; 1 bytes @ 0x0
  4697                           	global	send_msg@qptr
  4698  0001A2                     send_msg@qptr:	; 2 bytes @ 0x0
  4699                           	global	recv_msg@qptr
  4700  0001A2                     recv_msg@qptr:	; 2 bytes @ 0x0
  4701  0001A2                     	ds   2
  4702                           	global	send_msg@length
  4703  0001A4                     send_msg@length:	; 1 bytes @ 0x2
  4704                           	global	recv_msg@maxlength
  4705  0001A4                     recv_msg@maxlength:	; 1 bytes @ 0x2
  4706                           	global	timer1_lthread@toSend
  4707  0001A4                     timer1_lthread@toSend:	; 2 bytes @ 0x2
  4708  0001A4                     	ds   1
  4709                           	global	send_msg@msgtype
  4710  0001A5                     send_msg@msgtype:	; 1 bytes @ 0x3
  4711                           	global	recv_msg@msgtype
  4712  0001A5                     recv_msg@msgtype:	; 2 bytes @ 0x3
  4713  0001A5                     	ds   1
  4714                           	global	send_msg@data
  4715  0001A6                     send_msg@data:	; 2 bytes @ 0x4
  4716  0001A6                     	ds   1
  4717                           	global	recv_msg@data
  4718  0001A7                     recv_msg@data:	; 2 bytes @ 0x5
  4719  0001A7                     	ds   1
  4720                           	global	send_msg@tlength
  4721  0001A8                     send_msg@tlength:	; 2 bytes @ 0x6
  4722  0001A8                     	ds   1
  4723                           	global	recv_msg@slot
  4724  0001A9                     recv_msg@slot:	; 1 bytes @ 0x7
  4725  0001A9                     	ds   1
  4726                           	global	send_msg@slot
  4727  0001AA                     send_msg@slot:	; 1 bytes @ 0x8
  4728                           	global	recv_msg@tlength
  4729  0001AA                     recv_msg@tlength:	; 2 bytes @ 0x8
  4730  0001AA                     	ds   1
  4731                           	global	send_msg@qmsg
  4732  0001AB                     send_msg@qmsg:	; 2 bytes @ 0x9
  4733  0001AB                     	ds   1
  4734                           	global	recv_msg@qmsg
  4735  0001AC                     recv_msg@qmsg:	; 2 bytes @ 0xA
  4736  0001AC                     	ds   1
  4737                           	global	?_FromMainLow_sendmsg
  4738  0001AD                     ?_FromMainLow_sendmsg:	; 1 bytes @ 0xB
  4739                           	global	FromMainLow_sendmsg@length
  4740  0001AD                     FromMainLow_sendmsg@length:	; 1 bytes @ 0xB
  4741  0001AD                     	ds   1
  4742                           	global	?_ToMainHigh_recvmsg
  4743  0001AE                     ?_ToMainHigh_recvmsg:	; 1 bytes @ 0xC
  4744                           	global	?_ToMainLow_recvmsg
  4745  0001AE                     ?_ToMainLow_recvmsg:	; 1 bytes @ 0xC
  4746                           	global	ToMainLow_recvmsg@maxlength
  4747  0001AE                     ToMainLow_recvmsg@maxlength:	; 1 bytes @ 0xC
  4748                           	global	ToMainHigh_recvmsg@maxlength
  4749  0001AE                     ToMainHigh_recvmsg@maxlength:	; 1 bytes @ 0xC
  4750                           	global	FromMainLow_sendmsg@msgtype
  4751  0001AE                     FromMainLow_sendmsg@msgtype:	; 1 bytes @ 0xC
  4752  0001AE                     	ds   1
  4753                           	global	ToMainLow_recvmsg@msgtype
  4754  0001AF                     ToMainLow_recvmsg@msgtype:	; 2 bytes @ 0xD
  4755                           	global	ToMainHigh_recvmsg@msgtype
  4756  0001AF                     ToMainHigh_recvmsg@msgtype:	; 2 bytes @ 0xD
  4757                           	global	FromMainLow_sendmsg@data
  4758  0001AF                     FromMainLow_sendmsg@data:	; 2 bytes @ 0xD
  4759  0001AF                     	ds   2
  4760                           	global	ToMainLow_recvmsg@data
  4761  0001B1                     ToMainLow_recvmsg@data:	; 2 bytes @ 0xF
  4762                           	global	ToMainHigh_recvmsg@data
  4763  0001B1                     ToMainHigh_recvmsg@data:	; 2 bytes @ 0xF
  4764  0001B1                     	ds   2
  4765                           	global	main@msgbuffer
  4766  0001B3                     main@msgbuffer:	; 11 bytes @ 0x11
  4767  0001B3                     	ds   11
  4768                           	global	main@uthread_data
  4769  0001BE                     main@uthread_data:	; 2 bytes @ 0x1C
  4770  0001BE                     	ds   2
  4771                           	global	main@t0thread_data
  4772  0001C0                     main@t0thread_data:	; 2 bytes @ 0x1E
  4773  0001C0                     	ds   2
  4774                           	global	main@last_reg_recvd
  4775  0001C2                     main@last_reg_recvd:	; 1 bytes @ 0x20
  4776  0001C2                     	ds   1
  4777                           	global	main@t1thread_data
  4778  0001C3                     main@t1thread_data:	; 2 bytes @ 0x21
  4779  0001C3                     	ds   2
  4780                           	global	main@uc
  4781  0001C5                     main@uc:	; 5 bytes @ 0x23
  4782  0001C5                     	ds   5
  4783                           	global	main@length
  4784  0001CA                     main@length:	; 1 bytes @ 0x28
  4785  0001CA                     	ds   1
  4786                           	global	main@msgtype
  4787  0001CB                     main@msgtype:	; 1 bytes @ 0x29
  4788  0001CB                     	ds   1
  4789                           	global	main@ic
  4790  0001CC                     main@ic:	; 28 bytes @ 0x2A
  4791  0001CC                     	ds   28
  4792                           psect	cstackBANK0,class=BANK0,space=1
  4793                           global __pcstackBANK0
  4794  000080                     __pcstackBANK0:
  4795  000080                     ??i2_recv_msg:	; 0 bytes @ 0x0
  4796                           	global	i2send_msg@tlength
  4797  000080                     i2send_msg@tlength:	; 2 bytes @ 0x0
  4798  000080                     	ds   2
  4799                           	global	i2send_msg@slot
  4800  000082                     i2send_msg@slot:	; 1 bytes @ 0x2
  4801                           	global	i2recv_msg@slot
  4802  000082                     i2recv_msg@slot:	; 1 bytes @ 0x2
  4803  000082                     	ds   1
  4804                           	global	i2send_msg@qmsg
  4805  000083                     i2send_msg@qmsg:	; 2 bytes @ 0x3
  4806                           	global	i2recv_msg@tlength
  4807  000083                     i2recv_msg@tlength:	; 2 bytes @ 0x3
  4808  000083                     	ds   2
  4809                           	global	?_ToMainHigh_sendmsg
  4810  000085                     ?_ToMainHigh_sendmsg:	; 1 bytes @ 0x5
  4811                           	global	ToMainHigh_sendmsg@length
  4812  000085                     ToMainHigh_sendmsg@length:	; 1 bytes @ 0x5
  4813                           	global	i2recv_msg@qmsg
  4814  000085                     i2recv_msg@qmsg:	; 2 bytes @ 0x5
  4815  000085                     	ds   1
  4816                           	global	ToMainHigh_sendmsg@msgtype
  4817  000086                     ToMainHigh_sendmsg@msgtype:	; 1 bytes @ 0x6
  4818  000086                     	ds   1
  4819                           	global	?_FromMainLow_recvmsg
  4820  000087                     ?_FromMainLow_recvmsg:	; 1 bytes @ 0x7
  4821                           	global	?_FromMainHigh_recvmsg
  4822  000087                     ?_FromMainHigh_recvmsg:	; 1 bytes @ 0x7
  4823                           	global	FromMainLow_recvmsg@maxlength
  4824  000087                     FromMainLow_recvmsg@maxlength:	; 1 bytes @ 0x7
  4825                           	global	FromMainHigh_recvmsg@maxlength
  4826  000087                     FromMainHigh_recvmsg@maxlength:	; 1 bytes @ 0x7
  4827                           	global	ToMainHigh_sendmsg@data
  4828  000087                     ToMainHigh_sendmsg@data:	; 2 bytes @ 0x7
  4829  000087                     	ds   1
  4830                           	global	FromMainLow_recvmsg@msgtype
  4831  000088                     FromMainLow_recvmsg@msgtype:	; 2 bytes @ 0x8
  4832                           	global	FromMainHigh_recvmsg@msgtype
  4833  000088                     FromMainHigh_recvmsg@msgtype:	; 2 bytes @ 0x8
  4834  000088                     	ds   2
  4835                           	global	FromMainLow_recvmsg@data
  4836  00008A                     FromMainLow_recvmsg@data:	; 2 bytes @ 0xA
  4837                           	global	FromMainHigh_recvmsg@data
  4838  00008A                     FromMainHigh_recvmsg@data:	; 2 bytes @ 0xA
  4839  00008A                     	ds   2
  4840  00008C                     ??_timer0_int_handler:	; 0 bytes @ 0xC
  4841  00008C                     ??_i2c_slave_int_handler:	; 0 bytes @ 0xC
  4842  00008C                     	ds   2
  4843                           	global	timer0_int_handler@msgtype
  4844  00008E                     timer0_int_handler@msgtype:	; 2 bytes @ 0xE
  4845                           	global	i2c_slave_int_handler@data
  4846  00008E                     i2c_slave_int_handler@data:	; 10 bytes @ 0xE
  4847  00008E                     	ds   2
  4848                           	global	timer0_int_handler@length
  4849  000090                     timer0_int_handler@length:	; 2 bytes @ 0x10
  4850  000090                     	ds   2
  4851                           	global	timer0_int_handler@val
  4852  000092                     timer0_int_handler@val:	; 2 bytes @ 0x12
  4853  000092                     	ds   6
  4854                           	global	i2c_slave_int_handler@empty
  4855  000098                     i2c_slave_int_handler@empty:	; 4 bytes @ 0x18
  4856  000098                     	ds   4
  4857                           	global	i2c_slave_int_handler@error_buf
  4858  00009C                     i2c_slave_int_handler@error_buf:	; 3 bytes @ 0x1C
  4859  00009C                     	ds   3
  4860                           	global	i2c_slave_int_handler@data_written
  4861  00009F                     i2c_slave_int_handler@data_written:	; 1 bytes @ 0x1F
  4862  00009F                     	ds   1
  4863                           	global	i2c_slave_int_handler@overrun_error
  4864  0000A0                     i2c_slave_int_handler@overrun_error:	; 1 bytes @ 0x20
  4865  0000A0                     	ds   1
  4866                           	global	i2c_slave_int_handler@length
  4867  0000A1                     i2c_slave_int_handler@length:	; 2 bytes @ 0x21
  4868  0000A1                     	ds   2
  4869                           	global	i2c_slave_int_handler@i2c_data
  4870  0000A3                     i2c_slave_int_handler@i2c_data:	; 1 bytes @ 0x23
  4871  0000A3                     	ds   1
  4872                           	global	i2c_slave_int_handler@msgtype
  4873  0000A4                     i2c_slave_int_handler@msgtype:	; 1 bytes @ 0x24
  4874  0000A4                     	ds   1
  4875                           	global	i2c_slave_int_handler@msg_to_send
  4876  0000A5                     i2c_slave_int_handler@msg_to_send:	; 1 bytes @ 0x25
  4877  0000A5                     	ds   1
  4878                           	global	i2c_slave_int_handler@msg_ready
  4879  0000A6                     i2c_slave_int_handler@msg_ready:	; 1 bytes @ 0x26
  4880  0000A6                     	ds   1
  4881                           	global	i2c_slave_int_handler@data_read
  4882  0000A7                     i2c_slave_int_handler@data_read:	; 1 bytes @ 0x27
  4883  0000A7                     	ds   1
  4884  0000A8                     ??_InterruptHandlerHigh:	; 0 bytes @ 0x28
  4885  0000A8                     	ds   14
  4886                           	global	?_init_uart_recv
  4887  0000B6                     ?_init_uart_recv:	; 0 bytes @ 0x36
  4888                           	global	?_init_i2c
  4889  0000B6                     ?_init_i2c:	; 0 bytes @ 0x36
  4890                           	global	?_OpenTimer1
  4891  0000B6                     ?_OpenTimer1:	; 0 bytes @ 0x36
  4892                           	global	?_i2c_configure_slave
  4893  0000B6                     ?_i2c_configure_slave:	; 0 bytes @ 0x36
  4894                           	global	?_OpenUSART
  4895  0000B6                     ?_OpenUSART:	; 0 bytes @ 0x36
  4896                           	global	?_Delay1KTCYx
  4897  0000B6                     ?_Delay1KTCYx:	; 0 bytes @ 0x36
  4898                           	global	?_OpenADC
  4899  0000B6                     ?_OpenADC:	; 0 bytes @ 0x36
  4900                           	global	?_SetChanADC
  4901  0000B6                     ?_SetChanADC:	; 0 bytes @ 0x36
  4902  0000B6                     ??_enable_interrupts:	; 0 bytes @ 0x36
  4903                           	global	?_init_queue
  4904  0000B6                     ?_init_queue:	; 0 bytes @ 0x36
  4905                           	global	?_check_msg
  4906  0000B6                     ?_check_msg:	; 1 bytes @ 0x36
  4907                           	global	?_i2c_master_send
  4908  0000B6                     ?_i2c_master_send:	; 1 bytes @ 0x36
  4909                           	global	?_timer0_lthread
  4910  0000B6                     ?_timer0_lthread:	; 2 bytes @ 0x36
  4911                           	global	?_uart_lthread
  4912  0000B6                     ?_uart_lthread:	; 2 bytes @ 0x36
  4913                           	global	?_memcpy
  4914  0000B6                     ?_memcpy:	; 2 bytes @ 0x36
  4915                           	global	?_in_high_int
  4916  0000B6                     ?_in_high_int:	; 2 bytes @ 0x36
  4917                           	global	i2c_master_send@length
  4918  0000B6                     i2c_master_send@length:	; 1 bytes @ 0x36
  4919                           	global	i2c_configure_slave@addr
  4920  0000B6                     i2c_configure_slave@addr:	; 1 bytes @ 0x36
  4921                           	global	OpenADC@config
  4922  0000B6                     OpenADC@config:	; 1 bytes @ 0x36
  4923                           	global	SetChanADC@channel
  4924  0000B6                     SetChanADC@channel:	; 1 bytes @ 0x36
  4925                           	global	OpenTimer1@config
  4926  0000B6                     OpenTimer1@config:	; 1 bytes @ 0x36
  4927                           	global	OpenUSART@config
  4928  0000B6                     OpenUSART@config:	; 1 bytes @ 0x36
  4929                           	global	Delay1KTCYx@unit
  4930  0000B6                     Delay1KTCYx@unit:	; 1 bytes @ 0x36
  4931                           	global	init_queue@qptr
  4932  0000B6                     init_queue@qptr:	; 2 bytes @ 0x36
  4933                           	global	check_msg@qptr
  4934  0000B6                     check_msg@qptr:	; 2 bytes @ 0x36
  4935                           	global	init_i2c@ic
  4936  0000B6                     init_i2c@ic:	; 2 bytes @ 0x36
  4937                           	global	init_uart_recv@uc
  4938  0000B6                     init_uart_recv@uc:	; 2 bytes @ 0x36
  4939  0000B6                     timer0_lthread@tptr:	; 2 bytes @ 0x36
  4940  0000B6                     uart_lthread@uptr:	; 2 bytes @ 0x36
  4941                           	global	memcpy@d1
  4942  0000B6                     memcpy@d1:	; 2 bytes @ 0x36
  4943  0000B6                     	ds   1
  4944  0000B7                     ??_OpenTimer1:	; 0 bytes @ 0x37
  4945  0000B7                     ??_i2c_configure_slave:	; 0 bytes @ 0x37
  4946  0000B7                     ??_Delay1KTCYx:	; 0 bytes @ 0x37
  4947  0000B7                     ??_SetChanADC:	; 0 bytes @ 0x37
  4948                           	global	OpenADC@config2
  4949  0000B7                     OpenADC@config2:	; 1 bytes @ 0x37
  4950                           	global	i2c_master_send@msg
  4951  0000B7                     i2c_master_send@msg:	; 2 bytes @ 0x37
  4952                           	global	OpenUSART@spbrg
  4953  0000B7                     OpenUSART@spbrg:	; 2 bytes @ 0x37
  4954  0000B7                     	ds   1
  4955  0000B8                     ??_init_uart_recv:	; 0 bytes @ 0x38
  4956  0000B8                     ??_init_i2c:	; 0 bytes @ 0x38
  4957  0000B8                     ??_in_high_int:	; 0 bytes @ 0x38
  4958  0000B8                     ??_init_queue:	; 0 bytes @ 0x38
  4959  0000B8                     ??_check_msg:	; 0 bytes @ 0x38
  4960                           	global	?_in_low_int
  4961  0000B8                     ?_in_low_int:	; 2 bytes @ 0x38
  4962                           	global	OpenADC@portconfig
  4963  0000B8                     OpenADC@portconfig:	; 1 bytes @ 0x38
  4964  0000B8                     timer0_lthread@msgtype:	; 2 bytes @ 0x38
  4965                           	global	uart_lthread@msgtype
  4966  0000B8                     uart_lthread@msgtype:	; 2 bytes @ 0x38
  4967                           	global	memcpy@s1
  4968  0000B8                     memcpy@s1:	; 2 bytes @ 0x38
  4969  0000B8                     	ds   1
  4970  0000B9                     ??_OpenUSART:	; 0 bytes @ 0x39
  4971  0000B9                     ??_OpenADC:	; 0 bytes @ 0x39
  4972  0000B9                     ??_i2c_master_send:	; 0 bytes @ 0x39
  4973                           	global	init_queue@i
  4974  0000B9                     init_queue@i:	; 1 bytes @ 0x39
  4975  0000B9                     	ds   1
  4976  0000BA                     ??_init_queues:	; 0 bytes @ 0x3A
  4977  0000BA                     ??_in_low_int:	; 0 bytes @ 0x3A
  4978                           	global	?_in_main
  4979  0000BA                     ?_in_main:	; 2 bytes @ 0x3A
  4980  0000BA                     timer0_lthread@length:	; 2 bytes @ 0x3A
  4981                           	global	uart_lthread@length
  4982  0000BA                     uart_lthread@length:	; 2 bytes @ 0x3A
  4983                           	global	memcpy@n
  4984  0000BA                     memcpy@n:	; 2 bytes @ 0x3A
  4985  0000BA                     	ds   1
  4986                           	global	?_init_timer1_lthread
  4987  0000BB                     ?_init_timer1_lthread:	; 0 bytes @ 0x3B
  4988                           	global	?_timer1_lthread
  4989  0000BB                     ?_timer1_lthread:	; 2 bytes @ 0x3B
  4990                           	global	init_timer1_lthread@tptr
  4991  0000BB                     init_timer1_lthread@tptr:	; 2 bytes @ 0x3B
  4992                           	global	timer1_lthread@tptr
  4993  0000BB                     timer1_lthread@tptr:	; 2 bytes @ 0x3B
  4994  0000BB                     	ds   1
  4995  0000BC                     ??_block_on_To_msgqueues:	; 0 bytes @ 0x3C
  4996  0000BC                     ??_memcpy:	; 0 bytes @ 0x3C
  4997  0000BC                     ??_in_main:	; 0 bytes @ 0x3C
  4998                           	global	timer0_lthread@msgbuffer
  4999  0000BC                     timer0_lthread@msgbuffer:	; 2 bytes @ 0x3C
  5000                           	global	uart_lthread@msgbuffer
  5001  0000BC                     uart_lthread@msgbuffer:	; 2 bytes @ 0x3C
  5002                           	global	memcpy@d
  5003  0000BC                     memcpy@d:	; 2 bytes @ 0x3C
  5004  0000BC                     	ds   1
  5005  0000BD                     ??_init_timer1_lthread:	; 0 bytes @ 0x3D
  5006  0000BD                     timer1_lthread@msgtype:	; 2 bytes @ 0x3D
  5007  0000BD                     	ds   1
  5008  0000BE                     ??_timer0_lthread:	; 0 bytes @ 0x3E
  5009  0000BE                     ??_uart_lthread:	; 0 bytes @ 0x3E
  5010                           	global	timer0_lthread@msgval
  5011  0000BE                     timer0_lthread@msgval:	; 2 bytes @ 0x3E
  5012                           	global	memcpy@s
  5013  0000BE                     memcpy@s:	; 2 bytes @ 0x3E
  5014  0000BE                     	ds   1
  5015  0000BF                     timer1_lthread@length:	; 2 bytes @ 0x3F
  5016  0000BF                     	ds   1
  5017  0000C0                     ??_send_msg:	; 0 bytes @ 0x40
  5018  0000C0                     ??_recv_msg:	; 0 bytes @ 0x40
  5019  0000C0                     	ds   1
  5020  0000C1                     ??_FromMainLow_sendmsg:	; 0 bytes @ 0x41
  5021                           	global	timer1_lthread@msgbuffer
  5022  0000C1                     timer1_lthread@msgbuffer:	; 2 bytes @ 0x41
  5023  0000C1                     	ds   1
  5024  0000C2                     ??_ToMainHigh_recvmsg:	; 0 bytes @ 0x42
  5025  0000C2                     ??_ToMainLow_recvmsg:	; 0 bytes @ 0x42
  5026  0000C2                     	ds   1
  5027  0000C3                     ??_main:	; 0 bytes @ 0x43
  5028  0000C3                     	ds   1
  5029                           psect	cstackCOMRAM,class=COMRAM,space=1
  5030                           global __pcstackCOMRAM
  5031  000001                     __pcstackCOMRAM:
  5032  000001                     ?_i2c_int_handler:	; 0 bytes @ 0x0
  5033  000001                     ?_timer0_int_handler:	; 0 bytes @ 0x0
  5034  000001                     ?_SleepIfOkay:	; 0 bytes @ 0x0
  5035  000001                     ?_timer1_int_handler:	; 0 bytes @ 0x0
  5036  000001                     ?_adc_int_handler:	; 0 bytes @ 0x0
  5037  000001                     ?_uart_recv_int_handler:	; 0 bytes @ 0x0
  5038  000001                     ?_init_queues:	; 0 bytes @ 0x0
  5039  000001                     ?_block_on_To_msgqueues:	; 0 bytes @ 0x0
  5040  000001                     ?_i2c_slave_int_handler:	; 0 bytes @ 0x0
  5041  000001                     ?_i2c_master_int_handler:	; 0 bytes @ 0x0
  5042  000001                     ??_ReadUSART:	; 0 bytes @ 0x0
  5043                           	global	?_WriteTimer1
  5044  000001                     ?_WriteTimer1:	; 0 bytes @ 0x0
  5045  000001                     ?_enable_interrupts:	; 0 bytes @ 0x0
  5046  000001                     ?_InterruptHandlerHigh:	; 0 bytes @ 0x0
  5047  000001                     ?_InterruptHandlerLow:	; 0 bytes @ 0x0
  5048  000001                     ?_main:	; 0 bytes @ 0x0
  5049  000001                     ?_enter_sleep_mode:	; 0 bytes @ 0x0
  5050  000001                     ?_ReadUSART:	; 1 bytes @ 0x0
  5051                           	global	?_ReadTimer1
  5052  000001                     ?_ReadTimer1:	; 2 bytes @ 0x0
  5053                           	global	?_ReadADC
  5054  000001                     ?_ReadADC:	; 2 bytes @ 0x0
  5055                           	global	?i1_memcpy
  5056  000001                     ?i1_memcpy:	; 2 bytes @ 0x0
  5057                           	global	ReadUSART@data
  5058  000001                     ReadUSART@data:	; 1 bytes @ 0x0
  5059                           	global	WriteTimer1@timer1
  5060  000001                     WriteTimer1@timer1:	; 2 bytes @ 0x0
  5061                           	global	i1memcpy@d1
  5062  000001                     i1memcpy@d1:	; 2 bytes @ 0x0
  5063  000001                     	ds   2
  5064  000003                     ??_ReadTimer1:	; 0 bytes @ 0x2
  5065  000003                     ??_WriteTimer1:	; 0 bytes @ 0x2
  5066  000003                     ??_ReadADC:	; 0 bytes @ 0x2
  5067                           	global	ReadTimer1@timer
  5068  000003                     ReadTimer1@timer:	; 2 bytes @ 0x2
  5069                           	global	WriteTimer1@timer
  5070  000003                     WriteTimer1@timer:	; 2 bytes @ 0x2
  5071                           	global	i1memcpy@s1
  5072  000003                     i1memcpy@s1:	; 2 bytes @ 0x2
  5073  000003                     	ds   2
  5074                           	global	i1memcpy@n
  5075  000005                     i1memcpy@n:	; 2 bytes @ 0x4
  5076  000005                     	ds   2
  5077  000007                     ??i1_memcpy:	; 0 bytes @ 0x6
  5078                           	global	i1memcpy@d
  5079  000007                     i1memcpy@d:	; 2 bytes @ 0x6
  5080  000007                     	ds   2
  5081                           	global	i1memcpy@s
  5082  000009                     i1memcpy@s:	; 2 bytes @ 0x8
  5083  000009                     	ds   2
  5084                           	global	?i1_send_msg
  5085  00000B                     ?i1_send_msg:	; 1 bytes @ 0xA
  5086                           	global	i1send_msg@qptr
  5087  00000B                     i1send_msg@qptr:	; 2 bytes @ 0xA
  5088  00000B                     	ds   2
  5089                           	global	i1send_msg@length
  5090  00000D                     i1send_msg@length:	; 1 bytes @ 0xC
  5091  00000D                     	ds   1
  5092                           	global	i1send_msg@msgtype
  5093  00000E                     i1send_msg@msgtype:	; 1 bytes @ 0xD
  5094  00000E                     	ds   1
  5095                           	global	i1send_msg@data
  5096  00000F                     i1send_msg@data:	; 2 bytes @ 0xE
  5097  00000F                     	ds   2
  5098  000011                     ??i1_send_msg:	; 0 bytes @ 0x10
  5099  000011                     	ds   1
  5100                           	global	i1send_msg@tlength
  5101  000012                     i1send_msg@tlength:	; 2 bytes @ 0x11
  5102  000012                     	ds   2
  5103                           	global	i1send_msg@slot
  5104  000014                     i1send_msg@slot:	; 1 bytes @ 0x13
  5105  000014                     	ds   1
  5106                           	global	i1send_msg@qmsg
  5107  000015                     i1send_msg@qmsg:	; 2 bytes @ 0x14
  5108  000015                     	ds   2
  5109                           	global	?_ToMainLow_sendmsg
  5110  000017                     ?_ToMainLow_sendmsg:	; 1 bytes @ 0x16
  5111                           	global	ToMainLow_sendmsg@length
  5112  000017                     ToMainLow_sendmsg@length:	; 1 bytes @ 0x16
  5113  000017                     	ds   1
  5114                           	global	ToMainLow_sendmsg@msgtype
  5115  000018                     ToMainLow_sendmsg@msgtype:	; 1 bytes @ 0x17
  5116  000018                     	ds   1
  5117                           	global	ToMainLow_sendmsg@data
  5118  000019                     ToMainLow_sendmsg@data:	; 2 bytes @ 0x18
  5119  000019                     	ds   2
  5120  00001B                     ??_timer1_int_handler:	; 0 bytes @ 0x1A
  5121  00001B                     ??_adc_int_handler:	; 0 bytes @ 0x1A
  5122  00001B                     ??_uart_recv_int_handler:	; 0 bytes @ 0x1A
  5123  00001B                     ??_ToMainLow_sendmsg:	; 0 bytes @ 0x1A
  5124  00001B                     	ds   2
  5125                           	global	timer1_int_handler@temp
  5126  00001D                     timer1_int_handler@temp:	; 2 bytes @ 0x1C
  5127                           	global	adc_int_handler@message
  5128  00001D                     adc_int_handler@message:	; 4 bytes @ 0x1C
  5129  00001D                     	ds   2
  5130                           	global	timer1_int_handler@result
  5131  00001F                     timer1_int_handler@result:	; 2 bytes @ 0x1E
  5132  00001F                     	ds   2
  5133                           	global	adc_int_handler@value
  5134  000021                     adc_int_handler@value:	; 2 bytes @ 0x20
  5135  000021                     	ds   2
  5136  000023                     ??_InterruptHandlerLow:	; 0 bytes @ 0x22
  5137  000023                     	ds   17
  5138  000034                     ??_i2c_master_int_handler:	; 0 bytes @ 0x33
  5139                           	global	?_WriteTimer0
  5140  000034                     ?_WriteTimer0:	; 0 bytes @ 0x33
  5141  000034                     ??_enter_sleep_mode:	; 0 bytes @ 0x33
  5142                           	global	?_start_i2c_slave_reply
  5143  000034                     ?_start_i2c_slave_reply:	; 0 bytes @ 0x33
  5144                           	global	?_handle_start
  5145  000034                     ?_handle_start:	; 0 bytes @ 0x33
  5146                           	global	?i2_check_msg
  5147  000034                     ?i2_check_msg:	; 1 bytes @ 0x33
  5148                           	global	?i2_in_high_int
  5149  000034                     ?i2_in_high_int:	; 2 bytes @ 0x33
  5150                           	global	?i2_memcpy
  5151  000034                     ?i2_memcpy:	; 2 bytes @ 0x33
  5152                           	global	start_i2c_slave_reply@length
  5153  000034                     start_i2c_slave_reply@length:	; 1 bytes @ 0x33
  5154                           	global	handle_start@data_read
  5155  000034                     handle_start@data_read:	; 1 bytes @ 0x33
  5156                           	global	WriteTimer0@timer0
  5157  000034                     WriteTimer0@timer0:	; 2 bytes @ 0x33
  5158                           	global	i2check_msg@qptr
  5159  000034                     i2check_msg@qptr:	; 2 bytes @ 0x33
  5160                           	global	i2memcpy@d1
  5161  000034                     i2memcpy@d1:	; 2 bytes @ 0x33
  5162  000034                     	ds   1
  5163  000035                     ??_handle_start:	; 0 bytes @ 0x34
  5164                           	global	start_i2c_slave_reply@msg
  5165  000035                     start_i2c_slave_reply@msg:	; 2 bytes @ 0x34
  5166  000035                     	ds   1
  5167  000036                     ??_WriteTimer0:	; 0 bytes @ 0x35
  5168  000036                     ??i2_in_high_int:	; 0 bytes @ 0x35
  5169  000036                     ??i2_check_msg:	; 0 bytes @ 0x35
  5170                           	global	?i2_in_low_int
  5171  000036                     ?i2_in_low_int:	; 2 bytes @ 0x35
  5172                           	global	WriteTimer0@timer
  5173  000036                     WriteTimer0@timer:	; 2 bytes @ 0x35
  5174                           	global	i2memcpy@s1
  5175  000036                     i2memcpy@s1:	; 2 bytes @ 0x35
  5176  000036                     	ds   1
  5177  000037                     ??_start_i2c_slave_reply:	; 0 bytes @ 0x36
  5178  000037                     	ds   1
  5179  000038                     ??_SleepIfOkay:	; 0 bytes @ 0x37
  5180  000038                     ??i2_in_low_int:	; 0 bytes @ 0x37
  5181                           	global	i2memcpy@n
  5182  000038                     i2memcpy@n:	; 2 bytes @ 0x37
  5183  000038                     	ds   2
  5184  00003A                     ??i2_memcpy:	; 0 bytes @ 0x39
  5185                           	global	i2memcpy@d
  5186  00003A                     i2memcpy@d:	; 2 bytes @ 0x39
  5187  00003A                     	ds   2
  5188                           	global	i2memcpy@s
  5189  00003C                     i2memcpy@s:	; 2 bytes @ 0x3B
  5190  00003C                     	ds   2
  5191                           	global	?i2_send_msg
  5192  00003E                     ?i2_send_msg:	; 1 bytes @ 0x3D
  5193                           	global	?i2_recv_msg
  5194  00003E                     ?i2_recv_msg:	; 1 bytes @ 0x3D
  5195                           	global	i2send_msg@qptr
  5196  00003E                     i2send_msg@qptr:	; 2 bytes @ 0x3D
  5197                           	global	i2recv_msg@qptr
  5198  00003E                     i2recv_msg@qptr:	; 2 bytes @ 0x3D
  5199  00003E                     	ds   2
  5200                           	global	i2send_msg@length
  5201  000040                     i2send_msg@length:	; 1 bytes @ 0x3F
  5202                           	global	i2recv_msg@maxlength
  5203  000040                     i2recv_msg@maxlength:	; 1 bytes @ 0x3F
  5204  000040                     	ds   1
  5205                           	global	i2send_msg@msgtype
  5206  000041                     i2send_msg@msgtype:	; 1 bytes @ 0x40
  5207                           	global	i2recv_msg@msgtype
  5208  000041                     i2recv_msg@msgtype:	; 2 bytes @ 0x40
  5209  000041                     	ds   1
  5210                           	global	i2send_msg@data
  5211  000042                     i2send_msg@data:	; 2 bytes @ 0x41
  5212  000042                     	ds   1
  5213                           	global	i2recv_msg@data
  5214  000043                     i2recv_msg@data:	; 2 bytes @ 0x42
  5215  000043                     	ds   1
  5216  000044                     ??i2_send_msg:	; 0 bytes @ 0x43
  5217  000044                     	ds   1
  5218  000045                     ??_i2c_int_handler:	; 0 bytes @ 0x44
  5219  000045                     ??_ToMainHigh_sendmsg:	; 0 bytes @ 0x44
  5220  000045                     ??_FromMainLow_recvmsg:	; 0 bytes @ 0x44
  5221  000045                     ??_FromMainHigh_recvmsg:	; 0 bytes @ 0x44
  5222                           ;!
  5223                           ;!Data Sizes:
  5224                           ;!    Strings     0
  5225                           ;!    Constant    0
  5226                           ;!    Data        2
  5227                           ;!    BSS         224
  5228                           ;!    Persistent  4
  5229                           ;!    Stack       0
  5230                           ;!
  5231                           ;!Auto Spaces:
  5232                           ;!    Space          Size  Autos    Used
  5233                           ;!    COMRAM          127     68      76
  5234                           ;!    BANK0           128     68      74
  5235                           ;!    BANK1           256     70     232
  5236                           ;!    BANK2           256      0      54
  5237                           ;!    BANK3           256      0       0
  5238                           
  5239                           ;!
  5240                           ;!Pointer List with Targets:
  5241                           ;!
  5242                           ;!    ?_ReadTimer1	unsigned int  size(2) Largest target is 2
  5243                           ;!		 -> WriteTimer1@timer(COMRAM[2]), ReadTimer1@timer(COMRAM[2]), 
  5244                           ;!
  5245                           ;!    ?_ReadADC	int  size(2) Largest target is 0
  5246                           ;!
  5247                           ;!    ?_memcpy	PTR void  size(2) Largest target is 54
  5248                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@data(BANK0[10]), FromMai
                                 nHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
  5249                           ;!		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 
  5250                           ;!
  5251                           ;!    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
  5252                           ;!		 -> main@uthread_data(BANK1[2]), 
  5253                           ;!
  5254                           ;!    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
  5255                           ;!		 -> main@t0thread_data(BANK1[2]), 
  5256                           ;!
  5257                           ;!    ?_in_high_int	int  size(2) Largest target is 0
  5258                           ;!
  5259                           ;!    memcpy@d1	PTR void  size(2) Largest target is 54
  5260                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@data(BANK0[10]), FromMai
                                 nHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
  5261                           ;!		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 
  5262                           ;!
  5263                           ;!    memcpy@d	PTR unsigned char  size(2) Largest target is 54
  5264                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@data(BANK0[10]), FromMai
                                 nHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
  5265                           ;!		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 
  5266                           ;!
  5267                           ;!    memcpy@s1	PTR const void  size(2) Largest target is 54
  5268                           ;!		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), timer0
                                 _int_handler@val(BANK0[2]), NULL(NULL[0]), 
  5269                           ;!		 -> i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[54]), FromMainL
                                 ow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
  5270                           ;!		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), main@uc(BANK1[5]), 
  5271                           ;!
  5272                           ;!    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
  5273                           ;!		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), timer0
                                 _int_handler@val(BANK0[2]), NULL(NULL[0]), 
  5274                           ;!		 -> i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[54]), FromMainL
                                 ow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
  5275                           ;!		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), main@uc(BANK1[5]), 
  5276                           ;!
  5277                           ;!    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
  5278                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5279                           ;!
  5280                           ;!    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
  5281                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5282                           ;!
  5283                           ;!    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
  5284                           ;!		 -> main@t1thread_data(BANK1[2]), 
  5285                           ;!
  5286                           ;!    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target 
                                 is 2
  5287                           ;!		 -> main@t1thread_data(BANK1[2]), 
  5288                           ;!
  5289                           ;!    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
  5290                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5291                           ;!
  5292                           ;!    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
  5293                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5294                           ;!
  5295                           ;!    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
  5296                           ;!		 -> main@uc(BANK1[5]), 
  5297                           ;!
  5298                           ;!    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
  5299                           ;!		 -> NULL(NULL[0]), main@uc(BANK1[5]), 
  5300                           ;!
  5301                           ;!    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
  5302                           ;!		 -> main@ic(BANK1[28]), 
  5303                           ;!
  5304                           ;!    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 10
  5305                           ;!		 -> i2c_slave_int_handler@empty(BANK0[4]), i2c_slave_int_handler@data(BANK0[10]), 
  5306                           ;!
  5307                           ;!    i2c_master_send@msg	PTR unsigned char  size(2) Largest target is 2
  5308                           ;!		 -> timer1_lthread@toSend(BANK1[2]), 
  5309                           ;!
  5310                           ;!    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
  5311                           ;!		 -> NULL(NULL[0]), main@ic(BANK1[28]), 
  5312                           ;!
  5313                           ;!    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
  5314                           ;!		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
  5315                           ;!
  5316                           ;!    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
  5317                           ;!		 -> timer0_int_handler@val(BANK0[2]), 
  5318                           ;!
  5319                           ;!    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1023
  5320                           ;!		 -> RAM(DATA[1023]), 
  5321                           ;!
  5322                           ;!    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 10
  5323                           ;!		 -> i2c_slave_int_handler@data(BANK0[10]), 
  5324                           ;!
  5325                           ;!    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
  5326                           ;!		 -> i2c_slave_int_handler@msgtype(BANK0[1]), 
  5327                           ;!
  5328                           ;!    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 11
  5329                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5330                           ;!
  5331                           ;!    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
  5332                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5333                           ;!
  5334                           ;!    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
  5335                           ;!		 -> main@msgtype(BANK1[1]), 
  5336                           ;!
  5337                           ;!    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 3
  5338                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@error_buf(BANK0[3]), 
  5339                           ;!
  5340                           ;!    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
  5341                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5342                           ;!
  5343                           ;!    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
  5344                           ;!		 -> main@msgtype(BANK1[1]), 
  5345                           ;!
  5346                           ;!    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
  5347                           ;!		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), NULL(N
                                 ULL[0]), main@uc(BANK1[5]), 
  5348                           ;!
  5349                           ;!    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1023
  5350                           ;!		 -> RAM(DATA[1023]), i2c_slave_int_handler@msgtype(BANK0[1]), main@msgtype(BANK1[1])
                                 , 
  5351                           ;!
  5352                           ;!    recv_msg@data	PTR void  size(2) Largest target is 11
  5353                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@data(BANK0[10]), main@ms
                                 gbuffer(BANK1[11]), 
  5354                           ;!
  5355                           ;!    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
  5356                           ;!		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK1[54]), 
  5357                           ;!
  5358                           ;!    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
  5359                           ;!		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK1[54]), 
  5360                           ;!
  5361                           ;!    sp__memcpy	PTR void  size(2) Largest target is 54
  5362                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@data(BANK0[10]), FromMai
                                 nHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
  5363                           ;!		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 
  5364                           ;!
  5365                           ;!    send_msg@data	PTR void  size(2) Largest target is 11
  5366                           ;!		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), timer0
                                 _int_handler@val(BANK0[2]), NULL(NULL[0]), 
  5367                           ;!		 -> i2c_slave_int_handler@error_buf(BANK0[3]), main@msgbuffer(BANK1[11]), main@uc(BA
                                 NK1[5]), 
  5368                           ;!
  5369                           ;!    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
  5370                           ;!		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK1[54]), 
  5371                           ;!
  5372                           ;!    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
  5373                           ;!		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK1[54]), 
  5374                           ;!
  5375                           ;!    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
  5376                           ;!		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK1[54]), 
  5377                           ;!
  5378                           
  5379                           
  5380                           ;!
  5381                           ;!Critical Paths under _main in COMRAM
  5382                           ;!
  5383                           ;!    None.
  5384                           ;!
  5385                           ;!Critical Paths under _InterruptHandlerHigh in COMRAM
  5386                           ;!
  5387                           ;!    _SleepIfOkay->i2_in_low_int
  5388                           ;!    _FromMainHigh_recvmsg->i2_recv_msg
  5389                           ;!    _ToMainHigh_sendmsg->i2_send_msg
  5390                           ;!    _FromMainLow_recvmsg->i2_recv_msg
  5391                           ;!    i2_in_low_int->i2_in_high_int
  5392                           ;!    i2_send_msg->i2_memcpy
  5393                           ;!    i2_recv_msg->i2_memcpy
  5394                           ;!    _InterruptHandlerLow->_adc_int_handler
  5395                           ;!    _timer1_int_handler->_ToMainLow_sendmsg
  5396                           ;!    _adc_int_handler->_ToMainLow_sendmsg
  5397                           ;!    _uart_recv_int_handler->_ToMainLow_sendmsg
  5398                           ;!    _ToMainLow_sendmsg->i1_send_msg
  5399                           ;!    i1_send_msg->i1_memcpy
  5400                           ;!
  5401                           ;!Critical Paths under _main in BANK0
  5402                           ;!
  5403                           ;!    _main->_timer1_lthread
  5404                           ;!    _init_timer1_lthread->_OpenADC
  5405                           ;!    _init_queues->_init_queue
  5406                           ;!    _block_on_To_msgqueues->_in_main
  5407                           ;!    _in_main->_in_low_int
  5408                           ;!    _in_low_int->_in_high_int
  5409                           ;!    _ToMainHigh_recvmsg->_recv_msg
  5410                           ;!    _ToMainLow_recvmsg->_recv_msg
  5411                           ;!    _timer1_lthread->_i2c_master_send
  5412                           ;!    _FromMainLow_sendmsg->_send_msg
  5413                           ;!    _send_msg->_memcpy
  5414                           ;!    _recv_msg->_memcpy
  5415                           ;!
  5416                           ;!Critical Paths under _InterruptHandlerHigh in BANK0
  5417                           ;!
  5418                           ;!    _i2c_int_handler->_i2c_slave_int_handler
  5419                           ;!    _timer0_int_handler->_FromMainHigh_recvmsg
  5420                           ;!    _FromMainHigh_recvmsg->i2_recv_msg
  5421                           ;!    _i2c_slave_int_handler->_FromMainLow_recvmsg
  5422                           ;!    _ToMainHigh_sendmsg->i2_send_msg
  5423                           ;!    _FromMainLow_recvmsg->i2_recv_msg
  5424                           ;!
  5425                           ;!Critical Paths under _main in BANK1
  5426                           ;!
  5427                           ;!    _main->_ToMainHigh_recvmsg
  5428                           ;!    _main->_ToMainLow_recvmsg
  5429                           ;!    _ToMainHigh_recvmsg->_recv_msg
  5430                           ;!    _ToMainLow_recvmsg->_recv_msg
  5431                           ;!    _FromMainLow_sendmsg->_send_msg
  5432                           ;!
  5433                           ;!Critical Paths under _InterruptHandlerHigh in BANK1
  5434                           ;!
  5435                           ;!    None.
  5436                           ;!
  5437                           ;!Critical Paths under _main in BANK2
  5438                           ;!
  5439                           ;!    None.
  5440                           ;!
  5441                           ;!Critical Paths under _InterruptHandlerHigh in BANK2
  5442                           ;!
  5443                           ;!    None.
  5444                           ;!
  5445                           ;!Critical Paths under _main in BANK3
  5446                           ;!
  5447                           ;!    None.
  5448                           ;!
  5449                           ;!Critical Paths under _InterruptHandlerHigh in BANK3
  5450                           ;!
  5451                           ;!    None.
  5452                           
  5453 ;;
  5454 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  5455 ;;
  5456                           
  5457                           ;!
  5458                           ;!Call Graph Tables:
  5459                           ;!
  5460                           ;! ---------------------------------------------------------------------------------
  5461                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  5462                           ;! ---------------------------------------------------------------------------------
  5463                           ;! (0) _main                                                56    56      0    4821
  5464                           ;!                                             67 BANK0      1     1      0
  5465                           ;!                                             17 BANK1     53    53      0
  5466                           ;!                     _init_uart_recv
  5467                           ;!                           _init_i2c
  5468                           ;!                _init_timer1_lthread
  5469                           ;!                        _init_queues
  5470                           ;!                         _OpenTimer1
  5471                           ;!                  _enable_interrupts
  5472                           ;!                _i2c_configure_slave
  5473                           ;!                          _OpenUSART
  5474                           ;!              _block_on_To_msgqueues
  5475                           ;!                 _ToMainHigh_recvmsg
  5476                           ;!                     _timer0_lthread
  5477                           ;!                  _ToMainLow_recvmsg
  5478                           ;!                     _timer1_lthread
  5479                           ;!                _FromMainLow_sendmsg
  5480                           ;!                       _uart_lthread
  5481                           ;! ---------------------------------------------------------------------------------
  5482                           ;! (1) _enable_interrupts                                    0     0      0       0
  5483                           ;! ---------------------------------------------------------------------------------
  5484                           ;! (1) _init_uart_recv                                       2     0      2      22
  5485                           ;!                                             54 BANK0      2     0      2
  5486                           ;! ---------------------------------------------------------------------------------
  5487                           ;! (1) _init_i2c                                             2     0      2      22
  5488                           ;!                                             54 BANK0      2     0      2
  5489                           ;! ---------------------------------------------------------------------------------
  5490                           ;! (1) _init_timer1_lthread                                  5     3      2     198
  5491                           ;!                                             59 BANK0      5     3      2
  5492                           ;!                            _OpenADC
  5493                           ;!                         _SetChanADC
  5494                           ;! ---------------------------------------------------------------------------------
  5495                           ;! (1) _init_queues                                          1     1      0     134
  5496                           ;!                                             58 BANK0      1     1      0
  5497                           ;!                         _init_queue
  5498                           ;! ---------------------------------------------------------------------------------
  5499                           ;! (1) _OpenTimer1                                           1     0      1      66
  5500                           ;!                                             54 BANK0      1     0      1
  5501                           ;! ---------------------------------------------------------------------------------
  5502                           ;! (1) _i2c_configure_slave                                  2     1      1      22
  5503                           ;!                                             54 BANK0      2     1      1
  5504                           ;! ---------------------------------------------------------------------------------
  5505                           ;! (1) _OpenUSART                                            3     0      3     220
  5506                           ;!                                             54 BANK0      3     0      3
  5507                           ;! ---------------------------------------------------------------------------------
  5508                           ;! (1) _block_on_To_msgqueues                                1     1      0      66
  5509                           ;!                                             60 BANK0      1     1      0
  5510                           ;!                            _in_main
  5511                           ;!                          _check_msg
  5512                           ;!                        _Delay1KTCYx
  5513                           ;! ---------------------------------------------------------------------------------
  5514                           ;! (2) _in_main                                              2     0      2       0
  5515                           ;!                                             58 BANK0      2     0      2
  5516                           ;!                         _in_low_int
  5517                           ;!                        _in_high_int
  5518                           ;! ---------------------------------------------------------------------------------
  5519                           ;! (3) _in_low_int                                           2     0      2       0
  5520                           ;!                                             56 BANK0      2     0      2
  5521                           ;!                        _in_high_int
  5522                           ;! ---------------------------------------------------------------------------------
  5523                           ;! (3) _in_high_int                                          2     0      2       0
  5524                           ;!                                             54 BANK0      2     0      2
  5525                           ;! ---------------------------------------------------------------------------------
  5526                           ;! (1) _ToMainHigh_recvmsg                                   5     0      5     772
  5527                           ;!                                             12 BANK1      5     0      5
  5528                           ;!                           _recv_msg
  5529                           ;! ---------------------------------------------------------------------------------
  5530                           ;! (1) _timer0_lthread                                      10     2      8      23
  5531                           ;!                                             54 BANK0     10     2      8
  5532                           ;! ---------------------------------------------------------------------------------
  5533                           ;! (1) _ToMainLow_recvmsg                                    5     0      5     772
  5534                           ;!                                             12 BANK1      5     0      5
  5535                           ;!                           _recv_msg
  5536                           ;! ---------------------------------------------------------------------------------
  5537                           ;! (1) _timer1_lthread                                      12     4      8     161
  5538                           ;!                                             59 BANK0      8     0      8
  5539                           ;!                                              0 BANK1      4     4      0
  5540                           ;!                    _i2c_master_send
  5541                           ;! ---------------------------------------------------------------------------------
  5542                           ;! (1) _FromMainLow_sendmsg                                  4     0      4     741
  5543                           ;!                                             11 BANK1      4     0      4
  5544                           ;!                           _send_msg
  5545                           ;! ---------------------------------------------------------------------------------
  5546                           ;! (1) _uart_lthread                                         8     0      8      88
  5547                           ;!                                             54 BANK0      8     0      8
  5548                           ;! ---------------------------------------------------------------------------------
  5549                           ;! (2) _init_queue                                           4     2      2     134
  5550                           ;!                                             54 BANK0      4     2      2
  5551                           ;! ---------------------------------------------------------------------------------
  5552                           ;! (2) _send_msg                                            12     6      6     648
  5553                           ;!                                             64 BANK0      1     1      0
  5554                           ;!                                              0 BANK1     11     5      6
  5555                           ;!                             _memcpy
  5556                           ;! ---------------------------------------------------------------------------------
  5557                           ;! (2) _recv_msg                                            14     7      7     679
  5558                           ;!                                             64 BANK0      2     2      0
  5559                           ;!                                              0 BANK1     12     5      7
  5560                           ;!                             _memcpy
  5561                           ;! ---------------------------------------------------------------------------------
  5562                           ;! (3) _memcpy                                              10     4      6     174
  5563                           ;!                                             54 BANK0     10     4      6
  5564                           ;! ---------------------------------------------------------------------------------
  5565                           ;! (2) _check_msg                                            3     1      2      44
  5566                           ;!                                             54 BANK0      3     1      2
  5567                           ;! ---------------------------------------------------------------------------------
  5568                           ;! (2) _Delay1KTCYx                                          1     0      1      22
  5569                           ;!                                             54 BANK0      1     0      1
  5570                           ;! ---------------------------------------------------------------------------------
  5571                           ;! (2) _i2c_master_send                                      5     2      3      62
  5572                           ;!                                             54 BANK0      5     2      3
  5573                           ;! ---------------------------------------------------------------------------------
  5574                           ;! (2) _OpenADC                                              5     2      3     154
  5575                           ;!                                             54 BANK0      5     2      3
  5576                           ;! ---------------------------------------------------------------------------------
  5577                           ;! (2) _SetChanADC                                           2     1      1      22
  5578                           ;!                                             54 BANK0      2     1      1
  5579                           ;! ---------------------------------------------------------------------------------
  5580                           ;! Estimated maximum stack depth 3
  5581                           ;! ---------------------------------------------------------------------------------
  5582                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  5583                           ;! ---------------------------------------------------------------------------------
  5584                           ;! (5) _InterruptHandlerLow                                 17    17      0    4980
  5585                           ;!                                             34 COMRAM    17    17      0
  5586                           ;!                 _timer1_int_handler
  5587                           ;!                    _adc_int_handler
  5588                           ;!              _uart_recv_int_handler
  5589                           ;! ---------------------------------------------------------------------------------
  5590                           ;! (6) _timer1_int_handler                                   6     6      0    1688
  5591                           ;!                                             26 COMRAM     6     6      0
  5592                           ;!                         _ReadTimer1
  5593                           ;!                  _ToMainLow_sendmsg
  5594                           ;!                        _WriteTimer1
  5595                           ;! ---------------------------------------------------------------------------------
  5596                           ;! (6) _adc_int_handler                                      8     8      0    1707
  5597                           ;!                                             26 COMRAM     8     8      0
  5598                           ;!                            _ReadADC
  5599                           ;!                  _ToMainLow_sendmsg
  5600                           ;! ---------------------------------------------------------------------------------
  5601                           ;! (6) _uart_recv_int_handler                                2     2      0    1585
  5602                           ;!                                             26 COMRAM     2     2      0
  5603                           ;!                          _ReadUSART
  5604                           ;!                  _ToMainLow_sendmsg
  5605                           ;! ---------------------------------------------------------------------------------
  5606                           ;! (7) _ToMainLow_sendmsg                                    4     0      4    1562
  5607                           ;!                                             22 COMRAM     4     0      4
  5608                           ;!                         i1_send_msg
  5609                           ;! ---------------------------------------------------------------------------------
  5610                           ;! (7) _ReadUSART                                            1     1      0      23
  5611                           ;!                                              0 COMRAM     1     1      0
  5612                           ;! ---------------------------------------------------------------------------------
  5613                           ;! (7) _ReadTimer1                                           4     2      2      30
  5614                           ;!                                              0 COMRAM     4     2      2
  5615                           ;! ---------------------------------------------------------------------------------
  5616                           ;! (7) _WriteTimer1                                          4     2      2      45
  5617                           ;!                                              0 COMRAM     4     2      2
  5618                           ;! ---------------------------------------------------------------------------------
  5619                           ;! (7) _ReadADC                                              2     0      2       0
  5620                           ;!                                              0 COMRAM     2     0      2
  5621                           ;! ---------------------------------------------------------------------------------
  5622                           ;! (8) i1_send_msg                                          12     6      6    1496
  5623                           ;!                                             10 COMRAM    12     6      6
  5624                           ;!                           i1_memcpy
  5625                           ;! ---------------------------------------------------------------------------------
  5626                           ;! (9) i1_memcpy                                            10     4      6     395
  5627                           ;!                                              0 COMRAM    10     4      6
  5628                           ;! ---------------------------------------------------------------------------------
  5629                           ;! (10) _InterruptHandlerHigh                               14    14      0    9227
  5630                           ;!                                             40 BANK0     14    14      0
  5631                           ;!                    _i2c_int_handler
  5632                           ;!                 _timer0_int_handler
  5633                           ;!                        _SleepIfOkay
  5634                           ;! ---------------------------------------------------------------------------------
  5635                           ;! (11) _i2c_int_handler                                     0     0      0    4935
  5636                           ;!              _i2c_slave_int_handler
  5637                           ;!             _i2c_master_int_handler
  5638                           ;! ---------------------------------------------------------------------------------
  5639                           ;! (11) _timer0_int_handler                                  8     8      0    4146
  5640                           ;!                                             12 BANK0      8     8      0
  5641                           ;!                        _WriteTimer0
  5642                           ;!               _FromMainHigh_recvmsg
  5643                           ;!                 _ToMainHigh_sendmsg
  5644                           ;! ---------------------------------------------------------------------------------
  5645                           ;! (11) _SleepIfOkay                                         0     0      0     146
  5646                           ;!                       i2_in_low_int
  5647                           ;!                      i2_in_high_int
  5648                           ;!                        i2_check_msg
  5649                           ;!                   _enter_sleep_mode
  5650                           ;! ---------------------------------------------------------------------------------
  5651                           ;! (12) _FromMainHigh_recvmsg                                5     0      5    2000
  5652                           ;!                                              7 BANK0      5     0      5
  5653                           ;!                         i2_recv_msg
  5654                           ;! ---------------------------------------------------------------------------------
  5655                           ;! (12) _enter_sleep_mode                                    0     0      0       0
  5656                           ;! ---------------------------------------------------------------------------------
  5657                           ;! (12) _i2c_slave_int_handler                              28    28      0    4935
  5658                           ;!                                             12 BANK0     28    28      0
  5659                           ;!                       _handle_start
  5660                           ;!                _FromMainLow_recvmsg
  5661                           ;!              _start_i2c_slave_reply
  5662                           ;!                 _ToMainHigh_sendmsg
  5663                           ;! ---------------------------------------------------------------------------------
  5664                           ;! (12) _ToMainHigh_sendmsg                                  4     0      4    1912
  5665                           ;!                                              5 BANK0      4     0      4
  5666                           ;!                         i2_send_msg
  5667                           ;! ---------------------------------------------------------------------------------
  5668                           ;! (13) _FromMainLow_recvmsg                                 5     0      5    2000
  5669                           ;!                                              7 BANK0      5     0      5
  5670                           ;!                         i2_recv_msg
  5671                           ;! ---------------------------------------------------------------------------------
  5672                           ;! (13) _start_i2c_slave_reply                               5     2      3      66
  5673                           ;!                                             51 COMRAM     5     2      3
  5674                           ;! ---------------------------------------------------------------------------------
  5675                           ;! (13) _handle_start                                        1     0      1      22
  5676                           ;!                                             51 COMRAM     1     0      1
  5677                           ;! ---------------------------------------------------------------------------------
  5678                           ;! (12) _i2c_master_int_handler                              1     1      0       0
  5679                           ;!                                             51 COMRAM     1     1      0
  5680                           ;! ---------------------------------------------------------------------------------
  5681                           ;! (12) _WriteTimer0                                         4     2      2      68
  5682                           ;!                                             51 COMRAM     4     2      2
  5683                           ;! ---------------------------------------------------------------------------------
  5684                           ;! (12) i2_in_low_int                                        2     0      2       0
  5685                           ;!                                             53 COMRAM     2     0      2
  5686                           ;!                      i2_in_high_int
  5687                           ;! ---------------------------------------------------------------------------------
  5688                           ;! (12) i2_in_high_int                                       2     0      2       0
  5689                           ;!                                             51 COMRAM     2     0      2
  5690                           ;! ---------------------------------------------------------------------------------
  5691                           ;! (13) i2_send_msg                                         12     6      6    1819
  5692                           ;!                                             61 COMRAM     7     1      6
  5693                           ;!                                              0 BANK0      5     5      0
  5694                           ;!                           i2_memcpy
  5695                           ;! ---------------------------------------------------------------------------------
  5696                           ;! (13) i2_recv_msg                                         14     7      7    1907
  5697                           ;!                                             61 COMRAM     7     0      7
  5698                           ;!                                              0 BANK0      7     7      0
  5699                           ;!                           i2_memcpy
  5700                           ;! ---------------------------------------------------------------------------------
  5701                           ;! (12) i2_check_msg                                         3     1      2     146
  5702                           ;!                                             51 COMRAM     3     1      2
  5703                           ;! ---------------------------------------------------------------------------------
  5704                           ;! (14) i2_memcpy                                           10     4      6     484
  5705                           ;!                                             51 COMRAM    10     4      6
  5706                           ;! ---------------------------------------------------------------------------------
  5707                           ;! Estimated maximum stack depth 14
  5708                           ;! ---------------------------------------------------------------------------------
  5709                           ;!
  5710                           ;! Call Graph Graphs:
  5711                           ;!
  5712                           ;! _main (ROOT)
  5713                           ;!   _init_uart_recv
  5714                           ;!   _init_i2c
  5715                           ;!   _init_timer1_lthread
  5716                           ;!     _OpenADC
  5717                           ;!     _SetChanADC
  5718                           ;!   _init_queues
  5719                           ;!     _init_queue
  5720                           ;!   _OpenTimer1
  5721                           ;!   _enable_interrupts
  5722                           ;!   _i2c_configure_slave
  5723                           ;!   _OpenUSART
  5724                           ;!   _block_on_To_msgqueues
  5725                           ;!     _in_main
  5726                           ;!       _in_low_int
  5727                           ;!         _in_high_int
  5728                           ;!       _in_high_int
  5729                           ;!     _check_msg
  5730                           ;!     _Delay1KTCYx
  5731                           ;!   _ToMainHigh_recvmsg
  5732                           ;!     _recv_msg
  5733                           ;!       _memcpy
  5734                           ;!   _timer0_lthread
  5735                           ;!   _ToMainLow_recvmsg
  5736                           ;!     _recv_msg
  5737                           ;!       _memcpy
  5738                           ;!   _timer1_lthread
  5739                           ;!     _i2c_master_send
  5740                           ;!   _FromMainLow_sendmsg
  5741                           ;!     _send_msg
  5742                           ;!       _memcpy
  5743                           ;!   _uart_lthread
  5744                           ;!
  5745                           ;! _InterruptHandlerLow (ROOT)
  5746                           ;!   _timer1_int_handler
  5747                           ;!     _ReadTimer1
  5748                           ;!     _ToMainLow_sendmsg
  5749                           ;!       i1_send_msg
  5750                           ;!         i1_memcpy
  5751                           ;!     _WriteTimer1
  5752                           ;!   _adc_int_handler
  5753                           ;!     _ReadADC
  5754                           ;!     _ToMainLow_sendmsg
  5755                           ;!       i1_send_msg
  5756                           ;!         i1_memcpy
  5757                           ;!   _uart_recv_int_handler
  5758                           ;!     _ReadUSART
  5759                           ;!     _ToMainLow_sendmsg
  5760                           ;!       i1_send_msg
  5761                           ;!         i1_memcpy
  5762                           ;!
  5763                           
  5764                           ;! Address spaces:
  5765                           
  5766                           ;!Name               Size   Autos  Total    Cost      Usage
  5767                           ;!BIGRAM             3FF      0       0      12        0.0%
  5768                           ;!BITBANK3           100      0       0       9        0.0%
  5769                           ;!BANK3              100      0       0      10        0.0%
  5770                           ;!BITBANK2           100      0       0       7        0.0%
  5771                           ;!BANK2              100      0      36       8       21.1%
  5772                           ;!BITBANK1           100      0       0       5        0.0%
  5773                           ;!BANK1              100     46      E8       6       90.6%
  5774                           ;!BITBANK0            80      0       0       3        0.0%
  5775                           ;!BANK0               80     44      4A       4       57.8%
  5776                           ;!BITCOMRAM           7F      0       0       0        0.0%
  5777                           ;!COMRAM              7F     44      4C       1       59.8%
  5778                           ;!BITSFR               0      0       0      40        0.0%
  5779                           ;!SFR                  0      0       0      40        0.0%
  5780                           ;!STACK                0      0      24       2        0.0%
  5781                           ;!NULL                 0      0       0       0        0.0%
  5782                           ;!ABS                  0      0     1B4      11        0.0%
  5783                           ;!DATA                 0      0     1D8      13        0.0%
  5784                           ;!CODE                 0      0       0       0        0.0%
  5785                           
  5786                           	global	_main
  5787                           
  5788 ;; *************** function _main *****************
  5789 ;; Defined at:
  5790 ;;		line 79 in file "../src/main.c"
  5791 ;; Parameters:    Size  Location     Type
  5792 ;;		None
  5793 ;; Auto vars:     Size  Location     Type
  5794 ;;  ic             28   42[BANK1 ] struct __i2c_comm
  5795 ;;  msgbuffer      11   17[BANK1 ] unsigned char [11]
  5796 ;;  uc              5   35[BANK1 ] struct __uart_comm
  5797 ;;  t1thread_dat    2   33[BANK1 ] struct __timer1_thread_s
  5798 ;;  t0thread_dat    2   30[BANK1 ] struct __timer0_thread_s
  5799 ;;  uthread_data    2   28[BANK1 ] struct __uart_thread_str
  5800 ;;  msgtype         1   41[BANK1 ] unsigned char 
  5801 ;;  length          1   40[BANK1 ] char 
  5802 ;;  last_reg_rec    1   32[BANK1 ] unsigned char 
  5803 ;;  i               1    0        unsigned char 
  5804 ;;  c               1    0        unsigned char 
  5805 ;; Return value:  Size  Location     Type
  5806 ;;		None               void
  5807 ;; Registers used:
  5808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, structret, tblptrl, tblptrh, tblptr
       u, prodl, prodh, bsr, cstack
  5809 ;; Tracked objects:
  5810 ;;		On entry : 0/0
  5811 ;;		On exit  : 0/0
  5812 ;;		Unchanged: 0/0
  5813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5814 ;;      Params:         0       0       0       0       0
  5815 ;;      Locals:         0       0      53       0       0
  5816 ;;      Temps:          0       1       0       0       0
  5817 ;;      Totals:         0       1      53       0       0
  5818 ;;Total ram usage:       54 bytes
  5819 ;; Hardware stack levels required when called:   15
  5820 ;; This function calls:
  5821 ;;		_init_uart_recv
  5822 ;;		_init_i2c
  5823 ;;		_init_timer1_lthread
  5824 ;;		_init_queues
  5825 ;;		_OpenTimer1
  5826 ;;		_enable_interrupts
  5827 ;;		_i2c_configure_slave
  5828 ;;		_OpenUSART
  5829 ;;		_block_on_To_msgqueues
  5830 ;;		_ToMainHigh_recvmsg
  5831 ;;		_timer0_lthread
  5832 ;;		_ToMainLow_recvmsg
  5833 ;;		_timer1_lthread
  5834 ;;		_FromMainLow_sendmsg
  5835 ;;		_uart_lthread
  5836 ;; This function is called by:
  5837 ;;		Startup code after reset
  5838 ;; This function uses a non-reentrant model
  5839 ;;
  5840                           psect	text0,class=CODE,space=0,reloc=2
  5841                           global __ptext0
  5842  00089C                     __ptext0:
  5843                           psect	text0
  5844                           	file	"../src/main.c"
  5845                           	line	79
  5846                           	global	__size_of_main
  5847  0000                     	__size_of_main	equ	__end_of_main-_main
  5848                           	
  5849  00089C                     _main:; BSR set to: 0
  5850                           
  5851                           	opt	stack 16
  5852                           	line	99
  5853                           	
  5854  00089C                     l19068:
  5855                           ;main.c: 80: char c;
  5856                           ;main.c: 81: signed char length;
  5857                           ;main.c: 82: unsigned char msgtype;
  5858                           ;main.c: 83: unsigned char last_reg_recvd;
  5859                           ;main.c: 84: uart_comm uc;
  5860                           ;main.c: 85: i2c_comm ic;
  5861                           ;main.c: 86: unsigned char msgbuffer[10 + 1];
  5862                           ;main.c: 87: unsigned char i;
  5863                           ;main.c: 88: uart_thread_struct uthread_data;
  5864                           ;main.c: 91: timer1_thread_struct t1thread_data;
  5865                           ;main.c: 92: timer0_thread_struct t0thread_data;
  5866                           ;main.c: 99: OSCCON = 0x82;
  5867  00089C  0E82               	movlw	low(082h)
  5868  00089E  6ED3               	movwf	((c:4051)),c	;volatile
  5869                           	line	100
  5870                           	
  5871  0008A0                     l19070:
  5872                           ;main.c: 100: OSCTUNEbits.PLLEN = 0;
  5873  0008A0  9C9B               	bcf	((c:3995)),c,6	;volatile
  5874                           	line	105
  5875                           	
  5876  0008A2                     l19072:
  5877                           ;main.c: 105: init_uart_recv(&uc);
  5878  0008A2  0101               	movlb	1	; () banked
  5879  0008A4  0E01               	movlw	high(main@uc)
  5880  0008A6  0100               	movlb	0	; () banked
  5881  0008A8  0100               	movlb	0	; () banked
  5882  0008AA  6FB7               	movwf	((?_init_uart_recv+1))&0ffh
  5883  0008AC  0101               	movlb	1	; () banked
  5884  0008AE  0EC5               	movlw	low(main@uc)
  5885  0008B0  0100               	movlb	0	; () banked
  5886  0008B2  6FB6               	movwf	((?_init_uart_recv))&0ffh
  5887  0008B4  0100               	movlb	0	; () banked
  5888  0008B6  EC5A  F010         	call	_init_uart_recv	;wreg free
  5889                           	line	109
  5890                           	
  5891  0008BA                     l19074:
  5892                           ;main.c: 109: init_i2c(&ic);
  5893  0008BA  0101               	movlb	1	; () banked
  5894  0008BC  0E01               	movlw	high(main@ic)
  5895  0008BE  0100               	movlb	0	; () banked
  5896  0008C0  0100               	movlb	0	; () banked
  5897  0008C2  6FB7               	movwf	((?_init_i2c+1))&0ffh
  5898  0008C4  0101               	movlb	1	; () banked
  5899  0008C6  0ECC               	movlw	low(main@ic)
  5900  0008C8  0100               	movlb	0	; () banked
  5901  0008CA  6FB6               	movwf	((?_init_i2c))&0ffh
  5902  0008CC  0100               	movlb	0	; () banked
  5903  0008CE  EC4F  F00D         	call	_init_i2c	;wreg free
  5904                           	line	112
  5905                           	
  5906  0008D2                     l19076:
  5907                           ;main.c: 112: init_timer1_lthread(&t1thread_data);
  5908  0008D2  0101               	movlb	1	; () banked
  5909  0008D4  0E01               	movlw	high(main@t1thread_data)
  5910  0008D6  0100               	movlb	0	; () banked
  5911  0008D8  0100               	movlb	0	; () banked
  5912  0008DA  6FBC               	movwf	((?_init_timer1_lthread+1))&0ffh
  5913  0008DC  0101               	movlb	1	; () banked
  5914  0008DE  0EC3               	movlw	low(main@t1thread_data)
  5915  0008E0  0100               	movlb	0	; () banked
  5916  0008E2  6FBB               	movwf	((?_init_timer1_lthread))&0ffh
  5917  0008E4  0100               	movlb	0	; () banked
  5918  0008E6  EC1D  F00D         	call	_init_timer1_lthread	;wreg free
  5919                           	line	115
  5920                           	
  5921  0008EA                     l19078:
  5922                           ;main.c: 115: init_queues();
  5923  0008EA  ECE6  F00C         	call	_init_queues	;wreg free
  5924                           	line	118
  5925                           	
  5926  0008EE                     l19080:
  5927                           ;main.c: 118: TRISB = 0x0;
  5928  0008EE  0E00               	movlw	low(0)
  5929  0008F0  6E93               	movwf	((c:3987)),c	;volatile
  5930                           	line	119
  5931                           	
  5932  0008F2                     l19082:
  5933                           ;main.c: 119: LATB = 0x0;
  5934  0008F2  0E00               	movlw	low(0)
  5935  0008F4  6E8A               	movwf	((c:3978)),c	;volatile
  5936                           	line	123
  5937                           	
  5938  0008F6                     l19084:
  5939                           ;main.c: 123: PORTA = 0x0;
  5940  0008F6  0E00               	movlw	low(0)
  5941  0008F8  6E80               	movwf	((c:3968)),c	;volatile
  5942                           	line	124
  5943                           	
  5944  0008FA                     l19086:
  5945                           ;main.c: 124: LATA = 0x0;
  5946  0008FA  0E00               	movlw	low(0)
  5947  0008FC  6E89               	movwf	((c:3977)),c	;volatile
  5948                           	line	125
  5949                           	
  5950  0008FE                     l19088:
  5951                           ;main.c: 125: ADCON1 = 0x0F;
  5952  0008FE  0E0F               	movlw	low(0Fh)
  5953  000900  6EC1               	movwf	((c:4033)),c	;volatile
  5954                           	line	127
  5955                           	
  5956  000902                     l19090:
  5957                           ;main.c: 127: TRISA = 0x0F;
  5958  000902  0E0F               	movlw	low(0Fh)
  5959  000904  6E92               	movwf	((c:3986)),c	;volatile
  5960                           	line	135
  5961                           	
  5962  000906                     l19092:
  5963                           ;main.c: 135: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
                                 & 0b11111111);
  5964  000906  0100               	movlb	0	; () banked
  5965  000908  6FC3               	movwf	(??_main+0+0)&0ffh
  5966  00090A  0EF5               	movlw	low(0F5h)
  5967  00090C  0100               	movlb	0	; () banked
  5968  00090E  0100               	movlb	0	; () banked
  5969  000910  6FB6               	movwf	((?_OpenTimer1))&0ffh
  5970  000912  0100               	movlb	0	; () banked
  5971  000914  51C3               	movf	(??_main+0+0)&0ffh,w
  5972  000916  0100               	movlb	0	; () banked
  5973  000918  EC04  F00F         	call	_OpenTimer1	;wreg free
  5974                           	line	144
  5975                           	
  5976  00091C                     l19094:
  5977                           ;main.c: 144: enable_interrupts();
  5978  00091C  ECA8  F010         	call	_enable_interrupts	;wreg free
  5979                           	line	150
  5980                           	
  5981  000920                     l19096:
  5982                           ;main.c: 150: IPR1bits.TMR1IP = 0;
  5983  000920  909F               	bcf	((c:3999)),c,0	;volatile
  5984                           	line	152
  5985                           	
  5986  000922                     l19098:
  5987                           ;main.c: 152: IPR1bits.ADIP = 0;
  5988  000922  9C9F               	bcf	((c:3999)),c,6	;volatile
  5989                           	line	154
  5990                           	
  5991  000924                     l19100:
  5992                           ;main.c: 154: IPR1bits.RCIP = 0;
  5993  000924  9A9F               	bcf	((c:3999)),c,5	;volatile
  5994                           	line	156
  5995                           	
  5996  000926                     l19102:
  5997                           ;main.c: 156: IPR1bits.SSP1IP = 1;
  5998  000926  869F               	bsf	((c:3999)),c,3	;volatile
  5999                           	line	176
  6000                           	
  6001  000928                     l19104:
  6002                           ;main.c: 176: i2c_configure_slave(0x9C);
  6003  000928  0100               	movlb	0	; () banked
  6004  00092A  6FC3               	movwf	(??_main+0+0)&0ffh
  6005  00092C  0E9C               	movlw	low(09Ch)
  6006  00092E  0100               	movlb	0	; () banked
  6007  000930  0100               	movlb	0	; () banked
  6008  000932  6FB6               	movwf	((?_i2c_configure_slave))&0ffh
  6009  000934  0100               	movlb	0	; () banked
  6010  000936  51C3               	movf	(??_main+0+0)&0ffh,w
  6011  000938  0100               	movlb	0	; () banked
  6012  00093A  EC7A  F00F         	call	_i2c_configure_slave	;wreg free
  6013                           	line	199
  6014                           	
  6015  00093E                     l19106:
  6016                           ;main.c: 199: PIE1bits.SSPIE = 1;
  6017  00093E  869D               	bsf	((c:3997)),c,3	;volatile
  6018                           	line	205
  6019                           	
  6020  000940                     l19108:
  6021                           ;main.c: 204: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  6022                           ;main.c: 205: 0b11111111 & 0b11101111, 0x19);
  6023  000940  0100               	movlb	0	; () banked
  6024  000942  6FC3               	movwf	(??_main+0+0)&0ffh
  6025  000944  0E6C               	movlw	low(06Ch)
  6026  000946  0100               	movlb	0	; () banked
  6027  000948  0100               	movlb	0	; () banked
  6028  00094A  6FB6               	movwf	((?_OpenUSART))&0ffh
  6029  00094C  0100               	movlb	0	; () banked
  6030  00094E  51C3               	movf	(??_main+0+0)&0ffh,w
  6031  000950  0E00               	movlw	high(019h)
  6032  000952  0100               	movlb	0	; () banked
  6033  000954  0100               	movlb	0	; () banked
  6034  000956  6FB8               	movwf	(1+(?_OpenUSART+01h))&0ffh
  6035  000958  0E19               	movlw	low(019h)
  6036  00095A  0100               	movlb	0	; () banked
  6037  00095C  6FB7               	movwf	(0+(?_OpenUSART+01h))&0ffh
  6038  00095E  0100               	movlb	0	; () banked
  6039  000960  EC2E  F00B         	call	_OpenUSART	;wreg free
  6040  000964  D000               	goto	l19110
  6041                           	line	226
  6042                           ;main.c: 226: while (1) {
  6043                           	
  6044  000966                     l3645:
  6045                           	line	230
  6046                           	
  6047  000966                     l19110:
  6048                           ;main.c: 230: block_on_To_msgqueues();
  6049  000966  EC09  F00A         	call	_block_on_To_msgqueues	;wreg free
  6050                           	line	237
  6051                           	
  6052  00096A                     l19112:
  6053                           ;main.c: 237: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  6054  00096A  0100               	movlb	0	; () banked
  6055  00096C  6FC3               	movwf	(??_main+0+0)&0ffh
  6056  00096E  0E0A               	movlw	low(0Ah)
  6057  000970  0101               	movlb	1	; () banked
  6058  000972  0101               	movlb	1	; () banked
  6059  000974  6FAE               	movwf	((?_ToMainHigh_recvmsg))&0ffh
  6060  000976  0100               	movlb	0	; () banked
  6061  000978  51C3               	movf	(??_main+0+0)&0ffh,w
  6062  00097A  0101               	movlb	1	; () banked
  6063  00097C  0E01               	movlw	high(main@msgtype)
  6064  00097E  0101               	movlb	1	; () banked
  6065  000980  0101               	movlb	1	; () banked
  6066  000982  6FB0               	movwf	(1+(?_ToMainHigh_recvmsg+01h))&0ffh
  6067  000984  0101               	movlb	1	; () banked
  6068  000986  0ECB               	movlw	low(main@msgtype)
  6069  000988  0101               	movlb	1	; () banked
  6070  00098A  6FAF               	movwf	(0+(?_ToMainHigh_recvmsg+01h))&0ffh
  6071  00098C  0101               	movlb	1	; () banked
  6072  00098E  0E01               	movlw	high(main@msgbuffer)
  6073  000990  0101               	movlb	1	; () banked
  6074  000992  0101               	movlb	1	; () banked
  6075  000994  6FB2               	movwf	(1+(?_ToMainHigh_recvmsg+03h))&0ffh
  6076  000996  0101               	movlb	1	; () banked
  6077  000998  0EB3               	movlw	low(main@msgbuffer)
  6078  00099A  0101               	movlb	1	; () banked
  6079  00099C  6FB1               	movwf	(0+(?_ToMainHigh_recvmsg+03h))&0ffh
  6080  00099E  0101               	movlb	1	; () banked
  6081  0009A0  EC94  F00F         	call	_ToMainHigh_recvmsg	;wreg free
  6082  0009A4  0101               	movlb	1	; () banked
  6083  0009A6  0101               	movlb	1	; () banked
  6084  0009A8  6FCA               	movwf	((main@length))&0ffh
  6085                           	line	238
  6086                           	
  6087  0009AA                     l19114:; BSR set to: 1
  6088                           
  6089                           ;main.c: 238: if (length < 0) {
  6090  0009AA  0101               	movlb	1	; () banked
  6091  0009AC  0101               	movlb	1	; () banked
  6092  0009AE  AFCA               	btfss	((main@length))&0ffh,7
  6093  0009B0  D001               	goto	u1991
  6094  0009B2  D001               	goto	u1990
  6095  0009B4                     u1991:
  6096  0009B4  D03C               	goto	l19126
  6097  0009B6                     u1990:
  6098  0009B6  D04C               	goto	l19128
  6099                           	line	240
  6100                           	
  6101  0009B8                     l19116:; BSR set to: 1
  6102                           
  6103  0009B8  D04B               	goto	l19128
  6104                           	line	242
  6105                           	
  6106  0009BA                     l3647:; BSR set to: 1
  6107                           
  6108                           	line	243
  6109                           ;main.c: 242: }
  6110                           ;main.c: 243: } else {
  6111  0009BA  D04A               	goto	l19128
  6112                           	
  6113  0009BC                     l3646:; BSR set to: 1
  6114                           
  6115                           	line	244
  6116                           ;main.c: 244: switch (msgtype) {
  6117  0009BC  D038               	goto	l19126
  6118                           	line	248
  6119                           ;main.c: 248: case 10:
  6120                           	
  6121  0009BE                     l3650:; BSR set to: 1
  6122                           
  6123                           	line	250
  6124                           	
  6125  0009BE                     l19118:; BSR set to: 1
  6126                           
  6127                           ;main.c: 249: {
  6128                           ;main.c: 250: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  6129  0009BE  0101               	movlb	1	; () banked
  6130  0009C0  0E01               	movlw	high(main@t0thread_data)
  6131  0009C2  0100               	movlb	0	; () banked
  6132  0009C4  0100               	movlb	0	; () banked
  6133  0009C6  6FB7               	movwf	((?_timer0_lthread+1))&0ffh
  6134  0009C8  0101               	movlb	1	; () banked
  6135  0009CA  0EC0               	movlw	low(main@t0thread_data)
  6136  0009CC  0100               	movlb	0	; () banked
  6137  0009CE  6FB6               	movwf	((?_timer0_lthread))&0ffh
  6138  0009D0  0101               	movlb	1	; () banked
  6139  0009D2  0100               	movlb	0	; () banked
  6140  0009D4  C1CB  F0B8         	movff	(main@msgtype),0+(?_timer0_lthread+02h)
  6141  0009D8  0100               	movlb	0	; () banked
  6142  0009DA  0100               	movlb	0	; () banked
  6143  0009DC  6BB9               	clrf	(1+(?_timer0_lthread+02h))&0ffh
  6144  0009DE  0101               	movlb	1	; () banked
  6145  0009E0  0101               	movlb	1	; () banked
  6146  0009E2  51CA               	movf	((main@length))&0ffh,w
  6147  0009E4  0100               	movlb	0	; () banked
  6148  0009E6  0100               	movlb	0	; () banked
  6149  0009E8  6FBA               	movwf	(0+(?_timer0_lthread+04h))&0ffh
  6150  0009EA  0100               	movlb	0	; () banked
  6151  0009EC  6BBB               	clrf	(1+(?_timer0_lthread+04h))&0ffh
  6152  0009EE  0100               	movlb	0	; () banked
  6153  0009F0  BFBA               	btfsc	(0+(?_timer0_lthread+04h))&0ffh,7
  6154  0009F2  07BB               	decf	(1+(?_timer0_lthread+04h))&0ffh
  6155  0009F4  0101               	movlb	1	; () banked
  6156  0009F6  0E01               	movlw	high(main@msgbuffer)
  6157  0009F8  0100               	movlb	0	; () banked
  6158  0009FA  0100               	movlb	0	; () banked
  6159  0009FC  6FBD               	movwf	(1+(?_timer0_lthread+06h))&0ffh
  6160  0009FE  0101               	movlb	1	; () banked
  6161  000A00  0EB3               	movlw	low(main@msgbuffer)
  6162  000A02  0100               	movlb	0	; () banked
  6163  000A04  6FBC               	movwf	(0+(?_timer0_lthread+06h))&0ffh
  6164  000A06  0100               	movlb	0	; () banked
  6165  000A08  ECA3  F010         	call	_timer0_lthread	;wreg free
  6166                           	line	251
  6167                           ;main.c: 251: break;
  6168  000A0C  D021               	goto	l19128
  6169                           	line	253
  6170                           ;main.c: 252: };
  6171                           ;main.c: 253: case 40:
  6172                           	
  6173  000A0E                     l3652:
  6174                           	line	255
  6175                           	
  6176  000A0E                     l3653:
  6177                           	line	259
  6178                           ;main.c: 255: case 41:
  6179                           ;main.c: 256: {
  6180                           ;main.c: 259: last_reg_recvd = msgbuffer[0];
  6181  000A0E  C1B3  F1C2         	movff	(main@msgbuffer),(main@last_reg_recvd)
  6182                           	line	260
  6183                           ;main.c: 260: break;
  6184  000A12  D01E               	goto	l19128
  6185                           	line	262
  6186                           ;main.c: 261: };
  6187                           ;main.c: 262: case 42:
  6188                           	
  6189  000A14                     l3654:
  6190                           	line	271
  6191                           ;main.c: 263: {
  6192                           ;main.c: 271: switch (last_reg_recvd) {
  6193  000A14  D002               	goto	l19122
  6194                           	line	272
  6195                           ;main.c: 272: case 0xaa:
  6196                           	
  6197  000A16                     l3656:
  6198                           	line	277
  6199                           ;main.c: 273: {
  6200                           ;main.c: 277: break;
  6201  000A16  D01C               	goto	l19128
  6202                           	line	291
  6203                           	
  6204  000A18                     l19120:
  6205                           ;main.c: 278: }
  6206                           ;main.c: 291: };
  6207  000A18  D01B               	goto	l19128
  6208                           	line	271
  6209                           	
  6210  000A1A                     l3655:
  6211                           	
  6212  000A1A                     l19122:
  6213  000A1A  0101               	movlb	1	; () banked
  6214  000A1C  0101               	movlb	1	; () banked
  6215  000A1E  51C2               	movf	((main@last_reg_recvd))&0ffh,w
  6216                           	; Switch size 1, requested type "space"
  6217                           ; Number of cases is 1, Range of values is 170 to 170
  6218                           ; switch strategies available:
  6219                           ; Name         Instructions Cycles
  6220                           ; simple_byte            4     3 (average)
  6221                           ;	Chosen strategy is simple_byte
  6222                           
  6223  000A20  0AAA               	xorlw	170^0	; case 170
  6224  000A22  B4D8               	skipnz
  6225  000A24  D015               	goto	l19128
  6226  000A26  D014               	goto	l19128
  6227                           
  6228                           	line	291
  6229                           	
  6230  000A28                     l3657:; BSR set to: 1
  6231                           
  6232                           	line	293
  6233                           ;main.c: 293: break;
  6234  000A28  D013               	goto	l19128
  6235                           	line	295
  6236                           ;main.c: 294: };
  6237                           ;main.c: 295: default:
  6238                           	
  6239  000A2A                     l3658:; BSR set to: 1
  6240                           
  6241                           	line	298
  6242                           ;main.c: 296: {
  6243                           ;main.c: 298: break;
  6244  000A2A  D012               	goto	l19128
  6245                           	line	300
  6246                           	
  6247  000A2C                     l19124:; BSR set to: 1
  6248                           
  6249                           ;main.c: 299: };
  6250                           ;main.c: 300: };
  6251  000A2C  D011               	goto	l19128
  6252                           	line	244
  6253                           	
  6254  000A2E                     l3649:; BSR set to: 1
  6255                           
  6256                           	
  6257  000A2E                     l19126:; BSR set to: 1
  6258                           
  6259  000A2E  0101               	movlb	1	; () banked
  6260  000A30  0101               	movlb	1	; () banked
  6261  000A32  51CB               	movf	((main@msgtype))&0ffh,w
  6262                           	; Switch size 1, requested type "space"
  6263                           ; Number of cases is 4, Range of values is 10 to 42
  6264                           ; switch strategies available:
  6265                           ; Name         Instructions Cycles
  6266                           ; simple_byte           13     7 (average)
  6267                           ;	Chosen strategy is simple_byte
  6268                           
  6269  000A34  0A0A               	xorlw	10^0	; case 10
  6270  000A36  B4D8               	skipnz
  6271  000A38  D7C2               	goto	l19118
  6272  000A3A  0A22               	xorlw	40^10	; case 40
  6273  000A3C  B4D8               	skipnz
  6274  000A3E  D7E7               	goto	l3653
  6275  000A40  0A01               	xorlw	41^40	; case 41
  6276  000A42  B4D8               	skipnz
  6277  000A44  D7E4               	goto	l3653
  6278  000A46  0A03               	xorlw	42^41	; case 42
  6279  000A48  B4D8               	skipnz
  6280  000A4A  D7E7               	goto	l19122
  6281  000A4C  D001               	goto	l19128
  6282                           
  6283                           	line	300
  6284                           	
  6285  000A4E                     l3651:; BSR set to: 1
  6286                           
  6287  000A4E  D000               	goto	l19128
  6288                           	line	301
  6289                           	
  6290  000A50                     l3648:; BSR set to: 1
  6291                           
  6292                           	line	304
  6293                           	
  6294  000A50                     l19128:
  6295                           ;main.c: 301: }
  6296                           ;main.c: 304: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  6297  000A50  0100               	movlb	0	; () banked
  6298  000A52  6FC3               	movwf	(??_main+0+0)&0ffh
  6299  000A54  0E0A               	movlw	low(0Ah)
  6300  000A56  0101               	movlb	1	; () banked
  6301  000A58  0101               	movlb	1	; () banked
  6302  000A5A  6FAE               	movwf	((?_ToMainLow_recvmsg))&0ffh
  6303  000A5C  0100               	movlb	0	; () banked
  6304  000A5E  51C3               	movf	(??_main+0+0)&0ffh,w
  6305  000A60  0101               	movlb	1	; () banked
  6306  000A62  0E01               	movlw	high(main@msgtype)
  6307  000A64  0101               	movlb	1	; () banked
  6308  000A66  0101               	movlb	1	; () banked
  6309  000A68  6FB0               	movwf	(1+(?_ToMainLow_recvmsg+01h))&0ffh
  6310  000A6A  0101               	movlb	1	; () banked
  6311  000A6C  0ECB               	movlw	low(main@msgtype)
  6312  000A6E  0101               	movlb	1	; () banked
  6313  000A70  6FAF               	movwf	(0+(?_ToMainLow_recvmsg+01h))&0ffh
  6314  000A72  0101               	movlb	1	; () banked
  6315  000A74  0E01               	movlw	high(main@msgbuffer)
  6316  000A76  0101               	movlb	1	; () banked
  6317  000A78  0101               	movlb	1	; () banked
  6318  000A7A  6FB2               	movwf	(1+(?_ToMainLow_recvmsg+03h))&0ffh
  6319  000A7C  0101               	movlb	1	; () banked
  6320  000A7E  0EB3               	movlw	low(main@msgbuffer)
  6321  000A80  0101               	movlb	1	; () banked
  6322  000A82  6FB1               	movwf	(0+(?_ToMainLow_recvmsg+03h))&0ffh
  6323  000A84  0101               	movlb	1	; () banked
  6324  000A86  ECAC  F00F         	call	_ToMainLow_recvmsg	;wreg free
  6325  000A8A  0101               	movlb	1	; () banked
  6326  000A8C  0101               	movlb	1	; () banked
  6327  000A8E  6FCA               	movwf	((main@length))&0ffh
  6328                           	line	305
  6329                           	
  6330  000A90                     l19130:; BSR set to: 1
  6331                           
  6332                           ;main.c: 305: if (length < 0) {
  6333  000A90  0101               	movlb	1	; () banked
  6334  000A92  0101               	movlb	1	; () banked
  6335  000A94  AFCA               	btfss	((main@length))&0ffh,7
  6336  000A96  D001               	goto	u2001
  6337  000A98  D001               	goto	u2000
  6338  000A9A                     u2001:
  6339  000A9A  D068               	goto	l19142
  6340  000A9C                     u2000:
  6341  000A9C  D764               	goto	l19110
  6342                           	line	307
  6343                           	
  6344  000A9E                     l19132:; BSR set to: 1
  6345                           
  6346  000A9E  D763               	goto	l19110
  6347                           	line	309
  6348                           	
  6349  000AA0                     l3660:; BSR set to: 1
  6350                           
  6351                           	line	310
  6352                           ;main.c: 309: }
  6353                           ;main.c: 310: } else {
  6354  000AA0  D762               	goto	l19110
  6355                           	
  6356  000AA2                     l3659:; BSR set to: 1
  6357                           
  6358                           	line	311
  6359                           ;main.c: 311: switch (msgtype) {
  6360  000AA2  D064               	goto	l19142
  6361                           	line	312
  6362                           ;main.c: 312: case 11:
  6363                           	
  6364  000AA4                     l3663:; BSR set to: 1
  6365                           
  6366                           	line	314
  6367                           	
  6368  000AA4                     l19134:; BSR set to: 1
  6369                           
  6370                           ;main.c: 313: {
  6371                           ;main.c: 314: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  6372  000AA4  0101               	movlb	1	; () banked
  6373  000AA6  0E01               	movlw	high(main@t1thread_data)
  6374  000AA8  0100               	movlb	0	; () banked
  6375  000AAA  0100               	movlb	0	; () banked
  6376  000AAC  6FBC               	movwf	((?_timer1_lthread+1))&0ffh
  6377  000AAE  0101               	movlb	1	; () banked
  6378  000AB0  0EC3               	movlw	low(main@t1thread_data)
  6379  000AB2  0100               	movlb	0	; () banked
  6380  000AB4  6FBB               	movwf	((?_timer1_lthread))&0ffh
  6381  000AB6  0101               	movlb	1	; () banked
  6382  000AB8  0100               	movlb	0	; () banked
  6383  000ABA  C1CB  F0BD         	movff	(main@msgtype),0+(?_timer1_lthread+02h)
  6384  000ABE  0100               	movlb	0	; () banked
  6385  000AC0  0100               	movlb	0	; () banked
  6386  000AC2  6BBE               	clrf	(1+(?_timer1_lthread+02h))&0ffh
  6387  000AC4  0101               	movlb	1	; () banked
  6388  000AC6  0101               	movlb	1	; () banked
  6389  000AC8  51CA               	movf	((main@length))&0ffh,w
  6390  000ACA  0100               	movlb	0	; () banked
  6391  000ACC  0100               	movlb	0	; () banked
  6392  000ACE  6FBF               	movwf	(0+(?_timer1_lthread+04h))&0ffh
  6393  000AD0  0100               	movlb	0	; () banked
  6394  000AD2  6BC0               	clrf	(1+(?_timer1_lthread+04h))&0ffh
  6395  000AD4  0100               	movlb	0	; () banked
  6396  000AD6  BFBF               	btfsc	(0+(?_timer1_lthread+04h))&0ffh,7
  6397  000AD8  07C0               	decf	(1+(?_timer1_lthread+04h))&0ffh
  6398  000ADA  0101               	movlb	1	; () banked
  6399  000ADC  0E01               	movlw	high(main@msgbuffer)
  6400  000ADE  0100               	movlb	0	; () banked
  6401  000AE0  0100               	movlb	0	; () banked
  6402  000AE2  6FC2               	movwf	(1+(?_timer1_lthread+06h))&0ffh
  6403  000AE4  0101               	movlb	1	; () banked
  6404  000AE6  0EB3               	movlw	low(main@msgbuffer)
  6405  000AE8  0100               	movlb	0	; () banked
  6406  000AEA  6FC1               	movwf	(0+(?_timer1_lthread+06h))&0ffh
  6407  000AEC  0100               	movlb	0	; () banked
  6408  000AEE  EC06  F00E         	call	_timer1_lthread	;wreg free
  6409                           	line	315
  6410                           ;main.c: 315: break;
  6411  000AF2  D739               	goto	l19110
  6412                           	line	317
  6413                           ;main.c: 316: };
  6414                           ;main.c: 317: case 40:
  6415                           	
  6416  000AF4                     l3665:
  6417                           	line	320
  6418                           	
  6419  000AF4                     l19136:
  6420                           ;main.c: 318: {
  6421                           ;main.c: 320: FromMainLow_sendmsg(length, msgtype, (void *) msgbuffer);
  6422  000AF4  C1CA  F1AD         	movff	(main@length),(?_FromMainLow_sendmsg)
  6423  000AF8  C1CB  F1AE         	movff	(main@msgtype),0+(?_FromMainLow_sendmsg+01h)
  6424  000AFC  0101               	movlb	1	; () banked
  6425  000AFE  0E01               	movlw	high(main@msgbuffer)
  6426  000B00  0101               	movlb	1	; () banked
  6427  000B02  0101               	movlb	1	; () banked
  6428  000B04  6FB0               	movwf	(1+(?_FromMainLow_sendmsg+02h))&0ffh
  6429  000B06  0101               	movlb	1	; () banked
  6430  000B08  0EB3               	movlw	low(main@msgbuffer)
  6431  000B0A  0101               	movlb	1	; () banked
  6432  000B0C  6FAF               	movwf	(0+(?_FromMainLow_sendmsg+02h))&0ffh
  6433  000B0E  0101               	movlb	1	; () banked
  6434  000B10  ECC4  F00F         	call	_FromMainLow_sendmsg	;wreg free
  6435  000B14  D001               	goto	l19138
  6436                           	line	322
  6437                           ;main.c: 321: };
  6438                           ;main.c: 322: case 30:
  6439                           	
  6440  000B16                     l3666:
  6441  000B16  D000               	goto	l19138
  6442                           	line	323
  6443                           	
  6444  000B18                     l3667:
  6445                           	line	325
  6446                           	
  6447  000B18                     l19138:
  6448                           ;main.c: 323: case 31:
  6449                           ;main.c: 324: {
  6450                           ;main.c: 325: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  6451  000B18  0101               	movlb	1	; () banked
  6452  000B1A  0E01               	movlw	high(main@uthread_data)
  6453  000B1C  0100               	movlb	0	; () banked
  6454  000B1E  0100               	movlb	0	; () banked
  6455  000B20  6FB7               	movwf	((?_uart_lthread+1))&0ffh
  6456  000B22  0101               	movlb	1	; () banked
  6457  000B24  0EBE               	movlw	low(main@uthread_data)
  6458  000B26  0100               	movlb	0	; () banked
  6459  000B28  6FB6               	movwf	((?_uart_lthread))&0ffh
  6460  000B2A  0101               	movlb	1	; () banked
  6461  000B2C  0100               	movlb	0	; () banked
  6462  000B2E  C1CB  F0B8         	movff	(main@msgtype),0+(?_uart_lthread+02h)
  6463  000B32  0100               	movlb	0	; () banked
  6464  000B34  0100               	movlb	0	; () banked
  6465  000B36  6BB9               	clrf	(1+(?_uart_lthread+02h))&0ffh
  6466  000B38  0101               	movlb	1	; () banked
  6467  000B3A  0101               	movlb	1	; () banked
  6468  000B3C  51CA               	movf	((main@length))&0ffh,w
  6469  000B3E  0100               	movlb	0	; () banked
  6470  000B40  0100               	movlb	0	; () banked
  6471  000B42  6FBA               	movwf	(0+(?_uart_lthread+04h))&0ffh
  6472  000B44  0100               	movlb	0	; () banked
  6473  000B46  6BBB               	clrf	(1+(?_uart_lthread+04h))&0ffh
  6474  000B48  0100               	movlb	0	; () banked
  6475  000B4A  BFBA               	btfsc	(0+(?_uart_lthread+04h))&0ffh,7
  6476  000B4C  07BB               	decf	(1+(?_uart_lthread+04h))&0ffh
  6477  000B4E  0101               	movlb	1	; () banked
  6478  000B50  0E01               	movlw	high(main@msgbuffer)
  6479  000B52  0100               	movlb	0	; () banked
  6480  000B54  0100               	movlb	0	; () banked
  6481  000B56  6FBD               	movwf	(1+(?_uart_lthread+06h))&0ffh
  6482  000B58  0101               	movlb	1	; () banked
  6483  000B5A  0EB3               	movlw	low(main@msgbuffer)
  6484  000B5C  0100               	movlb	0	; () banked
  6485  000B5E  6FBC               	movwf	(0+(?_uart_lthread+06h))&0ffh
  6486  000B60  0100               	movlb	0	; () banked
  6487  000B62  EC2F  F00E         	call	_uart_lthread	;wreg free
  6488                           	line	326
  6489                           ;main.c: 326: break;
  6490  000B66  D6FF               	goto	l19110
  6491                           	line	328
  6492                           ;main.c: 327: };
  6493                           ;main.c: 328: default:
  6494                           	
  6495  000B68                     l3668:
  6496                           	line	331
  6497                           ;main.c: 329: {
  6498                           ;main.c: 331: break;
  6499  000B68  D6FE               	goto	l19110
  6500                           	line	333
  6501                           	
  6502  000B6A                     l19140:
  6503                           ;main.c: 332: };
  6504                           ;main.c: 333: };
  6505  000B6A  D6FD               	goto	l19110
  6506                           	line	311
  6507                           	
  6508  000B6C                     l3662:
  6509                           	
  6510  000B6C                     l19142:
  6511  000B6C  0101               	movlb	1	; () banked
  6512  000B6E  0101               	movlb	1	; () banked
  6513  000B70  51CB               	movf	((main@msgtype))&0ffh,w
  6514                           	; Switch size 1, requested type "space"
  6515                           ; Number of cases is 4, Range of values is 11 to 40
  6516                           ; switch strategies available:
  6517                           ; Name         Instructions Cycles
  6518                           ; simple_byte           13     7 (average)
  6519                           ;	Chosen strategy is simple_byte
  6520                           
  6521  000B72  0A0B               	xorlw	11^0	; case 11
  6522  000B74  B4D8               	skipnz
  6523  000B76  D796               	goto	l19134
  6524  000B78  0A15               	xorlw	30^11	; case 30
  6525  000B7A  B4D8               	skipnz
  6526  000B7C  D7CD               	goto	l19138
  6527  000B7E  0A01               	xorlw	31^30	; case 31
  6528  000B80  B4D8               	skipnz
  6529  000B82  D7CA               	goto	l19138
  6530  000B84  0A37               	xorlw	40^31	; case 40
  6531  000B86  B4D8               	skipnz
  6532  000B88  D7B5               	goto	l19136
  6533  000B8A  D6ED               	goto	l19110
  6534                           
  6535                           	line	333
  6536                           	
  6537  000B8C                     l3664:; BSR set to: 1
  6538                           
  6539  000B8C  D6EC               	goto	l19110
  6540                           	line	334
  6541                           	
  6542  000B8E                     l3661:; BSR set to: 1
  6543                           
  6544  000B8E  D6EB               	goto	l19110
  6545                           	line	335
  6546                           	
  6547  000B90                     l3669:; BSR set to: 1
  6548                           
  6549                           	line	226
  6550  000B90  D6EA               	goto	l19110
  6551                           	
  6552  000B92                     l3670:; BSR set to: 1
  6553                           
  6554                           	line	337
  6555                           	
  6556  000B92                     l3671:; BSR set to: 1
  6557                           
  6558                           	global	start
  6559  000B92  EF69  F000         	goto	start
  6560                           	opt stack 0
  6561                           GLOBAL	__end_of_main
  6562  000B96                     	__end_of_main:
  6563                           	signat	_main,88
  6564                           	global	_enable_interrupts
  6565                           
  6566 ;; *************** function _enable_interrupts *****************
  6567 ;; Defined at:
  6568 ;;		line 14 in file "../src/interrupts.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;		None
  6571 ;; Auto vars:     Size  Location     Type
  6572 ;;		None
  6573 ;; Return value:  Size  Location     Type
  6574 ;;		None               void
  6575 ;; Registers used:
  6576 ;;		None
  6577 ;; Tracked objects:
  6578 ;;		On entry : 0/0
  6579 ;;		On exit  : 0/0
  6580 ;;		Unchanged: 0/0
  6581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6582 ;;      Params:         0       0       0       0       0
  6583 ;;      Locals:         0       0       0       0       0
  6584 ;;      Temps:          0       0       0       0       0
  6585 ;;      Totals:         0       0       0       0       0
  6586 ;;Total ram usage:        0 bytes
  6587 ;; Hardware stack levels used:    1
  6588 ;; Hardware stack levels required when called:   11
  6589 ;; This function calls:
  6590 ;;		Nothing
  6591 ;; This function is called by:
  6592 ;;		_main
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           psect	text1,class=CODE,space=0,reloc=2
  6596                           global __ptext1
  6597  002150                     __ptext1:
  6598                           psect	text1
  6599                           	file	"../src/interrupts.c"
  6600                           	line	14
  6601                           	global	__size_of_enable_interrupts
  6602  0000                     	__size_of_enable_interrupts	equ	__end_of_enable_interrupts-_enable_interrupts
  6603                           	
  6604  002150                     _enable_interrupts:; BSR set to: 1
  6605                           
  6606                           	opt	stack 19
  6607                           	line	17
  6608                           	
  6609  002150                     l18166:
  6610                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  6611  002150  8ED0               	bsf	((c:4048)),c,7	;volatile
  6612                           	line	18
  6613                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  6614  002152  8EF2               	bsf	((c:4082)),c,7	;volatile
  6615                           	line	19
  6616                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  6617  002154  8CF2               	bsf	((c:4082)),c,6	;volatile
  6618                           	line	20
  6619                           	
  6620  002156                     l1799:
  6621  002156  0012               	return
  6622                           	opt stack 0
  6623                           GLOBAL	__end_of_enable_interrupts
  6624  002158                     	__end_of_enable_interrupts:
  6625                           	signat	_enable_interrupts,88
  6626                           	global	_init_uart_recv
  6627                           
  6628 ;; *************** function _init_uart_recv *****************
  6629 ;; Defined at:
  6630 ;;		line 31 in file "../src/my_uart.c"
  6631 ;; Parameters:    Size  Location     Type
  6632 ;;  uc              2   54[BANK0 ] PTR struct __uart_comm
  6633 ;;		 -> main@uc(5), 
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;		None
  6636 ;; Return value:  Size  Location     Type
  6637 ;;		None               void
  6638 ;; Registers used:
  6639 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6645 ;;      Params:         0       2       0       0       0
  6646 ;;      Locals:         0       0       0       0       0
  6647 ;;      Temps:          0       0       0       0       0
  6648 ;;      Totals:         0       2       0       0       0
  6649 ;;Total ram usage:        2 bytes
  6650 ;; Hardware stack levels used:    1
  6651 ;; Hardware stack levels required when called:   11
  6652 ;; This function calls:
  6653 ;;		Nothing
  6654 ;; This function is called by:
  6655 ;;		_main
  6656 ;; This function uses a non-reentrant model
  6657 ;;
  6658                           psect	text2,class=CODE,space=0,reloc=2
  6659                           global __ptext2
  6660  0020B4                     __ptext2:
  6661                           psect	text2
  6662                           	file	"../src/my_uart.c"
  6663                           	line	31
  6664                           	global	__size_of_init_uart_recv
  6665  0000                     	__size_of_init_uart_recv	equ	__end_of_init_uart_recv-_init_uart_recv
  6666                           	
  6667  0020B4                     _init_uart_recv:
  6668                           	opt	stack 19
  6669                           	line	32
  6670                           	
  6671  0020B4                     l18318:
  6672                           ;my_uart.c: 32: uc_ptr = uc;
  6673  0020B4  C0B6  F04B         	movff	(init_uart_recv@uc),(c:_uc_ptr)
  6674  0020B8  C0B7  F04C         	movff	(init_uart_recv@uc+1),(c:_uc_ptr+1)
  6675                           	line	33
  6676                           	
  6677  0020BC                     l18320:
  6678                           ;my_uart.c: 33: uc_ptr->buflen = 0;
  6679  0020BC  EE20 F004          	lfsr	2,04h
  6680  0020C0  504B               	movf	((c:_uc_ptr)),c,w
  6681  0020C2  26D9               	addwf	fsr2l
  6682  0020C4  504C               	movf	((c:_uc_ptr+1)),c,w
  6683  0020C6  22DA               	addwfc	fsr2h
  6684  0020C8  0E00               	movlw	low(0)
  6685  0020CA  6EDF               	movwf	indf2
  6686                           	line	34
  6687                           	
  6688  0020CC                     l9239:
  6689  0020CC  0012               	return
  6690                           	opt stack 0
  6691                           GLOBAL	__end_of_init_uart_recv
  6692  0020CE                     	__end_of_init_uart_recv:
  6693                           	signat	_init_uart_recv,4216
  6694                           	global	_init_i2c
  6695                           
  6696 ;; *************** function _init_i2c *****************
  6697 ;; Defined at:
  6698 ;;		line 437 in file "../src/my_i2c.c"
  6699 ;; Parameters:    Size  Location     Type
  6700 ;;  ic              2   54[BANK0 ] PTR struct __i2c_comm
  6701 ;;		 -> main@ic(28), 
  6702 ;; Auto vars:     Size  Location     Type
  6703 ;;		None
  6704 ;; Return value:  Size  Location     Type
  6705 ;;		None               void
  6706 ;; Registers used:
  6707 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6708 ;; Tracked objects:
  6709 ;;		On entry : 0/0
  6710 ;;		On exit  : 0/0
  6711 ;;		Unchanged: 0/0
  6712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6713 ;;      Params:         0       2       0       0       0
  6714 ;;      Locals:         0       0       0       0       0
  6715 ;;      Temps:          0       0       0       0       0
  6716 ;;      Totals:         0       2       0       0       0
  6717 ;;Total ram usage:        2 bytes
  6718 ;; Hardware stack levels used:    1
  6719 ;; Hardware stack levels required when called:   11
  6720 ;; This function calls:
  6721 ;;		Nothing
  6722 ;; This function is called by:
  6723 ;;		_main
  6724 ;; This function uses a non-reentrant model
  6725 ;;
  6726                           psect	text3,class=CODE,space=0,reloc=2
  6727                           global __ptext3
  6728  001A9E                     __ptext3:
  6729                           psect	text3
  6730                           	file	"../src/my_i2c.c"
  6731                           	line	437
  6732                           	global	__size_of_init_i2c
  6733  0000                     	__size_of_init_i2c	equ	__end_of_init_i2c-_init_i2c
  6734                           	
  6735  001A9E                     _init_i2c:
  6736                           	opt	stack 19
  6737                           	line	438
  6738                           	
  6739  001A9E                     l18322:
  6740                           ;my_i2c.c: 438: ic_ptr = ic;
  6741  001A9E  C0B6  F0C4         	movff	(init_i2c@ic),(_ic_ptr)
  6742  001AA2  C0B7  F0C5         	movff	(init_i2c@ic+1),(_ic_ptr+1)
  6743                           	line	439
  6744                           	
  6745  001AA6                     l18324:
  6746                           ;my_i2c.c: 439: ic_ptr->buflen = 0;
  6747  001AA6  0100               	movlb	0	; () banked
  6748  001AA8  EE20 F00A          	lfsr	2,0Ah
  6749  001AAC  0100               	movlb	0	; () banked
  6750  001AAE  51C4               	movf	((_ic_ptr))&0ffh,w
  6751  001AB0  26D9               	addwf	fsr2l
  6752  001AB2  0100               	movlb	0	; () banked
  6753  001AB4  51C5               	movf	((_ic_ptr+1))&0ffh,w
  6754  001AB6  22DA               	addwfc	fsr2h
  6755  001AB8  0E00               	movlw	low(0)
  6756  001ABA  6EDF               	movwf	indf2
  6757                           	line	440
  6758                           ;my_i2c.c: 440: ic_ptr->event_count = 0;
  6759  001ABC  0100               	movlb	0	; () banked
  6760  001ABE  EE20 F00B          	lfsr	2,0Bh
  6761  001AC2  0100               	movlb	0	; () banked
  6762  001AC4  51C4               	movf	((_ic_ptr))&0ffh,w
  6763  001AC6  26D9               	addwf	fsr2l
  6764  001AC8  0100               	movlb	0	; () banked
  6765  001ACA  51C5               	movf	((_ic_ptr+1))&0ffh,w
  6766  001ACC  22DA               	addwfc	fsr2h
  6767  001ACE  0E00               	movlw	low(0)
  6768  001AD0  6EDF               	movwf	indf2
  6769                           	line	441
  6770                           ;my_i2c.c: 441: ic_ptr->status = 0x5;
  6771  001AD2  0100               	movlb	0	; () banked
  6772  001AD4  EE20 F00C          	lfsr	2,0Ch
  6773  001AD8  0100               	movlb	0	; () banked
  6774  001ADA  51C4               	movf	((_ic_ptr))&0ffh,w
  6775  001ADC  26D9               	addwf	fsr2l
  6776  001ADE  0100               	movlb	0	; () banked
  6777  001AE0  51C5               	movf	((_ic_ptr+1))&0ffh,w
  6778  001AE2  22DA               	addwfc	fsr2h
  6779  001AE4  0E05               	movlw	low(05h)
  6780  001AE6  6EDF               	movwf	indf2
  6781                           	line	442
  6782                           ;my_i2c.c: 442: ic_ptr->error_count = 0;
  6783  001AE8  0100               	movlb	0	; () banked
  6784  001AEA  EE20 F00E          	lfsr	2,0Eh
  6785  001AEE  0100               	movlb	0	; () banked
  6786  001AF0  51C4               	movf	((_ic_ptr))&0ffh,w
  6787  001AF2  26D9               	addwf	fsr2l
  6788  001AF4  0100               	movlb	0	; () banked
  6789  001AF6  51C5               	movf	((_ic_ptr+1))&0ffh,w
  6790  001AF8  22DA               	addwfc	fsr2h
  6791  001AFA  0E00               	movlw	low(0)
  6792  001AFC  6EDF               	movwf	indf2
  6793                           	line	443
  6794                           	
  6795  001AFE                     l7437:; BSR set to: 0
  6796                           
  6797  001AFE  0012               	return
  6798                           	opt stack 0
  6799                           GLOBAL	__end_of_init_i2c
  6800  001B00                     	__end_of_init_i2c:
  6801                           	signat	_init_i2c,4216
  6802                           	global	_init_timer1_lthread
  6803                           
  6804 ;; *************** function _init_timer1_lthread *****************
  6805 ;; Defined at:
  6806 ;;		line 9 in file "../src/timer1_thread.c"
  6807 ;; Parameters:    Size  Location     Type
  6808 ;;  tptr            2   59[BANK0 ] PTR struct __timer1_thre
  6809 ;;		 -> main@t1thread_data(2), 
  6810 ;; Auto vars:     Size  Location     Type
  6811 ;;		None
  6812 ;; Return value:  Size  Location     Type
  6813 ;;		None               void
  6814 ;; Registers used:
  6815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6816 ;; Tracked objects:
  6817 ;;		On entry : 0/0
  6818 ;;		On exit  : 0/0
  6819 ;;		Unchanged: 0/0
  6820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6821 ;;      Params:         0       2       0       0       0
  6822 ;;      Locals:         0       0       0       0       0
  6823 ;;      Temps:          0       3       0       0       0
  6824 ;;      Totals:         0       5       0       0       0
  6825 ;;Total ram usage:        5 bytes
  6826 ;; Hardware stack levels used:    1
  6827 ;; Hardware stack levels required when called:   12
  6828 ;; This function calls:
  6829 ;;		_OpenADC
  6830 ;;		_SetChanADC
  6831 ;; This function is called by:
  6832 ;;		_main
  6833 ;; This function uses a non-reentrant model
  6834 ;;
  6835                           psect	text4,class=CODE,space=0,reloc=2
  6836                           global __ptext4
  6837  001A3A                     __ptext4:
  6838                           psect	text4
  6839                           	file	"../src/timer1_thread.c"
  6840                           	line	9
  6841                           	global	__size_of_init_timer1_lthread
  6842  0000                     	__size_of_init_timer1_lthread	equ	__end_of_init_timer1_lthread-_init_timer1_lthread
  6843                           	
  6844  001A3A                     _init_timer1_lthread:; BSR set to: 0
  6845                           
  6846                           	opt	stack 18
  6847                           	line	14
  6848                           	
  6849  001A3A                     l18326:
  6850                           ;timer1_thread.c: 11: OpenADC(0b10011111 & 0b11111111 & 0b11110001,
  6851                           ;timer1_thread.c: 12: 0b10000111 & 0b10001111 &
  6852                           ;timer1_thread.c: 13: 0b01111111 & 0b11111110 &
  6853                           ;timer1_thread.c: 14: 0b11111101, 0b1011);
  6854  001A3A  0100               	movlb	0	; () banked
  6855  001A3C  6FBD               	movwf	(??_init_timer1_lthread+0+0)&0ffh
  6856  001A3E  0E91               	movlw	low(091h)
  6857  001A40  0100               	movlb	0	; () banked
  6858  001A42  0100               	movlb	0	; () banked
  6859  001A44  6FB6               	movwf	((?_OpenADC))&0ffh
  6860  001A46  0100               	movlb	0	; () banked
  6861  001A48  51BD               	movf	(??_init_timer1_lthread+0+0)&0ffh,w
  6862  001A4A  0100               	movlb	0	; () banked
  6863  001A4C  6FBE               	movwf	(??_init_timer1_lthread+1+0)&0ffh
  6864  001A4E  0E04               	movlw	low(04h)
  6865  001A50  0100               	movlb	0	; () banked
  6866  001A52  0100               	movlb	0	; () banked
  6867  001A54  6FB7               	movwf	(0+(?_OpenADC+01h))&0ffh
  6868  001A56  0100               	movlb	0	; () banked
  6869  001A58  51BE               	movf	(??_init_timer1_lthread+1+0)&0ffh,w
  6870  001A5A  0100               	movlb	0	; () banked
  6871  001A5C  6FBF               	movwf	(??_init_timer1_lthread+2+0)&0ffh
  6872  001A5E  0E0B               	movlw	low(0Bh)
  6873  001A60  0100               	movlb	0	; () banked
  6874  001A62  0100               	movlb	0	; () banked
  6875  001A64  6FB8               	movwf	(0+(?_OpenADC+02h))&0ffh
  6876  001A66  0100               	movlb	0	; () banked
  6877  001A68  51BF               	movf	(??_init_timer1_lthread+2+0)&0ffh,w
  6878  001A6A  0100               	movlb	0	; () banked
  6879  001A6C  EC69  F00C         	call	_OpenADC	;wreg free
  6880                           	line	15
  6881                           ;timer1_thread.c: 15: SetChanADC(0b10000111);
  6882  001A70  0100               	movlb	0	; () banked
  6883  001A72  6FBD               	movwf	(??_init_timer1_lthread+0+0)&0ffh
  6884  001A74  0E87               	movlw	low(087h)
  6885  001A76  0100               	movlb	0	; () banked
  6886  001A78  0100               	movlb	0	; () banked
  6887  001A7A  6FB6               	movwf	((?_SetChanADC))&0ffh
  6888  001A7C  0100               	movlb	0	; () banked
  6889  001A7E  51BD               	movf	(??_init_timer1_lthread+0+0)&0ffh,w
  6890  001A80  0100               	movlb	0	; () banked
  6891  001A82  EC4C  F010         	call	_SetChanADC	;wreg free
  6892                           	line	17
  6893                           	
  6894  001A86                     l18328:
  6895                           ;timer1_thread.c: 17: (PIR1bits.ADIF=0,INTCONbits.PEIE=1,PIE1bits.ADIE=1);
  6896  001A86  9C9E               	bcf	((c:3998)),c,6	;volatile
  6897                           	
  6898  001A88                     l18330:
  6899  001A88  8CF2               	bsf	((c:4082)),c,6	;volatile
  6900                           	
  6901  001A8A                     l18332:
  6902  001A8A  8C9D               	bsf	((c:3997)),c,6	;volatile
  6903                           	line	18
  6904                           	
  6905  001A8C                     l18334:
  6906                           ;timer1_thread.c: 18: tptr->timerval = 0;
  6907  001A8C  C0BB  FFD9         	movff	(init_timer1_lthread@tptr),fsr2l
  6908  001A90  C0BC  FFDA         	movff	(init_timer1_lthread@tptr+1),fsr2h
  6909  001A94  0E00               	movlw	low(0)
  6910  001A96  6EDE               	movwf	postinc2
  6911  001A98  0E00               	movlw	high(0)
  6912  001A9A  6EDD               	movwf	postdec2
  6913                           	line	19
  6914                           	
  6915  001A9C                     l12819:
  6916  001A9C  0012               	return
  6917                           	opt stack 0
  6918                           GLOBAL	__end_of_init_timer1_lthread
  6919  001A9E                     	__end_of_init_timer1_lthread:
  6920                           	signat	_init_timer1_lthread,4216
  6921                           	global	_init_queues
  6922                           
  6923 ;; *************** function _init_queues *****************
  6924 ;; Defined at:
  6925 ;;		line 194 in file "../src/messages.c"
  6926 ;; Parameters:    Size  Location     Type
  6927 ;;		None
  6928 ;; Auto vars:     Size  Location     Type
  6929 ;;		None
  6930 ;; Return value:  Size  Location     Type
  6931 ;;		None               void
  6932 ;; Registers used:
  6933 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6934 ;; Tracked objects:
  6935 ;;		On entry : 0/0
  6936 ;;		On exit  : 0/0
  6937 ;;		Unchanged: 0/0
  6938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6939 ;;      Params:         0       0       0       0       0
  6940 ;;      Locals:         0       0       0       0       0
  6941 ;;      Temps:          0       1       0       0       0
  6942 ;;      Totals:         0       1       0       0       0
  6943 ;;Total ram usage:        1 bytes
  6944 ;; Hardware stack levels used:    1
  6945 ;; Hardware stack levels required when called:   12
  6946 ;; This function calls:
  6947 ;;		_init_queue
  6948 ;; This function is called by:
  6949 ;;		_main
  6950 ;; This function uses a non-reentrant model
  6951 ;;
  6952                           psect	text5,class=CODE,space=0,reloc=2
  6953                           global __ptext5
  6954  0019CC                     __ptext5:
  6955                           psect	text5
  6956                           	file	"../src/messages.c"
  6957                           	line	194
  6958                           	global	__size_of_init_queues
  6959  0000                     	__size_of_init_queues	equ	__end_of_init_queues-_init_queues
  6960                           	
  6961  0019CC                     _init_queues:
  6962                           	opt	stack 18
  6963                           	line	195
  6964                           	
  6965  0019CC                     l18336:
  6966                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  6967  0019CC  0100               	movlb	0	; () banked
  6968  0019CE  6FBA               	movwf	(??_init_queues+0+0)&0ffh
  6969  0019D0  0E00               	movlw	low(0)
  6970  0019D2  6E48               	movwf	((c:_MQ_Main_Willing_to_block)),c
  6971  0019D4  0100               	movlb	0	; () banked
  6972  0019D6  51BA               	movf	(??_init_queues+0+0)&0ffh,w
  6973                           	line	196
  6974                           	
  6975  0019D8                     l18338:; BSR set to: 0
  6976                           
  6977                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  6978  0019D8  0101               	movlb	1	; () banked
  6979  0019DA  0E01               	movlw	high(_ToMainLow_MQ)
  6980  0019DC  0100               	movlb	0	; () banked
  6981  0019DE  0100               	movlb	0	; () banked
  6982  0019E0  6FB7               	movwf	((?_init_queue+1))&0ffh
  6983  0019E2  0101               	movlb	1	; () banked
  6984  0019E4  0E6C               	movlw	low(_ToMainLow_MQ)
  6985  0019E6  0100               	movlb	0	; () banked
  6986  0019E8  6FB6               	movwf	((?_init_queue))&0ffh
  6987  0019EA  0100               	movlb	0	; () banked
  6988  0019EC  EC26  F00C         	call	_init_queue	;wreg free
  6989                           	line	197
  6990                           	
  6991  0019F0                     l18340:
  6992                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  6993  0019F0  0101               	movlb	1	; () banked
  6994  0019F2  0E01               	movlw	high(_ToMainHigh_MQ)
  6995  0019F4  0100               	movlb	0	; () banked
  6996  0019F6  0100               	movlb	0	; () banked
  6997  0019F8  6FB7               	movwf	((?_init_queue+1))&0ffh
  6998  0019FA  0101               	movlb	1	; () banked
  6999  0019FC  0E36               	movlw	low(_ToMainHigh_MQ)
  7000  0019FE  0100               	movlb	0	; () banked
  7001  001A00  6FB6               	movwf	((?_init_queue))&0ffh
  7002  001A02  0100               	movlb	0	; () banked
  7003  001A04  EC26  F00C         	call	_init_queue	;wreg free
  7004                           	line	198
  7005                           	
  7006  001A08                     l18342:
  7007                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  7008  001A08  0101               	movlb	1	; () banked
  7009  001A0A  0E01               	movlw	high(_FromMainLow_MQ)
  7010  001A0C  0100               	movlb	0	; () banked
  7011  001A0E  0100               	movlb	0	; () banked
  7012  001A10  6FB7               	movwf	((?_init_queue+1))&0ffh
  7013  001A12  0101               	movlb	1	; () banked
  7014  001A14  0E00               	movlw	low(_FromMainLow_MQ)
  7015  001A16  0100               	movlb	0	; () banked
  7016  001A18  6FB6               	movwf	((?_init_queue))&0ffh
  7017  001A1A  0100               	movlb	0	; () banked
  7018  001A1C  EC26  F00C         	call	_init_queue	;wreg free
  7019                           	line	199
  7020                           	
  7021  001A20                     l18344:
  7022                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  7023  001A20  0102               	movlb	2	; () banked
  7024  001A22  0E02               	movlw	high(_FromMainHigh_MQ)
  7025  001A24  0100               	movlb	0	; () banked
  7026  001A26  0100               	movlb	0	; () banked
  7027  001A28  6FB7               	movwf	((?_init_queue+1))&0ffh
  7028  001A2A  0102               	movlb	2	; () banked
  7029  001A2C  0E00               	movlw	low(_FromMainHigh_MQ)
  7030  001A2E  0100               	movlb	0	; () banked
  7031  001A30  6FB6               	movwf	((?_init_queue))&0ffh
  7032  001A32  0100               	movlb	0	; () banked
  7033  001A34  EC26  F00C         	call	_init_queue	;wreg free
  7034                           	line	200
  7035                           	
  7036  001A38                     l5517:
  7037  001A38  0012               	return
  7038                           	opt stack 0
  7039                           GLOBAL	__end_of_init_queues
  7040  001A3A                     	__end_of_init_queues:
  7041                           	signat	_init_queues,88
  7042                           	global	_OpenTimer1
  7043                           
  7044 ;; *************** function _OpenTimer1 *****************
  7045 ;; Defined at:
  7046 ;;		line 17 in file "plib/Timers/t1open.c"
  7047 ;; Parameters:    Size  Location     Type
  7048 ;;  config          1   54[BANK0 ] unsigned char 
  7049 ;; Auto vars:     Size  Location     Type
  7050 ;;		None
  7051 ;; Return value:  Size  Location     Type
  7052 ;;		None               void
  7053 ;; Registers used:
  7054 ;;		wreg, status,2, status,0
  7055 ;; Tracked objects:
  7056 ;;		On entry : 0/0
  7057 ;;		On exit  : 0/0
  7058 ;;		Unchanged: 0/0
  7059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7060 ;;      Params:         0       1       0       0       0
  7061 ;;      Locals:         0       0       0       0       0
  7062 ;;      Temps:          0       0       0       0       0
  7063 ;;      Totals:         0       1       0       0       0
  7064 ;;Total ram usage:        1 bytes
  7065 ;; Hardware stack levels used:    1
  7066 ;; Hardware stack levels required when called:   11
  7067 ;; This function calls:
  7068 ;;		Nothing
  7069 ;; This function is called by:
  7070 ;;		_main
  7071 ;; This function uses a non-reentrant model
  7072 ;;
  7073                           psect	text6,class=CODE,space=0,reloc=2
  7074                           global __ptext6
  7075  001E08                     __ptext6:
  7076                           psect	text6
  7077                           	file	"plib/Timers/t1open.c"
  7078                           	line	17
  7079                           	global	__size_of_OpenTimer1
  7080  0000                     	__size_of_OpenTimer1	equ	__end_of_OpenTimer1-_OpenTimer1
  7081                           	
  7082  001E08                     _OpenTimer1:
  7083                           	opt	stack 19
  7084                           	line	18
  7085                           	
  7086  001E08                     l18346:
  7087  001E08  0100               	movlb	0	; () banked
  7088  001E0A  0100               	movlb	0	; () banked
  7089  001E0C  51B6               	movf	((OpenTimer1@config))&0ffh,w
  7090  001E0E  0B7E               	andlw	low(07Eh)
  7091  001E10  6ECD               	movwf	((c:4045)),c	;volatile
  7092                           	line	21
  7093                           	
  7094  001E12                     l18348:; BSR set to: 0
  7095                           
  7096  001E12  0100               	movlb	0	; () banked
  7097                           	
  7098  001E14  0100               	movlb	0	; () banked
  7099  001E16  ADB6               	btfss	((OpenTimer1@config))&0ffh,(6)&7
  7100  001E18  D001               	goto	u1171
  7101  001E1A  D001               	goto	u1170
  7102  001E1C                     u1171:
  7103  001E1C  D002               	goto	l16478
  7104  001E1E                     u1170:
  7105                           	line	22
  7106                           	
  7107  001E1E                     l18350:; BSR set to: 0
  7108                           
  7109  001E1E  8ECD               	bsf	((c:4045)),c,7	;volatile
  7110  001E20  D002               	goto	l18352
  7111                           	line	23
  7112                           	
  7113  001E22                     l16478:; BSR set to: 0
  7114                           
  7115                           	line	24
  7116  001E22  9ECD               	bcf	((c:4045)),c,7	;volatile
  7117  001E24  D000               	goto	l18352
  7118                           	
  7119  001E26                     l16479:; BSR set to: 0
  7120                           
  7121                           	line	26
  7122                           	
  7123  001E26                     l18352:; BSR set to: 0
  7124                           
  7125  001E26  0E00               	movlw	low(0)
  7126  001E28  6ECF               	movwf	((c:4047)),c	;volatile
  7127                           	line	27
  7128  001E2A  0E00               	movlw	low(0)
  7129  001E2C  6ECE               	movwf	((c:4046)),c	;volatile
  7130                           	line	28
  7131                           	
  7132  001E2E                     l18354:; BSR set to: 0
  7133                           
  7134  001E2E  909E               	bcf	((c:3998)),c,0	;volatile
  7135                           	line	30
  7136                           	
  7137  001E30                     l18356:; BSR set to: 0
  7138                           
  7139  001E30  0100               	movlb	0	; () banked
  7140                           	
  7141  001E32  0100               	movlb	0	; () banked
  7142  001E34  AFB6               	btfss	((OpenTimer1@config))&0ffh,(7)&7
  7143  001E36  D001               	goto	u1181
  7144  001E38  D001               	goto	u1180
  7145  001E3A                     u1181:
  7146  001E3A  D002               	goto	l16480
  7147  001E3C                     u1180:
  7148                           	line	31
  7149                           	
  7150  001E3C                     l18358:; BSR set to: 0
  7151                           
  7152  001E3C  809D               	bsf	((c:3997)),c,0	;volatile
  7153  001E3E  D001               	goto	l16481
  7154                           	line	32
  7155                           	
  7156  001E40                     l16480:; BSR set to: 0
  7157                           
  7158                           	line	33
  7159  001E40  909D               	bcf	((c:3997)),c,0	;volatile
  7160                           	
  7161  001E42                     l16481:; BSR set to: 0
  7162                           
  7163                           	line	35
  7164  001E42  80CD               	bsf	((c:4045)),c,0	;volatile
  7165                           	line	36
  7166                           	
  7167  001E44                     l16482:; BSR set to: 0
  7168                           
  7169  001E44  0012               	return
  7170                           	opt stack 0
  7171                           GLOBAL	__end_of_OpenTimer1
  7172  001E46                     	__end_of_OpenTimer1:
  7173                           	signat	_OpenTimer1,4216
  7174                           	global	_i2c_configure_slave
  7175                           
  7176 ;; *************** function _i2c_configure_slave *****************
  7177 ;; Defined at:
  7178 ;;		line 448 in file "../src/my_i2c.c"
  7179 ;; Parameters:    Size  Location     Type
  7180 ;;  addr            1   54[BANK0 ] unsigned char 
  7181 ;; Auto vars:     Size  Location     Type
  7182 ;;		None
  7183 ;; Return value:  Size  Location     Type
  7184 ;;		None               void
  7185 ;; Registers used:
  7186 ;;		wreg, status,2, status,0
  7187 ;; Tracked objects:
  7188 ;;		On entry : 0/0
  7189 ;;		On exit  : 0/0
  7190 ;;		Unchanged: 0/0
  7191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7192 ;;      Params:         0       1       0       0       0
  7193 ;;      Locals:         0       0       0       0       0
  7194 ;;      Temps:          0       1       0       0       0
  7195 ;;      Totals:         0       2       0       0       0
  7196 ;;Total ram usage:        2 bytes
  7197 ;; Hardware stack levels used:    1
  7198 ;; Hardware stack levels required when called:   11
  7199 ;; This function calls:
  7200 ;;		Nothing
  7201 ;; This function is called by:
  7202 ;;		_main
  7203 ;; This function uses a non-reentrant model
  7204 ;;
  7205                           psect	text7,class=CODE,space=0,reloc=2
  7206                           global __ptext7
  7207  001EF4                     __ptext7:
  7208                           psect	text7
  7209                           	file	"../src/my_i2c.c"
  7210                           	line	448
  7211                           	global	__size_of_i2c_configure_slave
  7212  0000                     	__size_of_i2c_configure_slave	equ	__end_of_i2c_configure_slave-_i2c_configure_slave
  7213                           	
  7214  001EF4                     _i2c_configure_slave:; BSR set to: 0
  7215                           
  7216                           	opt	stack 19
  7217                           	line	449
  7218                           	
  7219  001EF4                     l18360:
  7220                           ;my_i2c.c: 449: i2cMode = 1;
  7221  001EF4  0100               	movlb	0	; () banked
  7222  001EF6  6FB7               	movwf	(??_i2c_configure_slave+0+0)&0ffh
  7223  001EF8  0E01               	movlw	low(01h)
  7224  001EFA  0100               	movlb	0	; () banked
  7225  001EFC  0100               	movlb	0	; () banked
  7226  001EFE  6FC7               	movwf	((_i2cMode))&0ffh
  7227  001F00  0100               	movlb	0	; () banked
  7228  001F02  51B7               	movf	(??_i2c_configure_slave+0+0)&0ffh,w
  7229                           	line	452
  7230                           	
  7231  001F04                     l18362:; BSR set to: 0
  7232                           
  7233                           ;my_i2c.c: 452: TRISCbits.TRISC3 = 1;
  7234  001F04  8694               	bsf	((c:3988)),c,3	;volatile
  7235                           	line	453
  7236                           	
  7237  001F06                     l18364:; BSR set to: 0
  7238                           
  7239                           ;my_i2c.c: 453: TRISCbits.TRISC4 = 1;
  7240  001F06  8894               	bsf	((c:3988)),c,4	;volatile
  7241                           	line	455
  7242                           	
  7243  001F08                     l18366:; BSR set to: 0
  7244                           
  7245                           ;my_i2c.c: 455: SSPADD = addr;
  7246  001F08  C0B6  FFC8         	movff	(i2c_configure_slave@addr),(c:4040)	;volatile
  7247                           	line	457
  7248                           	
  7249  001F0C                     l18368:; BSR set to: 0
  7250                           
  7251                           ;my_i2c.c: 457: SSPSTAT = 0x0;
  7252  001F0C  0E00               	movlw	low(0)
  7253  001F0E  6EC7               	movwf	((c:4039)),c	;volatile
  7254                           	line	458
  7255                           	
  7256  001F10                     l18370:; BSR set to: 0
  7257                           
  7258                           ;my_i2c.c: 458: SSPCON1 = 0x0;
  7259  001F10  0E00               	movlw	low(0)
  7260  001F12  6EC6               	movwf	((c:4038)),c	;volatile
  7261                           	line	459
  7262                           	
  7263  001F14                     l18372:; BSR set to: 0
  7264                           
  7265                           ;my_i2c.c: 459: SSPCON2 = 0x0;
  7266  001F14  0E00               	movlw	low(0)
  7267  001F16  6EC5               	movwf	((c:4037)),c	;volatile
  7268                           	line	460
  7269                           	
  7270  001F18                     l18374:; BSR set to: 0
  7271                           
  7272                           ;my_i2c.c: 460: SSPCON1 |= 0x0E;
  7273  001F18  0E0E               	movlw	(0Eh)&0ffh
  7274  001F1A  12C6               	iorwf	((c:4038)),c	;volatile
  7275                           	line	461
  7276                           ;my_i2c.c: 461: SSPSTAT |= 0b10000000;
  7277  001F1C  8EC7               	bsf	(0+(7/8)+(c:4039)),c,(7)&7	;volatile
  7278                           	line	463
  7279                           	
  7280  001F1E                     l18376:; BSR set to: 0
  7281                           
  7282                           ;my_i2c.c: 463: TRISCbits.TRISC3 = 1;
  7283  001F1E  8694               	bsf	((c:3988)),c,3	;volatile
  7284                           	line	464
  7285                           	
  7286  001F20                     l18378:; BSR set to: 0
  7287                           
  7288                           ;my_i2c.c: 464: TRISCbits.TRISC4 = 1;
  7289  001F20  8894               	bsf	((c:3988)),c,4	;volatile
  7290                           	line	479
  7291                           	
  7292  001F22                     l18380:; BSR set to: 0
  7293                           
  7294                           ;my_i2c.c: 479: SSPCON2bits.SEN = 1;
  7295  001F22  80C5               	bsf	((c:4037)),c,0	;volatile
  7296                           	line	480
  7297                           ;my_i2c.c: 480: SSPCON1 |= 0b00100000;
  7298  001F24  8AC6               	bsf	(0+(5/8)+(c:4038)),c,(5)&7	;volatile
  7299                           	line	482
  7300                           	
  7301  001F26                     l7440:; BSR set to: 0
  7302                           
  7303  001F26  0012               	return
  7304                           	opt stack 0
  7305                           GLOBAL	__end_of_i2c_configure_slave
  7306  001F28                     	__end_of_i2c_configure_slave:
  7307                           	signat	_i2c_configure_slave,4216
  7308                           	global	_OpenUSART
  7309                           
  7310 ;; *************** function _OpenUSART *****************
  7311 ;; Defined at:
  7312 ;;		line 74 in file "plib/USART/uopen.c"
  7313 ;; Parameters:    Size  Location     Type
  7314 ;;  config          1   54[BANK0 ] unsigned char 
  7315 ;;  spbrg           2   55[BANK0 ] unsigned int 
  7316 ;; Auto vars:     Size  Location     Type
  7317 ;;		None
  7318 ;; Return value:  Size  Location     Type
  7319 ;;		None               void
  7320 ;; Registers used:
  7321 ;;		wreg, status,2
  7322 ;; Tracked objects:
  7323 ;;		On entry : 0/0
  7324 ;;		On exit  : 0/0
  7325 ;;		Unchanged: 0/0
  7326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7327 ;;      Params:         0       3       0       0       0
  7328 ;;      Locals:         0       0       0       0       0
  7329 ;;      Temps:          0       0       0       0       0
  7330 ;;      Totals:         0       3       0       0       0
  7331 ;;Total ram usage:        3 bytes
  7332 ;; Hardware stack levels used:    1
  7333 ;; Hardware stack levels required when called:   11
  7334 ;; This function calls:
  7335 ;;		Nothing
  7336 ;; This function is called by:
  7337 ;;		_main
  7338 ;; This function uses a non-reentrant model
  7339 ;;
  7340                           psect	text8,class=CODE,space=0,reloc=2
  7341                           global __ptext8
  7342  00165C                     __ptext8:
  7343                           psect	text8
  7344                           	file	"plib/USART/uopen.c"
  7345                           	line	74
  7346                           	global	__size_of_OpenUSART
  7347  0000                     	__size_of_OpenUSART	equ	__end_of_OpenUSART-_OpenUSART
  7348                           	
  7349  00165C                     _OpenUSART:; BSR set to: 0
  7350                           
  7351                           	opt	stack 19
  7352                           	line	75
  7353                           	
  7354  00165C                     l18382:
  7355  00165C  0E00               	movlw	low(0)
  7356  00165E  6EAC               	movwf	((c:4012)),c	;volatile
  7357                           	line	76
  7358  001660  0E00               	movlw	low(0)
  7359  001662  6EAB               	movwf	((c:4011)),c	;volatile
  7360                           	line	78
  7361                           	
  7362  001664                     l18384:
  7363  001664  0100               	movlb	0	; () banked
  7364                           	
  7365  001666  0100               	movlb	0	; () banked
  7366  001668  A1B6               	btfss	((OpenUSART@config))&0ffh,(0)&7
  7367  00166A  D001               	goto	u1191
  7368  00166C  D001               	goto	u1190
  7369  00166E                     u1191:
  7370  00166E  D001               	goto	l16519
  7371  001670                     u1190:
  7372                           	line	79
  7373                           	
  7374  001670                     l18386:; BSR set to: 0
  7375                           
  7376  001670  88AC               	bsf	((c:4012)),c,4	;volatile
  7377                           	
  7378  001672                     l16519:; BSR set to: 0
  7379                           
  7380                           	line	81
  7381  001672  0100               	movlb	0	; () banked
  7382                           	
  7383  001674  0100               	movlb	0	; () banked
  7384  001676  A3B6               	btfss	((OpenUSART@config))&0ffh,(1)&7
  7385  001678  D001               	goto	u1201
  7386  00167A  D001               	goto	u1200
  7387  00167C                     u1201:
  7388  00167C  D002               	goto	l16520
  7389  00167E                     u1200:
  7390                           	line	83
  7391                           	
  7392  00167E                     l18388:; BSR set to: 0
  7393                           
  7394  00167E  8CAC               	bsf	((c:4012)),c,6	;volatile
  7395                           	line	84
  7396  001680  8CAB               	bsf	((c:4011)),c,6	;volatile
  7397                           	line	85
  7398                           	
  7399  001682                     l16520:; BSR set to: 0
  7400                           
  7401                           	line	87
  7402  001682  0100               	movlb	0	; () banked
  7403                           	
  7404  001684  0100               	movlb	0	; () banked
  7405  001686  A5B6               	btfss	((OpenUSART@config))&0ffh,(2)&7
  7406  001688  D001               	goto	u1211
  7407  00168A  D001               	goto	u1210
  7408  00168C                     u1211:
  7409  00168C  D001               	goto	l16521
  7410  00168E                     u1210:
  7411                           	line	88
  7412                           	
  7413  00168E                     l18390:; BSR set to: 0
  7414                           
  7415  00168E  8EAC               	bsf	((c:4012)),c,7	;volatile
  7416                           	
  7417  001690                     l16521:; BSR set to: 0
  7418                           
  7419                           	line	90
  7420  001690  0100               	movlb	0	; () banked
  7421                           	
  7422  001692  0100               	movlb	0	; () banked
  7423  001694  A7B6               	btfss	((OpenUSART@config))&0ffh,(3)&7
  7424  001696  D001               	goto	u1221
  7425  001698  D001               	goto	u1220
  7426  00169A                     u1221:
  7427  00169A  D002               	goto	l16522
  7428  00169C                     u1220:
  7429                           	line	91
  7430                           	
  7431  00169C                     l18392:; BSR set to: 0
  7432                           
  7433  00169C  88AB               	bsf	((c:4011)),c,4	;volatile
  7434  00169E  D001               	goto	l16523
  7435                           	line	92
  7436                           	
  7437  0016A0                     l16522:; BSR set to: 0
  7438                           
  7439                           	line	93
  7440  0016A0  8AAB               	bsf	((c:4011)),c,5	;volatile
  7441                           	
  7442  0016A2                     l16523:; BSR set to: 0
  7443                           
  7444                           	line	95
  7445  0016A2  0100               	movlb	0	; () banked
  7446                           	
  7447  0016A4  0100               	movlb	0	; () banked
  7448  0016A6  A9B6               	btfss	((OpenUSART@config))&0ffh,(4)&7
  7449  0016A8  D001               	goto	u1231
  7450  0016AA  D001               	goto	u1230
  7451  0016AC                     u1231:
  7452  0016AC  D001               	goto	l16524
  7453  0016AE                     u1230:
  7454                           	line	96
  7455                           	
  7456  0016AE                     l18394:; BSR set to: 0
  7457                           
  7458  0016AE  84AC               	bsf	((c:4012)),c,2	;volatile
  7459                           	
  7460  0016B0                     l16524:; BSR set to: 0
  7461                           
  7462                           	line	98
  7463  0016B0  989E               	bcf	((c:3998)),c,4	;volatile
  7464                           	line	100
  7465  0016B2  0100               	movlb	0	; () banked
  7466                           	
  7467  0016B4  0100               	movlb	0	; () banked
  7468  0016B6  ABB6               	btfss	((OpenUSART@config))&0ffh,(5)&7
  7469  0016B8  D001               	goto	u1241
  7470  0016BA  D001               	goto	u1240
  7471  0016BC                     u1241:
  7472  0016BC  D001               	goto	l16525
  7473  0016BE                     u1240:
  7474                           	line	101
  7475                           	
  7476  0016BE                     l18396:; BSR set to: 0
  7477                           
  7478  0016BE  86AB               	bsf	((c:4011)),c,3	;volatile
  7479                           	
  7480  0016C0                     l16525:; BSR set to: 0
  7481                           
  7482                           	line	103
  7483  0016C0  0100               	movlb	0	; () banked
  7484                           	
  7485  0016C2  0100               	movlb	0	; () banked
  7486  0016C4  ADB6               	btfss	((OpenUSART@config))&0ffh,(6)&7
  7487  0016C6  D001               	goto	u1251
  7488  0016C8  D001               	goto	u1250
  7489  0016CA                     u1251:
  7490  0016CA  D002               	goto	l16526
  7491  0016CC                     u1250:
  7492                           	line	104
  7493                           	
  7494  0016CC                     l18398:; BSR set to: 0
  7495                           
  7496  0016CC  8A9D               	bsf	((c:3997)),c,5	;volatile
  7497  0016CE  D001               	goto	l16527
  7498                           	line	105
  7499                           	
  7500  0016D0                     l16526:; BSR set to: 0
  7501                           
  7502                           	line	106
  7503  0016D0  9A9D               	bcf	((c:3997)),c,5	;volatile
  7504                           	
  7505  0016D2                     l16527:; BSR set to: 0
  7506                           
  7507                           	line	108
  7508  0016D2  9A9E               	bcf	((c:3998)),c,5	;volatile
  7509                           	line	110
  7510  0016D4  0100               	movlb	0	; () banked
  7511                           	
  7512  0016D6  0100               	movlb	0	; () banked
  7513  0016D8  AFB6               	btfss	((OpenUSART@config))&0ffh,(7)&7
  7514  0016DA  D001               	goto	u1261
  7515  0016DC  D001               	goto	u1260
  7516  0016DE                     u1261:
  7517  0016DE  D002               	goto	l16528
  7518  0016E0                     u1260:
  7519                           	line	111
  7520                           	
  7521  0016E0                     l18400:; BSR set to: 0
  7522                           
  7523  0016E0  889D               	bsf	((c:3997)),c,4	;volatile
  7524  0016E2  D001               	goto	l16529
  7525                           	line	112
  7526                           	
  7527  0016E4                     l16528:; BSR set to: 0
  7528                           
  7529                           	line	113
  7530  0016E4  989D               	bcf	((c:3997)),c,4	;volatile
  7531                           	
  7532  0016E6                     l16529:; BSR set to: 0
  7533                           
  7534                           	line	115
  7535  0016E6  C0B7  FFAF         	movff	(OpenUSART@spbrg),(c:4015)	;volatile
  7536                           	line	116
  7537                           	
  7538  0016EA                     l18402:; BSR set to: 0
  7539                           
  7540  0016EA  0100               	movlb	0	; () banked
  7541  0016EC  0100               	movlb	0	; () banked
  7542  0016EE  51B8               	movf	((OpenUSART@spbrg+1))&0ffh,w
  7543  0016F0  6EB0               	movwf	((c:4016)),c	;volatile
  7544                           	line	118
  7545                           	
  7546  0016F2                     l18404:; BSR set to: 0
  7547                           
  7548  0016F2  8AAC               	bsf	((c:4012)),c,5	;volatile
  7549                           	line	119
  7550                           	
  7551  0016F4                     l18406:; BSR set to: 0
  7552                           
  7553  0016F4  8EAB               	bsf	((c:4011)),c,7	;volatile
  7554                           	line	137
  7555                           	
  7556  0016F6                     l18408:; BSR set to: 0
  7557                           
  7558  0016F6  9C94               	bcf	((c:3988)),c,6	;volatile
  7559                           	
  7560  0016F8                     l18410:; BSR set to: 0
  7561                           
  7562  0016F8  8E94               	bsf	((c:3988)),c,7	;volatile
  7563                           	line	138
  7564                           	
  7565  0016FA                     l18412:; BSR set to: 0
  7566                           
  7567                           	
  7568  0016FA  A8AC               	btfss	((c:4012)),c,4	;volatile
  7569  0016FC  D001               	goto	u1271
  7570  0016FE  D001               	goto	u1270
  7571  001700                     u1271:
  7572  001700  D006               	goto	l16531
  7573  001702                     u1270:
  7574                           	
  7575  001702                     l18414:; BSR set to: 0
  7576                           
  7577                           	
  7578  001702  BEAC               	btfsc	((c:4012)),c,7	;volatile
  7579  001704  D001               	goto	u1281
  7580  001706  D001               	goto	u1280
  7581  001708                     u1281:
  7582  001708  D002               	goto	l16531
  7583  00170A                     u1280:
  7584                           	line	139
  7585                           	
  7586  00170A                     l18416:; BSR set to: 0
  7587                           
  7588  00170A  8C94               	bsf	((c:3988)),c,6	;volatile
  7589  00170C  D000               	goto	l16531
  7590                           	
  7591  00170E                     l16530:; BSR set to: 0
  7592                           
  7593                           	line	143
  7594                           	
  7595  00170E                     l16531:; BSR set to: 0
  7596                           
  7597  00170E  0012               	return
  7598                           	opt stack 0
  7599                           GLOBAL	__end_of_OpenUSART
  7600  001710                     	__end_of_OpenUSART:
  7601                           	signat	_OpenUSART,8312
  7602                           	global	_block_on_To_msgqueues
  7603                           
  7604 ;; *************** function _block_on_To_msgqueues *****************
  7605 ;; Defined at:
  7606 ;;		line 258 in file "../src/messages.c"
  7607 ;; Parameters:    Size  Location     Type
  7608 ;;		None
  7609 ;; Auto vars:     Size  Location     Type
  7610 ;;		None
  7611 ;; Return value:  Size  Location     Type
  7612 ;;		None               void
  7613 ;; Registers used:
  7614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7615 ;; Tracked objects:
  7616 ;;		On entry : 0/0
  7617 ;;		On exit  : 0/0
  7618 ;;		Unchanged: 0/0
  7619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7620 ;;      Params:         0       0       0       0       0
  7621 ;;      Locals:         0       0       0       0       0
  7622 ;;      Temps:          0       1       0       0       0
  7623 ;;      Totals:         0       1       0       0       0
  7624 ;;Total ram usage:        1 bytes
  7625 ;; Hardware stack levels used:    1
  7626 ;; Hardware stack levels required when called:   14
  7627 ;; This function calls:
  7628 ;;		_in_main
  7629 ;;		_check_msg
  7630 ;;		_Delay1KTCYx
  7631 ;; This function is called by:
  7632 ;;		_main
  7633 ;; This function uses a non-reentrant model
  7634 ;;
  7635                           psect	text9,class=CODE,space=0,reloc=2
  7636                           global __ptext9
  7637  001412                     __ptext9:
  7638                           psect	text9
  7639                           	file	"../src/messages.c"
  7640                           	line	258
  7641                           	global	__size_of_block_on_To_msgqueues
  7642  0000                     	__size_of_block_on_To_msgqueues	equ	__end_of_block_on_To_msgqueues-_block_on_To_msgqueu
                                 es
  7643                           	
  7644  001412                     _block_on_To_msgqueues:; BSR set to: 0
  7645                           
  7646                           	opt	stack 16
  7647                           	line	259
  7648                           	
  7649  001412                     l18418:
  7650                           ;messages.c: 259: if (!in_main()) {
  7651  001412  0100               	movlb	0	; () banked
  7652  001414  ECAF  F00D         	call	_in_main	;wreg free
  7653  001418  0100               	movlb	0	; () banked
  7654  00141A  0100               	movlb	0	; () banked
  7655  00141C  51BB               	movf	(1+?_in_main)&0ffh,w
  7656  00141E  0100               	movlb	0	; () banked
  7657  001420  11BA               	iorwf (0+?_in_main)&0ffh,w
  7658                           
  7659  001422  A4D8               	btfss	status,2
  7660  001424  D001               	goto	u1291
  7661  001426  D001               	goto	u1290
  7662  001428                     u1291:
  7663  001428  D002               	goto	l5534
  7664  00142A                     u1290:
  7665  00142A  D05C               	goto	l5535
  7666                           	line	260
  7667                           	
  7668  00142C                     l18420:; BSR set to: 0
  7669                           
  7670                           ;messages.c: 260: return;
  7671  00142C  D05B               	goto	l5535
  7672                           	line	261
  7673                           	
  7674  00142E                     l5534:; BSR set to: 0
  7675                           
  7676                           	line	262
  7677                           ;messages.c: 261: }
  7678                           ;messages.c: 262: LATBbits.LATB3 = 1;
  7679  00142E  868A               	bsf	((c:3978)),c,3	;volatile
  7680                           	line	263
  7681                           	
  7682  001430                     l18422:; BSR set to: 0
  7683                           
  7684                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  7685  001430  0100               	movlb	0	; () banked
  7686  001432  6FBC               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7687  001434  0E01               	movlw	low(01h)
  7688  001436  6E48               	movwf	((c:_MQ_Main_Willing_to_block)),c
  7689  001438  0100               	movlb	0	; () banked
  7690  00143A  51BC               	movf	(??_block_on_To_msgqueues+0+0)&0ffh,w
  7691  00143C  D000               	goto	l18424
  7692                           	line	264
  7693                           ;messages.c: 264: while (1) {
  7694                           	
  7695  00143E                     l5536:; BSR set to: 0
  7696                           
  7697                           	line	265
  7698                           	
  7699  00143E                     l18424:; BSR set to: 0
  7700                           
  7701                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  7702  00143E  0101               	movlb	1	; () banked
  7703  001440  0E01               	movlw	high(_ToMainHigh_MQ)
  7704  001442  0100               	movlb	0	; () banked
  7705  001444  0100               	movlb	0	; () banked
  7706  001446  6FB7               	movwf	((?_check_msg+1))&0ffh
  7707  001448  0101               	movlb	1	; () banked
  7708  00144A  0E36               	movlw	low(_ToMainHigh_MQ)
  7709  00144C  0100               	movlb	0	; () banked
  7710  00144E  6FB6               	movwf	((?_check_msg))&0ffh
  7711  001450  0100               	movlb	0	; () banked
  7712  001452  EC42  F00F         	call	_check_msg	;wreg free
  7713  001456  0900               	iorlw	0
  7714  001458  B4D8               	btfsc	status,2
  7715  00145A  D001               	goto	u1301
  7716  00145C  D001               	goto	u1300
  7717  00145E                     u1301:
  7718  00145E  D009               	goto	l18432
  7719  001460                     u1300:
  7720                           	line	266
  7721                           	
  7722  001460                     l18426:
  7723                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  7724  001460  0100               	movlb	0	; () banked
  7725  001462  6FBC               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7726  001464  0E00               	movlw	low(0)
  7727  001466  6E48               	movwf	((c:_MQ_Main_Willing_to_block)),c
  7728  001468  0100               	movlb	0	; () banked
  7729  00146A  51BC               	movf	(??_block_on_To_msgqueues+0+0)&0ffh,w
  7730                           	line	267
  7731                           	
  7732  00146C                     l18428:; BSR set to: 0
  7733                           
  7734                           ;messages.c: 267: LATBbits.LATB3 = 0;
  7735  00146C  968A               	bcf	((c:3978)),c,3	;volatile
  7736  00146E  D03A               	goto	l5535
  7737                           	line	268
  7738                           	
  7739  001470                     l18430:; BSR set to: 0
  7740                           
  7741                           ;messages.c: 268: return;
  7742  001470  D039               	goto	l5535
  7743                           	line	269
  7744                           	
  7745  001472                     l5537:; BSR set to: 0
  7746                           
  7747                           	line	270
  7748                           	
  7749  001472                     l18432:
  7750                           ;messages.c: 269: }
  7751                           ;messages.c: 270: if (check_msg(&ToMainLow_MQ)) {
  7752  001472  0101               	movlb	1	; () banked
  7753  001474  0E01               	movlw	high(_ToMainLow_MQ)
  7754  001476  0100               	movlb	0	; () banked
  7755  001478  0100               	movlb	0	; () banked
  7756  00147A  6FB7               	movwf	((?_check_msg+1))&0ffh
  7757  00147C  0101               	movlb	1	; () banked
  7758  00147E  0E6C               	movlw	low(_ToMainLow_MQ)
  7759  001480  0100               	movlb	0	; () banked
  7760  001482  6FB6               	movwf	((?_check_msg))&0ffh
  7761  001484  0100               	movlb	0	; () banked
  7762  001486  EC42  F00F         	call	_check_msg	;wreg free
  7763  00148A  0900               	iorlw	0
  7764  00148C  B4D8               	btfsc	status,2
  7765  00148E  D001               	goto	u1311
  7766  001490  D001               	goto	u1310
  7767  001492                     u1311:
  7768  001492  D009               	goto	l18440
  7769  001494                     u1310:
  7770                           	line	271
  7771                           	
  7772  001494                     l18434:
  7773                           ;messages.c: 271: MQ_Main_Willing_to_block = 0;
  7774  001494  0100               	movlb	0	; () banked
  7775  001496  6FBC               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7776  001498  0E00               	movlw	low(0)
  7777  00149A  6E48               	movwf	((c:_MQ_Main_Willing_to_block)),c
  7778  00149C  0100               	movlb	0	; () banked
  7779  00149E  51BC               	movf	(??_block_on_To_msgqueues+0+0)&0ffh,w
  7780                           	line	272
  7781                           	
  7782  0014A0                     l18436:; BSR set to: 0
  7783                           
  7784                           ;messages.c: 272: LATBbits.LATB3 = 0;
  7785  0014A0  968A               	bcf	((c:3978)),c,3	;volatile
  7786  0014A2  D020               	goto	l5535
  7787                           	line	273
  7788                           	
  7789  0014A4                     l18438:; BSR set to: 0
  7790                           
  7791                           ;messages.c: 273: return;
  7792  0014A4  D01F               	goto	l5535
  7793                           	line	274
  7794                           	
  7795  0014A6                     l5538:; BSR set to: 0
  7796                           
  7797                           	line	275
  7798                           	
  7799  0014A6                     l18440:
  7800                           ;messages.c: 274: }
  7801                           ;messages.c: 275: Delay1KTCYx(10);
  7802  0014A6  0100               	movlb	0	; () banked
  7803  0014A8  6FBC               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7804  0014AA  0E0A               	movlw	low(0Ah)
  7805  0014AC  0100               	movlb	0	; () banked
  7806  0014AE  0100               	movlb	0	; () banked
  7807  0014B0  6FB6               	movwf	((?_Delay1KTCYx))&0ffh
  7808  0014B2  0100               	movlb	0	; () banked
  7809  0014B4  51BC               	movf	(??_block_on_To_msgqueues+0+0)&0ffh,w
  7810  0014B6  0100               	movlb	0	; () banked
  7811  0014B8  EC71  F010         	call	_Delay1KTCYx	;wreg free
  7812                           	line	276
  7813                           	
  7814  0014BC                     l18442:
  7815                           ;messages.c: 276: LATBbits.LATB3 = !LATBbits.LATB3;
  7816                           	
  7817  0014BC  A68A               	btfss	((c:3978)),c,3	;volatile
  7818  0014BE  D001               	goto	u1321
  7819  0014C0  D002               	goto	u1320
  7820  0014C2                     u1321:
  7821  0014C2  0E01               	movlw	1
  7822  0014C4  D001               	goto	u1326
  7823  0014C6                     u1320:
  7824  0014C6  0E00               	movlw	0
  7825  0014C8                     u1326:
  7826  0014C8  0100               	movlb	0	; () banked
  7827  0014CA  6FBC               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7828  0014CC  0100               	movlb	0	; () banked
  7829  0014CE  47BC               	rlncf	((??_block_on_To_msgqueues+0+0))&0ffh
  7830  0014D0  47BC               	rlncf	((??_block_on_To_msgqueues+0+0))&0ffh
  7831  0014D2  47BC               	rlncf	((??_block_on_To_msgqueues+0+0))&0ffh
  7832  0014D4  508A               	movf	((c:3978)),c,w	;volatile
  7833  0014D6  0100               	movlb	0	; () banked
  7834  0014D8  19BC               	xorwf	((??_block_on_To_msgqueues+0+0))&0ffh,w
  7835  0014DA  0BF7               	andlw	not (((1<<1)-1)<<3)
  7836  0014DC  19BC               	xorwf	((??_block_on_To_msgqueues+0+0))&0ffh,w
  7837  0014DE  6E8A               	movwf	((c:3978)),c	;volatile
  7838  0014E0  D7AE               	goto	l18424
  7839                           	line	277
  7840                           	
  7841  0014E2                     l5539:; BSR set to: 0
  7842                           
  7843                           	line	264
  7844  0014E2  D7AD               	goto	l18424
  7845                           	
  7846  0014E4                     l5540:; BSR set to: 0
  7847                           
  7848                           	line	278
  7849                           	
  7850  0014E4                     l5535:; BSR set to: 0
  7851                           
  7852  0014E4  0012               	return
  7853                           	opt stack 0
  7854                           GLOBAL	__end_of_block_on_To_msgqueues
  7855  0014E6                     	__end_of_block_on_To_msgqueues:
  7856                           	signat	_block_on_To_msgqueues,88
  7857                           	global	_in_main
  7858                           
  7859 ;; *************** function _in_main *****************
  7860 ;; Defined at:
  7861 ;;		line 40 in file "../src/interrupts.c"
  7862 ;; Parameters:    Size  Location     Type
  7863 ;;		None
  7864 ;; Auto vars:     Size  Location     Type
  7865 ;;		None
  7866 ;; Return value:  Size  Location     Type
  7867 ;;                  2   58[BANK0 ] int 
  7868 ;; Registers used:
  7869 ;;		wreg, status,2, status,0, cstack
  7870 ;; Tracked objects:
  7871 ;;		On entry : 0/0
  7872 ;;		On exit  : 0/0
  7873 ;;		Unchanged: 0/0
  7874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7875 ;;      Params:         0       2       0       0       0
  7876 ;;      Locals:         0       0       0       0       0
  7877 ;;      Temps:          0       0       0       0       0
  7878 ;;      Totals:         0       2       0       0       0
  7879 ;;Total ram usage:        2 bytes
  7880 ;; Hardware stack levels used:    1
  7881 ;; Hardware stack levels required when called:   13
  7882 ;; This function calls:
  7883 ;;		_in_low_int
  7884 ;;		_in_high_int
  7885 ;; This function is called by:
  7886 ;;		_block_on_To_msgqueues
  7887 ;; This function uses a non-reentrant model
  7888 ;;
  7889                           psect	text10,class=CODE,space=0,reloc=2
  7890                           global __ptext10
  7891  001B5E                     __ptext10:
  7892                           psect	text10
  7893                           	file	"../src/interrupts.c"
  7894                           	line	40
  7895                           	global	__size_of_in_main
  7896  0000                     	__size_of_in_main	equ	__end_of_in_main-_in_main
  7897                           	
  7898  001B5E                     _in_main:; BSR set to: 0
  7899                           
  7900                           	opt	stack 16
  7901                           	line	41
  7902                           	
  7903  001B5E                     l18192:
  7904                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  7905  001B5E  0100               	movlb	0	; () banked
  7906  001B60  EC80  F00D         	call	_in_low_int	;wreg free
  7907  001B64  0100               	movlb	0	; () banked
  7908  001B66  0100               	movlb	0	; () banked
  7909  001B68  51B9               	movf	(1+?_in_low_int)&0ffh,w
  7910  001B6A  0100               	movlb	0	; () banked
  7911  001B6C  11B8               	iorwf (0+?_in_low_int)&0ffh,w
  7912                           
  7913  001B6E  A4D8               	btfss	status,2
  7914  001B70  D001               	goto	u1041
  7915  001B72  D001               	goto	u1040
  7916  001B74                     u1041:
  7917  001B74  D016               	goto	l18202
  7918  001B76                     u1040:
  7919                           	
  7920  001B76                     l18194:; BSR set to: 0
  7921                           
  7922  001B76  0100               	movlb	0	; () banked
  7923  001B78  EC67  F010         	call	_in_high_int	;wreg free
  7924  001B7C  0100               	movlb	0	; () banked
  7925  001B7E  0100               	movlb	0	; () banked
  7926  001B80  51B7               	movf	(1+?_in_high_int)&0ffh,w
  7927  001B82  0100               	movlb	0	; () banked
  7928  001B84  11B6               	iorwf (0+?_in_high_int)&0ffh,w
  7929                           
  7930  001B86  A4D8               	btfss	status,2
  7931  001B88  D001               	goto	u1051
  7932  001B8A  D001               	goto	u1050
  7933  001B8C                     u1051:
  7934  001B8C  D00A               	goto	l18202
  7935  001B8E                     u1050:
  7936                           	line	42
  7937                           	
  7938  001B8E                     l18196:; BSR set to: 0
  7939                           
  7940                           ;interrupts.c: 42: return (1);
  7941  001B8E  0E00               	movlw	high(01h)
  7942  001B90  0100               	movlb	0	; () banked
  7943  001B92  0100               	movlb	0	; () banked
  7944  001B94  6FBB               	movwf	((?_in_main+1))&0ffh
  7945  001B96  0E01               	movlw	low(01h)
  7946  001B98  0100               	movlb	0	; () banked
  7947  001B9A  6FBA               	movwf	((?_in_main))&0ffh
  7948  001B9C  D00B               	goto	l1816
  7949                           	
  7950  001B9E                     l18198:; BSR set to: 0
  7951                           
  7952  001B9E  D00A               	goto	l1816
  7953                           	line	43
  7954                           	
  7955  001BA0                     l18200:; BSR set to: 0
  7956                           
  7957                           ;interrupts.c: 43: } else {
  7958  001BA0  D009               	goto	l1816
  7959                           	
  7960  001BA2                     l1815:; BSR set to: 0
  7961                           
  7962                           	line	44
  7963                           	
  7964  001BA2                     l18202:; BSR set to: 0
  7965                           
  7966                           ;interrupts.c: 44: return (0);
  7967  001BA2  0E00               	movlw	high(0)
  7968  001BA4  0100               	movlb	0	; () banked
  7969  001BA6  0100               	movlb	0	; () banked
  7970  001BA8  6FBB               	movwf	((?_in_main+1))&0ffh
  7971  001BAA  0E00               	movlw	low(0)
  7972  001BAC  0100               	movlb	0	; () banked
  7973  001BAE  6FBA               	movwf	((?_in_main))&0ffh
  7974  001BB0  D001               	goto	l1816
  7975                           	
  7976  001BB2                     l18204:; BSR set to: 0
  7977                           
  7978  001BB2  D000               	goto	l1816
  7979                           	line	45
  7980                           	
  7981  001BB4                     l1817:; BSR set to: 0
  7982                           
  7983                           	line	46
  7984                           	
  7985  001BB4                     l1816:; BSR set to: 0
  7986                           
  7987  001BB4  0012               	return
  7988                           	opt stack 0
  7989                           GLOBAL	__end_of_in_main
  7990  001BB6                     	__end_of_in_main:
  7991                           	signat	_in_main,90
  7992                           	global	_in_low_int
  7993                           
  7994 ;; *************** function _in_low_int *****************
  7995 ;; Defined at:
  7996 ;;		line 30 in file "../src/interrupts.c"
  7997 ;; Parameters:    Size  Location     Type
  7998 ;;		None
  7999 ;; Auto vars:     Size  Location     Type
  8000 ;;		None
  8001 ;; Return value:  Size  Location     Type
  8002 ;;                  2   56[BANK0 ] int 
  8003 ;; Registers used:
  8004 ;;		wreg, status,2, status,0, cstack
  8005 ;; Tracked objects:
  8006 ;;		On entry : 0/0
  8007 ;;		On exit  : 0/0
  8008 ;;		Unchanged: 0/0
  8009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8010 ;;      Params:         0       2       0       0       0
  8011 ;;      Locals:         0       0       0       0       0
  8012 ;;      Temps:          0       0       0       0       0
  8013 ;;      Totals:         0       2       0       0       0
  8014 ;;Total ram usage:        2 bytes
  8015 ;; Hardware stack levels used:    1
  8016 ;; Hardware stack levels required when called:   12
  8017 ;; This function calls:
  8018 ;;		_in_high_int
  8019 ;; This function is called by:
  8020 ;;		_in_main
  8021 ;; This function uses a non-reentrant model
  8022 ;;
  8023                           psect	text11,class=CODE,space=0,reloc=2
  8024                           global __ptext11
  8025  001B00                     __ptext11:
  8026                           psect	text11
  8027                           	file	"../src/interrupts.c"
  8028                           	line	30
  8029                           	global	__size_of_in_low_int
  8030  0000                     	__size_of_in_low_int	equ	__end_of_in_low_int-_in_low_int
  8031                           	
  8032  001B00                     _in_low_int:; BSR set to: 0
  8033                           
  8034                           	opt	stack 16
  8035                           	line	31
  8036                           	
  8037  001B00                     l18172:
  8038                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  8039                           	
  8040  001B00  ACF2               	btfss	((c:4082)),c,6	;volatile
  8041  001B02  D001               	goto	u1021
  8042  001B04  D001               	goto	u1020
  8043  001B06                     u1021:
  8044  001B06  D00A               	goto	l18180
  8045  001B08                     u1020:
  8046                           	line	32
  8047                           	
  8048  001B08                     l18174:
  8049                           ;interrupts.c: 32: return (0);
  8050  001B08  0E00               	movlw	high(0)
  8051  001B0A  0100               	movlb	0	; () banked
  8052  001B0C  0100               	movlb	0	; () banked
  8053  001B0E  6FB9               	movwf	((?_in_low_int+1))&0ffh
  8054  001B10  0E00               	movlw	low(0)
  8055  001B12  0100               	movlb	0	; () banked
  8056  001B14  6FB8               	movwf	((?_in_low_int))&0ffh
  8057  001B16  D022               	goto	l1809
  8058                           	
  8059  001B18                     l18176:; BSR set to: 0
  8060                           
  8061  001B18  D021               	goto	l1809
  8062                           	line	33
  8063                           	
  8064  001B1A                     l18178:; BSR set to: 0
  8065                           
  8066                           ;interrupts.c: 33: } else if (in_high_int()) {
  8067  001B1A  D020               	goto	l1809
  8068                           	
  8069  001B1C                     l1808:; BSR set to: 0
  8070                           
  8071                           	
  8072  001B1C                     l18180:
  8073  001B1C  0100               	movlb	0	; () banked
  8074  001B1E  EC67  F010         	call	_in_high_int	;wreg free
  8075  001B22  0100               	movlb	0	; () banked
  8076  001B24  0100               	movlb	0	; () banked
  8077  001B26  51B7               	movf	(1+?_in_high_int)&0ffh,w
  8078  001B28  0100               	movlb	0	; () banked
  8079  001B2A  11B6               	iorwf (0+?_in_high_int)&0ffh,w
  8080                           
  8081  001B2C  B4D8               	btfsc	status,2
  8082  001B2E  D001               	goto	u1031
  8083  001B30  D001               	goto	u1030
  8084  001B32                     u1031:
  8085  001B32  D00A               	goto	l18188
  8086  001B34                     u1030:
  8087                           	line	34
  8088                           	
  8089  001B34                     l18182:; BSR set to: 0
  8090                           
  8091                           ;interrupts.c: 34: return (0);
  8092  001B34  0E00               	movlw	high(0)
  8093  001B36  0100               	movlb	0	; () banked
  8094  001B38  0100               	movlb	0	; () banked
  8095  001B3A  6FB9               	movwf	((?_in_low_int+1))&0ffh
  8096  001B3C  0E00               	movlw	low(0)
  8097  001B3E  0100               	movlb	0	; () banked
  8098  001B40  6FB8               	movwf	((?_in_low_int))&0ffh
  8099  001B42  D00C               	goto	l1809
  8100                           	
  8101  001B44                     l18184:; BSR set to: 0
  8102                           
  8103  001B44  D00B               	goto	l1809
  8104                           	line	35
  8105                           	
  8106  001B46                     l18186:; BSR set to: 0
  8107                           
  8108                           ;interrupts.c: 35: } else {
  8109  001B46  D00A               	goto	l1809
  8110                           	
  8111  001B48                     l1811:; BSR set to: 0
  8112                           
  8113                           	line	36
  8114                           	
  8115  001B48                     l18188:; BSR set to: 0
  8116                           
  8117                           ;interrupts.c: 36: return (1);
  8118  001B48  0E00               	movlw	high(01h)
  8119  001B4A  0100               	movlb	0	; () banked
  8120  001B4C  0100               	movlb	0	; () banked
  8121  001B4E  6FB9               	movwf	((?_in_low_int+1))&0ffh
  8122  001B50  0E01               	movlw	low(01h)
  8123  001B52  0100               	movlb	0	; () banked
  8124  001B54  6FB8               	movwf	((?_in_low_int))&0ffh
  8125  001B56  D002               	goto	l1809
  8126                           	
  8127  001B58                     l18190:; BSR set to: 0
  8128                           
  8129  001B58  D001               	goto	l1809
  8130                           	line	37
  8131                           	
  8132  001B5A                     l1812:; BSR set to: 0
  8133                           
  8134  001B5A  D000               	goto	l1809
  8135                           	
  8136  001B5C                     l1810:; BSR set to: 0
  8137                           
  8138                           	line	38
  8139                           	
  8140  001B5C                     l1809:; BSR set to: 0
  8141                           
  8142  001B5C  0012               	return
  8143                           	opt stack 0
  8144                           GLOBAL	__end_of_in_low_int
  8145  001B5E                     	__end_of_in_low_int:
  8146                           	signat	_in_low_int,90
  8147                           	global	_in_high_int
  8148                           
  8149 ;; *************** function _in_high_int *****************
  8150 ;; Defined at:
  8151 ;;		line 22 in file "../src/interrupts.c"
  8152 ;; Parameters:    Size  Location     Type
  8153 ;;		None
  8154 ;; Auto vars:     Size  Location     Type
  8155 ;;		None
  8156 ;; Return value:  Size  Location     Type
  8157 ;;                  2   54[BANK0 ] int 
  8158 ;; Registers used:
  8159 ;;		wreg, status,2
  8160 ;; Tracked objects:
  8161 ;;		On entry : 0/0
  8162 ;;		On exit  : 0/0
  8163 ;;		Unchanged: 0/0
  8164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8165 ;;      Params:         0       2       0       0       0
  8166 ;;      Locals:         0       0       0       0       0
  8167 ;;      Temps:          0       0       0       0       0
  8168 ;;      Totals:         0       2       0       0       0
  8169 ;;Total ram usage:        2 bytes
  8170 ;; Hardware stack levels used:    1
  8171 ;; Hardware stack levels required when called:   11
  8172 ;; This function calls:
  8173 ;;		Nothing
  8174 ;; This function is called by:
  8175 ;;		_in_low_int
  8176 ;;		_in_main
  8177 ;; This function uses a non-reentrant model
  8178 ;;
  8179                           psect	text12,class=CODE,space=0,reloc=2
  8180                           global __ptext12
  8181  0020CE                     __ptext12:
  8182                           psect	text12
  8183                           	file	"../src/interrupts.c"
  8184                           	line	22
  8185                           	global	__size_of_in_high_int
  8186  0000                     	__size_of_in_high_int	equ	__end_of_in_high_int-_in_high_int
  8187                           	
  8188  0020CE                     _in_high_int:; BSR set to: 0
  8189                           
  8190                           	opt	stack 17
  8191                           	line	23
  8192                           	
  8193  0020CE                     l18168:
  8194                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  8195                           	
  8196  0020CE  0E00               	movlw	0
  8197  0020D0  AEF2               	btfss	((c:4082)),c,7	;volatile
  8198  0020D2  0E01               	movlw	1
  8199  0020D4  0100               	movlb	0	; () banked
  8200  0020D6  0100               	movlb	0	; () banked
  8201  0020D8  6FB6               	movwf	((?_in_high_int))&0ffh
  8202  0020DA  0100               	movlb	0	; () banked
  8203  0020DC  6BB7               	clrf	((?_in_high_int+1))&0ffh
  8204  0020DE  D000               	goto	l1802
  8205                           	
  8206  0020E0                     l18170:; BSR set to: 0
  8207                           
  8208                           	line	24
  8209                           	
  8210  0020E0                     l1802:; BSR set to: 0
  8211                           
  8212  0020E0  0012               	return
  8213                           	opt stack 0
  8214                           GLOBAL	__end_of_in_high_int
  8215  0020E2                     	__end_of_in_high_int:
  8216                           	signat	_in_high_int,90
  8217                           	global	_ToMainHigh_recvmsg
  8218                           
  8219 ;; *************** function _ToMainHigh_recvmsg *****************
  8220 ;; Defined at:
  8221 ;;		line 135 in file "../src/messages.c"
  8222 ;; Parameters:    Size  Location     Type
  8223 ;;  maxlength       1   12[BANK1 ] unsigned char 
  8224 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  8225 ;;		 -> main@msgtype(1), 
  8226 ;;  data            2   15[BANK1 ] PTR void 
  8227 ;;		 -> main@msgbuffer(11), 
  8228 ;; Auto vars:     Size  Location     Type
  8229 ;;		None
  8230 ;; Return value:  Size  Location     Type
  8231 ;;                  1    wreg      char 
  8232 ;; Registers used:
  8233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8234 ;; Tracked objects:
  8235 ;;		On entry : 0/0
  8236 ;;		On exit  : 0/0
  8237 ;;		Unchanged: 0/0
  8238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8239 ;;      Params:         0       0       5       0       0
  8240 ;;      Locals:         0       0       0       0       0
  8241 ;;      Temps:          0       0       0       0       0
  8242 ;;      Totals:         0       0       5       0       0
  8243 ;;Total ram usage:        5 bytes
  8244 ;; Hardware stack levels used:    1
  8245 ;; Hardware stack levels required when called:   13
  8246 ;; This function calls:
  8247 ;;		_recv_msg
  8248 ;; This function is called by:
  8249 ;;		_main
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           psect	text13,class=CODE,space=0,reloc=2
  8253                           global __ptext13
  8254  001F28                     __ptext13:
  8255                           psect	text13
  8256                           	file	"../src/messages.c"
  8257                           	line	135
  8258                           	global	__size_of_ToMainHigh_recvmsg
  8259  0000                     	__size_of_ToMainHigh_recvmsg	equ	__end_of_ToMainHigh_recvmsg-_ToMainHigh_recvmsg
  8260                           	
  8261  001F28                     _ToMainHigh_recvmsg:; BSR set to: 0
  8262                           
  8263                           	opt	stack 17
  8264                           	line	141
  8265                           	
  8266  001F28                     l19144:
  8267                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  8268  001F28  0101               	movlb	1	; () banked
  8269  001F2A  0E01               	movlw	high(_ToMainHigh_MQ)
  8270  001F2C  0101               	movlb	1	; () banked
  8271  001F2E  0101               	movlb	1	; () banked
  8272  001F30  6FA3               	movwf	((?_recv_msg+1))&0ffh
  8273  001F32  0101               	movlb	1	; () banked
  8274  001F34  0E36               	movlw	low(_ToMainHigh_MQ)
  8275  001F36  0101               	movlb	1	; () banked
  8276  001F38  6FA2               	movwf	((?_recv_msg))&0ffh
  8277  001F3A  C1AE  F1A4         	movff	(ToMainHigh_recvmsg@maxlength),0+(?_recv_msg+02h)
  8278  001F3E  C1AF  F1A5         	movff	(ToMainHigh_recvmsg@msgtype),0+(?_recv_msg+03h)
  8279  001F42  C1B0  F1A6         	movff	(ToMainHigh_recvmsg@msgtype+1),1+(?_recv_msg+03h)
  8280  001F46  C1B1  F1A7         	movff	(ToMainHigh_recvmsg@data),0+(?_recv_msg+05h)
  8281  001F4A  C1B2  F1A8         	movff	(ToMainHigh_recvmsg@data+1),1+(?_recv_msg+05h)
  8282  001F4E  0101               	movlb	1	; () banked
  8283  001F50  EC7D  F006         	call	_recv_msg	;wreg free
  8284  001F54  D000               	goto	l5496
  8285                           	
  8286  001F56                     l19146:
  8287                           	line	142
  8288                           	
  8289  001F56                     l5496:
  8290  001F56  0012               	return
  8291                           	opt stack 0
  8292                           GLOBAL	__end_of_ToMainHigh_recvmsg
  8293  001F58                     	__end_of_ToMainHigh_recvmsg:
  8294                           	signat	_ToMainHigh_recvmsg,12409
  8295                           	global	_timer0_lthread
  8296                           
  8297 ;; *************** function _timer0_lthread *****************
  8298 ;; Defined at:
  8299 ;;		line 9 in file "../src/timer0_thread.c"
  8300 ;; Parameters:    Size  Location     Type
  8301 ;;  tptr            2   54[BANK0 ] PTR struct __timer0_thre
  8302 ;;		 -> main@t0thread_data(2), 
  8303 ;;  msgtype         2   56[BANK0 ] int 
  8304 ;;  length          2   58[BANK0 ] int 
  8305 ;;  msgbuffer       2   60[BANK0 ] PTR unsigned char 
  8306 ;;		 -> main@msgbuffer(11), 
  8307 ;; Auto vars:     Size  Location     Type
  8308 ;;  msgval          2   62[BANK0 ] PTR unsigned int 
  8309 ;;		 -> main@msgbuffer(11), 
  8310 ;; Return value:  Size  Location     Type
  8311 ;;                  2   54[BANK0 ] int 
  8312 ;; Registers used:
  8313 ;;		None
  8314 ;; Tracked objects:
  8315 ;;		On entry : 0/0
  8316 ;;		On exit  : 0/0
  8317 ;;		Unchanged: 0/0
  8318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8319 ;;      Params:         0       8       0       0       0
  8320 ;;      Locals:         0       2       0       0       0
  8321 ;;      Temps:          0       0       0       0       0
  8322 ;;      Totals:         0      10       0       0       0
  8323 ;;Total ram usage:       10 bytes
  8324 ;; Hardware stack levels used:    1
  8325 ;; Hardware stack levels required when called:   11
  8326 ;; This function calls:
  8327 ;;		Nothing
  8328 ;; This function is called by:
  8329 ;;		_main
  8330 ;; This function uses a non-reentrant model
  8331 ;;
  8332                           psect	text14,class=CODE,space=0,reloc=2
  8333                           global __ptext14
  8334  002146                     __ptext14:
  8335                           psect	text14
  8336                           	file	"../src/timer0_thread.c"
  8337                           	line	9
  8338                           	global	__size_of_timer0_lthread
  8339  0000                     	__size_of_timer0_lthread	equ	__end_of_timer0_lthread-_timer0_lthread
  8340                           	
  8341  002146                     _timer0_lthread:
  8342                           	opt	stack 19
  8343                           	line	12
  8344                           	
  8345  002146                     l18448:
  8346                           ;timer0_thread.c: 10: unsigned int *msgval;
  8347                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  8348  002146  C0BC  F0BE         	movff	(timer0_lthread@msgbuffer),(timer0_lthread@msgval)
  8349  00214A  C0BD  F0BF         	movff	(timer0_lthread@msgbuffer+1),(timer0_lthread@msgval+1)
  8350                           	line	16
  8351                           	
  8352  00214E                     l11026:
  8353  00214E  0012               	return
  8354                           	opt stack 0
  8355                           GLOBAL	__end_of_timer0_lthread
  8356  002150                     	__end_of_timer0_lthread:
  8357                           	signat	_timer0_lthread,16506
  8358                           	global	_ToMainLow_recvmsg
  8359                           
  8360 ;; *************** function _ToMainLow_recvmsg *****************
  8361 ;; Defined at:
  8362 ;;		line 112 in file "../src/messages.c"
  8363 ;; Parameters:    Size  Location     Type
  8364 ;;  maxlength       1   12[BANK1 ] unsigned char 
  8365 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  8366 ;;		 -> main@msgtype(1), 
  8367 ;;  data            2   15[BANK1 ] PTR void 
  8368 ;;		 -> main@msgbuffer(11), 
  8369 ;; Auto vars:     Size  Location     Type
  8370 ;;		None
  8371 ;; Return value:  Size  Location     Type
  8372 ;;                  1    wreg      char 
  8373 ;; Registers used:
  8374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8375 ;; Tracked objects:
  8376 ;;		On entry : 0/0
  8377 ;;		On exit  : 0/0
  8378 ;;		Unchanged: 0/0
  8379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8380 ;;      Params:         0       0       5       0       0
  8381 ;;      Locals:         0       0       0       0       0
  8382 ;;      Temps:          0       0       0       0       0
  8383 ;;      Totals:         0       0       5       0       0
  8384 ;;Total ram usage:        5 bytes
  8385 ;; Hardware stack levels used:    1
  8386 ;; Hardware stack levels required when called:   13
  8387 ;; This function calls:
  8388 ;;		_recv_msg
  8389 ;; This function is called by:
  8390 ;;		_main
  8391 ;; This function uses a non-reentrant model
  8392 ;;
  8393                           psect	text15,class=CODE,space=0,reloc=2
  8394                           global __ptext15
  8395  001F58                     __ptext15:
  8396                           psect	text15
  8397                           	file	"../src/messages.c"
  8398                           	line	112
  8399                           	global	__size_of_ToMainLow_recvmsg
  8400  0000                     	__size_of_ToMainLow_recvmsg	equ	__end_of_ToMainLow_recvmsg-_ToMainLow_recvmsg
  8401                           	
  8402  001F58                     _ToMainLow_recvmsg:
  8403                           	opt	stack 17
  8404                           	line	118
  8405                           	
  8406  001F58                     l19148:
  8407                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  8408  001F58  0101               	movlb	1	; () banked
  8409  001F5A  0E01               	movlw	high(_ToMainLow_MQ)
  8410  001F5C  0101               	movlb	1	; () banked
  8411  001F5E  0101               	movlb	1	; () banked
  8412  001F60  6FA3               	movwf	((?_recv_msg+1))&0ffh
  8413  001F62  0101               	movlb	1	; () banked
  8414  001F64  0E6C               	movlw	low(_ToMainLow_MQ)
  8415  001F66  0101               	movlb	1	; () banked
  8416  001F68  6FA2               	movwf	((?_recv_msg))&0ffh
  8417  001F6A  C1AE  F1A4         	movff	(ToMainLow_recvmsg@maxlength),0+(?_recv_msg+02h)
  8418  001F6E  C1AF  F1A5         	movff	(ToMainLow_recvmsg@msgtype),0+(?_recv_msg+03h)
  8419  001F72  C1B0  F1A6         	movff	(ToMainLow_recvmsg@msgtype+1),1+(?_recv_msg+03h)
  8420  001F76  C1B1  F1A7         	movff	(ToMainLow_recvmsg@data),0+(?_recv_msg+05h)
  8421  001F7A  C1B2  F1A8         	movff	(ToMainLow_recvmsg@data+1),1+(?_recv_msg+05h)
  8422  001F7E  0101               	movlb	1	; () banked
  8423  001F80  EC7D  F006         	call	_recv_msg	;wreg free
  8424  001F84  D000               	goto	l5488
  8425                           	
  8426  001F86                     l19150:
  8427                           	line	119
  8428                           	
  8429  001F86                     l5488:
  8430  001F86  0012               	return
  8431                           	opt stack 0
  8432                           GLOBAL	__end_of_ToMainLow_recvmsg
  8433  001F88                     	__end_of_ToMainLow_recvmsg:
  8434                           	signat	_ToMainLow_recvmsg,12409
  8435                           	global	_timer1_lthread
  8436                           
  8437 ;; *************** function _timer1_lthread *****************
  8438 ;; Defined at:
  8439 ;;		line 25 in file "../src/timer1_thread.c"
  8440 ;; Parameters:    Size  Location     Type
  8441 ;;  tptr            2   59[BANK0 ] PTR struct __timer1_thre
  8442 ;;		 -> main@t1thread_data(2), 
  8443 ;;  msgtype         2   61[BANK0 ] int 
  8444 ;;  length          2   63[BANK0 ] int 
  8445 ;;  msgbuffer       2   65[BANK0 ] PTR unsigned char 
  8446 ;;		 -> main@msgbuffer(11), 
  8447 ;; Auto vars:     Size  Location     Type
  8448 ;;  toSend          2    2[BANK1 ] unsigned char [2]
  8449 ;; Return value:  Size  Location     Type
  8450 ;;                  2   59[BANK0 ] int 
  8451 ;; Registers used:
  8452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8453 ;; Tracked objects:
  8454 ;;		On entry : 0/0
  8455 ;;		On exit  : 0/0
  8456 ;;		Unchanged: 0/0
  8457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8458 ;;      Params:         0       8       0       0       0
  8459 ;;      Locals:         0       0       2       0       0
  8460 ;;      Temps:          0       0       2       0       0
  8461 ;;      Totals:         0       8       4       0       0
  8462 ;;Total ram usage:       12 bytes
  8463 ;; Hardware stack levels used:    1
  8464 ;; Hardware stack levels required when called:   12
  8465 ;; This function calls:
  8466 ;;		_i2c_master_send
  8467 ;; This function is called by:
  8468 ;;		_main
  8469 ;; This function uses a non-reentrant model
  8470 ;;
  8471                           psect	text16,class=CODE,space=0,reloc=2
  8472                           global __ptext16
  8473  001C0C                     __ptext16:
  8474                           psect	text16
  8475                           	file	"../src/timer1_thread.c"
  8476                           	line	25
  8477                           	global	__size_of_timer1_lthread
  8478  0000                     	__size_of_timer1_lthread	equ	__end_of_timer1_lthread-_timer1_lthread
  8479                           	
  8480  001C0C                     _timer1_lthread:
  8481                           	opt	stack 18
  8482                           	line	27
  8483                           	
  8484  001C0C                     l19152:
  8485                           ;timer1_thread.c: 27: tptr->timerval = msgbuffer[0];
  8486  001C0C  C0C1  FFD9         	movff	(timer1_lthread@msgbuffer),fsr2l
  8487  001C10  C0C2  FFDA         	movff	(timer1_lthread@msgbuffer+1),fsr2h
  8488  001C14  50DF               	movf	indf2,w
  8489  001C16  0101               	movlb	1	; () banked
  8490  001C18  6FA2               	movwf	(??_timer1_lthread+0+0)&0ffh
  8491  001C1A  6BA3               	clrf	(??_timer1_lthread+0+0+1)&0ffh
  8492                           
  8493  001C1C  C0BB  FFD9         	movff	(timer1_lthread@tptr),fsr2l
  8494  001C20  C0BC  FFDA         	movff	(timer1_lthread@tptr+1),fsr2h
  8495  001C24  C1A2  FFDE         	movff	??_timer1_lthread+0+0,postinc2
  8496  001C28  C1A3  FFDD         	movff	??_timer1_lthread+0+1,postdec2
  8497                           
  8498                           	line	29
  8499                           	
  8500  001C2C                     l19154:; BSR set to: 1
  8501                           
  8502                           ;timer1_thread.c: 29: unsigned char toSend[] = {0xAB,0x55};
  8503  001C2C  C0C8  F1A4         	movff	(timer1_lthread@F5089),(timer1_lthread@toSend)
  8504  001C30  C0C9  F1A5         	movff	(timer1_lthread@F5089+1),(timer1_lthread@toSend+1)
  8505                           	line	30
  8506                           	
  8507  001C34                     l19156:; BSR set to: 1
  8508                           
  8509                           ;timer1_thread.c: 30: i2c_master_send(2,toSend);
  8510  001C34  0101               	movlb	1	; () banked
  8511  001C36  6FA2               	movwf	(??_timer1_lthread+0+0)&0ffh
  8512  001C38  0E02               	movlw	low(02h)
  8513  001C3A  0100               	movlb	0	; () banked
  8514  001C3C  0100               	movlb	0	; () banked
  8515  001C3E  6FB6               	movwf	((?_i2c_master_send))&0ffh
  8516  001C40  0101               	movlb	1	; () banked
  8517  001C42  51A2               	movf	(??_timer1_lthread+0+0)&0ffh,w
  8518  001C44  0101               	movlb	1	; () banked
  8519  001C46  0E01               	movlw	high(timer1_lthread@toSend)
  8520  001C48  0100               	movlb	0	; () banked
  8521  001C4A  0100               	movlb	0	; () banked
  8522  001C4C  6FB8               	movwf	(1+(?_i2c_master_send+01h))&0ffh
  8523  001C4E  0101               	movlb	1	; () banked
  8524  001C50  0EA4               	movlw	low(timer1_lthread@toSend)
  8525  001C52  0100               	movlb	0	; () banked
  8526  001C54  6FB7               	movwf	(0+(?_i2c_master_send+01h))&0ffh
  8527  001C56  0100               	movlb	0	; () banked
  8528  001C58  ECAD  F007         	call	_i2c_master_send	;wreg free
  8529                           	line	35
  8530                           	
  8531  001C5C                     l12824:
  8532  001C5C  0012               	return
  8533                           	opt stack 0
  8534                           GLOBAL	__end_of_timer1_lthread
  8535  001C5E                     	__end_of_timer1_lthread:
  8536                           	signat	_timer1_lthread,16506
  8537                           	global	_FromMainLow_sendmsg
  8538                           
  8539 ;; *************** function _FromMainLow_sendmsg *****************
  8540 ;; Defined at:
  8541 ;;		line 150 in file "../src/messages.c"
  8542 ;; Parameters:    Size  Location     Type
  8543 ;;  length          1   11[BANK1 ] unsigned char 
  8544 ;;  msgtype         1   12[BANK1 ] unsigned char 
  8545 ;;  data            2   13[BANK1 ] PTR void 
  8546 ;;		 -> main@msgbuffer(11), 
  8547 ;; Auto vars:     Size  Location     Type
  8548 ;;		None
  8549 ;; Return value:  Size  Location     Type
  8550 ;;                  1    wreg      char 
  8551 ;; Registers used:
  8552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8553 ;; Tracked objects:
  8554 ;;		On entry : 0/0
  8555 ;;		On exit  : 0/0
  8556 ;;		Unchanged: 0/0
  8557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8558 ;;      Params:         0       0       4       0       0
  8559 ;;      Locals:         0       0       0       0       0
  8560 ;;      Temps:          0       0       0       0       0
  8561 ;;      Totals:         0       0       4       0       0
  8562 ;;Total ram usage:        4 bytes
  8563 ;; Hardware stack levels used:    1
  8564 ;; Hardware stack levels required when called:   13
  8565 ;; This function calls:
  8566 ;;		_send_msg
  8567 ;; This function is called by:
  8568 ;;		_main
  8569 ;; This function uses a non-reentrant model
  8570 ;;
  8571                           psect	text17,class=CODE,space=0,reloc=2
  8572                           global __ptext17
  8573  001F88                     __ptext17:
  8574                           psect	text17
  8575                           	file	"../src/messages.c"
  8576                           	line	150
  8577                           	global	__size_of_FromMainLow_sendmsg
  8578  0000                     	__size_of_FromMainLow_sendmsg	equ	__end_of_FromMainLow_sendmsg-_FromMainLow_sendmsg
  8579                           	
  8580  001F88                     _FromMainLow_sendmsg:
  8581                           	opt	stack 17
  8582                           	line	156
  8583                           	
  8584  001F88                     l19158:
  8585                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  8586                           ;	Return value of _FromMainLow_sendmsg is never used
  8587  001F88  0101               	movlb	1	; () banked
  8588  001F8A  0E01               	movlw	high(_FromMainLow_MQ)
  8589  001F8C  0101               	movlb	1	; () banked
  8590  001F8E  0101               	movlb	1	; () banked
  8591  001F90  6FA3               	movwf	((?_send_msg+1))&0ffh
  8592  001F92  0101               	movlb	1	; () banked
  8593  001F94  0E00               	movlw	low(_FromMainLow_MQ)
  8594  001F96  0101               	movlb	1	; () banked
  8595  001F98  6FA2               	movwf	((?_send_msg))&0ffh
  8596  001F9A  C1AD  F1A4         	movff	(FromMainLow_sendmsg@length),0+(?_send_msg+02h)
  8597  001F9E  C1AE  F1A5         	movff	(FromMainLow_sendmsg@msgtype),0+(?_send_msg+03h)
  8598  001FA2  C1AF  F1A6         	movff	(FromMainLow_sendmsg@data),0+(?_send_msg+04h)
  8599  001FA6  C1B0  F1A7         	movff	(FromMainLow_sendmsg@data+1),1+(?_send_msg+04h)
  8600  001FAA  0101               	movlb	1	; () banked
  8601  001FAC  EC32  F008         	call	_send_msg	;wreg free
  8602  001FB0  D000               	goto	l5501
  8603                           	
  8604  001FB2                     l19160:
  8605                           	line	157
  8606                           	
  8607  001FB2                     l5501:
  8608  001FB2  0012               	return
  8609                           	opt stack 0
  8610                           GLOBAL	__end_of_FromMainLow_sendmsg
  8611  001FB4                     	__end_of_FromMainLow_sendmsg:
  8612                           	signat	_FromMainLow_sendmsg,12409
  8613                           	global	_uart_lthread
  8614                           
  8615 ;; *************** function _uart_lthread *****************
  8616 ;; Defined at:
  8617 ;;		line 9 in file "../src/uart_thread.c"
  8618 ;; Parameters:    Size  Location     Type
  8619 ;;  uptr            2   54[BANK0 ] PTR struct __uart_thread
  8620 ;;		 -> main@uthread_data(2), 
  8621 ;;  msgtype         2   56[BANK0 ] int 
  8622 ;;  length          2   58[BANK0 ] int 
  8623 ;;  msgbuffer       2   60[BANK0 ] PTR unsigned char 
  8624 ;;		 -> main@msgbuffer(11), 
  8625 ;; Auto vars:     Size  Location     Type
  8626 ;;		None
  8627 ;; Return value:  Size  Location     Type
  8628 ;;                  2   54[BANK0 ] int 
  8629 ;; Registers used:
  8630 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8631 ;; Tracked objects:
  8632 ;;		On entry : 0/0
  8633 ;;		On exit  : 0/0
  8634 ;;		Unchanged: 0/0
  8635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8636 ;;      Params:         0       8       0       0       0
  8637 ;;      Locals:         0       0       0       0       0
  8638 ;;      Temps:          0       0       0       0       0
  8639 ;;      Totals:         0       8       0       0       0
  8640 ;;Total ram usage:        8 bytes
  8641 ;; Hardware stack levels used:    1
  8642 ;; Hardware stack levels required when called:   11
  8643 ;; This function calls:
  8644 ;;		Nothing
  8645 ;; This function is called by:
  8646 ;;		_main
  8647 ;; This function uses a non-reentrant model
  8648 ;;
  8649                           psect	text18,class=CODE,space=0,reloc=2
  8650                           global __ptext18
  8651  001C5E                     __ptext18:
  8652                           psect	text18
  8653                           	file	"../src/uart_thread.c"
  8654                           	line	9
  8655                           	global	__size_of_uart_lthread
  8656  0000                     	__size_of_uart_lthread	equ	__end_of_uart_lthread-_uart_lthread
  8657                           	
  8658  001C5E                     _uart_lthread:
  8659                           	opt	stack 19
  8660                           	line	10
  8661                           	
  8662  001C5E                     l18464:
  8663                           ;uart_thread.c: 10: if (msgtype == 30) {
  8664  001C5E  0100               	movlb	0	; () banked
  8665  001C60  0100               	movlb	0	; () banked
  8666  001C62  51B8               	movf	((uart_lthread@msgtype))&0ffh,w
  8667  001C64  0A1E               	xorlw	30
  8668  001C66  11B9               	iorwf ((uart_lthread@msgtype+1))&0ffh,w
  8669                           
  8670  001C68  A4D8               	btfss	status,2
  8671  001C6A  D001               	goto	u1331
  8672  001C6C  D001               	goto	u1330
  8673  001C6E                     u1331:
  8674  001C6E  D002               	goto	l18468
  8675  001C70                     u1330:
  8676  001C70  D01C               	goto	l14614
  8677                           	line	11
  8678                           	
  8679  001C72                     l18466:; BSR set to: 0
  8680                           
  8681                           ;uart_thread.c: 11: } else if (msgtype == 31) {
  8682  001C72  D01B               	goto	l14614
  8683                           	
  8684  001C74                     l14611:; BSR set to: 0
  8685                           
  8686                           	
  8687  001C74                     l18468:; BSR set to: 0
  8688                           
  8689  001C74  0100               	movlb	0	; () banked
  8690  001C76  0100               	movlb	0	; () banked
  8691  001C78  51B8               	movf	((uart_lthread@msgtype))&0ffh,w
  8692  001C7A  0A1F               	xorlw	31
  8693  001C7C  11B9               	iorwf ((uart_lthread@msgtype+1))&0ffh,w
  8694                           
  8695  001C7E  A4D8               	btfss	status,2
  8696  001C80  D001               	goto	u1341
  8697  001C82  D001               	goto	u1340
  8698  001C84                     u1341:
  8699  001C84  D012               	goto	l14614
  8700  001C86                     u1340:
  8701                           	line	14
  8702                           	
  8703  001C86                     l18470:; BSR set to: 0
  8704                           
  8705                           ;uart_thread.c: 14: msgbuffer[length] = '\0';
  8706  001C86  0100               	movlb	0	; () banked
  8707  001C88  0100               	movlb	0	; () banked
  8708  001C8A  51BA               	movf	((uart_lthread@length))&0ffh,w
  8709  001C8C  0100               	movlb	0	; () banked
  8710  001C8E  0100               	movlb	0	; () banked
  8711  001C90  25BC               	addwf	((uart_lthread@msgbuffer))&0ffh,w
  8712  001C92  6ED9               	movwf	c:fsr2l
  8713  001C94  0100               	movlb	0	; () banked
  8714  001C96  0100               	movlb	0	; () banked
  8715  001C98  51BB               	movf	((uart_lthread@length+1))&0ffh,w
  8716  001C9A  0100               	movlb	0	; () banked
  8717  001C9C  0100               	movlb	0	; () banked
  8718  001C9E  21BD               	addwfc	((uart_lthread@msgbuffer+1))&0ffh,w
  8719  001CA0  6EDA               	movwf	1+c:fsr2l
  8720  001CA2  0E00               	movlw	low(0)
  8721  001CA4  6EDF               	movwf	indf2
  8722  001CA6  D001               	goto	l14614
  8723                           	line	16
  8724                           	
  8725  001CA8                     l14613:; BSR set to: 0
  8726                           
  8727  001CA8  D000               	goto	l14614
  8728                           	line	17
  8729                           	
  8730  001CAA                     l14612:; BSR set to: 0
  8731                           
  8732                           	
  8733  001CAA                     l14614:; BSR set to: 0
  8734                           
  8735  001CAA  0012               	return
  8736                           	opt stack 0
  8737                           GLOBAL	__end_of_uart_lthread
  8738  001CAC                     	__end_of_uart_lthread:
  8739                           	signat	_uart_lthread,16506
  8740                           	global	_init_queue
  8741                           
  8742 ;; *************** function _init_queue *****************
  8743 ;; Defined at:
  8744 ;;		line 14 in file "../src/messages.c"
  8745 ;; Parameters:    Size  Location     Type
  8746 ;;  qptr            2   54[BANK0 ] PTR struct __msg_queue
  8747 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8748 ;; Auto vars:     Size  Location     Type
  8749 ;;  i               1   57[BANK0 ] unsigned char 
  8750 ;; Return value:  Size  Location     Type
  8751 ;;		None               void
  8752 ;; Registers used:
  8753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8754 ;; Tracked objects:
  8755 ;;		On entry : 0/0
  8756 ;;		On exit  : 0/0
  8757 ;;		Unchanged: 0/0
  8758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8759 ;;      Params:         0       2       0       0       0
  8760 ;;      Locals:         0       1       0       0       0
  8761 ;;      Temps:          0       1       0       0       0
  8762 ;;      Totals:         0       4       0       0       0
  8763 ;;Total ram usage:        4 bytes
  8764 ;; Hardware stack levels used:    1
  8765 ;; Hardware stack levels required when called:   11
  8766 ;; This function calls:
  8767 ;;		Nothing
  8768 ;; This function is called by:
  8769 ;;		_init_queues
  8770 ;; This function uses a non-reentrant model
  8771 ;;
  8772                           psect	text19,class=CODE,space=0,reloc=2
  8773                           global __ptext19
  8774  00184C                     __ptext19:
  8775                           psect	text19
  8776                           	file	"../src/messages.c"
  8777                           	line	14
  8778                           	global	__size_of_init_queue
  8779  0000                     	__size_of_init_queue	equ	__end_of_init_queue-_init_queue
  8780                           	
  8781  00184C                     _init_queue:; BSR set to: 0
  8782                           
  8783                           	opt	stack 18
  8784                           	line	17
  8785                           	
  8786  00184C                     l18472:
  8787                           ;messages.c: 15: unsigned char i;
  8788                           ;messages.c: 17: qptr->cur_write_ind = 0;
  8789  00184C  0100               	movlb	0	; () banked
  8790  00184E  EE20 F034          	lfsr	2,034h
  8791  001852  0100               	movlb	0	; () banked
  8792  001854  51B6               	movf	((init_queue@qptr))&0ffh,w
  8793  001856  26D9               	addwf	fsr2l
  8794  001858  0100               	movlb	0	; () banked
  8795  00185A  51B7               	movf	((init_queue@qptr+1))&0ffh,w
  8796  00185C  22DA               	addwfc	fsr2h
  8797  00185E  0E00               	movlw	low(0)
  8798  001860  6EDF               	movwf	indf2
  8799                           	line	18
  8800                           ;messages.c: 18: qptr->cur_read_ind = 0;
  8801  001862  0100               	movlb	0	; () banked
  8802  001864  EE20 F035          	lfsr	2,035h
  8803  001868  0100               	movlb	0	; () banked
  8804  00186A  51B6               	movf	((init_queue@qptr))&0ffh,w
  8805  00186C  26D9               	addwf	fsr2l
  8806  00186E  0100               	movlb	0	; () banked
  8807  001870  51B7               	movf	((init_queue@qptr+1))&0ffh,w
  8808  001872  22DA               	addwfc	fsr2h
  8809  001874  0E00               	movlw	low(0)
  8810  001876  6EDF               	movwf	indf2
  8811                           	line	19
  8812                           	
  8813  001878                     l18474:; BSR set to: 0
  8814                           
  8815                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  8816  001878  0100               	movlb	0	; () banked
  8817  00187A  6FB8               	movwf	(??_init_queue+0+0)&0ffh
  8818  00187C  0E00               	movlw	low(0)
  8819  00187E  0100               	movlb	0	; () banked
  8820  001880  0100               	movlb	0	; () banked
  8821  001882  6FB9               	movwf	((init_queue@i))&0ffh
  8822  001884  0100               	movlb	0	; () banked
  8823  001886  51B8               	movf	(??_init_queue+0+0)&0ffh,w
  8824                           	
  8825  001888                     l18476:; BSR set to: 0
  8826                           
  8827  001888  0E03               	movlw	(04h-1)
  8828  00188A  0100               	movlb	0	; () banked
  8829  00188C  0100               	movlb	0	; () banked
  8830  00188E  65B9               	cpfsgt	((init_queue@i))&0ffh
  8831  001890  D001               	goto	u1351
  8832  001892  D001               	goto	u1350
  8833  001894                     u1351:
  8834  001894  D002               	goto	l18480
  8835  001896                     u1350:
  8836  001896  D01C               	goto	l5470
  8837                           	
  8838  001898                     l18478:; BSR set to: 0
  8839                           
  8840  001898  D01B               	goto	l5470
  8841                           	
  8842  00189A                     l5468:; BSR set to: 0
  8843                           
  8844                           	line	20
  8845                           	
  8846  00189A                     l18480:; BSR set to: 0
  8847                           
  8848                           ;messages.c: 20: qptr->queue[i].full = 0;
  8849  00189A  0100               	movlb	0	; () banked
  8850  00189C  0100               	movlb	0	; () banked
  8851  00189E  51B9               	movf	((init_queue@i))&0ffh,w
  8852  0018A0  0D0D               	mullw	0Dh
  8853  0018A2  50F3               	movf	(prodl),c,w
  8854  0018A4  0100               	movlb	0	; () banked
  8855  0018A6  0100               	movlb	0	; () banked
  8856  0018A8  25B6               	addwf	((init_queue@qptr))&0ffh,w
  8857  0018AA  6ED9               	movwf	c:fsr2l
  8858  0018AC  50F4               	movf	(prodh),c,w
  8859  0018AE  0100               	movlb	0	; () banked
  8860  0018B0  0100               	movlb	0	; () banked
  8861  0018B2  21B7               	addwfc	((init_queue@qptr+1))&0ffh,w
  8862  0018B4  6EDA               	movwf	1+c:fsr2l
  8863  0018B6  0E00               	movlw	low(0)
  8864  0018B8  6EDF               	movwf	indf2
  8865                           	line	19
  8866                           	
  8867  0018BA                     l18482:; BSR set to: 0
  8868                           
  8869  0018BA  0100               	movlb	0	; () banked
  8870  0018BC  0100               	movlb	0	; () banked
  8871  0018BE  2BB9               	incf	((init_queue@i))&0ffh
  8872                           	
  8873  0018C0                     l18484:; BSR set to: 0
  8874                           
  8875  0018C0  0E03               	movlw	(04h-1)
  8876  0018C2  0100               	movlb	0	; () banked
  8877  0018C4  0100               	movlb	0	; () banked
  8878  0018C6  65B9               	cpfsgt	((init_queue@i))&0ffh
  8879  0018C8  D001               	goto	u1361
  8880  0018CA  D001               	goto	u1360
  8881  0018CC                     u1361:
  8882  0018CC  D7E6               	goto	l18480
  8883  0018CE                     u1360:
  8884  0018CE  D000               	goto	l5470
  8885                           	
  8886  0018D0                     l5469:; BSR set to: 0
  8887                           
  8888                           	line	22
  8889                           	
  8890  0018D0                     l5470:; BSR set to: 0
  8891                           
  8892  0018D0  0012               	return
  8893                           	opt stack 0
  8894                           GLOBAL	__end_of_init_queue
  8895  0018D2                     	__end_of_init_queue:
  8896                           	signat	_init_queue,4216
  8897                           	global	_send_msg
  8898                           
  8899 ;; *************** function _send_msg *****************
  8900 ;; Defined at:
  8901 ;;		line 24 in file "../src/messages.c"
  8902 ;; Parameters:    Size  Location     Type
  8903 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  8904 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8905 ;;  length          1    2[BANK1 ] unsigned char 
  8906 ;;  msgtype         1    3[BANK1 ] unsigned char 
  8907 ;;  data            2    4[BANK1 ] PTR void 
  8908 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
  8909 ;;		 -> i2c_slave_int_handler@error_buf(3), main@msgbuffer(11), main@uc(5), 
  8910 ;; Auto vars:     Size  Location     Type
  8911 ;;  qmsg            2    9[BANK1 ] PTR struct __msg
  8912 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8913 ;;  tlength         2    6[BANK1 ] unsigned int 
  8914 ;;  slot            1    8[BANK1 ] unsigned char 
  8915 ;; Return value:  Size  Location     Type
  8916 ;;                  1    wreg      char 
  8917 ;; Registers used:
  8918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8919 ;; Tracked objects:
  8920 ;;		On entry : 0/0
  8921 ;;		On exit  : 0/0
  8922 ;;		Unchanged: 0/0
  8923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8924 ;;      Params:         0       0       6       0       0
  8925 ;;      Locals:         0       0       5       0       0
  8926 ;;      Temps:          0       1       0       0       0
  8927 ;;      Totals:         0       1      11       0       0
  8928 ;;Total ram usage:       12 bytes
  8929 ;; Hardware stack levels used:    1
  8930 ;; Hardware stack levels required when called:   12
  8931 ;; This function calls:
  8932 ;;		_memcpy
  8933 ;; This function is called by:
  8934 ;;		_FromMainLow_sendmsg
  8935 ;;		_FromMainHigh_sendmsg
  8936 ;; This function uses a non-reentrant model
  8937 ;;
  8938                           psect	text20,class=CODE,space=0,reloc=2
  8939                           global __ptext20
  8940  001064                     __ptext20:
  8941                           psect	text20
  8942                           	file	"../src/messages.c"
  8943                           	line	24
  8944                           	global	__size_of_send_msg
  8945  0000                     	__size_of_send_msg	equ	__end_of_send_msg-_send_msg
  8946                           	
  8947  001064                     _send_msg:; BSR set to: 0
  8948                           
  8949                           	opt	stack 17
  8950                           	line	28
  8951                           	
  8952  001064                     l19162:
  8953                           ;messages.c: 25: unsigned char slot;
  8954                           ;messages.c: 27: msg *qmsg;
  8955                           ;messages.c: 28: size_t tlength = length;
  8956  001064  0101               	movlb	1	; () banked
  8957  001066  0101               	movlb	1	; () banked
  8958  001068  C1A4  F1A8         	movff	(send_msg@length),(send_msg@tlength)
  8959  00106C  0101               	movlb	1	; () banked
  8960  00106E  0101               	movlb	1	; () banked
  8961  001070  6BA9               	clrf	((send_msg@tlength+1))&0ffh
  8962                           	line	38
  8963                           	
  8964  001072                     l19164:; BSR set to: 1
  8965                           
  8966                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8967  001072  0101               	movlb	1	; () banked
  8968  001074  EE20 F034          	lfsr	2,034h
  8969  001078  0101               	movlb	1	; () banked
  8970  00107A  51A2               	movf	((send_msg@qptr))&0ffh,w
  8971  00107C  26D9               	addwf	fsr2l
  8972  00107E  0101               	movlb	1	; () banked
  8973  001080  51A3               	movf	((send_msg@qptr+1))&0ffh,w
  8974  001082  22DA               	addwfc	fsr2h
  8975  001084  50DF               	movf	indf2,w
  8976  001086  0101               	movlb	1	; () banked
  8977  001088  0101               	movlb	1	; () banked
  8978  00108A  6FAA               	movwf	((send_msg@slot))&0ffh
  8979                           	line	39
  8980                           	
  8981  00108C                     l19166:; BSR set to: 1
  8982                           
  8983                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8984  00108C  0101               	movlb	1	; () banked
  8985  00108E  0101               	movlb	1	; () banked
  8986  001090  51AA               	movf	((send_msg@slot))&0ffh,w
  8987  001092  0D0D               	mullw	0Dh
  8988  001094  50F3               	movf	(prodl),c,w
  8989  001096  0101               	movlb	1	; () banked
  8990  001098  0101               	movlb	1	; () banked
  8991  00109A  25A2               	addwf	((send_msg@qptr))&0ffh,w
  8992  00109C  0101               	movlb	1	; () banked
  8993                           	
  8994  00109E  0101               	movlb	1	; () banked
  8995  0010A0  6FAB               	movwf	((send_msg@qmsg))&0ffh
  8996  0010A2  50F4               	movf	(prodh),c,w
  8997  0010A4  0101               	movlb	1	; () banked
  8998  0010A6  0101               	movlb	1	; () banked
  8999  0010A8  21A3               	addwfc	((send_msg@qptr+1))&0ffh,w
  9000  0010AA  0101               	movlb	1	; () banked
  9001  0010AC  6FAC               	movwf	1+((send_msg@qmsg))&0ffh
  9002                           	line	41
  9003                           	
  9004  0010AE                     l19168:; BSR set to: 1
  9005                           
  9006                           ;messages.c: 41: if (qmsg->full != 0) {
  9007  0010AE  C1AB  FFD9         	movff	(send_msg@qmsg),fsr2l
  9008  0010B2  C1AC  FFDA         	movff	(send_msg@qmsg+1),fsr2h
  9009  0010B6  50DF               	movf	indf2,w
  9010  0010B8  B4D8               	btfsc	status,2
  9011  0010BA  D001               	goto	u2011
  9012  0010BC  D001               	goto	u2010
  9013  0010BE                     u2011:
  9014  0010BE  D003               	goto	l19174
  9015  0010C0                     u2010:
  9016                           	line	42
  9017                           	
  9018  0010C0                     l19170:; BSR set to: 1
  9019                           
  9020                           ;messages.c: 42: return (-1);
  9021  0010C0  0EFF               	movlw	(-1)&0ffh
  9022  0010C2  D052               	goto	l5474
  9023                           	
  9024  0010C4                     l19172:; BSR set to: 1
  9025                           
  9026  0010C4  D051               	goto	l5474
  9027                           	line	43
  9028                           	
  9029  0010C6                     l5473:; BSR set to: 1
  9030                           
  9031                           	line	46
  9032                           	
  9033  0010C6                     l19174:; BSR set to: 1
  9034                           
  9035                           ;messages.c: 43: }
  9036                           ;messages.c: 46: qmsg->length = length;
  9037  0010C6  0101               	movlb	1	; () banked
  9038  0010C8  EE20 F001          	lfsr	2,01h
  9039  0010CC  0101               	movlb	1	; () banked
  9040  0010CE  51AB               	movf	((send_msg@qmsg))&0ffh,w
  9041  0010D0  26D9               	addwf	fsr2l
  9042  0010D2  0101               	movlb	1	; () banked
  9043  0010D4  51AC               	movf	((send_msg@qmsg+1))&0ffh,w
  9044  0010D6  22DA               	addwfc	fsr2h
  9045  0010D8  0101               	movlb	1	; () banked
  9046  0010DA  C1A4  FFDF         	movff	(send_msg@length),indf2
  9047                           
  9048                           	line	47
  9049                           ;messages.c: 47: qmsg->msgtype = msgtype;
  9050  0010DE  0101               	movlb	1	; () banked
  9051  0010E0  EE20 F002          	lfsr	2,02h
  9052  0010E4  0101               	movlb	1	; () banked
  9053  0010E6  51AB               	movf	((send_msg@qmsg))&0ffh,w
  9054  0010E8  26D9               	addwf	fsr2l
  9055  0010EA  0101               	movlb	1	; () banked
  9056  0010EC  51AC               	movf	((send_msg@qmsg+1))&0ffh,w
  9057  0010EE  22DA               	addwfc	fsr2h
  9058  0010F0  0101               	movlb	1	; () banked
  9059  0010F2  C1A5  FFDF         	movff	(send_msg@msgtype),indf2
  9060                           
  9061                           	line	55
  9062                           	
  9063  0010F6                     l19176:; BSR set to: 1
  9064                           
  9065                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  9066  0010F6  0E03               	movlw	low(03h)
  9067  0010F8  0101               	movlb	1	; () banked
  9068  0010FA  0101               	movlb	1	; () banked
  9069  0010FC  25AB               	addwf	((send_msg@qmsg))&0ffh,w
  9070  0010FE  0100               	movlb	0	; () banked
  9071                           	
  9072  001100  0100               	movlb	0	; () banked
  9073  001102  6FB6               	movwf	((?_memcpy))&0ffh
  9074  001104  0E00               	movlw	high(03h)
  9075  001106  0101               	movlb	1	; () banked
  9076  001108  0101               	movlb	1	; () banked
  9077  00110A  21AC               	addwfc	((send_msg@qmsg+1))&0ffh,w
  9078  00110C  0100               	movlb	0	; () banked
  9079  00110E  6FB7               	movwf	1+((?_memcpy))&0ffh
  9080  001110  C1A6  F0B8         	movff	(send_msg@data),0+(?_memcpy+02h)
  9081  001114  C1A7  F0B9         	movff	(send_msg@data+1),1+(?_memcpy+02h)
  9082  001118  C1A8  F0BA         	movff	(send_msg@tlength),0+(?_memcpy+04h)
  9083  00111C  C1A9  F0BB         	movff	(send_msg@tlength+1),1+(?_memcpy+04h)
  9084  001120  0100               	movlb	0	; () banked
  9085  001122  ECDB  F00D         	call	_memcpy	;wreg free
  9086                           	line	56
  9087                           	
  9088  001126                     l19178:
  9089                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  9090  001126  0101               	movlb	1	; () banked
  9091  001128  EE20 F034          	lfsr	2,034h
  9092  00112C  0101               	movlb	1	; () banked
  9093  00112E  51A2               	movf	((send_msg@qptr))&0ffh,w
  9094  001130  26D9               	addwf	fsr2l
  9095  001132  0101               	movlb	1	; () banked
  9096  001134  51A3               	movf	((send_msg@qptr+1))&0ffh,w
  9097  001136  22DA               	addwfc	fsr2h
  9098  001138  0101               	movlb	1	; () banked
  9099  00113A  EE10 F034          	lfsr	1,034h
  9100  00113E  0101               	movlb	1	; () banked
  9101  001140  51A2               	movf	((send_msg@qptr))&0ffh,w
  9102  001142  26E1               	addwf	fsr1l
  9103  001144  0101               	movlb	1	; () banked
  9104  001146  51A3               	movf	((send_msg@qptr+1))&0ffh,w
  9105  001148  22E2               	addwfc	fsr1h
  9106  00114A  50E7               	movf	indf1,w
  9107  00114C  0100               	movlb	0	; () banked
  9108  00114E  6FC0               	movwf	(??_send_msg+0+0)&0ffh
  9109  001150  0100               	movlb	0	; () banked
  9110  001152  29C0               	incf	((??_send_msg+0+0))&0ffh,w
  9111  001154  0B03               	andlw	low(03h)
  9112  001156  6EDF               	movwf	indf2
  9113                           
  9114                           	line	59
  9115                           	
  9116  001158                     l19180:; BSR set to: 0
  9117                           
  9118                           ;messages.c: 59: qmsg->full = 1;
  9119  001158  C1AB  FFD9         	movff	(send_msg@qmsg),fsr2l
  9120  00115C  C1AC  FFDA         	movff	(send_msg@qmsg+1),fsr2h
  9121  001160  0E01               	movlw	low(01h)
  9122  001162  6EDF               	movwf	indf2
  9123                           	line	60
  9124                           	
  9125  001164                     l19182:; BSR set to: 0
  9126                           
  9127                           ;messages.c: 60: return (1);
  9128  001164  0E01               	movlw	(01h)&0ffh
  9129  001166  D000               	goto	l5474
  9130                           	
  9131  001168                     l19184:; BSR set to: 0
  9132                           
  9133                           	line	61
  9134                           	
  9135  001168                     l5474:
  9136  001168  0012               	return
  9137                           	opt stack 0
  9138                           GLOBAL	__end_of_send_msg
  9139  00116A                     	__end_of_send_msg:
  9140                           	signat	_send_msg,16505
  9141                           	global	_recv_msg
  9142                           
  9143 ;; *************** function _recv_msg *****************
  9144 ;; Defined at:
  9145 ;;		line 63 in file "../src/messages.c"
  9146 ;; Parameters:    Size  Location     Type
  9147 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  9148 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9149 ;;  maxlength       1    2[BANK1 ] unsigned char 
  9150 ;;  msgtype         2    3[BANK1 ] PTR unsigned char 
  9151 ;;		 -> RAM(1023), i2c_slave_int_handler@msgtype(1), main@msgtype(1), 
  9152 ;;  data            2    5[BANK1 ] PTR void 
  9153 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@data(10), main@msgbuffer(11), 
  9154 ;; Auto vars:     Size  Location     Type
  9155 ;;  qmsg            2   10[BANK1 ] PTR struct __msg
  9156 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9157 ;;  tlength         2    8[BANK1 ] unsigned int 
  9158 ;;  slot            1    7[BANK1 ] unsigned char 
  9159 ;; Return value:  Size  Location     Type
  9160 ;;                  1    wreg      char 
  9161 ;; Registers used:
  9162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9163 ;; Tracked objects:
  9164 ;;		On entry : 0/0
  9165 ;;		On exit  : 0/0
  9166 ;;		Unchanged: 0/0
  9167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9168 ;;      Params:         0       0       7       0       0
  9169 ;;      Locals:         0       0       5       0       0
  9170 ;;      Temps:          0       2       0       0       0
  9171 ;;      Totals:         0       2      12       0       0
  9172 ;;Total ram usage:       14 bytes
  9173 ;; Hardware stack levels used:    1
  9174 ;; Hardware stack levels required when called:   12
  9175 ;; This function calls:
  9176 ;;		_memcpy
  9177 ;; This function is called by:
  9178 ;;		_ToMainLow_recvmsg
  9179 ;;		_ToMainHigh_recvmsg
  9180 ;; This function uses a non-reentrant model
  9181 ;;
  9182                           psect	text21,class=CODE,space=0,reloc=2
  9183                           global __ptext21
  9184  000CFA                     __ptext21:
  9185                           psect	text21
  9186                           	file	"../src/messages.c"
  9187                           	line	63
  9188                           	global	__size_of_recv_msg
  9189  0000                     	__size_of_recv_msg	equ	__end_of_recv_msg-_recv_msg
  9190                           	
  9191  000CFA                     _recv_msg:
  9192                           	opt	stack 17
  9193                           	line	72
  9194                           	
  9195  000CFA                     l19196:
  9196                           ;messages.c: 64: unsigned char slot;
  9197                           ;messages.c: 68: msg *qmsg;
  9198                           ;messages.c: 69: size_t tlength;
  9199                           ;messages.c: 72: slot = qptr->cur_read_ind;
  9200  000CFA  0101               	movlb	1	; () banked
  9201  000CFC  EE20 F035          	lfsr	2,035h
  9202  000D00  0101               	movlb	1	; () banked
  9203  000D02  51A2               	movf	((recv_msg@qptr))&0ffh,w
  9204  000D04  26D9               	addwf	fsr2l
  9205  000D06  0101               	movlb	1	; () banked
  9206  000D08  51A3               	movf	((recv_msg@qptr+1))&0ffh,w
  9207  000D0A  22DA               	addwfc	fsr2h
  9208  000D0C  50DF               	movf	indf2,w
  9209  000D0E  0101               	movlb	1	; () banked
  9210  000D10  0101               	movlb	1	; () banked
  9211  000D12  6FA9               	movwf	((recv_msg@slot))&0ffh
  9212                           	line	73
  9213                           	
  9214  000D14                     l19198:; BSR set to: 1
  9215                           
  9216                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  9217  000D14  0101               	movlb	1	; () banked
  9218  000D16  0101               	movlb	1	; () banked
  9219  000D18  51A9               	movf	((recv_msg@slot))&0ffh,w
  9220  000D1A  0D0D               	mullw	0Dh
  9221  000D1C  50F3               	movf	(prodl),c,w
  9222  000D1E  0101               	movlb	1	; () banked
  9223  000D20  0101               	movlb	1	; () banked
  9224  000D22  25A2               	addwf	((recv_msg@qptr))&0ffh,w
  9225  000D24  0101               	movlb	1	; () banked
  9226                           	
  9227  000D26  0101               	movlb	1	; () banked
  9228  000D28  6FAC               	movwf	((recv_msg@qmsg))&0ffh
  9229  000D2A  50F4               	movf	(prodh),c,w
  9230  000D2C  0101               	movlb	1	; () banked
  9231  000D2E  0101               	movlb	1	; () banked
  9232  000D30  21A3               	addwfc	((recv_msg@qptr+1))&0ffh,w
  9233  000D32  0101               	movlb	1	; () banked
  9234  000D34  6FAD               	movwf	1+((recv_msg@qmsg))&0ffh
  9235                           	line	74
  9236                           	
  9237  000D36                     l19200:; BSR set to: 1
  9238                           
  9239                           ;messages.c: 74: if (qmsg->full == 1) {
  9240  000D36  0E01               	movlw	(01h)&0ffh
  9241  000D38  C1AC  FFD9         	movff	(recv_msg@qmsg),fsr2l
  9242  000D3C  C1AD  FFDA         	movff	(recv_msg@qmsg+1),fsr2h
  9243  000D40  62DF               	cpfseq	indf2
  9244  000D42  D001               	goto	u2031
  9245  000D44  D001               	goto	u2030
  9246  000D46                     u2031:
  9247  000D46  D075               	goto	l19224
  9248  000D48                     u2030:
  9249                           	line	76
  9250                           	
  9251  000D48                     l19202:; BSR set to: 1
  9252                           
  9253                           ;messages.c: 76: if (qmsg->length > maxlength) {
  9254  000D48  0101               	movlb	1	; () banked
  9255  000D4A  EE20 F001          	lfsr	2,01h
  9256  000D4E  0101               	movlb	1	; () banked
  9257  000D50  51AC               	movf	((recv_msg@qmsg))&0ffh,w
  9258  000D52  26D9               	addwf	fsr2l
  9259  000D54  0101               	movlb	1	; () banked
  9260  000D56  51AD               	movf	((recv_msg@qmsg+1))&0ffh,w
  9261  000D58  22DA               	addwfc	fsr2h
  9262  000D5A  50DF               	movf	indf2,w
  9263  000D5C  0101               	movlb	1	; () banked
  9264  000D5E  0101               	movlb	1	; () banked
  9265  000D60  61A4               	cpfslt	((recv_msg@maxlength))&0ffh
  9266  000D62  D001               	goto	u2041
  9267  000D64  D001               	goto	u2040
  9268  000D66                     u2041:
  9269  000D66  D003               	goto	l19208
  9270  000D68                     u2040:
  9271                           	line	77
  9272                           	
  9273  000D68                     l19204:; BSR set to: 1
  9274                           
  9275                           ;messages.c: 77: return (-3);
  9276  000D68  0EFD               	movlw	(-3)&0ffh
  9277  000D6A  D066               	goto	l5479
  9278                           	
  9279  000D6C                     l19206:; BSR set to: 1
  9280                           
  9281  000D6C  D065               	goto	l5479
  9282                           	line	78
  9283                           	
  9284  000D6E                     l5478:; BSR set to: 1
  9285                           
  9286                           	line	80
  9287                           	
  9288  000D6E                     l19208:; BSR set to: 1
  9289                           
  9290                           ;messages.c: 78: }
  9291                           ;messages.c: 80: tlength = qmsg->length;
  9292  000D6E  0101               	movlb	1	; () banked
  9293  000D70  EE20 F001          	lfsr	2,01h
  9294  000D74  0101               	movlb	1	; () banked
  9295  000D76  51AC               	movf	((recv_msg@qmsg))&0ffh,w
  9296  000D78  26D9               	addwf	fsr2l
  9297  000D7A  0101               	movlb	1	; () banked
  9298  000D7C  51AD               	movf	((recv_msg@qmsg+1))&0ffh,w
  9299  000D7E  22DA               	addwfc	fsr2h
  9300  000D80  50DF               	movf	indf2,w
  9301  000D82  0100               	movlb	0	; () banked
  9302  000D84  6FC0               	movwf	(??_recv_msg+0+0)&0ffh
  9303  000D86  0100               	movlb	0	; () banked
  9304  000D88  51C0               	movf	((??_recv_msg+0+0))&0ffh,w
  9305  000D8A  0101               	movlb	1	; () banked
  9306  000D8C  0101               	movlb	1	; () banked
  9307  000D8E  6FAA               	movwf	((recv_msg@tlength))&0ffh
  9308  000D90  0101               	movlb	1	; () banked
  9309  000D92  6BAB               	clrf	((recv_msg@tlength+1))&0ffh
  9310                           	line	81
  9311                           	
  9312  000D94                     l19210:; BSR set to: 1
  9313                           
  9314                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  9315  000D94  C1A7  F0B6         	movff	(recv_msg@data),(?_memcpy)
  9316  000D98  C1A8  F0B7         	movff	(recv_msg@data+1),(?_memcpy+1)
  9317  000D9C  0E03               	movlw	03h
  9318  000D9E  0101               	movlb	1	; () banked
  9319  000DA0  0101               	movlb	1	; () banked
  9320  000DA2  25AC               	addwf	((recv_msg@qmsg))&0ffh,w
  9321  000DA4  0100               	movlb	0	; () banked
  9322  000DA6  6FC0               	movwf	(??_recv_msg+0+0)&0ffh
  9323  000DA8  0E00               	movlw	0
  9324  000DAA  0101               	movlb	1	; () banked
  9325  000DAC  0101               	movlb	1	; () banked
  9326  000DAE  21AD               	addwfc	((recv_msg@qmsg+1))&0ffh,w
  9327  000DB0  0100               	movlb	0	; () banked
  9328  000DB2  6FC1               	movwf	(??_recv_msg+0+0+1)&0ffh
  9329  000DB4  C0C0  F0B8         	movff	??_recv_msg+0+0,0+(?_memcpy+02h)
  9330  000DB8  C0C1  F0B9         	movff	??_recv_msg+0+1,1+(?_memcpy+02h)
  9331  000DBC  C1AA  F0BA         	movff	(recv_msg@tlength),0+(?_memcpy+04h)
  9332  000DC0  C1AB  F0BB         	movff	(recv_msg@tlength+1),1+(?_memcpy+04h)
  9333  000DC4  0100               	movlb	0	; () banked
  9334  000DC6  ECDB  F00D         	call	_memcpy	;wreg free
  9335                           	line	87
  9336                           	
  9337  000DCA                     l19212:
  9338                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  9339  000DCA  0101               	movlb	1	; () banked
  9340  000DCC  EE20 F035          	lfsr	2,035h
  9341  000DD0  0101               	movlb	1	; () banked
  9342  000DD2  51A2               	movf	((recv_msg@qptr))&0ffh,w
  9343  000DD4  26D9               	addwf	fsr2l
  9344  000DD6  0101               	movlb	1	; () banked
  9345  000DD8  51A3               	movf	((recv_msg@qptr+1))&0ffh,w
  9346  000DDA  22DA               	addwfc	fsr2h
  9347  000DDC  0101               	movlb	1	; () banked
  9348  000DDE  EE10 F035          	lfsr	1,035h
  9349  000DE2  0101               	movlb	1	; () banked
  9350  000DE4  51A2               	movf	((recv_msg@qptr))&0ffh,w
  9351  000DE6  26E1               	addwf	fsr1l
  9352  000DE8  0101               	movlb	1	; () banked
  9353  000DEA  51A3               	movf	((recv_msg@qptr+1))&0ffh,w
  9354  000DEC  22E2               	addwfc	fsr1h
  9355  000DEE  50E7               	movf	indf1,w
  9356  000DF0  0100               	movlb	0	; () banked
  9357  000DF2  6FC0               	movwf	(??_recv_msg+0+0)&0ffh
  9358  000DF4  0100               	movlb	0	; () banked
  9359  000DF6  29C0               	incf	((??_recv_msg+0+0))&0ffh,w
  9360  000DF8  0B03               	andlw	low(03h)
  9361  000DFA  6EDF               	movwf	indf2
  9362                           
  9363                           	line	89
  9364                           	
  9365  000DFC                     l19214:; BSR set to: 0
  9366                           
  9367                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  9368  000DFC  0101               	movlb	1	; () banked
  9369  000DFE  EE20 F002          	lfsr	2,02h
  9370  000E02  0101               	movlb	1	; () banked
  9371  000E04  51AC               	movf	((recv_msg@qmsg))&0ffh,w
  9372  000E06  26D9               	addwf	fsr2l
  9373  000E08  0101               	movlb	1	; () banked
  9374  000E0A  51AD               	movf	((recv_msg@qmsg+1))&0ffh,w
  9375  000E0C  22DA               	addwfc	fsr2h
  9376  000E0E  C1A5  FFE1         	movff	(recv_msg@msgtype),fsr1l
  9377  000E12  C1A6  FFE2         	movff	(recv_msg@msgtype+1),fsr1h
  9378  000E16  CFDF FFE7          	movff	indf2,indf1
  9379                           	line	91
  9380                           	
  9381  000E1A                     l19216:; BSR set to: 1
  9382                           
  9383                           ;messages.c: 91: qmsg->full = 0;
  9384  000E1A  C1AC  FFD9         	movff	(recv_msg@qmsg),fsr2l
  9385  000E1E  C1AD  FFDA         	movff	(recv_msg@qmsg+1),fsr2h
  9386  000E22  0E00               	movlw	low(0)
  9387  000E24  6EDF               	movwf	indf2
  9388                           	line	92
  9389                           	
  9390  000E26                     l19218:; BSR set to: 1
  9391                           
  9392                           ;messages.c: 92: return (tlength);
  9393  000E26  0101               	movlb	1	; () banked
  9394  000E28  0101               	movlb	1	; () banked
  9395  000E2A  51AA               	movf	((recv_msg@tlength))&0ffh,w
  9396  000E2C  D005               	goto	l5479
  9397                           	
  9398  000E2E                     l19220:; BSR set to: 1
  9399                           
  9400  000E2E  D004               	goto	l5479
  9401                           	line	93
  9402                           	
  9403  000E30                     l19222:; BSR set to: 1
  9404                           
  9405                           ;messages.c: 93: } else {
  9406  000E30  D003               	goto	l5479
  9407                           	
  9408  000E32                     l5477:; BSR set to: 1
  9409                           
  9410                           	line	94
  9411                           	
  9412  000E32                     l19224:; BSR set to: 1
  9413                           
  9414                           ;messages.c: 94: return (-4);
  9415  000E32  0EFC               	movlw	(-4)&0ffh
  9416  000E34  D001               	goto	l5479
  9417                           	
  9418  000E36                     l19226:; BSR set to: 1
  9419                           
  9420  000E36  D000               	goto	l5479
  9421                           	line	95
  9422                           	
  9423  000E38                     l5480:; BSR set to: 1
  9424                           
  9425                           	line	96
  9426                           	
  9427  000E38                     l5479:; BSR set to: 1
  9428                           
  9429  000E38  0012               	return
  9430                           	opt stack 0
  9431                           GLOBAL	__end_of_recv_msg
  9432  000E3A                     	__end_of_recv_msg:
  9433                           	signat	_recv_msg,16505
  9434                           	global	_memcpy
  9435                           
  9436 ;; *************** function _memcpy *****************
  9437 ;; Defined at:
  9438 ;;		line 13 in file "/opt/microchip/xc8/v1.10/sources/memcpy.c"
  9439 ;; Parameters:    Size  Location     Type
  9440 ;;  d1              2   54[BANK0 ] PTR void 
  9441 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  9442 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  9443 ;;  s1              2   56[BANK0 ] PTR const void 
  9444 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
  9445 ;;		 -> i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  9446 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(5), 
  9447 ;;  n               2   58[BANK0 ] unsigned int 
  9448 ;; Auto vars:     Size  Location     Type
  9449 ;;  s               2   62[BANK0 ] PTR const unsigned char 
  9450 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
  9451 ;;		 -> i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  9452 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(5), 
  9453 ;;  d               2   60[BANK0 ] PTR unsigned char 
  9454 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  9455 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  9456 ;; Return value:  Size  Location     Type
  9457 ;;                  2   54[BANK0 ] PTR void 
  9458 ;; Registers used:
  9459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9460 ;; Tracked objects:
  9461 ;;		On entry : 0/0
  9462 ;;		On exit  : 0/0
  9463 ;;		Unchanged: 0/0
  9464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9465 ;;      Params:         0       6       0       0       0
  9466 ;;      Locals:         0       4       0       0       0
  9467 ;;      Temps:          0       0       0       0       0
  9468 ;;      Totals:         0      10       0       0       0
  9469 ;;Total ram usage:       10 bytes
  9470 ;; Hardware stack levels used:    1
  9471 ;; Hardware stack levels required when called:   11
  9472 ;; This function calls:
  9473 ;;		Nothing
  9474 ;; This function is called by:
  9475 ;;		_send_msg
  9476 ;;		_recv_msg
  9477 ;; This function uses a non-reentrant model
  9478 ;;
  9479                           psect	text22,class=CODE,space=0,reloc=2
  9480                           global __ptext22
  9481  001BB6                     __ptext22:
  9482                           psect	text22
  9483                           	file	"/opt/microchip/xc8/v1.10/sources/memcpy.c"
  9484                           	line	13
  9485                           	global	__size_of_memcpy
  9486  0000                     	__size_of_memcpy	equ	__end_of_memcpy-_memcpy
  9487                           	
  9488  001BB6                     _memcpy:; BSR set to: 1
  9489                           
  9490                           	opt	stack 17
  9491                           	line	24
  9492                           	
  9493  001BB6                     l19186:
  9494  001BB6  C0B8  F0BE         	movff	(memcpy@s1),(memcpy@s)
  9495  001BBA  C0B9  F0BF         	movff	(memcpy@s1+1),(memcpy@s+1)
  9496                           	line	25
  9497  001BBE  C0B6  F0BC         	movff	(memcpy@d1),(memcpy@d)
  9498  001BC2  C0B7  F0BD         	movff	(memcpy@d1+1),(memcpy@d+1)
  9499                           	line	26
  9500  001BC6  D013               	goto	l19194
  9501                           	
  9502  001BC8                     l17038:
  9503                           	line	27
  9504                           	
  9505  001BC8                     l19188:
  9506  001BC8  C0BE  FFD9         	movff	(memcpy@s),fsr2l
  9507  001BCC  C0BF  FFDA         	movff	(memcpy@s+1),fsr2h
  9508  001BD0  C0BC  FFE1         	movff	(memcpy@d),fsr1l
  9509  001BD4  C0BD  FFE2         	movff	(memcpy@d+1),fsr1h
  9510  001BD8  CFDF FFE7          	movff	indf2,indf1
  9511                           	
  9512  001BDC                     l19190:
  9513  001BDC  0100               	movlb	0	; () banked
  9514  001BDE  0100               	movlb	0	; () banked
  9515  001BE0  4BBE               	infsnz	((memcpy@s))&0ffh
  9516  001BE2  2BBF               	incf	((memcpy@s+1))&0ffh
  9517                           	
  9518  001BE4                     l19192:; BSR set to: 0
  9519                           
  9520  001BE4  0100               	movlb	0	; () banked
  9521  001BE6  0100               	movlb	0	; () banked
  9522  001BE8  4BBC               	infsnz	((memcpy@d))&0ffh
  9523  001BEA  2BBD               	incf	((memcpy@d+1))&0ffh
  9524  001BEC  D000               	goto	l19194
  9525                           	
  9526  001BEE                     l17037:; BSR set to: 0
  9527                           
  9528                           	line	26
  9529                           	
  9530  001BEE                     l19194:
  9531  001BEE  0100               	movlb	0	; () banked
  9532  001BF0  0100               	movlb	0	; () banked
  9533  001BF2  07BA               	decf	((memcpy@n))&0ffh
  9534  001BF4  A0D8               	btfss	status,0
  9535  001BF6  07BB               	decf	((memcpy@n+1))&0ffh
  9536  001BF8  0100               	movlb	0	; () banked
  9537  001BFA  29BA               	incf	((memcpy@n))&0ffh,w
  9538  001BFC  B4D8               	btfsc	status,2
  9539  001BFE  29BB               	incf ((memcpy@n+1))&0ffh,w
  9540                           
  9541  001C00  A4D8               	btfss	status,2
  9542  001C02  D001               	goto	u2021
  9543  001C04  D001               	goto	u2020
  9544  001C06                     u2021:
  9545  001C06  D7E0               	goto	l19188
  9546  001C08                     u2020:
  9547  001C08  D000               	goto	l17040
  9548                           	
  9549  001C0A                     l17039:; BSR set to: 0
  9550                           
  9551                           	line	32
  9552                           ;	Return value of _memcpy is never used
  9553                           	
  9554  001C0A                     l17040:; BSR set to: 0
  9555                           
  9556  001C0A  0012               	return
  9557                           	opt stack 0
  9558                           GLOBAL	__end_of_memcpy
  9559  001C0C                     	__end_of_memcpy:
  9560                           	signat	_memcpy,12410
  9561                           	global	_check_msg
  9562                           
  9563 ;; *************** function _check_msg *****************
  9564 ;; Defined at:
  9565 ;;		line 222 in file "../src/messages.c"
  9566 ;; Parameters:    Size  Location     Type
  9567 ;;  qptr            2   54[BANK0 ] PTR struct __msg_queue
  9568 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9569 ;; Auto vars:     Size  Location     Type
  9570 ;;		None
  9571 ;; Return value:  Size  Location     Type
  9572 ;;                  1    wreg      unsigned char 
  9573 ;; Registers used:
  9574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9575 ;; Tracked objects:
  9576 ;;		On entry : 0/0
  9577 ;;		On exit  : 0/0
  9578 ;;		Unchanged: 0/0
  9579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9580 ;;      Params:         0       2       0       0       0
  9581 ;;      Locals:         0       0       0       0       0
  9582 ;;      Temps:          0       1       0       0       0
  9583 ;;      Totals:         0       3       0       0       0
  9584 ;;Total ram usage:        3 bytes
  9585 ;; Hardware stack levels used:    1
  9586 ;; Hardware stack levels required when called:   11
  9587 ;; This function calls:
  9588 ;;		Nothing
  9589 ;; This function is called by:
  9590 ;;		_block_on_To_msgqueues
  9591 ;; This function uses a non-reentrant model
  9592 ;;
  9593                           psect	text23,class=CODE,space=0,reloc=2
  9594                           global __ptext23
  9595  001E84                     __ptext23:
  9596                           psect	text23
  9597                           	file	"../src/messages.c"
  9598                           	line	222
  9599                           	global	__size_of_check_msg
  9600  0000                     	__size_of_check_msg	equ	__end_of_check_msg-_check_msg
  9601                           	
  9602  001E84                     _check_msg:; BSR set to: 0
  9603                           
  9604                           	opt	stack 18
  9605                           	line	223
  9606                           	
  9607  001E84                     l18570:
  9608                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  9609  001E84  0100               	movlb	0	; () banked
  9610  001E86  EE20 F035          	lfsr	2,035h
  9611  001E8A  0100               	movlb	0	; () banked
  9612  001E8C  51B6               	movf	((check_msg@qptr))&0ffh,w
  9613  001E8E  26D9               	addwf	fsr2l
  9614  001E90  0100               	movlb	0	; () banked
  9615  001E92  51B7               	movf	((check_msg@qptr+1))&0ffh,w
  9616  001E94  22DA               	addwfc	fsr2h
  9617  001E96  50DF               	movf	indf2,w
  9618  001E98  0100               	movlb	0	; () banked
  9619  001E9A  6FB8               	movwf	(??_check_msg+0+0)&0ffh
  9620  001E9C  0100               	movlb	0	; () banked
  9621  001E9E  51B8               	movf	((??_check_msg+0+0))&0ffh,w
  9622  001EA0  0D0D               	mullw	0Dh
  9623  001EA2  50F3               	movf	(prodl),c,w
  9624  001EA4  0100               	movlb	0	; () banked
  9625  001EA6  0100               	movlb	0	; () banked
  9626  001EA8  25B6               	addwf	((check_msg@qptr))&0ffh,w
  9627  001EAA  6ED9               	movwf	c:fsr2l
  9628  001EAC  50F4               	movf	(prodh),c,w
  9629  001EAE  0100               	movlb	0	; () banked
  9630  001EB0  0100               	movlb	0	; () banked
  9631  001EB2  21B7               	addwfc	((check_msg@qptr+1))&0ffh,w
  9632  001EB4  6EDA               	movwf	1+c:fsr2l
  9633  001EB6  50DF               	movf	indf2,w
  9634  001EB8  D000               	goto	l5523
  9635                           	
  9636  001EBA                     l18572:; BSR set to: 0
  9637                           
  9638                           	line	224
  9639                           	
  9640  001EBA                     l5523:; BSR set to: 0
  9641                           
  9642  001EBA  0012               	return
  9643                           	opt stack 0
  9644                           GLOBAL	__end_of_check_msg
  9645  001EBC                     	__end_of_check_msg:
  9646                           	signat	_check_msg,4217
  9647                           	global	_Delay1KTCYx
  9648                           
  9649 ;; *************** function _Delay1KTCYx *****************
  9650 ;; Defined at:
  9651 ;;		line 9 in file "../common/d1ktcyx.c"
  9652 ;; Parameters:    Size  Location     Type
  9653 ;;  unit            1   54[BANK0 ] unsigned char 
  9654 ;; Auto vars:     Size  Location     Type
  9655 ;;		None
  9656 ;; Return value:  Size  Location     Type
  9657 ;;		None               void
  9658 ;; Registers used:
  9659 ;;		wreg
  9660 ;; Tracked objects:
  9661 ;;		On entry : 0/0
  9662 ;;		On exit  : 0/0
  9663 ;;		Unchanged: 0/0
  9664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9665 ;;      Params:         0       1       0       0       0
  9666 ;;      Locals:         0       0       0       0       0
  9667 ;;      Temps:          0       0       0       0       0
  9668 ;;      Totals:         0       1       0       0       0
  9669 ;;Total ram usage:        1 bytes
  9670 ;; Hardware stack levels used:    1
  9671 ;; Hardware stack levels required when called:   11
  9672 ;; This function calls:
  9673 ;;		Nothing
  9674 ;; This function is called by:
  9675 ;;		_block_on_To_msgqueues
  9676 ;; This function uses a non-reentrant model
  9677 ;;
  9678                           psect	text24,class=CODE,space=0,reloc=2
  9679                           global __ptext24
  9680  0020E2                     __ptext24:
  9681                           psect	text24
  9682                           	file	"../common/d1ktcyx.c"
  9683                           	line	9
  9684                           	global	__size_of_Delay1KTCYx
  9685  0000                     	__size_of_Delay1KTCYx	equ	__end_of_Delay1KTCYx-_Delay1KTCYx
  9686                           	
  9687  0020E2                     _Delay1KTCYx:; BSR set to: 0
  9688                           
  9689                           	opt	stack 18
  9690                           	line	10
  9691                           	
  9692  0020E2                     l17102:
  9693                           	line	11
  9694                           	
  9695  0020E2                     l18574:
  9696  0020E2  0EFA               	movlw	250
  9697  0020E4                     u2387:
  9698  0020E4  F000               	nop
  9699  0020E6  2EE8               decfsz	wreg,f
  9700  0020E8  D7FD               	goto	u2387
  9701                           
  9702                           	line	12
  9703                           	
  9704  0020EA                     l18576:
  9705  0020EA  0100               	movlb	0	; () banked
  9706  0020EC  0100               	movlb	0	; () banked
  9707  0020EE  2FB6               	decfsz	((Delay1KTCYx@unit))&0ffh
  9708                           	
  9709  0020F0  D7F8               	goto	l17102
  9710  0020F2  D000               	goto	l17104
  9711                           	
  9712  0020F4                     l17103:; BSR set to: 0
  9713                           
  9714                           	line	13
  9715                           	
  9716  0020F4                     l17104:; BSR set to: 0
  9717                           
  9718  0020F4  0012               	return
  9719                           	opt stack 0
  9720                           GLOBAL	__end_of_Delay1KTCYx
  9721  0020F6                     	__end_of_Delay1KTCYx:
  9722                           	signat	_Delay1KTCYx,4216
  9723                           	global	_i2c_master_send
  9724                           
  9725 ;; *************** function _i2c_master_send *****************
  9726 ;; Defined at:
  9727 ;;		line 76 in file "../src/my_i2c.c"
  9728 ;; Parameters:    Size  Location     Type
  9729 ;;  length          1   54[BANK0 ] unsigned char 
  9730 ;;  msg             2   55[BANK0 ] PTR unsigned char 
  9731 ;;		 -> timer1_lthread@toSend(2), 
  9732 ;; Auto vars:     Size  Location     Type
  9733 ;;		None
  9734 ;; Return value:  Size  Location     Type
  9735 ;;                  1    wreg      unsigned char 
  9736 ;; Registers used:
  9737 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9738 ;; Tracked objects:
  9739 ;;		On entry : 0/0
  9740 ;;		On exit  : 0/0
  9741 ;;		Unchanged: 0/0
  9742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9743 ;;      Params:         0       3       0       0       0
  9744 ;;      Locals:         0       0       0       0       0
  9745 ;;      Temps:          0       2       0       0       0
  9746 ;;      Totals:         0       5       0       0       0
  9747 ;;Total ram usage:        5 bytes
  9748 ;; Hardware stack levels used:    1
  9749 ;; Hardware stack levels required when called:   11
  9750 ;; This function calls:
  9751 ;;		Nothing
  9752 ;; This function is called by:
  9753 ;;		_timer1_lthread
  9754 ;; This function uses a non-reentrant model
  9755 ;;
  9756                           psect	text25,class=CODE,space=0,reloc=2
  9757                           global __ptext25
  9758  000F5A                     __ptext25:
  9759                           psect	text25
  9760                           	file	"../src/my_i2c.c"
  9761                           	line	76
  9762                           	global	__size_of_i2c_master_send
  9763  0000                     	__size_of_i2c_master_send	equ	__end_of_i2c_master_send-_i2c_master_send
  9764                           	
  9765  000F5A                     _i2c_master_send:; BSR set to: 0
  9766                           
  9767                           	opt	stack 18
  9768                           	line	78
  9769                           	
  9770  000F5A                     l19244:
  9771                           ;my_i2c.c: 78: if(SSP1STATbits.READ_WRITE == 1){
  9772                           	
  9773  000F5A  A4C7               	btfss	((c:4039)),c,2	;volatile
  9774  000F5C  D001               	goto	u2051
  9775  000F5E  D001               	goto	u2050
  9776  000F60                     u2051:
  9777  000F60  D002               	goto	l19248
  9778  000F62                     u2050:
  9779  000F62  D07F               	goto	l7345
  9780                           	line	79
  9781                           	
  9782  000F64                     l19246:
  9783                           ;my_i2c.c: 79: return -1;
  9784                           ;	Return value of _i2c_master_send is never used
  9785  000F64  D07E               	goto	l7345
  9786                           	line	80
  9787                           	
  9788  000F66                     l7344:
  9789                           	line	81
  9790                           	
  9791  000F66                     l19248:
  9792                           ;my_i2c.c: 80: }
  9793                           ;my_i2c.c: 81: for(ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen+
                                 +){
  9794  000F66  0100               	movlb	0	; () banked
  9795  000F68  EE20 F019          	lfsr	2,019h
  9796  000F6C  0100               	movlb	0	; () banked
  9797  000F6E  51C4               	movf	((_ic_ptr))&0ffh,w
  9798  000F70  26D9               	addwf	fsr2l
  9799  000F72  0100               	movlb	0	; () banked
  9800  000F74  51C5               	movf	((_ic_ptr+1))&0ffh,w
  9801  000F76  22DA               	addwfc	fsr2h
  9802  000F78  0E00               	movlw	low(0)
  9803  000F7A  6EDF               	movwf	indf2
  9804  000F7C  D043               	goto	l19254
  9805                           	
  9806  000F7E                     l7347:; BSR set to: 0
  9807                           
  9808                           	line	82
  9809                           	
  9810  000F7E                     l19250:; BSR set to: 0
  9811                           
  9812                           ;my_i2c.c: 82: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  9813  000F7E  0100               	movlb	0	; () banked
  9814  000F80  EE20 F019          	lfsr	2,019h
  9815  000F84  0100               	movlb	0	; () banked
  9816  000F86  51C4               	movf	((_ic_ptr))&0ffh,w
  9817  000F88  26D9               	addwf	fsr2l
  9818  000F8A  0100               	movlb	0	; () banked
  9819  000F8C  51C5               	movf	((_ic_ptr+1))&0ffh,w
  9820  000F8E  22DA               	addwfc	fsr2h
  9821  000F90  50DF               	movf	indf2,w
  9822  000F92  0100               	movlb	0	; () banked
  9823  000F94  6FB9               	movwf	(??_i2c_master_send+0+0)&0ffh
  9824  000F96  0100               	movlb	0	; () banked
  9825  000F98  51B9               	movf	((??_i2c_master_send+0+0))&0ffh,w
  9826  000F9A  0D01               	mullw	01h
  9827  000F9C  50F3               	movf	(prodl),c,w
  9828  000F9E  0100               	movlb	0	; () banked
  9829  000FA0  0100               	movlb	0	; () banked
  9830  000FA2  25B7               	addwf	((i2c_master_send@msg))&0ffh,w
  9831  000FA4  6ED9               	movwf	c:fsr2l
  9832  000FA6  50F4               	movf	(prodh),c,w
  9833  000FA8  0100               	movlb	0	; () banked
  9834  000FAA  0100               	movlb	0	; () banked
  9835  000FAC  21B8               	addwfc	((i2c_master_send@msg+1))&0ffh,w
  9836  000FAE  6EDA               	movwf	1+c:fsr2l
  9837  000FB0  0100               	movlb	0	; () banked
  9838  000FB2  EE10 F019          	lfsr	1,019h
  9839  000FB6  0100               	movlb	0	; () banked
  9840  000FB8  51C4               	movf	((_ic_ptr))&0ffh,w
  9841  000FBA  26E1               	addwf	fsr1l
  9842  000FBC  0100               	movlb	0	; () banked
  9843  000FBE  51C5               	movf	((_ic_ptr+1))&0ffh,w
  9844  000FC0  22E2               	addwfc	fsr1h
  9845  000FC2  50E7               	movf	indf1,w
  9846  000FC4  0100               	movlb	0	; () banked
  9847  000FC6  6FBA               	movwf	(??_i2c_master_send+1+0)&0ffh
  9848  000FC8  0100               	movlb	0	; () banked
  9849  000FCA  51BA               	movf	((??_i2c_master_send+1+0))&0ffh,w
  9850  000FCC  0D01               	mullw	01h
  9851  000FCE  0E0F               	movlw	0Fh
  9852  000FD0  26F3               	addwf	(prodl),c
  9853  000FD2  0E00               	movlw	0
  9854  000FD4  22F4               	addwfc	(prodh),c
  9855  000FD6  50F3               	movf	(prodl),c,w
  9856  000FD8  0100               	movlb	0	; () banked
  9857  000FDA  0100               	movlb	0	; () banked
  9858  000FDC  25C4               	addwf	((_ic_ptr))&0ffh,w
  9859  000FDE  6EE1               	movwf	c:fsr1l
  9860  000FE0  50F4               	movf	(prodh),c,w
  9861  000FE2  0100               	movlb	0	; () banked
  9862  000FE4  0100               	movlb	0	; () banked
  9863  000FE6  21C5               	addwfc	((_ic_ptr+1))&0ffh,w
  9864  000FE8  6EE2               	movwf	1+c:fsr1l
  9865  000FEA  CFDF FFE7          	movff	indf2,indf1
  9866                           	line	81
  9867                           	
  9868  000FEE                     l19252:; BSR set to: 0
  9869                           
  9870  000FEE  0100               	movlb	0	; () banked
  9871  000FF0  EE20 F019          	lfsr	2,019h
  9872  000FF4  0100               	movlb	0	; () banked
  9873  000FF6  51C4               	movf	((_ic_ptr))&0ffh,w
  9874  000FF8  26D9               	addwf	fsr2l
  9875  000FFA  0100               	movlb	0	; () banked
  9876  000FFC  51C5               	movf	((_ic_ptr+1))&0ffh,w
  9877  000FFE  22DA               	addwfc	fsr2h
  9878  001000  2ADF               	incf	indf2
  9879                           
  9880  001002  D000               	goto	l19254
  9881                           	
  9882  001004                     l7346:; BSR set to: 0
  9883                           
  9884                           	
  9885  001004                     l19254:; BSR set to: 0
  9886                           
  9887  001004  0100               	movlb	0	; () banked
  9888  001006  EE20 F019          	lfsr	2,019h
  9889  00100A  0100               	movlb	0	; () banked
  9890  00100C  51C4               	movf	((_ic_ptr))&0ffh,w
  9891  00100E  26D9               	addwf	fsr2l
  9892  001010  0100               	movlb	0	; () banked
  9893  001012  51C5               	movf	((_ic_ptr+1))&0ffh,w
  9894  001014  22DA               	addwfc	fsr2h
  9895  001016  50DF               	movf	indf2,w
  9896  001018  0100               	movlb	0	; () banked
  9897  00101A  6FB9               	movwf	(??_i2c_master_send+0+0)&0ffh
  9898  00101C  0100               	movlb	0	; () banked
  9899  00101E  0100               	movlb	0	; () banked
  9900  001020  51B6               	movf	((i2c_master_send@length))&0ffh,w
  9901  001022  0100               	movlb	0	; () banked
  9902  001024  5DB9               	subwf	((??_i2c_master_send+0+0))&0ffh,w
  9903  001026  A0D8               	btfss	status,0
  9904  001028  D001               	goto	u2061
  9905  00102A  D001               	goto	u2060
  9906  00102C                     u2061:
  9907  00102C  D7A8               	goto	l19250
  9908  00102E                     u2060:
  9909  00102E  D000               	goto	l19256
  9910                           	
  9911  001030                     l7348:; BSR set to: 0
  9912                           
  9913                           	line	84
  9914                           	
  9915  001030                     l19256:; BSR set to: 0
  9916                           
  9917                           ;my_i2c.c: 83: }
  9918                           ;my_i2c.c: 84: ic_ptr->outbufind = 0;
  9919  001030  0100               	movlb	0	; () banked
  9920  001032  EE20 F01A          	lfsr	2,01Ah
  9921  001036  0100               	movlb	0	; () banked
  9922  001038  51C4               	movf	((_ic_ptr))&0ffh,w
  9923  00103A  26D9               	addwf	fsr2l
  9924  00103C  0100               	movlb	0	; () banked
  9925  00103E  51C5               	movf	((_ic_ptr+1))&0ffh,w
  9926  001040  22DA               	addwfc	fsr2h
  9927  001042  0E00               	movlw	low(0)
  9928  001044  6EDF               	movwf	indf2
  9929                           	line	85
  9930                           ;my_i2c.c: 85: ic_ptr->status = 0x6;
  9931  001046  0100               	movlb	0	; () banked
  9932  001048  EE20 F00C          	lfsr	2,0Ch
  9933  00104C  0100               	movlb	0	; () banked
  9934  00104E  51C4               	movf	((_ic_ptr))&0ffh,w
  9935  001050  26D9               	addwf	fsr2l
  9936  001052  0100               	movlb	0	; () banked
  9937  001054  51C5               	movf	((_ic_ptr+1))&0ffh,w
  9938  001056  22DA               	addwfc	fsr2h
  9939  001058  0E06               	movlw	low(06h)
  9940  00105A  6EDF               	movwf	indf2
  9941                           	line	86
  9942                           	
  9943  00105C                     l19258:; BSR set to: 0
  9944                           
  9945                           ;my_i2c.c: 86: SSP1CON2bits.RCEN = 0;
  9946  00105C  96C5               	bcf	((c:4037)),c,3	;volatile
  9947                           	line	87
  9948                           	
  9949  00105E                     l19260:; BSR set to: 0
  9950                           
  9951                           ;my_i2c.c: 87: SSP1CON2bits.SEN = 1;
  9952  00105E  80C5               	bsf	((c:4037)),c,0	;volatile
  9953  001060  D000               	goto	l7345
  9954                           	line	88
  9955                           	
  9956  001062                     l19262:; BSR set to: 0
  9957                           
  9958                           	line	102
  9959                           ;my_i2c.c: 88: return 0;
  9960                           ;	Return value of _i2c_master_send is never used
  9961                           	
  9962  001062                     l7345:
  9963  001062  0012               	return
  9964                           	opt stack 0
  9965                           GLOBAL	__end_of_i2c_master_send
  9966  001064                     	__end_of_i2c_master_send:
  9967                           	signat	_i2c_master_send,8313
  9968                           	global	_OpenADC
  9969                           
  9970 ;; *************** function _OpenADC *****************
  9971 ;; Defined at:
  9972 ;;		line 71 in file "plib/ADC/adcopen.c"
  9973 ;; Parameters:    Size  Location     Type
  9974 ;;  config          1   54[BANK0 ] unsigned char 
  9975 ;;  config2         1   55[BANK0 ] unsigned char 
  9976 ;;  portconfig      1   56[BANK0 ] unsigned char 
  9977 ;; Auto vars:     Size  Location     Type
  9978 ;;		None
  9979 ;; Return value:  Size  Location     Type
  9980 ;;		None               void
  9981 ;; Registers used:
  9982 ;;		wreg, status,2, status,0
  9983 ;; Tracked objects:
  9984 ;;		On entry : 0/0
  9985 ;;		On exit  : 0/0
  9986 ;;		Unchanged: 0/0
  9987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9988 ;;      Params:         0       3       0       0       0
  9989 ;;      Locals:         0       0       0       0       0
  9990 ;;      Temps:          0       2       0       0       0
  9991 ;;      Totals:         0       5       0       0       0
  9992 ;;Total ram usage:        5 bytes
  9993 ;; Hardware stack levels used:    1
  9994 ;; Hardware stack levels required when called:   11
  9995 ;; This function calls:
  9996 ;;		Nothing
  9997 ;; This function is called by:
  9998 ;;		_init_timer1_lthread
  9999 ;; This function uses a non-reentrant model
 10000 ;;
 10001                           psect	text26,class=CODE,space=0,reloc=2
 10002                           global __ptext26
 10003  0018D2                     __ptext26:
 10004                           psect	text26
 10005                           	file	"plib/ADC/adcopen.c"
 10006                           	line	71
 10007                           	global	__size_of_OpenADC
 10008  0000                     	__size_of_OpenADC	equ	__end_of_OpenADC-_OpenADC
 10009                           	
 10010  0018D2                     _OpenADC:
 10011                           	opt	stack 18
 10012                           	line	72
 10013                           	
 10014  0018D2                     l18830:
 10015  0018D2  0E00               	movlw	low(0)
 10016  0018D4  6EC2               	movwf	((c:4034)),c	;volatile
 10017                           	line	73
 10018  0018D6  0E00               	movlw	low(0)
 10019  0018D8  6EC0               	movwf	((c:4032)),c	;volatile
 10020                           	line	75
 10021                           	
 10022  0018DA                     l18832:
 10023  0018DA  0100               	movlb	0	; () banked
 10024  0018DC  0100               	movlb	0	; () banked
 10025  0018DE  90D8               	bcf	status,0
 10026  0018E0  31B7               	rrcf	((OpenADC@config2))&0ffh,w
 10027  0018E2  0B3C               	andlw	low(03Ch)
 10028  0018E4  6EC2               	movwf	((c:4034)),c	;volatile
 10029                           	line	77
 10030                           	
 10031  0018E6                     l18834:; BSR set to: 0
 10032                           
 10033  0018E6  C0B7  F0B9         	movff	(OpenADC@config2),??_OpenADC+0+0
 10034  0018EA  0100               	movlb	0	; () banked
 10035  0018EC  3BB9               	swapf	(??_OpenADC+0+0)&0ffh
 10036  0018EE  0EF0               	movlw	(0ffh shl 4) & 0ffh
 10037  0018F0  17B9               	andwf	(??_OpenADC+0+0)&0ffh
 10038  0018F2  0E30               	movlw	030h
 10039  0018F4  0100               	movlb	0	; () banked
 10040  0018F6  17B9               	andwf	(??_OpenADC+0+0)&0ffh
 10041  0018F8  0100               	movlb	0	; () banked
 10042  0018FA  0100               	movlb	0	; () banked
 10043  0018FC  51B8               	movf	((OpenADC@portconfig))&0ffh,w
 10044  0018FE  0B0F               	andlw	low(0Fh)
 10045  001900  0100               	movlb	0	; () banked
 10046  001902  11B9               	iorwf	(??_OpenADC+0+0)&0ffh,w
 10047  001904  6EC1               	movwf	((c:4033)),c	;volatile
 10048                           	line	80
 10049                           	
 10050  001906                     l18836:; BSR set to: 0
 10051                           
 10052  001906  C0B6  F0B9         	movff	(OpenADC@config),??_OpenADC+0+0
 10053  00190A  0100               	movlb	0	; () banked
 10054  00190C  90D8               	bcf	status,0
 10055  00190E  37B9               	rlcf	(??_OpenADC+0+0)&0ffh
 10056  001910  0100               	movlb	0	; () banked
 10057  001912  90D8               	bcf	status,0
 10058  001914  37B9               	rlcf	(??_OpenADC+0+0)&0ffh
 10059                           
 10060  001916  0E38               	movlw	038h
 10061  001918  0100               	movlb	0	; () banked
 10062  00191A  17B9               	andwf	(??_OpenADC+0+0)&0ffh
 10063  00191C  C0B6  F0BA         	movff	(OpenADC@config),??_OpenADC+1+0
 10064  001920  0100               	movlb	0	; () banked
 10065  001922  3BBA               	swapf	(??_OpenADC+1+0)&0ffh
 10066  001924  0E0F               	movlw	(0ffh shr 4) & 0ffh
 10067  001926  17BA               	andwf	(??_OpenADC+1+0)&0ffh
 10068  001928  0E07               	movlw	07h
 10069  00192A  0100               	movlb	0	; () banked
 10070  00192C  17BA               	andwf	(??_OpenADC+1+0)&0ffh
 10071  00192E  0100               	movlb	0	; () banked
 10072  001930  0100               	movlb	0	; () banked
 10073  001932  51B6               	movf	((OpenADC@config))&0ffh,w
 10074  001934  0B80               	andlw	low(080h)
 10075  001936  0100               	movlb	0	; () banked
 10076  001938  11BA               	iorwf	(??_OpenADC+1+0)&0ffh,w
 10077  00193A  0100               	movlb	0	; () banked
 10078  00193C  11B9               	iorwf	(??_OpenADC+0+0)&0ffh,w
 10079  00193E  6EC0               	movwf	((c:4032)),c	;volatile
 10080                           	line	82
 10081                           	
 10082  001940                     l18838:; BSR set to: 0
 10083                           
 10084  001940  0100               	movlb	0	; () banked
 10085                           	
 10086  001942  0100               	movlb	0	; () banked
 10087  001944  AFB7               	btfss	((OpenADC@config2))&0ffh,(7)&7
 10088  001946  D001               	goto	u1801
 10089  001948  D001               	goto	u1800
 10090  00194A                     u1801:
 10091  00194A  D003               	goto	l16441
 10092  00194C                     u1800:
 10093                           	line	84
 10094                           	
 10095  00194C                     l18840:; BSR set to: 0
 10096                           
 10097  00194C  9C9E               	bcf	((c:3998)),c,6	;volatile
 10098                           	line	85
 10099  00194E  8C9D               	bsf	((c:3997)),c,6	;volatile
 10100                           	line	86
 10101  001950  8CF2               	bsf	((c:4082)),c,6	;volatile
 10102                           	line	87
 10103                           	
 10104  001952                     l16441:; BSR set to: 0
 10105                           
 10106                           	line	88
 10107  001952  80C2               	bsf	((c:4034)),c,0	;volatile
 10108                           	line	89
 10109                           	
 10110  001954                     l16442:; BSR set to: 0
 10111                           
 10112  001954  0012               	return
 10113                           	opt stack 0
 10114                           GLOBAL	__end_of_OpenADC
 10115  001956                     	__end_of_OpenADC:
 10116                           	signat	_OpenADC,12408
 10117                           	global	_SetChanADC
 10118                           
 10119 ;; *************** function _SetChanADC *****************
 10120 ;; Defined at:
 10121 ;;		line 31 in file "plib/ADC/adcsetch.c"
 10122 ;; Parameters:    Size  Location     Type
 10123 ;;  channel         1   54[BANK0 ] unsigned char 
 10124 ;; Auto vars:     Size  Location     Type
 10125 ;;		None
 10126 ;; Return value:  Size  Location     Type
 10127 ;;		None               void
 10128 ;; Registers used:
 10129 ;;		wreg, status,2, status,0
 10130 ;; Tracked objects:
 10131 ;;		On entry : 0/0
 10132 ;;		On exit  : 0/0
 10133 ;;		Unchanged: 0/0
 10134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10135 ;;      Params:         0       1       0       0       0
 10136 ;;      Locals:         0       0       0       0       0
 10137 ;;      Temps:          0       1       0       0       0
 10138 ;;      Totals:         0       2       0       0       0
 10139 ;;Total ram usage:        2 bytes
 10140 ;; Hardware stack levels used:    1
 10141 ;; Hardware stack levels required when called:   11
 10142 ;; This function calls:
 10143 ;;		Nothing
 10144 ;; This function is called by:
 10145 ;;		_init_timer1_lthread
 10146 ;; This function uses a non-reentrant model
 10147 ;;
 10148                           psect	text27,class=CODE,space=0,reloc=2
 10149                           global __ptext27
 10150  002098                     __ptext27:
 10151                           psect	text27
 10152                           	file	"plib/ADC/adcsetch.c"
 10153                           	line	31
 10154                           	global	__size_of_SetChanADC
 10155  0000                     	__size_of_SetChanADC	equ	__end_of_SetChanADC-_SetChanADC
 10156                           	
 10157  002098                     _SetChanADC:; BSR set to: 0
 10158                           
 10159                           	opt	stack 18
 10160                           	line	34
 10161                           	
 10162  002098                     l18842:
 10163  002098  CFC2 F0B7          	movff	(c:4034),??_SetChanADC+0+0	;volatile
 10164  00209C  0EC3               	movlw	0C3h
 10165  00209E  0100               	movlb	0	; () banked
 10166  0020A0  17B7               	andwf	(??_SetChanADC+0+0)&0ffh
 10167  0020A2  0100               	movlb	0	; () banked
 10168  0020A4  0100               	movlb	0	; () banked
 10169  0020A6  90D8               	bcf	status,0
 10170  0020A8  31B6               	rrcf	((SetChanADC@channel))&0ffh,w
 10171  0020AA  0B3C               	andlw	low(03Ch)
 10172  0020AC  0100               	movlb	0	; () banked
 10173  0020AE  11B7               	iorwf	(??_SetChanADC+0+0)&0ffh,w
 10174  0020B0  6EC2               	movwf	((c:4034)),c	;volatile
 10175                           	line	36
 10176                           	
 10177  0020B2                     l16454:; BSR set to: 0
 10178                           
 10179  0020B2  0012               	return
 10180                           	opt stack 0
 10181                           GLOBAL	__end_of_SetChanADC
 10182  0020B4                     	__end_of_SetChanADC:
 10183                           	signat	_SetChanADC,4216
 10184                           	global	_InterruptHandlerLow
 10185                           
 10186 ;; *************** function _InterruptHandlerLow *****************
 10187 ;; Defined at:
 10188 ;;		line 132 in file "../src/interrupts.c"
 10189 ;; Parameters:    Size  Location     Type
 10190 ;;		None
 10191 ;; Auto vars:     Size  Location     Type
 10192 ;;		None
 10193 ;; Return value:  Size  Location     Type
 10194 ;;		None               void
 10195 ;; Registers used:
 10196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10197 ;; Tracked objects:
 10198 ;;		On entry : 0/0
 10199 ;;		On exit  : 0/0
 10200 ;;		Unchanged: 0/0
 10201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10202 ;;      Params:         0       0       0       0       0
 10203 ;;      Locals:         0       0       0       0       0
 10204 ;;      Temps:         17       0       0       0       0
 10205 ;;      Totals:        17       0       0       0       0
 10206 ;;Total ram usage:       17 bytes
 10207 ;; Hardware stack levels used:    1
 10208 ;; Hardware stack levels required when called:   10
 10209 ;; This function calls:
 10210 ;;		_timer1_int_handler
 10211 ;;		_adc_int_handler
 10212 ;;		_uart_recv_int_handler
 10213 ;; This function is called by:
 10214 ;;		Interrupt level 1
 10215 ;; This function uses a non-reentrant model
 10216 ;;
 10217                           psect	intcodelo,class=CODE,space=0,reloc=2
 10218                           global __pintcodelo
 10219  000018                     __pintcodelo:
 10220                           psect	intcodelo
 10221                           	file	"../src/interrupts.c"
 10222                           	line	132
 10223                           	global	__size_of_InterruptHandlerLow
 10224  0000                     	__size_of_InterruptHandlerLow	equ	__end_of_InterruptHandlerLow-_InterruptHandlerLow
 10225                           	
 10226  000018                     _InterruptHandlerLow:; BSR set to: 0
 10227                           
 10228                           	opt	stack 16
 10229  000018  CFD8 F023          	movff	status+0,??_InterruptHandlerLow+0
 10230  00001C  CFE8 F024          	movff	wreg+0,??_InterruptHandlerLow+1
 10231  000020  CFE0 F025          	movff	bsr+0,??_InterruptHandlerLow+2
 10232  000024  CFFA F026          	movff	pclat+0,??_InterruptHandlerLow+3
 10233  000028  CFFB F027          	movff	pclat+1,??_InterruptHandlerLow+4
 10234  00002C  CFE9 F028          	movff	fsr0l+0,??_InterruptHandlerLow+5
 10235  000030  CFEA F029          	movff	fsr0h+0,??_InterruptHandlerLow+6
 10236  000034  CFE1 F02A          	movff	fsr1l+0,??_InterruptHandlerLow+7
 10237  000038  CFE2 F02B          	movff	fsr1h+0,??_InterruptHandlerLow+8
 10238  00003C  CFD9 F02C          	movff	fsr2l+0,??_InterruptHandlerLow+9
 10239  000040  CFDA F02D          	movff	fsr2h+0,??_InterruptHandlerLow+10
 10240  000044  CFF3 F02E          	movff	prodl+0,??_InterruptHandlerLow+11
 10241  000048  CFF4 F02F          	movff	prodh+0,??_InterruptHandlerLow+12
 10242  00004C  CFF6 F030          	movff	tblptrl+0,??_InterruptHandlerLow+13
 10243  000050  CFF7 F031          	movff	tblptrh+0,??_InterruptHandlerLow+14
 10244  000054  CFF8 F032          	movff	tblptru+0,??_InterruptHandlerLow+15
 10245  000058  CFF5 F033          	movff	tablat+0,??_InterruptHandlerLow+16
 10246                           	line	134
 10247                           	
 10248  00005C                     i1l19018:
 10249                           ;interrupts.c: 134: if (PIR1bits.TMR1IF) {
 10250                           	
 10251  00005C  A09E               	btfss	((c:3998)),c,0	;volatile
 10252  00005E  D001               	goto	i1u192_21
 10253  000060  D001               	goto	i1u192_20
 10254  000062                     i1u192_21:
 10255  000062  D004               	goto	i1l19024
 10256  000064                     i1u192_20:
 10257                           	line	135
 10258                           	
 10259  000064                     i1l19020:
 10260                           ;interrupts.c: 135: PIR1bits.TMR1IF = 0;
 10261  000064  909E               	bcf	((c:3998)),c,0	;volatile
 10262                           	line	136
 10263                           	
 10264  000066                     i1l19022:
 10265                           ;interrupts.c: 136: timer1_int_handler();
 10266  000066  EC23  F00F         	call	_timer1_int_handler	;wreg free
 10267  00006A  D000               	goto	i1l19024
 10268                           	line	137
 10269                           	
 10270  00006C                     i1l1825:
 10271                           	line	140
 10272                           	
 10273  00006C                     i1l19024:
 10274                           ;interrupts.c: 137: }
 10275                           ;interrupts.c: 140: if(PIR1bits.ADIF){
 10276                           	
 10277  00006C  AC9E               	btfss	((c:3998)),c,6	;volatile
 10278  00006E  D001               	goto	i1u193_21
 10279  000070  D001               	goto	i1u193_20
 10280  000072                     i1u193_21:
 10281  000072  D004               	goto	i1l19030
 10282  000074                     i1u193_20:
 10283                           	line	141
 10284                           	
 10285  000074                     i1l19026:
 10286                           ;interrupts.c: 141: PIR1bits.ADIF = 0;
 10287  000074  9C9E               	bcf	((c:3998)),c,6	;volatile
 10288                           	line	142
 10289                           	
 10290  000076                     i1l19028:
 10291                           ;interrupts.c: 142: adc_int_handler();
 10292  000076  ECE4  F00E         	call	_adc_int_handler	;wreg free
 10293  00007A  D000               	goto	i1l19030
 10294                           	line	143
 10295                           	
 10296  00007C                     i1l1826:
 10297                           	line	147
 10298                           	
 10299  00007C                     i1l19030:
 10300                           ;interrupts.c: 143: }
 10301                           ;interrupts.c: 147: if (PIR1bits.RCIF) {
 10302                           	
 10303  00007C  AA9E               	btfss	((c:3998)),c,5	;volatile
 10304  00007E  D001               	goto	i1u194_21
 10305  000080  D001               	goto	i1u194_20
 10306  000082                     i1u194_21:
 10307  000082  D004               	goto	i1l1828
 10308  000084                     i1u194_20:
 10309                           	line	148
 10310                           	
 10311  000084                     i1l19032:
 10312                           ;interrupts.c: 148: PIR1bits.RCIF = 0;
 10313  000084  9A9E               	bcf	((c:3998)),c,5	;volatile
 10314                           	line	149
 10315                           	
 10316  000086                     i1l19034:
 10317                           ;interrupts.c: 149: uart_recv_int_handler();
 10318  000086  ECD3  F00A         	call	_uart_recv_int_handler	;wreg free
 10319  00008A  D000               	goto	i1l1828
 10320                           	line	150
 10321                           	
 10322  00008C                     i1l1827:
 10323                           	line	152
 10324                           	
 10325  00008C                     i1l1828:
 10326  00008C  C033  FFF5         	movff	??_InterruptHandlerLow+16,tablat+0
 10327  000090  C032  FFF8         	movff	??_InterruptHandlerLow+15,tblptru+0
 10328  000094  C031  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh+0
 10329  000098  C030  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl+0
 10330  00009C  C02F  FFF4         	movff	??_InterruptHandlerLow+12,prodh+0
 10331  0000A0  C02E  FFF3         	movff	??_InterruptHandlerLow+11,prodl+0
 10332  0000A4  C02D  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h+0
 10333  0000A8  C02C  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l+0
 10334  0000AC  C02B  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h+0
 10335  0000B0  C02A  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l+0
 10336  0000B4  C029  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h+0
 10337  0000B8  C028  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l+0
 10338  0000BC  C027  FFFB         	movff	??_InterruptHandlerLow+4,pclat+1
 10339  0000C0  C026  FFFA         	movff	??_InterruptHandlerLow+3,pclat+0
 10340  0000C4  C025  FFE0         	movff	??_InterruptHandlerLow+2,bsr+0
 10341  0000C8  C024  FFE8         	movff	??_InterruptHandlerLow+1,wreg+0
 10342  0000CC  C023  FFD8         	movff	??_InterruptHandlerLow+0,status+0
 10343  0000D0  0010               	retfie
 10344                           	opt stack 0
 10345                           GLOBAL	__end_of_InterruptHandlerLow
 10346  0000D2                     	__end_of_InterruptHandlerLow:
 10347                           	signat	_InterruptHandlerLow,1112
 10348                           	global	_timer1_int_handler
 10349                           
 10350 ;; *************** function _timer1_int_handler *****************
 10351 ;; Defined at:
 10352 ;;		line 37 in file "../src/user_interrupts.c"
 10353 ;; Parameters:    Size  Location     Type
 10354 ;;		None
 10355 ;; Auto vars:     Size  Location     Type
 10356 ;;  result          2   30[COMRAM] unsigned int 
 10357 ;;  temp            2   28[COMRAM] unsigned int 
 10358 ;; Return value:  Size  Location     Type
 10359 ;;		None               void
 10360 ;; Registers used:
 10361 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10362 ;; Tracked objects:
 10363 ;;		On entry : 0/0
 10364 ;;		On exit  : 0/0
 10365 ;;		Unchanged: 0/0
 10366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10367 ;;      Params:         0       0       0       0       0
 10368 ;;      Locals:         4       0       0       0       0
 10369 ;;      Temps:          2       0       0       0       0
 10370 ;;      Totals:         6       0       0       0       0
 10371 ;;Total ram usage:        6 bytes
 10372 ;; Hardware stack levels used:    1
 10373 ;; Hardware stack levels required when called:    9
 10374 ;; This function calls:
 10375 ;;		_ReadTimer1
 10376 ;;		_ToMainLow_sendmsg
 10377 ;;		_WriteTimer1
 10378 ;; This function is called by:
 10379 ;;		_InterruptHandlerLow
 10380 ;; This function uses a non-reentrant model
 10381 ;;
 10382                           psect	text29,class=CODE,space=0,reloc=2
 10383                           global __ptext29
 10384  001E46                     __ptext29:
 10385                           psect	text29
 10386                           	file	"../src/user_interrupts.c"
 10387                           	line	37
 10388                           	global	__size_of_timer1_int_handler
 10389  0000                     	__size_of_timer1_int_handler	equ	__end_of_timer1_int_handler-_timer1_int_handler
 10390                           	
 10391  001E46                     _timer1_int_handler:
 10392                           	opt	stack 16
 10393                           	line	42
 10394                           	
 10395  001E46                     i1l18978:
 10396                           ;user_interrupts.c: 38: unsigned int result;
 10397                           ;user_interrupts.c: 42: result = ReadTimer1();
 10398  001E46  EC7B  F010         	call	_ReadTimer1	;wreg free
 10399  001E4A  C001  F01F         	movff	0+?_ReadTimer1,(c:timer1_int_handler@result)
 10400  001E4E  C002  F020         	movff	1+?_ReadTimer1,(c:timer1_int_handler@result+1)
 10401                           	line	43
 10402                           	
 10403  001E52                     i1l18980:
 10404                           ;user_interrupts.c: 43: ToMainLow_sendmsg(sizeof(result), 11, (void *) &result);
 10405  001E52  6E1B               	movwf	(??_timer1_int_handler+0+0)&0ffh,c
 10406  001E54  0E02               	movlw	low(02h)
 10407  001E56  6E17               	movwf	((c:?_ToMainLow_sendmsg)),c
 10408  001E58  501B               	movf	(??_timer1_int_handler+0+0)&0ffh,c,w
 10409  001E5A  6E1C               	movwf	(??_timer1_int_handler+1+0)&0ffh,c
 10410  001E5C  0E0B               	movlw	low(0Bh)
 10411  001E5E  6E18               	movwf	(0+((c:?_ToMainLow_sendmsg)+01h)),c
 10412  001E60  501C               	movf	(??_timer1_int_handler+1+0)&0ffh,c,w
 10413  001E62  0E00               	movlw	high((c:timer1_int_handler@result))
 10414  001E64  6E1A               	movwf	(1+((c:?_ToMainLow_sendmsg)+02h)),c
 10415  001E66  0E1F               	movlw	low((c:timer1_int_handler@result))
 10416  001E68  6E19               	movwf	(0+((c:?_ToMainLow_sendmsg)+02h)),c
 10417  001E6A  EC28  F010         	call	_ToMainLow_sendmsg	;wreg free
 10418                           	line	46
 10419                           	
 10420  001E6E                     i1l18982:
 10421                           ;user_interrupts.c: 46: unsigned int temp = 0x1;
 10422  001E6E  0E00               	movlw	high(01h)
 10423  001E70  6E1E               	movwf	((c:timer1_int_handler@temp+1)),c
 10424  001E72  0E01               	movlw	low(01h)
 10425  001E74  6E1D               	movwf	((c:timer1_int_handler@temp)),c
 10426                           	line	47
 10427                           	
 10428  001E76                     i1l18984:
 10429                           ;user_interrupts.c: 47: WriteTimer1(temp);
 10430  001E76  C01D  F001         	movff	(c:timer1_int_handler@temp),(c:?_WriteTimer1)
 10431  001E7A  C01E  F002         	movff	(c:timer1_int_handler@temp+1),(c:?_WriteTimer1+1)
 10432  001E7E  EC84  F010         	call	_WriteTimer1	;wreg free
 10433                           	line	48
 10434                           	
 10435  001E82                     i1l16421:
 10436  001E82  0012               	return
 10437                           	opt stack 0
 10438                           GLOBAL	__end_of_timer1_int_handler
 10439  001E84                     	__end_of_timer1_int_handler:
 10440                           	signat	_timer1_int_handler,88
 10441                           	global	_adc_int_handler
 10442                           
 10443 ;; *************** function _adc_int_handler *****************
 10444 ;; Defined at:
 10445 ;;		line 50 in file "../src/user_interrupts.c"
 10446 ;; Parameters:    Size  Location     Type
 10447 ;;		None
 10448 ;; Auto vars:     Size  Location     Type
 10449 ;;  message         4   28[COMRAM] unsigned char [4]
 10450 ;;  value           2   32[COMRAM] unsigned int 
 10451 ;; Return value:  Size  Location     Type
 10452 ;;		None               void
 10453 ;; Registers used:
 10454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10455 ;; Tracked objects:
 10456 ;;		On entry : 0/0
 10457 ;;		On exit  : 0/0
 10458 ;;		Unchanged: 0/0
 10459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10460 ;;      Params:         0       0       0       0       0
 10461 ;;      Locals:         6       0       0       0       0
 10462 ;;      Temps:          2       0       0       0       0
 10463 ;;      Totals:         8       0       0       0       0
 10464 ;;Total ram usage:        8 bytes
 10465 ;; Hardware stack levels used:    1
 10466 ;; Hardware stack levels required when called:    9
 10467 ;; This function calls:
 10468 ;;		_ReadADC
 10469 ;;		_ToMainLow_sendmsg
 10470 ;; This function is called by:
 10471 ;;		_InterruptHandlerLow
 10472 ;; This function uses a non-reentrant model
 10473 ;;
 10474                           psect	text30,class=CODE,space=0,reloc=2
 10475                           global __ptext30
 10476  001DC8                     __ptext30:
 10477                           psect	text30
 10478                           	file	"../src/user_interrupts.c"
 10479                           	line	50
 10480                           	global	__size_of_adc_int_handler
 10481  0000                     	__size_of_adc_int_handler	equ	__end_of_adc_int_handler-_adc_int_handler
 10482                           	
 10483  001DC8                     _adc_int_handler:
 10484                           	opt	stack 16
 10485                           	line	51
 10486                           	
 10487  001DC8                     i1l18986:
 10488                           ;user_interrupts.c: 51: unsigned int value = ReadADC();
 10489  001DC8  EC9D  F010         	call	_ReadADC	;wreg free
 10490  001DCC  C001  F021         	movff	0+?_ReadADC,(c:adc_int_handler@value)
 10491  001DD0  C002  F022         	movff	1+?_ReadADC,(c:adc_int_handler@value+1)
 10492                           	line	53
 10493                           	
 10494  001DD4                     i1l18988:
 10495                           ;user_interrupts.c: 52: unsigned char message[4];
 10496                           ;user_interrupts.c: 53: message[2] = (unsigned char)(0xFF & value);
 10497  001DD4  C021  F01F         	movff	(c:adc_int_handler@value),0+((c:adc_int_handler@message)+02h)
 10498                           	line	54
 10499                           	
 10500  001DD8                     i1l18990:
 10501                           ;user_interrupts.c: 54: message[3] = (unsigned char)(0xFF & (value>>8));
 10502  001DD8  5022               	movf	((c:adc_int_handler@value+1)),c,w
 10503  001DDA  6E20               	movwf	(0+((c:adc_int_handler@message)+03h)),c
 10504                           	line	55
 10505                           	
 10506  001DDC                     i1l18992:
 10507                           ;user_interrupts.c: 55: message[0] = 0x11;
 10508  001DDC  6E1B               	movwf	(??_adc_int_handler+0+0)&0ffh,c
 10509  001DDE  0E11               	movlw	low(011h)
 10510  001DE0  6E1D               	movwf	((c:adc_int_handler@message)),c
 10511  001DE2  501B               	movf	(??_adc_int_handler+0+0)&0ffh,c,w
 10512                           	line	56
 10513                           	
 10514  001DE4                     i1l18994:
 10515                           ;user_interrupts.c: 56: message[1] = adcMsgCount;
 10516  001DE4  C04A  F01E         	movff	(c:_adcMsgCount),0+((c:adc_int_handler@message)+01h)
 10517                           	line	57
 10518                           	
 10519  001DE8                     i1l18996:
 10520                           ;user_interrupts.c: 57: adcMsgCount++;
 10521  001DE8  2A4A               	incf	((c:_adcMsgCount)),c
 10522                           	line	58
 10523                           	
 10524  001DEA                     i1l18998:
 10525                           ;user_interrupts.c: 58: ToMainLow_sendmsg(4,40,(void *) message);
 10526  001DEA  6E1B               	movwf	(??_adc_int_handler+0+0)&0ffh,c
 10527  001DEC  0E04               	movlw	low(04h)
 10528  001DEE  6E17               	movwf	((c:?_ToMainLow_sendmsg)),c
 10529  001DF0  501B               	movf	(??_adc_int_handler+0+0)&0ffh,c,w
 10530  001DF2  6E1C               	movwf	(??_adc_int_handler+1+0)&0ffh,c
 10531  001DF4  0E28               	movlw	low(028h)
 10532  001DF6  6E18               	movwf	(0+((c:?_ToMainLow_sendmsg)+01h)),c
 10533  001DF8  501C               	movf	(??_adc_int_handler+1+0)&0ffh,c,w
 10534  001DFA  0E00               	movlw	high((c:adc_int_handler@message))
 10535  001DFC  6E1A               	movwf	(1+((c:?_ToMainLow_sendmsg)+02h)),c
 10536  001DFE  0E1D               	movlw	low((c:adc_int_handler@message))
 10537  001E00  6E19               	movwf	(0+((c:?_ToMainLow_sendmsg)+02h)),c
 10538  001E02  EC28  F010         	call	_ToMainLow_sendmsg	;wreg free
 10539                           	line	59
 10540                           	
 10541  001E06                     i1l16424:
 10542  001E06  0012               	return
 10543                           	opt stack 0
 10544                           GLOBAL	__end_of_adc_int_handler
 10545  001E08                     	__end_of_adc_int_handler:
 10546                           	signat	_adc_int_handler,88
 10547                           	global	_uart_recv_int_handler
 10548                           
 10549 ;; *************** function _uart_recv_int_handler *****************
 10550 ;; Defined at:
 10551 ;;		line 12 in file "../src/my_uart.c"
 10552 ;; Parameters:    Size  Location     Type
 10553 ;;		None
 10554 ;; Auto vars:     Size  Location     Type
 10555 ;;		None
 10556 ;; Return value:  Size  Location     Type
 10557 ;;		None               void
 10558 ;; Registers used:
 10559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10560 ;; Tracked objects:
 10561 ;;		On entry : 0/0
 10562 ;;		On exit  : 0/0
 10563 ;;		Unchanged: 0/0
 10564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10565 ;;      Params:         0       0       0       0       0
 10566 ;;      Locals:         0       0       0       0       0
 10567 ;;      Temps:          2       0       0       0       0
 10568 ;;      Totals:         2       0       0       0       0
 10569 ;;Total ram usage:        2 bytes
 10570 ;; Hardware stack levels used:    1
 10571 ;; Hardware stack levels required when called:    9
 10572 ;; This function calls:
 10573 ;;		_ReadUSART
 10574 ;;		_ToMainLow_sendmsg
 10575 ;; This function is called by:
 10576 ;;		_InterruptHandlerLow
 10577 ;; This function uses a non-reentrant model
 10578 ;;
 10579                           psect	text31,class=CODE,space=0,reloc=2
 10580                           global __ptext31
 10581  0015A6                     __ptext31:
 10582                           psect	text31
 10583                           	file	"../src/my_uart.c"
 10584                           	line	12
 10585                           	global	__size_of_uart_recv_int_handler
 10586  0000                     	__size_of_uart_recv_int_handler	equ	__end_of_uart_recv_int_handler-_uart_recv_int_handl
                                 er
 10587                           	
 10588  0015A6                     _uart_recv_int_handler:
 10589                           	opt	stack 16
 10590                           	line	13
 10591                           	
 10592  0015A6                     i1l19000:
 10593                           ;my_uart.c: 13: if ((PIR1bits.RCIF)) {
 10594                           	
 10595  0015A6  AA9E               	btfss	((c:3998)),c,5	;volatile
 10596  0015A8  D001               	goto	i1u189_21
 10597  0015AA  D001               	goto	i1u189_20
 10598  0015AC                     i1u189_21:
 10599  0015AC  D041               	goto	i1l19012
 10600  0015AE                     i1u189_20:
 10601                           	line	14
 10602                           	
 10603  0015AE                     i1l19002:
 10604                           ;my_uart.c: 14: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
 10605  0015AE  EE20 F004          	lfsr	2,04h
 10606  0015B2  504B               	movf	((c:_uc_ptr)),c,w
 10607  0015B4  26D9               	addwf	fsr2l
 10608  0015B6  504C               	movf	((c:_uc_ptr+1)),c,w
 10609  0015B8  22DA               	addwfc	fsr2h
 10610  0015BA  50DF               	movf	indf2,w
 10611  0015BC  6E1B               	movwf	(??_uart_recv_int_handler+0+0)&0ffh,c
 10612  0015BE  501B               	movf	((??_uart_recv_int_handler+0+0)),c,w
 10613  0015C0  0D01               	mullw	01h
 10614  0015C2  50F3               	movf	(prodl),c,w
 10615  0015C4  244B               	addwf	((c:_uc_ptr)),c,w
 10616  0015C6  6ED9               	movwf	c:fsr2l
 10617  0015C8  50F4               	movf	(prodh),c,w
 10618  0015CA  204C               	addwfc	((c:_uc_ptr+1)),c,w
 10619  0015CC  6EDA               	movwf	1+c:fsr2l
 10620  0015CE  EC5E  F00F         	call	_ReadUSART	;wreg free
 10621  0015D2  6EDF               	movwf	indf2
 10622                           
 10623                           	line	15
 10624                           	
 10625  0015D4                     i1l19004:
 10626                           ;my_uart.c: 15: uc_ptr->buflen++;
 10627  0015D4  EE20 F004          	lfsr	2,04h
 10628  0015D8  504B               	movf	((c:_uc_ptr)),c,w
 10629  0015DA  26D9               	addwf	fsr2l
 10630  0015DC  504C               	movf	((c:_uc_ptr+1)),c,w
 10631  0015DE  22DA               	addwfc	fsr2h
 10632  0015E0  2ADF               	incf	indf2
 10633                           
 10634                           	line	17
 10635                           	
 10636  0015E2                     i1l19006:
 10637                           ;my_uart.c: 17: if (uc_ptr->buflen == 4) {
 10638  0015E2  EE20 F004          	lfsr	2,04h
 10639  0015E6  504B               	movf	((c:_uc_ptr)),c,w
 10640  0015E8  26D9               	addwf	fsr2l
 10641  0015EA  504C               	movf	((c:_uc_ptr+1)),c,w
 10642  0015EC  22DA               	addwfc	fsr2h
 10643  0015EE  0E04               	movlw	(04h)&0ffh
 10644  0015F0  62DF               	cpfseq	indf2
 10645  0015F2  D001               	goto	i1u190_21
 10646  0015F4  D001               	goto	i1u190_20
 10647  0015F6                     i1u190_21:
 10648  0015F6  D01C               	goto	i1l19012
 10649  0015F8                     i1u190_20:
 10650                           	line	18
 10651                           	
 10652  0015F8                     i1l19008:
 10653                           ;my_uart.c: 18: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
 10654  0015F8  EE20 F004          	lfsr	2,04h
 10655  0015FC  504B               	movf	((c:_uc_ptr)),c,w
 10656  0015FE  26D9               	addwf	fsr2l
 10657  001600  504C               	movf	((c:_uc_ptr+1)),c,w
 10658  001602  22DA               	addwfc	fsr2h
 10659  001604  50DF               	movf	indf2,w
 10660  001606  6E17               	movwf	((c:?_ToMainLow_sendmsg)),c
 10661  001608  6E1B               	movwf	(??_uart_recv_int_handler+0+0)&0ffh,c
 10662  00160A  0E1F               	movlw	low(01Fh)
 10663  00160C  6E18               	movwf	(0+((c:?_ToMainLow_sendmsg)+01h)),c
 10664  00160E  501B               	movf	(??_uart_recv_int_handler+0+0)&0ffh,c,w
 10665  001610  C04B  F019         	movff	(c:_uc_ptr),0+((c:?_ToMainLow_sendmsg)+02h)
 10666  001614  C04C  F01A         	movff	(c:_uc_ptr+1),1+((c:?_ToMainLow_sendmsg)+02h)
 10667  001618  EC28  F010         	call	_ToMainLow_sendmsg	;wreg free
 10668                           	line	19
 10669                           	
 10670  00161C                     i1l19010:
 10671                           ;my_uart.c: 19: uc_ptr->buflen = 0;
 10672  00161C  EE20 F004          	lfsr	2,04h
 10673  001620  504B               	movf	((c:_uc_ptr)),c,w
 10674  001622  26D9               	addwf	fsr2l
 10675  001624  504C               	movf	((c:_uc_ptr+1)),c,w
 10676  001626  22DA               	addwfc	fsr2h
 10677  001628  0E00               	movlw	low(0)
 10678  00162A  6EDF               	movwf	indf2
 10679  00162C  D001               	goto	i1l19012
 10680                           	line	20
 10681                           	
 10682  00162E                     i1l9234:
 10683  00162E  D000               	goto	i1l19012
 10684                           	line	21
 10685                           	
 10686  001630                     i1l9233:
 10687                           	line	22
 10688                           	
 10689  001630                     i1l19012:
 10690                           ;my_uart.c: 20: }
 10691                           ;my_uart.c: 21: }
 10692                           ;my_uart.c: 22: if (USART_Status.OVERRUN_ERROR == 1) {
 10693                           	
 10694  001630  A649               	btfss	((c:_USART_Status)),c,3
 10695  001632  D001               	goto	i1u191_21
 10696  001634  D001               	goto	i1u191_20
 10697  001636                     i1u191_21:
 10698  001636  D011               	goto	i1l9236
 10699  001638                     i1u191_20:
 10700                           	line	25
 10701                           	
 10702  001638                     i1l19014:
 10703                           ;my_uart.c: 25: RCSTAbits.CREN = 0;
 10704  001638  98AB               	bcf	((c:4011)),c,4	;volatile
 10705                           	line	26
 10706                           ;my_uart.c: 26: RCSTAbits.CREN = 1;
 10707  00163A  88AB               	bsf	((c:4011)),c,4	;volatile
 10708                           	line	27
 10709                           	
 10710  00163C                     i1l19016:
 10711                           ;my_uart.c: 27: ToMainLow_sendmsg(0, 30, (void *) 0);
 10712  00163C  6E1B               	movwf	(??_uart_recv_int_handler+0+0)&0ffh,c
 10713  00163E  0E00               	movlw	low(0)
 10714  001640  6E17               	movwf	((c:?_ToMainLow_sendmsg)),c
 10715  001642  501B               	movf	(??_uart_recv_int_handler+0+0)&0ffh,c,w
 10716  001644  6E1C               	movwf	(??_uart_recv_int_handler+1+0)&0ffh,c
 10717  001646  0E1E               	movlw	low(01Eh)
 10718  001648  6E18               	movwf	(0+((c:?_ToMainLow_sendmsg)+01h)),c
 10719  00164A  501C               	movf	(??_uart_recv_int_handler+1+0)&0ffh,c,w
 10720  00164C  0E00               	movlw	high(0)
 10721  00164E  6E1A               	movwf	(1+((c:?_ToMainLow_sendmsg)+02h)),c
 10722  001650  0E00               	movlw	low(0)
 10723  001652  6E19               	movwf	(0+((c:?_ToMainLow_sendmsg)+02h)),c
 10724  001654  EC28  F010         	call	_ToMainLow_sendmsg	;wreg free
 10725  001658  D000               	goto	i1l9236
 10726                           	line	28
 10727                           	
 10728  00165A                     i1l9235:
 10729                           	line	29
 10730                           	
 10731  00165A                     i1l9236:
 10732  00165A  0012               	return
 10733                           	opt stack 0
 10734                           GLOBAL	__end_of_uart_recv_int_handler
 10735  00165C                     	__end_of_uart_recv_int_handler:
 10736                           	signat	_uart_recv_int_handler,88
 10737                           	global	_ToMainLow_sendmsg
 10738                           
 10739 ;; *************** function _ToMainLow_sendmsg *****************
 10740 ;; Defined at:
 10741 ;;		line 103 in file "../src/messages.c"
 10742 ;; Parameters:    Size  Location     Type
 10743 ;;  length          1   22[COMRAM] unsigned char 
 10744 ;;  msgtype         1   23[COMRAM] unsigned char 
 10745 ;;  data            2   24[COMRAM] PTR void 
 10746 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), NULL(0), main@uc(5), 
 10747 ;; Auto vars:     Size  Location     Type
 10748 ;;		None
 10749 ;; Return value:  Size  Location     Type
 10750 ;;                  1    wreg      char 
 10751 ;; Registers used:
 10752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10753 ;; Tracked objects:
 10754 ;;		On entry : 0/0
 10755 ;;		On exit  : 0/0
 10756 ;;		Unchanged: 0/0
 10757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10758 ;;      Params:         4       0       0       0       0
 10759 ;;      Locals:         0       0       0       0       0
 10760 ;;      Temps:          0       0       0       0       0
 10761 ;;      Totals:         4       0       0       0       0
 10762 ;;Total ram usage:        4 bytes
 10763 ;; Hardware stack levels used:    1
 10764 ;; Hardware stack levels required when called:    8
 10765 ;; This function calls:
 10766 ;;		i1_send_msg
 10767 ;; This function is called by:
 10768 ;;		_uart_recv_int_handler
 10769 ;;		_timer1_int_handler
 10770 ;;		_adc_int_handler
 10771 ;; This function uses a non-reentrant model
 10772 ;;
 10773                           psect	text32,class=CODE,space=0,reloc=2
 10774                           global __ptext32
 10775  002050                     __ptext32:
 10776                           psect	text32
 10777                           	file	"../src/messages.c"
 10778                           	line	103
 10779                           	global	__size_of_ToMainLow_sendmsg
 10780  0000                     	__size_of_ToMainLow_sendmsg	equ	__end_of_ToMainLow_sendmsg-_ToMainLow_sendmsg
 10781                           	
 10782  002050                     _ToMainLow_sendmsg:
 10783                           	opt	stack 16
 10784                           	line	109
 10785                           	
 10786  002050                     i1l18974:
 10787                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
 10788                           ;	Return value of _ToMainLow_sendmsg is never used
 10789  002050  0101               	movlb	1	; () banked
 10790  002052  0E01               	movlw	high(_ToMainLow_MQ)
 10791  002054  6E0C               	movwf	((c:?i1_send_msg+1)),c
 10792  002056  0101               	movlb	1	; () banked
 10793  002058  0E6C               	movlw	low(_ToMainLow_MQ)
 10794  00205A  6E0B               	movwf	((c:?i1_send_msg)),c
 10795  00205C  C017  F00D         	movff	(c:ToMainLow_sendmsg@length),0+((c:?i1_send_msg)+02h)
 10796  002060  C018  F00E         	movff	(c:ToMainLow_sendmsg@msgtype),0+((c:?i1_send_msg)+03h)
 10797  002064  C019  F00F         	movff	(c:ToMainLow_sendmsg@data),0+((c:?i1_send_msg)+04h)
 10798  002068  C01A  F010         	movff	(c:ToMainLow_sendmsg@data+1),1+((c:?i1_send_msg)+04h)
 10799  00206C  EC88  F00B         	call	i1_send_msg	;wreg free
 10800  002070  D000               	goto	i1l5485
 10801                           	
 10802  002072                     i1l18976:
 10803                           	line	110
 10804                           	
 10805  002072                     i1l5485:
 10806  002072  0012               	return
 10807                           	opt stack 0
 10808                           GLOBAL	__end_of_ToMainLow_sendmsg
 10809  002074                     	__end_of_ToMainLow_sendmsg:
 10810                           	signat	_ToMainLow_sendmsg,12409
 10811                           	global	_ReadUSART
 10812                           
 10813 ;; *************** function _ReadUSART *****************
 10814 ;; Defined at:
 10815 ;;		line 16 in file "plib/USART/uread.c"
 10816 ;; Parameters:    Size  Location     Type
 10817 ;;		None
 10818 ;; Auto vars:     Size  Location     Type
 10819 ;;  data            1    0[COMRAM] unsigned char 
 10820 ;; Return value:  Size  Location     Type
 10821 ;;                  1    wreg      unsigned char 
 10822 ;; Registers used:
 10823 ;;		wreg, status,2, status,0
 10824 ;; Tracked objects:
 10825 ;;		On entry : 0/0
 10826 ;;		On exit  : 0/0
 10827 ;;		Unchanged: 0/0
 10828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10829 ;;      Params:         0       0       0       0       0
 10830 ;;      Locals:         1       0       0       0       0
 10831 ;;      Temps:          0       0       0       0       0
 10832 ;;      Totals:         1       0       0       0       0
 10833 ;;Total ram usage:        1 bytes
 10834 ;; Hardware stack levels used:    1
 10835 ;; Hardware stack levels required when called:    6
 10836 ;; This function calls:
 10837 ;;		Nothing
 10838 ;; This function is called by:
 10839 ;;		_uart_recv_int_handler
 10840 ;; This function uses a non-reentrant model
 10841 ;;
 10842                           psect	text33,class=CODE,space=0,reloc=2
 10843                           global __ptext33
 10844  001EBC                     __ptext33:
 10845                           psect	text33
 10846                           	file	"plib/USART/uread.c"
 10847                           	line	16
 10848                           	global	__size_of_ReadUSART
 10849  0000                     	__size_of_ReadUSART	equ	__end_of_ReadUSART-_ReadUSART
 10850                           	
 10851  001EBC                     _ReadUSART:
 10852                           	opt	stack 18
 10853                           	line	19
 10854                           	
 10855  001EBC                     i1l18814:
 10856  001EBC  0EF2               	movlw	(0F2h)&0ffh
 10857  001EBE  1649               	andwf	((c:_USART_Status)),c
 10858                           	line	21
 10859                           	
 10860  001EC0                     i1l18816:
 10861                           	
 10862  001EC0  ACAB               	btfss	((c:4011)),c,6	;volatile
 10863  001EC2  D001               	goto	i1u176_21
 10864  001EC4  D001               	goto	i1u176_20
 10865  001EC6                     i1u176_21:
 10866  001EC6  D007               	goto	i1l16540
 10867  001EC8                     i1u176_20:
 10868                           	line	23
 10869                           	
 10870  001EC8                     i1l18818:
 10871  001EC8  9049               	bcf	((c:_USART_Status)),c,0
 10872                           	line	24
 10873                           	
 10874  001ECA  A0AB               	btfss	((c:4011)),c,0	;volatile
 10875  001ECC  D001               	goto	i1u177_21
 10876  001ECE  D001               	goto	i1u177_20
 10877  001ED0                     i1u177_21:
 10878  001ED0  D002               	goto	i1l16540
 10879  001ED2                     i1u177_20:
 10880                           	line	25
 10881                           	
 10882  001ED2                     i1l18820:
 10883  001ED2  8049               	bsf	((c:_USART_Status)),c,0
 10884  001ED4  D000               	goto	i1l16540
 10885                           	
 10886  001ED6                     i1l16541:
 10887                           	line	26
 10888                           	
 10889  001ED6                     i1l16540:
 10890                           	line	28
 10891                           	
 10892  001ED6  A4AB               	btfss	((c:4011)),c,2	;volatile
 10893  001ED8  D001               	goto	i1u178_21
 10894  001EDA  D001               	goto	i1u178_20
 10895  001EDC                     i1u178_21:
 10896  001EDC  D001               	goto	i1l16542
 10897  001EDE                     i1u178_20:
 10898                           	line	29
 10899                           	
 10900  001EDE                     i1l18822:
 10901  001EDE  8449               	bsf	((c:_USART_Status)),c,2
 10902                           	
 10903  001EE0                     i1l16542:
 10904                           	line	31
 10905                           	
 10906  001EE0  A2AB               	btfss	((c:4011)),c,1	;volatile
 10907  001EE2  D001               	goto	i1u179_21
 10908  001EE4  D001               	goto	i1u179_20
 10909  001EE6                     i1u179_21:
 10910  001EE6  D001               	goto	i1l16543
 10911  001EE8                     i1u179_20:
 10912                           	line	32
 10913                           	
 10914  001EE8                     i1l18824:
 10915  001EE8  8649               	bsf	((c:_USART_Status)),c,3
 10916                           	
 10917  001EEA                     i1l16543:
 10918                           	line	34
 10919  001EEA  CFAE F001          	movff	(c:4014),(c:ReadUSART@data)	;volatile
 10920                           	line	36
 10921                           	
 10922  001EEE                     i1l18826:
 10923  001EEE  5001               	movf	((c:ReadUSART@data)),c,w
 10924  001EF0  D000               	goto	i1l16544
 10925                           	
 10926  001EF2                     i1l18828:
 10927                           	line	37
 10928                           	
 10929  001EF2                     i1l16544:
 10930  001EF2  0012               	return
 10931                           	opt stack 0
 10932                           GLOBAL	__end_of_ReadUSART
 10933  001EF4                     	__end_of_ReadUSART:
 10934                           	signat	_ReadUSART,89
 10935                           	global	_ReadTimer1
 10936                           
 10937 ;; *************** function _ReadTimer1 *****************
 10938 ;; Defined at:
 10939 ;;		line 16 in file "plib/Timers/t1read.c"
 10940 ;; Parameters:    Size  Location     Type
 10941 ;;		None
 10942 ;; Auto vars:     Size  Location     Type
 10943 ;;  timer           2    2[COMRAM] struct Timers
 10944 ;; Return value:  Size  Location     Type
 10945 ;;                  2    0[COMRAM] unsigned int 
 10946 ;; Registers used:
 10947 ;;		None
 10948 ;; Tracked objects:
 10949 ;;		On entry : 0/0
 10950 ;;		On exit  : 0/0
 10951 ;;		Unchanged: 0/0
 10952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10953 ;;      Params:         2       0       0       0       0
 10954 ;;      Locals:         2       0       0       0       0
 10955 ;;      Temps:          0       0       0       0       0
 10956 ;;      Totals:         4       0       0       0       0
 10957 ;;Total ram usage:        4 bytes
 10958 ;; Hardware stack levels used:    1
 10959 ;; Hardware stack levels required when called:    6
 10960 ;; This function calls:
 10961 ;;		Nothing
 10962 ;; This function is called by:
 10963 ;;		_timer1_int_handler
 10964 ;; This function uses a non-reentrant model
 10965 ;;
 10966                           psect	text34,class=CODE,space=0,reloc=2
 10967                           global __ptext34
 10968  0020F6                     __ptext34:
 10969                           psect	text34
 10970                           	file	"plib/Timers/t1read.c"
 10971                           	line	16
 10972                           	global	__size_of_ReadTimer1
 10973  0000                     	__size_of_ReadTimer1	equ	__end_of_ReadTimer1-_ReadTimer1
 10974                           	
 10975  0020F6                     _ReadTimer1:
 10976                           	opt	stack 18
 10977                           	line	19
 10978                           	
 10979  0020F6                     i1l17840:
 10980  0020F6  CFCE F003          	movff	(c:4046),(c:ReadTimer1@timer)	;volatile
 10981                           	line	20
 10982  0020FA  CFCF F004          	movff	(c:4047),0+((c:ReadTimer1@timer)+01h)	;volatile
 10983                           	line	22
 10984  0020FE  C003  F001         	movff	(c:ReadTimer1@timer),(c:?_ReadTimer1)
 10985  002102  C004  F002         	movff	(c:ReadTimer1@timer+1),(c:?_ReadTimer1+1)
 10986                           	line	23
 10987                           	
 10988  002106                     i1l16489:
 10989  002106  0012               	return
 10990                           	opt stack 0
 10991                           GLOBAL	__end_of_ReadTimer1
 10992  002108                     	__end_of_ReadTimer1:
 10993                           	signat	_ReadTimer1,90
 10994                           	global	_WriteTimer1
 10995                           
 10996 ;; *************** function _WriteTimer1 *****************
 10997 ;; Defined at:
 10998 ;;		line 15 in file "plib/Timers/t1write.c"
 10999 ;; Parameters:    Size  Location     Type
 11000 ;;  timer1          2    0[COMRAM] unsigned int 
 11001 ;; Auto vars:     Size  Location     Type
 11002 ;;  timer           2    2[COMRAM] struct Timers
 11003 ;; Return value:  Size  Location     Type
 11004 ;;		None               void
 11005 ;; Registers used:
 11006 ;;		None
 11007 ;; Tracked objects:
 11008 ;;		On entry : 0/0
 11009 ;;		On exit  : 0/0
 11010 ;;		Unchanged: 0/0
 11011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11012 ;;      Params:         2       0       0       0       0
 11013 ;;      Locals:         2       0       0       0       0
 11014 ;;      Temps:          0       0       0       0       0
 11015 ;;      Totals:         4       0       0       0       0
 11016 ;;Total ram usage:        4 bytes
 11017 ;; Hardware stack levels used:    1
 11018 ;; Hardware stack levels required when called:    6
 11019 ;; This function calls:
 11020 ;;		Nothing
 11021 ;; This function is called by:
 11022 ;;		_timer1_int_handler
 11023 ;; This function uses a non-reentrant model
 11024 ;;
 11025                           psect	text35,class=CODE,space=0,reloc=2
 11026                           global __ptext35
 11027  002108                     __ptext35:
 11028                           psect	text35
 11029                           	file	"plib/Timers/t1write.c"
 11030                           	line	15
 11031                           	global	__size_of_WriteTimer1
 11032  0000                     	__size_of_WriteTimer1	equ	__end_of_WriteTimer1-_WriteTimer1
 11033                           	
 11034  002108                     _WriteTimer1:
 11035                           	opt	stack 18
 11036                           	line	18
 11037                           	
 11038  002108                     i1l17842:
 11039  002108  C001  F003         	movff	(c:WriteTimer1@timer1),(c:WriteTimer1@timer)
 11040  00210C  C002  F004         	movff	(c:WriteTimer1@timer1+1),(c:WriteTimer1@timer+1)
 11041                           	line	20
 11042  002110  C004  FFCF         	movff	0+((c:WriteTimer1@timer)+01h),(c:4047)	;volatile
 11043                           	line	21
 11044  002114  C003  FFCE         	movff	(c:WriteTimer1@timer),(c:4046)	;volatile
 11045                           	line	22
 11046                           	
 11047  002118                     i1l16496:
 11048  002118  0012               	return
 11049                           	opt stack 0
 11050                           GLOBAL	__end_of_WriteTimer1
 11051  00211A                     	__end_of_WriteTimer1:
 11052                           	signat	_WriteTimer1,4216
 11053                           	global	_ReadADC
 11054                           
 11055 ;; *************** function _ReadADC *****************
 11056 ;; Defined at:
 11057 ;;		line 25 in file "plib/ADC/adcread.c"
 11058 ;; Parameters:    Size  Location     Type
 11059 ;;		None
 11060 ;; Auto vars:     Size  Location     Type
 11061 ;;		None
 11062 ;; Return value:  Size  Location     Type
 11063 ;;                  2    0[COMRAM] int 
 11064 ;; Registers used:
 11065 ;;		wreg, status,2
 11066 ;; Tracked objects:
 11067 ;;		On entry : 0/0
 11068 ;;		On exit  : 0/0
 11069 ;;		Unchanged: 0/0
 11070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11071 ;;      Params:         2       0       0       0       0
 11072 ;;      Locals:         0       0       0       0       0
 11073 ;;      Temps:          0       0       0       0       0
 11074 ;;      Totals:         2       0       0       0       0
 11075 ;;Total ram usage:        2 bytes
 11076 ;; Hardware stack levels used:    1
 11077 ;; Hardware stack levels required when called:    6
 11078 ;; This function calls:
 11079 ;;		Nothing
 11080 ;; This function is called by:
 11081 ;;		_adc_int_handler
 11082 ;; This function uses a non-reentrant model
 11083 ;;
 11084                           psect	text36,class=CODE,space=0,reloc=2
 11085                           global __ptext36
 11086  00213A                     __ptext36:
 11087                           psect	text36
 11088                           	file	"plib/ADC/adcread.c"
 11089                           	line	25
 11090                           	global	__size_of_ReadADC
 11091  0000                     	__size_of_ReadADC	equ	__end_of_ReadADC-_ReadADC
 11092                           	
 11093  00213A                     _ReadADC:
 11094                           	opt	stack 18
 11095                           	line	26
 11096                           	
 11097  00213A                     i1l17844:
 11098  00213A  50C4               	movf	((c:4036)),c,w	;volatile
 11099  00213C  6E02               	movwf	((c:?_ReadADC+1)),c
 11100  00213E  50C3               	movf	((c:4035)),c,w	;volatile
 11101  002140  6E01               	movwf	((c:?_ReadADC)),c
 11102  002142  D000               	goto	i1l16449
 11103                           	
 11104  002144                     i1l17846:
 11105                           	line	27
 11106                           	
 11107  002144                     i1l16449:
 11108  002144  0012               	return
 11109                           	opt stack 0
 11110                           GLOBAL	__end_of_ReadADC
 11111  002146                     	__end_of_ReadADC:
 11112                           	signat	_ReadADC,90
 11113                           	global	i1_send_msg
 11114                           
 11115 ;; *************** function i1_send_msg *****************
 11116 ;; Defined at:
 11117 ;;		line 24 in file "../src/messages.c"
 11118 ;; Parameters:    Size  Location     Type
 11119 ;;  send_msg        2   10[COMRAM] PTR struct __msg_queue
 11120 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 11121 ;;  send_msg        1   12[COMRAM] unsigned char 
 11122 ;;  send_msg        1   13[COMRAM] unsigned char 
 11123 ;;  send_msg        2   14[COMRAM] PTR void 
 11124 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 11125 ;;		 -> i2c_slave_int_handler@error_buf(3), main@msgbuffer(11), main@uc(5), 
 11126 ;; Auto vars:     Size  Location     Type
 11127 ;;  send_msg        2   20[COMRAM] PTR struct __msg
 11128 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 11129 ;;  send_msg        2   17[COMRAM] unsigned int 
 11130 ;;  send_msg        1   19[COMRAM] unsigned char 
 11131 ;; Return value:  Size  Location     Type
 11132 ;;                  1    wreg      char 
 11133 ;; Registers used:
 11134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11135 ;; Tracked objects:
 11136 ;;		On entry : 0/0
 11137 ;;		On exit  : 0/0
 11138 ;;		Unchanged: 0/0
 11139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11140 ;;      Params:         6       0       0       0       0
 11141 ;;      Locals:         5       0       0       0       0
 11142 ;;      Temps:          1       0       0       0       0
 11143 ;;      Totals:        12       0       0       0       0
 11144 ;;Total ram usage:       12 bytes
 11145 ;; Hardware stack levels used:    1
 11146 ;; Hardware stack levels required when called:    7
 11147 ;; This function calls:
 11148 ;;		i1_memcpy
 11149 ;; This function is called by:
 11150 ;;		_ToMainLow_sendmsg
 11151 ;; This function uses a non-reentrant model
 11152 ;;
 11153                           psect	text37,class=CODE,space=0,reloc=2
 11154                           global __ptext37
 11155  001710                     __ptext37:
 11156                           psect	text37
 11157                           	file	"../src/messages.c"
 11158                           	line	24
 11159                           	global	__size_ofi1_send_msg
 11160  0000                     	__size_ofi1_send_msg	equ	__end_ofi1_send_msg-i1_send_msg
 11161                           	
 11162  001710                     i1_send_msg:
 11163                           	opt	stack 16
 11164                           	line	28
 11165                           	
 11166  001710                     i1l18950:
 11167                           ;messages.c: 25: unsigned char slot;
 11168                           ;messages.c: 27: msg *qmsg;
 11169                           ;messages.c: 28: size_t tlength = length;
 11170  001710  C00D  F012         	movff	(c:i1send_msg@length),(c:i1send_msg@tlength)
 11171  001714  6A13               	clrf	((c:i1send_msg@tlength+1)),c
 11172                           	line	38
 11173                           	
 11174  001716                     i1l18952:
 11175                           ;messages.c: 38: slot = qptr->cur_write_ind;
 11176  001716  EE20 F034          	lfsr	2,034h
 11177  00171A  500B               	movf	((c:i1send_msg@qptr)),c,w
 11178  00171C  26D9               	addwf	fsr2l
 11179  00171E  500C               	movf	((c:i1send_msg@qptr+1)),c,w
 11180  001720  22DA               	addwfc	fsr2h
 11181  001722  50DF               	movf	indf2,w
 11182  001724  6E14               	movwf	((c:i1send_msg@slot)),c
 11183                           	line	39
 11184                           	
 11185  001726                     i1l18954:
 11186                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
 11187  001726  5014               	movf	((c:i1send_msg@slot)),c,w
 11188  001728  0D0D               	mullw	0Dh
 11189  00172A  50F3               	movf	(prodl),c,w
 11190  00172C  240B               	addwf	((c:i1send_msg@qptr)),c,w
 11191                           	
 11192  00172E  6E15               	movwf	((c:i1send_msg@qmsg)),c
 11193  001730  50F4               	movf	(prodh),c,w
 11194  001732  200C               	addwfc	((c:i1send_msg@qptr+1)),c,w
 11195  001734  6E16               	movwf	1+((c:i1send_msg@qmsg)),c
 11196                           	line	41
 11197                           	
 11198  001736                     i1l18956:
 11199                           ;messages.c: 41: if (qmsg->full != 0) {
 11200  001736  C015  FFD9         	movff	(c:i1send_msg@qmsg),fsr2l
 11201  00173A  C016  FFDA         	movff	(c:i1send_msg@qmsg+1),fsr2h
 11202  00173E  50DF               	movf	indf2,w
 11203  001740  B4D8               	btfsc	status,2
 11204  001742  D001               	goto	i1u188_21
 11205  001744  D001               	goto	i1u188_20
 11206  001746                     i1u188_21:
 11207  001746  D003               	goto	i1l18962
 11208  001748                     i1u188_20:
 11209                           	line	42
 11210                           	
 11211  001748                     i1l18958:
 11212                           ;messages.c: 42: return (-1);
 11213  001748  0EFF               	movlw	(-1)&0ffh
 11214  00174A  D03A               	goto	i1l5474
 11215                           	
 11216  00174C                     i1l18960:
 11217  00174C  D039               	goto	i1l5474
 11218                           	line	43
 11219                           	
 11220  00174E                     i1l5473:
 11221                           	line	46
 11222                           	
 11223  00174E                     i1l18962:
 11224                           ;messages.c: 43: }
 11225                           ;messages.c: 46: qmsg->length = length;
 11226  00174E  EE20 F001          	lfsr	2,01h
 11227  001752  5015               	movf	((c:i1send_msg@qmsg)),c,w
 11228  001754  26D9               	addwf	fsr2l
 11229  001756  5016               	movf	((c:i1send_msg@qmsg+1)),c,w
 11230  001758  22DA               	addwfc	fsr2h
 11231  00175A  C00D  FFDF         	movff	(c:i1send_msg@length),indf2
 11232                           
 11233                           	line	47
 11234                           ;messages.c: 47: qmsg->msgtype = msgtype;
 11235  00175E  EE20 F002          	lfsr	2,02h
 11236  001762  5015               	movf	((c:i1send_msg@qmsg)),c,w
 11237  001764  26D9               	addwf	fsr2l
 11238  001766  5016               	movf	((c:i1send_msg@qmsg+1)),c,w
 11239  001768  22DA               	addwfc	fsr2h
 11240  00176A  C00E  FFDF         	movff	(c:i1send_msg@msgtype),indf2
 11241                           
 11242                           	line	55
 11243                           	
 11244  00176E                     i1l18964:
 11245                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
 11246  00176E  0E03               	movlw	low(03h)
 11247  001770  2415               	addwf	((c:i1send_msg@qmsg)),c,w
 11248                           	
 11249  001772  6E01               	movwf	((c:?i1_memcpy)),c
 11250  001774  0E00               	movlw	high(03h)
 11251  001776  2016               	addwfc	((c:i1send_msg@qmsg+1)),c,w
 11252  001778  6E02               	movwf	1+((c:?i1_memcpy)),c
 11253  00177A  C00F  F003         	movff	(c:i1send_msg@data),0+((c:?i1_memcpy)+02h)
 11254  00177E  C010  F004         	movff	(c:i1send_msg@data+1),1+((c:?i1_memcpy)+02h)
 11255  001782  C012  F005         	movff	(c:i1send_msg@tlength),0+((c:?i1_memcpy)+04h)
 11256  001786  C013  F006         	movff	(c:i1send_msg@tlength+1),1+((c:?i1_memcpy)+04h)
 11257  00178A  EC7A  F00E         	call	i1_memcpy	;wreg free
 11258                           	line	56
 11259                           	
 11260  00178E                     i1l18966:
 11261                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
 11262  00178E  EE20 F034          	lfsr	2,034h
 11263  001792  500B               	movf	((c:i1send_msg@qptr)),c,w
 11264  001794  26D9               	addwf	fsr2l
 11265  001796  500C               	movf	((c:i1send_msg@qptr+1)),c,w
 11266  001798  22DA               	addwfc	fsr2h
 11267  00179A  EE10 F034          	lfsr	1,034h
 11268  00179E  500B               	movf	((c:i1send_msg@qptr)),c,w
 11269  0017A0  26E1               	addwf	fsr1l
 11270  0017A2  500C               	movf	((c:i1send_msg@qptr+1)),c,w
 11271  0017A4  22E2               	addwfc	fsr1h
 11272  0017A6  50E7               	movf	indf1,w
 11273  0017A8  6E11               	movwf	(??i1_send_msg+0+0)&0ffh,c
 11274  0017AA  2811               	incf	((??i1_send_msg+0+0)),c,w
 11275  0017AC  0B03               	andlw	low(03h)
 11276  0017AE  6EDF               	movwf	indf2
 11277                           
 11278                           	line	59
 11279                           	
 11280  0017B0                     i1l18968:
 11281                           ;messages.c: 59: qmsg->full = 1;
 11282  0017B0  C015  FFD9         	movff	(c:i1send_msg@qmsg),fsr2l
 11283  0017B4  C016  FFDA         	movff	(c:i1send_msg@qmsg+1),fsr2h
 11284  0017B8  0E01               	movlw	low(01h)
 11285  0017BA  6EDF               	movwf	indf2
 11286                           	line	60
 11287                           	
 11288  0017BC                     i1l18970:
 11289                           ;messages.c: 60: return (1);
 11290  0017BC  0E01               	movlw	(01h)&0ffh
 11291  0017BE  D000               	goto	i1l5474
 11292                           	
 11293  0017C0                     i1l18972:
 11294                           	line	61
 11295                           	
 11296  0017C0                     i1l5474:
 11297  0017C0  0012               	return
 11298                           	opt stack 0
 11299                           GLOBAL	__end_ofi1_send_msg
 11300  0017C2                     	__end_ofi1_send_msg:
 11301                           	signat	i1_send_msg,89
 11302                           	global	i1_memcpy
 11303                           
 11304 ;; *************** function i1_memcpy *****************
 11305 ;; Defined at:
 11306 ;;		line 13 in file "/opt/microchip/xc8/v1.10/sources/memcpy.c"
 11307 ;; Parameters:    Size  Location     Type
 11308 ;;  memcpy          2    0[COMRAM] PTR void 
 11309 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
 11310 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
 11311 ;;  memcpy          2    2[COMRAM] PTR const void 
 11312 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 11313 ;;		 -> i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 11314 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(5), 
 11315 ;;  memcpy          2    4[COMRAM] unsigned int 
 11316 ;; Auto vars:     Size  Location     Type
 11317 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 11318 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 11319 ;;		 -> i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 11320 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(5), 
 11321 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 11322 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
 11323 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
 11324 ;; Return value:  Size  Location     Type
 11325 ;;                  2    0[COMRAM] PTR void 
 11326 ;; Registers used:
 11327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11328 ;; Tracked objects:
 11329 ;;		On entry : 0/0
 11330 ;;		On exit  : 0/0
 11331 ;;		Unchanged: 0/0
 11332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11333 ;;      Params:         6       0       0       0       0
 11334 ;;      Locals:         4       0       0       0       0
 11335 ;;      Temps:          0       0       0       0       0
 11336 ;;      Totals:        10       0       0       0       0
 11337 ;;Total ram usage:       10 bytes
 11338 ;; Hardware stack levels used:    1
 11339 ;; Hardware stack levels required when called:    6
 11340 ;; This function calls:
 11341 ;;		Nothing
 11342 ;; This function is called by:
 11343 ;;		i1_send_msg
 11344 ;; This function uses a non-reentrant model
 11345 ;;
 11346                           psect	text38,class=CODE,space=0,reloc=2
 11347                           global __ptext38
 11348  001CF4                     __ptext38:
 11349                           psect	text38
 11350                           	file	"/opt/microchip/xc8/v1.10/sources/memcpy.c"
 11351                           	line	13
 11352                           	global	__size_ofi1_memcpy
 11353  0000                     	__size_ofi1_memcpy	equ	__end_ofi1_memcpy-i1_memcpy
 11354                           	
 11355  001CF4                     i1_memcpy:
 11356                           	opt	stack 16
 11357                           	line	24
 11358                           	
 11359  001CF4                     i1l18930:
 11360  001CF4  C003  F009         	movff	(c:i1memcpy@s1),(c:i1memcpy@s)
 11361  001CF8  C004  F00A         	movff	(c:i1memcpy@s1+1),(c:i1memcpy@s+1)
 11362                           	line	25
 11363  001CFC  C001  F007         	movff	(c:i1memcpy@d1),(c:i1memcpy@d)
 11364  001D00  C002  F008         	movff	(c:i1memcpy@d1+1),(c:i1memcpy@d+1)
 11365                           	line	26
 11366  001D04  D00F               	goto	i1l18938
 11367                           	
 11368  001D06                     i1l17038:
 11369                           	line	27
 11370                           	
 11371  001D06                     i1l18932:
 11372  001D06  C009  FFD9         	movff	(c:i1memcpy@s),fsr2l
 11373  001D0A  C00A  FFDA         	movff	(c:i1memcpy@s+1),fsr2h
 11374  001D0E  C007  FFE1         	movff	(c:i1memcpy@d),fsr1l
 11375  001D12  C008  FFE2         	movff	(c:i1memcpy@d+1),fsr1h
 11376  001D16  CFDF FFE7          	movff	indf2,indf1
 11377                           	
 11378  001D1A                     i1l18934:
 11379  001D1A  4A09               	infsnz	((c:i1memcpy@s)),c
 11380  001D1C  2A0A               	incf	((c:i1memcpy@s+1)),c
 11381                           	
 11382  001D1E                     i1l18936:
 11383  001D1E  4A07               	infsnz	((c:i1memcpy@d)),c
 11384  001D20  2A08               	incf	((c:i1memcpy@d+1)),c
 11385  001D22  D000               	goto	i1l18938
 11386                           	
 11387  001D24                     i1l17037:
 11388                           	line	26
 11389                           	
 11390  001D24                     i1l18938:
 11391  001D24  0605               	decf	((c:i1memcpy@n)),c
 11392  001D26  A0D8               	btfss	status,0
 11393  001D28  0606               	decf	((c:i1memcpy@n+1)),c
 11394  001D2A  2805               	incf	((c:i1memcpy@n))&0ffh,w
 11395  001D2C  B4D8               	btfsc	status,2
 11396  001D2E  2806               	incf ((c:i1memcpy@n+1))&0ffh,w
 11397                           
 11398  001D30  A4D8               	btfss	status,2
 11399  001D32  D001               	goto	i1u186_21
 11400  001D34  D001               	goto	i1u186_20
 11401  001D36                     i1u186_21:
 11402  001D36  D7E7               	goto	i1l18932
 11403  001D38                     i1u186_20:
 11404  001D38  D000               	goto	i1l17040
 11405                           	
 11406  001D3A                     i1l17039:
 11407                           	line	32
 11408                           ;	Return value of i1_memcpy is never used
 11409                           	
 11410  001D3A                     i1l17040:
 11411  001D3A  0012               	return
 11412                           	opt stack 0
 11413                           GLOBAL	__end_ofi1_memcpy
 11414  001D3C                     	__end_ofi1_memcpy:
 11415                           	signat	i1_memcpy,90
 11416                           	global	_InterruptHandlerHigh
 11417                           
 11418 ;; *************** function _InterruptHandlerHigh *****************
 11419 ;; Defined at:
 11420 ;;		line 83 in file "../src/interrupts.c"
 11421 ;; Parameters:    Size  Location     Type
 11422 ;;		None
 11423 ;; Auto vars:     Size  Location     Type
 11424 ;;		None
 11425 ;; Return value:  Size  Location     Type
 11426 ;;		None               void
 11427 ;; Registers used:
 11428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11429 ;; Tracked objects:
 11430 ;;		On entry : 0/0
 11431 ;;		On exit  : 0/0
 11432 ;;		Unchanged: 0/0
 11433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11434 ;;      Params:         0       0       0       0       0
 11435 ;;      Locals:         0       0       0       0       0
 11436 ;;      Temps:          0      14       0       0       0
 11437 ;;      Totals:         0      14       0       0       0
 11438 ;;Total ram usage:       14 bytes
 11439 ;; Hardware stack levels used:    1
 11440 ;; Hardware stack levels required when called:    5
 11441 ;; This function calls:
 11442 ;;		_i2c_int_handler
 11443 ;;		_timer0_int_handler
 11444 ;;		_SleepIfOkay
 11445 ;; This function is called by:
 11446 ;;		Interrupt level 2
 11447 ;; This function uses a non-reentrant model
 11448 ;;
 11449                           psect	intcode,class=CODE,space=0,reloc=2
 11450                           global __pintcode
 11451  000008                     __pintcode:
 11452                           psect	intcode
 11453                           	file	"../src/interrupts.c"
 11454                           	line	83
 11455                           	global	__size_of_InterruptHandlerHigh
 11456  0000                     	__size_of_InterruptHandlerHigh	equ	__end_of_InterruptHandlerHigh-_InterruptHandlerHigh
 11457                           	
 11458  000008                     _InterruptHandlerHigh:
 11459                           	opt	stack 16
 11460  000008  CFFA F0A8          	movff	pclat+0,??_InterruptHandlerHigh+0
 11461  00000C  CFFB F0A9          	movff	pclat+1,??_InterruptHandlerHigh+1
 11462  000010  CFE9 F0AA          	movff	fsr0l+0,??_InterruptHandlerHigh+2
 11463                           	global	int_func
 11464  000014  EFE1  F00B         	goto	int_func
 11465                           psect	intcode_body,class=CODE,space=0,reloc=2
 11466                           global __pintcode_body
 11467  0017C2                     __pintcode_body:
 11468  0017C2                     int_func:
 11469  0017C2  CFEA F0AB          	movff	fsr0h+0,??_InterruptHandlerHigh+3
 11470  0017C6  CFE1 F0AC          	movff	fsr1l+0,??_InterruptHandlerHigh+4
 11471  0017CA  CFE2 F0AD          	movff	fsr1h+0,??_InterruptHandlerHigh+5
 11472  0017CE  CFD9 F0AE          	movff	fsr2l+0,??_InterruptHandlerHigh+6
 11473  0017D2  CFDA F0AF          	movff	fsr2h+0,??_InterruptHandlerHigh+7
 11474  0017D6  CFF3 F0B0          	movff	prodl+0,??_InterruptHandlerHigh+8
 11475  0017DA  CFF4 F0B1          	movff	prodh+0,??_InterruptHandlerHigh+9
 11476  0017DE  CFF6 F0B2          	movff	tblptrl+0,??_InterruptHandlerHigh+10
 11477  0017E2  CFF7 F0B3          	movff	tblptrh+0,??_InterruptHandlerHigh+11
 11478  0017E6  CFF8 F0B4          	movff	tblptru+0,??_InterruptHandlerHigh+12
 11479  0017EA  CFF5 F0B5          	movff	tablat+0,??_InterruptHandlerHigh+13
 11480                           	line	97
 11481                           	
 11482  0017EE                     i2l19036:
 11483                           ;interrupts.c: 97: if (PIR1bits.SSPIF) {
 11484                           	
 11485  0017EE  A69E               	btfss	((c:3998)),c,3	;volatile
 11486  0017F0  D001               	goto	i2u195_41
 11487  0017F2  D001               	goto	i2u195_40
 11488  0017F4                     i2u195_41:
 11489  0017F4  D004               	goto	i2l19042
 11490  0017F6                     i2u195_40:
 11491                           	line	99
 11492                           	
 11493  0017F6                     i2l19038:
 11494                           ;interrupts.c: 99: PIR1bits.SSPIF = 0;
 11495  0017F6  969E               	bcf	((c:3998)),c,3	;volatile
 11496                           	line	101
 11497                           	
 11498  0017F8                     i2l19040:
 11499                           ;interrupts.c: 101: i2c_int_handler();
 11500  0017F8  EC02  F010         	call	_i2c_int_handler	;wreg free
 11501  0017FC  D000               	goto	i2l19042
 11502                           	line	102
 11503                           	
 11504  0017FE                     i2l1820:
 11505                           	line	106
 11506                           	
 11507  0017FE                     i2l19042:
 11508                           ;interrupts.c: 102: }
 11509                           ;interrupts.c: 106: if (INTCONbits.TMR0IF) {
 11510                           	
 11511  0017FE  A4F2               	btfss	((c:4082)),c,2	;volatile
 11512  001800  D001               	goto	i2u196_41
 11513  001802  D001               	goto	i2u196_40
 11514  001804                     i2u196_41:
 11515  001804  D004               	goto	i2l19048
 11516  001806                     i2u196_40:
 11517                           	line	107
 11518                           	
 11519  001806                     i2l19044:
 11520                           ;interrupts.c: 107: INTCONbits.TMR0IF = 0;
 11521  001806  94F2               	bcf	((c:4082)),c,2	;volatile
 11522                           	line	109
 11523                           	
 11524  001808                     i2l19046:
 11525                           ;interrupts.c: 109: timer0_int_handler();
 11526  001808  EC73  F00A         	call	_timer0_int_handler	;wreg free
 11527  00180C  D000               	goto	i2l19048
 11528                           	line	110
 11529                           	
 11530  00180E                     i2l1821:
 11531                           	line	119
 11532                           	
 11533  00180E                     i2l19048:
 11534                           ;interrupts.c: 110: }
 11535                           ;interrupts.c: 119: SleepIfOkay();
 11536  00180E  ECAB  F00C         	call	_SleepIfOkay	;wreg free
 11537                           	line	120
 11538                           	
 11539  001812                     i2l1822:
 11540  001812  C0B5  FFF5         	movff	??_InterruptHandlerHigh+13,tablat+0
 11541  001816  C0B4  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru+0
 11542  00181A  C0B3  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh+0
 11543  00181E  C0B2  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl+0
 11544  001822  C0B1  FFF4         	movff	??_InterruptHandlerHigh+9,prodh+0
 11545  001826  C0B0  FFF3         	movff	??_InterruptHandlerHigh+8,prodl+0
 11546  00182A  C0AF  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h+0
 11547  00182E  C0AE  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l+0
 11548  001832  C0AD  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h+0
 11549  001836  C0AC  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l+0
 11550  00183A  C0AB  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h+0
 11551  00183E  C0AA  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l+0
 11552  001842  C0A9  FFFB         	movff	??_InterruptHandlerHigh+1,pclat+1
 11553  001846  C0A8  FFFA         	movff	??_InterruptHandlerHigh+0,pclat+0
 11554  00184A  0011               	retfie f
 11555                           	opt stack 0
 11556                           GLOBAL	__end_of_InterruptHandlerHigh
 11557  00184C                     	__end_of_InterruptHandlerHigh:
 11558                           	signat	_InterruptHandlerHigh,88
 11559                           	global	_i2c_int_handler
 11560                           
 11561 ;; *************** function _i2c_int_handler *****************
 11562 ;; Defined at:
 11563 ;;		line 168 in file "../src/my_i2c.c"
 11564 ;; Parameters:    Size  Location     Type
 11565 ;;		None
 11566 ;; Auto vars:     Size  Location     Type
 11567 ;;		None
 11568 ;; Return value:  Size  Location     Type
 11569 ;;		None               void
 11570 ;; Registers used:
 11571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11572 ;; Tracked objects:
 11573 ;;		On entry : 0/0
 11574 ;;		On exit  : 0/0
 11575 ;;		Unchanged: 0/0
 11576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11577 ;;      Params:         0       0       0       0       0
 11578 ;;      Locals:         0       0       0       0       0
 11579 ;;      Temps:          0       0       0       0       0
 11580 ;;      Totals:         0       0       0       0       0
 11581 ;;Total ram usage:        0 bytes
 11582 ;; Hardware stack levels used:    1
 11583 ;; Hardware stack levels required when called:    4
 11584 ;; This function calls:
 11585 ;;		_i2c_slave_int_handler
 11586 ;;		_i2c_master_int_handler
 11587 ;; This function is called by:
 11588 ;;		_InterruptHandlerHigh
 11589 ;; This function uses a non-reentrant model
 11590 ;;
 11591                           psect	text40,class=CODE,space=0,reloc=2
 11592                           global __ptext40
 11593  002004                     __ptext40:
 11594                           psect	text40
 11595                           	file	"../src/my_i2c.c"
 11596                           	line	168
 11597                           	global	__size_of_i2c_int_handler
 11598  0000                     	__size_of_i2c_int_handler	equ	__end_of_i2c_int_handler-_i2c_int_handler
 11599                           	
 11600  002004                     _i2c_int_handler:
 11601                           	opt	stack 16
 11602                           	line	169
 11603                           	
 11604  002004                     i2l19050:
 11605                           ;my_i2c.c: 169: switch(i2cMode){
 11606  002004  D007               	goto	i2l19056
 11607                           	line	170
 11608                           ;my_i2c.c: 170: case 1:{
 11609                           	
 11610  002006                     i2l7370:
 11611                           	line	171
 11612                           	
 11613  002006                     i2l19052:
 11614                           ;my_i2c.c: 171: i2c_slave_int_handler();
 11615  002006  EC6B  F000         	call	_i2c_slave_int_handler	;wreg free
 11616                           	line	172
 11617                           ;my_i2c.c: 172: break;
 11618  00200A  D00E               	goto	i2l7374
 11619                           	line	174
 11620                           ;my_i2c.c: 173: }
 11621                           ;my_i2c.c: 174: case 2:{
 11622                           	
 11623  00200C                     i2l7372:
 11624                           	line	175
 11625                           	
 11626  00200C                     i2l19054:
 11627                           ;my_i2c.c: 175: i2c_master_int_handler();
 11628  00200C  ECCB  F005         	call	_i2c_master_int_handler	;wreg free
 11629                           	line	176
 11630                           ;my_i2c.c: 176: break;
 11631  002010  D00B               	goto	i2l7374
 11632                           	line	178
 11633                           ;my_i2c.c: 177: }
 11634                           ;my_i2c.c: 178: default:{
 11635                           	
 11636  002012                     i2l7373:
 11637                           	line	181
 11638                           ;my_i2c.c: 180: }
 11639                           ;my_i2c.c: 181: }
 11640  002012  D00A               	goto	i2l7374
 11641                           	line	169
 11642                           	
 11643  002014                     i2l7369:
 11644                           	
 11645  002014                     i2l19056:
 11646  002014  0100               	movlb	0	; () banked
 11647  002016  0100               	movlb	0	; () banked
 11648  002018  51C7               	movf	((_i2cMode))&0ffh,w
 11649                           	; Switch size 1, requested type "space"
 11650                           ; Number of cases is 2, Range of values is 1 to 2
 11651                           ; switch strategies available:
 11652                           ; Name         Instructions Cycles
 11653                           ; simple_byte            7     4 (average)
 11654                           ;	Chosen strategy is simple_byte
 11655                           
 11656  00201A  0A01               	xorlw	1^0	; case 1
 11657  00201C  B4D8               	skipnz
 11658  00201E  D7F3               	goto	i2l19052
 11659  002020  0A03               	xorlw	2^1	; case 2
 11660  002022  B4D8               	skipnz
 11661  002024  D7F3               	goto	i2l19054
 11662  002026  D000               	goto	i2l7374
 11663                           
 11664                           	line	181
 11665                           	
 11666  002028                     i2l7371:; BSR set to: 0
 11667                           
 11668                           	line	182
 11669                           	
 11670  002028                     i2l7374:
 11671  002028  0012               	return
 11672                           	opt stack 0
 11673                           GLOBAL	__end_of_i2c_int_handler
 11674  00202A                     	__end_of_i2c_int_handler:
 11675                           	signat	_i2c_int_handler,88
 11676                           	global	_timer0_int_handler
 11677                           
 11678 ;; *************** function _timer0_int_handler *****************
 11679 ;; Defined at:
 11680 ;;		line 19 in file "../src/user_interrupts.c"
 11681 ;; Parameters:    Size  Location     Type
 11682 ;;		None
 11683 ;; Auto vars:     Size  Location     Type
 11684 ;;  val             2   18[BANK0 ] unsigned int 
 11685 ;;  length          2   16[BANK0 ] int 
 11686 ;;  msgtype         2   14[BANK0 ] int 
 11687 ;; Return value:  Size  Location     Type
 11688 ;;		None               void
 11689 ;; Registers used:
 11690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11691 ;; Tracked objects:
 11692 ;;		On entry : 0/0
 11693 ;;		On exit  : 0/0
 11694 ;;		Unchanged: 0/0
 11695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11696 ;;      Params:         0       0       0       0       0
 11697 ;;      Locals:         0       6       0       0       0
 11698 ;;      Temps:          0       2       0       0       0
 11699 ;;      Totals:         0       8       0       0       0
 11700 ;;Total ram usage:        8 bytes
 11701 ;; Hardware stack levels used:    1
 11702 ;; Hardware stack levels required when called:    3
 11703 ;; This function calls:
 11704 ;;		_WriteTimer0
 11705 ;;		_FromMainHigh_recvmsg
 11706 ;;		_ToMainHigh_sendmsg
 11707 ;; This function is called by:
 11708 ;;		_InterruptHandlerHigh
 11709 ;; This function uses a non-reentrant model
 11710 ;;
 11711                           psect	text41,class=CODE,space=0,reloc=2
 11712                           global __ptext41
 11713  0014E6                     __ptext41:
 11714                           psect	text41
 11715                           	file	"../src/user_interrupts.c"
 11716                           	line	19
 11717                           	global	__size_of_timer0_int_handler
 11718  0000                     	__size_of_timer0_int_handler	equ	__end_of_timer0_int_handler-_timer0_int_handler
 11719                           	
 11720  0014E6                     _timer0_int_handler:
 11721                           	opt	stack 17
 11722                           	line	24
 11723                           	
 11724  0014E6                     i2l19058:
 11725                           ;user_interrupts.c: 20: unsigned int val;
 11726                           ;user_interrupts.c: 21: int length, msgtype;
 11727                           ;user_interrupts.c: 24: LATBbits.LATB0 = !LATBbits.LATB0;
 11728                           	
 11729  0014E6  A08A               	btfss	((c:3978)),c,0	;volatile
 11730  0014E8  D001               	goto	i2u197_41
 11731  0014EA  D002               	goto	i2u197_40
 11732  0014EC                     i2u197_41:
 11733  0014EC  0E01               	movlw	1
 11734  0014EE  D001               	goto	i2u197_46
 11735  0014F0                     i2u197_40:
 11736  0014F0  0E00               	movlw	0
 11737  0014F2                     i2u197_46:
 11738  0014F2  0100               	movlb	0	; () banked
 11739  0014F4  6F8C               	movwf	(??_timer0_int_handler+0+0)&0ffh
 11740  0014F6  508A               	movf	((c:3978)),c,w	;volatile
 11741  0014F8  0100               	movlb	0	; () banked
 11742  0014FA  198C               	xorwf	((??_timer0_int_handler+0+0))&0ffh,w
 11743  0014FC  0BFE               	andlw	not ((1<<1)-1)
 11744  0014FE  198C               	xorwf	((??_timer0_int_handler+0+0))&0ffh,w
 11745  001500  6E8A               	movwf	((c:3978)),c	;volatile
 11746                           	line	26
 11747                           	
 11748  001502                     i2l19060:; BSR set to: 0
 11749                           
 11750                           ;user_interrupts.c: 26: WriteTimer0(0);
 11751  001502  0E00               	movlw	high(0)
 11752  001504  6E35               	movwf	((c:?_WriteTimer0+1)),c
 11753  001506  0E00               	movlw	low(0)
 11754  001508  6E34               	movwf	((c:?_WriteTimer0)),c
 11755  00150A  EC8D  F010         	call	_WriteTimer0	;wreg free
 11756                           	line	28
 11757                           	
 11758  00150E                     i2l19062:
 11759                           ;user_interrupts.c: 28: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)(uns
                                 igned int)&msgtype, (void *) &val);
 11760  00150E  0100               	movlb	0	; () banked
 11761  001510  6F8C               	movwf	(??_timer0_int_handler+0+0)&0ffh
 11762  001512  0E02               	movlw	low(02h)
 11763  001514  0100               	movlb	0	; () banked
 11764  001516  0100               	movlb	0	; () banked
 11765  001518  6F87               	movwf	((?_FromMainHigh_recvmsg))&0ffh
 11766  00151A  0100               	movlb	0	; () banked
 11767  00151C  518C               	movf	(??_timer0_int_handler+0+0)&0ffh,w
 11768  00151E  0100               	movlb	0	; () banked
 11769  001520  0E00               	movlw	high(timer0_int_handler@msgtype)
 11770  001522  0100               	movlb	0	; () banked
 11771  001524  0100               	movlb	0	; () banked
 11772  001526  6F89               	movwf	(1+(?_FromMainHigh_recvmsg+01h))&0ffh
 11773  001528  0100               	movlb	0	; () banked
 11774  00152A  0E8E               	movlw	low(timer0_int_handler@msgtype)
 11775  00152C  0100               	movlb	0	; () banked
 11776  00152E  6F88               	movwf	(0+(?_FromMainHigh_recvmsg+01h))&0ffh
 11777  001530  0100               	movlb	0	; () banked
 11778  001532  0E00               	movlw	high(timer0_int_handler@val)
 11779  001534  0100               	movlb	0	; () banked
 11780  001536  0100               	movlb	0	; () banked
 11781  001538  6F8B               	movwf	(1+(?_FromMainHigh_recvmsg+03h))&0ffh
 11782  00153A  0100               	movlb	0	; () banked
 11783  00153C  0E92               	movlw	low(timer0_int_handler@val)
 11784  00153E  0100               	movlb	0	; () banked
 11785  001540  6F8A               	movwf	(0+(?_FromMainHigh_recvmsg+03h))&0ffh
 11786  001542  0100               	movlb	0	; () banked
 11787  001544  ECDA  F00F         	call	_FromMainHigh_recvmsg	;wreg free
 11788  001548  0100               	movlb	0	; () banked
 11789  00154A  0100               	movlb	0	; () banked
 11790  00154C  6F90               	movwf	((timer0_int_handler@length))&0ffh
 11791  00154E  0100               	movlb	0	; () banked
 11792  001550  6B91               	clrf	((timer0_int_handler@length+1))&0ffh
 11793  001552  0100               	movlb	0	; () banked
 11794  001554  BF90               	btfsc	((timer0_int_handler@length))&0ffh,7
 11795  001556  0791               	decf	((timer0_int_handler@length+1))&0ffh
 11796                           	line	29
 11797                           	
 11798  001558                     i2l19064:; BSR set to: 0
 11799                           
 11800                           ;user_interrupts.c: 29: if (length == sizeof (val)) {
 11801  001558  0100               	movlb	0	; () banked
 11802  00155A  0100               	movlb	0	; () banked
 11803  00155C  5190               	movf	((timer0_int_handler@length))&0ffh,w
 11804  00155E  0A02               	xorlw	2
 11805  001560  1191               	iorwf ((timer0_int_handler@length+1))&0ffh,w
 11806                           
 11807  001562  A4D8               	btfss	status,2
 11808  001564  D001               	goto	i2u198_41
 11809  001566  D001               	goto	i2u198_40
 11810  001568                     i2u198_41:
 11811  001568  D01D               	goto	i2l16418
 11812  00156A                     i2u198_40:
 11813                           	line	30
 11814                           	
 11815  00156A                     i2l19066:; BSR set to: 0
 11816                           
 11817                           ;user_interrupts.c: 30: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
 11818  00156A  0100               	movlb	0	; () banked
 11819  00156C  6F8C               	movwf	(??_timer0_int_handler+0+0)&0ffh
 11820  00156E  0E02               	movlw	low(02h)
 11821  001570  0100               	movlb	0	; () banked
 11822  001572  0100               	movlb	0	; () banked
 11823  001574  6F85               	movwf	((?_ToMainHigh_sendmsg))&0ffh
 11824  001576  0100               	movlb	0	; () banked
 11825  001578  518C               	movf	(??_timer0_int_handler+0+0)&0ffh,w
 11826  00157A  0100               	movlb	0	; () banked
 11827  00157C  6F8D               	movwf	(??_timer0_int_handler+1+0)&0ffh
 11828  00157E  0E0A               	movlw	low(0Ah)
 11829  001580  0100               	movlb	0	; () banked
 11830  001582  0100               	movlb	0	; () banked
 11831  001584  6F86               	movwf	(0+(?_ToMainHigh_sendmsg+01h))&0ffh
 11832  001586  0100               	movlb	0	; () banked
 11833  001588  518D               	movf	(??_timer0_int_handler+1+0)&0ffh,w
 11834  00158A  0100               	movlb	0	; () banked
 11835  00158C  0E00               	movlw	high(timer0_int_handler@val)
 11836  00158E  0100               	movlb	0	; () banked
 11837  001590  0100               	movlb	0	; () banked
 11838  001592  6F88               	movwf	(1+(?_ToMainHigh_sendmsg+02h))&0ffh
 11839  001594  0100               	movlb	0	; () banked
 11840  001596  0E92               	movlw	low(timer0_int_handler@val)
 11841  001598  0100               	movlb	0	; () banked
 11842  00159A  6F87               	movwf	(0+(?_ToMainHigh_sendmsg+02h))&0ffh
 11843  00159C  0100               	movlb	0	; () banked
 11844  00159E  EC3A  F010         	call	_ToMainHigh_sendmsg	;wreg free
 11845  0015A2  D000               	goto	i2l16418
 11846                           	line	31
 11847                           	
 11848  0015A4                     i2l16417:
 11849                           	line	32
 11850                           	
 11851  0015A4                     i2l16418:
 11852  0015A4  0012               	return
 11853                           	opt stack 0
 11854                           GLOBAL	__end_of_timer0_int_handler
 11855  0015A6                     	__end_of_timer0_int_handler:
 11856                           	signat	_timer0_int_handler,88
 11857                           	global	_SleepIfOkay
 11858                           
 11859 ;; *************** function _SleepIfOkay *****************
 11860 ;; Defined at:
 11861 ;;		line 228 in file "../src/messages.c"
 11862 ;; Parameters:    Size  Location     Type
 11863 ;;		None
 11864 ;; Auto vars:     Size  Location     Type
 11865 ;;		None
 11866 ;; Return value:  Size  Location     Type
 11867 ;;		None               void
 11868 ;; Registers used:
 11869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11870 ;; Tracked objects:
 11871 ;;		On entry : 0/0
 11872 ;;		On exit  : 0/0
 11873 ;;		Unchanged: 0/0
 11874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11875 ;;      Params:         0       0       0       0       0
 11876 ;;      Locals:         0       0       0       0       0
 11877 ;;      Temps:          0       0       0       0       0
 11878 ;;      Totals:         0       0       0       0       0
 11879 ;;Total ram usage:        0 bytes
 11880 ;; Hardware stack levels used:    1
 11881 ;; Hardware stack levels required when called:    2
 11882 ;; This function calls:
 11883 ;;		i2_in_low_int
 11884 ;;		i2_in_high_int
 11885 ;;		i2_check_msg
 11886 ;;		_enter_sleep_mode
 11887 ;; This function is called by:
 11888 ;;		_InterruptHandlerHigh
 11889 ;; This function uses a non-reentrant model
 11890 ;;
 11891                           psect	text42,class=CODE,space=0,reloc=2
 11892                           global __ptext42
 11893  001956                     __ptext42:
 11894                           psect	text42
 11895                           	file	"../src/messages.c"
 11896                           	line	228
 11897                           	global	__size_of_SleepIfOkay
 11898  0000                     	__size_of_SleepIfOkay	equ	__end_of_SleepIfOkay-_SleepIfOkay
 11899                           	
 11900  001956                     _SleepIfOkay:
 11901                           	opt	stack 18
 11902                           	line	230
 11903                           	
 11904  001956                     i2l18234:
 11905                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
 11906  001956  6648               	tstfsz	((c:_MQ_Main_Willing_to_block)),c
 11907  001958  D001               	goto	i2u110_41
 11908  00195A  D001               	goto	i2u110_40
 11909  00195C                     i2u110_41:
 11910  00195C  D002               	goto	i2l18238
 11911  00195E                     i2u110_40:
 11912  00195E  D035               	goto	i2l5527
 11913                           	line	231
 11914                           	
 11915  001960                     i2l18236:
 11916                           ;messages.c: 231: return;
 11917  001960  D034               	goto	i2l5527
 11918                           	line	232
 11919                           	
 11920  001962                     i2l5526:
 11921                           	line	235
 11922                           	
 11923  001962                     i2l18238:
 11924                           ;messages.c: 232: }
 11925                           ;messages.c: 235: if (in_low_int()) {
 11926  001962  ECC2  F00E         	call	i2_in_low_int	;wreg free
 11927  001966  5037               	movf	(1+?i2_in_low_int),c,w
 11928  001968  1036               	iorwf (0+?i2_in_low_int),c,w
 11929                           
 11930  00196A  B4D8               	btfsc	status,2
 11931  00196C  D001               	goto	i2u111_41
 11932  00196E  D001               	goto	i2u111_40
 11933  001970                     i2u111_41:
 11934  001970  D002               	goto	i2l18242
 11935  001972                     i2u111_40:
 11936  001972  D02B               	goto	i2l5527
 11937                           	line	236
 11938                           	
 11939  001974                     i2l18240:
 11940                           ;messages.c: 236: return;
 11941  001974  D02A               	goto	i2l5527
 11942                           	line	237
 11943                           	
 11944  001976                     i2l5528:
 11945                           	line	240
 11946                           	
 11947  001976                     i2l18242:
 11948                           ;messages.c: 237: }
 11949                           ;messages.c: 240: if (!in_high_int()) {
 11950  001976  EC96  F010         	call	i2_in_high_int	;wreg free
 11951  00197A  5035               	movf	(1+?i2_in_high_int),c,w
 11952  00197C  1034               	iorwf (0+?i2_in_high_int),c,w
 11953                           
 11954  00197E  A4D8               	btfss	status,2
 11955  001980  D001               	goto	i2u112_41
 11956  001982  D001               	goto	i2u112_40
 11957  001984                     i2u112_41:
 11958  001984  D002               	goto	i2l18246
 11959  001986                     i2u112_40:
 11960  001986  D021               	goto	i2l5527
 11961                           	line	241
 11962                           	
 11963  001988                     i2l18244:
 11964                           ;messages.c: 241: return;
 11965  001988  D020               	goto	i2l5527
 11966                           	line	242
 11967                           	
 11968  00198A                     i2l5529:
 11969                           	line	247
 11970                           	
 11971  00198A                     i2l18246:
 11972                           ;messages.c: 242: }
 11973                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
 11974  00198A  0101               	movlb	1	; () banked
 11975  00198C  0E01               	movlw	high(_ToMainHigh_MQ)
 11976  00198E  6E35               	movwf	((c:?i2_check_msg+1)),c
 11977  001990  0101               	movlb	1	; () banked
 11978  001992  0E36               	movlw	low(_ToMainHigh_MQ)
 11979  001994  6E34               	movwf	((c:?i2_check_msg)),c
 11980  001996  EC15  F010         	call	i2_check_msg	;wreg free
 11981  00199A  0900               	iorlw	0
 11982  00199C  B4D8               	btfsc	status,2
 11983  00199E  D001               	goto	i2u113_41
 11984  0019A0  D001               	goto	i2u113_40
 11985  0019A2                     i2u113_41:
 11986  0019A2  D002               	goto	i2l18250
 11987  0019A4                     i2u113_40:
 11988  0019A4  D012               	goto	i2l5527
 11989                           	line	248
 11990                           	
 11991  0019A6                     i2l18248:
 11992                           ;messages.c: 248: return;
 11993  0019A6  D011               	goto	i2l5527
 11994                           	line	249
 11995                           	
 11996  0019A8                     i2l5530:
 11997                           	line	250
 11998                           	
 11999  0019A8                     i2l18250:
 12000                           ;messages.c: 249: }
 12001                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
 12002  0019A8  0101               	movlb	1	; () banked
 12003  0019AA  0E01               	movlw	high(_ToMainLow_MQ)
 12004  0019AC  6E35               	movwf	((c:?i2_check_msg+1)),c
 12005  0019AE  0101               	movlb	1	; () banked
 12006  0019B0  0E6C               	movlw	low(_ToMainLow_MQ)
 12007  0019B2  6E34               	movwf	((c:?i2_check_msg)),c
 12008  0019B4  EC15  F010         	call	i2_check_msg	;wreg free
 12009  0019B8  0900               	iorlw	0
 12010  0019BA  B4D8               	btfsc	status,2
 12011  0019BC  D001               	goto	i2u114_41
 12012  0019BE  D001               	goto	i2u114_40
 12013  0019C0                     i2u114_41:
 12014  0019C0  D002               	goto	i2l18254
 12015  0019C2                     i2u114_40:
 12016  0019C2  D003               	goto	i2l5527
 12017                           	line	251
 12018                           	
 12019  0019C4                     i2l18252:
 12020                           ;messages.c: 251: return;
 12021  0019C4  D002               	goto	i2l5527
 12022                           	line	252
 12023                           	
 12024  0019C6                     i2l5531:
 12025                           	line	253
 12026                           	
 12027  0019C6                     i2l18254:
 12028                           ;messages.c: 252: }
 12029                           ;messages.c: 253: enter_sleep_mode();
 12030  0019C6  ECAC  F010         	call	_enter_sleep_mode	;wreg free
 12031                           	line	254
 12032                           	
 12033  0019CA                     i2l5527:
 12034  0019CA  0012               	return
 12035                           	opt stack 0
 12036                           GLOBAL	__end_of_SleepIfOkay
 12037  0019CC                     	__end_of_SleepIfOkay:
 12038                           	signat	_SleepIfOkay,88
 12039                           	global	_FromMainHigh_recvmsg
 12040                           
 12041 ;; *************** function _FromMainHigh_recvmsg *****************
 12042 ;; Defined at:
 12043 ;;		line 183 in file "../src/messages.c"
 12044 ;; Parameters:    Size  Location     Type
 12045 ;;  maxlength       1    7[BANK0 ] unsigned char 
 12046 ;;  msgtype         2    8[BANK0 ] PTR unsigned char 
 12047 ;;		 -> RAM(1023), 
 12048 ;;  data            2   10[BANK0 ] PTR void 
 12049 ;;		 -> timer0_int_handler@val(2), 
 12050 ;; Auto vars:     Size  Location     Type
 12051 ;;		None
 12052 ;; Return value:  Size  Location     Type
 12053 ;;                  1    wreg      char 
 12054 ;; Registers used:
 12055 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12056 ;; Tracked objects:
 12057 ;;		On entry : 0/0
 12058 ;;		On exit  : 0/0
 12059 ;;		Unchanged: 0/0
 12060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12061 ;;      Params:         0       5       0       0       0
 12062 ;;      Locals:         0       0       0       0       0
 12063 ;;      Temps:          0       0       0       0       0
 12064 ;;      Totals:         0       5       0       0       0
 12065 ;;Total ram usage:        5 bytes
 12066 ;; Hardware stack levels used:    1
 12067 ;; Hardware stack levels required when called:    2
 12068 ;; This function calls:
 12069 ;;		i2_recv_msg
 12070 ;; This function is called by:
 12071 ;;		_timer0_int_handler
 12072 ;; This function uses a non-reentrant model
 12073 ;;
 12074                           psect	text43,class=CODE,space=0,reloc=2
 12075                           global __ptext43
 12076  001FB4                     __ptext43:
 12077                           psect	text43
 12078                           	file	"../src/messages.c"
 12079                           	line	183
 12080                           	global	__size_of_FromMainHigh_recvmsg
 12081  0000                     	__size_of_FromMainHigh_recvmsg	equ	__end_of_FromMainHigh_recvmsg-_FromMainHigh_recvmsg
 12082                           	
 12083  001FB4                     _FromMainHigh_recvmsg:
 12084                           	opt	stack 17
 12085                           	line	189
 12086                           	
 12087  001FB4                     i2l19240:
 12088                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
 12089  001FB4  0102               	movlb	2	; () banked
 12090  001FB6  0E02               	movlw	high(_FromMainHigh_MQ)
 12091  001FB8  6E3F               	movwf	((c:?i2_recv_msg+1)),c
 12092  001FBA  0102               	movlb	2	; () banked
 12093  001FBC  0E00               	movlw	low(_FromMainHigh_MQ)
 12094  001FBE  6E3E               	movwf	((c:?i2_recv_msg)),c
 12095  001FC0  C087  F040         	movff	(FromMainHigh_recvmsg@maxlength),0+((c:?i2_recv_msg)+02h)
 12096  001FC4  C088  F041         	movff	(FromMainHigh_recvmsg@msgtype),0+((c:?i2_recv_msg)+03h)
 12097  001FC8  C089  F042         	movff	(FromMainHigh_recvmsg@msgtype+1),1+((c:?i2_recv_msg)+03h)
 12098  001FCC  C08A  F043         	movff	(FromMainHigh_recvmsg@data),0+((c:?i2_recv_msg)+05h)
 12099  001FD0  C08B  F044         	movff	(FromMainHigh_recvmsg@data+1),1+((c:?i2_recv_msg)+05h)
 12100  001FD4  EC1D  F007         	call	i2_recv_msg	;wreg free
 12101  001FD8  D000               	goto	i2l5512
 12102                           	
 12103  001FDA                     i2l19242:
 12104                           	line	190
 12105                           	
 12106  001FDA                     i2l5512:
 12107  001FDA  0012               	return
 12108                           	opt stack 0
 12109                           GLOBAL	__end_of_FromMainHigh_recvmsg
 12110  001FDC                     	__end_of_FromMainHigh_recvmsg:
 12111                           	signat	_FromMainHigh_recvmsg,12409
 12112                           	global	_enter_sleep_mode
 12113                           
 12114 ;; *************** function _enter_sleep_mode *****************
 12115 ;; Defined at:
 12116 ;;		line 202 in file "../src/messages.c"
 12117 ;; Parameters:    Size  Location     Type
 12118 ;;		None
 12119 ;; Auto vars:     Size  Location     Type
 12120 ;;		None
 12121 ;; Return value:  Size  Location     Type
 12122 ;;		None               void
 12123 ;; Registers used:
 12124 ;;		None
 12125 ;; Tracked objects:
 12126 ;;		On entry : 0/0
 12127 ;;		On exit  : 0/0
 12128 ;;		Unchanged: 0/0
 12129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12130 ;;      Params:         0       0       0       0       0
 12131 ;;      Locals:         0       0       0       0       0
 12132 ;;      Temps:          0       0       0       0       0
 12133 ;;      Totals:         0       0       0       0       0
 12134 ;;Total ram usage:        0 bytes
 12135 ;; Hardware stack levels used:    1
 12136 ;; This function calls:
 12137 ;;		Nothing
 12138 ;; This function is called by:
 12139 ;;		_SleepIfOkay
 12140 ;; This function uses a non-reentrant model
 12141 ;;
 12142                           psect	text44,class=CODE,space=0,reloc=2
 12143                           global __ptext44
 12144  002158                     __ptext44:
 12145                           psect	text44
 12146                           	file	"../src/messages.c"
 12147                           	line	202
 12148                           	global	__size_of_enter_sleep_mode
 12149  0000                     	__size_of_enter_sleep_mode	equ	__end_of_enter_sleep_mode-_enter_sleep_mode
 12150                           	
 12151  002158                     _enter_sleep_mode:
 12152                           	opt	stack 19
 12153                           	line	204
 12154                           	
 12155  002158                     i2l18568:
 12156                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
 12157  002158  8ED3               	bsf	((c:4051)),c,7	;volatile
 12158                           	line	213
 12159                           # 213 "../src/messages.c"
 12160  00215A  0003               SLEEP ;# 
 12161                           	line	215
 12162                           # 215 "../src/messages.c"
 12163                           # 214 ;# 
 12164                           psect	text44
 12165                           	line	218
 12166                           	
 12167  00215C                     i2l5520:
 12168  00215C  0012               	return
 12169                           	opt stack 0
 12170                           GLOBAL	__end_of_enter_sleep_mode
 12171  00215E                     	__end_of_enter_sleep_mode:
 12172                           	signat	_enter_sleep_mode,88
 12173                           	global	_i2c_slave_int_handler
 12174                           
 12175 ;; *************** function _i2c_slave_int_handler *****************
 12176 ;; Defined at:
 12177 ;;		line 246 in file "../src/my_i2c.c"
 12178 ;; Parameters:    Size  Location     Type
 12179 ;;		None
 12180 ;; Auto vars:     Size  Location     Type
 12181 ;;  empty           4   24[BANK0 ] unsigned char [4]
 12182 ;;  data           10   14[BANK0 ] unsigned char [10]
 12183 ;;  length          2   33[BANK0 ] int 
 12184 ;;  msgtype         1   36[BANK0 ] unsigned char 
 12185 ;;  error_buf       3   28[BANK0 ] unsigned char [3]
 12186 ;;  data_read       1   39[BANK0 ] unsigned char 
 12187 ;;  msg_ready       1   38[BANK0 ] unsigned char 
 12188 ;;  msg_to_send     1   37[BANK0 ] unsigned char 
 12189 ;;  i2c_data        1   35[BANK0 ] unsigned char 
 12190 ;;  overrun_erro    1   32[BANK0 ] unsigned char 
 12191 ;;  data_written    1   31[BANK0 ] unsigned char 
 12192 ;; Return value:  Size  Location     Type
 12193 ;;		None               void
 12194 ;; Registers used:
 12195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12196 ;; Tracked objects:
 12197 ;;		On entry : 0/0
 12198 ;;		On exit  : 0/0
 12199 ;;		Unchanged: 0/0
 12200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12201 ;;      Params:         0       0       0       0       0
 12202 ;;      Locals:         0      26       0       0       0
 12203 ;;      Temps:          0       2       0       0       0
 12204 ;;      Totals:         0      28       0       0       0
 12205 ;;Total ram usage:       28 bytes
 12206 ;; Hardware stack levels used:    1
 12207 ;; Hardware stack levels required when called:    3
 12208 ;; This function calls:
 12209 ;;		_handle_start
 12210 ;;		_FromMainLow_recvmsg
 12211 ;;		_start_i2c_slave_reply
 12212 ;;		_ToMainHigh_sendmsg
 12213 ;; This function is called by:
 12214 ;;		_i2c_int_handler
 12215 ;; This function uses a non-reentrant model
 12216 ;;
 12217                           psect	text45,class=CODE,space=0,reloc=2
 12218                           global __ptext45
 12219  0000D6                     __ptext45:
 12220                           psect	text45
 12221                           	file	"../src/my_i2c.c"
 12222                           	line	246
 12223                           	global	__size_of_i2c_slave_int_handler
 12224  0000                     	__size_of_i2c_slave_int_handler	equ	__end_of_i2c_slave_int_handler-_i2c_slave_int_handl
                                 er
 12225                           	
 12226  0000D6                     _i2c_slave_int_handler:
 12227                           	opt	stack 16
 12228                           	line	248
 12229                           	
 12230  0000D6                     i2l19264:
 12231                           ;my_i2c.c: 247: unsigned char i2c_data;
 12232                           ;my_i2c.c: 248: unsigned char data_read = 0;
 12233  0000D6  0100               	movlb	0	; () banked
 12234  0000D8  6F8C               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh
 12235  0000DA  0E00               	movlw	low(0)
 12236  0000DC  0100               	movlb	0	; () banked
 12237  0000DE  0100               	movlb	0	; () banked
 12238  0000E0  6FA7               	movwf	((i2c_slave_int_handler@data_read))&0ffh
 12239  0000E2  0100               	movlb	0	; () banked
 12240  0000E4  518C               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,w
 12241                           	line	249
 12242                           ;my_i2c.c: 249: unsigned char data_written = 0;
 12243  0000E6  0100               	movlb	0	; () banked
 12244  0000E8  6F8C               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh
 12245  0000EA  0E00               	movlw	low(0)
 12246  0000EC  0100               	movlb	0	; () banked
 12247  0000EE  0100               	movlb	0	; () banked
 12248  0000F0  6F9F               	movwf	((i2c_slave_int_handler@data_written))&0ffh
 12249  0000F2  0100               	movlb	0	; () banked
 12250  0000F4  518C               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,w
 12251                           	line	250
 12252                           ;my_i2c.c: 250: unsigned char msg_ready = 0;
 12253  0000F6  0100               	movlb	0	; () banked
 12254  0000F8  6F8C               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh
 12255  0000FA  0E00               	movlw	low(0)
 12256  0000FC  0100               	movlb	0	; () banked
 12257  0000FE  0100               	movlb	0	; () banked
 12258  000100  6FA6               	movwf	((i2c_slave_int_handler@msg_ready))&0ffh
 12259  000102  0100               	movlb	0	; () banked
 12260  000104  518C               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,w
 12261                           	line	251
 12262                           ;my_i2c.c: 251: unsigned char msg_to_send = 0;
 12263  000106  0100               	movlb	0	; () banked
 12264  000108  6F8C               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh
 12265  00010A  0E00               	movlw	low(0)
 12266  00010C  0100               	movlb	0	; () banked
 12267  00010E  0100               	movlb	0	; () banked
 12268  000110  6FA5               	movwf	((i2c_slave_int_handler@msg_to_send))&0ffh
 12269  000112  0100               	movlb	0	; () banked
 12270  000114  518C               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,w
 12271                           	line	252
 12272                           ;my_i2c.c: 252: unsigned char overrun_error = 0;
 12273  000116  0100               	movlb	0	; () banked
 12274  000118  6F8C               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh
 12275  00011A  0E00               	movlw	low(0)
 12276  00011C  0100               	movlb	0	; () banked
 12277  00011E  0100               	movlb	0	; () banked
 12278  000120  6FA0               	movwf	((i2c_slave_int_handler@overrun_error))&0ffh
 12279  000122  0100               	movlb	0	; () banked
 12280  000124  518C               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,w
 12281                           	line	256
 12282                           	
 12283  000126                     i2l19266:; BSR set to: 0
 12284                           
 12285                           ;my_i2c.c: 253: unsigned char error_buf[3];
 12286                           ;my_i2c.c: 256: if (SSPCON1bits.SSPOV == 1) {
 12287                           	
 12288  000126  ACC6               	btfss	((c:4038)),c,6	;volatile
 12289  000128  D001               	goto	i2u207_41
 12290  00012A  D001               	goto	i2u207_40
 12291  00012C                     i2u207_41:
 12292  00012C  D02A               	goto	i2l19278
 12293  00012E                     i2u207_40:
 12294                           	line	257
 12295                           	
 12296  00012E                     i2l19268:; BSR set to: 0
 12297                           
 12298                           ;my_i2c.c: 257: SSPCON1bits.SSPOV = 0;
 12299  00012E  9CC6               	bcf	((c:4038)),c,6	;volatile
 12300                           	line	261
 12301                           	
 12302  000130                     i2l19270:; BSR set to: 0
 12303                           
 12304                           ;my_i2c.c: 261: ic_ptr->status = 0x5;
 12305  000130  0100               	movlb	0	; () banked
 12306  000132  EE20 F00C          	lfsr	2,0Ch
 12307  000136  0100               	movlb	0	; () banked
 12308  000138  51C4               	movf	((_ic_ptr))&0ffh,w
 12309  00013A  26D9               	addwf	fsr2l
 12310  00013C  0100               	movlb	0	; () banked
 12311  00013E  51C5               	movf	((_ic_ptr+1))&0ffh,w
 12312  000140  22DA               	addwfc	fsr2h
 12313  000142  0E05               	movlw	low(05h)
 12314  000144  6EDF               	movwf	indf2
 12315                           	line	262
 12316                           	
 12317  000146                     i2l19272:; BSR set to: 0
 12318                           
 12319                           ;my_i2c.c: 262: overrun_error = 1;
 12320  000146  0100               	movlb	0	; () banked
 12321  000148  6F8C               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh
 12322  00014A  0E01               	movlw	low(01h)
 12323  00014C  0100               	movlb	0	; () banked
 12324  00014E  0100               	movlb	0	; () banked
 12325  000150  6FA0               	movwf	((i2c_slave_int_handler@overrun_error))&0ffh
 12326  000152  0100               	movlb	0	; () banked
 12327  000154  518C               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,w
 12328                           	line	263
 12329                           	
 12330  000156                     i2l19274:; BSR set to: 0
 12331                           
 12332                           ;my_i2c.c: 263: ic_ptr->error_count++;
 12333  000156  0100               	movlb	0	; () banked
 12334  000158  EE20 F00E          	lfsr	2,0Eh
 12335  00015C  0100               	movlb	0	; () banked
 12336  00015E  51C4               	movf	((_ic_ptr))&0ffh,w
 12337  000160  26D9               	addwf	fsr2l
 12338  000162  0100               	movlb	0	; () banked
 12339  000164  51C5               	movf	((_ic_ptr+1))&0ffh,w
 12340  000166  22DA               	addwfc	fsr2h
 12341  000168  2ADF               	incf	indf2
 12342                           
 12343                           	line	264
 12344                           	
 12345  00016A                     i2l19276:; BSR set to: 0
 12346                           
 12347                           ;my_i2c.c: 264: ic_ptr->error_code = 0x4;
 12348  00016A  0100               	movlb	0	; () banked
 12349  00016C  EE20 F00D          	lfsr	2,0Dh
 12350  000170  0100               	movlb	0	; () banked
 12351  000172  51C4               	movf	((_ic_ptr))&0ffh,w
 12352  000174  26D9               	addwf	fsr2l
 12353  000176  0100               	movlb	0	; () banked
 12354  000178  51C5               	movf	((_ic_ptr+1))&0ffh,w
 12355  00017A  22DA               	addwfc	fsr2h
 12356  00017C  0E04               	movlw	low(04h)
 12357  00017E  6EDF               	movwf	indf2
 12358  000180  D000               	goto	i2l19278
 12359                           	line	265
 12360                           	
 12361  000182                     i2l7389:; BSR set to: 0
 12362                           
 12363                           	line	267
 12364                           	
 12365  000182                     i2l19278:; BSR set to: 0
 12366                           
 12367                           ;my_i2c.c: 265: }
 12368                           ;my_i2c.c: 267: if (SSPSTATbits.BF == 1) {
 12369                           	
 12370  000182  A0C7               	btfss	((c:4039)),c,0	;volatile
 12371  000184  D001               	goto	i2u208_41
 12372  000186  D001               	goto	i2u208_40
 12373  000188                     i2u208_41:
 12374  000188  D00B               	goto	i2l19284
 12375  00018A                     i2u208_40:
 12376                           	line	268
 12377                           	
 12378  00018A                     i2l19280:; BSR set to: 0
 12379                           
 12380                           ;my_i2c.c: 268: i2c_data = SSPBUF;
 12381  00018A  CFC9 F0A3          	movff	(c:4041),(i2c_slave_int_handler@i2c_data)	;volatile
 12382                           	line	269
 12383                           	
 12384  00018E                     i2l19282:; BSR set to: 0
 12385                           
 12386                           ;my_i2c.c: 269: data_read = 1;
 12387  00018E  0100               	movlb	0	; () banked
 12388  000190  6F8C               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh
 12389  000192  0E01               	movlw	low(01h)
 12390  000194  0100               	movlb	0	; () banked
 12391  000196  0100               	movlb	0	; () banked
 12392  000198  6FA7               	movwf	((i2c_slave_int_handler@data_read))&0ffh
 12393  00019A  0100               	movlb	0	; () banked
 12394  00019C  518C               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,w
 12395  00019E  D000               	goto	i2l19284
 12396                           	line	270
 12397                           	
 12398  0001A0                     i2l7390:; BSR set to: 0
 12399                           
 12400                           	line	275
 12401                           	
 12402  0001A0                     i2l19284:; BSR set to: 0
 12403                           
 12404                           ;my_i2c.c: 270: }
 12405                           ;my_i2c.c: 275: if (!overrun_error) {
 12406  0001A0  0100               	movlb	0	; () banked
 12407  0001A2  0100               	movlb	0	; () banked
 12408  0001A4  67A0               	tstfsz	((i2c_slave_int_handler@overrun_error))&0ffh
 12409  0001A6  D001               	goto	i2u209_41
 12410  0001A8  D001               	goto	i2u209_40
 12411  0001AA                     i2u209_41:
 12412  0001AA  D250               	goto	i2l7391
 12413  0001AC                     i2u209_40:
 12414  0001AC  D238               	goto	i2l19372
 12415                           	line	276
 12416                           	
 12417  0001AE                     i2l19286:; BSR set to: 0
 12418                           
 12419                           ;my_i2c.c: 276: switch (ic_ptr->status) {
 12420  0001AE  D237               	goto	i2l19372
 12421                           	line	277
 12422                           ;my_i2c.c: 277: case 0x5:
 12423                           	
 12424  0001B0                     i2l7393:; BSR set to: 0
 12425                           
 12426                           	line	280
 12427                           ;my_i2c.c: 278: {
 12428                           ;my_i2c.c: 280: if (SSPSTATbits.S == 1) {
 12429                           	
 12430  0001B0  A6C7               	btfss	((c:4039)),c,3	;volatile
 12431  0001B2  D001               	goto	i2u210_41
 12432  0001B4  D001               	goto	i2u210_40
 12433  0001B6                     i2u210_41:
 12434  0001B6  D24A               	goto	i2l7391
 12435  0001B8                     i2u210_40:
 12436                           	line	281
 12437                           	
 12438  0001B8                     i2l19288:; BSR set to: 0
 12439                           
 12440                           ;my_i2c.c: 281: handle_start(data_read);
 12441  0001B8  C0A7  F034         	movff	(i2c_slave_int_handler@data_read),(c:?_handle_start)
 12442  0001BC  EC9E  F009         	call	_handle_start	;wreg free
 12443                           	line	283
 12444                           	
 12445  0001C0                     i2l19290:
 12446                           ;my_i2c.c: 283: if (ic_ptr->status == 0x8) {
 12447  0001C0  0100               	movlb	0	; () banked
 12448  0001C2  EE20 F00C          	lfsr	2,0Ch
 12449  0001C6  0100               	movlb	0	; () banked
 12450  0001C8  51C4               	movf	((_ic_ptr))&0ffh,w
 12451  0001CA  26D9               	addwf	fsr2l
 12452  0001CC  0100               	movlb	0	; () banked
 12453  0001CE  51C5               	movf	((_ic_ptr+1))&0ffh,w
 12454  0001D0  22DA               	addwfc	fsr2h
 12455  0001D2  0E08               	movlw	(08h)&0ffh
 12456  0001D4  62DF               	cpfseq	indf2
 12457  0001D6  D001               	goto	i2u211_41
 12458  0001D8  D001               	goto	i2u211_40
 12459  0001DA                     i2u211_41:
 12460  0001DA  D238               	goto	i2l7391
 12461  0001DC                     i2u211_40:
 12462                           	line	284
 12463                           	
 12464  0001DC                     i2l19292:; BSR set to: 0
 12465                           
 12466                           ;my_i2c.c: 284: data_read = 0;
 12467  0001DC  0100               	movlb	0	; () banked
 12468  0001DE  6F8C               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh
 12469  0001E0  0E00               	movlw	low(0)
 12470  0001E2  0100               	movlb	0	; () banked
 12471  0001E4  0100               	movlb	0	; () banked
 12472  0001E6  6FA7               	movwf	((i2c_slave_int_handler@data_read))&0ffh
 12473  0001E8  0100               	movlb	0	; () banked
 12474  0001EA  518C               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,w
 12475                           	line	285
 12476                           ;my_i2c.c: 285: msg_to_send = 1;
 12477  0001EC  0100               	movlb	0	; () banked
 12478  0001EE  6F8C               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh
 12479  0001F0  0E01               	movlw	low(01h)
 12480  0001F2  0100               	movlb	0	; () banked
 12481  0001F4  0100               	movlb	0	; () banked
 12482  0001F6  6FA5               	movwf	((i2c_slave_int_handler@msg_to_send))&0ffh
 12483  0001F8  0100               	movlb	0	; () banked
 12484  0001FA  518C               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,w
 12485  0001FC  D227               	goto	i2l7391
 12486                           	line	286
 12487                           	
 12488  0001FE                     i2l7395:; BSR set to: 0
 12489                           
 12490  0001FE  D226               	goto	i2l7391
 12491                           	line	287
 12492                           	
 12493  000200                     i2l7394:; BSR set to: 0
 12494                           
 12495                           	line	288
 12496                           ;my_i2c.c: 286: }
 12497                           ;my_i2c.c: 287: }
 12498                           ;my_i2c.c: 288: break;
 12499  000200  D225               	goto	i2l7391
 12500                           	line	290
 12501                           ;my_i2c.c: 289: }
 12502                           ;my_i2c.c: 290: case 0x6:
 12503                           	
 12504  000202                     i2l7397:; BSR set to: 0
 12505                           
 12506                           	line	293
 12507                           ;my_i2c.c: 291: {
 12508                           ;my_i2c.c: 293: if (SSPSTATbits.P == 1) {
 12509                           	
 12510  000202  A8C7               	btfss	((c:4039)),c,4	;volatile
 12511  000204  D001               	goto	i2u212_41
 12512  000206  D001               	goto	i2u212_40
 12513  000208                     i2u212_41:
 12514  000208  D040               	goto	i2l19304
 12515  00020A                     i2u212_40:
 12516                           	line	296
 12517                           	
 12518  00020A                     i2l19294:; BSR set to: 0
 12519                           
 12520                           ;my_i2c.c: 296: ic_ptr->event_count++;
 12521  00020A  0100               	movlb	0	; () banked
 12522  00020C  EE20 F00B          	lfsr	2,0Bh
 12523  000210  0100               	movlb	0	; () banked
 12524  000212  51C4               	movf	((_ic_ptr))&0ffh,w
 12525  000214  26D9               	addwf	fsr2l
 12526  000216  0100               	movlb	0	; () banked
 12527  000218  51C5               	movf	((_ic_ptr+1))&0ffh,w
 12528  00021A  22DA               	addwfc	fsr2h
 12529  00021C  2ADF               	incf	indf2
 12530                           
 12531                           	line	297
 12532                           	
 12533  00021E                     i2l19296:; BSR set to: 0
 12534                           
 12535                           ;my_i2c.c: 297: if (data_read) {
 12536  00021E  0100               	movlb	0	; () banked
 12537  000220  0100               	movlb	0	; () banked
 12538  000222  51A7               	movf	((i2c_slave_int_handler@data_read))&0ffh,w
 12539  000224  B4D8               	btfsc	status,2
 12540  000226  D001               	goto	i2u213_41
 12541  000228  D001               	goto	i2u213_40
 12542  00022A                     i2u213_41:
 12543  00022A  D023               	goto	i2l7399
 12544  00022C                     i2u213_40:
 12545                           	line	298
 12546                           	
 12547  00022C                     i2l19298:; BSR set to: 0
 12548                           
 12549                           ;my_i2c.c: 298: if (SSPSTATbits.D_A == 0) {
 12550                           	
 12551  00022C  BAC7               	btfsc	((c:4039)),c,5	;volatile
 12552  00022E  D001               	goto	i2u214_41
 12553  000230  D001               	goto	i2u214_40
 12554  000232                     i2u214_41:
 12555  000232  D009               	goto	i2l19302
 12556  000234                     i2u214_40:
 12557                           	line	299
 12558                           	
 12559  000234                     i2l19300:; BSR set to: 0
 12560                           
 12561                           ;my_i2c.c: 299: msg_ready = 1;
 12562  000234  0100               	movlb	0	; () banked
 12563  000236  6F8C               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh
 12564  000238  0E01               	movlw	low(01h)
 12565  00023A  0100               	movlb	0	; () banked
 12566  00023C  0100               	movlb	0	; () banked
 12567  00023E  6FA6               	movwf	((i2c_slave_int_handler@msg_ready))&0ffh
 12568  000240  0100               	movlb	0	; () banked
 12569  000242  518C               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,w
 12570                           	line	300
 12571                           ;my_i2c.c: 300: } else {
 12572  000244  D016               	goto	i2l7399
 12573                           	
 12574  000246                     i2l7400:; BSR set to: 0
 12575                           
 12576                           	line	301
 12577                           	
 12578  000246                     i2l19302:; BSR set to: 0
 12579                           
 12580                           ;my_i2c.c: 301: ic_ptr->error_count++;
 12581  000246  0100               	movlb	0	; () banked
 12582  000248  EE20 F00E          	lfsr	2,0Eh
 12583  00024C  0100               	movlb	0	; () banked
 12584  00024E  51C4               	movf	((_ic_ptr))&0ffh,w
 12585  000250  26D9               	addwf	fsr2l
 12586  000252  0100               	movlb	0	; () banked
 12587  000254  51C5               	movf	((_ic_ptr+1))&0ffh,w
 12588  000256  22DA               	addwfc	fsr2h
 12589  000258  2ADF               	incf	indf2
 12590                           
 12591                           	line	302
 12592                           ;my_i2c.c: 302: ic_ptr->error_code = 0x6;
 12593  00025A  0100               	movlb	0	; () banked
 12594  00025C  EE20 F00D          	lfsr	2,0Dh
 12595  000260  0100               	movlb	0	; () banked
 12596  000262  51C4               	movf	((_ic_ptr))&0ffh,w
 12597  000264  26D9               	addwf	fsr2l
 12598  000266  0100               	movlb	0	; () banked
 12599  000268  51C5               	movf	((_ic_ptr+1))&0ffh,w
 12600  00026A  22DA               	addwfc	fsr2h
 12601  00026C  0E06               	movlw	low(06h)
 12602  00026E  6EDF               	movwf	indf2
 12603  000270  D000               	goto	i2l7399
 12604                           	line	303
 12605                           	
 12606  000272                     i2l7401:; BSR set to: 0
 12607                           
 12608                           	line	304
 12609                           	
 12610  000272                     i2l7399:; BSR set to: 0
 12611                           
 12612                           	line	305
 12613                           ;my_i2c.c: 303: }
 12614                           ;my_i2c.c: 304: }
 12615                           ;my_i2c.c: 305: ic_ptr->status = 0x5;
 12616  000272  0100               	movlb	0	; () banked
 12617  000274  EE20 F00C          	lfsr	2,0Ch
 12618  000278  0100               	movlb	0	; () banked
 12619  00027A  51C4               	movf	((_ic_ptr))&0ffh,w
 12620  00027C  26D9               	addwf	fsr2l
 12621  00027E  0100               	movlb	0	; () banked
 12622  000280  51C5               	movf	((_ic_ptr+1))&0ffh,w
 12623  000282  22DA               	addwfc	fsr2h
 12624  000284  0E05               	movlw	low(05h)
 12625  000286  6EDF               	movwf	indf2
 12626                           	line	306
 12627                           ;my_i2c.c: 306: } else if (data_read) {
 12628  000288  D1E1               	goto	i2l7391
 12629                           	
 12630  00028A                     i2l7398:; BSR set to: 0
 12631                           
 12632                           	
 12633  00028A                     i2l19304:; BSR set to: 0
 12634                           
 12635  00028A  0100               	movlb	0	; () banked
 12636  00028C  0100               	movlb	0	; () banked
 12637  00028E  51A7               	movf	((i2c_slave_int_handler@data_read))&0ffh,w
 12638  000290  B4D8               	btfsc	status,2
 12639  000292  D001               	goto	i2u215_41
 12640  000294  D001               	goto	i2u215_40
 12641  000296                     i2u215_41:
 12642  000296  D1DA               	goto	i2l7391
 12643  000298                     i2u215_40:
 12644                           	line	307
 12645                           	
 12646  000298                     i2l19306:; BSR set to: 0
 12647                           
 12648                           ;my_i2c.c: 307: ic_ptr->event_count++;
 12649  000298  0100               	movlb	0	; () banked
 12650  00029A  EE20 F00B          	lfsr	2,0Bh
 12651  00029E  0100               	movlb	0	; () banked
 12652  0002A0  51C4               	movf	((_ic_ptr))&0ffh,w
 12653  0002A2  26D9               	addwf	fsr2l
 12654  0002A4  0100               	movlb	0	; () banked
 12655  0002A6  51C5               	movf	((_ic_ptr+1))&0ffh,w
 12656  0002A8  22DA               	addwfc	fsr2h
 12657  0002AA  2ADF               	incf	indf2
 12658                           
 12659                           	line	308
 12660                           	
 12661  0002AC                     i2l19308:; BSR set to: 0
 12662                           
 12663                           ;my_i2c.c: 308: if (SSPSTATbits.D_A == 0) {
 12664                           	
 12665  0002AC  BAC7               	btfsc	((c:4039)),c,5	;volatile
 12666  0002AE  D001               	goto	i2u216_41
 12667  0002B0  D001               	goto	i2u216_40
 12668  0002B2                     i2u216_41:
 12669  0002B2  D02D               	goto	i2l19320
 12670  0002B4                     i2u216_40:
 12671                           	line	309
 12672                           	
 12673  0002B4                     i2l19310:; BSR set to: 0
 12674                           
 12675                           ;my_i2c.c: 309: if (SSPSTATbits.R_W == 0) {
 12676                           	
 12677  0002B4  B4C7               	btfsc	((c:4039)),c,2	;volatile
 12678  0002B6  D001               	goto	i2u217_41
 12679  0002B8  D001               	goto	i2u217_40
 12680  0002BA                     i2u217_41:
 12681  0002BA  D00C               	goto	i2l19314
 12682  0002BC                     i2u217_40:
 12683                           	line	310
 12684                           	
 12685  0002BC                     i2l19312:; BSR set to: 0
 12686                           
 12687                           ;my_i2c.c: 310: ic_ptr->status = 0x7;
 12688  0002BC  0100               	movlb	0	; () banked
 12689  0002BE  EE20 F00C          	lfsr	2,0Ch
 12690  0002C2  0100               	movlb	0	; () banked
 12691  0002C4  51C4               	movf	((_ic_ptr))&0ffh,w
 12692  0002C6  26D9               	addwf	fsr2l
 12693  0002C8  0100               	movlb	0	; () banked
 12694  0002CA  51C5               	movf	((_ic_ptr+1))&0ffh,w
 12695  0002CC  22DA               	addwfc	fsr2h
 12696  0002CE  0E07               	movlw	low(07h)
 12697  0002D0  6EDF               	movwf	indf2
 12698                           	line	311
 12699                           ;my_i2c.c: 311: } else {
 12700  0002D2  D1BC               	goto	i2l7391
 12701                           	
 12702  0002D4                     i2l7405:; BSR set to: 0
 12703                           
 12704                           	line	312
 12705                           	
 12706  0002D4                     i2l19314:; BSR set to: 0
 12707                           
 12708                           ;my_i2c.c: 312: ic_ptr->status = 0x8;
 12709  0002D4  0100               	movlb	0	; () banked
 12710  0002D6  EE20 F00C          	lfsr	2,0Ch
 12711  0002DA  0100               	movlb	0	; () banked
 12712  0002DC  51C4               	movf	((_ic_ptr))&0ffh,w
 12713  0002DE  26D9               	addwf	fsr2l
 12714  0002E0  0100               	movlb	0	; () banked
 12715  0002E2  51C5               	movf	((_ic_ptr+1))&0ffh,w
 12716  0002E4  22DA               	addwfc	fsr2h
 12717  0002E6  0E08               	movlw	low(08h)
 12718  0002E8  6EDF               	movwf	indf2
 12719                           	line	313
 12720                           	
 12721  0002EA                     i2l19316:; BSR set to: 0
 12722                           
 12723                           ;my_i2c.c: 313: msg_to_send = 1;
 12724  0002EA  0100               	movlb	0	; () banked
 12725  0002EC  6F8C               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh
 12726  0002EE  0E01               	movlw	low(01h)
 12727  0002F0  0100               	movlb	0	; () banked
 12728  0002F2  0100               	movlb	0	; () banked
 12729  0002F4  6FA5               	movwf	((i2c_slave_int_handler@msg_to_send))&0ffh
 12730  0002F6  0100               	movlb	0	; () banked
 12731  0002F8  518C               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,w
 12732                           	line	315
 12733                           	
 12734  0002FA                     i2l19318:; BSR set to: 0
 12735                           
 12736                           ;my_i2c.c: 315: data_read = 0;
 12737  0002FA  0100               	movlb	0	; () banked
 12738  0002FC  6F8C               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh
 12739  0002FE  0E00               	movlw	low(0)
 12740  000300  0100               	movlb	0	; () banked
 12741  000302  0100               	movlb	0	; () banked
 12742  000304  6FA7               	movwf	((i2c_slave_int_handler@data_read))&0ffh
 12743  000306  0100               	movlb	0	; () banked
 12744  000308  518C               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,w
 12745  00030A  D1A0               	goto	i2l7391
 12746                           	line	316
 12747                           	
 12748  00030C                     i2l7406:; BSR set to: 0
 12749                           
 12750                           	line	317
 12751                           ;my_i2c.c: 316: }
 12752                           ;my_i2c.c: 317: } else {
 12753  00030C  D19F               	goto	i2l7391
 12754                           	
 12755  00030E                     i2l7404:; BSR set to: 0
 12756                           
 12757                           	line	318
 12758                           	
 12759  00030E                     i2l19320:; BSR set to: 0
 12760                           
 12761                           ;my_i2c.c: 318: ic_ptr->error_count++;
 12762  00030E  0100               	movlb	0	; () banked
 12763  000310  EE20 F00E          	lfsr	2,0Eh
 12764  000314  0100               	movlb	0	; () banked
 12765  000316  51C4               	movf	((_ic_ptr))&0ffh,w
 12766  000318  26D9               	addwf	fsr2l
 12767  00031A  0100               	movlb	0	; () banked
 12768  00031C  51C5               	movf	((_ic_ptr+1))&0ffh,w
 12769  00031E  22DA               	addwfc	fsr2h
 12770  000320  2ADF               	incf	indf2
 12771                           
 12772                           	line	319
 12773                           ;my_i2c.c: 319: ic_ptr->status = 0x5;
 12774  000322  0100               	movlb	0	; () banked
 12775  000324  EE20 F00C          	lfsr	2,0Ch
 12776  000328  0100               	movlb	0	; () banked
 12777  00032A  51C4               	movf	((_ic_ptr))&0ffh,w
 12778  00032C  26D9               	addwf	fsr2l
 12779  00032E  0100               	movlb	0	; () banked
 12780  000330  51C5               	movf	((_ic_ptr+1))&0ffh,w
 12781  000332  22DA               	addwfc	fsr2h
 12782  000334  0E05               	movlw	low(05h)
 12783  000336  6EDF               	movwf	indf2
 12784                           	line	320
 12785                           ;my_i2c.c: 320: ic_ptr->error_code = 0x6;
 12786  000338  0100               	movlb	0	; () banked
 12787  00033A  EE20 F00D          	lfsr	2,0Dh
 12788  00033E  0100               	movlb	0	; () banked
 12789  000340  51C4               	movf	((_ic_ptr))&0ffh,w
 12790  000342  26D9               	addwf	fsr2l
 12791  000344  0100               	movlb	0	; () banked
 12792  000346  51C5               	movf	((_ic_ptr+1))&0ffh,w
 12793  000348  22DA               	addwfc	fsr2h
 12794  00034A  0E06               	movlw	low(06h)
 12795  00034C  6EDF               	movwf	indf2
 12796  00034E  D17E               	goto	i2l7391
 12797                           	line	321
 12798                           	
 12799  000350                     i2l7407:; BSR set to: 0
 12800                           
 12801  000350  D17D               	goto	i2l7391
 12802                           	line	322
 12803                           	
 12804  000352                     i2l7403:; BSR set to: 0
 12805                           
 12806  000352  D17C               	goto	i2l7391
 12807                           	line	323
 12808                           	
 12809  000354                     i2l7402:; BSR set to: 0
 12810                           
 12811                           ;my_i2c.c: 321: }
 12812                           ;my_i2c.c: 322: }
 12813                           ;my_i2c.c: 323: break;
 12814  000354  D17B               	goto	i2l7391
 12815                           	line	325
 12816                           ;my_i2c.c: 324: }
 12817                           ;my_i2c.c: 325: case 0x8:
 12818                           	
 12819  000356                     i2l7408:; BSR set to: 0
 12820                           
 12821                           	line	327
 12822                           	
 12823  000356                     i2l19322:; BSR set to: 0
 12824                           
 12825                           ;my_i2c.c: 326: {
 12826                           ;my_i2c.c: 327: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
 12827  000356  0100               	movlb	0	; () banked
 12828  000358  EE20 F01A          	lfsr	2,01Ah
 12829  00035C  0100               	movlb	0	; () banked
 12830  00035E  51C4               	movf	((_ic_ptr))&0ffh,w
 12831  000360  26D9               	addwf	fsr2l
 12832  000362  0100               	movlb	0	; () banked
 12833  000364  51C5               	movf	((_ic_ptr+1))&0ffh,w
 12834  000366  22DA               	addwfc	fsr2h
 12835  000368  50DF               	movf	indf2,w
 12836  00036A  0100               	movlb	0	; () banked
 12837  00036C  6F8C               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh
 12838  00036E  0100               	movlb	0	; () banked
 12839  000370  EE20 F019          	lfsr	2,019h
 12840  000374  0100               	movlb	0	; () banked
 12841  000376  51C4               	movf	((_ic_ptr))&0ffh,w
 12842  000378  26D9               	addwf	fsr2l
 12843  00037A  0100               	movlb	0	; () banked
 12844  00037C  51C5               	movf	((_ic_ptr+1))&0ffh,w
 12845  00037E  22DA               	addwfc	fsr2h
 12846  000380  50DF               	movf	indf2,w
 12847  000382  0100               	movlb	0	; () banked
 12848  000384  5D8C               	subwf	((??_i2c_slave_int_handler+0+0))&0ffh,w
 12849  000386  B0D8               	btfsc	status,0
 12850  000388  D001               	goto	i2u218_41
 12851  00038A  D001               	goto	i2u218_40
 12852  00038C                     i2u218_41:
 12853  00038C  D032               	goto	i2l19330
 12854  00038E                     i2u218_40:
 12855                           	line	328
 12856                           	
 12857  00038E                     i2l19324:; BSR set to: 0
 12858                           
 12859                           ;my_i2c.c: 328: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
 12860  00038E  0100               	movlb	0	; () banked
 12861  000390  EE20 F01A          	lfsr	2,01Ah
 12862  000394  0100               	movlb	0	; () banked
 12863  000396  51C4               	movf	((_ic_ptr))&0ffh,w
 12864  000398  26D9               	addwf	fsr2l
 12865  00039A  0100               	movlb	0	; () banked
 12866  00039C  51C5               	movf	((_ic_ptr+1))&0ffh,w
 12867  00039E  22DA               	addwfc	fsr2h
 12868  0003A0  50DF               	movf	indf2,w
 12869  0003A2  0100               	movlb	0	; () banked
 12870  0003A4  6F8C               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh
 12871  0003A6  0100               	movlb	0	; () banked
 12872  0003A8  518C               	movf	((??_i2c_slave_int_handler+0+0))&0ffh,w
 12873  0003AA  0D01               	mullw	01h
 12874  0003AC  0E0F               	movlw	0Fh
 12875  0003AE  26F3               	addwf	(prodl),c
 12876  0003B0  0E00               	movlw	0
 12877  0003B2  22F4               	addwfc	(prodh),c
 12878  0003B4  50F3               	movf	(prodl),c,w
 12879  0003B6  0100               	movlb	0	; () banked
 12880  0003B8  0100               	movlb	0	; () banked
 12881  0003BA  25C4               	addwf	((_ic_ptr))&0ffh,w
 12882  0003BC  6ED9               	movwf	c:fsr2l
 12883  0003BE  50F4               	movf	(prodh),c,w
 12884  0003C0  0100               	movlb	0	; () banked
 12885  0003C2  0100               	movlb	0	; () banked
 12886  0003C4  21C5               	addwfc	((_ic_ptr+1))&0ffh,w
 12887  0003C6  6EDA               	movwf	1+c:fsr2l
 12888  0003C8  50DF               	movf	indf2,w
 12889  0003CA  6EC9               	movwf	((c:4041)),c	;volatile
 12890                           	line	329
 12891                           	
 12892  0003CC                     i2l19326:; BSR set to: 0
 12893                           
 12894                           ;my_i2c.c: 329: ic_ptr->outbufind++;
 12895  0003CC  0100               	movlb	0	; () banked
 12896  0003CE  EE20 F01A          	lfsr	2,01Ah
 12897  0003D2  0100               	movlb	0	; () banked
 12898  0003D4  51C4               	movf	((_ic_ptr))&0ffh,w
 12899  0003D6  26D9               	addwf	fsr2l
 12900  0003D8  0100               	movlb	0	; () banked
 12901  0003DA  51C5               	movf	((_ic_ptr+1))&0ffh,w
 12902  0003DC  22DA               	addwfc	fsr2h
 12903  0003DE  2ADF               	incf	indf2
 12904                           
 12905                           	line	330
 12906                           	
 12907  0003E0                     i2l19328:; BSR set to: 0
 12908                           
 12909                           ;my_i2c.c: 330: data_written = 1;
 12910  0003E0  0100               	movlb	0	; () banked
 12911  0003E2  6F8C               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh
 12912  0003E4  0E01               	movlw	low(01h)
 12913  0003E6  0100               	movlb	0	; () banked
 12914  0003E8  0100               	movlb	0	; () banked
 12915  0003EA  6F9F               	movwf	((i2c_slave_int_handler@data_written))&0ffh
 12916  0003EC  0100               	movlb	0	; () banked
 12917  0003EE  518C               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,w
 12918                           	line	331
 12919                           ;my_i2c.c: 331: } else {
 12920  0003F0  D12D               	goto	i2l7391
 12921                           	
 12922  0003F2                     i2l7409:; BSR set to: 0
 12923                           
 12924                           	line	333
 12925                           	
 12926  0003F2                     i2l19330:; BSR set to: 0
 12927                           
 12928                           ;my_i2c.c: 333: ic_ptr->status = 0x5;
 12929  0003F2  0100               	movlb	0	; () banked
 12930  0003F4  EE20 F00C          	lfsr	2,0Ch
 12931  0003F8  0100               	movlb	0	; () banked
 12932  0003FA  51C4               	movf	((_ic_ptr))&0ffh,w
 12933  0003FC  26D9               	addwf	fsr2l
 12934  0003FE  0100               	movlb	0	; () banked
 12935  000400  51C5               	movf	((_ic_ptr+1))&0ffh,w
 12936  000402  22DA               	addwfc	fsr2h
 12937  000404  0E05               	movlw	low(05h)
 12938  000406  6EDF               	movwf	indf2
 12939  000408  D121               	goto	i2l7391
 12940                           	line	334
 12941                           	
 12942  00040A                     i2l7410:; BSR set to: 0
 12943                           
 12944                           	line	335
 12945                           ;my_i2c.c: 334: }
 12946                           ;my_i2c.c: 335: break;
 12947  00040A  D120               	goto	i2l7391
 12948                           	line	337
 12949                           ;my_i2c.c: 336: }
 12950                           ;my_i2c.c: 337: case 0x7:
 12951                           	
 12952  00040C                     i2l7411:; BSR set to: 0
 12953                           
 12954                           	line	340
 12955                           ;my_i2c.c: 338: {
 12956                           ;my_i2c.c: 340: if (SSPSTATbits.P == 1) {
 12957                           	
 12958  00040C  A8C7               	btfss	((c:4039)),c,4	;volatile
 12959  00040E  D001               	goto	i2u219_41
 12960  000410  D001               	goto	i2u219_40
 12961  000412                     i2u219_41:
 12962  000412  D07B               	goto	i2l19350
 12963  000414                     i2u219_40:
 12964                           	line	342
 12965                           	
 12966  000414                     i2l19332:; BSR set to: 0
 12967                           
 12968                           ;my_i2c.c: 342: ic_ptr->event_count++;
 12969  000414  0100               	movlb	0	; () banked
 12970  000416  EE20 F00B          	lfsr	2,0Bh
 12971  00041A  0100               	movlb	0	; () banked
 12972  00041C  51C4               	movf	((_ic_ptr))&0ffh,w
 12973  00041E  26D9               	addwf	fsr2l
 12974  000420  0100               	movlb	0	; () banked
 12975  000422  51C5               	movf	((_ic_ptr+1))&0ffh,w
 12976  000424  22DA               	addwfc	fsr2h
 12977  000426  2ADF               	incf	indf2
 12978                           
 12979                           	line	343
 12980                           	
 12981  000428                     i2l19334:; BSR set to: 0
 12982                           
 12983                           ;my_i2c.c: 343: if (data_read) {
 12984  000428  0100               	movlb	0	; () banked
 12985  00042A  0100               	movlb	0	; () banked
 12986  00042C  51A7               	movf	((i2c_slave_int_handler@data_read))&0ffh,w
 12987  00042E  B4D8               	btfsc	status,2
 12988  000430  D001               	goto	i2u220_41
 12989  000432  D001               	goto	i2u220_40
 12990  000434                     i2u220_41:
 12991  000434  D055               	goto	i2l19346
 12992  000436                     i2u220_40:
 12993                           	line	344
 12994                           	
 12995  000436                     i2l19336:; BSR set to: 0
 12996                           
 12997                           ;my_i2c.c: 344: if (SSPSTATbits.D_A == 1) {
 12998                           	
 12999  000436  AAC7               	btfss	((c:4039)),c,5	;volatile
 13000  000438  D001               	goto	i2u221_41
 13001  00043A  D001               	goto	i2u221_40
 13002  00043C                     i2u221_41:
 13003  00043C  D02F               	goto	i2l19344
 13004  00043E                     i2u221_40:
 13005                           	line	345
 13006                           	
 13007  00043E                     i2l19338:; BSR set to: 0
 13008                           
 13009                           ;my_i2c.c: 345: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
 13010  00043E  0100               	movlb	0	; () banked
 13011  000440  EE20 F00A          	lfsr	2,0Ah
 13012  000444  0100               	movlb	0	; () banked
 13013  000446  51C4               	movf	((_ic_ptr))&0ffh,w
 13014  000448  26D9               	addwf	fsr2l
 13015  00044A  0100               	movlb	0	; () banked
 13016  00044C  51C5               	movf	((_ic_ptr+1))&0ffh,w
 13017  00044E  22DA               	addwfc	fsr2h
 13018  000450  50DF               	movf	indf2,w
 13019  000452  0100               	movlb	0	; () banked
 13020  000454  6F8C               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh
 13021  000456  0100               	movlb	0	; () banked
 13022  000458  518C               	movf	((??_i2c_slave_int_handler+0+0))&0ffh,w
 13023  00045A  0D01               	mullw	01h
 13024  00045C  50F3               	movf	(prodl),c,w
 13025  00045E  0100               	movlb	0	; () banked
 13026  000460  0100               	movlb	0	; () banked
 13027  000462  25C4               	addwf	((_ic_ptr))&0ffh,w
 13028  000464  6ED9               	movwf	c:fsr2l
 13029  000466  50F4               	movf	(prodh),c,w
 13030  000468  0100               	movlb	0	; () banked
 13031  00046A  0100               	movlb	0	; () banked
 13032  00046C  21C5               	addwfc	((_ic_ptr+1))&0ffh,w
 13033  00046E  6EDA               	movwf	1+c:fsr2l
 13034  000470  0100               	movlb	0	; () banked
 13035  000472  C0A3  FFDF         	movff	(i2c_slave_int_handler@i2c_data),indf2
 13036                           
 13037                           	line	346
 13038                           	
 13039  000476                     i2l19340:; BSR set to: 0
 13040                           
 13041                           ;my_i2c.c: 346: ic_ptr->buflen++;
 13042  000476  0100               	movlb	0	; () banked
 13043  000478  EE20 F00A          	lfsr	2,0Ah
 13044  00047C  0100               	movlb	0	; () banked
 13045  00047E  51C4               	movf	((_ic_ptr))&0ffh,w
 13046  000480  26D9               	addwf	fsr2l
 13047  000482  0100               	movlb	0	; () banked
 13048  000484  51C5               	movf	((_ic_ptr+1))&0ffh,w
 13049  000486  22DA               	addwfc	fsr2h
 13050  000488  2ADF               	incf	indf2
 13051                           
 13052                           	line	347
 13053                           	
 13054  00048A                     i2l19342:; BSR set to: 0
 13055                           
 13056                           ;my_i2c.c: 347: msg_ready = 1;
 13057  00048A  0100               	movlb	0	; () banked
 13058  00048C  6F8C               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh
 13059  00048E  0E01               	movlw	low(01h)
 13060  000490  0100               	movlb	0	; () banked
 13061  000492  0100               	movlb	0	; () banked
 13062  000494  6FA6               	movwf	((i2c_slave_int_handler@msg_ready))&0ffh
 13063  000496  0100               	movlb	0	; () banked
 13064  000498  518C               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,w
 13065                           	line	348
 13066                           ;my_i2c.c: 348: } else {
 13067  00049A  D02B               	goto	i2l19348
 13068                           	
 13069  00049C                     i2l7414:; BSR set to: 0
 13070                           
 13071                           	line	349
 13072                           	
 13073  00049C                     i2l19344:; BSR set to: 0
 13074                           
 13075                           ;my_i2c.c: 349: ic_ptr->error_count++;
 13076  00049C  0100               	movlb	0	; () banked
 13077  00049E  EE20 F00E          	lfsr	2,0Eh
 13078  0004A2  0100               	movlb	0	; () banked
 13079  0004A4  51C4               	movf	((_ic_ptr))&0ffh,w
 13080  0004A6  26D9               	addwf	fsr2l
 13081  0004A8  0100               	movlb	0	; () banked
 13082  0004AA  51C5               	movf	((_ic_ptr+1))&0ffh,w
 13083  0004AC  22DA               	addwfc	fsr2h
 13084  0004AE  2ADF               	incf	indf2
 13085                           
 13086                           	line	350
 13087                           ;my_i2c.c: 350: ic_ptr->error_code = 0x6;
 13088  0004B0  0100               	movlb	0	; () banked
 13089  0004B2  EE20 F00D          	lfsr	2,0Dh
 13090  0004B6  0100               	movlb	0	; () banked
 13091  0004B8  51C4               	movf	((_ic_ptr))&0ffh,w
 13092  0004BA  26D9               	addwf	fsr2l
 13093  0004BC  0100               	movlb	0	; () banked
 13094  0004BE  51C5               	movf	((_ic_ptr+1))&0ffh,w
 13095  0004C0  22DA               	addwfc	fsr2h
 13096  0004C2  0E06               	movlw	low(06h)
 13097  0004C4  6EDF               	movwf	indf2
 13098                           	line	351
 13099                           ;my_i2c.c: 351: ic_ptr->status = 0x5;
 13100  0004C6  0100               	movlb	0	; () banked
 13101  0004C8  EE20 F00C          	lfsr	2,0Ch
 13102  0004CC  0100               	movlb	0	; () banked
 13103  0004CE  51C4               	movf	((_ic_ptr))&0ffh,w
 13104  0004D0  26D9               	addwf	fsr2l
 13105  0004D2  0100               	movlb	0	; () banked
 13106  0004D4  51C5               	movf	((_ic_ptr+1))&0ffh,w
 13107  0004D6  22DA               	addwfc	fsr2h
 13108  0004D8  0E05               	movlw	low(05h)
 13109  0004DA  6EDF               	movwf	indf2
 13110  0004DC  D00A               	goto	i2l19348
 13111                           	line	352
 13112                           	
 13113  0004DE                     i2l7415:; BSR set to: 0
 13114                           
 13115                           	line	353
 13116                           ;my_i2c.c: 352: }
 13117                           ;my_i2c.c: 353: } else {
 13118  0004DE  D009               	goto	i2l19348
 13119                           	
 13120  0004E0                     i2l7413:; BSR set to: 0
 13121                           
 13122                           	line	354
 13123                           	
 13124  0004E0                     i2l19346:; BSR set to: 0
 13125                           
 13126                           ;my_i2c.c: 354: msg_ready = 1;
 13127  0004E0  0100               	movlb	0	; () banked
 13128  0004E2  6F8C               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh
 13129  0004E4  0E01               	movlw	low(01h)
 13130  0004E6  0100               	movlb	0	; () banked
 13131  0004E8  0100               	movlb	0	; () banked
 13132  0004EA  6FA6               	movwf	((i2c_slave_int_handler@msg_ready))&0ffh
 13133  0004EC  0100               	movlb	0	; () banked
 13134  0004EE  518C               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,w
 13135  0004F0  D000               	goto	i2l19348
 13136                           	line	355
 13137                           	
 13138  0004F2                     i2l7416:; BSR set to: 0
 13139                           
 13140                           	line	356
 13141                           	
 13142  0004F2                     i2l19348:; BSR set to: 0
 13143                           
 13144                           ;my_i2c.c: 355: }
 13145                           ;my_i2c.c: 356: ic_ptr->status = 0x5;
 13146  0004F2  0100               	movlb	0	; () banked
 13147  0004F4  EE20 F00C          	lfsr	2,0Ch
 13148  0004F8  0100               	movlb	0	; () banked
 13149  0004FA  51C4               	movf	((_ic_ptr))&0ffh,w
 13150  0004FC  26D9               	addwf	fsr2l
 13151  0004FE  0100               	movlb	0	; () banked
 13152  000500  51C5               	movf	((_ic_ptr+1))&0ffh,w
 13153  000502  22DA               	addwfc	fsr2h
 13154  000504  0E05               	movlw	low(05h)
 13155  000506  6EDF               	movwf	indf2
 13156                           	line	357
 13157                           ;my_i2c.c: 357: } else if (data_read) {
 13158  000508  D0A1               	goto	i2l7391
 13159                           	
 13160  00050A                     i2l7412:; BSR set to: 0
 13161                           
 13162                           	
 13163  00050A                     i2l19350:; BSR set to: 0
 13164                           
 13165  00050A  0100               	movlb	0	; () banked
 13166  00050C  0100               	movlb	0	; () banked
 13167  00050E  51A7               	movf	((i2c_slave_int_handler@data_read))&0ffh,w
 13168  000510  B4D8               	btfsc	status,2
 13169  000512  D001               	goto	i2u222_41
 13170  000514  D001               	goto	i2u222_40
 13171  000516                     i2u222_41:
 13172  000516  D09A               	goto	i2l7391
 13173  000518                     i2u222_40:
 13174                           	line	358
 13175                           	
 13176  000518                     i2l19352:; BSR set to: 0
 13177                           
 13178                           ;my_i2c.c: 358: ic_ptr->event_count++;
 13179  000518  0100               	movlb	0	; () banked
 13180  00051A  EE20 F00B          	lfsr	2,0Bh
 13181  00051E  0100               	movlb	0	; () banked
 13182  000520  51C4               	movf	((_ic_ptr))&0ffh,w
 13183  000522  26D9               	addwf	fsr2l
 13184  000524  0100               	movlb	0	; () banked
 13185  000526  51C5               	movf	((_ic_ptr+1))&0ffh,w
 13186  000528  22DA               	addwfc	fsr2h
 13187  00052A  2ADF               	incf	indf2
 13188                           
 13189                           	line	359
 13190                           	
 13191  00052C                     i2l19354:; BSR set to: 0
 13192                           
 13193                           ;my_i2c.c: 359: if (SSPSTATbits.D_A == 1) {
 13194                           	
 13195  00052C  AAC7               	btfss	((c:4039)),c,5	;volatile
 13196  00052E  D001               	goto	i2u223_41
 13197  000530  D001               	goto	i2u223_40
 13198  000532                     i2u223_41:
 13199  000532  D027               	goto	i2l7419
 13200  000534                     i2u223_40:
 13201                           	line	360
 13202                           	
 13203  000534                     i2l19356:; BSR set to: 0
 13204                           
 13205                           ;my_i2c.c: 360: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
 13206  000534  0100               	movlb	0	; () banked
 13207  000536  EE20 F00A          	lfsr	2,0Ah
 13208  00053A  0100               	movlb	0	; () banked
 13209  00053C  51C4               	movf	((_ic_ptr))&0ffh,w
 13210  00053E  26D9               	addwf	fsr2l
 13211  000540  0100               	movlb	0	; () banked
 13212  000542  51C5               	movf	((_ic_ptr+1))&0ffh,w
 13213  000544  22DA               	addwfc	fsr2h
 13214  000546  50DF               	movf	indf2,w
 13215  000548  0100               	movlb	0	; () banked
 13216  00054A  6F8C               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh
 13217  00054C  0100               	movlb	0	; () banked
 13218  00054E  518C               	movf	((??_i2c_slave_int_handler+0+0))&0ffh,w
 13219  000550  0D01               	mullw	01h
 13220  000552  50F3               	movf	(prodl),c,w
 13221  000554  0100               	movlb	0	; () banked
 13222  000556  0100               	movlb	0	; () banked
 13223  000558  25C4               	addwf	((_ic_ptr))&0ffh,w
 13224  00055A  6ED9               	movwf	c:fsr2l
 13225  00055C  50F4               	movf	(prodh),c,w
 13226  00055E  0100               	movlb	0	; () banked
 13227  000560  0100               	movlb	0	; () banked
 13228  000562  21C5               	addwfc	((_ic_ptr+1))&0ffh,w
 13229  000564  6EDA               	movwf	1+c:fsr2l
 13230  000566  0100               	movlb	0	; () banked
 13231  000568  C0A3  FFDF         	movff	(i2c_slave_int_handler@i2c_data),indf2
 13232                           
 13233                           	line	361
 13234                           	
 13235  00056C                     i2l19358:; BSR set to: 0
 13236                           
 13237                           ;my_i2c.c: 361: ic_ptr->buflen++;
 13238  00056C  0100               	movlb	0	; () banked
 13239  00056E  EE20 F00A          	lfsr	2,0Ah
 13240  000572  0100               	movlb	0	; () banked
 13241  000574  51C4               	movf	((_ic_ptr))&0ffh,w
 13242  000576  26D9               	addwf	fsr2l
 13243  000578  0100               	movlb	0	; () banked
 13244  00057A  51C5               	movf	((_ic_ptr+1))&0ffh,w
 13245  00057C  22DA               	addwfc	fsr2h
 13246  00057E  2ADF               	incf	indf2
 13247                           
 13248                           	line	362
 13249                           ;my_i2c.c: 362: } else {
 13250  000580  D065               	goto	i2l7391
 13251                           	
 13252  000582                     i2l7419:; BSR set to: 0
 13253                           
 13254                           	line	363
 13255                           ;my_i2c.c: 363: if (SSPSTATbits.R_W == 1) {
 13256                           	
 13257  000582  A4C7               	btfss	((c:4039)),c,2	;volatile
 13258  000584  D001               	goto	i2u224_41
 13259  000586  D001               	goto	i2u224_40
 13260  000588                     i2u224_41:
 13261  000588  D024               	goto	i2l19368
 13262  00058A                     i2u224_40:
 13263                           	line	364
 13264                           	
 13265  00058A                     i2l19360:; BSR set to: 0
 13266                           
 13267                           ;my_i2c.c: 364: ic_ptr->status = 0x8;
 13268  00058A  0100               	movlb	0	; () banked
 13269  00058C  EE20 F00C          	lfsr	2,0Ch
 13270  000590  0100               	movlb	0	; () banked
 13271  000592  51C4               	movf	((_ic_ptr))&0ffh,w
 13272  000594  26D9               	addwf	fsr2l
 13273  000596  0100               	movlb	0	; () banked
 13274  000598  51C5               	movf	((_ic_ptr+1))&0ffh,w
 13275  00059A  22DA               	addwfc	fsr2h
 13276  00059C  0E08               	movlw	low(08h)
 13277  00059E  6EDF               	movwf	indf2
 13278                           	line	365
 13279                           	
 13280  0005A0                     i2l19362:; BSR set to: 0
 13281                           
 13282                           ;my_i2c.c: 365: msg_ready = 1;
 13283  0005A0  0100               	movlb	0	; () banked
 13284  0005A2  6F8C               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh
 13285  0005A4  0E01               	movlw	low(01h)
 13286  0005A6  0100               	movlb	0	; () banked
 13287  0005A8  0100               	movlb	0	; () banked
 13288  0005AA  6FA6               	movwf	((i2c_slave_int_handler@msg_ready))&0ffh
 13289  0005AC  0100               	movlb	0	; () banked
 13290  0005AE  518C               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,w
 13291                           	line	366
 13292                           	
 13293  0005B0                     i2l19364:; BSR set to: 0
 13294                           
 13295                           ;my_i2c.c: 366: msg_to_send = 1;
 13296  0005B0  0100               	movlb	0	; () banked
 13297  0005B2  6F8C               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh
 13298  0005B4  0E01               	movlw	low(01h)
 13299  0005B6  0100               	movlb	0	; () banked
 13300  0005B8  0100               	movlb	0	; () banked
 13301  0005BA  6FA5               	movwf	((i2c_slave_int_handler@msg_to_send))&0ffh
 13302  0005BC  0100               	movlb	0	; () banked
 13303  0005BE  518C               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,w
 13304                           	line	368
 13305                           	
 13306  0005C0                     i2l19366:; BSR set to: 0
 13307                           
 13308                           ;my_i2c.c: 368: data_read = 0;
 13309  0005C0  0100               	movlb	0	; () banked
 13310  0005C2  6F8C               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh
 13311  0005C4  0E00               	movlw	low(0)
 13312  0005C6  0100               	movlb	0	; () banked
 13313  0005C8  0100               	movlb	0	; () banked
 13314  0005CA  6FA7               	movwf	((i2c_slave_int_handler@data_read))&0ffh
 13315  0005CC  0100               	movlb	0	; () banked
 13316  0005CE  518C               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,w
 13317                           	line	369
 13318                           ;my_i2c.c: 369: } else {
 13319  0005D0  D03D               	goto	i2l7391
 13320                           	
 13321  0005D2                     i2l7421:; BSR set to: 0
 13322                           
 13323                           	line	370
 13324                           	
 13325  0005D2                     i2l19368:; BSR set to: 0
 13326                           
 13327                           ;my_i2c.c: 370: ic_ptr->error_count++;
 13328  0005D2  0100               	movlb	0	; () banked
 13329  0005D4  EE20 F00E          	lfsr	2,0Eh
 13330  0005D8  0100               	movlb	0	; () banked
 13331  0005DA  51C4               	movf	((_ic_ptr))&0ffh,w
 13332  0005DC  26D9               	addwf	fsr2l
 13333  0005DE  0100               	movlb	0	; () banked
 13334  0005E0  51C5               	movf	((_ic_ptr+1))&0ffh,w
 13335  0005E2  22DA               	addwfc	fsr2h
 13336  0005E4  2ADF               	incf	indf2
 13337                           
 13338                           	line	371
 13339                           ;my_i2c.c: 371: ic_ptr->error_code = 0x6;
 13340  0005E6  0100               	movlb	0	; () banked
 13341  0005E8  EE20 F00D          	lfsr	2,0Dh
 13342  0005EC  0100               	movlb	0	; () banked
 13343  0005EE  51C4               	movf	((_ic_ptr))&0ffh,w
 13344  0005F0  26D9               	addwf	fsr2l
 13345  0005F2  0100               	movlb	0	; () banked
 13346  0005F4  51C5               	movf	((_ic_ptr+1))&0ffh,w
 13347  0005F6  22DA               	addwfc	fsr2h
 13348  0005F8  0E06               	movlw	low(06h)
 13349  0005FA  6EDF               	movwf	indf2
 13350                           	line	372
 13351                           ;my_i2c.c: 372: ic_ptr->status = 0x5;
 13352  0005FC  0100               	movlb	0	; () banked
 13353  0005FE  EE20 F00C          	lfsr	2,0Ch
 13354  000602  0100               	movlb	0	; () banked
 13355  000604  51C4               	movf	((_ic_ptr))&0ffh,w
 13356  000606  26D9               	addwf	fsr2l
 13357  000608  0100               	movlb	0	; () banked
 13358  00060A  51C5               	movf	((_ic_ptr+1))&0ffh,w
 13359  00060C  22DA               	addwfc	fsr2h
 13360  00060E  0E05               	movlw	low(05h)
 13361  000610  6EDF               	movwf	indf2
 13362  000612  D01C               	goto	i2l7391
 13363                           	line	373
 13364                           	
 13365  000614                     i2l7422:; BSR set to: 0
 13366                           
 13367  000614  D01B               	goto	i2l7391
 13368                           	line	374
 13369                           	
 13370  000616                     i2l7420:; BSR set to: 0
 13371                           
 13372  000616  D01A               	goto	i2l7391
 13373                           	line	375
 13374                           	
 13375  000618                     i2l7418:; BSR set to: 0
 13376                           
 13377  000618  D019               	goto	i2l7391
 13378                           	line	376
 13379                           	
 13380  00061A                     i2l7417:; BSR set to: 0
 13381                           
 13382                           ;my_i2c.c: 373: }
 13383                           ;my_i2c.c: 374: }
 13384                           ;my_i2c.c: 375: }
 13385                           ;my_i2c.c: 376: break;
 13386  00061A  D018               	goto	i2l7391
 13387                           	line	378
 13388                           	
 13389  00061C                     i2l19370:; BSR set to: 0
 13390                           
 13391                           ;my_i2c.c: 377: }
 13392                           ;my_i2c.c: 378: }
 13393  00061C  D017               	goto	i2l7391
 13394                           	line	276
 13395                           	
 13396  00061E                     i2l7392:; BSR set to: 0
 13397                           
 13398                           	
 13399  00061E                     i2l19372:; BSR set to: 0
 13400                           
 13401  00061E  0100               	movlb	0	; () banked
 13402  000620  EE20 F00C          	lfsr	2,0Ch
 13403  000624  0100               	movlb	0	; () banked
 13404  000626  51C4               	movf	((_ic_ptr))&0ffh,w
 13405  000628  26D9               	addwf	fsr2l
 13406  00062A  0100               	movlb	0	; () banked
 13407  00062C  51C5               	movf	((_ic_ptr+1))&0ffh,w
 13408  00062E  22DA               	addwfc	fsr2h
 13409  000630  50DF               	movf	indf2,w
 13410                           	; Switch size 1, requested type "space"
 13411                           ; Number of cases is 4, Range of values is 5 to 8
 13412                           ; switch strategies available:
 13413                           ; Name         Instructions Cycles
 13414                           ; simple_byte           13     7 (average)
 13415                           ;	Chosen strategy is simple_byte
 13416                           
 13417  000632  0A05               	xorlw	5^0	; case 5
 13418  000634  B4D8               	skipnz
 13419  000636  D5BC               	goto	i2l7393
 13420  000638  0A03               	xorlw	6^5	; case 6
 13421  00063A  B4D8               	skipnz
 13422  00063C  D5E2               	goto	i2l7397
 13423  00063E  0A01               	xorlw	7^6	; case 7
 13424  000640  B4D8               	skipnz
 13425  000642  D6E4               	goto	i2l7411
 13426  000644  0A0F               	xorlw	8^7	; case 8
 13427  000646  B4D8               	skipnz
 13428  000648  D686               	goto	i2l19322
 13429  00064A  D000               	goto	i2l7391
 13430                           
 13431                           	line	378
 13432                           	
 13433  00064C                     i2l7396:; BSR set to: 0
 13434                           
 13435                           	line	379
 13436                           	
 13437  00064C                     i2l7391:; BSR set to: 0
 13438                           
 13439                           	line	382
 13440                           ;my_i2c.c: 379: }
 13441                           ;my_i2c.c: 382: if (data_read || data_written) {
 13442  00064C  0100               	movlb	0	; () banked
 13443  00064E  0100               	movlb	0	; () banked
 13444  000650  67A7               	tstfsz	((i2c_slave_int_handler@data_read))&0ffh
 13445  000652  D001               	goto	i2u225_41
 13446  000654  D001               	goto	i2u225_40
 13447  000656                     i2u225_41:
 13448  000656  D007               	goto	i2l7425
 13449  000658                     i2u225_40:
 13450                           	
 13451  000658                     i2l19374:; BSR set to: 0
 13452                           
 13453  000658  0100               	movlb	0	; () banked
 13454  00065A  0100               	movlb	0	; () banked
 13455  00065C  519F               	movf	((i2c_slave_int_handler@data_written))&0ffh,w
 13456  00065E  B4D8               	btfsc	status,2
 13457  000660  D001               	goto	i2u226_41
 13458  000662  D001               	goto	i2u226_40
 13459  000664                     i2u226_41:
 13460  000664  D007               	goto	i2l19378
 13461  000666                     i2u226_40:
 13462                           	
 13463  000666                     i2l7425:; BSR set to: 0
 13464                           
 13465                           	line	384
 13466                           ;my_i2c.c: 384: if (SSPCON1bits.CKP == 0) {
 13467                           	
 13468  000666  B8C6               	btfsc	((c:4038)),c,4	;volatile
 13469  000668  D001               	goto	i2u227_41
 13470  00066A  D001               	goto	i2u227_40
 13471  00066C                     i2u227_41:
 13472  00066C  D003               	goto	i2l19378
 13473  00066E                     i2u227_40:
 13474                           	line	385
 13475                           	
 13476  00066E                     i2l19376:; BSR set to: 0
 13477                           
 13478                           ;my_i2c.c: 385: SSPCON1bits.CKP = 1;
 13479  00066E  88C6               	bsf	((c:4038)),c,4	;volatile
 13480  000670  D001               	goto	i2l19378
 13481                           	line	386
 13482                           	
 13483  000672                     i2l7426:; BSR set to: 0
 13484                           
 13485  000672  D000               	goto	i2l19378
 13486                           	line	387
 13487                           	
 13488  000674                     i2l7423:; BSR set to: 0
 13489                           
 13490                           	line	390
 13491                           	
 13492  000674                     i2l19378:; BSR set to: 0
 13493                           
 13494                           ;my_i2c.c: 386: }
 13495                           ;my_i2c.c: 387: }
 13496                           ;my_i2c.c: 390: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
 13497  000674  0100               	movlb	0	; () banked
 13498  000676  EE20 F00A          	lfsr	2,0Ah
 13499  00067A  0100               	movlb	0	; () banked
 13500  00067C  51C4               	movf	((_ic_ptr))&0ffh,w
 13501  00067E  26D9               	addwf	fsr2l
 13502  000680  0100               	movlb	0	; () banked
 13503  000682  51C5               	movf	((_ic_ptr+1))&0ffh,w
 13504  000684  22DA               	addwfc	fsr2h
 13505  000686  0E08               	movlw	(09h-1)
 13506  000688  64DF               	cpfsgt	indf2
 13507  00068A  D001               	goto	i2u228_41
 13508  00068C  D001               	goto	i2u228_40
 13509  00068E                     i2u228_41:
 13510  00068E  D027               	goto	i2l19384
 13511  000690                     i2u228_40:
 13512                           	
 13513  000690                     i2l19380:; BSR set to: 0
 13514                           
 13515  000690  0100               	movlb	0	; () banked
 13516  000692  0100               	movlb	0	; () banked
 13517  000694  67A6               	tstfsz	((i2c_slave_int_handler@msg_ready))&0ffh
 13518  000696  D001               	goto	i2u229_41
 13519  000698  D001               	goto	i2u229_40
 13520  00069A                     i2u229_41:
 13521  00069A  D021               	goto	i2l19384
 13522  00069C                     i2u229_40:
 13523                           	line	391
 13524                           	
 13525  00069C                     i2l19382:; BSR set to: 0
 13526                           
 13527                           ;my_i2c.c: 391: ic_ptr->status = 0x5;
 13528  00069C  0100               	movlb	0	; () banked
 13529  00069E  EE20 F00C          	lfsr	2,0Ch
 13530  0006A2  0100               	movlb	0	; () banked
 13531  0006A4  51C4               	movf	((_ic_ptr))&0ffh,w
 13532  0006A6  26D9               	addwf	fsr2l
 13533  0006A8  0100               	movlb	0	; () banked
 13534  0006AA  51C5               	movf	((_ic_ptr+1))&0ffh,w
 13535  0006AC  22DA               	addwfc	fsr2h
 13536  0006AE  0E05               	movlw	low(05h)
 13537  0006B0  6EDF               	movwf	indf2
 13538                           	line	392
 13539                           ;my_i2c.c: 392: ic_ptr->error_count++;
 13540  0006B2  0100               	movlb	0	; () banked
 13541  0006B4  EE20 F00E          	lfsr	2,0Eh
 13542  0006B8  0100               	movlb	0	; () banked
 13543  0006BA  51C4               	movf	((_ic_ptr))&0ffh,w
 13544  0006BC  26D9               	addwf	fsr2l
 13545  0006BE  0100               	movlb	0	; () banked
 13546  0006C0  51C5               	movf	((_ic_ptr+1))&0ffh,w
 13547  0006C2  22DA               	addwfc	fsr2h
 13548  0006C4  2ADF               	incf	indf2
 13549                           
 13550                           	line	393
 13551                           ;my_i2c.c: 393: ic_ptr->error_code = 0x7;
 13552  0006C6  0100               	movlb	0	; () banked
 13553  0006C8  EE20 F00D          	lfsr	2,0Dh
 13554  0006CC  0100               	movlb	0	; () banked
 13555  0006CE  51C4               	movf	((_ic_ptr))&0ffh,w
 13556  0006D0  26D9               	addwf	fsr2l
 13557  0006D2  0100               	movlb	0	; () banked
 13558  0006D4  51C5               	movf	((_ic_ptr+1))&0ffh,w
 13559  0006D6  22DA               	addwfc	fsr2h
 13560  0006D8  0E07               	movlw	low(07h)
 13561  0006DA  6EDF               	movwf	indf2
 13562  0006DC  D000               	goto	i2l19384
 13563                           	line	394
 13564                           	
 13565  0006DE                     i2l7427:; BSR set to: 0
 13566                           
 13567                           	line	396
 13568                           	
 13569  0006DE                     i2l19384:; BSR set to: 0
 13570                           
 13571                           ;my_i2c.c: 394: }
 13572                           ;my_i2c.c: 396: if (msg_ready) {
 13573  0006DE  0100               	movlb	0	; () banked
 13574  0006E0  0100               	movlb	0	; () banked
 13575  0006E2  51A6               	movf	((i2c_slave_int_handler@msg_ready))&0ffh,w
 13576  0006E4  B4D8               	btfsc	status,2
 13577  0006E6  D001               	goto	i2u230_41
 13578  0006E8  D001               	goto	i2u230_40
 13579  0006EA                     i2u230_41:
 13580  0006EA  D069               	goto	i2l19400
 13581  0006EC                     i2u230_40:
 13582                           	line	400
 13583                           	
 13584  0006EC                     i2l19386:; BSR set to: 0
 13585                           
 13586                           ;my_i2c.c: 398: unsigned char data[10];
 13587                           ;my_i2c.c: 399: unsigned char msgtype;
 13588                           ;my_i2c.c: 400: int length = FromMainLow_recvmsg(10, &msgtype, (void *) data);
 13589  0006EC  0100               	movlb	0	; () banked
 13590  0006EE  6F8C               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh
 13591  0006F0  0E0A               	movlw	low(0Ah)
 13592  0006F2  0100               	movlb	0	; () banked
 13593  0006F4  0100               	movlb	0	; () banked
 13594  0006F6  6F87               	movwf	((?_FromMainLow_recvmsg))&0ffh
 13595  0006F8  0100               	movlb	0	; () banked
 13596  0006FA  518C               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,w
 13597  0006FC  0100               	movlb	0	; () banked
 13598  0006FE  0E00               	movlw	high(i2c_slave_int_handler@msgtype)
 13599  000700  0100               	movlb	0	; () banked
 13600  000702  0100               	movlb	0	; () banked
 13601  000704  6F89               	movwf	(1+(?_FromMainLow_recvmsg+01h))&0ffh
 13602  000706  0100               	movlb	0	; () banked
 13603  000708  0EA4               	movlw	low(i2c_slave_int_handler@msgtype)
 13604  00070A  0100               	movlb	0	; () banked
 13605  00070C  6F88               	movwf	(0+(?_FromMainLow_recvmsg+01h))&0ffh
 13606  00070E  0100               	movlb	0	; () banked
 13607  000710  0E00               	movlw	high(i2c_slave_int_handler@data)
 13608  000712  0100               	movlb	0	; () banked
 13609  000714  0100               	movlb	0	; () banked
 13610  000716  6F8B               	movwf	(1+(?_FromMainLow_recvmsg+03h))&0ffh
 13611  000718  0100               	movlb	0	; () banked
 13612  00071A  0E8E               	movlw	low(i2c_slave_int_handler@data)
 13613  00071C  0100               	movlb	0	; () banked
 13614  00071E  6F8A               	movwf	(0+(?_FromMainLow_recvmsg+03h))&0ffh
 13615  000720  0100               	movlb	0	; () banked
 13616  000722  ECEE  F00F         	call	_FromMainLow_recvmsg	;wreg free
 13617  000726  0100               	movlb	0	; () banked
 13618  000728  0100               	movlb	0	; () banked
 13619  00072A  6FA1               	movwf	((i2c_slave_int_handler@length))&0ffh
 13620  00072C  0100               	movlb	0	; () banked
 13621  00072E  6BA2               	clrf	((i2c_slave_int_handler@length+1))&0ffh
 13622  000730  0100               	movlb	0	; () banked
 13623  000732  BFA1               	btfsc	((i2c_slave_int_handler@length))&0ffh,7
 13624  000734  07A2               	decf	((i2c_slave_int_handler@length+1))&0ffh
 13625                           	line	401
 13626                           	
 13627  000736                     i2l19388:; BSR set to: 0
 13628                           
 13629                           ;my_i2c.c: 401: if(length > 0){
 13630  000736  0100               	movlb	0	; () banked
 13631  000738  0100               	movlb	0	; () banked
 13632  00073A  51A2               	movf	((i2c_slave_int_handler@length+1))&0ffh,w
 13633  00073C  0A80               	xorlw	80h
 13634  00073E  0F80               	addlw	-((0)^80h)
 13635  000740  0E01               	movlw	01h
 13636  000742  B4D8               	btfsc	status,2
 13637  000744  5DA1               	subwf	((i2c_slave_int_handler@length))&0ffh,w
 13638  000746  A0D8               	btfss	status,0
 13639  000748  D001               	goto	i2u231_41
 13640  00074A  D001               	goto	i2u231_40
 13641  00074C                     i2u231_41:
 13642  00074C  D00B               	goto	i2l19392
 13643  00074E                     i2u231_40:
 13644                           	line	402
 13645                           	
 13646  00074E                     i2l19390:; BSR set to: 0
 13647                           
 13648                           ;my_i2c.c: 402: start_i2c_slave_reply(length, data);
 13649  00074E  C0A1  F034         	movff	(i2c_slave_int_handler@length),(c:?_start_i2c_slave_reply)
 13650  000752  0100               	movlb	0	; () banked
 13651  000754  0E00               	movlw	high(i2c_slave_int_handler@data)
 13652  000756  6E36               	movwf	(1+((c:?_start_i2c_slave_reply)+01h)),c
 13653  000758  0100               	movlb	0	; () banked
 13654  00075A  0E8E               	movlw	low(i2c_slave_int_handler@data)
 13655  00075C  6E35               	movwf	(0+((c:?_start_i2c_slave_reply)+01h)),c
 13656  00075E  ECB5  F008         	call	_start_i2c_slave_reply	;wreg free
 13657                           	line	403
 13658                           ;my_i2c.c: 403: }
 13659  000762  D08B               	goto	i2l19408
 13660                           	line	404
 13661                           	
 13662  000764                     i2l7429:
 13663                           	line	407
 13664                           	
 13665  000764                     i2l19392:
 13666                           ;my_i2c.c: 404: else {
 13667                           ;my_i2c.c: 406: unsigned char empty[4];
 13668                           ;my_i2c.c: 407: empty[0] = 0x51;
 13669  000764  0100               	movlb	0	; () banked
 13670  000766  6F8C               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh
 13671  000768  0E51               	movlw	low(051h)
 13672  00076A  0100               	movlb	0	; () banked
 13673  00076C  0100               	movlb	0	; () banked
 13674  00076E  6F98               	movwf	((i2c_slave_int_handler@empty))&0ffh
 13675  000770  0100               	movlb	0	; () banked
 13676  000772  518C               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,w
 13677                           	line	408
 13678                           	
 13679  000774                     i2l19394:; BSR set to: 0
 13680                           
 13681                           ;my_i2c.c: 408: empty[1] = emptyMsgCount;
 13682  000774  C0C6  F099         	movff	(_emptyMsgCount),0+(i2c_slave_int_handler@empty+01h)
 13683                           	line	409
 13684                           ;my_i2c.c: 409: empty[2] = 0x0;
 13685  000778  0100               	movlb	0	; () banked
 13686  00077A  6F8C               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh
 13687  00077C  0E00               	movlw	low(0)
 13688  00077E  0100               	movlb	0	; () banked
 13689  000780  0100               	movlb	0	; () banked
 13690  000782  6F9A               	movwf	(0+(i2c_slave_int_handler@empty+02h))&0ffh
 13691  000784  0100               	movlb	0	; () banked
 13692  000786  518C               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,w
 13693                           	line	410
 13694                           ;my_i2c.c: 410: empty[3] = 0x0;
 13695  000788  0100               	movlb	0	; () banked
 13696  00078A  6F8C               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh
 13697  00078C  0E00               	movlw	low(0)
 13698  00078E  0100               	movlb	0	; () banked
 13699  000790  0100               	movlb	0	; () banked
 13700  000792  6F9B               	movwf	(0+(i2c_slave_int_handler@empty+03h))&0ffh
 13701  000794  0100               	movlb	0	; () banked
 13702  000796  518C               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,w
 13703                           	line	411
 13704                           	
 13705  000798                     i2l19396:; BSR set to: 0
 13706                           
 13707                           ;my_i2c.c: 411: emptyMsgCount++;
 13708  000798  0100               	movlb	0	; () banked
 13709  00079A  0100               	movlb	0	; () banked
 13710  00079C  2BC6               	incf	((_emptyMsgCount))&0ffh
 13711                           	line	412
 13712                           	
 13713  00079E                     i2l19398:; BSR set to: 0
 13714                           
 13715                           ;my_i2c.c: 412: start_i2c_slave_reply(4,empty);
 13716  00079E  0100               	movlb	0	; () banked
 13717  0007A0  6F8C               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh
 13718  0007A2  0E04               	movlw	low(04h)
 13719  0007A4  6E34               	movwf	((c:?_start_i2c_slave_reply)),c
 13720  0007A6  0100               	movlb	0	; () banked
 13721  0007A8  518C               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,w
 13722  0007AA  0100               	movlb	0	; () banked
 13723  0007AC  0E00               	movlw	high(i2c_slave_int_handler@empty)
 13724  0007AE  6E36               	movwf	(1+((c:?_start_i2c_slave_reply)+01h)),c
 13725  0007B0  0100               	movlb	0	; () banked
 13726  0007B2  0E98               	movlw	low(i2c_slave_int_handler@empty)
 13727  0007B4  6E35               	movwf	(0+((c:?_start_i2c_slave_reply)+01h)),c
 13728  0007B6  ECB5  F008         	call	_start_i2c_slave_reply	;wreg free
 13729  0007BA  D05F               	goto	i2l19408
 13730                           	line	413
 13731                           	
 13732  0007BC                     i2l7430:
 13733                           	line	416
 13734                           ;my_i2c.c: 413: }
 13735                           ;my_i2c.c: 416: } else if (ic_ptr->error_count >= 1) {
 13736  0007BC  D05E               	goto	i2l19408
 13737                           	
 13738  0007BE                     i2l7428:
 13739                           	
 13740  0007BE                     i2l19400:
 13741  0007BE  0100               	movlb	0	; () banked
 13742  0007C0  EE20 F00E          	lfsr	2,0Eh
 13743  0007C4  0100               	movlb	0	; () banked
 13744  0007C6  51C4               	movf	((_ic_ptr))&0ffh,w
 13745  0007C8  26D9               	addwf	fsr2l
 13746  0007CA  0100               	movlb	0	; () banked
 13747  0007CC  51C5               	movf	((_ic_ptr+1))&0ffh,w
 13748  0007CE  22DA               	addwfc	fsr2h
 13749  0007D0  50DF               	movf	indf2,w
 13750  0007D2  B4D8               	btfsc	status,2
 13751  0007D4  D001               	goto	i2u232_41
 13752  0007D6  D001               	goto	i2u232_40
 13753  0007D8                     i2u232_41:
 13754  0007D8  D050               	goto	i2l19408
 13755  0007DA                     i2u232_40:
 13756                           	line	417
 13757                           	
 13758  0007DA                     i2l19402:; BSR set to: 0
 13759                           
 13760                           ;my_i2c.c: 417: error_buf[0] = ic_ptr->error_count;
 13761  0007DA  0100               	movlb	0	; () banked
 13762  0007DC  EE20 F00E          	lfsr	2,0Eh
 13763  0007E0  0100               	movlb	0	; () banked
 13764  0007E2  51C4               	movf	((_ic_ptr))&0ffh,w
 13765  0007E4  26D9               	addwf	fsr2l
 13766  0007E6  0100               	movlb	0	; () banked
 13767  0007E8  51C5               	movf	((_ic_ptr+1))&0ffh,w
 13768  0007EA  22DA               	addwfc	fsr2h
 13769  0007EC  50DF               	movf	indf2,w
 13770  0007EE  0100               	movlb	0	; () banked
 13771  0007F0  0100               	movlb	0	; () banked
 13772  0007F2  6F9C               	movwf	((i2c_slave_int_handler@error_buf))&0ffh
 13773                           	line	418
 13774                           ;my_i2c.c: 418: error_buf[1] = ic_ptr->error_code;
 13775  0007F4  0100               	movlb	0	; () banked
 13776  0007F6  EE20 F00D          	lfsr	2,0Dh
 13777  0007FA  0100               	movlb	0	; () banked
 13778  0007FC  51C4               	movf	((_ic_ptr))&0ffh,w
 13779  0007FE  26D9               	addwf	fsr2l
 13780  000800  0100               	movlb	0	; () banked
 13781  000802  51C5               	movf	((_ic_ptr+1))&0ffh,w
 13782  000804  22DA               	addwfc	fsr2h
 13783  000806  50DF               	movf	indf2,w
 13784  000808  0100               	movlb	0	; () banked
 13785  00080A  0100               	movlb	0	; () banked
 13786  00080C  6F9D               	movwf	(0+(i2c_slave_int_handler@error_buf+01h))&0ffh
 13787                           	line	419
 13788                           ;my_i2c.c: 419: error_buf[2] = ic_ptr->event_count;
 13789  00080E  0100               	movlb	0	; () banked
 13790  000810  EE20 F00B          	lfsr	2,0Bh
 13791  000814  0100               	movlb	0	; () banked
 13792  000816  51C4               	movf	((_ic_ptr))&0ffh,w
 13793  000818  26D9               	addwf	fsr2l
 13794  00081A  0100               	movlb	0	; () banked
 13795  00081C  51C5               	movf	((_ic_ptr+1))&0ffh,w
 13796  00081E  22DA               	addwfc	fsr2h
 13797  000820  50DF               	movf	indf2,w
 13798  000822  0100               	movlb	0	; () banked
 13799  000824  0100               	movlb	0	; () banked
 13800  000826  6F9E               	movwf	(0+(i2c_slave_int_handler@error_buf+02h))&0ffh
 13801                           	line	420
 13802                           	
 13803  000828                     i2l19404:; BSR set to: 0
 13804                           
 13805                           ;my_i2c.c: 420: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
 13806  000828  0100               	movlb	0	; () banked
 13807  00082A  6F8C               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh
 13808  00082C  0E03               	movlw	low(03h)
 13809  00082E  0100               	movlb	0	; () banked
 13810  000830  0100               	movlb	0	; () banked
 13811  000832  6F85               	movwf	((?_ToMainHigh_sendmsg))&0ffh
 13812  000834  0100               	movlb	0	; () banked
 13813  000836  518C               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,w
 13814  000838  0100               	movlb	0	; () banked
 13815  00083A  6F8D               	movwf	(??_i2c_slave_int_handler+1+0)&0ffh
 13816  00083C  0E29               	movlw	low(029h)
 13817  00083E  0100               	movlb	0	; () banked
 13818  000840  0100               	movlb	0	; () banked
 13819  000842  6F86               	movwf	(0+(?_ToMainHigh_sendmsg+01h))&0ffh
 13820  000844  0100               	movlb	0	; () banked
 13821  000846  518D               	movf	(??_i2c_slave_int_handler+1+0)&0ffh,w
 13822  000848  0100               	movlb	0	; () banked
 13823  00084A  0E00               	movlw	high(i2c_slave_int_handler@error_buf)
 13824  00084C  0100               	movlb	0	; () banked
 13825  00084E  0100               	movlb	0	; () banked
 13826  000850  6F88               	movwf	(1+(?_ToMainHigh_sendmsg+02h))&0ffh
 13827  000852  0100               	movlb	0	; () banked
 13828  000854  0E9C               	movlw	low(i2c_slave_int_handler@error_buf)
 13829  000856  0100               	movlb	0	; () banked
 13830  000858  6F87               	movwf	(0+(?_ToMainHigh_sendmsg+02h))&0ffh
 13831  00085A  0100               	movlb	0	; () banked
 13832  00085C  EC3A  F010         	call	_ToMainHigh_sendmsg	;wreg free
 13833                           	line	421
 13834                           	
 13835  000860                     i2l19406:
 13836                           ;my_i2c.c: 421: ic_ptr->error_count = 0;
 13837  000860  0100               	movlb	0	; () banked
 13838  000862  EE20 F00E          	lfsr	2,0Eh
 13839  000866  0100               	movlb	0	; () banked
 13840  000868  51C4               	movf	((_ic_ptr))&0ffh,w
 13841  00086A  26D9               	addwf	fsr2l
 13842  00086C  0100               	movlb	0	; () banked
 13843  00086E  51C5               	movf	((_ic_ptr+1))&0ffh,w
 13844  000870  22DA               	addwfc	fsr2h
 13845  000872  0E00               	movlw	low(0)
 13846  000874  6EDF               	movwf	indf2
 13847  000876  D001               	goto	i2l19408
 13848                           	line	422
 13849                           	
 13850  000878                     i2l7432:; BSR set to: 0
 13851                           
 13852  000878  D000               	goto	i2l19408
 13853                           	line	423
 13854                           	
 13855  00087A                     i2l7431:; BSR set to: 0
 13856                           
 13857                           	
 13858  00087A                     i2l19408:
 13859                           ;my_i2c.c: 422: }
 13860                           ;my_i2c.c: 423: if (msg_to_send) {
 13861  00087A  0100               	movlb	0	; () banked
 13862  00087C  0100               	movlb	0	; () banked
 13863  00087E  51A5               	movf	((i2c_slave_int_handler@msg_to_send))&0ffh,w
 13864  000880  B4D8               	btfsc	status,2
 13865  000882  D001               	goto	i2u233_41
 13866  000884  D001               	goto	i2u233_40
 13867  000886                     i2u233_41:
 13868  000886  D009               	goto	i2l7434
 13869  000888                     i2u233_40:
 13870                           	line	430
 13871                           	
 13872  000888                     i2l19410:; BSR set to: 0
 13873                           
 13874                           ;my_i2c.c: 430: msg_to_send = 0;
 13875  000888  0100               	movlb	0	; () banked
 13876  00088A  6F8C               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh
 13877  00088C  0E00               	movlw	low(0)
 13878  00088E  0100               	movlb	0	; () banked
 13879  000890  0100               	movlb	0	; () banked
 13880  000892  6FA5               	movwf	((i2c_slave_int_handler@msg_to_send))&0ffh
 13881  000894  0100               	movlb	0	; () banked
 13882  000896  518C               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,w
 13883  000898  D000               	goto	i2l7434
 13884                           	line	431
 13885                           	
 13886  00089A                     i2l7433:; BSR set to: 0
 13887                           
 13888                           	line	432
 13889                           	
 13890  00089A                     i2l7434:; BSR set to: 0
 13891                           
 13892  00089A  0012               	return
 13893                           	opt stack 0
 13894                           GLOBAL	__end_of_i2c_slave_int_handler
 13895  00089C                     	__end_of_i2c_slave_int_handler:
 13896                           	signat	_i2c_slave_int_handler,88
 13897                           	global	_ToMainHigh_sendmsg
 13898                           
 13899 ;; *************** function _ToMainHigh_sendmsg *****************
 13900 ;; Defined at:
 13901 ;;		line 126 in file "../src/messages.c"
 13902 ;; Parameters:    Size  Location     Type
 13903 ;;  length          1    5[BANK0 ] unsigned char 
 13904 ;;  msgtype         1    6[BANK0 ] unsigned char 
 13905 ;;  data            2    7[BANK0 ] PTR void 
 13906 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@error_buf(3), 
 13907 ;; Auto vars:     Size  Location     Type
 13908 ;;		None
 13909 ;; Return value:  Size  Location     Type
 13910 ;;                  1    wreg      char 
 13911 ;; Registers used:
 13912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13913 ;; Tracked objects:
 13914 ;;		On entry : 0/0
 13915 ;;		On exit  : 0/0
 13916 ;;		Unchanged: 0/0
 13917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13918 ;;      Params:         0       4       0       0       0
 13919 ;;      Locals:         0       0       0       0       0
 13920 ;;      Temps:          0       0       0       0       0
 13921 ;;      Totals:         0       4       0       0       0
 13922 ;;Total ram usage:        4 bytes
 13923 ;; Hardware stack levels used:    1
 13924 ;; Hardware stack levels required when called:    2
 13925 ;; This function calls:
 13926 ;;		i2_send_msg
 13927 ;; This function is called by:
 13928 ;;		_i2c_slave_int_handler
 13929 ;;		_timer0_int_handler
 13930 ;; This function uses a non-reentrant model
 13931 ;;
 13932                           psect	text46,class=CODE,space=0,reloc=2
 13933                           global __ptext46
 13934  002074                     __ptext46:
 13935                           psect	text46
 13936                           	file	"../src/messages.c"
 13937                           	line	126
 13938                           	global	__size_of_ToMainHigh_sendmsg
 13939  0000                     	__size_of_ToMainHigh_sendmsg	equ	__end_of_ToMainHigh_sendmsg-_ToMainHigh_sendmsg
 13940                           	
 13941  002074                     _ToMainHigh_sendmsg:; BSR set to: 0
 13942                           
 13943                           	opt	stack 17
 13944                           	line	132
 13945                           	
 13946  002074                     i2l19228:
 13947                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
 13948                           ;	Return value of _ToMainHigh_sendmsg is never used
 13949  002074  0101               	movlb	1	; () banked
 13950  002076  0E01               	movlw	high(_ToMainHigh_MQ)
 13951  002078  6E3F               	movwf	((c:?i2_send_msg+1)),c
 13952  00207A  0101               	movlb	1	; () banked
 13953  00207C  0E36               	movlw	low(_ToMainHigh_MQ)
 13954  00207E  6E3E               	movwf	((c:?i2_send_msg)),c
 13955  002080  C085  F040         	movff	(ToMainHigh_sendmsg@length),0+((c:?i2_send_msg)+02h)
 13956  002084  C086  F041         	movff	(ToMainHigh_sendmsg@msgtype),0+((c:?i2_send_msg)+03h)
 13957  002088  C087  F042         	movff	(ToMainHigh_sendmsg@data),0+((c:?i2_send_msg)+04h)
 13958  00208C  C088  F043         	movff	(ToMainHigh_sendmsg@data+1),1+((c:?i2_send_msg)+04h)
 13959  002090  EC31  F009         	call	i2_send_msg	;wreg free
 13960  002094  D000               	goto	i2l5493
 13961                           	
 13962  002096                     i2l19230:
 13963                           	line	133
 13964                           	
 13965  002096                     i2l5493:
 13966  002096  0012               	return
 13967                           	opt stack 0
 13968                           GLOBAL	__end_of_ToMainHigh_sendmsg
 13969  002098                     	__end_of_ToMainHigh_sendmsg:
 13970                           	signat	_ToMainHigh_sendmsg,12409
 13971                           	global	_FromMainLow_recvmsg
 13972                           
 13973 ;; *************** function _FromMainLow_recvmsg *****************
 13974 ;; Defined at:
 13975 ;;		line 159 in file "../src/messages.c"
 13976 ;; Parameters:    Size  Location     Type
 13977 ;;  maxlength       1    7[BANK0 ] unsigned char 
 13978 ;;  msgtype         2    8[BANK0 ] PTR unsigned char 
 13979 ;;		 -> i2c_slave_int_handler@msgtype(1), 
 13980 ;;  data            2   10[BANK0 ] PTR void 
 13981 ;;		 -> i2c_slave_int_handler@data(10), 
 13982 ;; Auto vars:     Size  Location     Type
 13983 ;;		None
 13984 ;; Return value:  Size  Location     Type
 13985 ;;                  1    wreg      char 
 13986 ;; Registers used:
 13987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13988 ;; Tracked objects:
 13989 ;;		On entry : 0/0
 13990 ;;		On exit  : 0/0
 13991 ;;		Unchanged: 0/0
 13992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13993 ;;      Params:         0       5       0       0       0
 13994 ;;      Locals:         0       0       0       0       0
 13995 ;;      Temps:          0       0       0       0       0
 13996 ;;      Totals:         0       5       0       0       0
 13997 ;;Total ram usage:        5 bytes
 13998 ;; Hardware stack levels used:    1
 13999 ;; Hardware stack levels required when called:    2
 14000 ;; This function calls:
 14001 ;;		i2_recv_msg
 14002 ;; This function is called by:
 14003 ;;		_i2c_slave_int_handler
 14004 ;; This function uses a non-reentrant model
 14005 ;;
 14006                           psect	text47,class=CODE,space=0,reloc=2
 14007                           global __ptext47
 14008  001FDC                     __ptext47:
 14009                           psect	text47
 14010                           	file	"../src/messages.c"
 14011                           	line	159
 14012                           	global	__size_of_FromMainLow_recvmsg
 14013  0000                     	__size_of_FromMainLow_recvmsg	equ	__end_of_FromMainLow_recvmsg-_FromMainLow_recvmsg
 14014                           	
 14015  001FDC                     _FromMainLow_recvmsg:
 14016                           	opt	stack 16
 14017                           	line	165
 14018                           	
 14019  001FDC                     i2l19232:
 14020                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
 14021  001FDC  0101               	movlb	1	; () banked
 14022  001FDE  0E01               	movlw	high(_FromMainLow_MQ)
 14023  001FE0  6E3F               	movwf	((c:?i2_recv_msg+1)),c
 14024  001FE2  0101               	movlb	1	; () banked
 14025  001FE4  0E00               	movlw	low(_FromMainLow_MQ)
 14026  001FE6  6E3E               	movwf	((c:?i2_recv_msg)),c
 14027  001FE8  C087  F040         	movff	(FromMainLow_recvmsg@maxlength),0+((c:?i2_recv_msg)+02h)
 14028  001FEC  C088  F041         	movff	(FromMainLow_recvmsg@msgtype),0+((c:?i2_recv_msg)+03h)
 14029  001FF0  C089  F042         	movff	(FromMainLow_recvmsg@msgtype+1),1+((c:?i2_recv_msg)+03h)
 14030  001FF4  C08A  F043         	movff	(FromMainLow_recvmsg@data),0+((c:?i2_recv_msg)+05h)
 14031  001FF8  C08B  F044         	movff	(FromMainLow_recvmsg@data+1),1+((c:?i2_recv_msg)+05h)
 14032  001FFC  EC1D  F007         	call	i2_recv_msg	;wreg free
 14033  002000  D000               	goto	i2l5504
 14034                           	
 14035  002002                     i2l19234:
 14036                           	line	166
 14037                           	
 14038  002002                     i2l5504:
 14039  002002  0012               	return
 14040                           	opt stack 0
 14041                           GLOBAL	__end_of_FromMainLow_recvmsg
 14042  002004                     	__end_of_FromMainLow_recvmsg:
 14043                           	signat	_FromMainLow_recvmsg,12409
 14044                           	global	_start_i2c_slave_reply
 14045                           
 14046 ;; *************** function _start_i2c_slave_reply *****************
 14047 ;; Defined at:
 14048 ;;		line 121 in file "../src/my_i2c.c"
 14049 ;; Parameters:    Size  Location     Type
 14050 ;;  length          1   51[COMRAM] unsigned char 
 14051 ;;  msg             2   52[COMRAM] PTR unsigned char 
 14052 ;;		 -> i2c_slave_int_handler@empty(4), i2c_slave_int_handler@data(10), 
 14053 ;; Auto vars:     Size  Location     Type
 14054 ;;		None
 14055 ;; Return value:  Size  Location     Type
 14056 ;;		None               void
 14057 ;; Registers used:
 14058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14059 ;; Tracked objects:
 14060 ;;		On entry : 0/0
 14061 ;;		On exit  : 0/0
 14062 ;;		Unchanged: 0/0
 14063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14064 ;;      Params:         3       0       0       0       0
 14065 ;;      Locals:         0       0       0       0       0
 14066 ;;      Temps:          2       0       0       0       0
 14067 ;;      Totals:         5       0       0       0       0
 14068 ;;Total ram usage:        5 bytes
 14069 ;; Hardware stack levels used:    1
 14070 ;; This function calls:
 14071 ;;		Nothing
 14072 ;; This function is called by:
 14073 ;;		_i2c_slave_int_handler
 14074 ;; This function uses a non-reentrant model
 14075 ;;
 14076                           psect	text48,class=CODE,space=0,reloc=2
 14077                           global __ptext48
 14078  00116A                     __ptext48:
 14079                           psect	text48
 14080                           	file	"../src/my_i2c.c"
 14081                           	line	121
 14082                           	global	__size_of_start_i2c_slave_reply
 14083  0000                     	__size_of_start_i2c_slave_reply	equ	__end_of_start_i2c_slave_reply-_start_i2c_slave_rep
                                 ly
 14084                           	
 14085  00116A                     _start_i2c_slave_reply:
 14086                           	opt	stack 18
 14087                           	line	123
 14088                           	
 14089  00116A                     i2l18620:
 14090                           ;my_i2c.c: 123: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbufle
                                 n++) {
 14091  00116A  0100               	movlb	0	; () banked
 14092  00116C  EE20 F019          	lfsr	2,019h
 14093  001170  0100               	movlb	0	; () banked
 14094  001172  51C4               	movf	((_ic_ptr))&0ffh,w
 14095  001174  26D9               	addwf	fsr2l
 14096  001176  0100               	movlb	0	; () banked
 14097  001178  51C5               	movf	((_ic_ptr+1))&0ffh,w
 14098  00117A  22DA               	addwfc	fsr2h
 14099  00117C  0E00               	movlw	low(0)
 14100  00117E  6EDF               	movwf	indf2
 14101  001180  D03B               	goto	i2l18626
 14102                           	
 14103  001182                     i2l7355:; BSR set to: 0
 14104                           
 14105                           	line	124
 14106                           	
 14107  001182                     i2l18622:; BSR set to: 0
 14108                           
 14109                           ;my_i2c.c: 124: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
 14110  001182  0100               	movlb	0	; () banked
 14111  001184  EE20 F019          	lfsr	2,019h
 14112  001188  0100               	movlb	0	; () banked
 14113  00118A  51C4               	movf	((_ic_ptr))&0ffh,w
 14114  00118C  26D9               	addwf	fsr2l
 14115  00118E  0100               	movlb	0	; () banked
 14116  001190  51C5               	movf	((_ic_ptr+1))&0ffh,w
 14117  001192  22DA               	addwfc	fsr2h
 14118  001194  50DF               	movf	indf2,w
 14119  001196  6E37               	movwf	(??_start_i2c_slave_reply+0+0)&0ffh,c
 14120  001198  5037               	movf	((??_start_i2c_slave_reply+0+0)),c,w
 14121  00119A  0D01               	mullw	01h
 14122  00119C  50F3               	movf	(prodl),c,w
 14123  00119E  2435               	addwf	((c:start_i2c_slave_reply@msg)),c,w
 14124  0011A0  6ED9               	movwf	c:fsr2l
 14125  0011A2  50F4               	movf	(prodh),c,w
 14126  0011A4  2036               	addwfc	((c:start_i2c_slave_reply@msg+1)),c,w
 14127  0011A6  6EDA               	movwf	1+c:fsr2l
 14128  0011A8  0100               	movlb	0	; () banked
 14129  0011AA  EE10 F019          	lfsr	1,019h
 14130  0011AE  0100               	movlb	0	; () banked
 14131  0011B0  51C4               	movf	((_ic_ptr))&0ffh,w
 14132  0011B2  26E1               	addwf	fsr1l
 14133  0011B4  0100               	movlb	0	; () banked
 14134  0011B6  51C5               	movf	((_ic_ptr+1))&0ffh,w
 14135  0011B8  22E2               	addwfc	fsr1h
 14136  0011BA  50E7               	movf	indf1,w
 14137  0011BC  6E38               	movwf	(??_start_i2c_slave_reply+1+0)&0ffh,c
 14138  0011BE  5038               	movf	((??_start_i2c_slave_reply+1+0)),c,w
 14139  0011C0  0D01               	mullw	01h
 14140  0011C2  0E0F               	movlw	0Fh
 14141  0011C4  26F3               	addwf	(prodl),c
 14142  0011C6  0E00               	movlw	0
 14143  0011C8  22F4               	addwfc	(prodh),c
 14144  0011CA  50F3               	movf	(prodl),c,w
 14145  0011CC  0100               	movlb	0	; () banked
 14146  0011CE  0100               	movlb	0	; () banked
 14147  0011D0  25C4               	addwf	((_ic_ptr))&0ffh,w
 14148  0011D2  6EE1               	movwf	c:fsr1l
 14149  0011D4  50F4               	movf	(prodh),c,w
 14150  0011D6  0100               	movlb	0	; () banked
 14151  0011D8  0100               	movlb	0	; () banked
 14152  0011DA  21C5               	addwfc	((_ic_ptr+1))&0ffh,w
 14153  0011DC  6EE2               	movwf	1+c:fsr1l
 14154  0011DE  CFDF FFE7          	movff	indf2,indf1
 14155                           	line	123
 14156                           	
 14157  0011E2                     i2l18624:; BSR set to: 0
 14158                           
 14159  0011E2  0100               	movlb	0	; () banked
 14160  0011E4  EE20 F019          	lfsr	2,019h
 14161  0011E8  0100               	movlb	0	; () banked
 14162  0011EA  51C4               	movf	((_ic_ptr))&0ffh,w
 14163  0011EC  26D9               	addwf	fsr2l
 14164  0011EE  0100               	movlb	0	; () banked
 14165  0011F0  51C5               	movf	((_ic_ptr+1))&0ffh,w
 14166  0011F2  22DA               	addwfc	fsr2h
 14167  0011F4  2ADF               	incf	indf2
 14168                           
 14169  0011F6  D000               	goto	i2l18626
 14170                           	
 14171  0011F8                     i2l7354:; BSR set to: 0
 14172                           
 14173                           	
 14174  0011F8                     i2l18626:; BSR set to: 0
 14175                           
 14176  0011F8  0100               	movlb	0	; () banked
 14177  0011FA  EE20 F019          	lfsr	2,019h
 14178  0011FE  0100               	movlb	0	; () banked
 14179  001200  51C4               	movf	((_ic_ptr))&0ffh,w
 14180  001202  26D9               	addwf	fsr2l
 14181  001204  0100               	movlb	0	; () banked
 14182  001206  51C5               	movf	((_ic_ptr+1))&0ffh,w
 14183  001208  22DA               	addwfc	fsr2h
 14184  00120A  50DF               	movf	indf2,w
 14185  00120C  6E37               	movwf	(??_start_i2c_slave_reply+0+0)&0ffh,c
 14186  00120E  5034               	movf	((c:start_i2c_slave_reply@length)),c,w
 14187  001210  5C37               	subwf	((??_start_i2c_slave_reply+0+0)),c,w
 14188  001212  A0D8               	btfss	status,0
 14189  001214  D001               	goto	i2u143_41
 14190  001216  D001               	goto	i2u143_40
 14191  001218                     i2u143_41:
 14192  001218  D7B4               	goto	i2l18622
 14193  00121A                     i2u143_40:
 14194  00121A  D000               	goto	i2l18628
 14195                           	
 14196  00121C                     i2l7356:; BSR set to: 0
 14197                           
 14198                           	line	126
 14199                           	
 14200  00121C                     i2l18628:; BSR set to: 0
 14201                           
 14202                           ;my_i2c.c: 125: }
 14203                           ;my_i2c.c: 126: ic_ptr->outbuflen = length;
 14204  00121C  0100               	movlb	0	; () banked
 14205  00121E  EE20 F019          	lfsr	2,019h
 14206  001222  0100               	movlb	0	; () banked
 14207  001224  51C4               	movf	((_ic_ptr))&0ffh,w
 14208  001226  26D9               	addwf	fsr2l
 14209  001228  0100               	movlb	0	; () banked
 14210  00122A  51C5               	movf	((_ic_ptr+1))&0ffh,w
 14211  00122C  22DA               	addwfc	fsr2h
 14212  00122E  C034  FFDF         	movff	(c:start_i2c_slave_reply@length),indf2
 14213                           
 14214                           	line	127
 14215                           ;my_i2c.c: 127: ic_ptr->outbufind = 1;
 14216  001232  0100               	movlb	0	; () banked
 14217  001234  EE20 F01A          	lfsr	2,01Ah
 14218  001238  0100               	movlb	0	; () banked
 14219  00123A  51C4               	movf	((_ic_ptr))&0ffh,w
 14220  00123C  26D9               	addwf	fsr2l
 14221  00123E  0100               	movlb	0	; () banked
 14222  001240  51C5               	movf	((_ic_ptr+1))&0ffh,w
 14223  001242  22DA               	addwfc	fsr2h
 14224  001244  0E01               	movlw	low(01h)
 14225  001246  6EDF               	movwf	indf2
 14226                           	line	130
 14227                           ;my_i2c.c: 130: SSPBUF = ic_ptr->outbuffer[0];
 14228  001248  0100               	movlb	0	; () banked
 14229  00124A  EE20 F00F          	lfsr	2,0Fh
 14230  00124E  0100               	movlb	0	; () banked
 14231  001250  51C4               	movf	((_ic_ptr))&0ffh,w
 14232  001252  26D9               	addwf	fsr2l
 14233  001254  0100               	movlb	0	; () banked
 14234  001256  51C5               	movf	((_ic_ptr+1))&0ffh,w
 14235  001258  22DA               	addwfc	fsr2h
 14236  00125A  50DF               	movf	indf2,w
 14237  00125C  6EC9               	movwf	((c:4041)),c	;volatile
 14238                           	line	133
 14239                           	
 14240  00125E                     i2l18630:; BSR set to: 0
 14241                           
 14242                           ;my_i2c.c: 133: SSPCON1bits.CKP = 1;
 14243  00125E  88C6               	bsf	((c:4038)),c,4	;volatile
 14244                           	line	135
 14245                           	
 14246  001260                     i2l7357:; BSR set to: 0
 14247                           
 14248  001260  0012               	return
 14249                           	opt stack 0
 14250                           GLOBAL	__end_of_start_i2c_slave_reply
 14251  001262                     	__end_of_start_i2c_slave_reply:
 14252                           	signat	_start_i2c_slave_reply,8312
 14253                           	global	_handle_start
 14254                           
 14255 ;; *************** function _handle_start *****************
 14256 ;; Defined at:
 14257 ;;		line 139 in file "../src/my_i2c.c"
 14258 ;; Parameters:    Size  Location     Type
 14259 ;;  data_read       1   51[COMRAM] unsigned char 
 14260 ;; Auto vars:     Size  Location     Type
 14261 ;;		None
 14262 ;; Return value:  Size  Location     Type
 14263 ;;		None               void
 14264 ;; Registers used:
 14265 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14266 ;; Tracked objects:
 14267 ;;		On entry : 0/0
 14268 ;;		On exit  : 0/0
 14269 ;;		Unchanged: 0/0
 14270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14271 ;;      Params:         1       0       0       0       0
 14272 ;;      Locals:         0       0       0       0       0
 14273 ;;      Temps:          0       0       0       0       0
 14274 ;;      Totals:         1       0       0       0       0
 14275 ;;Total ram usage:        1 bytes
 14276 ;; Hardware stack levels used:    1
 14277 ;; This function calls:
 14278 ;;		Nothing
 14279 ;; This function is called by:
 14280 ;;		_i2c_slave_int_handler
 14281 ;; This function uses a non-reentrant model
 14282 ;;
 14283                           psect	text49,class=CODE,space=0,reloc=2
 14284                           global __ptext49
 14285  00133C                     __ptext49:
 14286                           psect	text49
 14287                           	file	"../src/my_i2c.c"
 14288                           	line	139
 14289                           	global	__size_of_handle_start
 14290  0000                     	__size_of_handle_start	equ	__end_of_handle_start-_handle_start
 14291                           	
 14292  00133C                     _handle_start:; BSR set to: 0
 14293                           
 14294                           	opt	stack 18
 14295                           	line	140
 14296                           	
 14297  00133C                     i2l18632:
 14298                           ;my_i2c.c: 140: ic_ptr->event_count = 1;
 14299  00133C  0100               	movlb	0	; () banked
 14300  00133E  EE20 F00B          	lfsr	2,0Bh
 14301  001342  0100               	movlb	0	; () banked
 14302  001344  51C4               	movf	((_ic_ptr))&0ffh,w
 14303  001346  26D9               	addwf	fsr2l
 14304  001348  0100               	movlb	0	; () banked
 14305  00134A  51C5               	movf	((_ic_ptr+1))&0ffh,w
 14306  00134C  22DA               	addwfc	fsr2h
 14307  00134E  0E01               	movlw	low(01h)
 14308  001350  6EDF               	movwf	indf2
 14309                           	line	141
 14310                           ;my_i2c.c: 141: ic_ptr->buflen = 0;
 14311  001352  0100               	movlb	0	; () banked
 14312  001354  EE20 F00A          	lfsr	2,0Ah
 14313  001358  0100               	movlb	0	; () banked
 14314  00135A  51C4               	movf	((_ic_ptr))&0ffh,w
 14315  00135C  26D9               	addwf	fsr2l
 14316  00135E  0100               	movlb	0	; () banked
 14317  001360  51C5               	movf	((_ic_ptr+1))&0ffh,w
 14318  001362  22DA               	addwfc	fsr2h
 14319  001364  0E00               	movlw	low(0)
 14320  001366  6EDF               	movwf	indf2
 14321                           	line	143
 14322                           	
 14323  001368                     i2l18634:; BSR set to: 0
 14324                           
 14325                           ;my_i2c.c: 143: if (data_read) {
 14326  001368  5034               	movf	((c:handle_start@data_read)),c,w
 14327  00136A  B4D8               	btfsc	status,2
 14328  00136C  D001               	goto	i2u144_41
 14329  00136E  D001               	goto	i2u144_40
 14330  001370                     i2u144_41:
 14331  001370  D043               	goto	i2l18644
 14332  001372                     i2u144_40:
 14333                           	line	144
 14334                           	
 14335  001372                     i2l18636:; BSR set to: 0
 14336                           
 14337                           ;my_i2c.c: 144: if (SSPSTATbits.D_A == 1) {
 14338                           	
 14339  001372  AAC7               	btfss	((c:4039)),c,5	;volatile
 14340  001374  D001               	goto	i2u145_41
 14341  001376  D001               	goto	i2u145_40
 14342  001378                     i2u145_41:
 14343  001378  D021               	goto	i2l7361
 14344  00137A                     i2u145_40:
 14345                           	line	147
 14346                           	
 14347  00137A                     i2l18638:; BSR set to: 0
 14348                           
 14349                           ;my_i2c.c: 147: ic_ptr->status = 0x5;
 14350  00137A  0100               	movlb	0	; () banked
 14351  00137C  EE20 F00C          	lfsr	2,0Ch
 14352  001380  0100               	movlb	0	; () banked
 14353  001382  51C4               	movf	((_ic_ptr))&0ffh,w
 14354  001384  26D9               	addwf	fsr2l
 14355  001386  0100               	movlb	0	; () banked
 14356  001388  51C5               	movf	((_ic_ptr+1))&0ffh,w
 14357  00138A  22DA               	addwfc	fsr2h
 14358  00138C  0E05               	movlw	low(05h)
 14359  00138E  6EDF               	movwf	indf2
 14360                           	line	148
 14361                           ;my_i2c.c: 148: ic_ptr->error_count++;
 14362  001390  0100               	movlb	0	; () banked
 14363  001392  EE20 F00E          	lfsr	2,0Eh
 14364  001396  0100               	movlb	0	; () banked
 14365  001398  51C4               	movf	((_ic_ptr))&0ffh,w
 14366  00139A  26D9               	addwf	fsr2l
 14367  00139C  0100               	movlb	0	; () banked
 14368  00139E  51C5               	movf	((_ic_ptr+1))&0ffh,w
 14369  0013A0  22DA               	addwfc	fsr2h
 14370  0013A2  2ADF               	incf	indf2
 14371                           
 14372                           	line	149
 14373                           ;my_i2c.c: 149: ic_ptr->error_code = 0x5;
 14374  0013A4  0100               	movlb	0	; () banked
 14375  0013A6  EE20 F00D          	lfsr	2,0Dh
 14376  0013AA  0100               	movlb	0	; () banked
 14377  0013AC  51C4               	movf	((_ic_ptr))&0ffh,w
 14378  0013AE  26D9               	addwf	fsr2l
 14379  0013B0  0100               	movlb	0	; () banked
 14380  0013B2  51C5               	movf	((_ic_ptr+1))&0ffh,w
 14381  0013B4  22DA               	addwfc	fsr2h
 14382  0013B6  0E05               	movlw	low(05h)
 14383  0013B8  6EDF               	movwf	indf2
 14384                           	line	150
 14385                           ;my_i2c.c: 150: } else {
 14386  0013BA  D02A               	goto	i2l7366
 14387                           	
 14388  0013BC                     i2l7361:; BSR set to: 0
 14389                           
 14390                           	line	151
 14391                           ;my_i2c.c: 151: if (SSPSTATbits.R_W == 1) {
 14392                           	
 14393  0013BC  A4C7               	btfss	((c:4039)),c,2	;volatile
 14394  0013BE  D001               	goto	i2u146_41
 14395  0013C0  D001               	goto	i2u146_40
 14396  0013C2                     i2u146_41:
 14397  0013C2  D00C               	goto	i2l18642
 14398  0013C4                     i2u146_40:
 14399                           	line	152
 14400                           	
 14401  0013C4                     i2l18640:; BSR set to: 0
 14402                           
 14403                           ;my_i2c.c: 152: ic_ptr->status = 0x8;
 14404  0013C4  0100               	movlb	0	; () banked
 14405  0013C6  EE20 F00C          	lfsr	2,0Ch
 14406  0013CA  0100               	movlb	0	; () banked
 14407  0013CC  51C4               	movf	((_ic_ptr))&0ffh,w
 14408  0013CE  26D9               	addwf	fsr2l
 14409  0013D0  0100               	movlb	0	; () banked
 14410  0013D2  51C5               	movf	((_ic_ptr+1))&0ffh,w
 14411  0013D4  22DA               	addwfc	fsr2h
 14412  0013D6  0E08               	movlw	low(08h)
 14413  0013D8  6EDF               	movwf	indf2
 14414                           	line	153
 14415                           ;my_i2c.c: 153: } else {
 14416  0013DA  D01A               	goto	i2l7366
 14417                           	
 14418  0013DC                     i2l7363:; BSR set to: 0
 14419                           
 14420                           	line	154
 14421                           	
 14422  0013DC                     i2l18642:; BSR set to: 0
 14423                           
 14424                           ;my_i2c.c: 154: ic_ptr->status = 0x7;
 14425  0013DC  0100               	movlb	0	; () banked
 14426  0013DE  EE20 F00C          	lfsr	2,0Ch
 14427  0013E2  0100               	movlb	0	; () banked
 14428  0013E4  51C4               	movf	((_ic_ptr))&0ffh,w
 14429  0013E6  26D9               	addwf	fsr2l
 14430  0013E8  0100               	movlb	0	; () banked
 14431  0013EA  51C5               	movf	((_ic_ptr+1))&0ffh,w
 14432  0013EC  22DA               	addwfc	fsr2h
 14433  0013EE  0E07               	movlw	low(07h)
 14434  0013F0  6EDF               	movwf	indf2
 14435  0013F2  D00E               	goto	i2l7366
 14436                           	line	155
 14437                           	
 14438  0013F4                     i2l7364:; BSR set to: 0
 14439                           
 14440  0013F4  D00D               	goto	i2l7366
 14441                           	line	156
 14442                           	
 14443  0013F6                     i2l7362:; BSR set to: 0
 14444                           
 14445                           	line	157
 14446                           ;my_i2c.c: 155: }
 14447                           ;my_i2c.c: 156: }
 14448                           ;my_i2c.c: 157: } else {
 14449  0013F6  D00C               	goto	i2l7366
 14450                           	
 14451  0013F8                     i2l7360:; BSR set to: 0
 14452                           
 14453                           	line	158
 14454                           	
 14455  0013F8                     i2l18644:; BSR set to: 0
 14456                           
 14457                           ;my_i2c.c: 158: ic_ptr->status = 0x6;
 14458  0013F8  0100               	movlb	0	; () banked
 14459  0013FA  EE20 F00C          	lfsr	2,0Ch
 14460  0013FE  0100               	movlb	0	; () banked
 14461  001400  51C4               	movf	((_ic_ptr))&0ffh,w
 14462  001402  26D9               	addwf	fsr2l
 14463  001404  0100               	movlb	0	; () banked
 14464  001406  51C5               	movf	((_ic_ptr+1))&0ffh,w
 14465  001408  22DA               	addwfc	fsr2h
 14466  00140A  0E06               	movlw	low(06h)
 14467  00140C  6EDF               	movwf	indf2
 14468  00140E  D000               	goto	i2l7366
 14469                           	line	159
 14470                           	
 14471  001410                     i2l7365:; BSR set to: 0
 14472                           
 14473                           	line	160
 14474                           	
 14475  001410                     i2l7366:; BSR set to: 0
 14476                           
 14477  001410  0012               	return
 14478                           	opt stack 0
 14479                           GLOBAL	__end_of_handle_start
 14480  001412                     	__end_of_handle_start:
 14481                           	signat	_handle_start,4216
 14482                           	global	_i2c_master_int_handler
 14483                           
 14484 ;; *************** function _i2c_master_int_handler *****************
 14485 ;; Defined at:
 14486 ;;		line 184 in file "../src/my_i2c.c"
 14487 ;; Parameters:    Size  Location     Type
 14488 ;;		None
 14489 ;; Auto vars:     Size  Location     Type
 14490 ;;		None
 14491 ;; Return value:  Size  Location     Type
 14492 ;;		None               void
 14493 ;; Registers used:
 14494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14495 ;; Tracked objects:
 14496 ;;		On entry : 0/0
 14497 ;;		On exit  : 0/0
 14498 ;;		Unchanged: 0/0
 14499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14500 ;;      Params:         0       0       0       0       0
 14501 ;;      Locals:         0       0       0       0       0
 14502 ;;      Temps:          1       0       0       0       0
 14503 ;;      Totals:         1       0       0       0       0
 14504 ;;Total ram usage:        1 bytes
 14505 ;; Hardware stack levels used:    1
 14506 ;; This function calls:
 14507 ;;		Nothing
 14508 ;; This function is called by:
 14509 ;;		_i2c_int_handler
 14510 ;; This function uses a non-reentrant model
 14511 ;;
 14512                           psect	text50,class=CODE,space=0,reloc=2
 14513                           global __ptext50
 14514  000B96                     __ptext50:
 14515                           psect	text50
 14516                           	file	"../src/my_i2c.c"
 14517                           	line	184
 14518                           	global	__size_of_i2c_master_int_handler
 14519  0000                     	__size_of_i2c_master_int_handler	equ	__end_of_i2c_master_int_handler-_i2c_master_int_ha
                                 ndler
 14520                           	
 14521  000B96                     _i2c_master_int_handler:; BSR set to: 0
 14522                           
 14523                           	opt	stack 19
 14524                           	line	186
 14525                           	
 14526  000B96                     i2l18794:
 14527                           ;my_i2c.c: 186: switch(ic_ptr->status){
 14528  000B96  D09C               	goto	i2l18812
 14529                           	line	187
 14530                           ;my_i2c.c: 187: case 0x6:{
 14531                           	
 14532  000B98                     i2l7378:
 14533                           	line	188
 14534                           	
 14535  000B98                     i2l18796:
 14536                           ;my_i2c.c: 188: SSP1BUF = (0xFE & ic_ptr->slave_addr);
 14537  000B98  0100               	movlb	0	; () banked
 14538  000B9A  EE20 F01B          	lfsr	2,01Bh
 14539  000B9E  0100               	movlb	0	; () banked
 14540  000BA0  51C4               	movf	((_ic_ptr))&0ffh,w
 14541  000BA2  26D9               	addwf	fsr2l
 14542  000BA4  0100               	movlb	0	; () banked
 14543  000BA6  51C5               	movf	((_ic_ptr+1))&0ffh,w
 14544  000BA8  22DA               	addwfc	fsr2h
 14545  000BAA  50DF               	movf	indf2,w
 14546  000BAC  0BFE               	andlw	low(0FEh)
 14547  000BAE  6EC9               	movwf	((c:4041)),c	;volatile
 14548                           	line	189
 14549                           ;my_i2c.c: 189: ic_ptr->status = 0x9;
 14550  000BB0  0100               	movlb	0	; () banked
 14551  000BB2  EE20 F00C          	lfsr	2,0Ch
 14552  000BB6  0100               	movlb	0	; () banked
 14553  000BB8  51C4               	movf	((_ic_ptr))&0ffh,w
 14554  000BBA  26D9               	addwf	fsr2l
 14555  000BBC  0100               	movlb	0	; () banked
 14556  000BBE  51C5               	movf	((_ic_ptr+1))&0ffh,w
 14557  000BC0  22DA               	addwfc	fsr2h
 14558  000BC2  0E09               	movlw	low(09h)
 14559  000BC4  6EDF               	movwf	indf2
 14560                           	line	190
 14561                           ;my_i2c.c: 190: break;
 14562  000BC6  D098               	goto	i2l7386
 14563                           	line	192
 14564                           ;my_i2c.c: 191: }
 14565                           ;my_i2c.c: 192: case 0x9:{
 14566                           	
 14567  000BC8                     i2l7380:; BSR set to: 0
 14568                           
 14569                           	line	193
 14570                           ;my_i2c.c: 193: if(SSP1CON2bits.ACKSTAT == 0){
 14571                           	
 14572  000BC8  BCC5               	btfsc	((c:4037)),c,6	;volatile
 14573  000BCA  D001               	goto	i2u174_41
 14574  000BCC  D001               	goto	i2u174_40
 14575  000BCE                     i2u174_41:
 14576  000BCE  D05A               	goto	i2l18806
 14577  000BD0                     i2u174_40:
 14578                           	line	194
 14579                           	
 14580  000BD0                     i2l18798:; BSR set to: 0
 14581                           
 14582                           ;my_i2c.c: 194: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
 14583  000BD0  0100               	movlb	0	; () banked
 14584  000BD2  EE20 F01A          	lfsr	2,01Ah
 14585  000BD6  0100               	movlb	0	; () banked
 14586  000BD8  51C4               	movf	((_ic_ptr))&0ffh,w
 14587  000BDA  26D9               	addwf	fsr2l
 14588  000BDC  0100               	movlb	0	; () banked
 14589  000BDE  51C5               	movf	((_ic_ptr+1))&0ffh,w
 14590  000BE0  22DA               	addwfc	fsr2h
 14591  000BE2  50DF               	movf	indf2,w
 14592  000BE4  6E34               	movwf	(??_i2c_master_int_handler+0+0)&0ffh,c
 14593  000BE6  0100               	movlb	0	; () banked
 14594  000BE8  EE20 F019          	lfsr	2,019h
 14595  000BEC  0100               	movlb	0	; () banked
 14596  000BEE  51C4               	movf	((_ic_ptr))&0ffh,w
 14597  000BF0  26D9               	addwf	fsr2l
 14598  000BF2  0100               	movlb	0	; () banked
 14599  000BF4  51C5               	movf	((_ic_ptr+1))&0ffh,w
 14600  000BF6  22DA               	addwfc	fsr2h
 14601  000BF8  50DF               	movf	indf2,w
 14602  000BFA  5C34               	subwf	((??_i2c_master_int_handler+0+0)),c,w
 14603  000BFC  B0D8               	btfsc	status,0
 14604  000BFE  D001               	goto	i2u175_41
 14605  000C00  D001               	goto	i2u175_40
 14606  000C02                     i2u175_41:
 14607  000C02  D028               	goto	i2l18804
 14608  000C04                     i2u175_40:
 14609                           	line	195
 14610                           	
 14611  000C04                     i2l18800:; BSR set to: 0
 14612                           
 14613                           ;my_i2c.c: 195: SSP1BUF = ic_ptr->outbuffer[ic_ptr->outbufind];
 14614  000C04  0100               	movlb	0	; () banked
 14615  000C06  EE20 F01A          	lfsr	2,01Ah
 14616  000C0A  0100               	movlb	0	; () banked
 14617  000C0C  51C4               	movf	((_ic_ptr))&0ffh,w
 14618  000C0E  26D9               	addwf	fsr2l
 14619  000C10  0100               	movlb	0	; () banked
 14620  000C12  51C5               	movf	((_ic_ptr+1))&0ffh,w
 14621  000C14  22DA               	addwfc	fsr2h
 14622  000C16  50DF               	movf	indf2,w
 14623  000C18  6E34               	movwf	(??_i2c_master_int_handler+0+0)&0ffh,c
 14624  000C1A  5034               	movf	((??_i2c_master_int_handler+0+0)),c,w
 14625  000C1C  0D01               	mullw	01h
 14626  000C1E  0E0F               	movlw	0Fh
 14627  000C20  26F3               	addwf	(prodl),c
 14628  000C22  0E00               	movlw	0
 14629  000C24  22F4               	addwfc	(prodh),c
 14630  000C26  50F3               	movf	(prodl),c,w
 14631  000C28  0100               	movlb	0	; () banked
 14632  000C2A  0100               	movlb	0	; () banked
 14633  000C2C  25C4               	addwf	((_ic_ptr))&0ffh,w
 14634  000C2E  6ED9               	movwf	c:fsr2l
 14635  000C30  50F4               	movf	(prodh),c,w
 14636  000C32  0100               	movlb	0	; () banked
 14637  000C34  0100               	movlb	0	; () banked
 14638  000C36  21C5               	addwfc	((_ic_ptr+1))&0ffh,w
 14639  000C38  6EDA               	movwf	1+c:fsr2l
 14640  000C3A  50DF               	movf	indf2,w
 14641  000C3C  6EC9               	movwf	((c:4041)),c	;volatile
 14642                           	line	196
 14643                           	
 14644  000C3E                     i2l18802:; BSR set to: 0
 14645                           
 14646                           ;my_i2c.c: 196: ic_ptr->outbufind++;
 14647  000C3E  0100               	movlb	0	; () banked
 14648  000C40  EE20 F01A          	lfsr	2,01Ah
 14649  000C44  0100               	movlb	0	; () banked
 14650  000C46  51C4               	movf	((_ic_ptr))&0ffh,w
 14651  000C48  26D9               	addwf	fsr2l
 14652  000C4A  0100               	movlb	0	; () banked
 14653  000C4C  51C5               	movf	((_ic_ptr+1))&0ffh,w
 14654  000C4E  22DA               	addwfc	fsr2h
 14655  000C50  2ADF               	incf	indf2
 14656                           
 14657                           	line	197
 14658                           ;my_i2c.c: 197: } else {
 14659  000C52  D052               	goto	i2l7386
 14660                           	
 14661  000C54                     i2l7382:; BSR set to: 0
 14662                           
 14663                           	line	199
 14664                           	
 14665  000C54                     i2l18804:; BSR set to: 0
 14666                           
 14667                           ;my_i2c.c: 199: ic_ptr->status = 0x10;
 14668  000C54  0100               	movlb	0	; () banked
 14669  000C56  EE20 F00C          	lfsr	2,0Ch
 14670  000C5A  0100               	movlb	0	; () banked
 14671  000C5C  51C4               	movf	((_ic_ptr))&0ffh,w
 14672  000C5E  26D9               	addwf	fsr2l
 14673  000C60  0100               	movlb	0	; () banked
 14674  000C62  51C5               	movf	((_ic_ptr+1))&0ffh,w
 14675  000C64  22DA               	addwfc	fsr2h
 14676  000C66  0E10               	movlw	low(010h)
 14677  000C68  6EDF               	movwf	indf2
 14678                           	line	200
 14679                           ;my_i2c.c: 200: ic_ptr->outbufind = 0;
 14680  000C6A  0100               	movlb	0	; () banked
 14681  000C6C  EE20 F01A          	lfsr	2,01Ah
 14682  000C70  0100               	movlb	0	; () banked
 14683  000C72  51C4               	movf	((_ic_ptr))&0ffh,w
 14684  000C74  26D9               	addwf	fsr2l
 14685  000C76  0100               	movlb	0	; () banked
 14686  000C78  51C5               	movf	((_ic_ptr+1))&0ffh,w
 14687  000C7A  22DA               	addwfc	fsr2h
 14688  000C7C  0E00               	movlw	low(0)
 14689  000C7E  6EDF               	movwf	indf2
 14690  000C80  D03B               	goto	i2l7386
 14691                           	line	201
 14692                           	
 14693  000C82                     i2l7383:; BSR set to: 0
 14694                           
 14695                           	line	202
 14696                           ;my_i2c.c: 201: }
 14697                           ;my_i2c.c: 202: }else{
 14698  000C82  D03A               	goto	i2l7386
 14699                           	
 14700  000C84                     i2l7381:; BSR set to: 0
 14701                           
 14702                           	line	203
 14703                           	
 14704  000C84                     i2l18806:; BSR set to: 0
 14705                           
 14706                           ;my_i2c.c: 203: ic_ptr->status = 0x5;
 14707  000C84  0100               	movlb	0	; () banked
 14708  000C86  EE20 F00C          	lfsr	2,0Ch
 14709  000C8A  0100               	movlb	0	; () banked
 14710  000C8C  51C4               	movf	((_ic_ptr))&0ffh,w
 14711  000C8E  26D9               	addwf	fsr2l
 14712  000C90  0100               	movlb	0	; () banked
 14713  000C92  51C5               	movf	((_ic_ptr+1))&0ffh,w
 14714  000C94  22DA               	addwfc	fsr2h
 14715  000C96  0E05               	movlw	low(05h)
 14716  000C98  6EDF               	movwf	indf2
 14717                           	line	204
 14718                           ;my_i2c.c: 204: ic_ptr->outbufind = 0;
 14719  000C9A  0100               	movlb	0	; () banked
 14720  000C9C  EE20 F01A          	lfsr	2,01Ah
 14721  000CA0  0100               	movlb	0	; () banked
 14722  000CA2  51C4               	movf	((_ic_ptr))&0ffh,w
 14723  000CA4  26D9               	addwf	fsr2l
 14724  000CA6  0100               	movlb	0	; () banked
 14725  000CA8  51C5               	movf	((_ic_ptr+1))&0ffh,w
 14726  000CAA  22DA               	addwfc	fsr2h
 14727  000CAC  0E00               	movlw	low(0)
 14728  000CAE  6EDF               	movwf	indf2
 14729  000CB0  D023               	goto	i2l7386
 14730                           	line	205
 14731                           	
 14732  000CB2                     i2l7384:; BSR set to: 0
 14733                           
 14734                           	line	206
 14735                           ;my_i2c.c: 205: }
 14736                           ;my_i2c.c: 206: break;
 14737  000CB2  D022               	goto	i2l7386
 14738                           	line	208
 14739                           ;my_i2c.c: 207: }
 14740                           ;my_i2c.c: 208: case 0x10:{
 14741                           	
 14742  000CB4                     i2l7385:; BSR set to: 0
 14743                           
 14744                           	line	209
 14745                           ;my_i2c.c: 209: SSP1CON2bits.PEN = 1;
 14746  000CB4  84C5               	bsf	((c:4037)),c,2	;volatile
 14747                           	line	210
 14748                           	
 14749  000CB6                     i2l18808:; BSR set to: 0
 14750                           
 14751                           ;my_i2c.c: 210: ic_ptr->status = 0x5;
 14752  000CB6  0100               	movlb	0	; () banked
 14753  000CB8  EE20 F00C          	lfsr	2,0Ch
 14754  000CBC  0100               	movlb	0	; () banked
 14755  000CBE  51C4               	movf	((_ic_ptr))&0ffh,w
 14756  000CC0  26D9               	addwf	fsr2l
 14757  000CC2  0100               	movlb	0	; () banked
 14758  000CC4  51C5               	movf	((_ic_ptr+1))&0ffh,w
 14759  000CC6  22DA               	addwfc	fsr2h
 14760  000CC8  0E05               	movlw	low(05h)
 14761  000CCA  6EDF               	movwf	indf2
 14762                           	line	211
 14763                           ;my_i2c.c: 211: break;
 14764  000CCC  D015               	goto	i2l7386
 14765                           	line	213
 14766                           	
 14767  000CCE                     i2l18810:; BSR set to: 0
 14768                           
 14769                           ;my_i2c.c: 212: }
 14770                           ;my_i2c.c: 213: }
 14771  000CCE  D014               	goto	i2l7386
 14772                           	line	186
 14773                           	
 14774  000CD0                     i2l7377:; BSR set to: 0
 14775                           
 14776                           	
 14777  000CD0                     i2l18812:
 14778  000CD0  0100               	movlb	0	; () banked
 14779  000CD2  EE20 F00C          	lfsr	2,0Ch
 14780  000CD6  0100               	movlb	0	; () banked
 14781  000CD8  51C4               	movf	((_ic_ptr))&0ffh,w
 14782  000CDA  26D9               	addwf	fsr2l
 14783  000CDC  0100               	movlb	0	; () banked
 14784  000CDE  51C5               	movf	((_ic_ptr+1))&0ffh,w
 14785  000CE0  22DA               	addwfc	fsr2h
 14786  000CE2  50DF               	movf	indf2,w
 14787                           	; Switch size 1, requested type "space"
 14788                           ; Number of cases is 3, Range of values is 6 to 16
 14789                           ; switch strategies available:
 14790                           ; Name         Instructions Cycles
 14791                           ; simple_byte           10     6 (average)
 14792                           ;	Chosen strategy is simple_byte
 14793                           
 14794  000CE4  0A06               	xorlw	6^0	; case 6
 14795  000CE6  B4D8               	skipnz
 14796  000CE8  D757               	goto	i2l18796
 14797  000CEA  0A0F               	xorlw	9^6	; case 9
 14798  000CEC  B4D8               	skipnz
 14799  000CEE  D76C               	goto	i2l7380
 14800  000CF0  0A19               	xorlw	16^9	; case 16
 14801  000CF2  B4D8               	skipnz
 14802  000CF4  D7DF               	goto	i2l7385
 14803  000CF6  D000               	goto	i2l7386
 14804                           
 14805                           	line	213
 14806                           	
 14807  000CF8                     i2l7379:; BSR set to: 0
 14808                           
 14809                           	line	244
 14810                           	
 14811  000CF8                     i2l7386:; BSR set to: 0
 14812                           
 14813  000CF8  0012               	return
 14814                           	opt stack 0
 14815                           GLOBAL	__end_of_i2c_master_int_handler
 14816  000CFA                     	__end_of_i2c_master_int_handler:
 14817                           	signat	_i2c_master_int_handler,88
 14818                           	global	_WriteTimer0
 14819                           
 14820 ;; *************** function _WriteTimer0 *****************
 14821 ;; Defined at:
 14822 ;;		line 17 in file "plib/Timers/t0write.c"
 14823 ;; Parameters:    Size  Location     Type
 14824 ;;  timer0          2   51[COMRAM] unsigned int 
 14825 ;; Auto vars:     Size  Location     Type
 14826 ;;  timer           2   53[COMRAM] struct Timers
 14827 ;; Return value:  Size  Location     Type
 14828 ;;		None               void
 14829 ;; Registers used:
 14830 ;;		None
 14831 ;; Tracked objects:
 14832 ;;		On entry : 0/0
 14833 ;;		On exit  : 0/0
 14834 ;;		Unchanged: 0/0
 14835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14836 ;;      Params:         2       0       0       0       0
 14837 ;;      Locals:         2       0       0       0       0
 14838 ;;      Temps:          0       0       0       0       0
 14839 ;;      Totals:         4       0       0       0       0
 14840 ;;Total ram usage:        4 bytes
 14841 ;; Hardware stack levels used:    1
 14842 ;; This function calls:
 14843 ;;		Nothing
 14844 ;; This function is called by:
 14845 ;;		_timer0_int_handler
 14846 ;; This function uses a non-reentrant model
 14847 ;;
 14848                           psect	text51,class=CODE,space=0,reloc=2
 14849                           global __ptext51
 14850  00211A                     __ptext51:
 14851                           psect	text51
 14852                           	file	"plib/Timers/t0write.c"
 14853                           	line	17
 14854                           	global	__size_of_WriteTimer0
 14855  0000                     	__size_of_WriteTimer0	equ	__end_of_WriteTimer0-_WriteTimer0
 14856                           	
 14857  00211A                     _WriteTimer0:; BSR set to: 0
 14858                           
 14859                           	opt	stack 19
 14860                           	line	20
 14861                           	
 14862  00211A                     i2l18844:
 14863  00211A  C034  F036         	movff	(c:WriteTimer0@timer0),(c:WriteTimer0@timer)
 14864  00211E  C035  F037         	movff	(c:WriteTimer0@timer0+1),(c:WriteTimer0@timer+1)
 14865                           	line	22
 14866  002122  C037  FFD7         	movff	0+((c:WriteTimer0@timer)+01h),(c:4055)	;volatile
 14867                           	line	23
 14868  002126  C036  FFD6         	movff	(c:WriteTimer0@timer),(c:4054)	;volatile
 14869                           	line	24
 14870                           	
 14871  00212A                     i2l16463:
 14872  00212A  0012               	return
 14873                           	opt stack 0
 14874                           GLOBAL	__end_of_WriteTimer0
 14875  00212C                     	__end_of_WriteTimer0:
 14876                           	signat	_WriteTimer0,4216
 14877                           	global	i2_in_low_int
 14878                           
 14879 ;; *************** function i2_in_low_int *****************
 14880 ;; Defined at:
 14881 ;;		line 30 in file "../src/interrupts.c"
 14882 ;; Parameters:    Size  Location     Type
 14883 ;;		None
 14884 ;; Auto vars:     Size  Location     Type
 14885 ;;		None
 14886 ;; Return value:  Size  Location     Type
 14887 ;;                  2   53[COMRAM] int 
 14888 ;; Registers used:
 14889 ;;		wreg, status,2, status,0, cstack
 14890 ;; Tracked objects:
 14891 ;;		On entry : 0/0
 14892 ;;		On exit  : 0/0
 14893 ;;		Unchanged: 0/0
 14894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14895 ;;      Params:         2       0       0       0       0
 14896 ;;      Locals:         0       0       0       0       0
 14897 ;;      Temps:          0       0       0       0       0
 14898 ;;      Totals:         2       0       0       0       0
 14899 ;;Total ram usage:        2 bytes
 14900 ;; Hardware stack levels used:    1
 14901 ;; Hardware stack levels required when called:    1
 14902 ;; This function calls:
 14903 ;;		i2_in_high_int
 14904 ;; This function is called by:
 14905 ;;		_SleepIfOkay
 14906 ;; This function uses a non-reentrant model
 14907 ;;
 14908                           psect	text52,class=CODE,space=0,reloc=2
 14909                           global __ptext52
 14910  001D84                     __ptext52:
 14911                           psect	text52
 14912                           	file	"../src/interrupts.c"
 14913                           	line	30
 14914                           	global	__size_ofi2_in_low_int
 14915  0000                     	__size_ofi2_in_low_int	equ	__end_ofi2_in_low_int-i2_in_low_int
 14916                           	
 14917  001D84                     i2_in_low_int:
 14918                           	opt	stack 18
 14919                           	line	31
 14920                           	
 14921  001D84                     i2l18850:
 14922                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
 14923                           	
 14924  001D84  ACF2               	btfss	((c:4082)),c,6	;volatile
 14925  001D86  D001               	goto	i2u181_41
 14926  001D88  D001               	goto	i2u181_40
 14927  001D8A                     i2u181_41:
 14928  001D8A  D007               	goto	i2l18858
 14929  001D8C                     i2u181_40:
 14930                           	line	32
 14931                           	
 14932  001D8C                     i2l18852:
 14933                           ;interrupts.c: 32: return (0);
 14934  001D8C  0E00               	movlw	high(0)
 14935  001D8E  6E37               	movwf	((c:?i2_in_low_int+1)),c
 14936  001D90  0E00               	movlw	low(0)
 14937  001D92  6E36               	movwf	((c:?i2_in_low_int)),c
 14938  001D94  D018               	goto	i2l1809
 14939                           	
 14940  001D96                     i2l18854:
 14941  001D96  D017               	goto	i2l1809
 14942                           	line	33
 14943                           	
 14944  001D98                     i2l18856:
 14945                           ;interrupts.c: 33: } else if (in_high_int()) {
 14946  001D98  D016               	goto	i2l1809
 14947                           	
 14948  001D9A                     i2l1808:
 14949                           	
 14950  001D9A                     i2l18858:
 14951  001D9A  EC96  F010         	call	i2_in_high_int	;wreg free
 14952  001D9E  5035               	movf	(1+?i2_in_high_int),c,w
 14953  001DA0  1034               	iorwf (0+?i2_in_high_int),c,w
 14954                           
 14955  001DA2  B4D8               	btfsc	status,2
 14956  001DA4  D001               	goto	i2u182_41
 14957  001DA6  D001               	goto	i2u182_40
 14958  001DA8                     i2u182_41:
 14959  001DA8  D007               	goto	i2l18866
 14960  001DAA                     i2u182_40:
 14961                           	line	34
 14962                           	
 14963  001DAA                     i2l18860:
 14964                           ;interrupts.c: 34: return (0);
 14965  001DAA  0E00               	movlw	high(0)
 14966  001DAC  6E37               	movwf	((c:?i2_in_low_int+1)),c
 14967  001DAE  0E00               	movlw	low(0)
 14968  001DB0  6E36               	movwf	((c:?i2_in_low_int)),c
 14969  001DB2  D009               	goto	i2l1809
 14970                           	
 14971  001DB4                     i2l18862:
 14972  001DB4  D008               	goto	i2l1809
 14973                           	line	35
 14974                           	
 14975  001DB6                     i2l18864:
 14976                           ;interrupts.c: 35: } else {
 14977  001DB6  D007               	goto	i2l1809
 14978                           	
 14979  001DB8                     i2l1811:
 14980                           	line	36
 14981                           	
 14982  001DB8                     i2l18866:
 14983                           ;interrupts.c: 36: return (1);
 14984  001DB8  0E00               	movlw	high(01h)
 14985  001DBA  6E37               	movwf	((c:?i2_in_low_int+1)),c
 14986  001DBC  0E01               	movlw	low(01h)
 14987  001DBE  6E36               	movwf	((c:?i2_in_low_int)),c
 14988  001DC0  D002               	goto	i2l1809
 14989                           	
 14990  001DC2                     i2l18868:
 14991  001DC2  D001               	goto	i2l1809
 14992                           	line	37
 14993                           	
 14994  001DC4                     i2l1812:
 14995  001DC4  D000               	goto	i2l1809
 14996                           	
 14997  001DC6                     i2l1810:
 14998                           	line	38
 14999                           	
 15000  001DC6                     i2l1809:
 15001  001DC6  0012               	return
 15002                           	opt stack 0
 15003                           GLOBAL	__end_ofi2_in_low_int
 15004  001DC8                     	__end_ofi2_in_low_int:
 15005                           	signat	i2_in_low_int,90
 15006                           	global	i2_in_high_int
 15007                           
 15008 ;; *************** function i2_in_high_int *****************
 15009 ;; Defined at:
 15010 ;;		line 22 in file "../src/interrupts.c"
 15011 ;; Parameters:    Size  Location     Type
 15012 ;;		None
 15013 ;; Auto vars:     Size  Location     Type
 15014 ;;		None
 15015 ;; Return value:  Size  Location     Type
 15016 ;;                  2   51[COMRAM] int 
 15017 ;; Registers used:
 15018 ;;		wreg, status,2
 15019 ;; Tracked objects:
 15020 ;;		On entry : 0/0
 15021 ;;		On exit  : 0/0
 15022 ;;		Unchanged: 0/0
 15023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15024 ;;      Params:         2       0       0       0       0
 15025 ;;      Locals:         0       0       0       0       0
 15026 ;;      Temps:          0       0       0       0       0
 15027 ;;      Totals:         2       0       0       0       0
 15028 ;;Total ram usage:        2 bytes
 15029 ;; Hardware stack levels used:    1
 15030 ;; This function calls:
 15031 ;;		Nothing
 15032 ;; This function is called by:
 15033 ;;		_SleepIfOkay
 15034 ;;		i2_in_low_int
 15035 ;; This function uses a non-reentrant model
 15036 ;;
 15037                           psect	text53,class=CODE,space=0,reloc=2
 15038                           global __ptext53
 15039  00212C                     __ptext53:
 15040                           psect	text53
 15041                           	file	"../src/interrupts.c"
 15042                           	line	22
 15043                           	global	__size_ofi2_in_high_int
 15044  0000                     	__size_ofi2_in_high_int	equ	__end_ofi2_in_high_int-i2_in_high_int
 15045                           	
 15046  00212C                     i2_in_high_int:
 15047                           	opt	stack 19
 15048                           	line	23
 15049                           	
 15050  00212C                     i2l18846:
 15051                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
 15052                           	
 15053  00212C  0E00               	movlw	0
 15054  00212E  AEF2               	btfss	((c:4082)),c,7	;volatile
 15055  002130  0E01               	movlw	1
 15056  002132  6E34               	movwf	((c:?i2_in_high_int)),c
 15057  002134  6A35               	clrf	((c:?i2_in_high_int+1)),c
 15058  002136  D000               	goto	i2l1802
 15059                           	
 15060  002138                     i2l18848:
 15061                           	line	24
 15062                           	
 15063  002138                     i2l1802:
 15064  002138  0012               	return
 15065                           	opt stack 0
 15066                           GLOBAL	__end_ofi2_in_high_int
 15067  00213A                     	__end_ofi2_in_high_int:
 15068                           	signat	i2_in_high_int,90
 15069                           	global	i2_send_msg
 15070                           
 15071 ;; *************** function i2_send_msg *****************
 15072 ;; Defined at:
 15073 ;;		line 24 in file "../src/messages.c"
 15074 ;; Parameters:    Size  Location     Type
 15075 ;;  send_msg        2   61[COMRAM] PTR struct __msg_queue
 15076 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 15077 ;;  send_msg        1   63[COMRAM] unsigned char 
 15078 ;;  send_msg        1   64[COMRAM] unsigned char 
 15079 ;;  send_msg        2   65[COMRAM] PTR void 
 15080 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 15081 ;;		 -> i2c_slave_int_handler@error_buf(3), main@msgbuffer(11), main@uc(5), 
 15082 ;; Auto vars:     Size  Location     Type
 15083 ;;  send_msg        2    3[BANK0 ] PTR struct __msg
 15084 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 15085 ;;  send_msg        2    0[BANK0 ] unsigned int 
 15086 ;;  send_msg        1    2[BANK0 ] unsigned char 
 15087 ;; Return value:  Size  Location     Type
 15088 ;;                  1    wreg      char 
 15089 ;; Registers used:
 15090 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15091 ;; Tracked objects:
 15092 ;;		On entry : 0/0
 15093 ;;		On exit  : 0/0
 15094 ;;		Unchanged: 0/0
 15095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15096 ;;      Params:         6       0       0       0       0
 15097 ;;      Locals:         0       5       0       0       0
 15098 ;;      Temps:          1       0       0       0       0
 15099 ;;      Totals:         7       5       0       0       0
 15100 ;;Total ram usage:       12 bytes
 15101 ;; Hardware stack levels used:    1
 15102 ;; Hardware stack levels required when called:    1
 15103 ;; This function calls:
 15104 ;;		i2_memcpy
 15105 ;; This function is called by:
 15106 ;;		_ToMainHigh_sendmsg
 15107 ;; This function uses a non-reentrant model
 15108 ;;
 15109                           psect	text54,class=CODE,space=0,reloc=2
 15110                           global __ptext54
 15111  001262                     __ptext54:
 15112                           psect	text54
 15113                           	file	"../src/messages.c"
 15114                           	global	__size_ofi2_send_msg
 15115  0000                     	__size_ofi2_send_msg	equ	__end_ofi2_send_msg-i2_send_msg
 15116                           	
 15117  001262                     i2_send_msg:
 15118                           	opt	stack 17
 15119                           	line	28
 15120                           	
 15121  001262                     i2l19412:
 15122                           ;messages.c: 25: unsigned char slot;
 15123                           ;messages.c: 27: msg *qmsg;
 15124                           ;messages.c: 28: size_t tlength = length;
 15125  001262  0100               	movlb	0	; () banked
 15126  001264  C040  F080         	movff	(c:i2send_msg@length),(i2send_msg@tlength)
 15127  001268  0100               	movlb	0	; () banked
 15128  00126A  0100               	movlb	0	; () banked
 15129  00126C  6B81               	clrf	((i2send_msg@tlength+1))&0ffh
 15130                           	line	38
 15131                           	
 15132  00126E                     i2l19414:; BSR set to: 0
 15133                           
 15134                           ;messages.c: 38: slot = qptr->cur_write_ind;
 15135  00126E  EE20 F034          	lfsr	2,034h
 15136  001272  503E               	movf	((c:i2send_msg@qptr)),c,w
 15137  001274  26D9               	addwf	fsr2l
 15138  001276  503F               	movf	((c:i2send_msg@qptr+1)),c,w
 15139  001278  22DA               	addwfc	fsr2h
 15140  00127A  50DF               	movf	indf2,w
 15141  00127C  0100               	movlb	0	; () banked
 15142  00127E  0100               	movlb	0	; () banked
 15143  001280  6F82               	movwf	((i2send_msg@slot))&0ffh
 15144                           	line	39
 15145                           	
 15146  001282                     i2l19416:; BSR set to: 0
 15147                           
 15148                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
 15149  001282  0100               	movlb	0	; () banked
 15150  001284  0100               	movlb	0	; () banked
 15151  001286  5182               	movf	((i2send_msg@slot))&0ffh,w
 15152  001288  0D0D               	mullw	0Dh
 15153  00128A  50F3               	movf	(prodl),c,w
 15154  00128C  243E               	addwf	((c:i2send_msg@qptr)),c,w
 15155  00128E  0100               	movlb	0	; () banked
 15156                           	
 15157  001290  0100               	movlb	0	; () banked
 15158  001292  6F83               	movwf	((i2send_msg@qmsg))&0ffh
 15159  001294  50F4               	movf	(prodh),c,w
 15160  001296  203F               	addwfc	((c:i2send_msg@qptr+1)),c,w
 15161  001298  0100               	movlb	0	; () banked
 15162  00129A  6F84               	movwf	1+((i2send_msg@qmsg))&0ffh
 15163                           	line	41
 15164                           	
 15165  00129C                     i2l19418:; BSR set to: 0
 15166                           
 15167                           ;messages.c: 41: if (qmsg->full != 0) {
 15168  00129C  C083  FFD9         	movff	(i2send_msg@qmsg),fsr2l
 15169  0012A0  C084  FFDA         	movff	(i2send_msg@qmsg+1),fsr2h
 15170  0012A4  50DF               	movf	indf2,w
 15171  0012A6  B4D8               	btfsc	status,2
 15172  0012A8  D001               	goto	i2u234_41
 15173  0012AA  D001               	goto	i2u234_40
 15174  0012AC                     i2u234_41:
 15175  0012AC  D003               	goto	i2l19424
 15176  0012AE                     i2u234_40:
 15177                           	line	42
 15178                           	
 15179  0012AE                     i2l19420:; BSR set to: 0
 15180                           
 15181                           ;messages.c: 42: return (-1);
 15182  0012AE  0EFF               	movlw	(-1)&0ffh
 15183  0012B0  D044               	goto	i2l5474
 15184                           	
 15185  0012B2                     i2l19422:; BSR set to: 0
 15186                           
 15187  0012B2  D043               	goto	i2l5474
 15188                           	line	43
 15189                           	
 15190  0012B4                     i2l5473:; BSR set to: 0
 15191                           
 15192                           	line	46
 15193                           	
 15194  0012B4                     i2l19424:; BSR set to: 0
 15195                           
 15196                           ;messages.c: 43: }
 15197                           ;messages.c: 46: qmsg->length = length;
 15198  0012B4  0100               	movlb	0	; () banked
 15199  0012B6  EE20 F001          	lfsr	2,01h
 15200  0012BA  0100               	movlb	0	; () banked
 15201  0012BC  5183               	movf	((i2send_msg@qmsg))&0ffh,w
 15202  0012BE  26D9               	addwf	fsr2l
 15203  0012C0  0100               	movlb	0	; () banked
 15204  0012C2  5184               	movf	((i2send_msg@qmsg+1))&0ffh,w
 15205  0012C4  22DA               	addwfc	fsr2h
 15206  0012C6  C040  FFDF         	movff	(c:i2send_msg@length),indf2
 15207                           
 15208                           	line	47
 15209                           ;messages.c: 47: qmsg->msgtype = msgtype;
 15210  0012CA  0100               	movlb	0	; () banked
 15211  0012CC  EE20 F002          	lfsr	2,02h
 15212  0012D0  0100               	movlb	0	; () banked
 15213  0012D2  5183               	movf	((i2send_msg@qmsg))&0ffh,w
 15214  0012D4  26D9               	addwf	fsr2l
 15215  0012D6  0100               	movlb	0	; () banked
 15216  0012D8  5184               	movf	((i2send_msg@qmsg+1))&0ffh,w
 15217  0012DA  22DA               	addwfc	fsr2h
 15218  0012DC  C041  FFDF         	movff	(c:i2send_msg@msgtype),indf2
 15219                           
 15220                           	line	55
 15221                           	
 15222  0012E0                     i2l19426:; BSR set to: 0
 15223                           
 15224                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
 15225  0012E0  0E03               	movlw	low(03h)
 15226  0012E2  0100               	movlb	0	; () banked
 15227  0012E4  0100               	movlb	0	; () banked
 15228  0012E6  2583               	addwf	((i2send_msg@qmsg))&0ffh,w
 15229                           	
 15230  0012E8  6E34               	movwf	((c:?i2_memcpy)),c
 15231  0012EA  0E00               	movlw	high(03h)
 15232  0012EC  0100               	movlb	0	; () banked
 15233  0012EE  0100               	movlb	0	; () banked
 15234  0012F0  2184               	addwfc	((i2send_msg@qmsg+1))&0ffh,w
 15235  0012F2  6E35               	movwf	1+((c:?i2_memcpy)),c
 15236  0012F4  C042  F036         	movff	(c:i2send_msg@data),0+((c:?i2_memcpy)+02h)
 15237  0012F8  C043  F037         	movff	(c:i2send_msg@data+1),1+((c:?i2_memcpy)+02h)
 15238  0012FC  C080  F038         	movff	(i2send_msg@tlength),0+((c:?i2_memcpy)+04h)
 15239  001300  C081  F039         	movff	(i2send_msg@tlength+1),1+((c:?i2_memcpy)+04h)
 15240  001304  EC9E  F00E         	call	i2_memcpy	;wreg free
 15241                           	line	56
 15242                           	
 15243  001308                     i2l19428:
 15244                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
 15245  001308  EE20 F034          	lfsr	2,034h
 15246  00130C  503E               	movf	((c:i2send_msg@qptr)),c,w
 15247  00130E  26D9               	addwf	fsr2l
 15248  001310  503F               	movf	((c:i2send_msg@qptr+1)),c,w
 15249  001312  22DA               	addwfc	fsr2h
 15250  001314  EE10 F034          	lfsr	1,034h
 15251  001318  503E               	movf	((c:i2send_msg@qptr)),c,w
 15252  00131A  26E1               	addwf	fsr1l
 15253  00131C  503F               	movf	((c:i2send_msg@qptr+1)),c,w
 15254  00131E  22E2               	addwfc	fsr1h
 15255  001320  50E7               	movf	indf1,w
 15256  001322  6E44               	movwf	(??i2_send_msg+0+0)&0ffh,c
 15257  001324  2844               	incf	((??i2_send_msg+0+0)),c,w
 15258  001326  0B03               	andlw	low(03h)
 15259  001328  6EDF               	movwf	indf2
 15260                           
 15261                           	line	59
 15262                           	
 15263  00132A                     i2l19430:
 15264                           ;messages.c: 59: qmsg->full = 1;
 15265  00132A  C083  FFD9         	movff	(i2send_msg@qmsg),fsr2l
 15266  00132E  C084  FFDA         	movff	(i2send_msg@qmsg+1),fsr2h
 15267  001332  0E01               	movlw	low(01h)
 15268  001334  6EDF               	movwf	indf2
 15269                           	line	60
 15270                           	
 15271  001336                     i2l19432:
 15272                           ;messages.c: 60: return (1);
 15273  001336  0E01               	movlw	(01h)&0ffh
 15274  001338  D000               	goto	i2l5474
 15275                           	
 15276  00133A                     i2l19434:
 15277                           	line	61
 15278                           	
 15279  00133A                     i2l5474:
 15280  00133A  0012               	return
 15281                           	opt stack 0
 15282                           GLOBAL	__end_ofi2_send_msg
 15283  00133C                     	__end_ofi2_send_msg:
 15284                           	signat	i2_send_msg,89
 15285                           	global	i2_recv_msg
 15286                           
 15287 ;; *************** function i2_recv_msg *****************
 15288 ;; Defined at:
 15289 ;;		line 63 in file "../src/messages.c"
 15290 ;; Parameters:    Size  Location     Type
 15291 ;;  recv_msg        2   61[COMRAM] PTR struct __msg_queue
 15292 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 15293 ;;  recv_msg        1   63[COMRAM] unsigned char 
 15294 ;;  recv_msg        2   64[COMRAM] PTR unsigned char 
 15295 ;;		 -> RAM(1023), i2c_slave_int_handler@msgtype(1), main@msgtype(1), 
 15296 ;;  recv_msg        2   66[COMRAM] PTR void 
 15297 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@data(10), main@msgbuffer(11), 
 15298 ;; Auto vars:     Size  Location     Type
 15299 ;;  recv_msg        2    5[BANK0 ] PTR struct __msg
 15300 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 15301 ;;  recv_msg        2    3[BANK0 ] unsigned int 
 15302 ;;  recv_msg        1    2[BANK0 ] unsigned char 
 15303 ;; Return value:  Size  Location     Type
 15304 ;;                  1    wreg      char 
 15305 ;; Registers used:
 15306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15307 ;; Tracked objects:
 15308 ;;		On entry : 0/0
 15309 ;;		On exit  : 0/0
 15310 ;;		Unchanged: 0/0
 15311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15312 ;;      Params:         7       0       0       0       0
 15313 ;;      Locals:         0       5       0       0       0
 15314 ;;      Temps:          0       2       0       0       0
 15315 ;;      Totals:         7       7       0       0       0
 15316 ;;Total ram usage:       14 bytes
 15317 ;; Hardware stack levels used:    1
 15318 ;; Hardware stack levels required when called:    1
 15319 ;; This function calls:
 15320 ;;		i2_memcpy
 15321 ;; This function is called by:
 15322 ;;		_FromMainLow_recvmsg
 15323 ;;		_FromMainHigh_recvmsg
 15324 ;; This function uses a non-reentrant model
 15325 ;;
 15326                           psect	text55,class=CODE,space=0,reloc=2
 15327                           global __ptext55
 15328  000E3A                     __ptext55:
 15329                           psect	text55
 15330                           	file	"../src/messages.c"
 15331                           	line	63
 15332                           	global	__size_ofi2_recv_msg
 15333  0000                     	__size_ofi2_recv_msg	equ	__end_ofi2_recv_msg-i2_recv_msg
 15334                           	
 15335  000E3A                     i2_recv_msg:
 15336                           	opt	stack 17
 15337                           	line	72
 15338                           	
 15339  000E3A                     i2l19436:
 15340                           ;messages.c: 64: unsigned char slot;
 15341                           ;messages.c: 68: msg *qmsg;
 15342                           ;messages.c: 69: size_t tlength;
 15343                           ;messages.c: 72: slot = qptr->cur_read_ind;
 15344  000E3A  EE20 F035          	lfsr	2,035h
 15345  000E3E  503E               	movf	((c:i2recv_msg@qptr)),c,w
 15346  000E40  26D9               	addwf	fsr2l
 15347  000E42  503F               	movf	((c:i2recv_msg@qptr+1)),c,w
 15348  000E44  22DA               	addwfc	fsr2h
 15349  000E46  50DF               	movf	indf2,w
 15350  000E48  0100               	movlb	0	; () banked
 15351  000E4A  0100               	movlb	0	; () banked
 15352  000E4C  6F82               	movwf	((i2recv_msg@slot))&0ffh
 15353                           	line	73
 15354                           	
 15355  000E4E                     i2l19438:; BSR set to: 0
 15356                           
 15357                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
 15358  000E4E  0100               	movlb	0	; () banked
 15359  000E50  0100               	movlb	0	; () banked
 15360  000E52  5182               	movf	((i2recv_msg@slot))&0ffh,w
 15361  000E54  0D0D               	mullw	0Dh
 15362  000E56  50F3               	movf	(prodl),c,w
 15363  000E58  243E               	addwf	((c:i2recv_msg@qptr)),c,w
 15364  000E5A  0100               	movlb	0	; () banked
 15365                           	
 15366  000E5C  0100               	movlb	0	; () banked
 15367  000E5E  6F85               	movwf	((i2recv_msg@qmsg))&0ffh
 15368  000E60  50F4               	movf	(prodh),c,w
 15369  000E62  203F               	addwfc	((c:i2recv_msg@qptr+1)),c,w
 15370  000E64  0100               	movlb	0	; () banked
 15371  000E66  6F86               	movwf	1+((i2recv_msg@qmsg))&0ffh
 15372                           	line	74
 15373                           	
 15374  000E68                     i2l19440:; BSR set to: 0
 15375                           
 15376                           ;messages.c: 74: if (qmsg->full == 1) {
 15377  000E68  0E01               	movlw	(01h)&0ffh
 15378  000E6A  C085  FFD9         	movff	(i2recv_msg@qmsg),fsr2l
 15379  000E6E  C086  FFDA         	movff	(i2recv_msg@qmsg+1),fsr2h
 15380  000E72  62DF               	cpfseq	indf2
 15381  000E74  D001               	goto	i2u235_41
 15382  000E76  D001               	goto	i2u235_40
 15383  000E78                     i2u235_41:
 15384  000E78  D06C               	goto	i2l19464
 15385  000E7A                     i2u235_40:
 15386                           	line	76
 15387                           	
 15388  000E7A                     i2l19442:; BSR set to: 0
 15389                           
 15390                           ;messages.c: 76: if (qmsg->length > maxlength) {
 15391  000E7A  0100               	movlb	0	; () banked
 15392  000E7C  EE20 F001          	lfsr	2,01h
 15393  000E80  0100               	movlb	0	; () banked
 15394  000E82  5185               	movf	((i2recv_msg@qmsg))&0ffh,w
 15395  000E84  26D9               	addwf	fsr2l
 15396  000E86  0100               	movlb	0	; () banked
 15397  000E88  5186               	movf	((i2recv_msg@qmsg+1))&0ffh,w
 15398  000E8A  22DA               	addwfc	fsr2h
 15399  000E8C  50DF               	movf	indf2,w
 15400  000E8E  6040               	cpfslt	((c:i2recv_msg@maxlength)),c
 15401  000E90  D001               	goto	i2u236_41
 15402  000E92  D001               	goto	i2u236_40
 15403  000E94                     i2u236_41:
 15404  000E94  D003               	goto	i2l19448
 15405  000E96                     i2u236_40:
 15406                           	line	77
 15407                           	
 15408  000E96                     i2l19444:; BSR set to: 0
 15409                           
 15410                           ;messages.c: 77: return (-3);
 15411  000E96  0EFD               	movlw	(-3)&0ffh
 15412  000E98  D05F               	goto	i2l5479
 15413                           	
 15414  000E9A                     i2l19446:; BSR set to: 0
 15415                           
 15416  000E9A  D05E               	goto	i2l5479
 15417                           	line	78
 15418                           	
 15419  000E9C                     i2l5478:; BSR set to: 0
 15420                           
 15421                           	line	80
 15422                           	
 15423  000E9C                     i2l19448:; BSR set to: 0
 15424                           
 15425                           ;messages.c: 78: }
 15426                           ;messages.c: 80: tlength = qmsg->length;
 15427  000E9C  0100               	movlb	0	; () banked
 15428  000E9E  EE20 F001          	lfsr	2,01h
 15429  000EA2  0100               	movlb	0	; () banked
 15430  000EA4  5185               	movf	((i2recv_msg@qmsg))&0ffh,w
 15431  000EA6  26D9               	addwf	fsr2l
 15432  000EA8  0100               	movlb	0	; () banked
 15433  000EAA  5186               	movf	((i2recv_msg@qmsg+1))&0ffh,w
 15434  000EAC  22DA               	addwfc	fsr2h
 15435  000EAE  50DF               	movf	indf2,w
 15436  000EB0  0100               	movlb	0	; () banked
 15437  000EB2  6F80               	movwf	(??i2_recv_msg+0+0)&0ffh
 15438  000EB4  0100               	movlb	0	; () banked
 15439  000EB6  5180               	movf	((??i2_recv_msg+0+0))&0ffh,w
 15440  000EB8  0100               	movlb	0	; () banked
 15441  000EBA  0100               	movlb	0	; () banked
 15442  000EBC  6F83               	movwf	((i2recv_msg@tlength))&0ffh
 15443  000EBE  0100               	movlb	0	; () banked
 15444  000EC0  6B84               	clrf	((i2recv_msg@tlength+1))&0ffh
 15445                           	line	81
 15446                           	
 15447  000EC2                     i2l19450:; BSR set to: 0
 15448                           
 15449                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
 15450  000EC2  C043  F034         	movff	(c:i2recv_msg@data),(c:?i2_memcpy)
 15451  000EC6  C044  F035         	movff	(c:i2recv_msg@data+1),(c:?i2_memcpy+1)
 15452  000ECA  0E03               	movlw	03h
 15453  000ECC  0100               	movlb	0	; () banked
 15454  000ECE  0100               	movlb	0	; () banked
 15455  000ED0  2585               	addwf	((i2recv_msg@qmsg))&0ffh,w
 15456  000ED2  0100               	movlb	0	; () banked
 15457  000ED4  6F80               	movwf	(??i2_recv_msg+0+0)&0ffh
 15458  000ED6  0E00               	movlw	0
 15459  000ED8  0100               	movlb	0	; () banked
 15460  000EDA  0100               	movlb	0	; () banked
 15461  000EDC  2186               	addwfc	((i2recv_msg@qmsg+1))&0ffh,w
 15462  000EDE  0100               	movlb	0	; () banked
 15463  000EE0  6F81               	movwf	(??i2_recv_msg+0+0+1)&0ffh
 15464  000EE2  C080  F036         	movff	??i2_recv_msg+0+0,0+((c:?i2_memcpy)+02h)
 15465  000EE6  C081  F037         	movff	??i2_recv_msg+0+1,1+((c:?i2_memcpy)+02h)
 15466  000EEA  C083  F038         	movff	(i2recv_msg@tlength),0+((c:?i2_memcpy)+04h)
 15467  000EEE  C084  F039         	movff	(i2recv_msg@tlength+1),1+((c:?i2_memcpy)+04h)
 15468  000EF2  EC9E  F00E         	call	i2_memcpy	;wreg free
 15469                           	line	87
 15470                           	
 15471  000EF6                     i2l19452:
 15472                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
 15473  000EF6  EE20 F035          	lfsr	2,035h
 15474  000EFA  503E               	movf	((c:i2recv_msg@qptr)),c,w
 15475  000EFC  26D9               	addwf	fsr2l
 15476  000EFE  503F               	movf	((c:i2recv_msg@qptr+1)),c,w
 15477  000F00  22DA               	addwfc	fsr2h
 15478  000F02  EE10 F035          	lfsr	1,035h
 15479  000F06  503E               	movf	((c:i2recv_msg@qptr)),c,w
 15480  000F08  26E1               	addwf	fsr1l
 15481  000F0A  503F               	movf	((c:i2recv_msg@qptr+1)),c,w
 15482  000F0C  22E2               	addwfc	fsr1h
 15483  000F0E  50E7               	movf	indf1,w
 15484  000F10  0100               	movlb	0	; () banked
 15485  000F12  6F80               	movwf	(??i2_recv_msg+0+0)&0ffh
 15486  000F14  0100               	movlb	0	; () banked
 15487  000F16  2980               	incf	((??i2_recv_msg+0+0))&0ffh,w
 15488  000F18  0B03               	andlw	low(03h)
 15489  000F1A  6EDF               	movwf	indf2
 15490                           
 15491                           	line	89
 15492                           	
 15493  000F1C                     i2l19454:; BSR set to: 0
 15494                           
 15495                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
 15496  000F1C  0100               	movlb	0	; () banked
 15497  000F1E  EE20 F002          	lfsr	2,02h
 15498  000F22  0100               	movlb	0	; () banked
 15499  000F24  5185               	movf	((i2recv_msg@qmsg))&0ffh,w
 15500  000F26  26D9               	addwf	fsr2l
 15501  000F28  0100               	movlb	0	; () banked
 15502  000F2A  5186               	movf	((i2recv_msg@qmsg+1))&0ffh,w
 15503  000F2C  22DA               	addwfc	fsr2h
 15504  000F2E  C041  FFE1         	movff	(c:i2recv_msg@msgtype),fsr1l
 15505  000F32  C042  FFE2         	movff	(c:i2recv_msg@msgtype+1),fsr1h
 15506  000F36  CFDF FFE7          	movff	indf2,indf1
 15507                           	line	91
 15508                           	
 15509  000F3A                     i2l19456:; BSR set to: 0
 15510                           
 15511                           ;messages.c: 91: qmsg->full = 0;
 15512  000F3A  C085  FFD9         	movff	(i2recv_msg@qmsg),fsr2l
 15513  000F3E  C086  FFDA         	movff	(i2recv_msg@qmsg+1),fsr2h
 15514  000F42  0E00               	movlw	low(0)
 15515  000F44  6EDF               	movwf	indf2
 15516                           	line	92
 15517                           	
 15518  000F46                     i2l19458:; BSR set to: 0
 15519                           
 15520                           ;messages.c: 92: return (tlength);
 15521  000F46  0100               	movlb	0	; () banked
 15522  000F48  0100               	movlb	0	; () banked
 15523  000F4A  5183               	movf	((i2recv_msg@tlength))&0ffh,w
 15524  000F4C  D005               	goto	i2l5479
 15525                           	
 15526  000F4E                     i2l19460:; BSR set to: 0
 15527                           
 15528  000F4E  D004               	goto	i2l5479
 15529                           	line	93
 15530                           	
 15531  000F50                     i2l19462:; BSR set to: 0
 15532                           
 15533                           ;messages.c: 93: } else {
 15534  000F50  D003               	goto	i2l5479
 15535                           	
 15536  000F52                     i2l5477:; BSR set to: 0
 15537                           
 15538                           	line	94
 15539                           	
 15540  000F52                     i2l19464:; BSR set to: 0
 15541                           
 15542                           ;messages.c: 94: return (-4);
 15543  000F52  0EFC               	movlw	(-4)&0ffh
 15544  000F54  D001               	goto	i2l5479
 15545                           	
 15546  000F56                     i2l19466:; BSR set to: 0
 15547                           
 15548  000F56  D000               	goto	i2l5479
 15549                           	line	95
 15550                           	
 15551  000F58                     i2l5480:; BSR set to: 0
 15552                           
 15553                           	line	96
 15554                           	
 15555  000F58                     i2l5479:; BSR set to: 0
 15556                           
 15557  000F58  0012               	return
 15558                           	opt stack 0
 15559                           GLOBAL	__end_ofi2_recv_msg
 15560  000F5A                     	__end_ofi2_recv_msg:
 15561                           	signat	i2_recv_msg,89
 15562                           	global	i2_check_msg
 15563                           
 15564 ;; *************** function i2_check_msg *****************
 15565 ;; Defined at:
 15566 ;;		line 222 in file "../src/messages.c"
 15567 ;; Parameters:    Size  Location     Type
 15568 ;;  check_msg       2   51[COMRAM] PTR struct __msg_queue
 15569 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 15570 ;; Auto vars:     Size  Location     Type
 15571 ;;		None
 15572 ;; Return value:  Size  Location     Type
 15573 ;;                  1    wreg      unsigned char 
 15574 ;; Registers used:
 15575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15576 ;; Tracked objects:
 15577 ;;		On entry : 0/0
 15578 ;;		On exit  : 0/0
 15579 ;;		Unchanged: 0/0
 15580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15581 ;;      Params:         2       0       0       0       0
 15582 ;;      Locals:         0       0       0       0       0
 15583 ;;      Temps:          1       0       0       0       0
 15584 ;;      Totals:         3       0       0       0       0
 15585 ;;Total ram usage:        3 bytes
 15586 ;; Hardware stack levels used:    1
 15587 ;; This function calls:
 15588 ;;		Nothing
 15589 ;; This function is called by:
 15590 ;;		_SleepIfOkay
 15591 ;; This function uses a non-reentrant model
 15592 ;;
 15593                           psect	text56,class=CODE,space=0,reloc=2
 15594                           global __ptext56
 15595  00202A                     __ptext56:
 15596                           psect	text56
 15597                           	file	"../src/messages.c"
 15598                           	line	222
 15599                           	global	__size_ofi2_check_msg
 15600  0000                     	__size_ofi2_check_msg	equ	__end_ofi2_check_msg-i2_check_msg
 15601                           	
 15602  00202A                     i2_check_msg:; BSR set to: 0
 15603                           
 15604                           	opt	stack 19
 15605                           	line	223
 15606                           	
 15607  00202A                     i2l18926:
 15608                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
 15609  00202A  EE20 F035          	lfsr	2,035h
 15610  00202E  5034               	movf	((c:i2check_msg@qptr)),c,w
 15611  002030  26D9               	addwf	fsr2l
 15612  002032  5035               	movf	((c:i2check_msg@qptr+1)),c,w
 15613  002034  22DA               	addwfc	fsr2h
 15614  002036  50DF               	movf	indf2,w
 15615  002038  6E36               	movwf	(??i2_check_msg+0+0)&0ffh,c
 15616  00203A  5036               	movf	((??i2_check_msg+0+0)),c,w
 15617  00203C  0D0D               	mullw	0Dh
 15618  00203E  50F3               	movf	(prodl),c,w
 15619  002040  2434               	addwf	((c:i2check_msg@qptr)),c,w
 15620  002042  6ED9               	movwf	c:fsr2l
 15621  002044  50F4               	movf	(prodh),c,w
 15622  002046  2035               	addwfc	((c:i2check_msg@qptr+1)),c,w
 15623  002048  6EDA               	movwf	1+c:fsr2l
 15624  00204A  50DF               	movf	indf2,w
 15625  00204C  D000               	goto	i2l5523
 15626                           	
 15627  00204E                     i2l18928:
 15628                           	line	224
 15629                           	
 15630  00204E                     i2l5523:
 15631  00204E  0012               	return
 15632                           	opt stack 0
 15633                           GLOBAL	__end_ofi2_check_msg
 15634  002050                     	__end_ofi2_check_msg:
 15635                           	signat	i2_check_msg,89
 15636                           	global	i2_memcpy
 15637                           
 15638 ;; *************** function i2_memcpy *****************
 15639 ;; Defined at:
 15640 ;;		line 13 in file "/opt/microchip/xc8/v1.10/sources/memcpy.c"
 15641 ;; Parameters:    Size  Location     Type
 15642 ;;  memcpy          2   51[COMRAM] PTR void 
 15643 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
 15644 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
 15645 ;;  memcpy          2   53[COMRAM] PTR const void 
 15646 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 15647 ;;		 -> i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 15648 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(5), 
 15649 ;;  memcpy          2   55[COMRAM] unsigned int 
 15650 ;; Auto vars:     Size  Location     Type
 15651 ;;  memcpy          2   59[COMRAM] PTR const unsigned char 
 15652 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 15653 ;;		 -> i2c_slave_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 15654 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(5), 
 15655 ;;  memcpy          2   57[COMRAM] PTR unsigned char 
 15656 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
 15657 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
 15658 ;; Return value:  Size  Location     Type
 15659 ;;                  2   51[COMRAM] PTR void 
 15660 ;; Registers used:
 15661 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 15662 ;; Tracked objects:
 15663 ;;		On entry : 0/0
 15664 ;;		On exit  : 0/0
 15665 ;;		Unchanged: 0/0
 15666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15667 ;;      Params:         6       0       0       0       0
 15668 ;;      Locals:         4       0       0       0       0
 15669 ;;      Temps:          0       0       0       0       0
 15670 ;;      Totals:        10       0       0       0       0
 15671 ;;Total ram usage:       10 bytes
 15672 ;; Hardware stack levels used:    1
 15673 ;; This function calls:
 15674 ;;		Nothing
 15675 ;; This function is called by:
 15676 ;;		i2_send_msg
 15677 ;;		i2_recv_msg
 15678 ;; This function uses a non-reentrant model
 15679 ;;
 15680                           psect	text57,class=CODE,space=0,reloc=2
 15681                           global __ptext57
 15682  001D3C                     __ptext57:
 15683                           psect	text57
 15684                           	file	"/opt/microchip/xc8/v1.10/sources/memcpy.c"
 15685                           	line	13
 15686                           	global	__size_ofi2_memcpy
 15687  0000                     	__size_ofi2_memcpy	equ	__end_ofi2_memcpy-i2_memcpy
 15688                           	
 15689  001D3C                     i2_memcpy:
 15690                           	opt	stack 17
 15691                           	line	24
 15692                           	
 15693  001D3C                     i2l19468:
 15694  001D3C  C036  F03C         	movff	(c:i2memcpy@s1),(c:i2memcpy@s)
 15695  001D40  C037  F03D         	movff	(c:i2memcpy@s1+1),(c:i2memcpy@s+1)
 15696                           	line	25
 15697  001D44  C034  F03A         	movff	(c:i2memcpy@d1),(c:i2memcpy@d)
 15698  001D48  C035  F03B         	movff	(c:i2memcpy@d1+1),(c:i2memcpy@d+1)
 15699                           	line	26
 15700  001D4C  D00F               	goto	i2l19476
 15701                           	
 15702  001D4E                     i2l17038:
 15703                           	line	27
 15704                           	
 15705  001D4E                     i2l19470:
 15706  001D4E  C03C  FFD9         	movff	(c:i2memcpy@s),fsr2l
 15707  001D52  C03D  FFDA         	movff	(c:i2memcpy@s+1),fsr2h
 15708  001D56  C03A  FFE1         	movff	(c:i2memcpy@d),fsr1l
 15709  001D5A  C03B  FFE2         	movff	(c:i2memcpy@d+1),fsr1h
 15710  001D5E  CFDF FFE7          	movff	indf2,indf1
 15711                           	
 15712  001D62                     i2l19472:
 15713  001D62  4A3C               	infsnz	((c:i2memcpy@s)),c
 15714  001D64  2A3D               	incf	((c:i2memcpy@s+1)),c
 15715                           	
 15716  001D66                     i2l19474:
 15717  001D66  4A3A               	infsnz	((c:i2memcpy@d)),c
 15718  001D68  2A3B               	incf	((c:i2memcpy@d+1)),c
 15719  001D6A  D000               	goto	i2l19476
 15720                           	
 15721  001D6C                     i2l17037:
 15722                           	line	26
 15723                           	
 15724  001D6C                     i2l19476:
 15725  001D6C  0638               	decf	((c:i2memcpy@n)),c
 15726  001D6E  A0D8               	btfss	status,0
 15727  001D70  0639               	decf	((c:i2memcpy@n+1)),c
 15728  001D72  2838               	incf	((c:i2memcpy@n))&0ffh,w
 15729  001D74  B4D8               	btfsc	status,2
 15730  001D76  2839               	incf ((c:i2memcpy@n+1))&0ffh,w
 15731                           
 15732  001D78  A4D8               	btfss	status,2
 15733  001D7A  D001               	goto	i2u237_41
 15734  001D7C  D001               	goto	i2u237_40
 15735  001D7E                     i2u237_41:
 15736  001D7E  D7E7               	goto	i2l19470
 15737  001D80                     i2u237_40:
 15738  001D80  D000               	goto	i2l17040
 15739                           	
 15740  001D82                     i2l17039:
 15741                           	line	32
 15742                           ;	Return value of i2_memcpy is never used
 15743                           	
 15744  001D82                     i2l17040:
 15745  001D82  0012               	return
 15746                           	opt stack 0
 15747                           GLOBAL	__end_ofi2_memcpy
 15748  001D84                     	__end_ofi2_memcpy:
 15749                           	signat	i2_memcpy,90
 15750                           	GLOBAL	__activetblptr
 15751  0000                     __activetblptr	EQU	0
 15752                           	psect	intsave_regs,class=BIGRAM,space=1
 15753                           psect	text58,class=CODE,space=0,reloc=2
 15754                           global __ptext58
 15755  000000                     __ptext58:
 15756                           	PSECT	rparam,class=COMRAM,space=1
 15757                           	GLOBAL	__Lrparam
 15758                           	FNCONF	rparam,??,?
 15759                           GLOBAL	__Lparam, __Hparam
 15760                           GLOBAL	__Lrparam, __Hrparam
 15761  0000                     __Lparam	EQU	__Lrparam
 15762  0000                     __Hparam	EQU	__Hrparam


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         224
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     68      76
    BANK0           128     68      74
    BANK1           256     70     232
    BANK2           256      0      54
    BANK3           256      0       0

Pointer List with Targets:

    ?_ReadTimer1	unsigned int  size(2) Largest target is 2
		 -> WriteTimer1@timer(COMRAM[2]), ReadTimer1@timer(COMRAM[2]), 

    ?_ReadADC	int  size(2) Largest target is 0

    ?_memcpy	PTR void  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@data(BANK0[10]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    ?_in_high_int	int  size(2) Largest target is 0

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@data(BANK0[10]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@data(BANK0[10]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), 
		 -> i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), main@uc(BANK1[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), 
		 -> i2c_slave_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), main@uc(BANK1[5]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 10
		 -> i2c_slave_int_handler@empty(BANK0[4]), i2c_slave_int_handler@data(BANK0[10]), 

    i2c_master_send@msg	PTR unsigned char  size(2) Largest target is 2
		 -> timer1_lthread@toSend(BANK1[2]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK1[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1023
		 -> RAM(DATA[1023]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 10
		 -> i2c_slave_int_handler@data(BANK0[10]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> i2c_slave_int_handler@msgtype(BANK0[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 3
		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@error_buf(BANK0[3]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), NULL(NULL[0]), main@uc(BANK1[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1023
		 -> RAM(DATA[1023]), i2c_slave_int_handler@msgtype(BANK0[1]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@data(BANK0[10]), main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@data(BANK0[10]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 11
		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), 
		 -> i2c_slave_int_handler@error_buf(BANK0[3]), main@msgbuffer(BANK1[11]), main@uc(BANK1[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _SleepIfOkay->i2_in_low_int
    _FromMainHigh_recvmsg->i2_recv_msg
    _ToMainHigh_sendmsg->i2_send_msg
    _FromMainLow_recvmsg->i2_recv_msg
    i2_in_low_int->i2_in_high_int
    i2_send_msg->i2_memcpy
    i2_recv_msg->i2_memcpy
    _InterruptHandlerLow->_adc_int_handler
    _timer1_int_handler->_ToMainLow_sendmsg
    _adc_int_handler->_ToMainLow_sendmsg
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_timer1_lthread
    _init_timer1_lthread->_OpenADC
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainHigh_recvmsg->_recv_msg
    _ToMainLow_recvmsg->_recv_msg
    _timer1_lthread->_i2c_master_send
    _FromMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _i2c_int_handler->_i2c_slave_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    _i2c_slave_int_handler->_FromMainLow_recvmsg
    _ToMainHigh_sendmsg->i2_send_msg
    _FromMainLow_recvmsg->i2_recv_msg

Critical Paths under _main in BANK1

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _ToMainHigh_recvmsg->_recv_msg
    _ToMainLow_recvmsg->_recv_msg
    _FromMainLow_sendmsg->_send_msg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                56    56      0    4821
                                             67 BANK0      1     1      0
                                             17 BANK1     53    53      0
                     _init_uart_recv
                           _init_i2c
                _init_timer1_lthread
                        _init_queues
                         _OpenTimer1
                  _enable_interrupts
                _i2c_configure_slave
                          _OpenUSART
              _block_on_To_msgqueues
                 _ToMainHigh_recvmsg
                     _timer0_lthread
                  _ToMainLow_recvmsg
                     _timer1_lthread
                _FromMainLow_sendmsg
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      22
                                             54 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      22
                                             54 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  5     3      2     198
                                             59 BANK0      5     3      2
                            _OpenADC
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     134
                                             58 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     0      1      66
                                             54 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  2     1      1      22
                                             54 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            3     0      3     220
                                             54 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0      66
                                             60 BANK0      1     1      0
                            _in_main
                          _check_msg
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             58 BANK0      2     0      2
                         _in_low_int
                        _in_high_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             56 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (3) _in_high_int                                          2     0      2       0
                                             54 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     0      5     772
                                             12 BANK1      5     0      5
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8      23
                                             54 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     0      5     772
                                             12 BANK1      5     0      5
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      12     4      8     161
                                             59 BANK0      8     0      8
                                              0 BANK1      4     4      0
                    _i2c_master_send
 ---------------------------------------------------------------------------------
 (1) _FromMainLow_sendmsg                                  4     0      4     741
                                             11 BANK1      4     0      4
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8      88
                                             54 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     134
                                             54 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _send_msg                                            12     6      6     648
                                             64 BANK0      1     1      0
                                              0 BANK1     11     5      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7     679
                                             64 BANK0      2     2      0
                                              0 BANK1     12     5      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     174
                                             54 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2      44
                                             54 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     0      1      22
                                             54 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (2) _i2c_master_send                                      5     2      3      62
                                             54 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     2      3     154
                                             54 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _SetChanADC                                           2     1      1      22
                                             54 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    4980
                                             34 COMRAM    17    17      0
                 _timer1_int_handler
                    _adc_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   6     6      0    1688
                                             26 COMRAM     6     6      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (6) _adc_int_handler                                      8     8      0    1707
                                             26 COMRAM     8     8      0
                            _ReadADC
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                2     2      0    1585
                                             26 COMRAM     2     2      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     0      4    1562
                                             22 COMRAM     4     0      4
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      45
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ReadADC                                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    1496
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     395
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    9227
                                             40 BANK0     14    14      0
                    _i2c_int_handler
                 _timer0_int_handler
                        _SleepIfOkay
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                     0     0      0    4935
              _i2c_slave_int_handler
             _i2c_master_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  8     8      0    4146
                                             12 BANK0      8     8      0
                        _WriteTimer0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     146
                       i2_in_low_int
                      i2_in_high_int
                        i2_check_msg
                   _enter_sleep_mode
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     0      5    2000
                                              7 BANK0      5     0      5
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _i2c_slave_int_handler                              28    28      0    4935
                                             12 BANK0     28    28      0
                       _handle_start
                _FromMainLow_recvmsg
              _start_i2c_slave_reply
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     0      4    1912
                                              5 BANK0      4     0      4
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) _FromMainLow_recvmsg                                 5     0      5    2000
                                              7 BANK0      5     0      5
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) _start_i2c_slave_reply                               5     2      3      66
                                             51 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     0      1      22
                                             51 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (12) _i2c_master_int_handler                              1     1      0       0
                                             51 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2      68
                                             51 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             53 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (12) i2_in_high_int                                       2     0      2       0
                                             51 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    1819
                                             61 COMRAM     7     1      6
                                              0 BANK0      5     5      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    1907
                                             61 COMRAM     7     0      7
                                              0 BANK0      7     7      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     146
                                             51 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     484
                                             51 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_uart_recv
   _init_i2c
   _init_timer1_lthread
     _OpenADC
     _SetChanADC
   _init_queues
     _init_queue
   _OpenTimer1
   _enable_interrupts
   _i2c_configure_slave
   _OpenUSART
   _block_on_To_msgqueues
     _in_main
       _in_low_int
         _in_high_int
       _in_high_int
     _check_msg
     _Delay1KTCYx
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _timer0_lthread
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _timer1_lthread
     _i2c_master_send
   _FromMainLow_sendmsg
     _send_msg
       _memcpy
   _uart_lthread

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _adc_int_handler
     _ReadADC
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      36       8       21.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100     46      E8       6       90.6%
BITBANK0            80      0       0       3        0.0%
BANK0               80     44      4A       4       57.8%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     44      4C       1       59.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0      24       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B4      11        0.0%
DATA                 0      0     1D8      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.10 build 47796 
Symbol Table                                                                                   Tue Sep 25 05:46:57 2012

                        _STKPTRbits 000FFC                    main@uthread_data 01BE  
          _MQ_Main_Willing_to_block 0048                         _SSPSTATbits 000FC7  
                                _DA 007E3D                                  _BF 007E38  
                                _DC 007EC1                                  _CK 007C16  
                                _P2 007C3C                                  _S2 007C3B  
                                _CS 007C22                                  _DT 007C17  
                                _GO 007E11                                  _PC 000FF9  
                                _PD 007E82                                  _RD 007C20  
                                _UA 007E39                                  _RI 007E84  
                                _OV 007EC3                                  _TO 007E83  
                                _RW 007E3A                                  _RX 007C17  
                                _WR 007D31                                  _TX 007C16  
         __end_of_ToMainLow_recvmsg 1F88                                  bsr 000FE0  
         __end_of_ToMainLow_sendmsg 2074                        __CFG_CP0$OFF 000000  
                 i2recv_msg@msgtype 0041                   i2recv_msg@tlength 0083  
              ?_FromMainLow_recvmsg 0087                                 _DA1 007E3D  
                               _DA2 007C3D                                 _BF1 007E38  
                               _BF2 007C38                                 _AN0 007C00  
                               _AN1 007C01                                 _AN2 007C02  
                               _AN3 007C03                                 _AN4 007C05  
                               _AN5 007C20                                 _CM0 007DA0  
                               _AN6 007C21                                 _CM1 007DA1  
                               _AN7 007C22                                 _CM2 007DA2  
                               _AN8 007C0A                                 _AN9 007C0B  
                               _LA0 007C48                                 _P1A 007C12  
                               _LA1 007C49                                 _P1B 007C1D  
                               _LB0 007C50                                 _LA2 007C4A  
                               _P1C 007C1E                                 _LB1 007C51  
                               _LA3 007C4B                                 _P1D 007C1F  
                               _LC0 007C58                                 _LB2 007C52  
                               _LA4 007C4C                                 _LC1 007C59  
                               _LB3 007C53                                 _LA5 007C4D  
                               _CKE 007E3E                ?_FromMainLow_sendmsg 01AD  
                               _LD0 007C60                                 _LC2 007C5A  
                               _LB4 007C54                                 _LA6 007C4E  
                               _LD1 007C61                                 _LC3 007C5B  
                               _LB5 007C55                                 _LA7 007C4F  
                               _LE0 007C68                                 _LD2 007C62  
                               _LC4 007C5C                                 _LB6 007C56  
                               _LE1 007C69                                 _LD3 007C63  
                               _LC5 007C5D                                 _LB7 007C57  
                               _LE2 007C6A                                 _LD4 007C64  
                               _LC6 007C5E                                 _LE3 007C6B  
                               _LD5 007C65                                 _LC7 007C5F  
                               _LE4 007C6C                                 _LD6 007C66  
                               _IBF 007CB7                                 _LE5 007C6D  
                               _LD7 007C67                                 _LE6 007C6E  
                               _LE7 007C6F                                 _CIS 007DA3  
                               _CKP 007E34                                 _PA1 007C12  
                               _GIE 007F97                                 _PA2 007C11  
                               _PB2 007C22                                 _PC2 007C21  
                               _BOR 007E80                                 _RA0 007C00  
                               _PD2 007C20                                 _RA1 007C01  
                               _RB0 007C08                                 _RA2 007C02  
                               _RB1 007C09                                 _RA3 007C03  
                               _RC0 007C10                                 _RB2 007C0A  
                               _RA4 007C04                                 _RC1 007C11  
                               _RB3 007C0B                                 _RA5 007C05  
                               _RD0 007C18                                 _RC2 007C12  
                               _RB4 007C0C                                 _RA6 007C06  
                               _BSR 000FE0                                 _RD1 007C19  
                               _RC3 007C13                                 _RB5 007C0D  
                               _RA7 007C07                                 _RE0 007C20  
                               _RD2 007C1A                                 _RC4 007C14  
                               _RB6 007C0E                                 _RE1 007C21  
                               _RD3 007C1B                                 _RC5 007C15  
                               _RB7 007C0F                                 _RE2 007C22  
                               _RD4 007C1C                                 _RC6 007C16  
                               _RE3 007CB3                                 _RD5 007C1D  
                               _RC7 007C17                                 _RE4 007C24  
                               _RD6 007C1E                                 _OBF 007CB6  
                               _UA1 007E39                                 _RE5 007C25  
                               _RD7 007C1F                                 _RC9 007D5E  
                               _UA2 007C39                                 _RE6 007C26  
                               _W4E 007DC1                                 _RE7 007C27  
                               _PGC 007C0E                                 _PGD 007C0F  
                               _PCL 000FF9                                 _SDA 007C14  
                               _RDE 007C20                                 _PR2 000FCB  
                               _PEN 007E2A                                 _SDI 007C14  
                               _SCK 007C13                                 _SCL 007C13  
                               _SS1 007C05                                 _SDO 007C15  
                               _SS2 007C1B                                 _SEN 007E28  
                               _RW1 007E3A                                 _PSA 007EAB  
                               _RW2 007C3A                                 _POR 007E81  
                               _RX9 007D5E                                 _SMP 007E3F  
                               _TX9 007D66                                 _TOS 000FFD  
                               _WRE 007C21                                 _WUE 007DC1  
                               _nA2 007C3D                                 _nCS 007C22  
                               _nW2 007C3A                                 _nPD 007E82  
              __size_of_WriteTimer0 0012                __size_of_WriteTimer1 0012  
                               _nRD 007C20                                 _nRI 007E84  
                               _nTO 007E83                                 _nWR 007C21  
                    _FromMainLow_MQ 0100                                 wreg 000FE8  
         i2c_slave_int_handler@data 008E                          _TXSTA1bits 000FAC  
                      __CFG_IESO$ON 000000                        ?_in_high_int 00B6  
                  ??_init_uart_recv 00B8        i2c_slave_int_handler@msgtype 00A4  
                   ReadTimer1@timer 0003                 i2recv_msg@maxlength 0040  
                              l1802 20E0                                l1810 1B5C  
                              l1811 1B48                                l1812 1B5A  
                              l1815 1BA2                                l1808 1B1C  
                              l1816 1BB4                                l1809 1B5C  
                              l1817 1BB4                                _AN10 007C09  
                              _AN11 007C0C                                _AN12 007C08  
                              l3650 09BE                                l3651 0A4E  
                              l3660 0AA0                                l3652 0A0E  
                              l5501 1FB2                                l3661 0B8E  
                              l3653 0A0E                                l3645 0966  
                              l3670 0B92                                l3662 0B6C  
                              l3654 0A14                                l3646 09BC  
                              l1799 2156                                l3671 0B92  
                              l3663 0AA4                                l3655 0A1A  
                              l3647 09BA                                l3664 0B8C  
                              l3648 0A50                                l3656 0A16  
                              l3665 0AF4                                l3649 0A2E  
                              l3657 0A28                                l3666 0B16  
                              l3658 0A2A                                l5523 1EBA  
                              l3667 0B18                                l3659 0AA2  
                              l5540 14E4                                l3668 0B68  
                              l5517 1A38                                l3669 0B90  
                              l5470 18D0                                l5534 142E  
                              l5535 14E4                                l5480 0E38  
                              l5536 143E                                l5473 10C6  
                              l5537 1472                                l5474 1168  
                              l5538 14A6                                l5539 14E2  
                              l5468 189A                                l5477 0E32  
                              l5469 18D0                                l5478 0D6E  
                              l5479 0E38                                _ADIE 007CEE  
                              l7344 0F66                                l5488 1F86  
                              l5496 1F56                                l7440 1F26  
                              _ADIF 007CF6                                _ADEN 007D5B  
                              l7345 1062                                _ADFM 007E07  
                              l7346 1004                                l7347 0F7E  
                              l7348 1030                                l7437 1AFE  
                              _CCP1 007C12                                _ADIP 007CFE  
                              l9239 20CC                                _CKE1 007E3E  
                              _CKE2 007C3E                                _ADON 007E10  
                              _P1M0 007DEE                                _CHS0 007E12  
                              _P1M1 007DEF                                _CHS1 007E13  
                              _CHS2 007E14                                _CHS3 007E15  
                              _CKP1 007E34                                _DDRA 000F92  
                              _CKP2 007C34                                _DDRB 000F93  
                              _DDRC 000F94                                _DDRD 000F95  
                              _DDRE 000F96                                _GCEN 007E2F  
                              _KBI0 007C0C                                _KBI1 007C0D  
                              _CMIE 007D06                                _KBI2 007C0E  
                              _CMIF 007D0E                                _KBI3 007C0F  
                              _PA2E 007C27                                _GIEH 007F97  
                              _CMIP 007D16                                _BRGH 007D62  
                              _PB1E 007C26                                _GIEL 007F96  
                              _PC1E 007C25                                _PB3E 007C24  
                              _T0IE 007F95                                _PC3E 007C23  
                              _T0IF 007F92                                _RD16 007E6F  
                              _FLT0 007C08                                _CREN 007D5C  
                              _T0CS 007EAD                                _FERR 007D5A  
                              u1020 1B08                                u1021 1B06  
                              _DONE 007E11                                u1030 1B34  
                              u1031 1B32                                u1040 1B76  
                              u1200 167E                                u2000 0A9C  
                              u1041 1B74                                u1201 167C  
                              u2001 0A9A                                u2010 10C0  
                              u1050 1B8E                                u1210 168E  
                              _T0IP 007F8A                                u2011 10BE  
                              u1051 1B8C                                u1211 168C  
                              u2020 1C08                                u1300 1460  
                              u1220 169C                                _IBOV 007CB5  
                              _CVR0 007DA8                                u2021 1C06  
                              u1301 145E                                u1221 169A  
                              _CVR1 007DA9                                u2030 0D48  
                              u1310 1494                                u1230 16AE  
                              _PDC0 007DB8                                _CVR2 007DAA  
                              u2031 0D46                                u1311 1492  
                              u1231 16AC                                _PDC1 007DB9  
                              _FREE 007D34                                _CVR3 007DAB  
                              u2040 0D68                                u1320 14C6  
                              u1240 16BE                                _PDC2 007DBA  
                              u2041 0D66                                u1321 14C2  
                              u1241 16BC                                _PDC3 007DBB  
                              u2050 0F62                                u1330 1C70  
                              u1250 16CC                                u1170 1E1E  
                              _PDC4 007DBC                                u2051 0F60  
                              u1331 1C6E                                u1251 16CA  
                              u1171 1E1C                                _T0SE 007EAC  
                              _PDC5 007DBD                                _CSRC 007D67  
                              u2060 102E                                u1340 1C86  
                              u1260 16E0                                u1180 1E3C  
                              _PDC6 007DBE                                u2061 102C  
                              u1341 1C84                                u1261 16DE  
                              u1181 1E3A                                _LATA 000F89  
                              u1350 1896                                u1326 14C8  
                              u1270 1702                                u1190 1670  
                              _LATB 000F8A                                u1351 1894  
                              u1271 1700                                u1191 166E  
                              _LATC 000F8B                                u1360 18CE  
                              u1280 170A                                _D_A2 007C3D  
                              _LATD 000F8C                                _FSR0 000FE9  
                              u1361 18CC                                u1281 1708  
                              _LATE 000F8D                                _FSR1 000FE1  
                              u1290 142A                                _FSR2 000FD9  
                              u1291 1428                                u1800 194C  
                              _INT0 007C08                                u1801 194A  
                              _INT1 007C09                                _INT2 007C0A  
                              _SDA1 007C14                                _SDA2 007C19  
                              _RCD8 007D58                                _IPR1 000F9F  
                              _IPR2 000FA2                                _PIE1 000F9D  
                              _IPR3 000FA5                                _IPEN 007E87  
                              _PIE2 000FA0                                _PEN1 007E2A  
                              _PIE3 000FA3                                _PEN2 007C2A  
                              u2387 20E4                                _CVRR 007DAD  
                              _SDI1 007C14                                _SCK1 007C13  
                              _PEIE 007F96                                _SDI2 007C19  
                              _SCK2 007C18                                _SCL1 007C13  
                              u1990 09B6                                _SCL2 007C18  
                              u1991 09B4                                _RBIE 007F93  
                              _RBIF 007F90                                _RCIE 007CED  
                              _RCIF 007CF5                                _RCEN 007E2B  
                              _SDO1 007C15                                _SDO2 007C1A  
                              _SEN1 007E28                                _PIR1 000F9E  
                              _SEN2 007C28                                _SCS0 007E98  
                              _RBIP 007F88                                _MSK0 007E40  
                              _PIR2 000FA1                                _SCS1 007E99  
                              _MSK1 007E41                                _PIR3 000FA4  
                              _MSK2 007E42                                _MSK3 007E43  
                              _RCIP 007CFD                                _MSK4 007E44  
                              _MSK5 007E45                                _MSK6 007E46  
                              _MSK7 007E47                                _OERR 007D59  
                              _RCON 000FD0                                _SCKP 007DC4  
                              _RCMT 007DC6                                _RBPU 007F8F  
                              _RX91 007D5E                                _PSP0 007C18  
                              _SMP1 007E3F                                _PSP1 007C19  
                              _SMP2 007C3F                                _PSP2 007C1A  
                              _PSP3 007C1B                                _PSP4 007C1C  
                              _PSP5 007C1D                                _PSP6 007C1E  
                              _TX91 007D66                                _PSP7 007C1F  
                              _RX9D 007D58                                _TMR0 000FD6  
                              _TMR1 000FCE                                _TMR2 000FCC  
                              _PROD 000FF3                                _RJPU 007C07  
                              _WCOL 007E37                                _SPEN 007D5F  
                              _RSEN 007E29                                _TX9D 007D60  
                              _SREN 007D5D                                _OSTS 007E9B  
                              _TXD8 007D60                                _TOSH 000FFE  
                              _TOSL 000FFD                                _WREG 000FE8  
                              _TRMT 007D61                                _STOP 007E3C  
                              _ZERO 007EC2                                _TXIE 007CEC  
                              _TOSU 000FFF                                _WREN 007D32  
                              _TXIF 007CF4                                _TXEN 007D65  
                              _SYNC 007D64                                _TXIP 007CFC  
                              _R_W2 007C3A                     _FromMainHigh_MQ 0200  
                              _nBOR 007E80                       __CFG_FCMEN$ON 000000  
                              _nRC8 007D5E                                _nSS1 007C05  
                              _nSS2 007C1B                                _nPOR 007E81  
                              _nTX8 007D66              ?_block_on_To_msgqueues 0001  
                              _main 089C                                fsr0h 000FEA  
                              fsr1h 000FE2                                fsr0l 000FE9  
                              fsr2h 000FDA                                indf1 000FE7  
                              fsr1l 000FE1                                indf2 000FDF  
                              fsr2l 000FD9                         main@msgtype 01CB  
                        i1_send_msg 1710                                pclat 000FFA  
                       i2_check_msg 202A                                prodh 000FF4  
                              prodl 000FF3               handle_start@data_read 0034  
                              start 00D2                          i2_recv_msg 0E3A  
                     __CFG_FOSC2$ON 000000                    ?_adc_int_handler 0001  
        i2c_slave_int_handler@empty 0098                          i2_send_msg 1262  
         ToMainHigh_recvmsg@msgtype 01AF                        _ECCP1DELbits 000FB7  
                   __end_of_ReadADC 2146                        _ECCP1CONbits 000FBD  
                    send_msg@length 01A4                     __end_of_OpenADC 1956  
       __size_of_timer0_int_handler 00C0             ??_i2c_slave_int_handler 008C  
                       _Delay1KTCYx 20E2                               l11026 214E  
                             l12824 1C5C               ??_FromMainLow_recvmsg 0045  
                             l14611 1C74                               l12819 1A9C  
                             l14612 1CAA                               l14613 1CA8  
                             l17102 20E2                               l14614 1CAA  
                             l17103 20F4                               l17104 20F4  
                             l17040 1C0A                               l17037 1BEE  
                             l17038 1BC8                               l17039 1C0A  
                             l18200 1BA0                               l16520 1682  
                             l16441 1952                               l16521 1690  
                             l16442 1954                               l18202 1BA2  
                             l16530 170E                               l16522 16A0  
                             l16531 170E                               l16523 16A2  
                             l18204 1BB2                               l16524 16B0  
                             l19100 0924                               l16525 16C0  
                             l16454 20B2                               l16526 16D0  
                             l19110 0966                               l19102 0926  
                             _C1INV 007DA4                               l16527 16D2  
                             l16519 1672                               l19200 0D36  
                             l18400 16E0                               l16528 16E4  
                             l16480 1E40                               l18320 20BC  
                             l19120 0A18                               l19112 096A  
                             l19104 0928                               _DC1B0 007DEC  
                             l16529 16E6                               l16481 1E42  
                             _DC1B1 007DED                               l19210 0D94  
                             l19202 0D48                               l18170 20E0  
                             l18410 16F8                               l18402 16EA  
                             l16482 1E44                               l18330 1A88  
                             l18322 1A9E                               l19130 0A90  
                             l19122 0A1A                               l19114 09AA  
                             l19106 093E                               l19220 0E2E  
                             l19212 0DCA                               l19204 0D68  
                             l18180 1B1C                               l18172 1B00  
                             l18420 142C                               l18412 16FA  
                             l18404 16F2                               l18340 19F0  
                             l18332 1A8A                               l18324 1AA6  
                             l19140 0B6A                               l19132 0A9E  
                             l19124 0A2C                               l19116 09B8  
                             l19108 0940                               _DC2B0 007DD4  
                             _DC2B1 007DD5                               l19222 0E30  
                             l19214 0DFC                               l19206 0D6C  
                             l19150 1F86                               l18190 1B58  
                             l18182 1B34                               l18174 1B08  
                             l18430 1470                               l18422 1430  
                             l18414 1702                               l18406 16F4  
                             l18350 1E1E                               l16478 1E22  
                             l18342 1A08                               l18334 1A8C  
                             l18326 1A3A                               l18318 20B4  
                             l18166 2150                               l19134 0AA4  
                             l19142 0B6C                               l19118 09BE  
                             l19126 0A2E                               l19070 08A0  
                             _C2INV 007DA5                               l16479 1E26  
                             l19216 0E1A                               l19208 0D6E  
                             l19224 0E32                               l19160 1FB2  
                             l19152 1C0C                               l19144 1F28  
                             l18168 20CE                               l18184 1B44  
                             l18176 1B18                               l18192 1B5E  
                             l18440 14A6                               l18432 1472  
                             l18424 143E                               l18416 170A  
                             l18408 16F6                               l18360 1EF4  
                             l18352 1E26                               l18344 1A20  
                             l18336 19CC                               l18328 1A86  
                             l19136 0AF4                               l19128 0A50  
                             l19080 08EE                               l19072 08A2  
                             l19250 0F7E                               l19226 0E36  
                             l19218 0E26                               l19170 10C0  
                             l19162 1064                               l19154 1C2C  
                             l19146 1F56                               l18186 1B46  
                             l18178 1B1A                               l18194 1B76  
                             l18442 14BC                               l18434 1494  
                             l18426 1460                               l18418 1412  
                             l18370 1F10                               l18362 1F04  
                             l18354 1E2E                               l18346 1E08  
                             l18338 19D8                               l19138 0B18  
                             l19090 0902                               l19082 08F2  
                             l19074 08BA                               l19260 105E  
                             l19252 0FEE                               l19244 0F5A  
                             l19180 1158                               l19172 10C4  
                             l19164 1072                               l19156 1C34  
                             l19148 1F58                               l18188 1B48  
                             l18196 1B8E                               l18436 14A0  
                             l18428 146C                               l18380 1F22  
                             l18372 1F14                               l18364 1F06  
                             l18356 1E30                               l18348 1E12  
                             l19092 0906                               l19084 08F6  
                             l19076 08D2                               l19068 089C  
                             l19262 1062                               l19254 1004  
                             l19246 0F64                               l19190 1BDC  
                             l19182 1164                               l19174 10C6  
                             l19166 108C                               l18470 1C86  
                             l19158 1F88                               l18198 1B9E  
                             l18438 14A4                               l18390 168E  
                             l18382 165C                               l18374 1F18  
                             l18366 1F08                               l18358 1E3C  
                             l19094 091C                               l19086 08FA  
                             l19078 08EA                               l19256 1030  
                             l19248 0F66                               l19192 1BE4  
                             l19184 1168                               l19176 10F6  
                             l19168 10AE                               l18480 189A  
                             l18472 184C                               l18464 1C5E  
                             l18448 2146                               l18392 169C  
                             l18384 1664                               l18376 1F1E  
                             l18368 1F0C                               l19096 0920  
                             l19088 08FE                               l19258 105C  
                             l18570 1E84                               l19194 1BEE  
                             l19186 1BB6                               l19178 1126  
                             l18482 18BA                               l18474 1878  
                             l18466 1C72                               l18394 16AE  
                             l18386 1670                               l18378 1F20  
                             l19098 0922                               l18572 1EBA  
                             l19188 1BC8                               l19196 0CFA  
                             l18484 18C0                               l18476 1888  
                             l18468 1C74                               l18396 16BE  
                             l18388 167E                               l18830 18D2  
                             l18574 20E2                               l19198 0D14  
                             l18478 1898                               l18398 16CC  
                             l18840 194C                               l18832 18DA  
                             l18576 20EA                               l18842 2098  
                             l18834 18E6                               l18836 1906  
                             l18838 1940                               _C1OUT 007DA6  
                             _C2OUT 007DA7                               _ABDEN 007DC0  
                             _ADCAL 007E17                               _ADCS0 007E00  
                             _ADCS1 007E01                               _ADCS2 007E02  
             ??_FromMainLow_sendmsg 00C1                               _ADDEN 007D5B  
                             _CCP10 007C22                               ?_main 0001  
                             _ACKEN 007E2C                               _ACKDT 007E2D  
                             _CCP2E 007C27                               _CCP6E 007C26  
                             _CCP7E 007C25                               _CCP8E 007C24  
                             _CCP9E 007C23                               _BCLIE 007D03  
                             _BCLIF 007D0B                               _CCP1X 007DED  
                             _CCP1Y 007DEC                               _CCP2X 007DD5  
                             _ACQT0 007E03                               _CCP2Y 007DD4  
                             _ACQT1 007E04                               _ACQT2 007E05  
                             _BCLIP 007D13                               _ADRES 000FC3  
                             _CCPR1 000FBE                               _CCPR2 000FBB  
                             _BRG16 007DC3                               _GCEN1 007E2F  
                             _GCEN2 007C2F                               _CMEN0 007DA0  
                             _CMEN1 007DA1                               _CMEN2 007DA2  
                             _CARRY 007EC0                               _CHSN3 007E0B  
                             _BRGH1 007D62                               _CMCON 000FB4  
                             _CREN1 007D5C                               _FERR1 007D5A  
                             _T0CKI 007C0D                               _T1CKI 007C10  
                             _IDLEN 007E9F                               _T0CON 000FD5  
                             _T1CON 000FCD                               _CSRC1 007D67  
                             _T2CON 000FCA                               _LATA0 007C48  
                             _LATA1 007C49                               _LATB0 007C50  
                             _LATA2 007C4A                               _INDF0 000FEF  
                             _LATB1 007C51                               _LATA3 007C4B  
                             _INDF1 000FE7                               _LATC0 007C58  
                             _LATB2 007C52                               _INDF2 000FDF  
                             _LATC1 007C59                               _LATB3 007C53  
                             _LATA5 007C4D                               _LATD0 007C60  
                             _LATC2 007C5A                               _LATB4 007C54  
                             _LATD1 007C61                               _LATC3 007C5B  
                             _LATB5 007C55                               _LATA7 007C4F  
                             _LATE0 007C68                               _LATD2 007C62  
                             _LATC4 007C5C                               _LATB6 007C56  
                             _RC1IE 007CED                               _LATE1 007C69  
                             _LATD3 007C63                               _LATC5 007C5D  
                             _LATB7 007C57                               _RC1IF 007CF5  
                             _LATE2 007C6A                               _LATD4 007C64  
                             _LATC6 007C5E                               _LATD5 007C65  
                             _LATC7 007C5F                               _T0PS0 007EA8  
                             _LATD6 007C66                               _T0PS1 007EA9  
                             _LATD7 007C67                               _T0PS2 007EAA  
                             _RC1IP 007CFD                               _FSR0H 000FEA  
                             _FSR1H 000FE2                               _FSR2H 000FDA  
                             _FSR0L 000FE9                               _PCFG0 007E08  
                             _FSR1L 000FE1                               _PCFG1 007E09  
                             _PCFG2 007E0A                               _FSR2L 000FD9  
                             _PCFG3 007E0B                               _T1OSI 007C11  
                             _INT0E 007F94                               _INT0F 007F91  
                             _INT1E 007F83                               _INT1F 007F80  
                             _CVREF 007C02                               _T1OSO 007C10  
                             _INT2E 007F84                               _INT2F 007F81  
                             _CVREN 007DAF                               _INT1P 007F86  
                             _INT2P 007F87                               _T1RUN 007E6E  
                             _CVROE 007DAE                               _RC8_9 007D5E  
                             _RCEN1 007E2B                          i1memcpy@d1 0001  
                             _RCEN2 007C2B                               _PCLAT 000FF9  
                             _CVRSS 007DAC                               _MSK01 007E40  
                             _MSK02 007C40                               _MSK11 007E41  
                             _MSK12 007C41                               _MSK21 007E42  
                             _MSK22 007C42                               _MSK31 007E43  
                             _MSK32 007C43                               _MSK41 007E44  
                             _MSK42 007C44                               _MSK51 007E45  
                             _RCIDL 007DC6                               _MSK52 007C45  
                             _MSK61 007E46                               _MSK62 007C46  
                             _MSK71 007E47                               _MSK72 007C47  
                             _OERR1 007D59                          i1memcpy@s1 0003  
       FromMainHigh_recvmsg@msgtype 0088                               _VCFG0 007E0C  
                             _VCFG1 007E0D                               _RCREG 000FAE  
                             _SENDB 007D63                               _LVDIN 007C05  
                             _PLLEN 007CDE                               _RCSTA 000FAB  
                             _RX9D1 007D58                               _WCOL1 007E37  
                             _WCOL2 007C37                               _SPEN1 007D5F  
                             _TMR0H 000FD7                               _RSEN1 007E29  
                             _RSEN2 007C29                               _TMR1H 000FCF  
                             _TX1IE 007CEC                               _TX1IF 007CF4  
                             _TMR0L 000FD6                               _PRODH 000FF4  
                             _TX9D1 007D60                               _TMR1L 000FCE  
                             _PRODL 000FF3                               _SREN1 007D5D  
                             _SPBRG 000FAF                               _D_nA2 007C3D  
                             _TX1IP 007CFC                               _NOT_A 007E3D  
                             _PORTA 000F80                               _PORTB 000F81  
                             _PORTC 000F82                               _PORTD 000F83  
                             _PORTE 000F84                               _PSPIE 007CEF  
                             _PSPIF 007CF7                               _SRENA 007D5D  
                             _PRSEN 007DBF                               _PSPIP 007CFF  
                             _NOT_W 007E3A                               _START 007E3B  
                             _SSPM0 007E30                               _SSPM1 007E31  
                             _SSPM2 007E32                               _SSPM3 007E33  
                             _TX8_9 007D66                               _TRISA 000F92  
                             _TRISB 000F93                               _VREFM 007C02  
                             _TRMT1 007D61                               _STOP1 007E3C  
                             _TRISC 000F94                               _STOP2 007C3C  
                             _TRISD 000F95                               _SSPIE 007CEB  
                             _TRISE 000F96                               _VREFP 007C03  
                             _SSPIF 007CF3                               _SSPEN 007E35  
                             _TXEN1 007D65                               _SWDTE 007E88  
                             _SYNC1 007D64                               _SSPIP 007CFB  
                             _SSPOV 007E36                               _WRERR 007D33  
                             _TXREG 000FAD                               _TXSTA 000FAC  
                             _R_nW2 007C3A                          i2memcpy@d1 0034  
                             _nDONE 007E11                          i2memcpy@s1 0036  
                      ?_init_queues 0001                               _nRBPU 007F8F  
         __size_of_enter_sleep_mode 0006                     __end_of_in_main 1BB6  
                             _errno 0045          ToMainLow_recvmsg@maxlength 01AE  
           timer0_lthread@msgbuffer 00BC             i2c_configure_slave@addr 00B6  
                             tablat 000FF5                               status 000FD8  
                  __end_ofi1_memcpy 1D3C                    __end_ofi2_memcpy 1D84  
                   __initialization 1CAC                        __end_of_main 0B96  
                        _ReadTimer1 20F6         __size_of_timer1_int_handler 003E  
        __size_of_ToMainLow_recvmsg 0030          __size_of_ToMainLow_sendmsg 0024  
     __size_of_FromMainHigh_recvmsg 0028               __size_ofi2_in_low_int 0044  
                            ??_main 00C3                     send_msg@msgtype 01A5  
                     __activetblptr 000000                     send_msg@tlength 01A8  
        FromMainLow_sendmsg@msgtype 01AE                          _SetChanADC 2098  
              __end_of_handle_start 1412                       _emptyMsgCount 00C6  
                            _ADDEN1 007D5B                              _BCL1IE 007D03  
                            _BCL1IF 007D0B                              _BCL2IE 007D1E  
                            _BCL2IF 007D26                              _BCL1IP 007D13  
                            _BCL2IP 007D2E                              _ADCON0 000FC2  
                            _ADCON1 000FC1                              _ADCON2 000FC0  
                            _ACKEN1 007E2C                              _ACKEN2 007C2C  
                            _ABDOVF 007DC7                              _ACKDT1 007E2D  
                            _ACKDT2 007C2D                              _CCP1M0 007DE8  
                            _CCP1M1 007DE9                              _CCP1M2 007DEA  
                            _CCP1M3 007DEB                              _CCP2M0 007DD0  
                            _CCP2M1 007DD1                              _CCP2M2 007DD2  
                            _CCP2M3 007DD3                              _CCP1IE 007CEA  
                            _CCP1IF 007CF2                              _CCP2IE 007D00  
                            _CCP2IF 007D08                              _CCP1IP 007CFA  
                            _CCP2IP 007D10                              _ADMSK1 007E29  
                            _ADMSK2 007E2A                              _ADMSK3 007E2B  
                            _ADMSK4 007E2C                              _ADMSK5 007E2D  
                            _ADRESH 000FC4                              _ADRESL 000FC3  
                            _CCPR1H 000FBF                              _CCPR2H 000FBC  
                            _CCPR1L 000FBE                              _CCPR2L 000FBB  
                            _EECON1 000FA6                              _EECON2 000FA7  
                            _T08BIT 007EAE             ??_uart_recv_int_handler 001B  
                            _T1RD16 007E6F                              _GODONE 007E11  
                            _INT0IE 007F94                              _INT0IF 007F91  
                            _INT1IE 007F83                              _INT1IF 007F80  
                            _INT2IE 007F84                              _INT2IF 007F81  
                            _INT1IP 007F86                              _CVRCON 000FB5  
                            _INT2IP 007F87                              _MEMCON 000FCB  
                            i1l1825 006C                              i1l1826 007C  
                            i1l1827 008C                              i1l1828 008C  
                            _CVROEN 007DAE                              _T1SYNC 007E6A  
                            i1l5473 174E                              i2l1802 2138  
                            i2l1810 1DC6                              i1l5474 17C0  
                        _OpenTimer1 1E08                              i2l1811 1DB8  
                            i2l1812 1DC4                              i2l1820 17FE  
                            i2l1821 180E                              i1l5485 2072  
                            i2l1822 1812                      __CFG_WDTEN$OFF 000000  
                            i2l1808 1D9A                              i2l1809 1DC6  
                            _PCLATH 000FFA                              i1l9233 1630  
                            i1l9234 162E                              i1l9235 165A  
                            i1l9236 165A                              i2l5504 2002  
                            i2l5520 215C                              i2l5512 1FDA  
                            _PCLATU 000FFB                              i2l5530 19A8  
                            i2l5523 204E                              i2l5531 19C6  
                            i2l5526 1962                              i2l5527 19CA  
                            i2l5480 0F58                              i2l7400 0246  
                            i2l5528 1976                              _INTCON 000FF2  
                            i2l5473 12B4                              i2l7401 0272  
                            i2l5529 198A                              i2l5474 133A  
                            i2l7410 040A                              i2l7402 0354  
                            i2l7411 040C                              i2l7403 0352  
                            i2l7420 0616                              i2l7412 050A  
                            i2l7404 030E                              i2l5477 0F52  
                            i2l5493 2096                              i2l7421 05D2  
                            i2l7413 04E0                              i2l7405 02D4  
                            i2l5478 0E9C                              i2l7430 07BC  
                            i2l7422 0614                              i2l7414 049C  
                            i2l7406 030C                              i2l5479 0F58  
                            i2l7431 087A                              i2l7423 0674  
                            i2l7415 04DE                              i2l7407 0350  
                            i2l7360 13F8                              i2l7432 0878  
                            i2l7416 04F2                              i2l7408 0356  
                            i2l7361 13BC                              i2l7433 089A  
                            i2l7425 0666                              i2l7417 061A  
                            i2l7409 03F2                              i2l7362 13F6  
                            i2l7354 11F8                              i2l7434 089A  
                            i2l7426 0672                              i2l7418 0618  
                            i2l7370 2006                              i2l7363 13DC  
                            i2l7355 1182                              i2l7427 06DE  
                            i2l7419 0582                              i2l7371 2028  
                            i2l7380 0BC8                              i2l7364 13F4  
                            i2l7356 121C                              i2l7428 07BE  
                            i2l7372 200C                              i2l7381 0C84  
                            i2l7365 1410                              i2l7357 1260  
                            i2l7429 0764                              i2l7373 2012  
                            i2l7382 0C54                              i2l7366 1410  
                            i2l7390 01A0                              i2l7374 2028  
                            _TABLAT 000FF5                              i2l7383 0C82  
                            i2l7391 064C                              i2l7384 0CB2  
                            i2l7392 061E                              i2l7377 0CD0  
                            i2l7385 0CB4                              i2l7393 01B0  
                            i2l7369 2014                              i2l7386 0CF8  
                            i2l7378 0B98                              i2l7394 0200  
                            i2l7379 0CF8                              i2l7395 01FE  
                            i2l7396 064C                              i2l7397 0202  
                            i2l7389 0182                              i2l7398 028A  
                            i2l7399 0272                              _VCFG01 007E0C  
                            _VCFG11 007E0D                              _RCREG1 000FAE  
       __end_of_i2c_configure_slave 1F28                              _SENDB1 007D63  
                     ??_SleepIfOkay 0038                  __size_of_ReadUSART 0038  
                            _RCSTA1 000FAB                              _OSCFIE 007D07  
                            _OSCFIF 007D0F                              _OSCCON 000FD3  
                            _OSCFIP 007D17                              _TBLPTR 000FF6  
                            _TMR0IE 007F95                              _SPBRG1 000FAF  
                            _TMR0IF 007F92                              _TMR1IE 007CE8  
                            _TMR1IF 007CF0                              _TMR1CS 007E69  
                            _TMR2IE 007CE9                              _TMR2IF 007CF1  
                            _TMR0IP 007F8A                              _PSSAC0 007DB2  
                            _PSSAC1 007DB3                              _TMR1IP 007CF8  
                            _PSSBD0 007DB0                              _PSSBD1 007DB1  
                            _TMR2IP 007CF9                              _TMR0ON 007EAF  
                            _SPBRGH 000FB0                              _TMR1ON 007E68  
                            _PLUSW0 000FEB                              _PLUSW1 000FE3  
                            _TMR2ON 007E52                              _PLUSW2 000FDB  
                            _NOT_CS 007C22                              _SSP1IE 007CEB  
                            _SSP1IF 007CF3                              _SSP2IE 007D1F  
                            _SSP2IF 007D27                              _NOT_PD 007E82  
                            _NOT_RD 007C20                              _SSP1IP 007CFB  
                            _WDTCON 000FD1                              _NOT_RI 007E84  
                            _SSP2IP 007D2F                              _NOT_TO 007E83  
                            _START1 007E3B                              _START2 007C3B  
                            _SOSCEN 007E6B                              _NOT_WR 007C21  
                            _SSPM01 007E30                              _SSPM02 007C30  
                            _SSPM11 007E31                              _SSPM12 007C31  
                            _SSPM21 007E32                              _SSPM22 007C32  
                            _SSPM31 007E33                              _SSPM32 007C33  
                            _SSPADD 000FC8                              _TRISA0 007C90  
                            _TRISA1 007C91                              _TRISB0 007C98  
                            _TRISA2 007C92                              _TRISB1 007C99  
                            _TRISA3 007C93                              _TRISC0 007CA0  
                            _TRISB2 007C9A                              _TRISC1 007CA1  
                            _TRISB3 007C9B                              _TRISA5 007C95  
                            _TRISD0 007CA8                              _TRISC2 007CA2  
                            _TRISB4 007C9C                              _TRISD1 007CA9  
                            _TRISC3 007CA3                              _TRISB5 007C9D  
                            _TRISE0 007CB0                              _TRISD2 007CAA  
                            _TRISC4 007CA4                              _TRISB6 007C9E  
                            _TRISE1 007CB1                              _TRISD3 007CAB  
                            _TRISC5 007CA5                              _TRISB7 007C9F  
                            _TRISE2 007CB2                              _TRISD4 007CAC  
                            _TRISC6 007CA6                              _TRISD5 007CAD  
                            _TRISC7 007CA7                              _SSPEN1 007E35  
                            _TRISD6 007CAE                              _SSPEN2 007C35  
                            _TRISD7 007CAF                              _STATUS 000FD8  
                            _STKFUL 007FE7                              _SSPBUF 000FC9  
                            _SWDTEN 007E88                              _STKOVF 007FE7  
                            _SSPOV1 007E36                              _SSPOV2 007C36  
                            _STKUNF 007FE6                              _STKPTR 000FFC  
    __size_of_start_i2c_slave_reply 00F8                              _TXREG1 000FAD  
                       ?i1_send_msg 000B                           ??_ReadADC 0003  
                            _TXSTA1 000FAC       __end_of_start_i2c_slave_reply 1262  
                timer0_lthread@tptr 00B6             FromMainLow_recvmsg@data 008A  
                       ?i2_recv_msg 003E                           ??_OpenADC 00B9  
                      i2_in_low_int 1D84                         ?i2_send_msg 003E  
                    __CFG_XINST$OFF 000000                  __size_of_OpenUSART 00B4  
                   _i2c_int_handler 2004   i2c_slave_int_handler@data_written 009F  
                   _i2c_master_send 0F5A                              _ic_ptr 00C4  
                     main@msgbuffer 01B3                    __end_of_init_i2c 1B00  
                  OpenTimer1@config 00B6                              _memcpy 1BB6  
                            clear_0 1CB2                              clear_1 1CBE  
                            _uc_ptr 004B                              main@ic 01CC  
                            main@uc 01C5                    __end_of_recv_msg 0E3A  
       start_i2c_slave_reply@length 0034                           ??_in_main 00BC  
                  __end_of_send_msg 116A               timer0_int_handler@val 0092  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                         init_queue@i 00B9  
          ToMainLow_recvmsg@msgtype 01AF                __size_of_in_high_int 0014  
           FromMainLow_sendmsg@data 01AF                     __CFG_FOSC$HSPLL 000000  
                        __accesstop 0080             __end_of__initialization 1CEE  
        __end_of_ToMainHigh_recvmsg 1F58          __end_of_ToMainHigh_sendmsg 2098  
       __end_of_init_timer1_lthread 1A9E                 __end_of_SleepIfOkay 19CC  
                    __pcstackCOMRAM 0001                        __pidataBANK0 215E  
            __size_ofi2_in_high_int 000E                         ?_ReadTimer1 0001  
                __size_of_check_msg 0038                   __end_of_ReadUSART 1EF4  
         timer0_int_handler@msgtype 008E                         ?_SetChanADC 00B6  
               __size_ofi1_send_msg 00B2                           ?i1_memcpy 0001  
     __size_of_InterruptHandlerHigh 1844         __end_of_InterruptHandlerLow 00D2  
                         ?i2_memcpy 0034                       _ToMainHigh_MQ 0136  
               __size_ofi2_recv_msg 0120                    _enter_sleep_mode 2158  
               __size_ofi2_send_msg 00DA                timer1_lthread@length 00BF  
                     ReadUSART@data 0001                   __end_of_OpenUSART 1710  
                     check_msg@qptr 00B6                timer1_lthread@toSend 01A4  
           ??_block_on_To_msgqueues 00BC                __size_of_init_queues 006E  
                        __pbssBANK0 00C6                          __pbssBANK1 0100  
                        __pbssBANK2 0200                         ?_OpenTimer1 00B6  
                        __pnvCOMRAM 004B             __end_of_i2c_int_handler 202A  
                      ?i2_check_msg 0034             __end_of_i2c_master_send 1064  
                timer1_lthread@tptr 00BB            ??_i2c_master_int_handler 0034  
                     _DATA_ADDRESS2 007C3D                   recv_msg@maxlength 01A4  
                   recv_msg@msgtype 01A5                     recv_msg@tlength 01AA  
                           _CCP1CON 000FBD                             _CCP2CON 000FBA  
             __size_of_handle_start 00D6                        ?_Delay1KTCYx 00B6  
                  WriteTimer0@timer 0036                             _ADMSK11 007E29  
                           _ADMSK12 007C29                             _ADMSK21 007E2A  
                           _ECCP1AS 000FB6                             _ADMSK22 007C2A  
                           _ADMSK31 007E2B                             _ADMSK32 007C2B  
                           _ADMSK41 007E2C                             _ADMSK42 007C2C  
                           _ADMSK51 007E2D                             _ADMSK52 007C2D  
                           ?_memcpy 00B6                             _BAUDCON 000FB8  
                           _ACKSTAT 007E2E                             _BAUDCTL 000FB8  
                  WriteTimer1@timer 0003                       ??_WriteTimer0 0036  
                     ??_WriteTimer1 0003                             _ECCPAS0 007DB4  
                           _ECCPAS1 007DB5                             _ECCPAS2 007DB6  
                           _ECCPASE 007DB7      __size_of_i2c_slave_int_handler 07C6  
           __size_of_timer0_lthread 000A       __end_of_i2c_slave_int_handler 089C  
                           _T1CKPS0 007E6C                             _T1CKPS1 007E6D  
                           _T2CKPS0 007E50                             _T2CKPS1 007E51  
           __size_of_timer1_lthread 0052                             _T1OSCEN 007E6B  
                           i1l17040 1D3A                             i1l17037 1D24  
                           i1l16421 1E82                             i1l17038 1D06  
                           i1l17039 1D3A                             i1l19000 15A6  
                           i1l16424 1E06                             i1l19010 161C  
                           i1l19002 15AE                             i1l16540 1ED6  
                           i1l19004 15D4                             i1l19012 1630  
                           i1l19020 0064                             i1l16541 1ED6  
                           i1l16542 1EE0                             i1l19014 1638  
                           i1l19006 15E2                             i1l19030 007C  
                           i1l19022 0066                             i1l16543 1EEA  
                           i1l16544 1EF2                             i1l19016 163C  
                           i1l19008 15F8                             i1l19032 0084  
                           i1l19024 006C                             i1l16449 2144  
                           i1l19034 0086                             i1l19026 0074  
                           i1l19018 005C                             i1l19028 0076  
                           i1l16496 2118                             i1l16489 2106  
                           i1l17840 20F6                             i1l17842 2108  
                           i1l17844 213A                             i1l18820 1ED2  
                           i1l17846 2144                             i1l18822 1EDE  
                           i1l18814 1EBC                             i1l18824 1EE8  
                           i1l18816 1EC0                             i1l18930 1CF4  
                           i1l18826 1EEE                             i1l18818 1EC8  
                           i1l18932 1D06                             i1l18828 1EF2  
                           i1l18934 1D1A                             i1l18950 1710  
                           i1l18936 1D1E                             i1l18960 174C  
                           i1l18952 1716                             i1l18938 1D24  
                           i1l18970 17BC                             i1l18962 174E  
                           i1l18954 1726                             i1l18972 17C0  
                           i1l18964 176E                             i1l18956 1736  
                           i1l18980 1E52                             i1l18966 178E  
                           i1l18958 1748                             i1l18974 2050  
                           i1l18990 1DD8                             i1l18982 1E6E  
                           i1l18968 17B0                             i1l18976 2072  
                           i1l18992 1DDC                             i1l18984 1E76  
                           i1l18994 1DE4                             i1l18986 1DC8  
                           i1l18978 1E46                             i1l18996 1DE8  
                           i1l18988 1DD4                             i1l18998 1DEA  
                           i2l17040 1D82                             i2l17037 1D6C  
                           i2l17038 1D4E                             i2l17039 1D82  
                           i2l16417 15A4                             i2l16418 15A4  
                           i2l16463 212A                             i2l18240 1974  
                           i2l19040 17F8                             i2l18250 19A8  
                           i2l18242 1976                             i2l18234 1956  
                           i2l19050 2004                             i2l19042 17FE  
                           i2l19300 0234                             i2l18252 19C4  
                           i2l18244 1988                             i2l18236 1960  
                           i2l19060 1502                             i2l19052 2006  
                           i2l19044 1806                             i2l19036 17EE  
                           i2l19230 2096                             i2l19310 02B4  
                           i2l19302 0246                             i2l18254 19C6  
                           i2l18246 198A                             i2l18238 1962  
                           i2l19062 150E                             i2l19054 200C  
                           i2l19046 1808                             i2l19038 17F6  
                           _INTEDG0 007F8E                             _INTEDG1 007F8D  
                           i2l19232 1FDC                             i2l19400 07BE  
                           i2l19312 02BC                             i2l19320 030E  
                           i2l19304 028A                             i2l19240 1FB4  
                           i2l18248 19A6                             i2l19064 1558  
                           i2l19056 2014                             i2l19048 180E  
                           _INTEDG2 007F8C                             i2l19234 2002  
                           i2l19410 0888                             i2l19402 07DA  
                           i2l19330 03F2                             i2l19322 0356  
                           i2l19314 02D4                             i2l19306 0298  
                           i2l19242 1FDA                             i2l19066 156A  
                           i2l19058 14E6                             i2l19420 12AE  
                           i2l19412 1262                             i2l18620 116A  
                           i2l19228 2074                             i2l19404 0828  
                           i2l19340 0476                             i2l19332 0414  
                           i2l19324 038E                             i2l19316 02EA  
                           i2l19308 02AC                             i2l19430 132A  
                           i2l19422 12B2                             i2l19414 126E  
                           i2l18630 125E                             i2l18622 1182  
                           i2l19406 0860                             i2l19342 048A  
                           i2l19334 0428                             i2l19350 050A  
                           i2l19326 03CC                             i2l19318 02FA  
                           i2l19270 0130                             i2l19440 0E68  
                           i2l19432 1336                             i2l19424 12B4  
                           i2l19416 1282                             i2l18800 0C04  
                           i2l18640 13C4                             i2l18632 133C  
                           i2l18624 11E2                             i2l19408 087A  
                           i2l19360 058A                             i2l19352 0518  
                           i2l19344 049C                             i2l19336 0436  
                           i2l19328 03E0                             i2l19280 018A  
                           i2l19272 0146                             i2l19264 00D6  
                           i2l19450 0EC2                             i2l19442 0E7A  
                           i2l19434 133A                             i2l19426 12E0  
                           i2l19418 129C                             i2l18810 0CCE  
                           i2l18802 0C3E                             i2l18642 13DC  
                           i2l18634 1368                             i2l18626 11F8  
                           i2l19370 061C                             i2l19362 05A0  
                           i2l19354 052C                             i2l19338 043E  
                           i2l19346 04E0                             i2l19290 01C0  
                           i2l19282 018E                             i2l19274 0156  
                           i2l19266 0126                             i2l19460 0F4E  
                           i2l19452 0EF6                             i2l19444 0E96  
                           i2l19436 0E3A                             i2l19428 1308  
                           i2l18804 0C54                             i2l18812 0CD0  
                           i2l18636 1372                             i2l18644 13F8  
                           i2l18628 121C                             i2l19380 0690  
                           i2l19364 05B0                             i2l19356 0534  
                           i2l19348 04F2                             i2l19292 01DC  
                           i2l19372 061E                             i2l19284 01A0  
                           i2l19276 016A                             i2l19268 012E  
                           i2l19470 1D4E                             i2l19462 0F50  
                           i2l19454 0F1C                             i2l19446 0E9A  
                           i2l19438 0E4E                             i2l18806 0C84  
                           i2l18638 137A                             i2l19390 074E  
                           i2l19382 069C                             i2l19374 0658  
                           i2l19366 05C0                             i2l19358 056C  
                           i2l19294 020A                             i2l19286 01AE  
                           i2l19278 0182                             i2l19472 1D62  
                           i2l19456 0F3A                             i2l19448 0E9C  
                           i2l19464 0F52                             i2l18808 0CB6  
                           i2l19392 0764                             i2l19384 06DE  
                           i2l19376 066E                             i2l19368 05D2  
                           i2l19296 021E                             i2l19288 01B8  
                           i2l18568 2158                             i2l19474 1D66  
                           i2l19466 0F56                             i2l19458 0F46  
                           i2l18850 1D84                             i2l19394 0774  
                           i2l19386 06EC                             i2l19378 0674  
                           i2l19298 022C                             i2l19476 1D6C  
                           i2l19468 1D3C                             i2l18860 1DAA  
                           i2l18852 1D8C                             i2l18844 211A  
                           i2l19396 0798                             i2l19388 0736  
                           i2l18926 202A                             i2l18846 212C  
                           i2l18862 1DB4                             i2l18854 1D96  
                           i2l19398 079E                             i2l18928 204E  
                           i2l18848 2138                             i2l18864 1DB6  
                           i2l18856 1D98                             i2l18866 1DB8  
                           i2l18858 1D9A                             i2l18794 0B96  
                           i2l18868 1DC2                             i2l18796 0B98  
                           i2l18798 0BD0                             _INTCON2 000FF1  
                        ??i1_memcpy 0007                             _INTCON3 000FF0  
                           _GO_DONE 007E11                          ??i2_memcpy 003A  
                           _TBLPTRH 000FF7                             _TBLPTRL 000FF6  
                           _PREINC0 000FEC                             _PREINC1 000FE4  
                           _PREINC2 000FDC                             _TBLPTRU 000FF8  
                           _OSCTUNE 000F9B                             _PWM1CON 000FB7  
                  i1send_msg@length 000D                             _SSP1ADD 000FC8  
                           _SSP2ADD 000F88                             _NOT_BOR 007E80  
                           _NOT_RC8 007D5E                             _SSP1BUF 000FC9  
                           _SSP2BUF 000F8E                             _NOT_SS1 007C05  
                           _NOT_SS2 007C1B                             _NOT_POR 007E81  
                           _NOT_TX8 007D66                             _PSPMODE 007CB4  
                     i2_in_high_int 212C                             _SSPCON1 000FC6  
                           _SSPCON2 000FC5                             _STKPTR0 007FE0  
                           _STKPTR1 007FE1                             _STKPTR2 007FE2  
                           _STKPTR3 007FE3                             _STKPTR4 007FE4  
                           _ULPWUIN 007C00                             _SSPSTAT 000FC7  
                           _TOUTPS0 007E53                             _TOUTPS1 007E54  
                           _TOUTPS2 007E55                             _TOUTPS3 007E56  
               __size_of_ReadTimer1 0012                   __end_of_check_msg 1EBC  
                         _I2C_READ2 007C3A                           _I2C_STOP2 007C3C  
                         ?_init_i2c 00B6                         _SleepIfOkay 1956  
                           _i2cMode 00C7                             _ReadADC 213A  
                         ?_recv_msg 01A2                             _OpenADC 18D2  
                        _in_low_int 1B00                        _handle_start 133C  
                           __Hparam 0000                 __size_of_SetChanADC 001C  
                           _nT1SYNC 007E6A                           ?_send_msg 01A2  
                           __Lparam 0000          __end_of_timer0_int_handler 15A6  
       __end_of_FromMainLow_recvmsg 2004         __end_of_FromMainLow_sendmsg 1FB4  
                  init_uart_recv@uc 00B6                             _nWRITE2 007C3A  
                         _CMCONbits 000FB4                     __CFG_STVREN$OFF 000000  
i2c_slave_int_handler@overrun_error 00A0                             __pcinit 1CAC  
                   __size_of_memcpy 0056            __size_of_adc_int_handler 0040  
                        _init_queue 184C                             __ramtop 0400  
               __size_of_OpenTimer1 003E                             __ptext0 089C  
                           __ptext1 2150                             __ptext2 20B4  
                           __ptext3 1A9E                             __ptext4 1A3A  
                           __ptext5 19CC                             __ptext6 1E08  
                           __ptext7 1EF4                             __ptext8 165C  
                           __ptext9 1412                           _T0CONbits 000FD5  
                           _in_main 1B5E                           _T1CONbits 000FCD  
                         _T2CONbits 000FCA                 __end_of_WriteTimer0 212C  
               __end_of_WriteTimer1 211A                      ?i2_in_high_int 0034  
                    OpenADC@config2 00B7                      __pintcode_body 17C2  
      __end_of_FromMainHigh_recvmsg 1FDC                end_of_initialization 1CEE  
           timer1_lthread@msgbuffer 00C1                           _PEIE_GIEL 007F96  
    __size_of_uart_recv_int_handler 00B6                             memcpy@d 00BC  
                           memcpy@n 00BA                             memcpy@s 00BE  
     __end_of_uart_recv_int_handler 165C                          ??_init_i2c 00B8  
                           int_func 17C2                        ??i1_send_msg 0011  
                     ?_uart_lthread 00B6             __size_of_init_uart_recv 001A  
                  ?_i2c_int_handler 0001                        ??i2_recv_msg 0080  
                  ?_i2c_master_send 00B6                          ??_recv_msg 00C0  
                      ??i2_send_msg 0044                          ??_send_msg 00C0  
              adc_int_handler@value 0021     __size_of_i2c_master_int_handler 0164  
        __end_of_timer1_int_handler 1E84                           _RCSTAbits 000FAB  
                           postdec2 000FDD                             postinc0 000FEE  
                           postinc2 000FDE           ToMainHigh_sendmsg@msgtype 0086  
                         _PORTAbits 000F80                           _PORTBbits 000F81  
                         _PORTCbits 000F82                           _PORTDbits 000F83  
                         _PORTEbits 000F84                  __end_ofi1_send_msg 17C2  
                         _TRISAbits 000F92                           _TRISBbits 000F93  
                         _TRISCbits 000F94                           _TRISDbits 000F95  
                         _TRISEbits 000F96                  __end_ofi2_recv_msg 0F5A  
                __end_ofi2_send_msg 133C                         _adcMsgCount 004A  
                         _CapStatus 0047       FromMainHigh_recvmsg@maxlength 0087  
          timer1_int_handler@result 001F                      ??_uart_lthread 00BE  
                       _CCP1CONbits 000FBD                         _CCP2CONbits 000FBA  
                         _TXSTAbits 000FAC                          main@length 01CA  
                       ?_in_low_int 00B8               timer0_lthread@msgtype 00B8  
             _start_i2c_slave_reply 116A        __size_of_i2c_configure_slave 0034  
              __size_ofi2_check_msg 0026            __end_of_enter_sleep_mode 215E  
                      ??_ReadTimer1 0003                         _ECCP1ASbits 000FB6  
                _ToMainHigh_recvmsg 1F28                           i1memcpy@d 0007  
                _ToMainHigh_sendmsg 2074                           i1memcpy@n 0005  
                         i1memcpy@s 0009                         _BAUDCONbits 000FB8  
                    _timer0_lthread 2146                         ?_init_queue 00B6  
                         i2memcpy@d 003A                         _BAUDCTLbits 000FB8  
                       _WriteTimer0 211A                         _WriteTimer1 2108  
                         i2memcpy@n 0038                           i2memcpy@s 003C  
                    _timer1_lthread 1C0C                      __end_of_memcpy 1C0C  
                 _enable_interrupts 2150                __size_of_Delay1KTCYx 0014  
                         _nADDRESS2 007C3D                        ??_SetChanADC 00B7  
               ?_ToMainHigh_recvmsg 01AE                     ??i2_in_high_int 0036  
               ?_ToMainHigh_sendmsg 0085                  ?_enable_interrupts 0001  
               start_initialization 1CAC              _i2c_master_int_handler 0B96  
                     ??_in_high_int 00B8                           _ReadUSART 1EBC  
                 ??_adc_int_handler 001B                   __size_ofi1_memcpy 0048  
                 __size_ofi2_memcpy 0048           FromMainLow_sendmsg@length 01AD  
               ??_enable_interrupts 00B6                        ??_OpenTimer1 00B7  
    __size_of_block_on_To_msgqueues 00D4                  __end_of_ReadTimer1 2108  
     __end_of_block_on_To_msgqueues 14E6                           _OpenUSART 165C  
      __end_of_InterruptHandlerHigh 184C                          init_i2c@ic 00B6  
              ??_ToMainHigh_recvmsg 00C2                ??_ToMainHigh_sendmsg 0045  
                __end_of_SetChanADC 20B4              __end_of_timer0_lthread 2150  
                       __pdataBANK0 00C8              __end_of_timer1_lthread 1C5E  
         __end_of_enable_interrupts 2158                            ??_memcpy 00BC  
             timer1_lthread@msgtype 00BD                _FromMainHigh_recvmsg 1FB4  
      __size_of_init_timer1_lthread 0064                  __end_of_OpenTimer1 1E46  
               timer1_lthread@F5089 00C8                         __pbssCOMRAM 0045  
            timer1_int_handler@temp 001D                          ?_ReadUSART 0001  
                     ??_init_queues 00BA                       __pcstackBANK0 0080  
                     __pcstackBANK1 01A2                 __size_of_in_low_int 005E  
          start_i2c_slave_reply@msg 0035                 __CFG_CCP2MX$DEFAULT 000000  
                   Delay1KTCYx@unit 00B6            ToMainLow_sendmsg@msgtype 0018  
      __size_of_InterruptHandlerLow 00BA      i2c_slave_int_handler@data_read 00A7  
               __end_of_in_high_int 20E2                          ?_OpenUSART 00B6  
                      ?_SleepIfOkay 0001               ToMainLow_recvmsg@data 01B1  
                      _ToMainLow_MQ 016C                 __size_of_init_queue 0086  
                    _init_uart_recv 20B4                            ?_ReadADC 0001  
                         _check_msg 1E84                           __pnvBANK0 00C4  
            ?_start_i2c_slave_reply 0034                   __size_of_init_i2c 0062  
                 OpenADC@portconfig 00B8                            ?_OpenADC 00B6  
                      recv_msg@data 01A7                        recv_msg@qmsg 01AC  
                      recv_msg@slot 01A9                        recv_msg@qptr 01A2  
                 __size_of_recv_msg 0140                           __pintcode 0008  
                 __size_of_send_msg 0106                     ?_timer0_lthread 00B6  
             ?_FromMainHigh_recvmsg 0087                     ?_timer1_lthread 00BB  
                       __pintcodelo 0018              ToMainHigh_recvmsg@data 01B1  
              __end_of_uart_lthread 1CAC                            _I2C_DAT2 007C3D  
                          ?_in_main 00BA                   WriteTimer0@timer0 0034  
                          _ECCP1DEL 000FB7                            _ECCP1CON 000FBD  
                          _CCP2_PA2 007C0B                            _ACKSTAT1 007E2E  
                          _ACKSTAT2 007C2E                  _timer0_int_handler 14E6  
                 WriteTimer1@timer1 0001               _i2c_slave_int_handler 00D6  
               uart_lthread@msgtype 00B8      i2c_slave_int_handler@error_buf 009C  
             ToMainLow_sendmsg@data 0019                            _DDRAbits 000F92  
                          _DDRBbits 000F93                            _DDRCbits 000F94  
                          _DDRDbits 000F95                            _DDREbits 000F96  
               ?_timer0_int_handler 0001                            _GIE_GIEH 007F97  
                          _T1INSYNC 007E6A                    uart_lthread@uptr 00B6  
    i2c_slave_int_handler@msg_ready 00A6              __end_of_init_uart_recv 20CE  
               __end_of_init_queues 1A3A                            _NEGATIVE 007EC4  
       i2c_slave_int_handler@length 00A1                            _T2OUTPS0 007E53  
                          _T2OUTPS1 007E54                            _T2OUTPS2 007E55  
                          _T2OUTPS3 007E56                       OpenADC@config 00B6  
                          _LATAbits 000F89                            _LATBbits 000F8A  
                          _LATCbits 000F8B                            _LATDbits 000F8C  
                          _LATEbits 000F8D                     i2check_msg@qptr 0034  
                        ?_check_msg 00B6                            _IPR1bits 000F9F  
                          _IPR2bits 000FA2                            _PIE1bits 000F9D  
                          _IPR3bits 000FA5                            _PIE2bits 000FA0  
                          _PIE3bits 000FA3                       ?i2_in_low_int 0036  
                          i1u190_20 15F8                            i1u190_21 15F6  
                          i2u110_40 195E                            i2u110_41 195C  
                          i1u191_20 1638                            i1u191_21 1636  
                          i2u111_40 1972                            i2u111_41 1970  
                          i1u176_20 1EC8                            i1u192_20 0064  
                          i1u176_21 1EC6                            i1u192_21 0062  
                          i2u112_40 1986                            i2u112_41 1984  
                          i1u177_20 1ED2                            i1u193_20 0074  
                          i1u177_21 1ED0                            i1u193_21 0072  
                          i2u113_40 19A4                            i2u113_41 19A2  
                          i1u186_20 1D38                            i1u178_20 1EDE  
                          i1u194_20 0084                            i1u186_21 1D36  
                          i1u178_21 1EDC                            i1u194_21 0082  
                          i2u210_40 01B8                            i2u114_40 19C2  
                          i2u210_41 01B6                            i2u114_41 19C0  
                          i1u179_20 1EE8                            i1u179_21 1EE6  
                          i2u211_40 01DC                            i2u211_41 01DA  
                          i1u188_20 1748                            i1u188_21 1746  
                          i2u220_40 0436                            i2u212_40 020A  
                          i2u220_41 0434                            i2u212_41 0208  
                          i1u189_20 15AE                            i1u189_21 15AC  
                          i2u221_40 043E                            i2u213_40 022C  
                          i2u221_41 043C                            i2u213_41 022A  
                          i2u230_40 06EC                            i2u222_40 0518  
                          i2u214_40 0234                            i2u230_41 06EA  
                          i2u222_41 0516                            i2u214_41 0232  
                          i2u143_40 121A                            i2u231_40 074E  
                          i2u223_40 0534                            i2u215_40 0298  
                          i2u207_40 012E                            i2u143_41 1218  
                          i2u231_41 074C                            i2u223_41 0532  
                          i2u215_41 0296                            i2u207_41 012C  
                          i2u144_40 1372                            i2u232_40 07DA  
                          i2u224_40 058A                            i2u216_40 02B4  
                          i2u208_40 018A                            i2u144_41 1370  
                          i2u232_41 07D8                            i2u224_41 0588  
                          i2u216_41 02B2                            i2u208_41 0188  
                          i2u145_40 137A                            i2u233_40 0888  
                          i2u225_40 0658                            i2u217_40 02BC  
                          i2u209_40 01AC                            i2u145_41 1378  
                          i2u233_41 0886                            i2u225_41 0656  
                          i2u217_41 02BA                            i2u209_41 01AA  
                          i2u234_40 12AE                            i2u146_40 13C4  
                          i2u226_40 0666                            i2u218_40 038E  
                          i2u234_41 12AC                            i2u146_41 13C2  
                          i2u226_41 0664                            i2u218_41 038C  
                          i2u235_40 0E7A                            i2u227_40 066E  
                          i2u219_40 0414                            i2u235_41 0E78  
                          i2u227_41 066C                            i2u219_41 0412  
                          i2u236_40 0E96                            i2u228_40 0690  
                          i2u236_41 0E94                            i2u228_41 068E  
                          i2u237_40 1D80                            i2u181_40 1D8C  
                          i2u229_40 069C                            i2u237_41 1D7E  
                          i2u181_41 1D8A                            i2u229_41 069A  
                          i2u182_40 1DAA                            i2u174_40 0BD0  
                          i2u182_41 1DA8                            i2u174_41 0BCE  
                          i2u175_40 0C04                            i2u175_41 0C02  
                          _PIR1bits 000F9E                            i2u195_40 17F6  
                          i2u195_41 17F4                            _PIR2bits 000FA1  
                          i2u196_40 1806                            i2u196_41 1804  
                          i2u197_40 14F0                            i2u197_41 14EC  
                          _PIR3bits 000FA4                            i2u197_46 14F2  
                          i2u198_40 156A                            i2u198_41 1568  
            ToMainHigh_sendmsg@data 0087                            _GO_nDONE 007E11  
                          _RCONbits 000FD0                    __CFG_WDTPS$32768 000000  
                          _OVERFLOW 007EC3                            _POSTDEC0 000FED  
                          _POSTDEC1 000FE5                            _POSTDEC2 000FDD  
                          _NOT_DONE 007E11                            _SSP1CON1 000FC6  
                          _SSP1CON2 000FC5                            _SSP2CON1 000F86  
                          _SSP2CON2 000F85                            _POSTINC0 000FEE  
                          _POSTINC1 000FE6                            _POSTINC2 000FDE  
                          _NOT_RBPU 007F8F                ??_timer0_int_handler 008C  
                          _SSP1STAT 000FC7                            _SSP2STAT 000F87  
             i2c_master_send@length 00B6        FromMainLow_recvmsg@maxlength 0087  
        __size_of_enable_interrupts 0008                   i1send_msg@msgtype 000E  
                 i1send_msg@tlength 0012          FromMainLow_recvmsg@msgtype 0088  
                        _ADCON0bits 000FC2                          _ADCON1bits 000FC1  
                        _ADCON2bits 000FC0        __size_of_FromMainLow_recvmsg 0028  
      __size_of_FromMainLow_sendmsg 002C                timer0_lthread@length 00BA  
                _timer1_int_handler 1E46                            i1_memcpy 1CF4  
              _InterruptHandlerHigh 0008                         ??_ReadUSART 0001  
                          i2_memcpy 1D3C                timer0_lthread@msgval 00BE  
          FromMainHigh_recvmsg@data 008A                          _I2C_START2 007C3B  
                       _in_high_int 20CE                        send_msg@data 01A6  
               _i2c_configure_slave 1EF4                        send_msg@qmsg 01AB  
                      send_msg@slot 01AA                        send_msg@qptr 01A2  
                       _INTCON2bits 000FF1                         _INTCON3bits 000FF0  
             uart_lthread@msgbuffer 00BC                 ?_timer1_int_handler 0001  
                   ?_init_uart_recv 00B6                         ??_OpenUSART 00B9  
                   OpenUSART@config 00B6                          _EECON1bits 000FA6  
                    ??i2_in_low_int 0038               _uart_recv_int_handler 15A6  
                      ??_in_low_int 00BA                    __size_of_ReadADC 000C  
                       _READ_WRITE2 007C3A                            __Hrparam 0000  
                  __size_of_OpenADC 0084                ?_i2c_configure_slave 00B6  
                          __Lrparam 0000                   ?_enter_sleep_mode 0001  
            ??_FromMainHigh_recvmsg 0045                ??_timer1_int_handler 001B  
                   _adc_int_handler 1DC8            __size_of_i2c_int_handler 0026  
                ??_enter_sleep_mode 0034            __size_of_i2c_master_send 010A  
                      ??_init_queue 00B8                        ?_WriteTimer0 0034  
                      ?_WriteTimer1 0001             ToMainLow_sendmsg@length 0017  
           ?_i2c_master_int_handler 0001              ?_i2c_slave_int_handler 0001  
                 main@t0thread_data 01C0               ?_InterruptHandlerHigh 0001  
                       _GO_NOT_DONE 007E11                    __size_of_in_main 0058  
                 i2send_msg@msgtype 0041         ToMainHigh_recvmsg@maxlength 01AE  
                 i2send_msg@tlength 0080             init_timer1_lthread@tptr 00BB  
                       _init_queues 19CC                  __end_of_in_low_int 1B5E  
                          __ptext10 1B5E                            __ptext11 1B00  
                          __ptext20 1064                            __ptext12 20CE  
                          __ptext21 0CFA                            __ptext13 1F28  
                          __ptext30 1DC8                            __ptext22 1BB6  
                          __ptext14 2146                            __ptext31 15A6  
                          __ptext23 1E84                            __ptext15 1F58  
                          __ptext40 2004                            __ptext32 2050  
                          __ptext24 20E2                            __ptext16 1C0C  
                          __ptext41 14E6                            __ptext33 1EBC  
                          __ptext25 0F5A                            __ptext17 1F88  
                          __ptext50 0B96                            __ptext42 1956  
                          __ptext34 20F6                            __ptext26 18D2  
                          __ptext18 1C5E                            __ptext51 211A  
                          __ptext43 1FB4                            __ptext35 2108  
                          __ptext27 2098                            __ptext19 184C  
                          __ptext52 1D84                            __ptext44 2158  
                          __ptext36 213A                            __ptext53 212C  
                          __ptext45 00D6                            __ptext37 1710  
                          __ptext29 1E46                            __ptext54 1262  
                          __ptext46 2074                            __ptext38 1CF4  
                          __ptext55 0E3A                            __ptext47 1FDC  
                          __ptext56 202A                            __ptext48 116A  
                          __ptext57 1D3C                            __ptext49 133C  
                          __ptext58 0000                        _SSP1CON1bits 000FC6  
                      _SSP1CON2bits 000FC5                      i1send_msg@data 000F  
                      _SSP2CON1bits 000F86                        _SSP2CON2bits 000F85  
                    i1send_msg@qmsg 0015                      i1send_msg@slot 0014  
                    i1send_msg@qptr 000B                  uart_lthread@length 00BA  
          timer0_int_handler@length 0090                            _init_i2c 1A9E  
               _init_timer1_lthread 1A3A                       __size_of_main 02FA  
            adc_int_handler@message 001D                       ??i2_check_msg 0036  
                 main@t1thread_data 01C3                         ??_check_msg 00B8  
                __end_of_init_queue 18D2                __size_of_SleepIfOkay 0076  
                          _recv_msg 0CFA    i2c_slave_int_handler@msg_to_send 00A5  
             ??_i2c_configure_slave 00B7                            _send_msg 1064  
                    init_queue@qptr 00B6                          _CVRCONbits 000FB5  
             __size_of_uart_lthread 004E                      i2recv_msg@data 0043  
                    i2recv_msg@qmsg 0085                       ??_Delay1KTCYx 00B7  
                    i2recv_msg@slot 0082                      i2recv_msg@qptr 003E  
    __end_of_i2c_master_int_handler 0CFA                        _SSP1STATbits 000FC7  
               _InterruptHandlerLow 0018                ?_init_timer1_lthread 00BB  
                      _SSP2STATbits 000F87                         _OSCTUNEbits 000F9B  
                        _INTCONbits 000FF2                         _PWM1CONbits 000FB7  
                    OpenUSART@spbrg 00B7                            memcpy@d1 00B6  
                          memcpy@s1 00B8               __end_ofi2_in_high_int 213A  
                  i2send_msg@length 0040                            intlevel1 0000  
                          intlevel2 0000                ?_InterruptHandlerLow 0001  
           ??_start_i2c_slave_reply 0037                         _SSP1ADDbits 000FC8  
                       _SSP2ADDbits 000F88              ?_uart_recv_int_handler 0001  
                      _uart_lthread 1C5E                   SetChanADC@channel 00B6  
                        _RCSTA1bits 000FAB               _block_on_To_msgqueues 1412  
                     ?_handle_start 0034                    ??_timer0_lthread 00BE  
       __size_of_ToMainHigh_recvmsg 0030             __end_of_adc_int_handler 1E08  
       __size_of_ToMainHigh_sendmsg 0024                          _OSCCONbits 000FD3  
                  ??_timer1_lthread 01A2            ToMainHigh_sendmsg@length 0085  
               __end_ofi2_check_msg 2050               ??_init_timer1_lthread 00BD  
            ??_InterruptHandlerHigh 00A8                   _ToMainLow_recvmsg 1F58  
                 _ToMainLow_sendmsg 2050                  main@last_reg_recvd 01C2  
                        _NOT_T1SYNC 007E6A                __end_ofi2_in_low_int 1DC8  
                ?_ToMainLow_recvmsg 01AE                 __end_of_Delay1KTCYx 20F6  
                 ??_i2c_int_handler 0045                  ?_ToMainLow_sendmsg 0017  
                 ??_i2c_master_send 00B9                  i2c_master_send@msg 00B7  
                       _SSPCON1bits 000FC6                         _SSPCON2bits 000FC5  
                        _WDTCONbits 000FD1                      i2send_msg@data 0042  
             ??_InterruptHandlerLow 0023                 ??_ToMainLow_recvmsg 00C2  
                    i2send_msg@qmsg 0083                      i2send_msg@slot 0082  
                    i2send_msg@qptr 003E                 ??_ToMainLow_sendmsg 001B  
     i2c_slave_int_handler@i2c_data 00A3                          _SSPADDbits 000FC8  
                        _STATUSbits 000FD8                 _FromMainLow_recvmsg 1FDC  
                    ??_handle_start 0035                 _FromMainLow_sendmsg 1F88  
                      _USART_Status 0049  
