

Microchip Technology PIC18 LITE Macro Assembler V1.10 build 47796 
                                                                                               Tue Oct  2 06:08:06 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 47796
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 47796"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	18F45J10
     8  0000                     porta	equ	0F80h
     9  0000                     portb	equ	0F81h
    10  0000                     portc	equ	0F82h
    11  0000                     portd	equ	0F83h
    12  0000                     porte	equ	0F84h
    13  0000                     lata	equ	0F89h
    14  0000                     latb	equ	0F8Ah
    15  0000                     latc	equ	0F8Bh
    16  0000                     latd	equ	0F8Ch
    17  0000                     late	equ	0F8Dh
    18  0000                     trisa	equ	0F92h
    19  0000                     trisb	equ	0F93h
    20  0000                     trisc	equ	0F94h
    21  0000                     trisd	equ	0F95h
    22  0000                     trise	equ	0F96h
    23  0000                     pie1	equ	0F9Dh
    24  0000                     pir1	equ	0F9Eh
    25  0000                     ipr1	equ	0F9Fh
    26  0000                     pie2	equ	0FA0h
    27  0000                     pir2	equ	0FA1h
    28  0000                     ipr2	equ	0FA2h
    29  0000                     t3con	equ	0FB1h
    30  0000                     tmr3l	equ	0FB2h
    31  0000                     tmr3h	equ	0FB3h
    32  0000                     ccp1con	equ	0FBDh
    33  0000                     ccpr1l	equ	0FBEh
    34  0000                     ccpr1h	equ	0FBFh
    35  0000                     adcon1	equ	0FC1h
    36  0000                     adcon0	equ	0FC2h
    37  0000                     adresl	equ	0FC3h
    38  0000                     adresh	equ	0FC4h
    39  0000                     sspcon2	equ	0FC5h
    40  0000                     sspcon1	equ	0FC6h
    41  0000                     sspstat	equ	0FC7h
    42  0000                     sspadd	equ	0FC8h
    43  0000                     sspbuf	equ	0FC9h
    44  0000                     t2con	equ	0FCAh
    45  0000                     pr2	equ	0FCBh
    46  0000                     tmr2	equ	0FCCh
    47  0000                     t1con	equ	0FCDh
    48  0000                     tmr1l	equ	0FCEh
    49  0000                     tmr1h	equ	0FCFh
    50  0000                     rcon	equ	0FD0h
    51  0000                     wdtcon	equ	0FD1h
    52  0000                     lvdcon	equ	0FD2h
    53  0000                     osccon	equ	0FD3h
    54  0000                     t0con	equ	0FD5h
    55  0000                     tmr0l	equ	0FD6h
    56  0000                     tmr0h	equ	0FD7h
    57  0000                     status	equ	0FD8h
    58  0000                     fsr2	equ	0FD9h
    59  0000                     fsr2l	equ	0FD9h
    60  0000                     fsr2h	equ	0FDAh
    61  0000                     plusw2	equ	0FDBh
    62  0000                     preinc2	equ	0FDCh
    63  0000                     postdec2	equ	0FDDh
    64  0000                     postinc2	equ	0FDEh
    65  0000                     indf2	equ	0FDFh
    66  0000                     bsr	equ	0FE0h
    67  0000                     fsr1	equ	0FE1h
    68  0000                     fsr1l	equ	0FE1h
    69  0000                     fsr1h	equ	0FE2h
    70  0000                     plusw1	equ	0FE3h
    71  0000                     preinc1	equ	0FE4h
    72  0000                     postdec1	equ	0FE5h
    73  0000                     postinc1	equ	0FE6h
    74  0000                     indf1	equ	0FE7h
    75  0000                     wreg	equ	0FE8h
    76  0000                     fsr0	equ	0FE9h
    77  0000                     fsr0l	equ	0FE9h
    78  0000                     fsr0h	equ	0FEAh
    79  0000                     plusw0	equ	0FEBh
    80  0000                     preinc0	equ	0FECh
    81  0000                     postdec0	equ	0FEDh
    82  0000                     postinc0	equ	0FEEh
    83  0000                     indf0	equ	0FEFh
    84  0000                     intcon3	equ	0FF0h
    85  0000                     intcon2	equ	0FF1h
    86  0000                     intcon	equ	0FF2h
    87  0000                     prod	equ	0FF3h
    88  0000                     prodl	equ	0FF3h
    89  0000                     prodh	equ	0FF4h
    90  0000                     tablat	equ	0FF5h
    91  0000                     tblptr	equ	0FF6h
    92  0000                     tblptrl	equ	0FF6h
    93  0000                     tblptrh	equ	0FF7h
    94  0000                     tblptru	equ	0FF8h
    95  0000                     pcl	equ	0FF9h
    96  0000                     pclat	equ	0FFAh
    97  0000                     pclath	equ	0FFAh
    98  0000                     pclatu	equ	0FFBh
    99  0000                     stkptr	equ	0FFCh
   100  0000                     tosl	equ	0FFDh
   101  0000                     tosh	equ	0FFEh
   102  0000                     tosu	equ	0FFFh
   103                           skipnz macro
   104                           	btfsc	status,2
   105  0000                     	endm
   106                           	global	__ramtop
   107                           	global	__accesstop
   108                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   109  0000                     PORTA equ 0F80h ;# 
   110                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   111  0000                     PORTB equ 0F81h ;# 
   112                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   113  0000                     PORTC equ 0F82h ;# 
   114                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   115  0000                     PORTD equ 0F83h ;# 
   116                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   117  0000                     PORTE equ 0F84h ;# 
   118                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   119  0000                     SSP2CON2 equ 0F85h ;# 
   120                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   121  0000                     SSP2CON1 equ 0F86h ;# 
   122                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   123  0000                     SSP2STAT equ 0F87h ;# 
   124                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   125  0000                     SSP2ADD equ 0F88h ;# 
   126                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   127  0000                     LATA equ 0F89h ;# 
   128                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   129  0000                     LATB equ 0F8Ah ;# 
   130                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   131  0000                     LATC equ 0F8Bh ;# 
   132                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   133  0000                     LATD equ 0F8Ch ;# 
   134                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   135  0000                     LATE equ 0F8Dh ;# 
   136                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   137  0000                     SSP2BUF equ 0F8Eh ;# 
   138                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   139  0000                     TRISA equ 0F92h ;# 
   140                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   141  0000                     DDRA equ 0F92h ;# 
   142                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   143  0000                     TRISB equ 0F93h ;# 
   144                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   145  0000                     DDRB equ 0F93h ;# 
   146                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   147  0000                     TRISC equ 0F94h ;# 
   148                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   149  0000                     DDRC equ 0F94h ;# 
   150                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   151  0000                     TRISD equ 0F95h ;# 
   152                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   153  0000                     DDRD equ 0F95h ;# 
   154                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   155  0000                     TRISE equ 0F96h ;# 
   156                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   157  0000                     DDRE equ 0F96h ;# 
   158                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   159  0000                     OSCTUNE equ 0F9Bh ;# 
   160                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   161  0000                     PIE1 equ 0F9Dh ;# 
   162                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   163  0000                     PIR1 equ 0F9Eh ;# 
   164                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   165  0000                     IPR1 equ 0F9Fh ;# 
   166                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   167  0000                     PIE2 equ 0FA0h ;# 
   168                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   169  0000                     PIR2 equ 0FA1h ;# 
   170                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   171  0000                     IPR2 equ 0FA2h ;# 
   172                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   173  0000                     PIE3 equ 0FA3h ;# 
   174                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   175  0000                     PIR3 equ 0FA4h ;# 
   176                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   177  0000                     IPR3 equ 0FA5h ;# 
   178                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   179  0000                     EECON1 equ 0FA6h ;# 
   180                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   181  0000                     EECON2 equ 0FA7h ;# 
   182                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   183  0000                     RCSTA equ 0FABh ;# 
   184                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   185  0000                     RCSTA1 equ 0FABh ;# 
   186                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   187  0000                     TXSTA equ 0FACh ;# 
   188                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   189  0000                     TXSTA1 equ 0FACh ;# 
   190                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   191  0000                     TXREG equ 0FADh ;# 
   192                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   193  0000                     TXREG1 equ 0FADh ;# 
   194                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   195  0000                     RCREG equ 0FAEh ;# 
   196                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   197  0000                     RCREG1 equ 0FAEh ;# 
   198                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   199  0000                     SPBRG equ 0FAFh ;# 
   200                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   201  0000                     SPBRG1 equ 0FAFh ;# 
   202                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   203  0000                     SPBRGH equ 0FB0h ;# 
   204                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   205  0000                     CMCON equ 0FB4h ;# 
   206                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   207  0000                     CVRCON equ 0FB5h ;# 
   208                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   209  0000                     ECCP1AS equ 0FB6h ;# 
   210                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   211  0000                     ECCP1DEL equ 0FB7h ;# 
   212                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   213  0000                     PWM1CON equ 0FB7h ;# 
   214                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   215  0000                     BAUDCON equ 0FB8h ;# 
   216                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   217  0000                     BAUDCTL equ 0FB8h ;# 
   218                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   219  0000                     CCP2CON equ 0FBAh ;# 
   220                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   221  0000                     CCPR2 equ 0FBBh ;# 
   222                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   223  0000                     CCPR2L equ 0FBBh ;# 
   224                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   225  0000                     CCPR2H equ 0FBCh ;# 
   226                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   227  0000                     ECCP1CON equ 0FBDh ;# 
   228                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   229  0000                     CCP1CON equ 0FBDh ;# 
   230                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   231  0000                     CCPR1 equ 0FBEh ;# 
   232                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   233  0000                     CCPR1L equ 0FBEh ;# 
   234                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   235  0000                     CCPR1H equ 0FBFh ;# 
   236                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   237  0000                     ADCON2 equ 0FC0h ;# 
   238                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   239  0000                     ADCON1 equ 0FC1h ;# 
   240                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   241  0000                     ADCON0 equ 0FC2h ;# 
   242                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   243  0000                     ADRES equ 0FC3h ;# 
   244                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   245  0000                     ADRESL equ 0FC3h ;# 
   246                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   247  0000                     ADRESH equ 0FC4h ;# 
   248                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   249  0000                     SSPCON2 equ 0FC5h ;# 
   250                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   251  0000                     SSP1CON2 equ 0FC5h ;# 
   252                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   253  0000                     SSPCON1 equ 0FC6h ;# 
   254                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   255  0000                     SSP1CON1 equ 0FC6h ;# 
   256                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   257  0000                     SSPSTAT equ 0FC7h ;# 
   258                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   259  0000                     SSP1STAT equ 0FC7h ;# 
   260                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   261  0000                     SSPADD equ 0FC8h ;# 
   262                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   263  0000                     SSP1ADD equ 0FC8h ;# 
   264                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   265  0000                     SSPBUF equ 0FC9h ;# 
   266                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   267  0000                     SSP1BUF equ 0FC9h ;# 
   268                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   269  0000                     T2CON equ 0FCAh ;# 
   270                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   271  0000                     PR2 equ 0FCBh ;# 
   272                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   273  0000                     MEMCON equ 0FCBh ;# 
   274                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   275  0000                     TMR2 equ 0FCCh ;# 
   276                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   277  0000                     T1CON equ 0FCDh ;# 
   278                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   279  0000                     TMR1 equ 0FCEh ;# 
   280                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   281  0000                     TMR1L equ 0FCEh ;# 
   282                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   283  0000                     TMR1H equ 0FCFh ;# 
   284                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   285  0000                     RCON equ 0FD0h ;# 
   286                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   287  0000                     WDTCON equ 0FD1h ;# 
   288                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   289  0000                     OSCCON equ 0FD3h ;# 
   290                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   291  0000                     T0CON equ 0FD5h ;# 
   292                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   293  0000                     TMR0 equ 0FD6h ;# 
   294                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   295  0000                     TMR0L equ 0FD6h ;# 
   296                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   297  0000                     TMR0H equ 0FD7h ;# 
   298                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   299  0000                     STATUS equ 0FD8h ;# 
   300                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   301  0000                     FSR2 equ 0FD9h ;# 
   302                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   303  0000                     FSR2L equ 0FD9h ;# 
   304                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   305  0000                     FSR2H equ 0FDAh ;# 
   306                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   307  0000                     PLUSW2 equ 0FDBh ;# 
   308                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   309  0000                     PREINC2 equ 0FDCh ;# 
   310                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   311  0000                     POSTDEC2 equ 0FDDh ;# 
   312                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   313  0000                     POSTINC2 equ 0FDEh ;# 
   314                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   315  0000                     INDF2 equ 0FDFh ;# 
   316                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   317  0000                     BSR equ 0FE0h ;# 
   318                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   319  0000                     FSR1 equ 0FE1h ;# 
   320                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   321  0000                     FSR1L equ 0FE1h ;# 
   322                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   323  0000                     FSR1H equ 0FE2h ;# 
   324                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   325  0000                     PLUSW1 equ 0FE3h ;# 
   326                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   327  0000                     PREINC1 equ 0FE4h ;# 
   328                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   329  0000                     POSTDEC1 equ 0FE5h ;# 
   330                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   331  0000                     POSTINC1 equ 0FE6h ;# 
   332                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   333  0000                     INDF1 equ 0FE7h ;# 
   334                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   335  0000                     WREG equ 0FE8h ;# 
   336                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   337  0000                     FSR0 equ 0FE9h ;# 
   338                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   339  0000                     FSR0L equ 0FE9h ;# 
   340                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   341  0000                     FSR0H equ 0FEAh ;# 
   342                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   343  0000                     PLUSW0 equ 0FEBh ;# 
   344                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   345  0000                     PREINC0 equ 0FECh ;# 
   346                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   347  0000                     POSTDEC0 equ 0FEDh ;# 
   348                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   349  0000                     POSTINC0 equ 0FEEh ;# 
   350                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   351  0000                     INDF0 equ 0FEFh ;# 
   352                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   353  0000                     INTCON3 equ 0FF0h ;# 
   354                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   355  0000                     INTCON2 equ 0FF1h ;# 
   356                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   357  0000                     INTCON equ 0FF2h ;# 
   358                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   359  0000                     PROD equ 0FF3h ;# 
   360                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   361  0000                     PRODL equ 0FF3h ;# 
   362                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   363  0000                     PRODH equ 0FF4h ;# 
   364                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   365  0000                     TABLAT equ 0FF5h ;# 
   366                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   367  0000                     TBLPTR equ 0FF6h ;# 
   368                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   369  0000                     TBLPTRL equ 0FF6h ;# 
   370                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   371  0000                     TBLPTRH equ 0FF7h ;# 
   372                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   373  0000                     TBLPTRU equ 0FF8h ;# 
   374                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   375  0000                     PCLAT equ 0FF9h ;# 
   376                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   377  0000                     PC equ 0FF9h ;# 
   378                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   379  0000                     PCL equ 0FF9h ;# 
   380                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   381  0000                     PCLATH equ 0FFAh ;# 
   382                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   383  0000                     PCLATU equ 0FFBh ;# 
   384                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   385  0000                     STKPTR equ 0FFCh ;# 
   386                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   387  0000                     TOS equ 0FFDh ;# 
   388                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   389  0000                     TOSL equ 0FFDh ;# 
   390                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   391  0000                     TOSH equ 0FFEh ;# 
   392                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   393  0000                     TOSU equ 0FFFh ;# 
   394                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   395  0000                     PORTA equ 0F80h ;# 
   396                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   397  0000                     PORTB equ 0F81h ;# 
   398                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   399  0000                     PORTC equ 0F82h ;# 
   400                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   401  0000                     PORTD equ 0F83h ;# 
   402                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   403  0000                     PORTE equ 0F84h ;# 
   404                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   405  0000                     SSP2CON2 equ 0F85h ;# 
   406                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   407  0000                     SSP2CON1 equ 0F86h ;# 
   408                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   409  0000                     SSP2STAT equ 0F87h ;# 
   410                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   411  0000                     SSP2ADD equ 0F88h ;# 
   412                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   413  0000                     LATA equ 0F89h ;# 
   414                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   415  0000                     LATB equ 0F8Ah ;# 
   416                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   417  0000                     LATC equ 0F8Bh ;# 
   418                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   419  0000                     LATD equ 0F8Ch ;# 
   420                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   421  0000                     LATE equ 0F8Dh ;# 
   422                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   423  0000                     SSP2BUF equ 0F8Eh ;# 
   424                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   425  0000                     TRISA equ 0F92h ;# 
   426                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   427  0000                     DDRA equ 0F92h ;# 
   428                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   429  0000                     TRISB equ 0F93h ;# 
   430                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   431  0000                     DDRB equ 0F93h ;# 
   432                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   433  0000                     TRISC equ 0F94h ;# 
   434                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   435  0000                     DDRC equ 0F94h ;# 
   436                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   437  0000                     TRISD equ 0F95h ;# 
   438                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   439  0000                     DDRD equ 0F95h ;# 
   440                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   441  0000                     TRISE equ 0F96h ;# 
   442                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   443  0000                     DDRE equ 0F96h ;# 
   444                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   445  0000                     OSCTUNE equ 0F9Bh ;# 
   446                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   447  0000                     PIE1 equ 0F9Dh ;# 
   448                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   449  0000                     PIR1 equ 0F9Eh ;# 
   450                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   451  0000                     IPR1 equ 0F9Fh ;# 
   452                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   453  0000                     PIE2 equ 0FA0h ;# 
   454                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   455  0000                     PIR2 equ 0FA1h ;# 
   456                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   457  0000                     IPR2 equ 0FA2h ;# 
   458                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   459  0000                     PIE3 equ 0FA3h ;# 
   460                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   461  0000                     PIR3 equ 0FA4h ;# 
   462                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   463  0000                     IPR3 equ 0FA5h ;# 
   464                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   465  0000                     EECON1 equ 0FA6h ;# 
   466                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   467  0000                     EECON2 equ 0FA7h ;# 
   468                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   469  0000                     RCSTA equ 0FABh ;# 
   470                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   471  0000                     RCSTA1 equ 0FABh ;# 
   472                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   473  0000                     TXSTA equ 0FACh ;# 
   474                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   475  0000                     TXSTA1 equ 0FACh ;# 
   476                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   477  0000                     TXREG equ 0FADh ;# 
   478                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   479  0000                     TXREG1 equ 0FADh ;# 
   480                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   481  0000                     RCREG equ 0FAEh ;# 
   482                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   483  0000                     RCREG1 equ 0FAEh ;# 
   484                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   485  0000                     SPBRG equ 0FAFh ;# 
   486                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   487  0000                     SPBRG1 equ 0FAFh ;# 
   488                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   489  0000                     SPBRGH equ 0FB0h ;# 
   490                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   491  0000                     CMCON equ 0FB4h ;# 
   492                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   493  0000                     CVRCON equ 0FB5h ;# 
   494                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   495  0000                     ECCP1AS equ 0FB6h ;# 
   496                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   497  0000                     ECCP1DEL equ 0FB7h ;# 
   498                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   499  0000                     PWM1CON equ 0FB7h ;# 
   500                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   501  0000                     BAUDCON equ 0FB8h ;# 
   502                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   503  0000                     BAUDCTL equ 0FB8h ;# 
   504                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   505  0000                     CCP2CON equ 0FBAh ;# 
   506                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   507  0000                     CCPR2 equ 0FBBh ;# 
   508                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   509  0000                     CCPR2L equ 0FBBh ;# 
   510                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   511  0000                     CCPR2H equ 0FBCh ;# 
   512                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   513  0000                     ECCP1CON equ 0FBDh ;# 
   514                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   515  0000                     CCP1CON equ 0FBDh ;# 
   516                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   517  0000                     CCPR1 equ 0FBEh ;# 
   518                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   519  0000                     CCPR1L equ 0FBEh ;# 
   520                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   521  0000                     CCPR1H equ 0FBFh ;# 
   522                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   523  0000                     ADCON2 equ 0FC0h ;# 
   524                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   525  0000                     ADCON1 equ 0FC1h ;# 
   526                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   527  0000                     ADCON0 equ 0FC2h ;# 
   528                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   529  0000                     ADRES equ 0FC3h ;# 
   530                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   531  0000                     ADRESL equ 0FC3h ;# 
   532                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   533  0000                     ADRESH equ 0FC4h ;# 
   534                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   535  0000                     SSPCON2 equ 0FC5h ;# 
   536                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   537  0000                     SSP1CON2 equ 0FC5h ;# 
   538                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   539  0000                     SSPCON1 equ 0FC6h ;# 
   540                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   541  0000                     SSP1CON1 equ 0FC6h ;# 
   542                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   543  0000                     SSPSTAT equ 0FC7h ;# 
   544                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   545  0000                     SSP1STAT equ 0FC7h ;# 
   546                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   547  0000                     SSPADD equ 0FC8h ;# 
   548                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   549  0000                     SSP1ADD equ 0FC8h ;# 
   550                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   551  0000                     SSPBUF equ 0FC9h ;# 
   552                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   553  0000                     SSP1BUF equ 0FC9h ;# 
   554                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   555  0000                     T2CON equ 0FCAh ;# 
   556                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   557  0000                     PR2 equ 0FCBh ;# 
   558                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   559  0000                     MEMCON equ 0FCBh ;# 
   560                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   561  0000                     TMR2 equ 0FCCh ;# 
   562                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   563  0000                     T1CON equ 0FCDh ;# 
   564                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   565  0000                     TMR1 equ 0FCEh ;# 
   566                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   567  0000                     TMR1L equ 0FCEh ;# 
   568                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   569  0000                     TMR1H equ 0FCFh ;# 
   570                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   571  0000                     RCON equ 0FD0h ;# 
   572                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   573  0000                     WDTCON equ 0FD1h ;# 
   574                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   575  0000                     OSCCON equ 0FD3h ;# 
   576                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   577  0000                     T0CON equ 0FD5h ;# 
   578                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   579  0000                     TMR0 equ 0FD6h ;# 
   580                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   581  0000                     TMR0L equ 0FD6h ;# 
   582                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   583  0000                     TMR0H equ 0FD7h ;# 
   584                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   585  0000                     STATUS equ 0FD8h ;# 
   586                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   587  0000                     FSR2 equ 0FD9h ;# 
   588                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   589  0000                     FSR2L equ 0FD9h ;# 
   590                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   591  0000                     FSR2H equ 0FDAh ;# 
   592                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   593  0000                     PLUSW2 equ 0FDBh ;# 
   594                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   595  0000                     PREINC2 equ 0FDCh ;# 
   596                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   597  0000                     POSTDEC2 equ 0FDDh ;# 
   598                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   599  0000                     POSTINC2 equ 0FDEh ;# 
   600                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   601  0000                     INDF2 equ 0FDFh ;# 
   602                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   603  0000                     BSR equ 0FE0h ;# 
   604                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   605  0000                     FSR1 equ 0FE1h ;# 
   606                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   607  0000                     FSR1L equ 0FE1h ;# 
   608                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   609  0000                     FSR1H equ 0FE2h ;# 
   610                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   611  0000                     PLUSW1 equ 0FE3h ;# 
   612                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   613  0000                     PREINC1 equ 0FE4h ;# 
   614                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   615  0000                     POSTDEC1 equ 0FE5h ;# 
   616                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   617  0000                     POSTINC1 equ 0FE6h ;# 
   618                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   619  0000                     INDF1 equ 0FE7h ;# 
   620                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   621  0000                     WREG equ 0FE8h ;# 
   622                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   623  0000                     FSR0 equ 0FE9h ;# 
   624                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   625  0000                     FSR0L equ 0FE9h ;# 
   626                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   627  0000                     FSR0H equ 0FEAh ;# 
   628                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   629  0000                     PLUSW0 equ 0FEBh ;# 
   630                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   631  0000                     PREINC0 equ 0FECh ;# 
   632                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   633  0000                     POSTDEC0 equ 0FEDh ;# 
   634                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   635  0000                     POSTINC0 equ 0FEEh ;# 
   636                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   637  0000                     INDF0 equ 0FEFh ;# 
   638                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   639  0000                     INTCON3 equ 0FF0h ;# 
   640                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   641  0000                     INTCON2 equ 0FF1h ;# 
   642                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   643  0000                     INTCON equ 0FF2h ;# 
   644                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   645  0000                     PROD equ 0FF3h ;# 
   646                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   647  0000                     PRODL equ 0FF3h ;# 
   648                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   649  0000                     PRODH equ 0FF4h ;# 
   650                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   651  0000                     TABLAT equ 0FF5h ;# 
   652                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   653  0000                     TBLPTR equ 0FF6h ;# 
   654                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   655  0000                     TBLPTRL equ 0FF6h ;# 
   656                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   657  0000                     TBLPTRH equ 0FF7h ;# 
   658                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   659  0000                     TBLPTRU equ 0FF8h ;# 
   660                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   661  0000                     PCLAT equ 0FF9h ;# 
   662                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   663  0000                     PC equ 0FF9h ;# 
   664                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   665  0000                     PCL equ 0FF9h ;# 
   666                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   667  0000                     PCLATH equ 0FFAh ;# 
   668                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   669  0000                     PCLATU equ 0FFBh ;# 
   670                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   671  0000                     STKPTR equ 0FFCh ;# 
   672                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   673  0000                     TOS equ 0FFDh ;# 
   674                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   675  0000                     TOSL equ 0FFDh ;# 
   676                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   677  0000                     TOSH equ 0FFEh ;# 
   678                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   679  0000                     TOSU equ 0FFFh ;# 
   680                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   681  0000                     PORTA equ 0F80h ;# 
   682                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   683  0000                     PORTB equ 0F81h ;# 
   684                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   685  0000                     PORTC equ 0F82h ;# 
   686                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   687  0000                     PORTD equ 0F83h ;# 
   688                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   689  0000                     PORTE equ 0F84h ;# 
   690                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   691  0000                     SSP2CON2 equ 0F85h ;# 
   692                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   693  0000                     SSP2CON1 equ 0F86h ;# 
   694                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   695  0000                     SSP2STAT equ 0F87h ;# 
   696                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   697  0000                     SSP2ADD equ 0F88h ;# 
   698                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   699  0000                     LATA equ 0F89h ;# 
   700                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   701  0000                     LATB equ 0F8Ah ;# 
   702                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   703  0000                     LATC equ 0F8Bh ;# 
   704                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   705  0000                     LATD equ 0F8Ch ;# 
   706                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   707  0000                     LATE equ 0F8Dh ;# 
   708                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   709  0000                     SSP2BUF equ 0F8Eh ;# 
   710                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   711  0000                     TRISA equ 0F92h ;# 
   712                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   713  0000                     DDRA equ 0F92h ;# 
   714                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   715  0000                     TRISB equ 0F93h ;# 
   716                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   717  0000                     DDRB equ 0F93h ;# 
   718                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   719  0000                     TRISC equ 0F94h ;# 
   720                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   721  0000                     DDRC equ 0F94h ;# 
   722                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   723  0000                     TRISD equ 0F95h ;# 
   724                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   725  0000                     DDRD equ 0F95h ;# 
   726                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   727  0000                     TRISE equ 0F96h ;# 
   728                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   729  0000                     DDRE equ 0F96h ;# 
   730                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   731  0000                     OSCTUNE equ 0F9Bh ;# 
   732                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   733  0000                     PIE1 equ 0F9Dh ;# 
   734                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   735  0000                     PIR1 equ 0F9Eh ;# 
   736                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   737  0000                     IPR1 equ 0F9Fh ;# 
   738                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   739  0000                     PIE2 equ 0FA0h ;# 
   740                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   741  0000                     PIR2 equ 0FA1h ;# 
   742                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   743  0000                     IPR2 equ 0FA2h ;# 
   744                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   745  0000                     PIE3 equ 0FA3h ;# 
   746                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   747  0000                     PIR3 equ 0FA4h ;# 
   748                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   749  0000                     IPR3 equ 0FA5h ;# 
   750                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   751  0000                     EECON1 equ 0FA6h ;# 
   752                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   753  0000                     EECON2 equ 0FA7h ;# 
   754                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   755  0000                     RCSTA equ 0FABh ;# 
   756                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   757  0000                     RCSTA1 equ 0FABh ;# 
   758                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   759  0000                     TXSTA equ 0FACh ;# 
   760                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   761  0000                     TXSTA1 equ 0FACh ;# 
   762                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   763  0000                     TXREG equ 0FADh ;# 
   764                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   765  0000                     TXREG1 equ 0FADh ;# 
   766                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   767  0000                     RCREG equ 0FAEh ;# 
   768                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   769  0000                     RCREG1 equ 0FAEh ;# 
   770                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   771  0000                     SPBRG equ 0FAFh ;# 
   772                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   773  0000                     SPBRG1 equ 0FAFh ;# 
   774                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   775  0000                     SPBRGH equ 0FB0h ;# 
   776                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   777  0000                     CMCON equ 0FB4h ;# 
   778                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   779  0000                     CVRCON equ 0FB5h ;# 
   780                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   781  0000                     ECCP1AS equ 0FB6h ;# 
   782                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   783  0000                     ECCP1DEL equ 0FB7h ;# 
   784                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   785  0000                     PWM1CON equ 0FB7h ;# 
   786                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   787  0000                     BAUDCON equ 0FB8h ;# 
   788                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   789  0000                     BAUDCTL equ 0FB8h ;# 
   790                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   791  0000                     CCP2CON equ 0FBAh ;# 
   792                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   793  0000                     CCPR2 equ 0FBBh ;# 
   794                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   795  0000                     CCPR2L equ 0FBBh ;# 
   796                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   797  0000                     CCPR2H equ 0FBCh ;# 
   798                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   799  0000                     ECCP1CON equ 0FBDh ;# 
   800                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   801  0000                     CCP1CON equ 0FBDh ;# 
   802                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   803  0000                     CCPR1 equ 0FBEh ;# 
   804                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   805  0000                     CCPR1L equ 0FBEh ;# 
   806                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   807  0000                     CCPR1H equ 0FBFh ;# 
   808                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   809  0000                     ADCON2 equ 0FC0h ;# 
   810                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   811  0000                     ADCON1 equ 0FC1h ;# 
   812                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   813  0000                     ADCON0 equ 0FC2h ;# 
   814                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   815  0000                     ADRES equ 0FC3h ;# 
   816                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   817  0000                     ADRESL equ 0FC3h ;# 
   818                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   819  0000                     ADRESH equ 0FC4h ;# 
   820                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   821  0000                     SSPCON2 equ 0FC5h ;# 
   822                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   823  0000                     SSP1CON2 equ 0FC5h ;# 
   824                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   825  0000                     SSPCON1 equ 0FC6h ;# 
   826                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   827  0000                     SSP1CON1 equ 0FC6h ;# 
   828                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   829  0000                     SSPSTAT equ 0FC7h ;# 
   830                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   831  0000                     SSP1STAT equ 0FC7h ;# 
   832                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   833  0000                     SSPADD equ 0FC8h ;# 
   834                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   835  0000                     SSP1ADD equ 0FC8h ;# 
   836                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   837  0000                     SSPBUF equ 0FC9h ;# 
   838                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   839  0000                     SSP1BUF equ 0FC9h ;# 
   840                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   841  0000                     T2CON equ 0FCAh ;# 
   842                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   843  0000                     PR2 equ 0FCBh ;# 
   844                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   845  0000                     MEMCON equ 0FCBh ;# 
   846                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   847  0000                     TMR2 equ 0FCCh ;# 
   848                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   849  0000                     T1CON equ 0FCDh ;# 
   850                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   851  0000                     TMR1 equ 0FCEh ;# 
   852                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   853  0000                     TMR1L equ 0FCEh ;# 
   854                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   855  0000                     TMR1H equ 0FCFh ;# 
   856                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   857  0000                     RCON equ 0FD0h ;# 
   858                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   859  0000                     WDTCON equ 0FD1h ;# 
   860                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   861  0000                     OSCCON equ 0FD3h ;# 
   862                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   863  0000                     T0CON equ 0FD5h ;# 
   864                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   865  0000                     TMR0 equ 0FD6h ;# 
   866                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   867  0000                     TMR0L equ 0FD6h ;# 
   868                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   869  0000                     TMR0H equ 0FD7h ;# 
   870                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   871  0000                     STATUS equ 0FD8h ;# 
   872                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   873  0000                     FSR2 equ 0FD9h ;# 
   874                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   875  0000                     FSR2L equ 0FD9h ;# 
   876                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   877  0000                     FSR2H equ 0FDAh ;# 
   878                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   879  0000                     PLUSW2 equ 0FDBh ;# 
   880                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   881  0000                     PREINC2 equ 0FDCh ;# 
   882                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   883  0000                     POSTDEC2 equ 0FDDh ;# 
   884                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   885  0000                     POSTINC2 equ 0FDEh ;# 
   886                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   887  0000                     INDF2 equ 0FDFh ;# 
   888                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   889  0000                     BSR equ 0FE0h ;# 
   890                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   891  0000                     FSR1 equ 0FE1h ;# 
   892                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   893  0000                     FSR1L equ 0FE1h ;# 
   894                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   895  0000                     FSR1H equ 0FE2h ;# 
   896                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   897  0000                     PLUSW1 equ 0FE3h ;# 
   898                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   899  0000                     PREINC1 equ 0FE4h ;# 
   900                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   901  0000                     POSTDEC1 equ 0FE5h ;# 
   902                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   903  0000                     POSTINC1 equ 0FE6h ;# 
   904                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   905  0000                     INDF1 equ 0FE7h ;# 
   906                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   907  0000                     WREG equ 0FE8h ;# 
   908                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   909  0000                     FSR0 equ 0FE9h ;# 
   910                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   911  0000                     FSR0L equ 0FE9h ;# 
   912                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   913  0000                     FSR0H equ 0FEAh ;# 
   914                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   915  0000                     PLUSW0 equ 0FEBh ;# 
   916                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   917  0000                     PREINC0 equ 0FECh ;# 
   918                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   919  0000                     POSTDEC0 equ 0FEDh ;# 
   920                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   921  0000                     POSTINC0 equ 0FEEh ;# 
   922                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   923  0000                     INDF0 equ 0FEFh ;# 
   924                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   925  0000                     INTCON3 equ 0FF0h ;# 
   926                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   927  0000                     INTCON2 equ 0FF1h ;# 
   928                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   929  0000                     INTCON equ 0FF2h ;# 
   930                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   931  0000                     PROD equ 0FF3h ;# 
   932                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   933  0000                     PRODL equ 0FF3h ;# 
   934                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   935  0000                     PRODH equ 0FF4h ;# 
   936                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   937  0000                     TABLAT equ 0FF5h ;# 
   938                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   939  0000                     TBLPTR equ 0FF6h ;# 
   940                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   941  0000                     TBLPTRL equ 0FF6h ;# 
   942                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   943  0000                     TBLPTRH equ 0FF7h ;# 
   944                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   945  0000                     TBLPTRU equ 0FF8h ;# 
   946                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   947  0000                     PCLAT equ 0FF9h ;# 
   948                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   949  0000                     PC equ 0FF9h ;# 
   950                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   951  0000                     PCL equ 0FF9h ;# 
   952                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   953  0000                     PCLATH equ 0FFAh ;# 
   954                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   955  0000                     PCLATU equ 0FFBh ;# 
   956                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   957  0000                     STKPTR equ 0FFCh ;# 
   958                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   959  0000                     TOS equ 0FFDh ;# 
   960                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   961  0000                     TOSL equ 0FFDh ;# 
   962                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   963  0000                     TOSH equ 0FFEh ;# 
   964                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   965  0000                     TOSU equ 0FFFh ;# 
   966                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   967  0000                     PORTA equ 0F80h ;# 
   968                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   969  0000                     PORTB equ 0F81h ;# 
   970                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   971  0000                     PORTC equ 0F82h ;# 
   972                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   973  0000                     PORTD equ 0F83h ;# 
   974                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   975  0000                     PORTE equ 0F84h ;# 
   976                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   977  0000                     SSP2CON2 equ 0F85h ;# 
   978                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   979  0000                     SSP2CON1 equ 0F86h ;# 
   980                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   981  0000                     SSP2STAT equ 0F87h ;# 
   982                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   983  0000                     SSP2ADD equ 0F88h ;# 
   984                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   985  0000                     LATA equ 0F89h ;# 
   986                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   987  0000                     LATB equ 0F8Ah ;# 
   988                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   989  0000                     LATC equ 0F8Bh ;# 
   990                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   991  0000                     LATD equ 0F8Ch ;# 
   992                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   993  0000                     LATE equ 0F8Dh ;# 
   994                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   995  0000                     SSP2BUF equ 0F8Eh ;# 
   996                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   997  0000                     TRISA equ 0F92h ;# 
   998                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   999  0000                     DDRA equ 0F92h ;# 
  1000                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1001  0000                     TRISB equ 0F93h ;# 
  1002                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1003  0000                     DDRB equ 0F93h ;# 
  1004                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1005  0000                     TRISC equ 0F94h ;# 
  1006                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1007  0000                     DDRC equ 0F94h ;# 
  1008                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1009  0000                     TRISD equ 0F95h ;# 
  1010                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1011  0000                     DDRD equ 0F95h ;# 
  1012                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1013  0000                     TRISE equ 0F96h ;# 
  1014                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1015  0000                     DDRE equ 0F96h ;# 
  1016                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1017  0000                     OSCTUNE equ 0F9Bh ;# 
  1018                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1019  0000                     PIE1 equ 0F9Dh ;# 
  1020                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1021  0000                     PIR1 equ 0F9Eh ;# 
  1022                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1023  0000                     IPR1 equ 0F9Fh ;# 
  1024                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1025  0000                     PIE2 equ 0FA0h ;# 
  1026                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1027  0000                     PIR2 equ 0FA1h ;# 
  1028                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1029  0000                     IPR2 equ 0FA2h ;# 
  1030                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1031  0000                     PIE3 equ 0FA3h ;# 
  1032                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1033  0000                     PIR3 equ 0FA4h ;# 
  1034                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1035  0000                     IPR3 equ 0FA5h ;# 
  1036                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1037  0000                     EECON1 equ 0FA6h ;# 
  1038                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1039  0000                     EECON2 equ 0FA7h ;# 
  1040                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1041  0000                     RCSTA equ 0FABh ;# 
  1042                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1043  0000                     RCSTA1 equ 0FABh ;# 
  1044                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1045  0000                     TXSTA equ 0FACh ;# 
  1046                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1047  0000                     TXSTA1 equ 0FACh ;# 
  1048                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1049  0000                     TXREG equ 0FADh ;# 
  1050                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1051  0000                     TXREG1 equ 0FADh ;# 
  1052                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1053  0000                     RCREG equ 0FAEh ;# 
  1054                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1055  0000                     RCREG1 equ 0FAEh ;# 
  1056                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1057  0000                     SPBRG equ 0FAFh ;# 
  1058                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1059  0000                     SPBRG1 equ 0FAFh ;# 
  1060                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1061  0000                     SPBRGH equ 0FB0h ;# 
  1062                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1063  0000                     CMCON equ 0FB4h ;# 
  1064                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1065  0000                     CVRCON equ 0FB5h ;# 
  1066                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1067  0000                     ECCP1AS equ 0FB6h ;# 
  1068                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1069  0000                     ECCP1DEL equ 0FB7h ;# 
  1070                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1071  0000                     PWM1CON equ 0FB7h ;# 
  1072                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1073  0000                     BAUDCON equ 0FB8h ;# 
  1074                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1075  0000                     BAUDCTL equ 0FB8h ;# 
  1076                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1077  0000                     CCP2CON equ 0FBAh ;# 
  1078                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1079  0000                     CCPR2 equ 0FBBh ;# 
  1080                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1081  0000                     CCPR2L equ 0FBBh ;# 
  1082                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1083  0000                     CCPR2H equ 0FBCh ;# 
  1084                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1085  0000                     ECCP1CON equ 0FBDh ;# 
  1086                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1087  0000                     CCP1CON equ 0FBDh ;# 
  1088                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1089  0000                     CCPR1 equ 0FBEh ;# 
  1090                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1091  0000                     CCPR1L equ 0FBEh ;# 
  1092                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1093  0000                     CCPR1H equ 0FBFh ;# 
  1094                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1095  0000                     ADCON2 equ 0FC0h ;# 
  1096                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1097  0000                     ADCON1 equ 0FC1h ;# 
  1098                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1099  0000                     ADCON0 equ 0FC2h ;# 
  1100                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1101  0000                     ADRES equ 0FC3h ;# 
  1102                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1103  0000                     ADRESL equ 0FC3h ;# 
  1104                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1105  0000                     ADRESH equ 0FC4h ;# 
  1106                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1107  0000                     SSPCON2 equ 0FC5h ;# 
  1108                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1109  0000                     SSP1CON2 equ 0FC5h ;# 
  1110                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1111  0000                     SSPCON1 equ 0FC6h ;# 
  1112                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1113  0000                     SSP1CON1 equ 0FC6h ;# 
  1114                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1115  0000                     SSPSTAT equ 0FC7h ;# 
  1116                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1117  0000                     SSP1STAT equ 0FC7h ;# 
  1118                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1119  0000                     SSPADD equ 0FC8h ;# 
  1120                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1121  0000                     SSP1ADD equ 0FC8h ;# 
  1122                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1123  0000                     SSPBUF equ 0FC9h ;# 
  1124                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1125  0000                     SSP1BUF equ 0FC9h ;# 
  1126                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1127  0000                     T2CON equ 0FCAh ;# 
  1128                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1129  0000                     PR2 equ 0FCBh ;# 
  1130                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1131  0000                     MEMCON equ 0FCBh ;# 
  1132                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1133  0000                     TMR2 equ 0FCCh ;# 
  1134                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1135  0000                     T1CON equ 0FCDh ;# 
  1136                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1137  0000                     TMR1 equ 0FCEh ;# 
  1138                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1139  0000                     TMR1L equ 0FCEh ;# 
  1140                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1141  0000                     TMR1H equ 0FCFh ;# 
  1142                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1143  0000                     RCON equ 0FD0h ;# 
  1144                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1145  0000                     WDTCON equ 0FD1h ;# 
  1146                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1147  0000                     OSCCON equ 0FD3h ;# 
  1148                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1149  0000                     T0CON equ 0FD5h ;# 
  1150                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1151  0000                     TMR0 equ 0FD6h ;# 
  1152                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1153  0000                     TMR0L equ 0FD6h ;# 
  1154                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1155  0000                     TMR0H equ 0FD7h ;# 
  1156                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1157  0000                     STATUS equ 0FD8h ;# 
  1158                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1159  0000                     FSR2 equ 0FD9h ;# 
  1160                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1161  0000                     FSR2L equ 0FD9h ;# 
  1162                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1163  0000                     FSR2H equ 0FDAh ;# 
  1164                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1165  0000                     PLUSW2 equ 0FDBh ;# 
  1166                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1167  0000                     PREINC2 equ 0FDCh ;# 
  1168                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1169  0000                     POSTDEC2 equ 0FDDh ;# 
  1170                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1171  0000                     POSTINC2 equ 0FDEh ;# 
  1172                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1173  0000                     INDF2 equ 0FDFh ;# 
  1174                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1175  0000                     BSR equ 0FE0h ;# 
  1176                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1177  0000                     FSR1 equ 0FE1h ;# 
  1178                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1179  0000                     FSR1L equ 0FE1h ;# 
  1180                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1181  0000                     FSR1H equ 0FE2h ;# 
  1182                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1183  0000                     PLUSW1 equ 0FE3h ;# 
  1184                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1185  0000                     PREINC1 equ 0FE4h ;# 
  1186                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1187  0000                     POSTDEC1 equ 0FE5h ;# 
  1188                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1189  0000                     POSTINC1 equ 0FE6h ;# 
  1190                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1191  0000                     INDF1 equ 0FE7h ;# 
  1192                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1193  0000                     WREG equ 0FE8h ;# 
  1194                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1195  0000                     FSR0 equ 0FE9h ;# 
  1196                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1197  0000                     FSR0L equ 0FE9h ;# 
  1198                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1199  0000                     FSR0H equ 0FEAh ;# 
  1200                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1201  0000                     PLUSW0 equ 0FEBh ;# 
  1202                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1203  0000                     PREINC0 equ 0FECh ;# 
  1204                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1205  0000                     POSTDEC0 equ 0FEDh ;# 
  1206                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1207  0000                     POSTINC0 equ 0FEEh ;# 
  1208                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1209  0000                     INDF0 equ 0FEFh ;# 
  1210                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1211  0000                     INTCON3 equ 0FF0h ;# 
  1212                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1213  0000                     INTCON2 equ 0FF1h ;# 
  1214                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1215  0000                     INTCON equ 0FF2h ;# 
  1216                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1217  0000                     PROD equ 0FF3h ;# 
  1218                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1219  0000                     PRODL equ 0FF3h ;# 
  1220                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1221  0000                     PRODH equ 0FF4h ;# 
  1222                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1223  0000                     TABLAT equ 0FF5h ;# 
  1224                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1225  0000                     TBLPTR equ 0FF6h ;# 
  1226                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1227  0000                     TBLPTRL equ 0FF6h ;# 
  1228                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1229  0000                     TBLPTRH equ 0FF7h ;# 
  1230                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1231  0000                     TBLPTRU equ 0FF8h ;# 
  1232                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1233  0000                     PCLAT equ 0FF9h ;# 
  1234                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1235  0000                     PC equ 0FF9h ;# 
  1236                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1237  0000                     PCL equ 0FF9h ;# 
  1238                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1239  0000                     PCLATH equ 0FFAh ;# 
  1240                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1241  0000                     PCLATU equ 0FFBh ;# 
  1242                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1243  0000                     STKPTR equ 0FFCh ;# 
  1244                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1245  0000                     TOS equ 0FFDh ;# 
  1246                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1247  0000                     TOSL equ 0FFDh ;# 
  1248                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1249  0000                     TOSH equ 0FFEh ;# 
  1250                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1251  0000                     TOSU equ 0FFFh ;# 
  1252                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1253  0000                     PORTA equ 0F80h ;# 
  1254                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1255  0000                     PORTB equ 0F81h ;# 
  1256                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1257  0000                     PORTC equ 0F82h ;# 
  1258                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1259  0000                     PORTD equ 0F83h ;# 
  1260                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1261  0000                     PORTE equ 0F84h ;# 
  1262                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1263  0000                     SSP2CON2 equ 0F85h ;# 
  1264                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1265  0000                     SSP2CON1 equ 0F86h ;# 
  1266                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1267  0000                     SSP2STAT equ 0F87h ;# 
  1268                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1269  0000                     SSP2ADD equ 0F88h ;# 
  1270                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1271  0000                     LATA equ 0F89h ;# 
  1272                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1273  0000                     LATB equ 0F8Ah ;# 
  1274                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1275  0000                     LATC equ 0F8Bh ;# 
  1276                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1277  0000                     LATD equ 0F8Ch ;# 
  1278                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1279  0000                     LATE equ 0F8Dh ;# 
  1280                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1281  0000                     SSP2BUF equ 0F8Eh ;# 
  1282                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1283  0000                     TRISA equ 0F92h ;# 
  1284                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1285  0000                     DDRA equ 0F92h ;# 
  1286                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1287  0000                     TRISB equ 0F93h ;# 
  1288                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1289  0000                     DDRB equ 0F93h ;# 
  1290                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1291  0000                     TRISC equ 0F94h ;# 
  1292                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1293  0000                     DDRC equ 0F94h ;# 
  1294                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1295  0000                     TRISD equ 0F95h ;# 
  1296                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1297  0000                     DDRD equ 0F95h ;# 
  1298                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1299  0000                     TRISE equ 0F96h ;# 
  1300                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1301  0000                     DDRE equ 0F96h ;# 
  1302                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1303  0000                     OSCTUNE equ 0F9Bh ;# 
  1304                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1305  0000                     PIE1 equ 0F9Dh ;# 
  1306                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1307  0000                     PIR1 equ 0F9Eh ;# 
  1308                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1309  0000                     IPR1 equ 0F9Fh ;# 
  1310                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1311  0000                     PIE2 equ 0FA0h ;# 
  1312                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1313  0000                     PIR2 equ 0FA1h ;# 
  1314                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1315  0000                     IPR2 equ 0FA2h ;# 
  1316                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1317  0000                     PIE3 equ 0FA3h ;# 
  1318                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1319  0000                     PIR3 equ 0FA4h ;# 
  1320                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1321  0000                     IPR3 equ 0FA5h ;# 
  1322                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1323  0000                     EECON1 equ 0FA6h ;# 
  1324                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1325  0000                     EECON2 equ 0FA7h ;# 
  1326                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1327  0000                     RCSTA equ 0FABh ;# 
  1328                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1329  0000                     RCSTA1 equ 0FABh ;# 
  1330                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1331  0000                     TXSTA equ 0FACh ;# 
  1332                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1333  0000                     TXSTA1 equ 0FACh ;# 
  1334                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1335  0000                     TXREG equ 0FADh ;# 
  1336                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1337  0000                     TXREG1 equ 0FADh ;# 
  1338                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1339  0000                     RCREG equ 0FAEh ;# 
  1340                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1341  0000                     RCREG1 equ 0FAEh ;# 
  1342                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1343  0000                     SPBRG equ 0FAFh ;# 
  1344                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1345  0000                     SPBRG1 equ 0FAFh ;# 
  1346                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1347  0000                     SPBRGH equ 0FB0h ;# 
  1348                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1349  0000                     CMCON equ 0FB4h ;# 
  1350                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1351  0000                     CVRCON equ 0FB5h ;# 
  1352                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1353  0000                     ECCP1AS equ 0FB6h ;# 
  1354                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1355  0000                     ECCP1DEL equ 0FB7h ;# 
  1356                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1357  0000                     PWM1CON equ 0FB7h ;# 
  1358                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1359  0000                     BAUDCON equ 0FB8h ;# 
  1360                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1361  0000                     BAUDCTL equ 0FB8h ;# 
  1362                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1363  0000                     CCP2CON equ 0FBAh ;# 
  1364                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1365  0000                     CCPR2 equ 0FBBh ;# 
  1366                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1367  0000                     CCPR2L equ 0FBBh ;# 
  1368                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1369  0000                     CCPR2H equ 0FBCh ;# 
  1370                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1371  0000                     ECCP1CON equ 0FBDh ;# 
  1372                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1373  0000                     CCP1CON equ 0FBDh ;# 
  1374                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1375  0000                     CCPR1 equ 0FBEh ;# 
  1376                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1377  0000                     CCPR1L equ 0FBEh ;# 
  1378                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1379  0000                     CCPR1H equ 0FBFh ;# 
  1380                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1381  0000                     ADCON2 equ 0FC0h ;# 
  1382                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1383  0000                     ADCON1 equ 0FC1h ;# 
  1384                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1385  0000                     ADCON0 equ 0FC2h ;# 
  1386                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1387  0000                     ADRES equ 0FC3h ;# 
  1388                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1389  0000                     ADRESL equ 0FC3h ;# 
  1390                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1391  0000                     ADRESH equ 0FC4h ;# 
  1392                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1393  0000                     SSPCON2 equ 0FC5h ;# 
  1394                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1395  0000                     SSP1CON2 equ 0FC5h ;# 
  1396                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1397  0000                     SSPCON1 equ 0FC6h ;# 
  1398                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1399  0000                     SSP1CON1 equ 0FC6h ;# 
  1400                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1401  0000                     SSPSTAT equ 0FC7h ;# 
  1402                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1403  0000                     SSP1STAT equ 0FC7h ;# 
  1404                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1405  0000                     SSPADD equ 0FC8h ;# 
  1406                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1407  0000                     SSP1ADD equ 0FC8h ;# 
  1408                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1409  0000                     SSPBUF equ 0FC9h ;# 
  1410                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1411  0000                     SSP1BUF equ 0FC9h ;# 
  1412                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1413  0000                     T2CON equ 0FCAh ;# 
  1414                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1415  0000                     PR2 equ 0FCBh ;# 
  1416                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1417  0000                     MEMCON equ 0FCBh ;# 
  1418                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1419  0000                     TMR2 equ 0FCCh ;# 
  1420                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1421  0000                     T1CON equ 0FCDh ;# 
  1422                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1423  0000                     TMR1 equ 0FCEh ;# 
  1424                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1425  0000                     TMR1L equ 0FCEh ;# 
  1426                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1427  0000                     TMR1H equ 0FCFh ;# 
  1428                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1429  0000                     RCON equ 0FD0h ;# 
  1430                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1431  0000                     WDTCON equ 0FD1h ;# 
  1432                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1433  0000                     OSCCON equ 0FD3h ;# 
  1434                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1435  0000                     T0CON equ 0FD5h ;# 
  1436                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1437  0000                     TMR0 equ 0FD6h ;# 
  1438                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1439  0000                     TMR0L equ 0FD6h ;# 
  1440                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1441  0000                     TMR0H equ 0FD7h ;# 
  1442                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1443  0000                     STATUS equ 0FD8h ;# 
  1444                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1445  0000                     FSR2 equ 0FD9h ;# 
  1446                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1447  0000                     FSR2L equ 0FD9h ;# 
  1448                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1449  0000                     FSR2H equ 0FDAh ;# 
  1450                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1451  0000                     PLUSW2 equ 0FDBh ;# 
  1452                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1453  0000                     PREINC2 equ 0FDCh ;# 
  1454                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1455  0000                     POSTDEC2 equ 0FDDh ;# 
  1456                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1457  0000                     POSTINC2 equ 0FDEh ;# 
  1458                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1459  0000                     INDF2 equ 0FDFh ;# 
  1460                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1461  0000                     BSR equ 0FE0h ;# 
  1462                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1463  0000                     FSR1 equ 0FE1h ;# 
  1464                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1465  0000                     FSR1L equ 0FE1h ;# 
  1466                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1467  0000                     FSR1H equ 0FE2h ;# 
  1468                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1469  0000                     PLUSW1 equ 0FE3h ;# 
  1470                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1471  0000                     PREINC1 equ 0FE4h ;# 
  1472                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1473  0000                     POSTDEC1 equ 0FE5h ;# 
  1474                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1475  0000                     POSTINC1 equ 0FE6h ;# 
  1476                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1477  0000                     INDF1 equ 0FE7h ;# 
  1478                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1479  0000                     WREG equ 0FE8h ;# 
  1480                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1481  0000                     FSR0 equ 0FE9h ;# 
  1482                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1483  0000                     FSR0L equ 0FE9h ;# 
  1484                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1485  0000                     FSR0H equ 0FEAh ;# 
  1486                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1487  0000                     PLUSW0 equ 0FEBh ;# 
  1488                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1489  0000                     PREINC0 equ 0FECh ;# 
  1490                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1491  0000                     POSTDEC0 equ 0FEDh ;# 
  1492                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1493  0000                     POSTINC0 equ 0FEEh ;# 
  1494                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1495  0000                     INDF0 equ 0FEFh ;# 
  1496                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1497  0000                     INTCON3 equ 0FF0h ;# 
  1498                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1499  0000                     INTCON2 equ 0FF1h ;# 
  1500                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1501  0000                     INTCON equ 0FF2h ;# 
  1502                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1503  0000                     PROD equ 0FF3h ;# 
  1504                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1505  0000                     PRODL equ 0FF3h ;# 
  1506                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1507  0000                     PRODH equ 0FF4h ;# 
  1508                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1509  0000                     TABLAT equ 0FF5h ;# 
  1510                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1511  0000                     TBLPTR equ 0FF6h ;# 
  1512                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1513  0000                     TBLPTRL equ 0FF6h ;# 
  1514                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1515  0000                     TBLPTRH equ 0FF7h ;# 
  1516                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1517  0000                     TBLPTRU equ 0FF8h ;# 
  1518                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1519  0000                     PCLAT equ 0FF9h ;# 
  1520                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1521  0000                     PC equ 0FF9h ;# 
  1522                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1523  0000                     PCL equ 0FF9h ;# 
  1524                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1525  0000                     PCLATH equ 0FFAh ;# 
  1526                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1527  0000                     PCLATU equ 0FFBh ;# 
  1528                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1529  0000                     STKPTR equ 0FFCh ;# 
  1530                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1531  0000                     TOS equ 0FFDh ;# 
  1532                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1533  0000                     TOSL equ 0FFDh ;# 
  1534                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1535  0000                     TOSH equ 0FFEh ;# 
  1536                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1537  0000                     TOSU equ 0FFFh ;# 
  1538                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1539  0000                     PORTA equ 0F80h ;# 
  1540                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1541  0000                     PORTB equ 0F81h ;# 
  1542                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1543  0000                     PORTC equ 0F82h ;# 
  1544                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1545  0000                     PORTD equ 0F83h ;# 
  1546                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1547  0000                     PORTE equ 0F84h ;# 
  1548                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1549  0000                     SSP2CON2 equ 0F85h ;# 
  1550                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1551  0000                     SSP2CON1 equ 0F86h ;# 
  1552                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1553  0000                     SSP2STAT equ 0F87h ;# 
  1554                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1555  0000                     SSP2ADD equ 0F88h ;# 
  1556                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1557  0000                     LATA equ 0F89h ;# 
  1558                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1559  0000                     LATB equ 0F8Ah ;# 
  1560                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1561  0000                     LATC equ 0F8Bh ;# 
  1562                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1563  0000                     LATD equ 0F8Ch ;# 
  1564                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1565  0000                     LATE equ 0F8Dh ;# 
  1566                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1567  0000                     SSP2BUF equ 0F8Eh ;# 
  1568                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1569  0000                     TRISA equ 0F92h ;# 
  1570                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1571  0000                     DDRA equ 0F92h ;# 
  1572                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1573  0000                     TRISB equ 0F93h ;# 
  1574                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1575  0000                     DDRB equ 0F93h ;# 
  1576                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1577  0000                     TRISC equ 0F94h ;# 
  1578                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1579  0000                     DDRC equ 0F94h ;# 
  1580                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1581  0000                     TRISD equ 0F95h ;# 
  1582                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1583  0000                     DDRD equ 0F95h ;# 
  1584                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1585  0000                     TRISE equ 0F96h ;# 
  1586                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1587  0000                     DDRE equ 0F96h ;# 
  1588                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1589  0000                     OSCTUNE equ 0F9Bh ;# 
  1590                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1591  0000                     PIE1 equ 0F9Dh ;# 
  1592                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1593  0000                     PIR1 equ 0F9Eh ;# 
  1594                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1595  0000                     IPR1 equ 0F9Fh ;# 
  1596                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1597  0000                     PIE2 equ 0FA0h ;# 
  1598                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1599  0000                     PIR2 equ 0FA1h ;# 
  1600                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1601  0000                     IPR2 equ 0FA2h ;# 
  1602                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1603  0000                     PIE3 equ 0FA3h ;# 
  1604                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1605  0000                     PIR3 equ 0FA4h ;# 
  1606                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1607  0000                     IPR3 equ 0FA5h ;# 
  1608                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1609  0000                     EECON1 equ 0FA6h ;# 
  1610                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1611  0000                     EECON2 equ 0FA7h ;# 
  1612                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1613  0000                     RCSTA equ 0FABh ;# 
  1614                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1615  0000                     RCSTA1 equ 0FABh ;# 
  1616                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1617  0000                     TXSTA equ 0FACh ;# 
  1618                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1619  0000                     TXSTA1 equ 0FACh ;# 
  1620                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1621  0000                     TXREG equ 0FADh ;# 
  1622                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1623  0000                     TXREG1 equ 0FADh ;# 
  1624                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1625  0000                     RCREG equ 0FAEh ;# 
  1626                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1627  0000                     RCREG1 equ 0FAEh ;# 
  1628                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1629  0000                     SPBRG equ 0FAFh ;# 
  1630                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1631  0000                     SPBRG1 equ 0FAFh ;# 
  1632                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1633  0000                     SPBRGH equ 0FB0h ;# 
  1634                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1635  0000                     CMCON equ 0FB4h ;# 
  1636                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1637  0000                     CVRCON equ 0FB5h ;# 
  1638                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1639  0000                     ECCP1AS equ 0FB6h ;# 
  1640                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1641  0000                     ECCP1DEL equ 0FB7h ;# 
  1642                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1643  0000                     PWM1CON equ 0FB7h ;# 
  1644                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1645  0000                     BAUDCON equ 0FB8h ;# 
  1646                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1647  0000                     BAUDCTL equ 0FB8h ;# 
  1648                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1649  0000                     CCP2CON equ 0FBAh ;# 
  1650                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1651  0000                     CCPR2 equ 0FBBh ;# 
  1652                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1653  0000                     CCPR2L equ 0FBBh ;# 
  1654                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1655  0000                     CCPR2H equ 0FBCh ;# 
  1656                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1657  0000                     ECCP1CON equ 0FBDh ;# 
  1658                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1659  0000                     CCP1CON equ 0FBDh ;# 
  1660                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1661  0000                     CCPR1 equ 0FBEh ;# 
  1662                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1663  0000                     CCPR1L equ 0FBEh ;# 
  1664                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1665  0000                     CCPR1H equ 0FBFh ;# 
  1666                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1667  0000                     ADCON2 equ 0FC0h ;# 
  1668                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1669  0000                     ADCON1 equ 0FC1h ;# 
  1670                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1671  0000                     ADCON0 equ 0FC2h ;# 
  1672                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1673  0000                     ADRES equ 0FC3h ;# 
  1674                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1675  0000                     ADRESL equ 0FC3h ;# 
  1676                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1677  0000                     ADRESH equ 0FC4h ;# 
  1678                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1679  0000                     SSPCON2 equ 0FC5h ;# 
  1680                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1681  0000                     SSP1CON2 equ 0FC5h ;# 
  1682                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1683  0000                     SSPCON1 equ 0FC6h ;# 
  1684                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1685  0000                     SSP1CON1 equ 0FC6h ;# 
  1686                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1687  0000                     SSPSTAT equ 0FC7h ;# 
  1688                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1689  0000                     SSP1STAT equ 0FC7h ;# 
  1690                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1691  0000                     SSPADD equ 0FC8h ;# 
  1692                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1693  0000                     SSP1ADD equ 0FC8h ;# 
  1694                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1695  0000                     SSPBUF equ 0FC9h ;# 
  1696                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1697  0000                     SSP1BUF equ 0FC9h ;# 
  1698                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1699  0000                     T2CON equ 0FCAh ;# 
  1700                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1701  0000                     PR2 equ 0FCBh ;# 
  1702                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1703  0000                     MEMCON equ 0FCBh ;# 
  1704                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1705  0000                     TMR2 equ 0FCCh ;# 
  1706                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1707  0000                     T1CON equ 0FCDh ;# 
  1708                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1709  0000                     TMR1 equ 0FCEh ;# 
  1710                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1711  0000                     TMR1L equ 0FCEh ;# 
  1712                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1713  0000                     TMR1H equ 0FCFh ;# 
  1714                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1715  0000                     RCON equ 0FD0h ;# 
  1716                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1717  0000                     WDTCON equ 0FD1h ;# 
  1718                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1719  0000                     OSCCON equ 0FD3h ;# 
  1720                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1721  0000                     T0CON equ 0FD5h ;# 
  1722                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1723  0000                     TMR0 equ 0FD6h ;# 
  1724                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1725  0000                     TMR0L equ 0FD6h ;# 
  1726                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1727  0000                     TMR0H equ 0FD7h ;# 
  1728                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1729  0000                     STATUS equ 0FD8h ;# 
  1730                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1731  0000                     FSR2 equ 0FD9h ;# 
  1732                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1733  0000                     FSR2L equ 0FD9h ;# 
  1734                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1735  0000                     FSR2H equ 0FDAh ;# 
  1736                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1737  0000                     PLUSW2 equ 0FDBh ;# 
  1738                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1739  0000                     PREINC2 equ 0FDCh ;# 
  1740                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1741  0000                     POSTDEC2 equ 0FDDh ;# 
  1742                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1743  0000                     POSTINC2 equ 0FDEh ;# 
  1744                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1745  0000                     INDF2 equ 0FDFh ;# 
  1746                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1747  0000                     BSR equ 0FE0h ;# 
  1748                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1749  0000                     FSR1 equ 0FE1h ;# 
  1750                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1751  0000                     FSR1L equ 0FE1h ;# 
  1752                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1753  0000                     FSR1H equ 0FE2h ;# 
  1754                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1755  0000                     PLUSW1 equ 0FE3h ;# 
  1756                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1757  0000                     PREINC1 equ 0FE4h ;# 
  1758                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1759  0000                     POSTDEC1 equ 0FE5h ;# 
  1760                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1761  0000                     POSTINC1 equ 0FE6h ;# 
  1762                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1763  0000                     INDF1 equ 0FE7h ;# 
  1764                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1765  0000                     WREG equ 0FE8h ;# 
  1766                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1767  0000                     FSR0 equ 0FE9h ;# 
  1768                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1769  0000                     FSR0L equ 0FE9h ;# 
  1770                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1771  0000                     FSR0H equ 0FEAh ;# 
  1772                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1773  0000                     PLUSW0 equ 0FEBh ;# 
  1774                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1775  0000                     PREINC0 equ 0FECh ;# 
  1776                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1777  0000                     POSTDEC0 equ 0FEDh ;# 
  1778                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1779  0000                     POSTINC0 equ 0FEEh ;# 
  1780                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1781  0000                     INDF0 equ 0FEFh ;# 
  1782                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1783  0000                     INTCON3 equ 0FF0h ;# 
  1784                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1785  0000                     INTCON2 equ 0FF1h ;# 
  1786                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1787  0000                     INTCON equ 0FF2h ;# 
  1788                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1789  0000                     PROD equ 0FF3h ;# 
  1790                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1791  0000                     PRODL equ 0FF3h ;# 
  1792                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1793  0000                     PRODH equ 0FF4h ;# 
  1794                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1795  0000                     TABLAT equ 0FF5h ;# 
  1796                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1797  0000                     TBLPTR equ 0FF6h ;# 
  1798                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1799  0000                     TBLPTRL equ 0FF6h ;# 
  1800                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1801  0000                     TBLPTRH equ 0FF7h ;# 
  1802                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1803  0000                     TBLPTRU equ 0FF8h ;# 
  1804                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1805  0000                     PCLAT equ 0FF9h ;# 
  1806                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1807  0000                     PC equ 0FF9h ;# 
  1808                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1809  0000                     PCL equ 0FF9h ;# 
  1810                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1811  0000                     PCLATH equ 0FFAh ;# 
  1812                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1813  0000                     PCLATU equ 0FFBh ;# 
  1814                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1815  0000                     STKPTR equ 0FFCh ;# 
  1816                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1817  0000                     TOS equ 0FFDh ;# 
  1818                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1819  0000                     TOSL equ 0FFDh ;# 
  1820                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1821  0000                     TOSH equ 0FFEh ;# 
  1822                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1823  0000                     TOSU equ 0FFFh ;# 
  1824                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1825  0000                     PORTA equ 0F80h ;# 
  1826                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1827  0000                     PORTB equ 0F81h ;# 
  1828                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1829  0000                     PORTC equ 0F82h ;# 
  1830                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1831  0000                     PORTD equ 0F83h ;# 
  1832                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1833  0000                     PORTE equ 0F84h ;# 
  1834                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1835  0000                     SSP2CON2 equ 0F85h ;# 
  1836                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1837  0000                     SSP2CON1 equ 0F86h ;# 
  1838                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1839  0000                     SSP2STAT equ 0F87h ;# 
  1840                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1841  0000                     SSP2ADD equ 0F88h ;# 
  1842                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1843  0000                     LATA equ 0F89h ;# 
  1844                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1845  0000                     LATB equ 0F8Ah ;# 
  1846                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1847  0000                     LATC equ 0F8Bh ;# 
  1848                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1849  0000                     LATD equ 0F8Ch ;# 
  1850                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1851  0000                     LATE equ 0F8Dh ;# 
  1852                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1853  0000                     SSP2BUF equ 0F8Eh ;# 
  1854                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1855  0000                     TRISA equ 0F92h ;# 
  1856                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1857  0000                     DDRA equ 0F92h ;# 
  1858                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1859  0000                     TRISB equ 0F93h ;# 
  1860                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1861  0000                     DDRB equ 0F93h ;# 
  1862                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1863  0000                     TRISC equ 0F94h ;# 
  1864                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1865  0000                     DDRC equ 0F94h ;# 
  1866                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1867  0000                     TRISD equ 0F95h ;# 
  1868                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1869  0000                     DDRD equ 0F95h ;# 
  1870                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1871  0000                     TRISE equ 0F96h ;# 
  1872                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1873  0000                     DDRE equ 0F96h ;# 
  1874                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1875  0000                     OSCTUNE equ 0F9Bh ;# 
  1876                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1877  0000                     PIE1 equ 0F9Dh ;# 
  1878                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1879  0000                     PIR1 equ 0F9Eh ;# 
  1880                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1881  0000                     IPR1 equ 0F9Fh ;# 
  1882                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1883  0000                     PIE2 equ 0FA0h ;# 
  1884                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1885  0000                     PIR2 equ 0FA1h ;# 
  1886                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1887  0000                     IPR2 equ 0FA2h ;# 
  1888                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1889  0000                     PIE3 equ 0FA3h ;# 
  1890                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1891  0000                     PIR3 equ 0FA4h ;# 
  1892                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1893  0000                     IPR3 equ 0FA5h ;# 
  1894                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1895  0000                     EECON1 equ 0FA6h ;# 
  1896                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1897  0000                     EECON2 equ 0FA7h ;# 
  1898                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1899  0000                     RCSTA equ 0FABh ;# 
  1900                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1901  0000                     RCSTA1 equ 0FABh ;# 
  1902                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1903  0000                     TXSTA equ 0FACh ;# 
  1904                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1905  0000                     TXSTA1 equ 0FACh ;# 
  1906                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1907  0000                     TXREG equ 0FADh ;# 
  1908                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1909  0000                     TXREG1 equ 0FADh ;# 
  1910                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1911  0000                     RCREG equ 0FAEh ;# 
  1912                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1913  0000                     RCREG1 equ 0FAEh ;# 
  1914                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1915  0000                     SPBRG equ 0FAFh ;# 
  1916                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1917  0000                     SPBRG1 equ 0FAFh ;# 
  1918                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1919  0000                     SPBRGH equ 0FB0h ;# 
  1920                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1921  0000                     CMCON equ 0FB4h ;# 
  1922                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1923  0000                     CVRCON equ 0FB5h ;# 
  1924                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1925  0000                     ECCP1AS equ 0FB6h ;# 
  1926                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1927  0000                     ECCP1DEL equ 0FB7h ;# 
  1928                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1929  0000                     PWM1CON equ 0FB7h ;# 
  1930                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1931  0000                     BAUDCON equ 0FB8h ;# 
  1932                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1933  0000                     BAUDCTL equ 0FB8h ;# 
  1934                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1935  0000                     CCP2CON equ 0FBAh ;# 
  1936                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1937  0000                     CCPR2 equ 0FBBh ;# 
  1938                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1939  0000                     CCPR2L equ 0FBBh ;# 
  1940                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1941  0000                     CCPR2H equ 0FBCh ;# 
  1942                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1943  0000                     ECCP1CON equ 0FBDh ;# 
  1944                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1945  0000                     CCP1CON equ 0FBDh ;# 
  1946                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1947  0000                     CCPR1 equ 0FBEh ;# 
  1948                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1949  0000                     CCPR1L equ 0FBEh ;# 
  1950                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1951  0000                     CCPR1H equ 0FBFh ;# 
  1952                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1953  0000                     ADCON2 equ 0FC0h ;# 
  1954                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1955  0000                     ADCON1 equ 0FC1h ;# 
  1956                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1957  0000                     ADCON0 equ 0FC2h ;# 
  1958                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1959  0000                     ADRES equ 0FC3h ;# 
  1960                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1961  0000                     ADRESL equ 0FC3h ;# 
  1962                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1963  0000                     ADRESH equ 0FC4h ;# 
  1964                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1965  0000                     SSPCON2 equ 0FC5h ;# 
  1966                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1967  0000                     SSP1CON2 equ 0FC5h ;# 
  1968                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1969  0000                     SSPCON1 equ 0FC6h ;# 
  1970                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1971  0000                     SSP1CON1 equ 0FC6h ;# 
  1972                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1973  0000                     SSPSTAT equ 0FC7h ;# 
  1974                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1975  0000                     SSP1STAT equ 0FC7h ;# 
  1976                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1977  0000                     SSPADD equ 0FC8h ;# 
  1978                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1979  0000                     SSP1ADD equ 0FC8h ;# 
  1980                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1981  0000                     SSPBUF equ 0FC9h ;# 
  1982                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1983  0000                     SSP1BUF equ 0FC9h ;# 
  1984                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1985  0000                     T2CON equ 0FCAh ;# 
  1986                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1987  0000                     PR2 equ 0FCBh ;# 
  1988                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1989  0000                     MEMCON equ 0FCBh ;# 
  1990                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1991  0000                     TMR2 equ 0FCCh ;# 
  1992                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1993  0000                     T1CON equ 0FCDh ;# 
  1994                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1995  0000                     TMR1 equ 0FCEh ;# 
  1996                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1997  0000                     TMR1L equ 0FCEh ;# 
  1998                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1999  0000                     TMR1H equ 0FCFh ;# 
  2000                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2001  0000                     RCON equ 0FD0h ;# 
  2002                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2003  0000                     WDTCON equ 0FD1h ;# 
  2004                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2005  0000                     OSCCON equ 0FD3h ;# 
  2006                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2007  0000                     T0CON equ 0FD5h ;# 
  2008                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2009  0000                     TMR0 equ 0FD6h ;# 
  2010                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2011  0000                     TMR0L equ 0FD6h ;# 
  2012                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2013  0000                     TMR0H equ 0FD7h ;# 
  2014                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2015  0000                     STATUS equ 0FD8h ;# 
  2016                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2017  0000                     FSR2 equ 0FD9h ;# 
  2018                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2019  0000                     FSR2L equ 0FD9h ;# 
  2020                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2021  0000                     FSR2H equ 0FDAh ;# 
  2022                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2023  0000                     PLUSW2 equ 0FDBh ;# 
  2024                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2025  0000                     PREINC2 equ 0FDCh ;# 
  2026                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2027  0000                     POSTDEC2 equ 0FDDh ;# 
  2028                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2029  0000                     POSTINC2 equ 0FDEh ;# 
  2030                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2031  0000                     INDF2 equ 0FDFh ;# 
  2032                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2033  0000                     BSR equ 0FE0h ;# 
  2034                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2035  0000                     FSR1 equ 0FE1h ;# 
  2036                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2037  0000                     FSR1L equ 0FE1h ;# 
  2038                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2039  0000                     FSR1H equ 0FE2h ;# 
  2040                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2041  0000                     PLUSW1 equ 0FE3h ;# 
  2042                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2043  0000                     PREINC1 equ 0FE4h ;# 
  2044                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2045  0000                     POSTDEC1 equ 0FE5h ;# 
  2046                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2047  0000                     POSTINC1 equ 0FE6h ;# 
  2048                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2049  0000                     INDF1 equ 0FE7h ;# 
  2050                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2051  0000                     WREG equ 0FE8h ;# 
  2052                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2053  0000                     FSR0 equ 0FE9h ;# 
  2054                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2055  0000                     FSR0L equ 0FE9h ;# 
  2056                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2057  0000                     FSR0H equ 0FEAh ;# 
  2058                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2059  0000                     PLUSW0 equ 0FEBh ;# 
  2060                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2061  0000                     PREINC0 equ 0FECh ;# 
  2062                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2063  0000                     POSTDEC0 equ 0FEDh ;# 
  2064                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2065  0000                     POSTINC0 equ 0FEEh ;# 
  2066                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2067  0000                     INDF0 equ 0FEFh ;# 
  2068                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2069  0000                     INTCON3 equ 0FF0h ;# 
  2070                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2071  0000                     INTCON2 equ 0FF1h ;# 
  2072                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2073  0000                     INTCON equ 0FF2h ;# 
  2074                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2075  0000                     PROD equ 0FF3h ;# 
  2076                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2077  0000                     PRODL equ 0FF3h ;# 
  2078                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2079  0000                     PRODH equ 0FF4h ;# 
  2080                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2081  0000                     TABLAT equ 0FF5h ;# 
  2082                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2083  0000                     TBLPTR equ 0FF6h ;# 
  2084                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2085  0000                     TBLPTRL equ 0FF6h ;# 
  2086                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2087  0000                     TBLPTRH equ 0FF7h ;# 
  2088                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2089  0000                     TBLPTRU equ 0FF8h ;# 
  2090                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2091  0000                     PCLAT equ 0FF9h ;# 
  2092                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2093  0000                     PC equ 0FF9h ;# 
  2094                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2095  0000                     PCL equ 0FF9h ;# 
  2096                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2097  0000                     PCLATH equ 0FFAh ;# 
  2098                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2099  0000                     PCLATU equ 0FFBh ;# 
  2100                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2101  0000                     STKPTR equ 0FFCh ;# 
  2102                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2103  0000                     TOS equ 0FFDh ;# 
  2104                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2105  0000                     TOSL equ 0FFDh ;# 
  2106                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2107  0000                     TOSH equ 0FFEh ;# 
  2108                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2109  0000                     TOSU equ 0FFFh ;# 
  2110                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2111  0000                     PORTA equ 0F80h ;# 
  2112                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2113  0000                     PORTB equ 0F81h ;# 
  2114                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2115  0000                     PORTC equ 0F82h ;# 
  2116                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2117  0000                     PORTD equ 0F83h ;# 
  2118                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2119  0000                     PORTE equ 0F84h ;# 
  2120                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2121  0000                     SSP2CON2 equ 0F85h ;# 
  2122                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2123  0000                     SSP2CON1 equ 0F86h ;# 
  2124                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2125  0000                     SSP2STAT equ 0F87h ;# 
  2126                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2127  0000                     SSP2ADD equ 0F88h ;# 
  2128                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2129  0000                     LATA equ 0F89h ;# 
  2130                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2131  0000                     LATB equ 0F8Ah ;# 
  2132                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2133  0000                     LATC equ 0F8Bh ;# 
  2134                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2135  0000                     LATD equ 0F8Ch ;# 
  2136                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2137  0000                     LATE equ 0F8Dh ;# 
  2138                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2139  0000                     SSP2BUF equ 0F8Eh ;# 
  2140                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2141  0000                     TRISA equ 0F92h ;# 
  2142                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2143  0000                     DDRA equ 0F92h ;# 
  2144                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2145  0000                     TRISB equ 0F93h ;# 
  2146                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2147  0000                     DDRB equ 0F93h ;# 
  2148                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2149  0000                     TRISC equ 0F94h ;# 
  2150                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2151  0000                     DDRC equ 0F94h ;# 
  2152                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2153  0000                     TRISD equ 0F95h ;# 
  2154                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2155  0000                     DDRD equ 0F95h ;# 
  2156                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2157  0000                     TRISE equ 0F96h ;# 
  2158                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2159  0000                     DDRE equ 0F96h ;# 
  2160                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2161  0000                     OSCTUNE equ 0F9Bh ;# 
  2162                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2163  0000                     PIE1 equ 0F9Dh ;# 
  2164                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2165  0000                     PIR1 equ 0F9Eh ;# 
  2166                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2167  0000                     IPR1 equ 0F9Fh ;# 
  2168                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2169  0000                     PIE2 equ 0FA0h ;# 
  2170                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2171  0000                     PIR2 equ 0FA1h ;# 
  2172                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2173  0000                     IPR2 equ 0FA2h ;# 
  2174                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2175  0000                     PIE3 equ 0FA3h ;# 
  2176                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2177  0000                     PIR3 equ 0FA4h ;# 
  2178                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2179  0000                     IPR3 equ 0FA5h ;# 
  2180                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2181  0000                     EECON1 equ 0FA6h ;# 
  2182                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2183  0000                     EECON2 equ 0FA7h ;# 
  2184                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2185  0000                     RCSTA equ 0FABh ;# 
  2186                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2187  0000                     RCSTA1 equ 0FABh ;# 
  2188                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2189  0000                     TXSTA equ 0FACh ;# 
  2190                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2191  0000                     TXSTA1 equ 0FACh ;# 
  2192                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2193  0000                     TXREG equ 0FADh ;# 
  2194                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2195  0000                     TXREG1 equ 0FADh ;# 
  2196                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2197  0000                     RCREG equ 0FAEh ;# 
  2198                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2199  0000                     RCREG1 equ 0FAEh ;# 
  2200                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2201  0000                     SPBRG equ 0FAFh ;# 
  2202                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2203  0000                     SPBRG1 equ 0FAFh ;# 
  2204                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2205  0000                     SPBRGH equ 0FB0h ;# 
  2206                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2207  0000                     CMCON equ 0FB4h ;# 
  2208                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2209  0000                     CVRCON equ 0FB5h ;# 
  2210                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2211  0000                     ECCP1AS equ 0FB6h ;# 
  2212                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2213  0000                     ECCP1DEL equ 0FB7h ;# 
  2214                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2215  0000                     PWM1CON equ 0FB7h ;# 
  2216                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2217  0000                     BAUDCON equ 0FB8h ;# 
  2218                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2219  0000                     BAUDCTL equ 0FB8h ;# 
  2220                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2221  0000                     CCP2CON equ 0FBAh ;# 
  2222                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2223  0000                     CCPR2 equ 0FBBh ;# 
  2224                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2225  0000                     CCPR2L equ 0FBBh ;# 
  2226                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2227  0000                     CCPR2H equ 0FBCh ;# 
  2228                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2229  0000                     ECCP1CON equ 0FBDh ;# 
  2230                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2231  0000                     CCP1CON equ 0FBDh ;# 
  2232                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2233  0000                     CCPR1 equ 0FBEh ;# 
  2234                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2235  0000                     CCPR1L equ 0FBEh ;# 
  2236                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2237  0000                     CCPR1H equ 0FBFh ;# 
  2238                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2239  0000                     ADCON2 equ 0FC0h ;# 
  2240                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2241  0000                     ADCON1 equ 0FC1h ;# 
  2242                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2243  0000                     ADCON0 equ 0FC2h ;# 
  2244                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2245  0000                     ADRES equ 0FC3h ;# 
  2246                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2247  0000                     ADRESL equ 0FC3h ;# 
  2248                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2249  0000                     ADRESH equ 0FC4h ;# 
  2250                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2251  0000                     SSPCON2 equ 0FC5h ;# 
  2252                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2253  0000                     SSP1CON2 equ 0FC5h ;# 
  2254                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2255  0000                     SSPCON1 equ 0FC6h ;# 
  2256                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2257  0000                     SSP1CON1 equ 0FC6h ;# 
  2258                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2259  0000                     SSPSTAT equ 0FC7h ;# 
  2260                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2261  0000                     SSP1STAT equ 0FC7h ;# 
  2262                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2263  0000                     SSPADD equ 0FC8h ;# 
  2264                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2265  0000                     SSP1ADD equ 0FC8h ;# 
  2266                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2267  0000                     SSPBUF equ 0FC9h ;# 
  2268                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2269  0000                     SSP1BUF equ 0FC9h ;# 
  2270                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2271  0000                     T2CON equ 0FCAh ;# 
  2272                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2273  0000                     PR2 equ 0FCBh ;# 
  2274                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2275  0000                     MEMCON equ 0FCBh ;# 
  2276                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2277  0000                     TMR2 equ 0FCCh ;# 
  2278                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2279  0000                     T1CON equ 0FCDh ;# 
  2280                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2281  0000                     TMR1 equ 0FCEh ;# 
  2282                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2283  0000                     TMR1L equ 0FCEh ;# 
  2284                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2285  0000                     TMR1H equ 0FCFh ;# 
  2286                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2287  0000                     RCON equ 0FD0h ;# 
  2288                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2289  0000                     WDTCON equ 0FD1h ;# 
  2290                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2291  0000                     OSCCON equ 0FD3h ;# 
  2292                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2293  0000                     T0CON equ 0FD5h ;# 
  2294                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2295  0000                     TMR0 equ 0FD6h ;# 
  2296                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2297  0000                     TMR0L equ 0FD6h ;# 
  2298                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2299  0000                     TMR0H equ 0FD7h ;# 
  2300                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2301  0000                     STATUS equ 0FD8h ;# 
  2302                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2303  0000                     FSR2 equ 0FD9h ;# 
  2304                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2305  0000                     FSR2L equ 0FD9h ;# 
  2306                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2307  0000                     FSR2H equ 0FDAh ;# 
  2308                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2309  0000                     PLUSW2 equ 0FDBh ;# 
  2310                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2311  0000                     PREINC2 equ 0FDCh ;# 
  2312                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2313  0000                     POSTDEC2 equ 0FDDh ;# 
  2314                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2315  0000                     POSTINC2 equ 0FDEh ;# 
  2316                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2317  0000                     INDF2 equ 0FDFh ;# 
  2318                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2319  0000                     BSR equ 0FE0h ;# 
  2320                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2321  0000                     FSR1 equ 0FE1h ;# 
  2322                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2323  0000                     FSR1L equ 0FE1h ;# 
  2324                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2325  0000                     FSR1H equ 0FE2h ;# 
  2326                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2327  0000                     PLUSW1 equ 0FE3h ;# 
  2328                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2329  0000                     PREINC1 equ 0FE4h ;# 
  2330                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2331  0000                     POSTDEC1 equ 0FE5h ;# 
  2332                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2333  0000                     POSTINC1 equ 0FE6h ;# 
  2334                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2335  0000                     INDF1 equ 0FE7h ;# 
  2336                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2337  0000                     WREG equ 0FE8h ;# 
  2338                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2339  0000                     FSR0 equ 0FE9h ;# 
  2340                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2341  0000                     FSR0L equ 0FE9h ;# 
  2342                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2343  0000                     FSR0H equ 0FEAh ;# 
  2344                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2345  0000                     PLUSW0 equ 0FEBh ;# 
  2346                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2347  0000                     PREINC0 equ 0FECh ;# 
  2348                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2349  0000                     POSTDEC0 equ 0FEDh ;# 
  2350                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2351  0000                     POSTINC0 equ 0FEEh ;# 
  2352                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2353  0000                     INDF0 equ 0FEFh ;# 
  2354                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2355  0000                     INTCON3 equ 0FF0h ;# 
  2356                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2357  0000                     INTCON2 equ 0FF1h ;# 
  2358                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2359  0000                     INTCON equ 0FF2h ;# 
  2360                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2361  0000                     PROD equ 0FF3h ;# 
  2362                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2363  0000                     PRODL equ 0FF3h ;# 
  2364                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2365  0000                     PRODH equ 0FF4h ;# 
  2366                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2367  0000                     TABLAT equ 0FF5h ;# 
  2368                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2369  0000                     TBLPTR equ 0FF6h ;# 
  2370                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2371  0000                     TBLPTRL equ 0FF6h ;# 
  2372                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2373  0000                     TBLPTRH equ 0FF7h ;# 
  2374                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2375  0000                     TBLPTRU equ 0FF8h ;# 
  2376                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2377  0000                     PCLAT equ 0FF9h ;# 
  2378                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2379  0000                     PC equ 0FF9h ;# 
  2380                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2381  0000                     PCL equ 0FF9h ;# 
  2382                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2383  0000                     PCLATH equ 0FFAh ;# 
  2384                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2385  0000                     PCLATU equ 0FFBh ;# 
  2386                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2387  0000                     STKPTR equ 0FFCh ;# 
  2388                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2389  0000                     TOS equ 0FFDh ;# 
  2390                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2391  0000                     TOSL equ 0FFDh ;# 
  2392                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2393  0000                     TOSH equ 0FFEh ;# 
  2394                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2395  0000                     TOSU equ 0FFFh ;# 
  2396                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2397  0000                     PORTA equ 0F80h ;# 
  2398                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2399  0000                     PORTB equ 0F81h ;# 
  2400                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2401  0000                     PORTC equ 0F82h ;# 
  2402                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2403  0000                     PORTD equ 0F83h ;# 
  2404                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2405  0000                     PORTE equ 0F84h ;# 
  2406                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2407  0000                     SSP2CON2 equ 0F85h ;# 
  2408                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2409  0000                     SSP2CON1 equ 0F86h ;# 
  2410                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2411  0000                     SSP2STAT equ 0F87h ;# 
  2412                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2413  0000                     SSP2ADD equ 0F88h ;# 
  2414                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2415  0000                     LATA equ 0F89h ;# 
  2416                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2417  0000                     LATB equ 0F8Ah ;# 
  2418                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2419  0000                     LATC equ 0F8Bh ;# 
  2420                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2421  0000                     LATD equ 0F8Ch ;# 
  2422                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2423  0000                     LATE equ 0F8Dh ;# 
  2424                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2425  0000                     SSP2BUF equ 0F8Eh ;# 
  2426                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2427  0000                     TRISA equ 0F92h ;# 
  2428                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2429  0000                     DDRA equ 0F92h ;# 
  2430                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2431  0000                     TRISB equ 0F93h ;# 
  2432                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2433  0000                     DDRB equ 0F93h ;# 
  2434                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2435  0000                     TRISC equ 0F94h ;# 
  2436                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2437  0000                     DDRC equ 0F94h ;# 
  2438                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2439  0000                     TRISD equ 0F95h ;# 
  2440                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2441  0000                     DDRD equ 0F95h ;# 
  2442                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2443  0000                     TRISE equ 0F96h ;# 
  2444                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2445  0000                     DDRE equ 0F96h ;# 
  2446                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2447  0000                     OSCTUNE equ 0F9Bh ;# 
  2448                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2449  0000                     PIE1 equ 0F9Dh ;# 
  2450                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2451  0000                     PIR1 equ 0F9Eh ;# 
  2452                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2453  0000                     IPR1 equ 0F9Fh ;# 
  2454                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2455  0000                     PIE2 equ 0FA0h ;# 
  2456                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2457  0000                     PIR2 equ 0FA1h ;# 
  2458                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2459  0000                     IPR2 equ 0FA2h ;# 
  2460                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2461  0000                     PIE3 equ 0FA3h ;# 
  2462                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2463  0000                     PIR3 equ 0FA4h ;# 
  2464                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2465  0000                     IPR3 equ 0FA5h ;# 
  2466                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2467  0000                     EECON1 equ 0FA6h ;# 
  2468                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2469  0000                     EECON2 equ 0FA7h ;# 
  2470                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2471  0000                     RCSTA equ 0FABh ;# 
  2472                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2473  0000                     RCSTA1 equ 0FABh ;# 
  2474                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2475  0000                     TXSTA equ 0FACh ;# 
  2476                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2477  0000                     TXSTA1 equ 0FACh ;# 
  2478                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2479  0000                     TXREG equ 0FADh ;# 
  2480                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2481  0000                     TXREG1 equ 0FADh ;# 
  2482                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2483  0000                     RCREG equ 0FAEh ;# 
  2484                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2485  0000                     RCREG1 equ 0FAEh ;# 
  2486                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2487  0000                     SPBRG equ 0FAFh ;# 
  2488                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2489  0000                     SPBRG1 equ 0FAFh ;# 
  2490                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2491  0000                     SPBRGH equ 0FB0h ;# 
  2492                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2493  0000                     CMCON equ 0FB4h ;# 
  2494                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2495  0000                     CVRCON equ 0FB5h ;# 
  2496                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2497  0000                     ECCP1AS equ 0FB6h ;# 
  2498                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2499  0000                     ECCP1DEL equ 0FB7h ;# 
  2500                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2501  0000                     PWM1CON equ 0FB7h ;# 
  2502                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2503  0000                     BAUDCON equ 0FB8h ;# 
  2504                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2505  0000                     BAUDCTL equ 0FB8h ;# 
  2506                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2507  0000                     CCP2CON equ 0FBAh ;# 
  2508                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2509  0000                     CCPR2 equ 0FBBh ;# 
  2510                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2511  0000                     CCPR2L equ 0FBBh ;# 
  2512                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2513  0000                     CCPR2H equ 0FBCh ;# 
  2514                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2515  0000                     ECCP1CON equ 0FBDh ;# 
  2516                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2517  0000                     CCP1CON equ 0FBDh ;# 
  2518                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2519  0000                     CCPR1 equ 0FBEh ;# 
  2520                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2521  0000                     CCPR1L equ 0FBEh ;# 
  2522                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2523  0000                     CCPR1H equ 0FBFh ;# 
  2524                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2525  0000                     ADCON2 equ 0FC0h ;# 
  2526                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2527  0000                     ADCON1 equ 0FC1h ;# 
  2528                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2529  0000                     ADCON0 equ 0FC2h ;# 
  2530                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2531  0000                     ADRES equ 0FC3h ;# 
  2532                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2533  0000                     ADRESL equ 0FC3h ;# 
  2534                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2535  0000                     ADRESH equ 0FC4h ;# 
  2536                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2537  0000                     SSPCON2 equ 0FC5h ;# 
  2538                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2539  0000                     SSP1CON2 equ 0FC5h ;# 
  2540                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2541  0000                     SSPCON1 equ 0FC6h ;# 
  2542                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2543  0000                     SSP1CON1 equ 0FC6h ;# 
  2544                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2545  0000                     SSPSTAT equ 0FC7h ;# 
  2546                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2547  0000                     SSP1STAT equ 0FC7h ;# 
  2548                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2549  0000                     SSPADD equ 0FC8h ;# 
  2550                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2551  0000                     SSP1ADD equ 0FC8h ;# 
  2552                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2553  0000                     SSPBUF equ 0FC9h ;# 
  2554                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2555  0000                     SSP1BUF equ 0FC9h ;# 
  2556                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2557  0000                     T2CON equ 0FCAh ;# 
  2558                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2559  0000                     PR2 equ 0FCBh ;# 
  2560                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2561  0000                     MEMCON equ 0FCBh ;# 
  2562                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2563  0000                     TMR2 equ 0FCCh ;# 
  2564                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2565  0000                     T1CON equ 0FCDh ;# 
  2566                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2567  0000                     TMR1 equ 0FCEh ;# 
  2568                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2569  0000                     TMR1L equ 0FCEh ;# 
  2570                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2571  0000                     TMR1H equ 0FCFh ;# 
  2572                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2573  0000                     RCON equ 0FD0h ;# 
  2574                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2575  0000                     WDTCON equ 0FD1h ;# 
  2576                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2577  0000                     OSCCON equ 0FD3h ;# 
  2578                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2579  0000                     T0CON equ 0FD5h ;# 
  2580                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2581  0000                     TMR0 equ 0FD6h ;# 
  2582                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2583  0000                     TMR0L equ 0FD6h ;# 
  2584                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2585  0000                     TMR0H equ 0FD7h ;# 
  2586                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2587  0000                     STATUS equ 0FD8h ;# 
  2588                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2589  0000                     FSR2 equ 0FD9h ;# 
  2590                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2591  0000                     FSR2L equ 0FD9h ;# 
  2592                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2593  0000                     FSR2H equ 0FDAh ;# 
  2594                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2595  0000                     PLUSW2 equ 0FDBh ;# 
  2596                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2597  0000                     PREINC2 equ 0FDCh ;# 
  2598                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2599  0000                     POSTDEC2 equ 0FDDh ;# 
  2600                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2601  0000                     POSTINC2 equ 0FDEh ;# 
  2602                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2603  0000                     INDF2 equ 0FDFh ;# 
  2604                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2605  0000                     BSR equ 0FE0h ;# 
  2606                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2607  0000                     FSR1 equ 0FE1h ;# 
  2608                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2609  0000                     FSR1L equ 0FE1h ;# 
  2610                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2611  0000                     FSR1H equ 0FE2h ;# 
  2612                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2613  0000                     PLUSW1 equ 0FE3h ;# 
  2614                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2615  0000                     PREINC1 equ 0FE4h ;# 
  2616                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2617  0000                     POSTDEC1 equ 0FE5h ;# 
  2618                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2619  0000                     POSTINC1 equ 0FE6h ;# 
  2620                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2621  0000                     INDF1 equ 0FE7h ;# 
  2622                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2623  0000                     WREG equ 0FE8h ;# 
  2624                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2625  0000                     FSR0 equ 0FE9h ;# 
  2626                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2627  0000                     FSR0L equ 0FE9h ;# 
  2628                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2629  0000                     FSR0H equ 0FEAh ;# 
  2630                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2631  0000                     PLUSW0 equ 0FEBh ;# 
  2632                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2633  0000                     PREINC0 equ 0FECh ;# 
  2634                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2635  0000                     POSTDEC0 equ 0FEDh ;# 
  2636                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2637  0000                     POSTINC0 equ 0FEEh ;# 
  2638                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2639  0000                     INDF0 equ 0FEFh ;# 
  2640                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2641  0000                     INTCON3 equ 0FF0h ;# 
  2642                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2643  0000                     INTCON2 equ 0FF1h ;# 
  2644                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2645  0000                     INTCON equ 0FF2h ;# 
  2646                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2647  0000                     PROD equ 0FF3h ;# 
  2648                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2649  0000                     PRODL equ 0FF3h ;# 
  2650                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2651  0000                     PRODH equ 0FF4h ;# 
  2652                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2653  0000                     TABLAT equ 0FF5h ;# 
  2654                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2655  0000                     TBLPTR equ 0FF6h ;# 
  2656                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2657  0000                     TBLPTRL equ 0FF6h ;# 
  2658                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2659  0000                     TBLPTRH equ 0FF7h ;# 
  2660                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2661  0000                     TBLPTRU equ 0FF8h ;# 
  2662                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2663  0000                     PCLAT equ 0FF9h ;# 
  2664                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2665  0000                     PC equ 0FF9h ;# 
  2666                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2667  0000                     PCL equ 0FF9h ;# 
  2668                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2669  0000                     PCLATH equ 0FFAh ;# 
  2670                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2671  0000                     PCLATU equ 0FFBh ;# 
  2672                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2673  0000                     STKPTR equ 0FFCh ;# 
  2674                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2675  0000                     TOS equ 0FFDh ;# 
  2676                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2677  0000                     TOSL equ 0FFDh ;# 
  2678                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2679  0000                     TOSH equ 0FFEh ;# 
  2680                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2681  0000                     TOSU equ 0FFFh ;# 
  2682                           	FNCALL	_main,_init_uart_recv
  2683                           	FNCALL	_main,_init_i2c
  2684                           	FNCALL	_main,_init_timer1_lthread
  2685                           	FNCALL	_main,_init_queues
  2686                           	FNCALL	_main,_OpenTimer1
  2687                           	FNCALL	_main,_enable_interrupts
  2688                           	FNCALL	_main,_i2c_configure_slave
  2689                           	FNCALL	_main,_OpenUSART
  2690                           	FNCALL	_main,_block_on_To_msgqueues
  2691                           	FNCALL	_main,_ToMainHigh_recvmsg
  2692                           	FNCALL	_main,_timer0_lthread
  2693                           	FNCALL	_main,_ToMainLow_recvmsg
  2694                           	FNCALL	_main,_timer1_lthread
  2695                           	FNCALL	_main,_FromMainLow_sendmsg
  2696                           	FNCALL	_main,_uart_lthread
  2697                           	FNCALL	_init_timer1_lthread,_OpenADC
  2698                           	FNCALL	_init_timer1_lthread,_SetChanADC
  2699                           	FNCALL	_init_queues,_init_queue
  2700                           	FNCALL	_block_on_To_msgqueues,_in_main
  2701                           	FNCALL	_block_on_To_msgqueues,_check_msg
  2702                           	FNCALL	_block_on_To_msgqueues,_Delay1KTCYx
  2703                           	FNCALL	_in_main,_in_low_int
  2704                           	FNCALL	_in_main,_in_high_int
  2705                           	FNCALL	_in_low_int,_in_high_int
  2706                           	FNCALL	_ToMainHigh_recvmsg,_recv_msg
  2707                           	FNCALL	_ToMainLow_recvmsg,_recv_msg
  2708                           	FNCALL	_timer1_lthread,_ConvertADC
  2709                           	FNCALL	_FromMainLow_sendmsg,_send_msg
  2710                           	FNCALL	_send_msg,_memcpy
  2711                           	FNCALL	_recv_msg,_memcpy
  2712                           	FNROOT	_main
  2713                           	FNCALL	_InterruptHandlerHigh,_i2c_int_handler
  2714                           	FNCALL	_InterruptHandlerHigh,_timer0_int_handler
  2715                           	FNCALL	_InterruptHandlerHigh,_SleepIfOkay
  2716                           	FNCALL	_i2c_int_handler,_i2c_slave_int_handler
  2717                           	FNCALL	_i2c_int_handler,_i2c_master_int_handler
  2718                           	FNCALL	_timer0_int_handler,_WriteTimer0
  2719                           	FNCALL	_timer0_int_handler,_FromMainHigh_recvmsg
  2720                           	FNCALL	_timer0_int_handler,_ToMainHigh_sendmsg
  2721                           	FNCALL	_SleepIfOkay,i2_in_low_int
  2722                           	FNCALL	_SleepIfOkay,i2_in_high_int
  2723                           	FNCALL	_SleepIfOkay,i2_check_msg
  2724                           	FNCALL	_SleepIfOkay,_enter_sleep_mode
  2725                           	FNCALL	_FromMainHigh_recvmsg,i2_recv_msg
  2726                           	FNCALL	_i2c_slave_int_handler,_handle_start
  2727                           	FNCALL	_i2c_slave_int_handler,_FromMainLow_recvmsg
  2728                           	FNCALL	_i2c_slave_int_handler,_start_i2c_slave_reply
  2729                           	FNCALL	_i2c_slave_int_handler,_ToMainHigh_sendmsg
  2730                           	FNCALL	_FromMainLow_recvmsg,i2_recv_msg
  2731                           	FNCALL	_i2c_master_int_handler,_ToMainHigh_sendmsg
  2732                           	FNCALL	_ToMainHigh_sendmsg,i2_send_msg
  2733                           	FNCALL	i2_in_low_int,i2_in_high_int
  2734                           	FNCALL	i2_send_msg,i2_memcpy
  2735                           	FNCALL	i2_recv_msg,i2_memcpy
  2736                           	FNCALL	intlevel2,_InterruptHandlerHigh
  2737                           	global	intlevel2
  2738                           	FNROOT	intlevel2
  2739                           	FNCALL	_InterruptHandlerLow,_timer1_int_handler
  2740                           	FNCALL	_InterruptHandlerLow,_adc_int_handler
  2741                           	FNCALL	_InterruptHandlerLow,_uart_recv_int_handler
  2742                           	FNCALL	_timer1_int_handler,_ReadTimer1
  2743                           	FNCALL	_timer1_int_handler,_WriteTimer1
  2744                           	FNCALL	_timer1_int_handler,_ToMainLow_sendmsg
  2745                           	FNCALL	_adc_int_handler,_ReadADC
  2746                           	FNCALL	_adc_int_handler,_ToMainLow_sendmsg
  2747                           	FNCALL	_uart_recv_int_handler,_ReadUSART
  2748                           	FNCALL	_uart_recv_int_handler,_ToMainLow_sendmsg
  2749                           	FNCALL	_ToMainLow_sendmsg,i1_send_msg
  2750                           	FNCALL	i1_send_msg,i1_memcpy
  2751                           	FNCALL	intlevel1,_InterruptHandlerLow
  2752                           	global	intlevel1
  2753                           	FNROOT	intlevel1
  2754                           	global	_MQ_Main_Willing_to_block
  2755                           	global	_USART_Status
  2756                           	global	_adcMsgCount
  2757                           	global	_emptyMsgCount
  2758                           	global	_i2cMode
  2759                           	global	_FromMainLow_MQ
  2760                           	global	_ToMainHigh_MQ
  2761                           	global	_ToMainLow_MQ
  2762                           	global	_FromMainHigh_MQ
  2763                           	global	_PC
  2764  0000                     _PC	set	0xFF9
  2765                           	global	_PCLAT
  2766  0000                     _PCLAT	set	0xFF9
  2767                           	global	_TBLPTR
  2768  0000                     _TBLPTR	set	0xFF6
  2769                           	global	_TOS
  2770  0000                     _TOS	set	0xFFD
  2771                           	global	_ADRES
  2772  0000                     _ADRES	set	0xFC3
  2773                           	global	_CCPR1
  2774  0000                     _CCPR1	set	0xFBE
  2775                           	global	_CCPR2
  2776  0000                     _CCPR2	set	0xFBB
  2777                           	global	_FSR0
  2778  0000                     _FSR0	set	0xFE9
  2779                           	global	_FSR1
  2780  0000                     _FSR1	set	0xFE1
  2781                           	global	_FSR2
  2782  0000                     _FSR2	set	0xFD9
  2783                           	global	_PROD
  2784  0000                     _PROD	set	0xFF3
  2785                           	global	_TMR0
  2786  0000                     _TMR0	set	0xFD6
  2787                           	global	_TMR1
  2788  0000                     _TMR1	set	0xFCE
  2789                           	global	_ADCON0
  2790  0000                     _ADCON0	set	0xFC2
  2791                           	global	_ADCON0bits
  2792  0000                     _ADCON0bits	set	0xFC2
  2793                           	global	_ADCON1
  2794  0000                     _ADCON1	set	0xFC1
  2795                           	global	_ADCON1bits
  2796  0000                     _ADCON1bits	set	0xFC1
  2797                           	global	_ADCON2
  2798  0000                     _ADCON2	set	0xFC0
  2799                           	global	_ADCON2bits
  2800  0000                     _ADCON2bits	set	0xFC0
  2801                           	global	_ADRESH
  2802  0000                     _ADRESH	set	0xFC4
  2803                           	global	_ADRESL
  2804  0000                     _ADRESL	set	0xFC3
  2805                           	global	_BAUDCON
  2806  0000                     _BAUDCON	set	0xFB8
  2807                           	global	_BAUDCONbits
  2808  0000                     _BAUDCONbits	set	0xFB8
  2809                           	global	_BAUDCTL
  2810  0000                     _BAUDCTL	set	0xFB8
  2811                           	global	_BAUDCTLbits
  2812  0000                     _BAUDCTLbits	set	0xFB8
  2813                           	global	_BSR
  2814  0000                     _BSR	set	0xFE0
  2815                           	global	_CCP1CON
  2816  0000                     _CCP1CON	set	0xFBD
  2817                           	global	_CCP1CONbits
  2818  0000                     _CCP1CONbits	set	0xFBD
  2819                           	global	_CCP2CON
  2820  0000                     _CCP2CON	set	0xFBA
  2821                           	global	_CCP2CONbits
  2822  0000                     _CCP2CONbits	set	0xFBA
  2823                           	global	_CCPR1H
  2824  0000                     _CCPR1H	set	0xFBF
  2825                           	global	_CCPR1L
  2826  0000                     _CCPR1L	set	0xFBE
  2827                           	global	_CCPR2H
  2828  0000                     _CCPR2H	set	0xFBC
  2829                           	global	_CCPR2L
  2830  0000                     _CCPR2L	set	0xFBB
  2831                           	global	_CMCON
  2832  0000                     _CMCON	set	0xFB4
  2833                           	global	_CMCONbits
  2834  0000                     _CMCONbits	set	0xFB4
  2835                           	global	_CVRCON
  2836  0000                     _CVRCON	set	0xFB5
  2837                           	global	_CVRCONbits
  2838  0000                     _CVRCONbits	set	0xFB5
  2839                           	global	_DDRA
  2840  0000                     _DDRA	set	0xF92
  2841                           	global	_DDRAbits
  2842  0000                     _DDRAbits	set	0xF92
  2843                           	global	_DDRB
  2844  0000                     _DDRB	set	0xF93
  2845                           	global	_DDRBbits
  2846  0000                     _DDRBbits	set	0xF93
  2847                           	global	_DDRC
  2848  0000                     _DDRC	set	0xF94
  2849                           	global	_DDRCbits
  2850  0000                     _DDRCbits	set	0xF94
  2851                           	global	_DDRD
  2852  0000                     _DDRD	set	0xF95
  2853                           	global	_DDRDbits
  2854  0000                     _DDRDbits	set	0xF95
  2855                           	global	_DDRE
  2856  0000                     _DDRE	set	0xF96
  2857                           	global	_DDREbits
  2858  0000                     _DDREbits	set	0xF96
  2859                           	global	_ECCP1AS
  2860  0000                     _ECCP1AS	set	0xFB6
  2861                           	global	_ECCP1ASbits
  2862  0000                     _ECCP1ASbits	set	0xFB6
  2863                           	global	_ECCP1CON
  2864  0000                     _ECCP1CON	set	0xFBD
  2865                           	global	_ECCP1CONbits
  2866  0000                     _ECCP1CONbits	set	0xFBD
  2867                           	global	_ECCP1DEL
  2868  0000                     _ECCP1DEL	set	0xFB7
  2869                           	global	_ECCP1DELbits
  2870  0000                     _ECCP1DELbits	set	0xFB7
  2871                           	global	_EECON1
  2872  0000                     _EECON1	set	0xFA6
  2873                           	global	_EECON1bits
  2874  0000                     _EECON1bits	set	0xFA6
  2875                           	global	_EECON2
  2876  0000                     _EECON2	set	0xFA7
  2877                           	global	_FSR0H
  2878  0000                     _FSR0H	set	0xFEA
  2879                           	global	_FSR0L
  2880  0000                     _FSR0L	set	0xFE9
  2881                           	global	_FSR1H
  2882  0000                     _FSR1H	set	0xFE2
  2883                           	global	_FSR1L
  2884  0000                     _FSR1L	set	0xFE1
  2885                           	global	_FSR2H
  2886  0000                     _FSR2H	set	0xFDA
  2887                           	global	_FSR2L
  2888  0000                     _FSR2L	set	0xFD9
  2889                           	global	_INDF0
  2890  0000                     _INDF0	set	0xFEF
  2891                           	global	_INDF1
  2892  0000                     _INDF1	set	0xFE7
  2893                           	global	_INDF2
  2894  0000                     _INDF2	set	0xFDF
  2895                           	global	_INTCON
  2896  0000                     _INTCON	set	0xFF2
  2897                           	global	_INTCON2
  2898  0000                     _INTCON2	set	0xFF1
  2899                           	global	_INTCON2bits
  2900  0000                     _INTCON2bits	set	0xFF1
  2901                           	global	_INTCON3
  2902  0000                     _INTCON3	set	0xFF0
  2903                           	global	_INTCON3bits
  2904  0000                     _INTCON3bits	set	0xFF0
  2905                           	global	_INTCONbits
  2906  0000                     _INTCONbits	set	0xFF2
  2907                           	global	_IPR1
  2908  0000                     _IPR1	set	0xF9F
  2909                           	global	_IPR1bits
  2910  0000                     _IPR1bits	set	0xF9F
  2911                           	global	_IPR2
  2912  0000                     _IPR2	set	0xFA2
  2913                           	global	_IPR2bits
  2914  0000                     _IPR2bits	set	0xFA2
  2915                           	global	_IPR3
  2916  0000                     _IPR3	set	0xFA5
  2917                           	global	_IPR3bits
  2918  0000                     _IPR3bits	set	0xFA5
  2919                           	global	_LATA
  2920  0000                     _LATA	set	0xF89
  2921                           	global	_LATAbits
  2922  0000                     _LATAbits	set	0xF89
  2923                           	global	_LATB
  2924  0000                     _LATB	set	0xF8A
  2925                           	global	_LATBbits
  2926  0000                     _LATBbits	set	0xF8A
  2927                           	global	_LATC
  2928  0000                     _LATC	set	0xF8B
  2929                           	global	_LATCbits
  2930  0000                     _LATCbits	set	0xF8B
  2931                           	global	_LATD
  2932  0000                     _LATD	set	0xF8C
  2933                           	global	_LATDbits
  2934  0000                     _LATDbits	set	0xF8C
  2935                           	global	_LATE
  2936  0000                     _LATE	set	0xF8D
  2937                           	global	_LATEbits
  2938  0000                     _LATEbits	set	0xF8D
  2939                           	global	_MEMCON
  2940  0000                     _MEMCON	set	0xFCB
  2941                           	global	_OSCCON
  2942  0000                     _OSCCON	set	0xFD3
  2943                           	global	_OSCCONbits
  2944  0000                     _OSCCONbits	set	0xFD3
  2945                           	global	_OSCTUNE
  2946  0000                     _OSCTUNE	set	0xF9B
  2947                           	global	_OSCTUNEbits
  2948  0000                     _OSCTUNEbits	set	0xF9B
  2949                           	global	_PCL
  2950  0000                     _PCL	set	0xFF9
  2951                           	global	_PCLATH
  2952  0000                     _PCLATH	set	0xFFA
  2953                           	global	_PCLATU
  2954  0000                     _PCLATU	set	0xFFB
  2955                           	global	_PIE1
  2956  0000                     _PIE1	set	0xF9D
  2957                           	global	_PIE1bits
  2958  0000                     _PIE1bits	set	0xF9D
  2959                           	global	_PIE2
  2960  0000                     _PIE2	set	0xFA0
  2961                           	global	_PIE2bits
  2962  0000                     _PIE2bits	set	0xFA0
  2963                           	global	_PIE3
  2964  0000                     _PIE3	set	0xFA3
  2965                           	global	_PIE3bits
  2966  0000                     _PIE3bits	set	0xFA3
  2967                           	global	_PIR1
  2968  0000                     _PIR1	set	0xF9E
  2969                           	global	_PIR1bits
  2970  0000                     _PIR1bits	set	0xF9E
  2971                           	global	_PIR2
  2972  0000                     _PIR2	set	0xFA1
  2973                           	global	_PIR2bits
  2974  0000                     _PIR2bits	set	0xFA1
  2975                           	global	_PIR3
  2976  0000                     _PIR3	set	0xFA4
  2977                           	global	_PIR3bits
  2978  0000                     _PIR3bits	set	0xFA4
  2979                           	global	_PLUSW0
  2980  0000                     _PLUSW0	set	0xFEB
  2981                           	global	_PLUSW1
  2982  0000                     _PLUSW1	set	0xFE3
  2983                           	global	_PLUSW2
  2984  0000                     _PLUSW2	set	0xFDB
  2985                           	global	_PORTA
  2986  0000                     _PORTA	set	0xF80
  2987                           	global	_PORTAbits
  2988  0000                     _PORTAbits	set	0xF80
  2989                           	global	_PORTB
  2990  0000                     _PORTB	set	0xF81
  2991                           	global	_PORTBbits
  2992  0000                     _PORTBbits	set	0xF81
  2993                           	global	_PORTC
  2994  0000                     _PORTC	set	0xF82
  2995                           	global	_PORTCbits
  2996  0000                     _PORTCbits	set	0xF82
  2997                           	global	_PORTD
  2998  0000                     _PORTD	set	0xF83
  2999                           	global	_PORTDbits
  3000  0000                     _PORTDbits	set	0xF83
  3001                           	global	_PORTE
  3002  0000                     _PORTE	set	0xF84
  3003                           	global	_PORTEbits
  3004  0000                     _PORTEbits	set	0xF84
  3005                           	global	_POSTDEC0
  3006  0000                     _POSTDEC0	set	0xFED
  3007                           	global	_POSTDEC1
  3008  0000                     _POSTDEC1	set	0xFE5
  3009                           	global	_POSTDEC2
  3010  0000                     _POSTDEC2	set	0xFDD
  3011                           	global	_POSTINC0
  3012  0000                     _POSTINC0	set	0xFEE
  3013                           	global	_POSTINC1
  3014  0000                     _POSTINC1	set	0xFE6
  3015                           	global	_POSTINC2
  3016  0000                     _POSTINC2	set	0xFDE
  3017                           	global	_PR2
  3018  0000                     _PR2	set	0xFCB
  3019                           	global	_PREINC0
  3020  0000                     _PREINC0	set	0xFEC
  3021                           	global	_PREINC1
  3022  0000                     _PREINC1	set	0xFE4
  3023                           	global	_PREINC2
  3024  0000                     _PREINC2	set	0xFDC
  3025                           	global	_PRODH
  3026  0000                     _PRODH	set	0xFF4
  3027                           	global	_PRODL
  3028  0000                     _PRODL	set	0xFF3
  3029                           	global	_PWM1CON
  3030  0000                     _PWM1CON	set	0xFB7
  3031                           	global	_PWM1CONbits
  3032  0000                     _PWM1CONbits	set	0xFB7
  3033                           	global	_RCON
  3034  0000                     _RCON	set	0xFD0
  3035                           	global	_RCONbits
  3036  0000                     _RCONbits	set	0xFD0
  3037                           	global	_RCREG
  3038  0000                     _RCREG	set	0xFAE
  3039                           	global	_RCREG1
  3040  0000                     _RCREG1	set	0xFAE
  3041                           	global	_RCSTA
  3042  0000                     _RCSTA	set	0xFAB
  3043                           	global	_RCSTA1
  3044  0000                     _RCSTA1	set	0xFAB
  3045                           	global	_RCSTA1bits
  3046  0000                     _RCSTA1bits	set	0xFAB
  3047                           	global	_RCSTAbits
  3048  0000                     _RCSTAbits	set	0xFAB
  3049                           	global	_SPBRG
  3050  0000                     _SPBRG	set	0xFAF
  3051                           	global	_SPBRG1
  3052  0000                     _SPBRG1	set	0xFAF
  3053                           	global	_SPBRGH
  3054  0000                     _SPBRGH	set	0xFB0
  3055                           	global	_SSP1ADD
  3056  0000                     _SSP1ADD	set	0xFC8
  3057                           	global	_SSP1ADDbits
  3058  0000                     _SSP1ADDbits	set	0xFC8
  3059                           	global	_SSP1BUF
  3060  0000                     _SSP1BUF	set	0xFC9
  3061                           	global	_SSP1CON1
  3062  0000                     _SSP1CON1	set	0xFC6
  3063                           	global	_SSP1CON1bits
  3064  0000                     _SSP1CON1bits	set	0xFC6
  3065                           	global	_SSP1CON2
  3066  0000                     _SSP1CON2	set	0xFC5
  3067                           	global	_SSP1CON2bits
  3068  0000                     _SSP1CON2bits	set	0xFC5
  3069                           	global	_SSP1STAT
  3070  0000                     _SSP1STAT	set	0xFC7
  3071                           	global	_SSP1STATbits
  3072  0000                     _SSP1STATbits	set	0xFC7
  3073                           	global	_SSP2ADD
  3074  0000                     _SSP2ADD	set	0xF88
  3075                           	global	_SSP2ADDbits
  3076  0000                     _SSP2ADDbits	set	0xF88
  3077                           	global	_SSP2BUF
  3078  0000                     _SSP2BUF	set	0xF8E
  3079                           	global	_SSP2CON1
  3080  0000                     _SSP2CON1	set	0xF86
  3081                           	global	_SSP2CON1bits
  3082  0000                     _SSP2CON1bits	set	0xF86
  3083                           	global	_SSP2CON2
  3084  0000                     _SSP2CON2	set	0xF85
  3085                           	global	_SSP2CON2bits
  3086  0000                     _SSP2CON2bits	set	0xF85
  3087                           	global	_SSP2STAT
  3088  0000                     _SSP2STAT	set	0xF87
  3089                           	global	_SSP2STATbits
  3090  0000                     _SSP2STATbits	set	0xF87
  3091                           	global	_SSPADD
  3092  0000                     _SSPADD	set	0xFC8
  3093                           	global	_SSPADDbits
  3094  0000                     _SSPADDbits	set	0xFC8
  3095                           	global	_SSPBUF
  3096  0000                     _SSPBUF	set	0xFC9
  3097                           	global	_SSPCON1
  3098  0000                     _SSPCON1	set	0xFC6
  3099                           	global	_SSPCON1bits
  3100  0000                     _SSPCON1bits	set	0xFC6
  3101                           	global	_SSPCON2
  3102  0000                     _SSPCON2	set	0xFC5
  3103                           	global	_SSPCON2bits
  3104  0000                     _SSPCON2bits	set	0xFC5
  3105                           	global	_SSPSTAT
  3106  0000                     _SSPSTAT	set	0xFC7
  3107                           	global	_SSPSTATbits
  3108  0000                     _SSPSTATbits	set	0xFC7
  3109                           	global	_STATUS
  3110  0000                     _STATUS	set	0xFD8
  3111                           	global	_STATUSbits
  3112  0000                     _STATUSbits	set	0xFD8
  3113                           	global	_STKPTR
  3114  0000                     _STKPTR	set	0xFFC
  3115                           	global	_STKPTRbits
  3116  0000                     _STKPTRbits	set	0xFFC
  3117                           	global	_T0CON
  3118  0000                     _T0CON	set	0xFD5
  3119                           	global	_T0CONbits
  3120  0000                     _T0CONbits	set	0xFD5
  3121                           	global	_T1CON
  3122  0000                     _T1CON	set	0xFCD
  3123                           	global	_T1CONbits
  3124  0000                     _T1CONbits	set	0xFCD
  3125                           	global	_T2CON
  3126  0000                     _T2CON	set	0xFCA
  3127                           	global	_T2CONbits
  3128  0000                     _T2CONbits	set	0xFCA
  3129                           	global	_TABLAT
  3130  0000                     _TABLAT	set	0xFF5
  3131                           	global	_TBLPTRH
  3132  0000                     _TBLPTRH	set	0xFF7
  3133                           	global	_TBLPTRL
  3134  0000                     _TBLPTRL	set	0xFF6
  3135                           	global	_TBLPTRU
  3136  0000                     _TBLPTRU	set	0xFF8
  3137                           	global	_TMR0H
  3138  0000                     _TMR0H	set	0xFD7
  3139                           	global	_TMR0L
  3140  0000                     _TMR0L	set	0xFD6
  3141                           	global	_TMR1H
  3142  0000                     _TMR1H	set	0xFCF
  3143                           	global	_TMR1L
  3144  0000                     _TMR1L	set	0xFCE
  3145                           	global	_TMR2
  3146  0000                     _TMR2	set	0xFCC
  3147                           	global	_TOSH
  3148  0000                     _TOSH	set	0xFFE
  3149                           	global	_TOSL
  3150  0000                     _TOSL	set	0xFFD
  3151                           	global	_TOSU
  3152  0000                     _TOSU	set	0xFFF
  3153                           	global	_TRISA
  3154  0000                     _TRISA	set	0xF92
  3155                           	global	_TRISAbits
  3156  0000                     _TRISAbits	set	0xF92
  3157                           	global	_TRISB
  3158  0000                     _TRISB	set	0xF93
  3159                           	global	_TRISBbits
  3160  0000                     _TRISBbits	set	0xF93
  3161                           	global	_TRISC
  3162  0000                     _TRISC	set	0xF94
  3163                           	global	_TRISCbits
  3164  0000                     _TRISCbits	set	0xF94
  3165                           	global	_TRISD
  3166  0000                     _TRISD	set	0xF95
  3167                           	global	_TRISDbits
  3168  0000                     _TRISDbits	set	0xF95
  3169                           	global	_TRISE
  3170  0000                     _TRISE	set	0xF96
  3171                           	global	_TRISEbits
  3172  0000                     _TRISEbits	set	0xF96
  3173                           	global	_TXREG
  3174  0000                     _TXREG	set	0xFAD
  3175                           	global	_TXREG1
  3176  0000                     _TXREG1	set	0xFAD
  3177                           	global	_TXSTA
  3178  0000                     _TXSTA	set	0xFAC
  3179                           	global	_TXSTA1
  3180  0000                     _TXSTA1	set	0xFAC
  3181                           	global	_TXSTA1bits
  3182  0000                     _TXSTA1bits	set	0xFAC
  3183                           	global	_TXSTAbits
  3184  0000                     _TXSTAbits	set	0xFAC
  3185                           	global	_WDTCON
  3186  0000                     _WDTCON	set	0xFD1
  3187                           	global	_WDTCONbits
  3188  0000                     _WDTCONbits	set	0xFD1
  3189                           	global	_WREG
  3190  0000                     _WREG	set	0xFE8
  3191                           	global	_ABDEN
  3192  0000                     _ABDEN	set	0x7DC0
  3193                           	global	_ABDOVF
  3194  0000                     _ABDOVF	set	0x7DC7
  3195                           	global	_ACKDT
  3196  0000                     _ACKDT	set	0x7E2D
  3197                           	global	_ACKDT1
  3198  0000                     _ACKDT1	set	0x7E2D
  3199                           	global	_ACKDT2
  3200  0000                     _ACKDT2	set	0x7C2D
  3201                           	global	_ACKEN
  3202  0000                     _ACKEN	set	0x7E2C
  3203                           	global	_ACKEN1
  3204  0000                     _ACKEN1	set	0x7E2C
  3205                           	global	_ACKEN2
  3206  0000                     _ACKEN2	set	0x7C2C
  3207                           	global	_ACKSTAT
  3208  0000                     _ACKSTAT	set	0x7E2E
  3209                           	global	_ACKSTAT1
  3210  0000                     _ACKSTAT1	set	0x7E2E
  3211                           	global	_ACKSTAT2
  3212  0000                     _ACKSTAT2	set	0x7C2E
  3213                           	global	_ACQT0
  3214  0000                     _ACQT0	set	0x7E03
  3215                           	global	_ACQT1
  3216  0000                     _ACQT1	set	0x7E04
  3217                           	global	_ACQT2
  3218  0000                     _ACQT2	set	0x7E05
  3219                           	global	_ADCAL
  3220  0000                     _ADCAL	set	0x7E17
  3221                           	global	_ADCS0
  3222  0000                     _ADCS0	set	0x7E00
  3223                           	global	_ADCS1
  3224  0000                     _ADCS1	set	0x7E01
  3225                           	global	_ADCS2
  3226  0000                     _ADCS2	set	0x7E02
  3227                           	global	_ADDEN
  3228  0000                     _ADDEN	set	0x7D5B
  3229                           	global	_ADDEN1
  3230  0000                     _ADDEN1	set	0x7D5B
  3231                           	global	_ADEN
  3232  0000                     _ADEN	set	0x7D5B
  3233                           	global	_ADFM
  3234  0000                     _ADFM	set	0x7E07
  3235                           	global	_ADIE
  3236  0000                     _ADIE	set	0x7CEE
  3237                           	global	_ADIF
  3238  0000                     _ADIF	set	0x7CF6
  3239                           	global	_ADIP
  3240  0000                     _ADIP	set	0x7CFE
  3241                           	global	_ADMSK1
  3242  0000                     _ADMSK1	set	0x7E29
  3243                           	global	_ADMSK11
  3244  0000                     _ADMSK11	set	0x7E29
  3245                           	global	_ADMSK12
  3246  0000                     _ADMSK12	set	0x7C29
  3247                           	global	_ADMSK2
  3248  0000                     _ADMSK2	set	0x7E2A
  3249                           	global	_ADMSK21
  3250  0000                     _ADMSK21	set	0x7E2A
  3251                           	global	_ADMSK22
  3252  0000                     _ADMSK22	set	0x7C2A
  3253                           	global	_ADMSK3
  3254  0000                     _ADMSK3	set	0x7E2B
  3255                           	global	_ADMSK31
  3256  0000                     _ADMSK31	set	0x7E2B
  3257                           	global	_ADMSK32
  3258  0000                     _ADMSK32	set	0x7C2B
  3259                           	global	_ADMSK4
  3260  0000                     _ADMSK4	set	0x7E2C
  3261                           	global	_ADMSK41
  3262  0000                     _ADMSK41	set	0x7E2C
  3263                           	global	_ADMSK42
  3264  0000                     _ADMSK42	set	0x7C2C
  3265                           	global	_ADMSK5
  3266  0000                     _ADMSK5	set	0x7E2D
  3267                           	global	_ADMSK51
  3268  0000                     _ADMSK51	set	0x7E2D
  3269                           	global	_ADMSK52
  3270  0000                     _ADMSK52	set	0x7C2D
  3271                           	global	_ADON
  3272  0000                     _ADON	set	0x7E10
  3273                           	global	_AN0
  3274  0000                     _AN0	set	0x7C00
  3275                           	global	_AN1
  3276  0000                     _AN1	set	0x7C01
  3277                           	global	_AN10
  3278  0000                     _AN10	set	0x7C09
  3279                           	global	_AN11
  3280  0000                     _AN11	set	0x7C0C
  3281                           	global	_AN12
  3282  0000                     _AN12	set	0x7C08
  3283                           	global	_AN2
  3284  0000                     _AN2	set	0x7C02
  3285                           	global	_AN3
  3286  0000                     _AN3	set	0x7C03
  3287                           	global	_AN4
  3288  0000                     _AN4	set	0x7C05
  3289                           	global	_AN5
  3290  0000                     _AN5	set	0x7C20
  3291                           	global	_AN6
  3292  0000                     _AN6	set	0x7C21
  3293                           	global	_AN7
  3294  0000                     _AN7	set	0x7C22
  3295                           	global	_AN8
  3296  0000                     _AN8	set	0x7C0A
  3297                           	global	_AN9
  3298  0000                     _AN9	set	0x7C0B
  3299                           	global	_BCL1IE
  3300  0000                     _BCL1IE	set	0x7D03
  3301                           	global	_BCL1IF
  3302  0000                     _BCL1IF	set	0x7D0B
  3303                           	global	_BCL1IP
  3304  0000                     _BCL1IP	set	0x7D13
  3305                           	global	_BCL2IE
  3306  0000                     _BCL2IE	set	0x7D1E
  3307                           	global	_BCL2IF
  3308  0000                     _BCL2IF	set	0x7D26
  3309                           	global	_BCL2IP
  3310  0000                     _BCL2IP	set	0x7D2E
  3311                           	global	_BCLIE
  3312  0000                     _BCLIE	set	0x7D03
  3313                           	global	_BCLIF
  3314  0000                     _BCLIF	set	0x7D0B
  3315                           	global	_BCLIP
  3316  0000                     _BCLIP	set	0x7D13
  3317                           	global	_BF
  3318  0000                     _BF	set	0x7E38
  3319                           	global	_BF1
  3320  0000                     _BF1	set	0x7E38
  3321                           	global	_BF2
  3322  0000                     _BF2	set	0x7C38
  3323                           	global	_BOR
  3324  0000                     _BOR	set	0x7E80
  3325                           	global	_BRG16
  3326  0000                     _BRG16	set	0x7DC3
  3327                           	global	_BRGH
  3328  0000                     _BRGH	set	0x7D62
  3329                           	global	_BRGH1
  3330  0000                     _BRGH1	set	0x7D62
  3331                           	global	_C1INV
  3332  0000                     _C1INV	set	0x7DA4
  3333                           	global	_C1OUT
  3334  0000                     _C1OUT	set	0x7DA6
  3335                           	global	_C2INV
  3336  0000                     _C2INV	set	0x7DA5
  3337                           	global	_C2OUT
  3338  0000                     _C2OUT	set	0x7DA7
  3339                           	global	_CARRY
  3340  0000                     _CARRY	set	0x7EC0
  3341                           	global	_CCP1
  3342  0000                     _CCP1	set	0x7C12
  3343                           	global	_CCP10
  3344  0000                     _CCP10	set	0x7C22
  3345                           	global	_CCP1IE
  3346  0000                     _CCP1IE	set	0x7CEA
  3347                           	global	_CCP1IF
  3348  0000                     _CCP1IF	set	0x7CF2
  3349                           	global	_CCP1IP
  3350  0000                     _CCP1IP	set	0x7CFA
  3351                           	global	_CCP1M0
  3352  0000                     _CCP1M0	set	0x7DE8
  3353                           	global	_CCP1M1
  3354  0000                     _CCP1M1	set	0x7DE9
  3355                           	global	_CCP1M2
  3356  0000                     _CCP1M2	set	0x7DEA
  3357                           	global	_CCP1M3
  3358  0000                     _CCP1M3	set	0x7DEB
  3359                           	global	_CCP1X
  3360  0000                     _CCP1X	set	0x7DED
  3361                           	global	_CCP1Y
  3362  0000                     _CCP1Y	set	0x7DEC
  3363                           	global	_CCP2E
  3364  0000                     _CCP2E	set	0x7C27
  3365                           	global	_CCP2IE
  3366  0000                     _CCP2IE	set	0x7D00
  3367                           	global	_CCP2IF
  3368  0000                     _CCP2IF	set	0x7D08
  3369                           	global	_CCP2IP
  3370  0000                     _CCP2IP	set	0x7D10
  3371                           	global	_CCP2M0
  3372  0000                     _CCP2M0	set	0x7DD0
  3373                           	global	_CCP2M1
  3374  0000                     _CCP2M1	set	0x7DD1
  3375                           	global	_CCP2M2
  3376  0000                     _CCP2M2	set	0x7DD2
  3377                           	global	_CCP2M3
  3378  0000                     _CCP2M3	set	0x7DD3
  3379                           	global	_CCP2X
  3380  0000                     _CCP2X	set	0x7DD5
  3381                           	global	_CCP2Y
  3382  0000                     _CCP2Y	set	0x7DD4
  3383                           	global	_CCP2_PA2
  3384  0000                     _CCP2_PA2	set	0x7C0B
  3385                           	global	_CCP6E
  3386  0000                     _CCP6E	set	0x7C26
  3387                           	global	_CCP7E
  3388  0000                     _CCP7E	set	0x7C25
  3389                           	global	_CCP8E
  3390  0000                     _CCP8E	set	0x7C24
  3391                           	global	_CCP9E
  3392  0000                     _CCP9E	set	0x7C23
  3393                           	global	_CHS0
  3394  0000                     _CHS0	set	0x7E12
  3395                           	global	_CHS1
  3396  0000                     _CHS1	set	0x7E13
  3397                           	global	_CHS2
  3398  0000                     _CHS2	set	0x7E14
  3399                           	global	_CHS3
  3400  0000                     _CHS3	set	0x7E15
  3401                           	global	_CHSN3
  3402  0000                     _CHSN3	set	0x7E0B
  3403                           	global	_CIS
  3404  0000                     _CIS	set	0x7DA3
  3405                           	global	_CK
  3406  0000                     _CK	set	0x7C16
  3407                           	global	_CKE
  3408  0000                     _CKE	set	0x7E3E
  3409                           	global	_CKE1
  3410  0000                     _CKE1	set	0x7E3E
  3411                           	global	_CKE2
  3412  0000                     _CKE2	set	0x7C3E
  3413                           	global	_CKP
  3414  0000                     _CKP	set	0x7E34
  3415                           	global	_CKP1
  3416  0000                     _CKP1	set	0x7E34
  3417                           	global	_CKP2
  3418  0000                     _CKP2	set	0x7C34
  3419                           	global	_CM0
  3420  0000                     _CM0	set	0x7DA0
  3421                           	global	_CM1
  3422  0000                     _CM1	set	0x7DA1
  3423                           	global	_CM2
  3424  0000                     _CM2	set	0x7DA2
  3425                           	global	_CMEN0
  3426  0000                     _CMEN0	set	0x7DA0
  3427                           	global	_CMEN1
  3428  0000                     _CMEN1	set	0x7DA1
  3429                           	global	_CMEN2
  3430  0000                     _CMEN2	set	0x7DA2
  3431                           	global	_CMIE
  3432  0000                     _CMIE	set	0x7D06
  3433                           	global	_CMIF
  3434  0000                     _CMIF	set	0x7D0E
  3435                           	global	_CMIP
  3436  0000                     _CMIP	set	0x7D16
  3437                           	global	_CREN
  3438  0000                     _CREN	set	0x7D5C
  3439                           	global	_CREN1
  3440  0000                     _CREN1	set	0x7D5C
  3441                           	global	_CS
  3442  0000                     _CS	set	0x7C22
  3443                           	global	_CSRC
  3444  0000                     _CSRC	set	0x7D67
  3445                           	global	_CSRC1
  3446  0000                     _CSRC1	set	0x7D67
  3447                           	global	_CVR0
  3448  0000                     _CVR0	set	0x7DA8
  3449                           	global	_CVR1
  3450  0000                     _CVR1	set	0x7DA9
  3451                           	global	_CVR2
  3452  0000                     _CVR2	set	0x7DAA
  3453                           	global	_CVR3
  3454  0000                     _CVR3	set	0x7DAB
  3455                           	global	_CVREF
  3456  0000                     _CVREF	set	0x7C02
  3457                           	global	_CVREN
  3458  0000                     _CVREN	set	0x7DAF
  3459                           	global	_CVROE
  3460  0000                     _CVROE	set	0x7DAE
  3461                           	global	_CVROEN
  3462  0000                     _CVROEN	set	0x7DAE
  3463                           	global	_CVRR
  3464  0000                     _CVRR	set	0x7DAD
  3465                           	global	_CVRSS
  3466  0000                     _CVRSS	set	0x7DAC
  3467                           	global	_DA
  3468  0000                     _DA	set	0x7E3D
  3469                           	global	_DA1
  3470  0000                     _DA1	set	0x7E3D
  3471                           	global	_DA2
  3472  0000                     _DA2	set	0x7C3D
  3473                           	global	_DATA_ADDRESS2
  3474  0000                     _DATA_ADDRESS2	set	0x7C3D
  3475                           	global	_DC
  3476  0000                     _DC	set	0x7EC1
  3477                           	global	_DC1B0
  3478  0000                     _DC1B0	set	0x7DEC
  3479                           	global	_DC1B1
  3480  0000                     _DC1B1	set	0x7DED
  3481                           	global	_DC2B0
  3482  0000                     _DC2B0	set	0x7DD4
  3483                           	global	_DC2B1
  3484  0000                     _DC2B1	set	0x7DD5
  3485                           	global	_DONE
  3486  0000                     _DONE	set	0x7E11
  3487                           	global	_DT
  3488  0000                     _DT	set	0x7C17
  3489                           	global	_D_A2
  3490  0000                     _D_A2	set	0x7C3D
  3491                           	global	_D_nA2
  3492  0000                     _D_nA2	set	0x7C3D
  3493                           	global	_ECCPAS0
  3494  0000                     _ECCPAS0	set	0x7DB4
  3495                           	global	_ECCPAS1
  3496  0000                     _ECCPAS1	set	0x7DB5
  3497                           	global	_ECCPAS2
  3498  0000                     _ECCPAS2	set	0x7DB6
  3499                           	global	_ECCPASE
  3500  0000                     _ECCPASE	set	0x7DB7
  3501                           	global	_FERR
  3502  0000                     _FERR	set	0x7D5A
  3503                           	global	_FERR1
  3504  0000                     _FERR1	set	0x7D5A
  3505                           	global	_FLT0
  3506  0000                     _FLT0	set	0x7C08
  3507                           	global	_FREE
  3508  0000                     _FREE	set	0x7D34
  3509                           	global	_GCEN
  3510  0000                     _GCEN	set	0x7E2F
  3511                           	global	_GCEN1
  3512  0000                     _GCEN1	set	0x7E2F
  3513                           	global	_GCEN2
  3514  0000                     _GCEN2	set	0x7C2F
  3515                           	global	_GIE
  3516  0000                     _GIE	set	0x7F97
  3517                           	global	_GIEH
  3518  0000                     _GIEH	set	0x7F97
  3519                           	global	_GIEL
  3520  0000                     _GIEL	set	0x7F96
  3521                           	global	_GIE_GIEH
  3522  0000                     _GIE_GIEH	set	0x7F97
  3523                           	global	_GO
  3524  0000                     _GO	set	0x7E11
  3525                           	global	_GODONE
  3526  0000                     _GODONE	set	0x7E11
  3527                           	global	_GO_DONE
  3528  0000                     _GO_DONE	set	0x7E11
  3529                           	global	_GO_NOT_DONE
  3530  0000                     _GO_NOT_DONE	set	0x7E11
  3531                           	global	_GO_nDONE
  3532  0000                     _GO_nDONE	set	0x7E11
  3533                           	global	_I2C_DAT2
  3534  0000                     _I2C_DAT2	set	0x7C3D
  3535                           	global	_I2C_READ2
  3536  0000                     _I2C_READ2	set	0x7C3A
  3537                           	global	_I2C_START2
  3538  0000                     _I2C_START2	set	0x7C3B
  3539                           	global	_I2C_STOP2
  3540  0000                     _I2C_STOP2	set	0x7C3C
  3541                           	global	_IBF
  3542  0000                     _IBF	set	0x7CB7
  3543                           	global	_IBOV
  3544  0000                     _IBOV	set	0x7CB5
  3545                           	global	_IDLEN
  3546  0000                     _IDLEN	set	0x7E9F
  3547                           	global	_INT0
  3548  0000                     _INT0	set	0x7C08
  3549                           	global	_INT0E
  3550  0000                     _INT0E	set	0x7F94
  3551                           	global	_INT0F
  3552  0000                     _INT0F	set	0x7F91
  3553                           	global	_INT0IE
  3554  0000                     _INT0IE	set	0x7F94
  3555                           	global	_INT0IF
  3556  0000                     _INT0IF	set	0x7F91
  3557                           	global	_INT1
  3558  0000                     _INT1	set	0x7C09
  3559                           	global	_INT1E
  3560  0000                     _INT1E	set	0x7F83
  3561                           	global	_INT1F
  3562  0000                     _INT1F	set	0x7F80
  3563                           	global	_INT1IE
  3564  0000                     _INT1IE	set	0x7F83
  3565                           	global	_INT1IF
  3566  0000                     _INT1IF	set	0x7F80
  3567                           	global	_INT1IP
  3568  0000                     _INT1IP	set	0x7F86
  3569                           	global	_INT1P
  3570  0000                     _INT1P	set	0x7F86
  3571                           	global	_INT2
  3572  0000                     _INT2	set	0x7C0A
  3573                           	global	_INT2E
  3574  0000                     _INT2E	set	0x7F84
  3575                           	global	_INT2F
  3576  0000                     _INT2F	set	0x7F81
  3577                           	global	_INT2IE
  3578  0000                     _INT2IE	set	0x7F84
  3579                           	global	_INT2IF
  3580  0000                     _INT2IF	set	0x7F81
  3581                           	global	_INT2IP
  3582  0000                     _INT2IP	set	0x7F87
  3583                           	global	_INT2P
  3584  0000                     _INT2P	set	0x7F87
  3585                           	global	_INTEDG0
  3586  0000                     _INTEDG0	set	0x7F8E
  3587                           	global	_INTEDG1
  3588  0000                     _INTEDG1	set	0x7F8D
  3589                           	global	_INTEDG2
  3590  0000                     _INTEDG2	set	0x7F8C
  3591                           	global	_IPEN
  3592  0000                     _IPEN	set	0x7E87
  3593                           	global	_KBI0
  3594  0000                     _KBI0	set	0x7C0C
  3595                           	global	_KBI1
  3596  0000                     _KBI1	set	0x7C0D
  3597                           	global	_KBI2
  3598  0000                     _KBI2	set	0x7C0E
  3599                           	global	_KBI3
  3600  0000                     _KBI3	set	0x7C0F
  3601                           	global	_LA0
  3602  0000                     _LA0	set	0x7C48
  3603                           	global	_LA1
  3604  0000                     _LA1	set	0x7C49
  3605                           	global	_LA2
  3606  0000                     _LA2	set	0x7C4A
  3607                           	global	_LA3
  3608  0000                     _LA3	set	0x7C4B
  3609                           	global	_LA4
  3610  0000                     _LA4	set	0x7C4C
  3611                           	global	_LA5
  3612  0000                     _LA5	set	0x7C4D
  3613                           	global	_LA6
  3614  0000                     _LA6	set	0x7C4E
  3615                           	global	_LA7
  3616  0000                     _LA7	set	0x7C4F
  3617                           	global	_LATA0
  3618  0000                     _LATA0	set	0x7C48
  3619                           	global	_LATA1
  3620  0000                     _LATA1	set	0x7C49
  3621                           	global	_LATA2
  3622  0000                     _LATA2	set	0x7C4A
  3623                           	global	_LATA3
  3624  0000                     _LATA3	set	0x7C4B
  3625                           	global	_LATA5
  3626  0000                     _LATA5	set	0x7C4D
  3627                           	global	_LATA7
  3628  0000                     _LATA7	set	0x7C4F
  3629                           	global	_LATB0
  3630  0000                     _LATB0	set	0x7C50
  3631                           	global	_LATB1
  3632  0000                     _LATB1	set	0x7C51
  3633                           	global	_LATB2
  3634  0000                     _LATB2	set	0x7C52
  3635                           	global	_LATB3
  3636  0000                     _LATB3	set	0x7C53
  3637                           	global	_LATB4
  3638  0000                     _LATB4	set	0x7C54
  3639                           	global	_LATB5
  3640  0000                     _LATB5	set	0x7C55
  3641                           	global	_LATB6
  3642  0000                     _LATB6	set	0x7C56
  3643                           	global	_LATB7
  3644  0000                     _LATB7	set	0x7C57
  3645                           	global	_LATC0
  3646  0000                     _LATC0	set	0x7C58
  3647                           	global	_LATC1
  3648  0000                     _LATC1	set	0x7C59
  3649                           	global	_LATC2
  3650  0000                     _LATC2	set	0x7C5A
  3651                           	global	_LATC3
  3652  0000                     _LATC3	set	0x7C5B
  3653                           	global	_LATC4
  3654  0000                     _LATC4	set	0x7C5C
  3655                           	global	_LATC5
  3656  0000                     _LATC5	set	0x7C5D
  3657                           	global	_LATC6
  3658  0000                     _LATC6	set	0x7C5E
  3659                           	global	_LATC7
  3660  0000                     _LATC7	set	0x7C5F
  3661                           	global	_LATD0
  3662  0000                     _LATD0	set	0x7C60
  3663                           	global	_LATD1
  3664  0000                     _LATD1	set	0x7C61
  3665                           	global	_LATD2
  3666  0000                     _LATD2	set	0x7C62
  3667                           	global	_LATD3
  3668  0000                     _LATD3	set	0x7C63
  3669                           	global	_LATD4
  3670  0000                     _LATD4	set	0x7C64
  3671                           	global	_LATD5
  3672  0000                     _LATD5	set	0x7C65
  3673                           	global	_LATD6
  3674  0000                     _LATD6	set	0x7C66
  3675                           	global	_LATD7
  3676  0000                     _LATD7	set	0x7C67
  3677                           	global	_LATE0
  3678  0000                     _LATE0	set	0x7C68
  3679                           	global	_LATE1
  3680  0000                     _LATE1	set	0x7C69
  3681                           	global	_LATE2
  3682  0000                     _LATE2	set	0x7C6A
  3683                           	global	_LB0
  3684  0000                     _LB0	set	0x7C50
  3685                           	global	_LB1
  3686  0000                     _LB1	set	0x7C51
  3687                           	global	_LB2
  3688  0000                     _LB2	set	0x7C52
  3689                           	global	_LB3
  3690  0000                     _LB3	set	0x7C53
  3691                           	global	_LB4
  3692  0000                     _LB4	set	0x7C54
  3693                           	global	_LB5
  3694  0000                     _LB5	set	0x7C55
  3695                           	global	_LB6
  3696  0000                     _LB6	set	0x7C56
  3697                           	global	_LB7
  3698  0000                     _LB7	set	0x7C57
  3699                           	global	_LC0
  3700  0000                     _LC0	set	0x7C58
  3701                           	global	_LC1
  3702  0000                     _LC1	set	0x7C59
  3703                           	global	_LC2
  3704  0000                     _LC2	set	0x7C5A
  3705                           	global	_LC3
  3706  0000                     _LC3	set	0x7C5B
  3707                           	global	_LC4
  3708  0000                     _LC4	set	0x7C5C
  3709                           	global	_LC5
  3710  0000                     _LC5	set	0x7C5D
  3711                           	global	_LC6
  3712  0000                     _LC6	set	0x7C5E
  3713                           	global	_LC7
  3714  0000                     _LC7	set	0x7C5F
  3715                           	global	_LD0
  3716  0000                     _LD0	set	0x7C60
  3717                           	global	_LD1
  3718  0000                     _LD1	set	0x7C61
  3719                           	global	_LD2
  3720  0000                     _LD2	set	0x7C62
  3721                           	global	_LD3
  3722  0000                     _LD3	set	0x7C63
  3723                           	global	_LD4
  3724  0000                     _LD4	set	0x7C64
  3725                           	global	_LD5
  3726  0000                     _LD5	set	0x7C65
  3727                           	global	_LD6
  3728  0000                     _LD6	set	0x7C66
  3729                           	global	_LD7
  3730  0000                     _LD7	set	0x7C67
  3731                           	global	_LE0
  3732  0000                     _LE0	set	0x7C68
  3733                           	global	_LE1
  3734  0000                     _LE1	set	0x7C69
  3735                           	global	_LE2
  3736  0000                     _LE2	set	0x7C6A
  3737                           	global	_LE3
  3738  0000                     _LE3	set	0x7C6B
  3739                           	global	_LE4
  3740  0000                     _LE4	set	0x7C6C
  3741                           	global	_LE5
  3742  0000                     _LE5	set	0x7C6D
  3743                           	global	_LE6
  3744  0000                     _LE6	set	0x7C6E
  3745                           	global	_LE7
  3746  0000                     _LE7	set	0x7C6F
  3747                           	global	_LVDIN
  3748  0000                     _LVDIN	set	0x7C05
  3749                           	global	_MSK0
  3750  0000                     _MSK0	set	0x7E40
  3751                           	global	_MSK01
  3752  0000                     _MSK01	set	0x7E40
  3753                           	global	_MSK02
  3754  0000                     _MSK02	set	0x7C40
  3755                           	global	_MSK1
  3756  0000                     _MSK1	set	0x7E41
  3757                           	global	_MSK11
  3758  0000                     _MSK11	set	0x7E41
  3759                           	global	_MSK12
  3760  0000                     _MSK12	set	0x7C41
  3761                           	global	_MSK2
  3762  0000                     _MSK2	set	0x7E42
  3763                           	global	_MSK21
  3764  0000                     _MSK21	set	0x7E42
  3765                           	global	_MSK22
  3766  0000                     _MSK22	set	0x7C42
  3767                           	global	_MSK3
  3768  0000                     _MSK3	set	0x7E43
  3769                           	global	_MSK31
  3770  0000                     _MSK31	set	0x7E43
  3771                           	global	_MSK32
  3772  0000                     _MSK32	set	0x7C43
  3773                           	global	_MSK4
  3774  0000                     _MSK4	set	0x7E44
  3775                           	global	_MSK41
  3776  0000                     _MSK41	set	0x7E44
  3777                           	global	_MSK42
  3778  0000                     _MSK42	set	0x7C44
  3779                           	global	_MSK5
  3780  0000                     _MSK5	set	0x7E45
  3781                           	global	_MSK51
  3782  0000                     _MSK51	set	0x7E45
  3783                           	global	_MSK52
  3784  0000                     _MSK52	set	0x7C45
  3785                           	global	_MSK6
  3786  0000                     _MSK6	set	0x7E46
  3787                           	global	_MSK61
  3788  0000                     _MSK61	set	0x7E46
  3789                           	global	_MSK62
  3790  0000                     _MSK62	set	0x7C46
  3791                           	global	_MSK7
  3792  0000                     _MSK7	set	0x7E47
  3793                           	global	_MSK71
  3794  0000                     _MSK71	set	0x7E47
  3795                           	global	_MSK72
  3796  0000                     _MSK72	set	0x7C47
  3797                           	global	_NEGATIVE
  3798  0000                     _NEGATIVE	set	0x7EC4
  3799                           	global	_NOT_A
  3800  0000                     _NOT_A	set	0x7E3D
  3801                           	global	_NOT_BOR
  3802  0000                     _NOT_BOR	set	0x7E80
  3803                           	global	_NOT_CS
  3804  0000                     _NOT_CS	set	0x7C22
  3805                           	global	_NOT_DONE
  3806  0000                     _NOT_DONE	set	0x7E11
  3807                           	global	_NOT_PD
  3808  0000                     _NOT_PD	set	0x7E82
  3809                           	global	_NOT_POR
  3810  0000                     _NOT_POR	set	0x7E81
  3811                           	global	_NOT_RBPU
  3812  0000                     _NOT_RBPU	set	0x7F8F
  3813                           	global	_NOT_RC8
  3814  0000                     _NOT_RC8	set	0x7D5E
  3815                           	global	_NOT_RD
  3816  0000                     _NOT_RD	set	0x7C20
  3817                           	global	_NOT_RI
  3818  0000                     _NOT_RI	set	0x7E84
  3819                           	global	_NOT_SS1
  3820  0000                     _NOT_SS1	set	0x7C05
  3821                           	global	_NOT_SS2
  3822  0000                     _NOT_SS2	set	0x7C1B
  3823                           	global	_NOT_T1SYNC
  3824  0000                     _NOT_T1SYNC	set	0x7E6A
  3825                           	global	_NOT_TO
  3826  0000                     _NOT_TO	set	0x7E83
  3827                           	global	_NOT_TX8
  3828  0000                     _NOT_TX8	set	0x7D66
  3829                           	global	_NOT_W
  3830  0000                     _NOT_W	set	0x7E3A
  3831                           	global	_NOT_WR
  3832  0000                     _NOT_WR	set	0x7C21
  3833                           	global	_OBF
  3834  0000                     _OBF	set	0x7CB6
  3835                           	global	_OERR
  3836  0000                     _OERR	set	0x7D59
  3837                           	global	_OERR1
  3838  0000                     _OERR1	set	0x7D59
  3839                           	global	_OSCFIE
  3840  0000                     _OSCFIE	set	0x7D07
  3841                           	global	_OSCFIF
  3842  0000                     _OSCFIF	set	0x7D0F
  3843                           	global	_OSCFIP
  3844  0000                     _OSCFIP	set	0x7D17
  3845                           	global	_OSTS
  3846  0000                     _OSTS	set	0x7E9B
  3847                           	global	_OV
  3848  0000                     _OV	set	0x7EC3
  3849                           	global	_OVERFLOW
  3850  0000                     _OVERFLOW	set	0x7EC3
  3851                           	global	_P1A
  3852  0000                     _P1A	set	0x7C12
  3853                           	global	_P1B
  3854  0000                     _P1B	set	0x7C1D
  3855                           	global	_P1C
  3856  0000                     _P1C	set	0x7C1E
  3857                           	global	_P1D
  3858  0000                     _P1D	set	0x7C1F
  3859                           	global	_P1M0
  3860  0000                     _P1M0	set	0x7DEE
  3861                           	global	_P1M1
  3862  0000                     _P1M1	set	0x7DEF
  3863                           	global	_P2
  3864  0000                     _P2	set	0x7C3C
  3865                           	global	_PA1
  3866  0000                     _PA1	set	0x7C12
  3867                           	global	_PA2
  3868  0000                     _PA2	set	0x7C11
  3869                           	global	_PA2E
  3870  0000                     _PA2E	set	0x7C27
  3871                           	global	_PB1E
  3872  0000                     _PB1E	set	0x7C26
  3873                           	global	_PB2
  3874  0000                     _PB2	set	0x7C22
  3875                           	global	_PB3E
  3876  0000                     _PB3E	set	0x7C24
  3877                           	global	_PC1E
  3878  0000                     _PC1E	set	0x7C25
  3879                           	global	_PC2
  3880  0000                     _PC2	set	0x7C21
  3881                           	global	_PC3E
  3882  0000                     _PC3E	set	0x7C23
  3883                           	global	_PCFG0
  3884  0000                     _PCFG0	set	0x7E08
  3885                           	global	_PCFG1
  3886  0000                     _PCFG1	set	0x7E09
  3887                           	global	_PCFG2
  3888  0000                     _PCFG2	set	0x7E0A
  3889                           	global	_PCFG3
  3890  0000                     _PCFG3	set	0x7E0B
  3891                           	global	_PD
  3892  0000                     _PD	set	0x7E82
  3893                           	global	_PD2
  3894  0000                     _PD2	set	0x7C20
  3895                           	global	_PDC0
  3896  0000                     _PDC0	set	0x7DB8
  3897                           	global	_PDC1
  3898  0000                     _PDC1	set	0x7DB9
  3899                           	global	_PDC2
  3900  0000                     _PDC2	set	0x7DBA
  3901                           	global	_PDC3
  3902  0000                     _PDC3	set	0x7DBB
  3903                           	global	_PDC4
  3904  0000                     _PDC4	set	0x7DBC
  3905                           	global	_PDC5
  3906  0000                     _PDC5	set	0x7DBD
  3907                           	global	_PDC6
  3908  0000                     _PDC6	set	0x7DBE
  3909                           	global	_PEIE
  3910  0000                     _PEIE	set	0x7F96
  3911                           	global	_PEIE_GIEL
  3912  0000                     _PEIE_GIEL	set	0x7F96
  3913                           	global	_PEN
  3914  0000                     _PEN	set	0x7E2A
  3915                           	global	_PEN1
  3916  0000                     _PEN1	set	0x7E2A
  3917                           	global	_PEN2
  3918  0000                     _PEN2	set	0x7C2A
  3919                           	global	_PGC
  3920  0000                     _PGC	set	0x7C0E
  3921                           	global	_PGD
  3922  0000                     _PGD	set	0x7C0F
  3923                           	global	_PLLEN
  3924  0000                     _PLLEN	set	0x7CDE
  3925                           	global	_POR
  3926  0000                     _POR	set	0x7E81
  3927                           	global	_PRSEN
  3928  0000                     _PRSEN	set	0x7DBF
  3929                           	global	_PSA
  3930  0000                     _PSA	set	0x7EAB
  3931                           	global	_PSP0
  3932  0000                     _PSP0	set	0x7C18
  3933                           	global	_PSP1
  3934  0000                     _PSP1	set	0x7C19
  3935                           	global	_PSP2
  3936  0000                     _PSP2	set	0x7C1A
  3937                           	global	_PSP3
  3938  0000                     _PSP3	set	0x7C1B
  3939                           	global	_PSP4
  3940  0000                     _PSP4	set	0x7C1C
  3941                           	global	_PSP5
  3942  0000                     _PSP5	set	0x7C1D
  3943                           	global	_PSP6
  3944  0000                     _PSP6	set	0x7C1E
  3945                           	global	_PSP7
  3946  0000                     _PSP7	set	0x7C1F
  3947                           	global	_PSPIE
  3948  0000                     _PSPIE	set	0x7CEF
  3949                           	global	_PSPIF
  3950  0000                     _PSPIF	set	0x7CF7
  3951                           	global	_PSPIP
  3952  0000                     _PSPIP	set	0x7CFF
  3953                           	global	_PSPMODE
  3954  0000                     _PSPMODE	set	0x7CB4
  3955                           	global	_PSSAC0
  3956  0000                     _PSSAC0	set	0x7DB2
  3957                           	global	_PSSAC1
  3958  0000                     _PSSAC1	set	0x7DB3
  3959                           	global	_PSSBD0
  3960  0000                     _PSSBD0	set	0x7DB0
  3961                           	global	_PSSBD1
  3962  0000                     _PSSBD1	set	0x7DB1
  3963                           	global	_RA0
  3964  0000                     _RA0	set	0x7C00
  3965                           	global	_RA1
  3966  0000                     _RA1	set	0x7C01
  3967                           	global	_RA2
  3968  0000                     _RA2	set	0x7C02
  3969                           	global	_RA3
  3970  0000                     _RA3	set	0x7C03
  3971                           	global	_RA4
  3972  0000                     _RA4	set	0x7C04
  3973                           	global	_RA5
  3974  0000                     _RA5	set	0x7C05
  3975                           	global	_RA6
  3976  0000                     _RA6	set	0x7C06
  3977                           	global	_RA7
  3978  0000                     _RA7	set	0x7C07
  3979                           	global	_RB0
  3980  0000                     _RB0	set	0x7C08
  3981                           	global	_RB1
  3982  0000                     _RB1	set	0x7C09
  3983                           	global	_RB2
  3984  0000                     _RB2	set	0x7C0A
  3985                           	global	_RB3
  3986  0000                     _RB3	set	0x7C0B
  3987                           	global	_RB4
  3988  0000                     _RB4	set	0x7C0C
  3989                           	global	_RB5
  3990  0000                     _RB5	set	0x7C0D
  3991                           	global	_RB6
  3992  0000                     _RB6	set	0x7C0E
  3993                           	global	_RB7
  3994  0000                     _RB7	set	0x7C0F
  3995                           	global	_RBIE
  3996  0000                     _RBIE	set	0x7F93
  3997                           	global	_RBIF
  3998  0000                     _RBIF	set	0x7F90
  3999                           	global	_RBIP
  4000  0000                     _RBIP	set	0x7F88
  4001                           	global	_RBPU
  4002  0000                     _RBPU	set	0x7F8F
  4003                           	global	_RC0
  4004  0000                     _RC0	set	0x7C10
  4005                           	global	_RC1
  4006  0000                     _RC1	set	0x7C11
  4007                           	global	_RC1IE
  4008  0000                     _RC1IE	set	0x7CED
  4009                           	global	_RC1IF
  4010  0000                     _RC1IF	set	0x7CF5
  4011                           	global	_RC1IP
  4012  0000                     _RC1IP	set	0x7CFD
  4013                           	global	_RC2
  4014  0000                     _RC2	set	0x7C12
  4015                           	global	_RC3
  4016  0000                     _RC3	set	0x7C13
  4017                           	global	_RC4
  4018  0000                     _RC4	set	0x7C14
  4019                           	global	_RC5
  4020  0000                     _RC5	set	0x7C15
  4021                           	global	_RC6
  4022  0000                     _RC6	set	0x7C16
  4023                           	global	_RC7
  4024  0000                     _RC7	set	0x7C17
  4025                           	global	_RC8_9
  4026  0000                     _RC8_9	set	0x7D5E
  4027                           	global	_RC9
  4028  0000                     _RC9	set	0x7D5E
  4029                           	global	_RCD8
  4030  0000                     _RCD8	set	0x7D58
  4031                           	global	_RCEN
  4032  0000                     _RCEN	set	0x7E2B
  4033                           	global	_RCEN1
  4034  0000                     _RCEN1	set	0x7E2B
  4035                           	global	_RCEN2
  4036  0000                     _RCEN2	set	0x7C2B
  4037                           	global	_RCIDL
  4038  0000                     _RCIDL	set	0x7DC6
  4039                           	global	_RCIE
  4040  0000                     _RCIE	set	0x7CED
  4041                           	global	_RCIF
  4042  0000                     _RCIF	set	0x7CF5
  4043                           	global	_RCIP
  4044  0000                     _RCIP	set	0x7CFD
  4045                           	global	_RCMT
  4046  0000                     _RCMT	set	0x7DC6
  4047                           	global	_RD
  4048  0000                     _RD	set	0x7C20
  4049                           	global	_RD0
  4050  0000                     _RD0	set	0x7C18
  4051                           	global	_RD1
  4052  0000                     _RD1	set	0x7C19
  4053                           	global	_RD16
  4054  0000                     _RD16	set	0x7E6F
  4055                           	global	_RD2
  4056  0000                     _RD2	set	0x7C1A
  4057                           	global	_RD3
  4058  0000                     _RD3	set	0x7C1B
  4059                           	global	_RD4
  4060  0000                     _RD4	set	0x7C1C
  4061                           	global	_RD5
  4062  0000                     _RD5	set	0x7C1D
  4063                           	global	_RD6
  4064  0000                     _RD6	set	0x7C1E
  4065                           	global	_RD7
  4066  0000                     _RD7	set	0x7C1F
  4067                           	global	_RDE
  4068  0000                     _RDE	set	0x7C20
  4069                           	global	_RE0
  4070  0000                     _RE0	set	0x7C20
  4071                           	global	_RE1
  4072  0000                     _RE1	set	0x7C21
  4073                           	global	_RE2
  4074  0000                     _RE2	set	0x7C22
  4075                           	global	_RE3
  4076  0000                     _RE3	set	0x7CB3
  4077                           	global	_RE4
  4078  0000                     _RE4	set	0x7C24
  4079                           	global	_RE5
  4080  0000                     _RE5	set	0x7C25
  4081                           	global	_RE6
  4082  0000                     _RE6	set	0x7C26
  4083                           	global	_RE7
  4084  0000                     _RE7	set	0x7C27
  4085                           	global	_READ_WRITE2
  4086  0000                     _READ_WRITE2	set	0x7C3A
  4087                           	global	_RI
  4088  0000                     _RI	set	0x7E84
  4089                           	global	_RJPU
  4090  0000                     _RJPU	set	0x7C07
  4091                           	global	_RSEN
  4092  0000                     _RSEN	set	0x7E29
  4093                           	global	_RSEN1
  4094  0000                     _RSEN1	set	0x7E29
  4095                           	global	_RSEN2
  4096  0000                     _RSEN2	set	0x7C29
  4097                           	global	_RW
  4098  0000                     _RW	set	0x7E3A
  4099                           	global	_RW1
  4100  0000                     _RW1	set	0x7E3A
  4101                           	global	_RW2
  4102  0000                     _RW2	set	0x7C3A
  4103                           	global	_RX
  4104  0000                     _RX	set	0x7C17
  4105                           	global	_RX9
  4106  0000                     _RX9	set	0x7D5E
  4107                           	global	_RX91
  4108  0000                     _RX91	set	0x7D5E
  4109                           	global	_RX9D
  4110  0000                     _RX9D	set	0x7D58
  4111                           	global	_RX9D1
  4112  0000                     _RX9D1	set	0x7D58
  4113                           	global	_R_W2
  4114  0000                     _R_W2	set	0x7C3A
  4115                           	global	_R_nW2
  4116  0000                     _R_nW2	set	0x7C3A
  4117                           	global	_S2
  4118  0000                     _S2	set	0x7C3B
  4119                           	global	_SCK
  4120  0000                     _SCK	set	0x7C13
  4121                           	global	_SCK1
  4122  0000                     _SCK1	set	0x7C13
  4123                           	global	_SCK2
  4124  0000                     _SCK2	set	0x7C18
  4125                           	global	_SCKP
  4126  0000                     _SCKP	set	0x7DC4
  4127                           	global	_SCL
  4128  0000                     _SCL	set	0x7C13
  4129                           	global	_SCL1
  4130  0000                     _SCL1	set	0x7C13
  4131                           	global	_SCL2
  4132  0000                     _SCL2	set	0x7C18
  4133                           	global	_SCS0
  4134  0000                     _SCS0	set	0x7E98
  4135                           	global	_SCS1
  4136  0000                     _SCS1	set	0x7E99
  4137                           	global	_SDA
  4138  0000                     _SDA	set	0x7C14
  4139                           	global	_SDA1
  4140  0000                     _SDA1	set	0x7C14
  4141                           	global	_SDA2
  4142  0000                     _SDA2	set	0x7C19
  4143                           	global	_SDI
  4144  0000                     _SDI	set	0x7C14
  4145                           	global	_SDI1
  4146  0000                     _SDI1	set	0x7C14
  4147                           	global	_SDI2
  4148  0000                     _SDI2	set	0x7C19
  4149                           	global	_SDO
  4150  0000                     _SDO	set	0x7C15
  4151                           	global	_SDO1
  4152  0000                     _SDO1	set	0x7C15
  4153                           	global	_SDO2
  4154  0000                     _SDO2	set	0x7C1A
  4155                           	global	_SEN
  4156  0000                     _SEN	set	0x7E28
  4157                           	global	_SEN1
  4158  0000                     _SEN1	set	0x7E28
  4159                           	global	_SEN2
  4160  0000                     _SEN2	set	0x7C28
  4161                           	global	_SENDB
  4162  0000                     _SENDB	set	0x7D63
  4163                           	global	_SENDB1
  4164  0000                     _SENDB1	set	0x7D63
  4165                           	global	_SMP
  4166  0000                     _SMP	set	0x7E3F
  4167                           	global	_SMP1
  4168  0000                     _SMP1	set	0x7E3F
  4169                           	global	_SMP2
  4170  0000                     _SMP2	set	0x7C3F
  4171                           	global	_SOSCEN
  4172  0000                     _SOSCEN	set	0x7E6B
  4173                           	global	_SPEN
  4174  0000                     _SPEN	set	0x7D5F
  4175                           	global	_SPEN1
  4176  0000                     _SPEN1	set	0x7D5F
  4177                           	global	_SREN
  4178  0000                     _SREN	set	0x7D5D
  4179                           	global	_SREN1
  4180  0000                     _SREN1	set	0x7D5D
  4181                           	global	_SRENA
  4182  0000                     _SRENA	set	0x7D5D
  4183                           	global	_SS1
  4184  0000                     _SS1	set	0x7C05
  4185                           	global	_SS2
  4186  0000                     _SS2	set	0x7C1B
  4187                           	global	_SSP1IE
  4188  0000                     _SSP1IE	set	0x7CEB
  4189                           	global	_SSP1IF
  4190  0000                     _SSP1IF	set	0x7CF3
  4191                           	global	_SSP1IP
  4192  0000                     _SSP1IP	set	0x7CFB
  4193                           	global	_SSP2IE
  4194  0000                     _SSP2IE	set	0x7D1F
  4195                           	global	_SSP2IF
  4196  0000                     _SSP2IF	set	0x7D27
  4197                           	global	_SSP2IP
  4198  0000                     _SSP2IP	set	0x7D2F
  4199                           	global	_SSPEN
  4200  0000                     _SSPEN	set	0x7E35
  4201                           	global	_SSPEN1
  4202  0000                     _SSPEN1	set	0x7E35
  4203                           	global	_SSPEN2
  4204  0000                     _SSPEN2	set	0x7C35
  4205                           	global	_SSPIE
  4206  0000                     _SSPIE	set	0x7CEB
  4207                           	global	_SSPIF
  4208  0000                     _SSPIF	set	0x7CF3
  4209                           	global	_SSPIP
  4210  0000                     _SSPIP	set	0x7CFB
  4211                           	global	_SSPM0
  4212  0000                     _SSPM0	set	0x7E30
  4213                           	global	_SSPM01
  4214  0000                     _SSPM01	set	0x7E30
  4215                           	global	_SSPM02
  4216  0000                     _SSPM02	set	0x7C30
  4217                           	global	_SSPM1
  4218  0000                     _SSPM1	set	0x7E31
  4219                           	global	_SSPM11
  4220  0000                     _SSPM11	set	0x7E31
  4221                           	global	_SSPM12
  4222  0000                     _SSPM12	set	0x7C31
  4223                           	global	_SSPM2
  4224  0000                     _SSPM2	set	0x7E32
  4225                           	global	_SSPM21
  4226  0000                     _SSPM21	set	0x7E32
  4227                           	global	_SSPM22
  4228  0000                     _SSPM22	set	0x7C32
  4229                           	global	_SSPM3
  4230  0000                     _SSPM3	set	0x7E33
  4231                           	global	_SSPM31
  4232  0000                     _SSPM31	set	0x7E33
  4233                           	global	_SSPM32
  4234  0000                     _SSPM32	set	0x7C33
  4235                           	global	_SSPOV
  4236  0000                     _SSPOV	set	0x7E36
  4237                           	global	_SSPOV1
  4238  0000                     _SSPOV1	set	0x7E36
  4239                           	global	_SSPOV2
  4240  0000                     _SSPOV2	set	0x7C36
  4241                           	global	_START
  4242  0000                     _START	set	0x7E3B
  4243                           	global	_START1
  4244  0000                     _START1	set	0x7E3B
  4245                           	global	_START2
  4246  0000                     _START2	set	0x7C3B
  4247                           	global	_STKFUL
  4248  0000                     _STKFUL	set	0x7FE7
  4249                           	global	_STKOVF
  4250  0000                     _STKOVF	set	0x7FE7
  4251                           	global	_STKPTR0
  4252  0000                     _STKPTR0	set	0x7FE0
  4253                           	global	_STKPTR1
  4254  0000                     _STKPTR1	set	0x7FE1
  4255                           	global	_STKPTR2
  4256  0000                     _STKPTR2	set	0x7FE2
  4257                           	global	_STKPTR3
  4258  0000                     _STKPTR3	set	0x7FE3
  4259                           	global	_STKPTR4
  4260  0000                     _STKPTR4	set	0x7FE4
  4261                           	global	_STKUNF
  4262  0000                     _STKUNF	set	0x7FE6
  4263                           	global	_STOP
  4264  0000                     _STOP	set	0x7E3C
  4265                           	global	_STOP1
  4266  0000                     _STOP1	set	0x7E3C
  4267                           	global	_STOP2
  4268  0000                     _STOP2	set	0x7C3C
  4269                           	global	_SWDTE
  4270  0000                     _SWDTE	set	0x7E88
  4271                           	global	_SWDTEN
  4272  0000                     _SWDTEN	set	0x7E88
  4273                           	global	_SYNC
  4274  0000                     _SYNC	set	0x7D64
  4275                           	global	_SYNC1
  4276  0000                     _SYNC1	set	0x7D64
  4277                           	global	_T08BIT
  4278  0000                     _T08BIT	set	0x7EAE
  4279                           	global	_T0CKI
  4280  0000                     _T0CKI	set	0x7C0D
  4281                           	global	_T0CS
  4282  0000                     _T0CS	set	0x7EAD
  4283                           	global	_T0IE
  4284  0000                     _T0IE	set	0x7F95
  4285                           	global	_T0IF
  4286  0000                     _T0IF	set	0x7F92
  4287                           	global	_T0IP
  4288  0000                     _T0IP	set	0x7F8A
  4289                           	global	_T0PS0
  4290  0000                     _T0PS0	set	0x7EA8
  4291                           	global	_T0PS1
  4292  0000                     _T0PS1	set	0x7EA9
  4293                           	global	_T0PS2
  4294  0000                     _T0PS2	set	0x7EAA
  4295                           	global	_T0SE
  4296  0000                     _T0SE	set	0x7EAC
  4297                           	global	_T1CKI
  4298  0000                     _T1CKI	set	0x7C10
  4299                           	global	_T1CKPS0
  4300  0000                     _T1CKPS0	set	0x7E6C
  4301                           	global	_T1CKPS1
  4302  0000                     _T1CKPS1	set	0x7E6D
  4303                           	global	_T1INSYNC
  4304  0000                     _T1INSYNC	set	0x7E6A
  4305                           	global	_T1OSCEN
  4306  0000                     _T1OSCEN	set	0x7E6B
  4307                           	global	_T1OSI
  4308  0000                     _T1OSI	set	0x7C11
  4309                           	global	_T1OSO
  4310  0000                     _T1OSO	set	0x7C10
  4311                           	global	_T1RD16
  4312  0000                     _T1RD16	set	0x7E6F
  4313                           	global	_T1RUN
  4314  0000                     _T1RUN	set	0x7E6E
  4315                           	global	_T1SYNC
  4316  0000                     _T1SYNC	set	0x7E6A
  4317                           	global	_T2CKPS0
  4318  0000                     _T2CKPS0	set	0x7E50
  4319                           	global	_T2CKPS1
  4320  0000                     _T2CKPS1	set	0x7E51
  4321                           	global	_T2OUTPS0
  4322  0000                     _T2OUTPS0	set	0x7E53
  4323                           	global	_T2OUTPS1
  4324  0000                     _T2OUTPS1	set	0x7E54
  4325                           	global	_T2OUTPS2
  4326  0000                     _T2OUTPS2	set	0x7E55
  4327                           	global	_T2OUTPS3
  4328  0000                     _T2OUTPS3	set	0x7E56
  4329                           	global	_TMR0IE
  4330  0000                     _TMR0IE	set	0x7F95
  4331                           	global	_TMR0IF
  4332  0000                     _TMR0IF	set	0x7F92
  4333                           	global	_TMR0IP
  4334  0000                     _TMR0IP	set	0x7F8A
  4335                           	global	_TMR0ON
  4336  0000                     _TMR0ON	set	0x7EAF
  4337                           	global	_TMR1CS
  4338  0000                     _TMR1CS	set	0x7E69
  4339                           	global	_TMR1IE
  4340  0000                     _TMR1IE	set	0x7CE8
  4341                           	global	_TMR1IF
  4342  0000                     _TMR1IF	set	0x7CF0
  4343                           	global	_TMR1IP
  4344  0000                     _TMR1IP	set	0x7CF8
  4345                           	global	_TMR1ON
  4346  0000                     _TMR1ON	set	0x7E68
  4347                           	global	_TMR2IE
  4348  0000                     _TMR2IE	set	0x7CE9
  4349                           	global	_TMR2IF
  4350  0000                     _TMR2IF	set	0x7CF1
  4351                           	global	_TMR2IP
  4352  0000                     _TMR2IP	set	0x7CF9
  4353                           	global	_TMR2ON
  4354  0000                     _TMR2ON	set	0x7E52
  4355                           	global	_TO
  4356  0000                     _TO	set	0x7E83
  4357                           	global	_TOUTPS0
  4358  0000                     _TOUTPS0	set	0x7E53
  4359                           	global	_TOUTPS1
  4360  0000                     _TOUTPS1	set	0x7E54
  4361                           	global	_TOUTPS2
  4362  0000                     _TOUTPS2	set	0x7E55
  4363                           	global	_TOUTPS3
  4364  0000                     _TOUTPS3	set	0x7E56
  4365                           	global	_TRISA0
  4366  0000                     _TRISA0	set	0x7C90
  4367                           	global	_TRISA1
  4368  0000                     _TRISA1	set	0x7C91
  4369                           	global	_TRISA2
  4370  0000                     _TRISA2	set	0x7C92
  4371                           	global	_TRISA3
  4372  0000                     _TRISA3	set	0x7C93
  4373                           	global	_TRISA5
  4374  0000                     _TRISA5	set	0x7C95
  4375                           	global	_TRISB0
  4376  0000                     _TRISB0	set	0x7C98
  4377                           	global	_TRISB1
  4378  0000                     _TRISB1	set	0x7C99
  4379                           	global	_TRISB2
  4380  0000                     _TRISB2	set	0x7C9A
  4381                           	global	_TRISB3
  4382  0000                     _TRISB3	set	0x7C9B
  4383                           	global	_TRISB4
  4384  0000                     _TRISB4	set	0x7C9C
  4385                           	global	_TRISB5
  4386  0000                     _TRISB5	set	0x7C9D
  4387                           	global	_TRISB6
  4388  0000                     _TRISB6	set	0x7C9E
  4389                           	global	_TRISB7
  4390  0000                     _TRISB7	set	0x7C9F
  4391                           	global	_TRISC0
  4392  0000                     _TRISC0	set	0x7CA0
  4393                           	global	_TRISC1
  4394  0000                     _TRISC1	set	0x7CA1
  4395                           	global	_TRISC2
  4396  0000                     _TRISC2	set	0x7CA2
  4397                           	global	_TRISC3
  4398  0000                     _TRISC3	set	0x7CA3
  4399                           	global	_TRISC4
  4400  0000                     _TRISC4	set	0x7CA4
  4401                           	global	_TRISC5
  4402  0000                     _TRISC5	set	0x7CA5
  4403                           	global	_TRISC6
  4404  0000                     _TRISC6	set	0x7CA6
  4405                           	global	_TRISC7
  4406  0000                     _TRISC7	set	0x7CA7
  4407                           	global	_TRISD0
  4408  0000                     _TRISD0	set	0x7CA8
  4409                           	global	_TRISD1
  4410  0000                     _TRISD1	set	0x7CA9
  4411                           	global	_TRISD2
  4412  0000                     _TRISD2	set	0x7CAA
  4413                           	global	_TRISD3
  4414  0000                     _TRISD3	set	0x7CAB
  4415                           	global	_TRISD4
  4416  0000                     _TRISD4	set	0x7CAC
  4417                           	global	_TRISD5
  4418  0000                     _TRISD5	set	0x7CAD
  4419                           	global	_TRISD6
  4420  0000                     _TRISD6	set	0x7CAE
  4421                           	global	_TRISD7
  4422  0000                     _TRISD7	set	0x7CAF
  4423                           	global	_TRISE0
  4424  0000                     _TRISE0	set	0x7CB0
  4425                           	global	_TRISE1
  4426  0000                     _TRISE1	set	0x7CB1
  4427                           	global	_TRISE2
  4428  0000                     _TRISE2	set	0x7CB2
  4429                           	global	_TRMT
  4430  0000                     _TRMT	set	0x7D61
  4431                           	global	_TRMT1
  4432  0000                     _TRMT1	set	0x7D61
  4433                           	global	_TX
  4434  0000                     _TX	set	0x7C16
  4435                           	global	_TX1IE
  4436  0000                     _TX1IE	set	0x7CEC
  4437                           	global	_TX1IF
  4438  0000                     _TX1IF	set	0x7CF4
  4439                           	global	_TX1IP
  4440  0000                     _TX1IP	set	0x7CFC
  4441                           	global	_TX8_9
  4442  0000                     _TX8_9	set	0x7D66
  4443                           	global	_TX9
  4444  0000                     _TX9	set	0x7D66
  4445                           	global	_TX91
  4446  0000                     _TX91	set	0x7D66
  4447                           	global	_TX9D
  4448  0000                     _TX9D	set	0x7D60
  4449                           	global	_TX9D1
  4450  0000                     _TX9D1	set	0x7D60
  4451                           	global	_TXD8
  4452  0000                     _TXD8	set	0x7D60
  4453                           	global	_TXEN
  4454  0000                     _TXEN	set	0x7D65
  4455                           	global	_TXEN1
  4456  0000                     _TXEN1	set	0x7D65
  4457                           	global	_TXIE
  4458  0000                     _TXIE	set	0x7CEC
  4459                           	global	_TXIF
  4460  0000                     _TXIF	set	0x7CF4
  4461                           	global	_TXIP
  4462  0000                     _TXIP	set	0x7CFC
  4463                           	global	_UA
  4464  0000                     _UA	set	0x7E39
  4465                           	global	_UA1
  4466  0000                     _UA1	set	0x7E39
  4467                           	global	_UA2
  4468  0000                     _UA2	set	0x7C39
  4469                           	global	_ULPWUIN
  4470  0000                     _ULPWUIN	set	0x7C00
  4471                           	global	_VCFG0
  4472  0000                     _VCFG0	set	0x7E0C
  4473                           	global	_VCFG01
  4474  0000                     _VCFG01	set	0x7E0C
  4475                           	global	_VCFG1
  4476  0000                     _VCFG1	set	0x7E0D
  4477                           	global	_VCFG11
  4478  0000                     _VCFG11	set	0x7E0D
  4479                           	global	_VREFM
  4480  0000                     _VREFM	set	0x7C02
  4481                           	global	_VREFP
  4482  0000                     _VREFP	set	0x7C03
  4483                           	global	_W4E
  4484  0000                     _W4E	set	0x7DC1
  4485                           	global	_WCOL
  4486  0000                     _WCOL	set	0x7E37
  4487                           	global	_WCOL1
  4488  0000                     _WCOL1	set	0x7E37
  4489                           	global	_WCOL2
  4490  0000                     _WCOL2	set	0x7C37
  4491                           	global	_WR
  4492  0000                     _WR	set	0x7D31
  4493                           	global	_WRE
  4494  0000                     _WRE	set	0x7C21
  4495                           	global	_WREN
  4496  0000                     _WREN	set	0x7D32
  4497                           	global	_WRERR
  4498  0000                     _WRERR	set	0x7D33
  4499                           	global	_WUE
  4500  0000                     _WUE	set	0x7DC1
  4501                           	global	_ZERO
  4502  0000                     _ZERO	set	0x7EC2
  4503                           	global	_nA2
  4504  0000                     _nA2	set	0x7C3D
  4505                           	global	_nADDRESS2
  4506  0000                     _nADDRESS2	set	0x7C3D
  4507                           	global	_nBOR
  4508  0000                     _nBOR	set	0x7E80
  4509                           	global	_nCS
  4510  0000                     _nCS	set	0x7C22
  4511                           	global	_nDONE
  4512  0000                     _nDONE	set	0x7E11
  4513                           	global	_nPD
  4514  0000                     _nPD	set	0x7E82
  4515                           	global	_nPOR
  4516  0000                     _nPOR	set	0x7E81
  4517                           	global	_nRBPU
  4518  0000                     _nRBPU	set	0x7F8F
  4519                           	global	_nRC8
  4520  0000                     _nRC8	set	0x7D5E
  4521                           	global	_nRD
  4522  0000                     _nRD	set	0x7C20
  4523                           	global	_nRI
  4524  0000                     _nRI	set	0x7E84
  4525                           	global	_nSS1
  4526  0000                     _nSS1	set	0x7C05
  4527                           	global	_nSS2
  4528  0000                     _nSS2	set	0x7C1B
  4529                           	global	_nT1SYNC
  4530  0000                     _nT1SYNC	set	0x7E6A
  4531                           	global	_nTO
  4532  0000                     _nTO	set	0x7E83
  4533                           	global	_nTX8
  4534  0000                     _nTX8	set	0x7D66
  4535                           	global	_nW2
  4536  0000                     _nW2	set	0x7C3A
  4537                           	global	_nWR
  4538  0000                     _nWR	set	0x7C21
  4539                           	global	_nWRITE2
  4540  0000                     _nWRITE2	set	0x7C3A
  4541                           	global	_ic_ptr
  4542                           psect	nvCOMRAM,class=COMRAM,space=1
  4543                           global __pnvCOMRAM
  4544  000048                     __pnvCOMRAM:
  4545  000048                     _ic_ptr:
  4546  000048                            ds      2
  4547                           	global	_uc_ptr
  4548  00004A                     _uc_ptr:
  4549  00004A                            ds      2
  4550                           ; #config settings
  4551                           global __CFG_WDTEN$OFF
  4552  0000                     __CFG_WDTEN$OFF equ 0x0
  4553                           global __CFG_STVREN$OFF
  4554  0000                     __CFG_STVREN$OFF equ 0x0
  4555                           global __CFG_XINST$OFF
  4556  0000                     __CFG_XINST$OFF equ 0x0
  4557                           global __CFG_CP0$OFF
  4558  0000                     __CFG_CP0$OFF equ 0x0
  4559                           global __CFG_IESO$ON
  4560  0000                     __CFG_IESO$ON equ 0x0
  4561                           global __CFG_FOSC2$ON
  4562  0000                     __CFG_FOSC2$ON equ 0x0
  4563                           global __CFG_FOSC$HSPLL
  4564  0000                     __CFG_FOSC$HSPLL equ 0x0
  4565                           global __CFG_FCMEN$ON
  4566  0000                     __CFG_FCMEN$ON equ 0x0
  4567                           global __CFG_WDTPS$32768
  4568  0000                     __CFG_WDTPS$32768 equ 0x0
  4569                           global __CFG_CCP2MX$DEFAULT
  4570  0000                     __CFG_CCP2MX$DEFAULT equ 0x0
  4571                           	file	"/tmp/cgtyKIN4g"
  4572                           	line	#
  4573                           psect	cinit,class=CODE,delta=1,reloc=2
  4574                           global __pcinit
  4575  001F22                     __pcinit:
  4576                           global start_initialization
  4577  001F22                     start_initialization:
  4578                           
  4579                           global __initialization
  4580  001F22                     __initialization:
  4581                           psect	bssCOMRAM,class=COMRAM,space=1
  4582                           global __pbssCOMRAM
  4583  000042                     __pbssCOMRAM:
  4584                           	global	_errno
  4585                           	global	_errno
  4586  000042                     _errno:
  4587  000042                            ds      2
  4588                           	global	_CapStatus
  4589                           	global	_CapStatus
  4590  000044                     _CapStatus:
  4591  000044                            ds      1
  4592  000045                     _MQ_Main_Willing_to_block:
  4593  000045                            ds      1
  4594                           	global	_USART_Status
  4595  000046                     _USART_Status:
  4596  000046                            ds      1
  4597  000047                     _adcMsgCount:
  4598  000047                            ds      1
  4599                           psect	bssBANK0,class=BANK0,space=1
  4600                           global __pbssBANK0
  4601  0000C5                     __pbssBANK0:
  4602  0000C5                     _emptyMsgCount:
  4603  0000C5                            ds      1
  4604  0000C6                     _i2cMode:
  4605  0000C6                            ds      1
  4606                           psect	bssBANK1,class=BANK1,space=1
  4607                           global __pbssBANK1
  4608  000100                     __pbssBANK1:
  4609  000100                     _FromMainLow_MQ:
  4610  000100                            ds      54
  4611  000136                     _ToMainHigh_MQ:
  4612  000136                            ds      54
  4613  00016C                     _ToMainLow_MQ:
  4614  00016C                            ds      54
  4615                           psect	bssBANK2,class=BANK2,space=1
  4616                           global __pbssBANK2
  4617  000200                     __pbssBANK2:
  4618  000200                     _FromMainHigh_MQ:
  4619  000200                            ds      54
  4620                           psect	cinit
  4621                           ; Clear objects allocated to BANK2 (54 bytes)
  4622                           	global __pbssBANK2
  4623  001F22  EE02  F000         lfsr	0,__pbssBANK2
  4624  001F26  0E36               movlw	54
  4625  001F28                     clear_0:
  4626  001F28  6AEE               clrf	postinc0,c
  4627  001F2A  06E8               decf	wreg
  4628  001F2C  E1FD               bnz	clear_0
  4629                           ; Clear objects allocated to BANK1 (162 bytes)
  4630                           	global __pbssBANK1
  4631  001F2E  EE01  F000         lfsr	0,__pbssBANK1
  4632  001F32  0EA2               movlw	162
  4633  001F34                     clear_1:
  4634  001F34  6AEE               clrf	postinc0,c
  4635  001F36  06E8               decf	wreg
  4636  001F38  E1FD               bnz	clear_1
  4637                           ; Clear objects allocated to BANK0 (2 bytes)
  4638                           	global __pbssBANK0
  4639  001F3A  0100               movlb	0
  4640  001F3C  6BC6               clrf	(__pbssBANK0+1)&0xffh,b
  4641  001F3E  6BC5               clrf	(__pbssBANK0+0)&0xffh,b
  4642                           ; Clear objects allocated to COMRAM (6 bytes)
  4643                           	global __pbssCOMRAM
  4644  001F40  6A47               clrf	(__pbssCOMRAM+5)&0xffh,c
  4645  001F42  6A46               clrf	(__pbssCOMRAM+4)&0xffh,c
  4646  001F44  6A45               clrf	(__pbssCOMRAM+3)&0xffh,c
  4647  001F46  6A44               clrf	(__pbssCOMRAM+2)&0xffh,c
  4648  001F48  6A43               clrf	(__pbssCOMRAM+1)&0xffh,c
  4649  001F4A  6A42               clrf	(__pbssCOMRAM+0)&0xffh,c
  4650                           psect cinit,class=CODE,delta=1
  4651                           global end_of_initialization,__end_of__initialization
  4652                           
  4653                           ;End of C runtime variable initialization code
  4654                           
  4655  001F4C                     end_of_initialization:
  4656  001F4C                     __end_of__initialization:movlb 0
  4657  001F4E  EFEE  F005         goto _main	;jump to C main() function
  4658                           psect	cstackBANK1,class=BANK1,space=1
  4659                           global __pcstackBANK1
  4660  0001A2                     __pcstackBANK1:
  4661                           	global	?_send_msg
  4662  0001A2                     ?_send_msg:	; 1 bytes @ 0x0
  4663                           	global	?_recv_msg
  4664  0001A2                     ?_recv_msg:	; 1 bytes @ 0x0
  4665                           	global	send_msg@qptr
  4666  0001A2                     send_msg@qptr:	; 2 bytes @ 0x0
  4667                           	global	recv_msg@qptr
  4668  0001A2                     recv_msg@qptr:	; 2 bytes @ 0x0
  4669  0001A2                     	ds   2
  4670                           	global	send_msg@length
  4671  0001A4                     send_msg@length:	; 1 bytes @ 0x2
  4672                           	global	recv_msg@maxlength
  4673  0001A4                     recv_msg@maxlength:	; 1 bytes @ 0x2
  4674  0001A4                     	ds   1
  4675                           	global	send_msg@msgtype
  4676  0001A5                     send_msg@msgtype:	; 1 bytes @ 0x3
  4677                           	global	recv_msg@msgtype
  4678  0001A5                     recv_msg@msgtype:	; 2 bytes @ 0x3
  4679  0001A5                     	ds   1
  4680                           	global	send_msg@data
  4681  0001A6                     send_msg@data:	; 2 bytes @ 0x4
  4682  0001A6                     	ds   1
  4683                           	global	recv_msg@data
  4684  0001A7                     recv_msg@data:	; 2 bytes @ 0x5
  4685  0001A7                     	ds   1
  4686                           	global	send_msg@tlength
  4687  0001A8                     send_msg@tlength:	; 2 bytes @ 0x6
  4688  0001A8                     	ds   1
  4689                           	global	recv_msg@slot
  4690  0001A9                     recv_msg@slot:	; 1 bytes @ 0x7
  4691  0001A9                     	ds   1
  4692                           	global	send_msg@slot
  4693  0001AA                     send_msg@slot:	; 1 bytes @ 0x8
  4694                           	global	recv_msg@tlength
  4695  0001AA                     recv_msg@tlength:	; 2 bytes @ 0x8
  4696  0001AA                     	ds   1
  4697                           	global	send_msg@qmsg
  4698  0001AB                     send_msg@qmsg:	; 2 bytes @ 0x9
  4699  0001AB                     	ds   1
  4700                           	global	recv_msg@qmsg
  4701  0001AC                     recv_msg@qmsg:	; 2 bytes @ 0xA
  4702  0001AC                     	ds   1
  4703                           	global	?_FromMainLow_sendmsg
  4704  0001AD                     ?_FromMainLow_sendmsg:	; 1 bytes @ 0xB
  4705                           	global	FromMainLow_sendmsg@length
  4706  0001AD                     FromMainLow_sendmsg@length:	; 1 bytes @ 0xB
  4707  0001AD                     	ds   1
  4708                           	global	?_ToMainHigh_recvmsg
  4709  0001AE                     ?_ToMainHigh_recvmsg:	; 1 bytes @ 0xC
  4710                           	global	?_ToMainLow_recvmsg
  4711  0001AE                     ?_ToMainLow_recvmsg:	; 1 bytes @ 0xC
  4712                           	global	ToMainLow_recvmsg@maxlength
  4713  0001AE                     ToMainLow_recvmsg@maxlength:	; 1 bytes @ 0xC
  4714                           	global	ToMainHigh_recvmsg@maxlength
  4715  0001AE                     ToMainHigh_recvmsg@maxlength:	; 1 bytes @ 0xC
  4716                           	global	FromMainLow_sendmsg@msgtype
  4717  0001AE                     FromMainLow_sendmsg@msgtype:	; 1 bytes @ 0xC
  4718  0001AE                     	ds   1
  4719                           	global	ToMainLow_recvmsg@msgtype
  4720  0001AF                     ToMainLow_recvmsg@msgtype:	; 2 bytes @ 0xD
  4721                           	global	ToMainHigh_recvmsg@msgtype
  4722  0001AF                     ToMainHigh_recvmsg@msgtype:	; 2 bytes @ 0xD
  4723                           	global	FromMainLow_sendmsg@data
  4724  0001AF                     FromMainLow_sendmsg@data:	; 2 bytes @ 0xD
  4725  0001AF                     	ds   2
  4726                           	global	ToMainLow_recvmsg@data
  4727  0001B1                     ToMainLow_recvmsg@data:	; 2 bytes @ 0xF
  4728                           	global	ToMainHigh_recvmsg@data
  4729  0001B1                     ToMainHigh_recvmsg@data:	; 2 bytes @ 0xF
  4730  0001B1                     	ds   2
  4731  0001B3                     ??_main:	; 0 bytes @ 0x11
  4732  0001B3                     	ds   1
  4733                           	global	main@msgbuffer
  4734  0001B4                     main@msgbuffer:	; 11 bytes @ 0x12
  4735  0001B4                     	ds   11
  4736                           	global	main@uthread_data
  4737  0001BF                     main@uthread_data:	; 2 bytes @ 0x1D
  4738  0001BF                     	ds   2
  4739                           	global	main@t0thread_data
  4740  0001C1                     main@t0thread_data:	; 2 bytes @ 0x1F
  4741  0001C1                     	ds   2
  4742                           	global	main@last_reg_recvd
  4743  0001C3                     main@last_reg_recvd:	; 1 bytes @ 0x21
  4744  0001C3                     	ds   1
  4745                           	global	main@t1thread_data
  4746  0001C4                     main@t1thread_data:	; 2 bytes @ 0x22
  4747  0001C4                     	ds   2
  4748                           	global	main@uc
  4749  0001C6                     main@uc:	; 5 bytes @ 0x24
  4750  0001C6                     	ds   5
  4751                           	global	main@length
  4752  0001CB                     main@length:	; 1 bytes @ 0x29
  4753  0001CB                     	ds   1
  4754                           	global	main@msgtype
  4755  0001CC                     main@msgtype:	; 1 bytes @ 0x2A
  4756  0001CC                     	ds   1
  4757                           	global	main@ic
  4758  0001CD                     main@ic:	; 29 bytes @ 0x2B
  4759  0001CD                     	ds   29
  4760                           psect	cstackBANK0,class=BANK0,space=1
  4761                           global __pcstackBANK0
  4762  000080                     __pcstackBANK0:
  4763                           	global	?i2_send_msg
  4764  000080                     ?i2_send_msg:	; 1 bytes @ 0x0
  4765                           	global	?i2_recv_msg
  4766  000080                     ?i2_recv_msg:	; 1 bytes @ 0x0
  4767                           	global	i2send_msg@qptr
  4768  000080                     i2send_msg@qptr:	; 2 bytes @ 0x0
  4769                           	global	i2recv_msg@qptr
  4770  000080                     i2recv_msg@qptr:	; 2 bytes @ 0x0
  4771  000080                     	ds   2
  4772                           	global	i2send_msg@length
  4773  000082                     i2send_msg@length:	; 1 bytes @ 0x2
  4774                           	global	i2recv_msg@maxlength
  4775  000082                     i2recv_msg@maxlength:	; 1 bytes @ 0x2
  4776  000082                     	ds   1
  4777                           	global	i2send_msg@msgtype
  4778  000083                     i2send_msg@msgtype:	; 1 bytes @ 0x3
  4779                           	global	i2recv_msg@msgtype
  4780  000083                     i2recv_msg@msgtype:	; 2 bytes @ 0x3
  4781  000083                     	ds   1
  4782                           	global	i2send_msg@data
  4783  000084                     i2send_msg@data:	; 2 bytes @ 0x4
  4784  000084                     	ds   1
  4785                           	global	i2recv_msg@data
  4786  000085                     i2recv_msg@data:	; 2 bytes @ 0x5
  4787  000085                     	ds   1
  4788                           	global	i2send_msg@tlength
  4789  000086                     i2send_msg@tlength:	; 2 bytes @ 0x6
  4790  000086                     	ds   1
  4791                           	global	i2recv_msg@slot
  4792  000087                     i2recv_msg@slot:	; 1 bytes @ 0x7
  4793  000087                     	ds   1
  4794                           	global	i2send_msg@slot
  4795  000088                     i2send_msg@slot:	; 1 bytes @ 0x8
  4796                           	global	i2recv_msg@tlength
  4797  000088                     i2recv_msg@tlength:	; 2 bytes @ 0x8
  4798  000088                     	ds   1
  4799                           	global	i2send_msg@qmsg
  4800  000089                     i2send_msg@qmsg:	; 2 bytes @ 0x9
  4801  000089                     	ds   1
  4802                           	global	i2recv_msg@qmsg
  4803  00008A                     i2recv_msg@qmsg:	; 2 bytes @ 0xA
  4804  00008A                     	ds   1
  4805                           	global	?_ToMainHigh_sendmsg
  4806  00008B                     ?_ToMainHigh_sendmsg:	; 1 bytes @ 0xB
  4807                           	global	ToMainHigh_sendmsg@length
  4808  00008B                     ToMainHigh_sendmsg@length:	; 1 bytes @ 0xB
  4809  00008B                     	ds   1
  4810                           	global	?_FromMainLow_recvmsg
  4811  00008C                     ?_FromMainLow_recvmsg:	; 1 bytes @ 0xC
  4812                           	global	?_FromMainHigh_recvmsg
  4813  00008C                     ?_FromMainHigh_recvmsg:	; 1 bytes @ 0xC
  4814                           	global	ToMainHigh_sendmsg@msgtype
  4815  00008C                     ToMainHigh_sendmsg@msgtype:	; 1 bytes @ 0xC
  4816                           	global	FromMainLow_recvmsg@maxlength
  4817  00008C                     FromMainLow_recvmsg@maxlength:	; 1 bytes @ 0xC
  4818                           	global	FromMainHigh_recvmsg@maxlength
  4819  00008C                     FromMainHigh_recvmsg@maxlength:	; 1 bytes @ 0xC
  4820  00008C                     	ds   1
  4821                           	global	ToMainHigh_sendmsg@data
  4822  00008D                     ToMainHigh_sendmsg@data:	; 2 bytes @ 0xD
  4823                           	global	FromMainLow_recvmsg@msgtype
  4824  00008D                     FromMainLow_recvmsg@msgtype:	; 2 bytes @ 0xD
  4825                           	global	FromMainHigh_recvmsg@msgtype
  4826  00008D                     FromMainHigh_recvmsg@msgtype:	; 2 bytes @ 0xD
  4827  00008D                     	ds   2
  4828                           	global	FromMainLow_recvmsg@data
  4829  00008F                     FromMainLow_recvmsg@data:	; 2 bytes @ 0xF
  4830                           	global	FromMainHigh_recvmsg@data
  4831  00008F                     FromMainHigh_recvmsg@data:	; 2 bytes @ 0xF
  4832  00008F                     	ds   2
  4833                           	global	timer0_int_handler@msgtype
  4834  000091                     timer0_int_handler@msgtype:	; 2 bytes @ 0x11
  4835                           	global	i2c_slave_int_handler@data
  4836  000091                     i2c_slave_int_handler@data:	; 10 bytes @ 0x11
  4837  000091                     	ds   2
  4838                           	global	timer0_int_handler@length
  4839  000093                     timer0_int_handler@length:	; 2 bytes @ 0x13
  4840  000093                     	ds   2
  4841                           	global	timer0_int_handler@val
  4842  000095                     timer0_int_handler@val:	; 2 bytes @ 0x15
  4843  000095                     	ds   6
  4844                           	global	i2c_slave_int_handler@empty
  4845  00009B                     i2c_slave_int_handler@empty:	; 4 bytes @ 0x1B
  4846  00009B                     	ds   4
  4847                           	global	i2c_slave_int_handler@error_buf
  4848  00009F                     i2c_slave_int_handler@error_buf:	; 3 bytes @ 0x1F
  4849  00009F                     	ds   3
  4850                           	global	i2c_slave_int_handler@data_written
  4851  0000A2                     i2c_slave_int_handler@data_written:	; 1 bytes @ 0x22
  4852  0000A2                     	ds   1
  4853                           	global	i2c_slave_int_handler@overrun_error
  4854  0000A3                     i2c_slave_int_handler@overrun_error:	; 1 bytes @ 0x23
  4855  0000A3                     	ds   1
  4856                           	global	i2c_slave_int_handler@length
  4857  0000A4                     i2c_slave_int_handler@length:	; 2 bytes @ 0x24
  4858  0000A4                     	ds   2
  4859                           	global	i2c_slave_int_handler@i2c_data
  4860  0000A6                     i2c_slave_int_handler@i2c_data:	; 1 bytes @ 0x26
  4861  0000A6                     	ds   1
  4862                           	global	i2c_slave_int_handler@msgtype
  4863  0000A7                     i2c_slave_int_handler@msgtype:	; 1 bytes @ 0x27
  4864  0000A7                     	ds   1
  4865                           	global	i2c_slave_int_handler@msg_to_send
  4866  0000A8                     i2c_slave_int_handler@msg_to_send:	; 1 bytes @ 0x28
  4867  0000A8                     	ds   1
  4868                           	global	i2c_slave_int_handler@msg_ready
  4869  0000A9                     i2c_slave_int_handler@msg_ready:	; 1 bytes @ 0x29
  4870  0000A9                     	ds   1
  4871                           	global	i2c_slave_int_handler@data_read
  4872  0000AA                     i2c_slave_int_handler@data_read:	; 1 bytes @ 0x2A
  4873  0000AA                     	ds   1
  4874  0000AB                     ??_InterruptHandlerHigh:	; 0 bytes @ 0x2B
  4875  0000AB                     	ds   14
  4876                           	global	?_init_uart_recv
  4877  0000B9                     ?_init_uart_recv:	; 0 bytes @ 0x39
  4878                           	global	?_init_i2c
  4879  0000B9                     ?_init_i2c:	; 0 bytes @ 0x39
  4880                           	global	?_OpenTimer1
  4881  0000B9                     ?_OpenTimer1:	; 0 bytes @ 0x39
  4882                           	global	?_i2c_configure_slave
  4883  0000B9                     ?_i2c_configure_slave:	; 0 bytes @ 0x39
  4884                           	global	?_OpenUSART
  4885  0000B9                     ?_OpenUSART:	; 0 bytes @ 0x39
  4886                           	global	?_Delay1KTCYx
  4887  0000B9                     ?_Delay1KTCYx:	; 0 bytes @ 0x39
  4888                           	global	?_OpenADC
  4889  0000B9                     ?_OpenADC:	; 0 bytes @ 0x39
  4890                           	global	?_SetChanADC
  4891  0000B9                     ?_SetChanADC:	; 0 bytes @ 0x39
  4892  0000B9                     ??_ConvertADC:	; 0 bytes @ 0x39
  4893  0000B9                     ??_enable_interrupts:	; 0 bytes @ 0x39
  4894                           	global	?_init_queue
  4895  0000B9                     ?_init_queue:	; 0 bytes @ 0x39
  4896                           	global	?_check_msg
  4897  0000B9                     ?_check_msg:	; 1 bytes @ 0x39
  4898                           	global	?_timer0_lthread
  4899  0000B9                     ?_timer0_lthread:	; 2 bytes @ 0x39
  4900                           	global	?_timer1_lthread
  4901  0000B9                     ?_timer1_lthread:	; 2 bytes @ 0x39
  4902                           	global	?_uart_lthread
  4903  0000B9                     ?_uart_lthread:	; 2 bytes @ 0x39
  4904                           	global	?_memcpy
  4905  0000B9                     ?_memcpy:	; 2 bytes @ 0x39
  4906                           	global	?_in_high_int
  4907  0000B9                     ?_in_high_int:	; 2 bytes @ 0x39
  4908                           	global	i2c_configure_slave@addr
  4909  0000B9                     i2c_configure_slave@addr:	; 1 bytes @ 0x39
  4910                           	global	OpenADC@config
  4911  0000B9                     OpenADC@config:	; 1 bytes @ 0x39
  4912                           	global	SetChanADC@channel
  4913  0000B9                     SetChanADC@channel:	; 1 bytes @ 0x39
  4914                           	global	OpenTimer1@config
  4915  0000B9                     OpenTimer1@config:	; 1 bytes @ 0x39
  4916                           	global	OpenUSART@config
  4917  0000B9                     OpenUSART@config:	; 1 bytes @ 0x39
  4918                           	global	Delay1KTCYx@unit
  4919  0000B9                     Delay1KTCYx@unit:	; 1 bytes @ 0x39
  4920                           	global	init_queue@qptr
  4921  0000B9                     init_queue@qptr:	; 2 bytes @ 0x39
  4922                           	global	check_msg@qptr
  4923  0000B9                     check_msg@qptr:	; 2 bytes @ 0x39
  4924                           	global	init_i2c@ic
  4925  0000B9                     init_i2c@ic:	; 2 bytes @ 0x39
  4926                           	global	init_uart_recv@uc
  4927  0000B9                     init_uart_recv@uc:	; 2 bytes @ 0x39
  4928  0000B9                     timer0_lthread@tptr:	; 2 bytes @ 0x39
  4929                           	global	timer1_lthread@tptr
  4930  0000B9                     timer1_lthread@tptr:	; 2 bytes @ 0x39
  4931  0000B9                     uart_lthread@uptr:	; 2 bytes @ 0x39
  4932                           	global	memcpy@d1
  4933  0000B9                     memcpy@d1:	; 2 bytes @ 0x39
  4934  0000B9                     	ds   1
  4935  0000BA                     ??_OpenTimer1:	; 0 bytes @ 0x3A
  4936  0000BA                     ??_i2c_configure_slave:	; 0 bytes @ 0x3A
  4937  0000BA                     ??_Delay1KTCYx:	; 0 bytes @ 0x3A
  4938  0000BA                     ??_SetChanADC:	; 0 bytes @ 0x3A
  4939                           	global	OpenADC@config2
  4940  0000BA                     OpenADC@config2:	; 1 bytes @ 0x3A
  4941                           	global	OpenUSART@spbrg
  4942  0000BA                     OpenUSART@spbrg:	; 2 bytes @ 0x3A
  4943  0000BA                     	ds   1
  4944  0000BB                     ??_init_uart_recv:	; 0 bytes @ 0x3B
  4945  0000BB                     ??_init_i2c:	; 0 bytes @ 0x3B
  4946  0000BB                     ??_in_high_int:	; 0 bytes @ 0x3B
  4947  0000BB                     ??_init_queue:	; 0 bytes @ 0x3B
  4948  0000BB                     ??_check_msg:	; 0 bytes @ 0x3B
  4949                           	global	?_in_low_int
  4950  0000BB                     ?_in_low_int:	; 2 bytes @ 0x3B
  4951                           	global	OpenADC@portconfig
  4952  0000BB                     OpenADC@portconfig:	; 1 bytes @ 0x3B
  4953  0000BB                     timer0_lthread@msgtype:	; 2 bytes @ 0x3B
  4954  0000BB                     timer1_lthread@msgtype:	; 2 bytes @ 0x3B
  4955                           	global	uart_lthread@msgtype
  4956  0000BB                     uart_lthread@msgtype:	; 2 bytes @ 0x3B
  4957                           	global	memcpy@s1
  4958  0000BB                     memcpy@s1:	; 2 bytes @ 0x3B
  4959  0000BB                     	ds   1
  4960  0000BC                     ??_OpenUSART:	; 0 bytes @ 0x3C
  4961  0000BC                     ??_OpenADC:	; 0 bytes @ 0x3C
  4962                           	global	init_queue@i
  4963  0000BC                     init_queue@i:	; 1 bytes @ 0x3C
  4964  0000BC                     	ds   1
  4965  0000BD                     ??_init_queues:	; 0 bytes @ 0x3D
  4966  0000BD                     ??_in_low_int:	; 0 bytes @ 0x3D
  4967                           	global	?_in_main
  4968  0000BD                     ?_in_main:	; 2 bytes @ 0x3D
  4969  0000BD                     timer0_lthread@length:	; 2 bytes @ 0x3D
  4970  0000BD                     timer1_lthread@length:	; 2 bytes @ 0x3D
  4971                           	global	uart_lthread@length
  4972  0000BD                     uart_lthread@length:	; 2 bytes @ 0x3D
  4973                           	global	memcpy@n
  4974  0000BD                     memcpy@n:	; 2 bytes @ 0x3D
  4975  0000BD                     	ds   1
  4976                           	global	?_init_timer1_lthread
  4977  0000BE                     ?_init_timer1_lthread:	; 0 bytes @ 0x3E
  4978                           	global	init_timer1_lthread@tptr
  4979  0000BE                     init_timer1_lthread@tptr:	; 2 bytes @ 0x3E
  4980  0000BE                     	ds   1
  4981  0000BF                     ??_block_on_To_msgqueues:	; 0 bytes @ 0x3F
  4982  0000BF                     ??_memcpy:	; 0 bytes @ 0x3F
  4983  0000BF                     ??_in_main:	; 0 bytes @ 0x3F
  4984                           	global	timer0_lthread@msgbuffer
  4985  0000BF                     timer0_lthread@msgbuffer:	; 2 bytes @ 0x3F
  4986                           	global	timer1_lthread@msgbuffer
  4987  0000BF                     timer1_lthread@msgbuffer:	; 2 bytes @ 0x3F
  4988                           	global	uart_lthread@msgbuffer
  4989  0000BF                     uart_lthread@msgbuffer:	; 2 bytes @ 0x3F
  4990                           	global	memcpy@d
  4991  0000BF                     memcpy@d:	; 2 bytes @ 0x3F
  4992  0000BF                     	ds   1
  4993  0000C0                     ??_init_timer1_lthread:	; 0 bytes @ 0x40
  4994  0000C0                     	ds   1
  4995  0000C1                     ??_timer0_lthread:	; 0 bytes @ 0x41
  4996  0000C1                     ??_timer1_lthread:	; 0 bytes @ 0x41
  4997  0000C1                     ??_uart_lthread:	; 0 bytes @ 0x41
  4998                           	global	timer0_lthread@msgval
  4999  0000C1                     timer0_lthread@msgval:	; 2 bytes @ 0x41
  5000                           	global	memcpy@s
  5001  0000C1                     memcpy@s:	; 2 bytes @ 0x41
  5002  0000C1                     	ds   2
  5003  0000C3                     ??_send_msg:	; 0 bytes @ 0x43
  5004  0000C3                     ??_recv_msg:	; 0 bytes @ 0x43
  5005  0000C3                     	ds   1
  5006  0000C4                     ??_FromMainLow_sendmsg:	; 0 bytes @ 0x44
  5007  0000C4                     	ds   1
  5008  0000C5                     ??_ToMainHigh_recvmsg:	; 0 bytes @ 0x45
  5009  0000C5                     ??_ToMainLow_recvmsg:	; 0 bytes @ 0x45
  5010                           psect	cstackCOMRAM,class=COMRAM,space=1
  5011                           global __pcstackCOMRAM
  5012  000001                     __pcstackCOMRAM:
  5013  000001                     ?_i2c_int_handler:	; 0 bytes @ 0x0
  5014  000001                     ?_timer0_int_handler:	; 0 bytes @ 0x0
  5015  000001                     ?_SleepIfOkay:	; 0 bytes @ 0x0
  5016  000001                     ?_timer1_int_handler:	; 0 bytes @ 0x0
  5017  000001                     ?_adc_int_handler:	; 0 bytes @ 0x0
  5018  000001                     ?_uart_recv_int_handler:	; 0 bytes @ 0x0
  5019  000001                     ?_init_queues:	; 0 bytes @ 0x0
  5020  000001                     ?_block_on_To_msgqueues:	; 0 bytes @ 0x0
  5021  000001                     ?_i2c_slave_int_handler:	; 0 bytes @ 0x0
  5022  000001                     ?_i2c_master_int_handler:	; 0 bytes @ 0x0
  5023  000001                     ??_ReadUSART:	; 0 bytes @ 0x0
  5024  000001                     ?_ConvertADC:	; 0 bytes @ 0x0
  5025                           	global	?_WriteTimer1
  5026  000001                     ?_WriteTimer1:	; 0 bytes @ 0x0
  5027  000001                     ?_enable_interrupts:	; 0 bytes @ 0x0
  5028  000001                     ?_InterruptHandlerHigh:	; 0 bytes @ 0x0
  5029  000001                     ?_InterruptHandlerLow:	; 0 bytes @ 0x0
  5030  000001                     ?_main:	; 0 bytes @ 0x0
  5031  000001                     ?_enter_sleep_mode:	; 0 bytes @ 0x0
  5032  000001                     ?_ReadUSART:	; 1 bytes @ 0x0
  5033                           	global	?_ReadTimer1
  5034  000001                     ?_ReadTimer1:	; 2 bytes @ 0x0
  5035                           	global	?_ReadADC
  5036  000001                     ?_ReadADC:	; 2 bytes @ 0x0
  5037                           	global	?i1_memcpy
  5038  000001                     ?i1_memcpy:	; 2 bytes @ 0x0
  5039                           	global	ReadUSART@data
  5040  000001                     ReadUSART@data:	; 1 bytes @ 0x0
  5041                           	global	WriteTimer1@timer1
  5042  000001                     WriteTimer1@timer1:	; 2 bytes @ 0x0
  5043                           	global	i1memcpy@d1
  5044  000001                     i1memcpy@d1:	; 2 bytes @ 0x0
  5045  000001                     	ds   2
  5046  000003                     ??_ReadTimer1:	; 0 bytes @ 0x2
  5047  000003                     ??_WriteTimer1:	; 0 bytes @ 0x2
  5048  000003                     ??_ReadADC:	; 0 bytes @ 0x2
  5049                           	global	ReadTimer1@timer
  5050  000003                     ReadTimer1@timer:	; 2 bytes @ 0x2
  5051                           	global	WriteTimer1@timer
  5052  000003                     WriteTimer1@timer:	; 2 bytes @ 0x2
  5053                           	global	i1memcpy@s1
  5054  000003                     i1memcpy@s1:	; 2 bytes @ 0x2
  5055  000003                     	ds   2
  5056                           	global	i1memcpy@n
  5057  000005                     i1memcpy@n:	; 2 bytes @ 0x4
  5058  000005                     	ds   2
  5059  000007                     ??i1_memcpy:	; 0 bytes @ 0x6
  5060                           	global	i1memcpy@d
  5061  000007                     i1memcpy@d:	; 2 bytes @ 0x6
  5062  000007                     	ds   2
  5063                           	global	i1memcpy@s
  5064  000009                     i1memcpy@s:	; 2 bytes @ 0x8
  5065  000009                     	ds   2
  5066                           	global	?i1_send_msg
  5067  00000B                     ?i1_send_msg:	; 1 bytes @ 0xA
  5068                           	global	i1send_msg@qptr
  5069  00000B                     i1send_msg@qptr:	; 2 bytes @ 0xA
  5070  00000B                     	ds   2
  5071                           	global	i1send_msg@length
  5072  00000D                     i1send_msg@length:	; 1 bytes @ 0xC
  5073  00000D                     	ds   1
  5074                           	global	i1send_msg@msgtype
  5075  00000E                     i1send_msg@msgtype:	; 1 bytes @ 0xD
  5076  00000E                     	ds   1
  5077                           	global	i1send_msg@data
  5078  00000F                     i1send_msg@data:	; 2 bytes @ 0xE
  5079  00000F                     	ds   2
  5080  000011                     ??i1_send_msg:	; 0 bytes @ 0x10
  5081  000011                     	ds   1
  5082                           	global	i1send_msg@tlength
  5083  000012                     i1send_msg@tlength:	; 2 bytes @ 0x11
  5084  000012                     	ds   2
  5085                           	global	i1send_msg@slot
  5086  000014                     i1send_msg@slot:	; 1 bytes @ 0x13
  5087  000014                     	ds   1
  5088                           	global	i1send_msg@qmsg
  5089  000015                     i1send_msg@qmsg:	; 2 bytes @ 0x14
  5090  000015                     	ds   2
  5091                           	global	?_ToMainLow_sendmsg
  5092  000017                     ?_ToMainLow_sendmsg:	; 1 bytes @ 0x16
  5093                           	global	ToMainLow_sendmsg@length
  5094  000017                     ToMainLow_sendmsg@length:	; 1 bytes @ 0x16
  5095  000017                     	ds   1
  5096                           	global	ToMainLow_sendmsg@msgtype
  5097  000018                     ToMainLow_sendmsg@msgtype:	; 1 bytes @ 0x17
  5098  000018                     	ds   1
  5099                           	global	ToMainLow_sendmsg@data
  5100  000019                     ToMainLow_sendmsg@data:	; 2 bytes @ 0x18
  5101  000019                     	ds   2
  5102  00001B                     ??_timer1_int_handler:	; 0 bytes @ 0x1A
  5103  00001B                     ??_adc_int_handler:	; 0 bytes @ 0x1A
  5104  00001B                     ??_uart_recv_int_handler:	; 0 bytes @ 0x1A
  5105  00001B                     ??_ToMainLow_sendmsg:	; 0 bytes @ 0x1A
  5106  00001B                     	ds   2
  5107                           	global	timer1_int_handler@temp
  5108  00001D                     timer1_int_handler@temp:	; 2 bytes @ 0x1C
  5109                           	global	adc_int_handler@message
  5110  00001D                     adc_int_handler@message:	; 4 bytes @ 0x1C
  5111  00001D                     	ds   2
  5112                           	global	timer1_int_handler@result
  5113  00001F                     timer1_int_handler@result:	; 2 bytes @ 0x1E
  5114  00001F                     	ds   2
  5115                           	global	adc_int_handler@value
  5116  000021                     adc_int_handler@value:	; 2 bytes @ 0x20
  5117  000021                     	ds   2
  5118  000023                     ??_InterruptHandlerLow:	; 0 bytes @ 0x22
  5119  000023                     	ds   17
  5120                           	global	?_WriteTimer0
  5121  000034                     ?_WriteTimer0:	; 0 bytes @ 0x33
  5122  000034                     ??_enter_sleep_mode:	; 0 bytes @ 0x33
  5123                           	global	?_start_i2c_slave_reply
  5124  000034                     ?_start_i2c_slave_reply:	; 0 bytes @ 0x33
  5125                           	global	?_handle_start
  5126  000034                     ?_handle_start:	; 0 bytes @ 0x33
  5127                           	global	?i2_check_msg
  5128  000034                     ?i2_check_msg:	; 1 bytes @ 0x33
  5129                           	global	?i2_in_high_int
  5130  000034                     ?i2_in_high_int:	; 2 bytes @ 0x33
  5131                           	global	?i2_memcpy
  5132  000034                     ?i2_memcpy:	; 2 bytes @ 0x33
  5133                           	global	start_i2c_slave_reply@length
  5134  000034                     start_i2c_slave_reply@length:	; 1 bytes @ 0x33
  5135                           	global	handle_start@data_read
  5136  000034                     handle_start@data_read:	; 1 bytes @ 0x33
  5137                           	global	WriteTimer0@timer0
  5138  000034                     WriteTimer0@timer0:	; 2 bytes @ 0x33
  5139                           	global	i2check_msg@qptr
  5140  000034                     i2check_msg@qptr:	; 2 bytes @ 0x33
  5141                           	global	i2memcpy@d1
  5142  000034                     i2memcpy@d1:	; 2 bytes @ 0x33
  5143  000034                     	ds   1
  5144  000035                     ??_handle_start:	; 0 bytes @ 0x34
  5145                           	global	start_i2c_slave_reply@msg
  5146  000035                     start_i2c_slave_reply@msg:	; 2 bytes @ 0x34
  5147  000035                     	ds   1
  5148  000036                     ??_WriteTimer0:	; 0 bytes @ 0x35
  5149  000036                     ??i2_in_high_int:	; 0 bytes @ 0x35
  5150  000036                     ??i2_check_msg:	; 0 bytes @ 0x35
  5151                           	global	?i2_in_low_int
  5152  000036                     ?i2_in_low_int:	; 2 bytes @ 0x35
  5153                           	global	WriteTimer0@timer
  5154  000036                     WriteTimer0@timer:	; 2 bytes @ 0x35
  5155                           	global	i2memcpy@s1
  5156  000036                     i2memcpy@s1:	; 2 bytes @ 0x35
  5157  000036                     	ds   1
  5158  000037                     ??_start_i2c_slave_reply:	; 0 bytes @ 0x36
  5159  000037                     	ds   1
  5160  000038                     ??_SleepIfOkay:	; 0 bytes @ 0x37
  5161  000038                     ??i2_in_low_int:	; 0 bytes @ 0x37
  5162                           	global	i2memcpy@n
  5163  000038                     i2memcpy@n:	; 2 bytes @ 0x37
  5164  000038                     	ds   2
  5165  00003A                     ??i2_memcpy:	; 0 bytes @ 0x39
  5166                           	global	i2memcpy@d
  5167  00003A                     i2memcpy@d:	; 2 bytes @ 0x39
  5168  00003A                     	ds   2
  5169                           	global	i2memcpy@s
  5170  00003C                     i2memcpy@s:	; 2 bytes @ 0x3B
  5171  00003C                     	ds   2
  5172  00003E                     ??i2_send_msg:	; 0 bytes @ 0x3D
  5173  00003E                     ??i2_recv_msg:	; 0 bytes @ 0x3D
  5174  00003E                     	ds   1
  5175  00003F                     ??_i2c_master_int_handler:	; 0 bytes @ 0x3E
  5176  00003F                     ??_ToMainHigh_sendmsg:	; 0 bytes @ 0x3E
  5177  00003F                     	ds   1
  5178  000040                     ??_timer0_int_handler:	; 0 bytes @ 0x3F
  5179  000040                     ??_i2c_slave_int_handler:	; 0 bytes @ 0x3F
  5180  000040                     ??_FromMainLow_recvmsg:	; 0 bytes @ 0x3F
  5181  000040                     ??_FromMainHigh_recvmsg:	; 0 bytes @ 0x3F
  5182  000040                     	ds   2
  5183  000042                     ??_i2c_int_handler:	; 0 bytes @ 0x41
  5184                           ;!
  5185                           ;!Data Sizes:
  5186                           ;!    Strings     0
  5187                           ;!    Constant    0
  5188                           ;!    Data        0
  5189                           ;!    BSS         224
  5190                           ;!    Persistent  4
  5191                           ;!    Stack       0
  5192                           ;!
  5193                           ;!Auto Spaces:
  5194                           ;!    Space          Size  Autos    Used
  5195                           ;!    COMRAM          127     65      75
  5196                           ;!    BANK0           128     69      71
  5197                           ;!    BANK1           256     72     234
  5198                           ;!    BANK2           256      0      54
  5199                           ;!    BANK3           256      0       0
  5200                           
  5201                           ;!
  5202                           ;!Pointer List with Targets:
  5203                           ;!
  5204                           ;!    ?_ReadTimer1	unsigned int  size(2) Largest target is 2
  5205                           ;!		 -> WriteTimer1@timer(COMRAM[2]), ReadTimer1@timer(COMRAM[2]), 
  5206                           ;!
  5207                           ;!    ?_ReadADC	int  size(2) Largest target is 0
  5208                           ;!
  5209                           ;!    ?_memcpy	PTR void  size(2) Largest target is 54
  5210                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@data(BANK0[10]), FromMai
                                 nHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
  5211                           ;!		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 
  5212                           ;!
  5213                           ;!    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
  5214                           ;!		 -> main@uthread_data(BANK1[2]), 
  5215                           ;!
  5216                           ;!    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
  5217                           ;!		 -> main@t0thread_data(BANK1[2]), 
  5218                           ;!
  5219                           ;!    ?_in_high_int	int  size(2) Largest target is 0
  5220                           ;!
  5221                           ;!    memcpy@d1	PTR void  size(2) Largest target is 54
  5222                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@data(BANK0[10]), FromMai
                                 nHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
  5223                           ;!		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 
  5224                           ;!
  5225                           ;!    memcpy@d	PTR unsigned char  size(2) Largest target is 54
  5226                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@data(BANK0[10]), FromMai
                                 nHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
  5227                           ;!		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 
  5228                           ;!
  5229                           ;!    memcpy@s1	PTR const void  size(2) Largest target is 54
  5230                           ;!		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), timer0
                                 _int_handler@val(BANK0[2]), i2c_slave_int_handler@error_buf(BANK0[3]), 
  5231                           ;!		 -> NULL(NULL[0]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh
                                 _MQ(BANK1[54]), 
  5232                           ;!		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), main@ic(BANK1[29]), main@uc(
                                 BANK1[5]), 
  5233                           ;!
  5234                           ;!    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
  5235                           ;!		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), timer0
                                 _int_handler@val(BANK0[2]), i2c_slave_int_handler@error_buf(BANK0[3]), 
  5236                           ;!		 -> NULL(NULL[0]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh
                                 _MQ(BANK1[54]), 
  5237                           ;!		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), main@ic(BANK1[29]), main@uc(
                                 BANK1[5]), 
  5238                           ;!
  5239                           ;!    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
  5240                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5241                           ;!
  5242                           ;!    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
  5243                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5244                           ;!
  5245                           ;!    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
  5246                           ;!		 -> main@t1thread_data(BANK1[2]), 
  5247                           ;!
  5248                           ;!    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target 
                                 is 2
  5249                           ;!		 -> main@t1thread_data(BANK1[2]), 
  5250                           ;!
  5251                           ;!    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
  5252                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5253                           ;!
  5254                           ;!    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
  5255                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5256                           ;!
  5257                           ;!    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
  5258                           ;!		 -> main@uc(BANK1[5]), 
  5259                           ;!
  5260                           ;!    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
  5261                           ;!		 -> NULL(NULL[0]), main@uc(BANK1[5]), 
  5262                           ;!
  5263                           ;!    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 29
  5264                           ;!		 -> main@ic(BANK1[29]), 
  5265                           ;!
  5266                           ;!    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 10
  5267                           ;!		 -> i2c_slave_int_handler@empty(BANK0[4]), i2c_slave_int_handler@data(BANK0[10]), 
  5268                           ;!
  5269                           ;!    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 29
  5270                           ;!		 -> NULL(NULL[0]), main@ic(BANK1[29]), 
  5271                           ;!
  5272                           ;!    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
  5273                           ;!		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
  5274                           ;!
  5275                           ;!    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
  5276                           ;!		 -> timer0_int_handler@val(BANK0[2]), 
  5277                           ;!
  5278                           ;!    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1023
  5279                           ;!		 -> RAM(DATA[1023]), 
  5280                           ;!
  5281                           ;!    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 10
  5282                           ;!		 -> i2c_slave_int_handler@data(BANK0[10]), 
  5283                           ;!
  5284                           ;!    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
  5285                           ;!		 -> i2c_slave_int_handler@msgtype(BANK0[1]), 
  5286                           ;!
  5287                           ;!    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 11
  5288                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5289                           ;!
  5290                           ;!    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
  5291                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5292                           ;!
  5293                           ;!    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
  5294                           ;!		 -> main@msgtype(BANK1[1]), 
  5295                           ;!
  5296                           ;!    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 29
  5297                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@error_buf(BANK0[3]), NUL
                                 L(NULL[0]), main@ic(BANK1[29]), 
  5298                           ;!
  5299                           ;!    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
  5300                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5301                           ;!
  5302                           ;!    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
  5303                           ;!		 -> main@msgtype(BANK1[1]), 
  5304                           ;!
  5305                           ;!    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
  5306                           ;!		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), NULL(N
                                 ULL[0]), main@uc(BANK1[5]), 
  5307                           ;!
  5308                           ;!    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1023
  5309                           ;!		 -> RAM(DATA[1023]), i2c_slave_int_handler@msgtype(BANK0[1]), main@msgtype(BANK1[1])
                                 , 
  5310                           ;!
  5311                           ;!    recv_msg@data	PTR void  size(2) Largest target is 11
  5312                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@data(BANK0[10]), main@ms
                                 gbuffer(BANK1[11]), 
  5313                           ;!
  5314                           ;!    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
  5315                           ;!		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK1[54]), 
  5316                           ;!
  5317                           ;!    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
  5318                           ;!		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK1[54]), 
  5319                           ;!
  5320                           ;!    sp__memcpy	PTR void  size(2) Largest target is 54
  5321                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@data(BANK0[10]), FromMai
                                 nHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
  5322                           ;!		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 
  5323                           ;!
  5324                           ;!    send_msg@data	PTR void  size(2) Largest target is 29
  5325                           ;!		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), timer0
                                 _int_handler@val(BANK0[2]), i2c_slave_int_handler@error_buf(BANK0[3]), 
  5326                           ;!		 -> NULL(NULL[0]), main@msgbuffer(BANK1[11]), main@ic(BANK1[29]), main@uc(BANK1[5]),
                                  
  5327                           ;!
  5328                           ;!    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
  5329                           ;!		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK1[54]), 
  5330                           ;!
  5331                           ;!    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
  5332                           ;!		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK1[54]), 
  5333                           ;!
  5334                           ;!    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
  5335                           ;!		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK1[54]), 
  5336                           ;!
  5337                           
  5338                           
  5339                           ;!
  5340                           ;!Critical Paths under _main in COMRAM
  5341                           ;!
  5342                           ;!    None.
  5343                           ;!
  5344                           ;!Critical Paths under _InterruptHandlerHigh in COMRAM
  5345                           ;!
  5346                           ;!    _InterruptHandlerHigh->_timer0_int_handler
  5347                           ;!    _i2c_int_handler->_i2c_slave_int_handler
  5348                           ;!    _SleepIfOkay->i2_in_low_int
  5349                           ;!    _FromMainHigh_recvmsg->i2_recv_msg
  5350                           ;!    _FromMainLow_recvmsg->i2_recv_msg
  5351                           ;!    _ToMainHigh_sendmsg->i2_send_msg
  5352                           ;!    i2_in_low_int->i2_in_high_int
  5353                           ;!    i2_send_msg->i2_memcpy
  5354                           ;!    i2_recv_msg->i2_memcpy
  5355                           ;!    _InterruptHandlerLow->_adc_int_handler
  5356                           ;!    _timer1_int_handler->_ToMainLow_sendmsg
  5357                           ;!    _adc_int_handler->_ToMainLow_sendmsg
  5358                           ;!    _uart_recv_int_handler->_ToMainLow_sendmsg
  5359                           ;!    _ToMainLow_sendmsg->i1_send_msg
  5360                           ;!    i1_send_msg->i1_memcpy
  5361                           ;!
  5362                           ;!Critical Paths under _main in BANK0
  5363                           ;!
  5364                           ;!    _init_timer1_lthread->_OpenADC
  5365                           ;!    _init_queues->_init_queue
  5366                           ;!    _block_on_To_msgqueues->_in_main
  5367                           ;!    _in_main->_in_low_int
  5368                           ;!    _in_low_int->_in_high_int
  5369                           ;!    _ToMainHigh_recvmsg->_recv_msg
  5370                           ;!    _ToMainLow_recvmsg->_recv_msg
  5371                           ;!    _FromMainLow_sendmsg->_send_msg
  5372                           ;!    _send_msg->_memcpy
  5373                           ;!    _recv_msg->_memcpy
  5374                           ;!
  5375                           ;!Critical Paths under _InterruptHandlerHigh in BANK0
  5376                           ;!
  5377                           ;!    _i2c_int_handler->_i2c_slave_int_handler
  5378                           ;!    _timer0_int_handler->_FromMainHigh_recvmsg
  5379                           ;!    _FromMainHigh_recvmsg->i2_recv_msg
  5380                           ;!    _i2c_slave_int_handler->_FromMainLow_recvmsg
  5381                           ;!    _FromMainLow_recvmsg->i2_recv_msg
  5382                           ;!    _i2c_master_int_handler->_ToMainHigh_sendmsg
  5383                           ;!    _ToMainHigh_sendmsg->i2_send_msg
  5384                           ;!
  5385                           ;!Critical Paths under _main in BANK1
  5386                           ;!
  5387                           ;!    _main->_ToMainHigh_recvmsg
  5388                           ;!    _main->_ToMainLow_recvmsg
  5389                           ;!    _ToMainHigh_recvmsg->_recv_msg
  5390                           ;!    _ToMainLow_recvmsg->_recv_msg
  5391                           ;!    _FromMainLow_sendmsg->_send_msg
  5392                           ;!
  5393                           ;!Critical Paths under _InterruptHandlerHigh in BANK1
  5394                           ;!
  5395                           ;!    None.
  5396                           ;!
  5397                           ;!Critical Paths under _main in BANK2
  5398                           ;!
  5399                           ;!    None.
  5400                           ;!
  5401                           ;!Critical Paths under _InterruptHandlerHigh in BANK2
  5402                           ;!
  5403                           ;!    None.
  5404                           ;!
  5405                           ;!Critical Paths under _main in BANK3
  5406                           ;!
  5407                           ;!    None.
  5408                           ;!
  5409                           ;!Critical Paths under _InterruptHandlerHigh in BANK3
  5410                           ;!
  5411                           ;!    None.
  5412                           
  5413 ;;
  5414 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  5415 ;;
  5416                           
  5417                           ;!
  5418                           ;!Call Graph Tables:
  5419                           ;!
  5420                           ;! ---------------------------------------------------------------------------------
  5421                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  5422                           ;! ---------------------------------------------------------------------------------
  5423                           ;! (0) _main                                                57    57      0    4921
  5424                           ;!                                             17 BANK1     55    55      0
  5425                           ;!                     _init_uart_recv
  5426                           ;!                           _init_i2c
  5427                           ;!                _init_timer1_lthread
  5428                           ;!                        _init_queues
  5429                           ;!                         _OpenTimer1
  5430                           ;!                  _enable_interrupts
  5431                           ;!                _i2c_configure_slave
  5432                           ;!                          _OpenUSART
  5433                           ;!              _block_on_To_msgqueues
  5434                           ;!                 _ToMainHigh_recvmsg
  5435                           ;!                     _timer0_lthread
  5436                           ;!                  _ToMainLow_recvmsg
  5437                           ;!                     _timer1_lthread
  5438                           ;!                _FromMainLow_sendmsg
  5439                           ;!                       _uart_lthread
  5440                           ;! ---------------------------------------------------------------------------------
  5441                           ;! (1) _enable_interrupts                                    0     0      0       0
  5442                           ;! ---------------------------------------------------------------------------------
  5443                           ;! (1) _init_uart_recv                                       2     0      2      22
  5444                           ;!                                             57 BANK0      2     0      2
  5445                           ;! ---------------------------------------------------------------------------------
  5446                           ;! (1) _init_i2c                                             2     0      2      22
  5447                           ;!                                             57 BANK0      2     0      2
  5448                           ;! ---------------------------------------------------------------------------------
  5449                           ;! (1) _init_timer1_lthread                                  5     3      2     198
  5450                           ;!                                             62 BANK0      5     3      2
  5451                           ;!                            _OpenADC
  5452                           ;!                         _SetChanADC
  5453                           ;! ---------------------------------------------------------------------------------
  5454                           ;! (1) _init_queues                                          1     1      0     134
  5455                           ;!                                             61 BANK0      1     1      0
  5456                           ;!                         _init_queue
  5457                           ;! ---------------------------------------------------------------------------------
  5458                           ;! (1) _OpenTimer1                                           1     0      1      66
  5459                           ;!                                             57 BANK0      1     0      1
  5460                           ;! ---------------------------------------------------------------------------------
  5461                           ;! (1) _i2c_configure_slave                                  2     1      1      22
  5462                           ;!                                             57 BANK0      2     1      1
  5463                           ;! ---------------------------------------------------------------------------------
  5464                           ;! (1) _OpenUSART                                            3     0      3     220
  5465                           ;!                                             57 BANK0      3     0      3
  5466                           ;! ---------------------------------------------------------------------------------
  5467                           ;! (1) _block_on_To_msgqueues                                1     1      0      66
  5468                           ;!                                             63 BANK0      1     1      0
  5469                           ;!                            _in_main
  5470                           ;!                          _check_msg
  5471                           ;!                        _Delay1KTCYx
  5472                           ;! ---------------------------------------------------------------------------------
  5473                           ;! (2) _in_main                                              2     0      2       0
  5474                           ;!                                             61 BANK0      2     0      2
  5475                           ;!                         _in_low_int
  5476                           ;!                        _in_high_int
  5477                           ;! ---------------------------------------------------------------------------------
  5478                           ;! (3) _in_low_int                                           2     0      2       0
  5479                           ;!                                             59 BANK0      2     0      2
  5480                           ;!                        _in_high_int
  5481                           ;! ---------------------------------------------------------------------------------
  5482                           ;! (3) _in_high_int                                          2     0      2       0
  5483                           ;!                                             57 BANK0      2     0      2
  5484                           ;! ---------------------------------------------------------------------------------
  5485                           ;! (1) _ToMainHigh_recvmsg                                   5     0      5     772
  5486                           ;!                                             12 BANK1      5     0      5
  5487                           ;!                           _recv_msg
  5488                           ;! ---------------------------------------------------------------------------------
  5489                           ;! (1) _timer0_lthread                                      10     2      8      23
  5490                           ;!                                             57 BANK0     10     2      8
  5491                           ;! ---------------------------------------------------------------------------------
  5492                           ;! (1) _ToMainLow_recvmsg                                    5     0      5     772
  5493                           ;!                                             12 BANK1      5     0      5
  5494                           ;!                           _recv_msg
  5495                           ;! ---------------------------------------------------------------------------------
  5496                           ;! (1) _timer1_lthread                                      10     2      8      44
  5497                           ;!                                             57 BANK0     10     2      8
  5498                           ;!                         _ConvertADC
  5499                           ;! ---------------------------------------------------------------------------------
  5500                           ;! (1) _FromMainLow_sendmsg                                  4     0      4     741
  5501                           ;!                                             11 BANK1      4     0      4
  5502                           ;!                           _send_msg
  5503                           ;! ---------------------------------------------------------------------------------
  5504                           ;! (1) _uart_lthread                                         8     0      8      88
  5505                           ;!                                             57 BANK0      8     0      8
  5506                           ;! ---------------------------------------------------------------------------------
  5507                           ;! (2) _init_queue                                           4     2      2     134
  5508                           ;!                                             57 BANK0      4     2      2
  5509                           ;! ---------------------------------------------------------------------------------
  5510                           ;! (2) _send_msg                                            12     6      6     648
  5511                           ;!                                             67 BANK0      1     1      0
  5512                           ;!                                              0 BANK1     11     5      6
  5513                           ;!                             _memcpy
  5514                           ;! ---------------------------------------------------------------------------------
  5515                           ;! (2) _recv_msg                                            14     7      7     679
  5516                           ;!                                             67 BANK0      2     2      0
  5517                           ;!                                              0 BANK1     12     5      7
  5518                           ;!                             _memcpy
  5519                           ;! ---------------------------------------------------------------------------------
  5520                           ;! (3) _memcpy                                              10     4      6     174
  5521                           ;!                                             57 BANK0     10     4      6
  5522                           ;! ---------------------------------------------------------------------------------
  5523                           ;! (2) _check_msg                                            3     1      2      44
  5524                           ;!                                             57 BANK0      3     1      2
  5525                           ;! ---------------------------------------------------------------------------------
  5526                           ;! (2) _Delay1KTCYx                                          1     0      1      22
  5527                           ;!                                             57 BANK0      1     0      1
  5528                           ;! ---------------------------------------------------------------------------------
  5529                           ;! (2) _OpenADC                                              5     2      3     154
  5530                           ;!                                             57 BANK0      5     2      3
  5531                           ;! ---------------------------------------------------------------------------------
  5532                           ;! (2) _SetChanADC                                           2     1      1      22
  5533                           ;!                                             57 BANK0      2     1      1
  5534                           ;! ---------------------------------------------------------------------------------
  5535                           ;! (2) _ConvertADC                                           0     0      0       0
  5536                           ;! ---------------------------------------------------------------------------------
  5537                           ;! Estimated maximum stack depth 3
  5538                           ;! ---------------------------------------------------------------------------------
  5539                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  5540                           ;! ---------------------------------------------------------------------------------
  5541                           ;! (5) _InterruptHandlerLow                                 17    17      0    4981
  5542                           ;!                                             34 COMRAM    17    17      0
  5543                           ;!                 _timer1_int_handler
  5544                           ;!                    _adc_int_handler
  5545                           ;!              _uart_recv_int_handler
  5546                           ;! ---------------------------------------------------------------------------------
  5547                           ;! (6) _timer1_int_handler                                   6     6      0    1688
  5548                           ;!                                             26 COMRAM     6     6      0
  5549                           ;!                         _ReadTimer1
  5550                           ;!                        _WriteTimer1
  5551                           ;!                  _ToMainLow_sendmsg
  5552                           ;! ---------------------------------------------------------------------------------
  5553                           ;! (6) _adc_int_handler                                      8     8      0    1708
  5554                           ;!                                             26 COMRAM     8     8      0
  5555                           ;!                            _ReadADC
  5556                           ;!                  _ToMainLow_sendmsg
  5557                           ;! ---------------------------------------------------------------------------------
  5558                           ;! (6) _uart_recv_int_handler                                2     2      0    1585
  5559                           ;!                                             26 COMRAM     2     2      0
  5560                           ;!                          _ReadUSART
  5561                           ;!                  _ToMainLow_sendmsg
  5562                           ;! ---------------------------------------------------------------------------------
  5563                           ;! (7) _ToMainLow_sendmsg                                    4     0      4    1562
  5564                           ;!                                             22 COMRAM     4     0      4
  5565                           ;!                         i1_send_msg
  5566                           ;! ---------------------------------------------------------------------------------
  5567                           ;! (7) _ReadUSART                                            1     1      0      23
  5568                           ;!                                              0 COMRAM     1     1      0
  5569                           ;! ---------------------------------------------------------------------------------
  5570                           ;! (7) _ReadTimer1                                           4     2      2      30
  5571                           ;!                                              0 COMRAM     4     2      2
  5572                           ;! ---------------------------------------------------------------------------------
  5573                           ;! (7) _WriteTimer1                                          4     2      2      45
  5574                           ;!                                              0 COMRAM     4     2      2
  5575                           ;! ---------------------------------------------------------------------------------
  5576                           ;! (7) _ReadADC                                              2     0      2       0
  5577                           ;!                                              0 COMRAM     2     0      2
  5578                           ;! ---------------------------------------------------------------------------------
  5579                           ;! (8) i1_send_msg                                          12     6      6    1496
  5580                           ;!                                             10 COMRAM    12     6      6
  5581                           ;!                           i1_memcpy
  5582                           ;! ---------------------------------------------------------------------------------
  5583                           ;! (9) i1_memcpy                                            10     4      6     395
  5584                           ;!                                              0 COMRAM    10     4      6
  5585                           ;! ---------------------------------------------------------------------------------
  5586                           ;! (10) _InterruptHandlerHigh                               14    14      0   11139
  5587                           ;!                                             43 BANK0     14    14      0
  5588                           ;!                    _i2c_int_handler
  5589                           ;!                 _timer0_int_handler
  5590                           ;!                        _SleepIfOkay
  5591                           ;! ---------------------------------------------------------------------------------
  5592                           ;! (11) _i2c_int_handler                                     0     0      0    6847
  5593                           ;!              _i2c_slave_int_handler
  5594                           ;!             _i2c_master_int_handler
  5595                           ;! ---------------------------------------------------------------------------------
  5596                           ;! (11) _timer0_int_handler                                  8     8      0    4146
  5597                           ;!                                             63 COMRAM     2     2      0
  5598                           ;!                                             17 BANK0      6     6      0
  5599                           ;!                        _WriteTimer0
  5600                           ;!               _FromMainHigh_recvmsg
  5601                           ;!                 _ToMainHigh_sendmsg
  5602                           ;! ---------------------------------------------------------------------------------
  5603                           ;! (11) _SleepIfOkay                                         0     0      0     146
  5604                           ;!                       i2_in_low_int
  5605                           ;!                      i2_in_high_int
  5606                           ;!                        i2_check_msg
  5607                           ;!                   _enter_sleep_mode
  5608                           ;! ---------------------------------------------------------------------------------
  5609                           ;! (12) _FromMainHigh_recvmsg                                5     0      5    2000
  5610                           ;!                                             12 BANK0      5     0      5
  5611                           ;!                         i2_recv_msg
  5612                           ;! ---------------------------------------------------------------------------------
  5613                           ;! (12) _enter_sleep_mode                                    0     0      0       0
  5614                           ;! ---------------------------------------------------------------------------------
  5615                           ;! (12) _i2c_slave_int_handler                              28    28      0    4935
  5616                           ;!                                             63 COMRAM     2     2      0
  5617                           ;!                                             17 BANK0     26    26      0
  5618                           ;!                       _handle_start
  5619                           ;!                _FromMainLow_recvmsg
  5620                           ;!              _start_i2c_slave_reply
  5621                           ;!                 _ToMainHigh_sendmsg
  5622                           ;! ---------------------------------------------------------------------------------
  5623                           ;! (13) _FromMainLow_recvmsg                                 5     0      5    2000
  5624                           ;!                                             12 BANK0      5     0      5
  5625                           ;!                         i2_recv_msg
  5626                           ;! ---------------------------------------------------------------------------------
  5627                           ;! (13) _start_i2c_slave_reply                               5     2      3      66
  5628                           ;!                                             51 COMRAM     5     2      3
  5629                           ;! ---------------------------------------------------------------------------------
  5630                           ;! (13) _handle_start                                        1     0      1      22
  5631                           ;!                                             51 COMRAM     1     0      1
  5632                           ;! ---------------------------------------------------------------------------------
  5633                           ;! (12) _i2c_master_int_handler                              2     2      0    1912
  5634                           ;!                                             62 COMRAM     2     2      0
  5635                           ;!                 _ToMainHigh_sendmsg
  5636                           ;! ---------------------------------------------------------------------------------
  5637                           ;! (12) _ToMainHigh_sendmsg                                  4     0      4    1912
  5638                           ;!                                             11 BANK0      4     0      4
  5639                           ;!                         i2_send_msg
  5640                           ;! ---------------------------------------------------------------------------------
  5641                           ;! (12) _WriteTimer0                                         4     2      2      68
  5642                           ;!                                             51 COMRAM     4     2      2
  5643                           ;! ---------------------------------------------------------------------------------
  5644                           ;! (12) i2_in_low_int                                        2     0      2       0
  5645                           ;!                                             53 COMRAM     2     0      2
  5646                           ;!                      i2_in_high_int
  5647                           ;! ---------------------------------------------------------------------------------
  5648                           ;! (12) i2_in_high_int                                       2     0      2       0
  5649                           ;!                                             51 COMRAM     2     0      2
  5650                           ;! ---------------------------------------------------------------------------------
  5651                           ;! (13) i2_send_msg                                         12     6      6    1819
  5652                           ;!                                             61 COMRAM     1     1      0
  5653                           ;!                                              0 BANK0     11     5      6
  5654                           ;!                           i2_memcpy
  5655                           ;! ---------------------------------------------------------------------------------
  5656                           ;! (13) i2_recv_msg                                         14     7      7    1907
  5657                           ;!                                             61 COMRAM     2     2      0
  5658                           ;!                                              0 BANK0     12     5      7
  5659                           ;!                           i2_memcpy
  5660                           ;! ---------------------------------------------------------------------------------
  5661                           ;! (12) i2_check_msg                                         3     1      2     146
  5662                           ;!                                             51 COMRAM     3     1      2
  5663                           ;! ---------------------------------------------------------------------------------
  5664                           ;! (14) i2_memcpy                                           10     4      6     484
  5665                           ;!                                             51 COMRAM    10     4      6
  5666                           ;! ---------------------------------------------------------------------------------
  5667                           ;! Estimated maximum stack depth 14
  5668                           ;! ---------------------------------------------------------------------------------
  5669                           ;!
  5670                           ;! Call Graph Graphs:
  5671                           ;!
  5672                           ;! _main (ROOT)
  5673                           ;!   _init_uart_recv
  5674                           ;!   _init_i2c
  5675                           ;!   _init_timer1_lthread
  5676                           ;!     _OpenADC
  5677                           ;!     _SetChanADC
  5678                           ;!   _init_queues
  5679                           ;!     _init_queue
  5680                           ;!   _OpenTimer1
  5681                           ;!   _enable_interrupts
  5682                           ;!   _i2c_configure_slave
  5683                           ;!   _OpenUSART
  5684                           ;!   _block_on_To_msgqueues
  5685                           ;!     _in_main
  5686                           ;!       _in_low_int
  5687                           ;!         _in_high_int
  5688                           ;!       _in_high_int
  5689                           ;!     _check_msg
  5690                           ;!     _Delay1KTCYx
  5691                           ;!   _ToMainHigh_recvmsg
  5692                           ;!     _recv_msg
  5693                           ;!       _memcpy
  5694                           ;!   _timer0_lthread
  5695                           ;!   _ToMainLow_recvmsg
  5696                           ;!     _recv_msg
  5697                           ;!       _memcpy
  5698                           ;!   _timer1_lthread
  5699                           ;!     _ConvertADC
  5700                           ;!   _FromMainLow_sendmsg
  5701                           ;!     _send_msg
  5702                           ;!       _memcpy
  5703                           ;!   _uart_lthread
  5704                           ;!
  5705                           ;! _InterruptHandlerLow (ROOT)
  5706                           ;!   _timer1_int_handler
  5707                           ;!     _ReadTimer1
  5708                           ;!     _WriteTimer1
  5709                           ;!     _ToMainLow_sendmsg
  5710                           ;!       i1_send_msg
  5711                           ;!         i1_memcpy
  5712                           ;!   _adc_int_handler
  5713                           ;!     _ReadADC
  5714                           ;!     _ToMainLow_sendmsg
  5715                           ;!       i1_send_msg
  5716                           ;!         i1_memcpy
  5717                           ;!   _uart_recv_int_handler
  5718                           ;!     _ReadUSART
  5719                           ;!     _ToMainLow_sendmsg
  5720                           ;!       i1_send_msg
  5721                           ;!         i1_memcpy
  5722                           ;!
  5723                           
  5724                           ;! Address spaces:
  5725                           
  5726                           ;!Name               Size   Autos  Total    Cost      Usage
  5727                           ;!BIGRAM             3FF      0       0      12        0.0%
  5728                           ;!BITBANK3           100      0       0       9        0.0%
  5729                           ;!BANK3              100      0       0      10        0.0%
  5730                           ;!BITBANK2           100      0       0       7        0.0%
  5731                           ;!BANK2              100      0      36       8       21.1%
  5732                           ;!BITBANK1           100      0       0       5        0.0%
  5733                           ;!BANK1              100     48      EA       6       91.4%
  5734                           ;!BITBANK0            80      0       0       3        0.0%
  5735                           ;!BANK0               80     45      47       4       55.5%
  5736                           ;!BITCOMRAM           7F      0       0       0        0.0%
  5737                           ;!COMRAM              7F     41      4B       1       59.1%
  5738                           ;!BITSFR               0      0       0      40        0.0%
  5739                           ;!SFR                  0      0       0      40        0.0%
  5740                           ;!STACK                0      0      24       2        0.0%
  5741                           ;!NULL                 0      0       0       0        0.0%
  5742                           ;!ABS                  0      0     1B2      11        0.0%
  5743                           ;!DATA                 0      0     1D6      13        0.0%
  5744                           ;!CODE                 0      0       0       0        0.0%
  5745                           
  5746                           	global	_main
  5747                           
  5748 ;; *************** function _main *****************
  5749 ;; Defined at:
  5750 ;;		line 79 in file "../src/main.c"
  5751 ;; Parameters:    Size  Location     Type
  5752 ;;		None
  5753 ;; Auto vars:     Size  Location     Type
  5754 ;;  ic             29   43[BANK1 ] struct __i2c_comm
  5755 ;;  msgbuffer      11   18[BANK1 ] unsigned char [11]
  5756 ;;  uc              5   36[BANK1 ] struct __uart_comm
  5757 ;;  t1thread_dat    2   34[BANK1 ] struct __timer1_thread_s
  5758 ;;  t0thread_dat    2   31[BANK1 ] struct __timer0_thread_s
  5759 ;;  uthread_data    2   29[BANK1 ] struct __uart_thread_str
  5760 ;;  msgtype         1   42[BANK1 ] unsigned char 
  5761 ;;  length          1   41[BANK1 ] char 
  5762 ;;  last_reg_rec    1   33[BANK1 ] unsigned char 
  5763 ;;  i               1    0        unsigned char 
  5764 ;;  c               1    0        unsigned char 
  5765 ;; Return value:  Size  Location     Type
  5766 ;;		None               void
  5767 ;; Registers used:
  5768 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, structret, tblptrl, tblptrh, tblptr
       u, prodl, prodh, bsr, cstack
  5769 ;; Tracked objects:
  5770 ;;		On entry : 0/0
  5771 ;;		On exit  : 0/0
  5772 ;;		Unchanged: 0/0
  5773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5774 ;;      Params:         0       0       0       0       0
  5775 ;;      Locals:         0       0      54       0       0
  5776 ;;      Temps:          0       0       1       0       0
  5777 ;;      Totals:         0       0      55       0       0
  5778 ;;Total ram usage:       55 bytes
  5779 ;; Hardware stack levels required when called:   15
  5780 ;; This function calls:
  5781 ;;		_init_uart_recv
  5782 ;;		_init_i2c
  5783 ;;		_init_timer1_lthread
  5784 ;;		_init_queues
  5785 ;;		_OpenTimer1
  5786 ;;		_enable_interrupts
  5787 ;;		_i2c_configure_slave
  5788 ;;		_OpenUSART
  5789 ;;		_block_on_To_msgqueues
  5790 ;;		_ToMainHigh_recvmsg
  5791 ;;		_timer0_lthread
  5792 ;;		_ToMainLow_recvmsg
  5793 ;;		_timer1_lthread
  5794 ;;		_FromMainLow_sendmsg
  5795 ;;		_uart_lthread
  5796 ;; This function is called by:
  5797 ;;		Startup code after reset
  5798 ;; This function uses a non-reentrant model
  5799 ;;
  5800                           psect	text0,class=CODE,space=0,reloc=2
  5801                           global __ptext0
  5802  000BDC                     __ptext0:
  5803                           psect	text0
  5804                           	file	"../src/main.c"
  5805                           	line	79
  5806                           	global	__size_of_main
  5807  0000                     	__size_of_main	equ	__end_of_main-_main
  5808                           	
  5809  000BDC                     _main:; BSR set to: 0
  5810                           
  5811                           	opt	stack 16
  5812                           	line	99
  5813                           	
  5814  000BDC                     l19326:
  5815                           ;main.c: 80: char c;
  5816                           ;main.c: 81: signed char length;
  5817                           ;main.c: 82: unsigned char msgtype;
  5818                           ;main.c: 83: unsigned char last_reg_recvd;
  5819                           ;main.c: 84: uart_comm uc;
  5820                           ;main.c: 85: i2c_comm ic;
  5821                           ;main.c: 86: unsigned char msgbuffer[10 + 1];
  5822                           ;main.c: 87: unsigned char i;
  5823                           ;main.c: 88: uart_thread_struct uthread_data;
  5824                           ;main.c: 91: timer1_thread_struct t1thread_data;
  5825                           ;main.c: 92: timer0_thread_struct t0thread_data;
  5826                           ;main.c: 99: OSCCON = 0x82;
  5827  000BDC  0E82               	movlw	low(082h)
  5828  000BDE  6ED3               	movwf	((c:4051)),c	;volatile
  5829                           	line	100
  5830                           	
  5831  000BE0                     l19328:
  5832                           ;main.c: 100: OSCTUNEbits.PLLEN = 0;
  5833  000BE0  9C9B               	bcf	((c:3995)),c,6	;volatile
  5834                           	line	105
  5835                           	
  5836  000BE2                     l19330:
  5837                           ;main.c: 105: init_uart_recv(&uc);
  5838  000BE2  0101               	movlb	1	; () banked
  5839  000BE4  0E01               	movlw	high(main@uc)
  5840  000BE6  0100               	movlb	0	; () banked
  5841  000BE8  0100               	movlb	0	; () banked
  5842  000BEA  6FBA               	movwf	((?_init_uart_recv+1))&0ffh
  5843  000BEC  0101               	movlb	1	; () banked
  5844  000BEE  0EC6               	movlw	low(main@uc)
  5845  000BF0  0100               	movlb	0	; () banked
  5846  000BF2  6FB9               	movwf	((?_init_uart_recv))&0ffh
  5847  000BF4  0100               	movlb	0	; () banked
  5848  000BF6  EC8E  F010         	call	_init_uart_recv	;wreg free
  5849                           	line	109
  5850                           	
  5851  000BFA                     l19332:
  5852                           ;main.c: 109: init_i2c(&ic);
  5853  000BFA  0101               	movlb	1	; () banked
  5854  000BFC  0E01               	movlw	high(main@ic)
  5855  000BFE  0100               	movlb	0	; () banked
  5856  000C00  0100               	movlb	0	; () banked
  5857  000C02  6FBA               	movwf	((?_init_i2c+1))&0ffh
  5858  000C04  0101               	movlb	1	; () banked
  5859  000C06  0ECD               	movlw	low(main@ic)
  5860  000C08  0100               	movlb	0	; () banked
  5861  000C0A  6FB9               	movwf	((?_init_i2c))&0ffh
  5862  000C0C  0100               	movlb	0	; () banked
  5863  000C0E  EC4E  F00E         	call	_init_i2c	;wreg free
  5864                           	line	112
  5865                           	
  5866  000C12                     l19334:
  5867                           ;main.c: 112: init_timer1_lthread(&t1thread_data);
  5868  000C12  0101               	movlb	1	; () banked
  5869  000C14  0E01               	movlw	high(main@t1thread_data)
  5870  000C16  0100               	movlb	0	; () banked
  5871  000C18  0100               	movlb	0	; () banked
  5872  000C1A  6FBF               	movwf	((?_init_timer1_lthread+1))&0ffh
  5873  000C1C  0101               	movlb	1	; () banked
  5874  000C1E  0EC4               	movlw	low(main@t1thread_data)
  5875  000C20  0100               	movlb	0	; () banked
  5876  000C22  6FBE               	movwf	((?_init_timer1_lthread))&0ffh
  5877  000C24  0100               	movlb	0	; () banked
  5878  000C26  EC6F  F00D         	call	_init_timer1_lthread	;wreg free
  5879                           	line	115
  5880                           	
  5881  000C2A                     l19336:
  5882                           ;main.c: 115: init_queues();
  5883  000C2A  EC38  F00D         	call	_init_queues	;wreg free
  5884                           	line	118
  5885                           	
  5886  000C2E                     l19338:
  5887                           ;main.c: 118: TRISB = 0x0;
  5888  000C2E  0E00               	movlw	low(0)
  5889  000C30  6E93               	movwf	((c:3987)),c	;volatile
  5890                           	line	119
  5891                           	
  5892  000C32                     l19340:
  5893                           ;main.c: 119: LATB = 0x0;
  5894  000C32  0E00               	movlw	low(0)
  5895  000C34  6E8A               	movwf	((c:3978)),c	;volatile
  5896                           	line	123
  5897                           	
  5898  000C36                     l19342:
  5899                           ;main.c: 123: PORTA = 0x0;
  5900  000C36  0E00               	movlw	low(0)
  5901  000C38  6E80               	movwf	((c:3968)),c	;volatile
  5902                           	line	124
  5903                           	
  5904  000C3A                     l19344:
  5905                           ;main.c: 124: LATA = 0x0;
  5906  000C3A  0E00               	movlw	low(0)
  5907  000C3C  6E89               	movwf	((c:3977)),c	;volatile
  5908                           	line	125
  5909                           	
  5910  000C3E                     l19346:
  5911                           ;main.c: 125: ADCON1 = 0x0F;
  5912  000C3E  0E0F               	movlw	low(0Fh)
  5913  000C40  6EC1               	movwf	((c:4033)),c	;volatile
  5914                           	line	127
  5915                           	
  5916  000C42                     l19348:
  5917                           ;main.c: 127: TRISA = 0x0F;
  5918  000C42  0E0F               	movlw	low(0Fh)
  5919  000C44  6E92               	movwf	((c:3986)),c	;volatile
  5920                           	line	135
  5921                           	
  5922  000C46                     l19350:
  5923                           ;main.c: 135: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
                                 & 0b11111111);
  5924  000C46  0101               	movlb	1	; () banked
  5925  000C48  6FB3               	movwf	(??_main+0+0)&0ffh
  5926  000C4A  0EF5               	movlw	low(0F5h)
  5927  000C4C  0100               	movlb	0	; () banked
  5928  000C4E  0100               	movlb	0	; () banked
  5929  000C50  6FB9               	movwf	((?_OpenTimer1))&0ffh
  5930  000C52  0101               	movlb	1	; () banked
  5931  000C54  51B3               	movf	(??_main+0+0)&0ffh,w
  5932  000C56  0100               	movlb	0	; () banked
  5933  000C58  EC01  F00F         	call	_OpenTimer1	;wreg free
  5934                           	line	144
  5935                           	
  5936  000C5C                     l19352:
  5937                           ;main.c: 144: enable_interrupts();
  5938  000C5C  ECDC  F010         	call	_enable_interrupts	;wreg free
  5939                           	line	158
  5940                           	
  5941  000C60                     l19354:
  5942                           ;main.c: 158: IPR1bits.TMR1IP = 0;
  5943  000C60  909F               	bcf	((c:3999)),c,0	;volatile
  5944                           	line	160
  5945                           	
  5946  000C62                     l19356:
  5947                           ;main.c: 160: IPR1bits.ADIP = 0;
  5948  000C62  9C9F               	bcf	((c:3999)),c,6	;volatile
  5949                           	line	162
  5950                           	
  5951  000C64                     l19358:
  5952                           ;main.c: 162: IPR1bits.RCIP = 0;
  5953  000C64  9A9F               	bcf	((c:3999)),c,5	;volatile
  5954                           	line	164
  5955                           	
  5956  000C66                     l19360:
  5957                           ;main.c: 164: IPR1bits.SSPIP = 1;
  5958  000C66  869F               	bsf	((c:3999)),c,3	;volatile
  5959                           	line	176
  5960                           	
  5961  000C68                     l19362:
  5962                           ;main.c: 176: i2c_configure_slave(0x9C);
  5963  000C68  0101               	movlb	1	; () banked
  5964  000C6A  6FB3               	movwf	(??_main+0+0)&0ffh
  5965  000C6C  0E9C               	movlw	low(09Ch)
  5966  000C6E  0100               	movlb	0	; () banked
  5967  000C70  0100               	movlb	0	; () banked
  5968  000C72  6FB9               	movwf	((?_i2c_configure_slave))&0ffh
  5969  000C74  0101               	movlb	1	; () banked
  5970  000C76  51B3               	movf	(??_main+0+0)&0ffh,w
  5971  000C78  0100               	movlb	0	; () banked
  5972  000C7A  EC77  F00F         	call	_i2c_configure_slave	;wreg free
  5973                           	line	199
  5974                           	
  5975  000C7E                     l19364:
  5976                           ;main.c: 199: PIE1bits.SSPIE = 1;
  5977  000C7E  869D               	bsf	((c:3997)),c,3	;volatile
  5978                           	line	205
  5979                           	
  5980  000C80                     l19366:
  5981                           ;main.c: 204: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  5982                           ;main.c: 205: 0b11111111 & 0b11101111, 0x19);
  5983  000C80  0101               	movlb	1	; () banked
  5984  000C82  6FB3               	movwf	(??_main+0+0)&0ffh
  5985  000C84  0E6C               	movlw	low(06Ch)
  5986  000C86  0100               	movlb	0	; () banked
  5987  000C88  0100               	movlb	0	; () banked
  5988  000C8A  6FB9               	movwf	((?_OpenUSART))&0ffh
  5989  000C8C  0101               	movlb	1	; () banked
  5990  000C8E  51B3               	movf	(??_main+0+0)&0ffh,w
  5991  000C90  0E00               	movlw	high(019h)
  5992  000C92  0100               	movlb	0	; () banked
  5993  000C94  0100               	movlb	0	; () banked
  5994  000C96  6FBB               	movwf	(1+(?_OpenUSART+01h))&0ffh
  5995  000C98  0E19               	movlw	low(019h)
  5996  000C9A  0100               	movlb	0	; () banked
  5997  000C9C  6FBA               	movwf	(0+(?_OpenUSART+01h))&0ffh
  5998  000C9E  0100               	movlb	0	; () banked
  5999  000CA0  ECD5  F00A         	call	_OpenUSART	;wreg free
  6000  000CA4  D000               	goto	l19368
  6001                           	line	226
  6002                           ;main.c: 226: while (1) {
  6003                           	
  6004  000CA6                     l3645:
  6005                           	line	230
  6006                           	
  6007  000CA6                     l19368:
  6008                           ;main.c: 230: block_on_To_msgqueues();
  6009  000CA6  ECB0  F009         	call	_block_on_To_msgqueues	;wreg free
  6010                           	line	237
  6011                           	
  6012  000CAA                     l19370:
  6013                           ;main.c: 237: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  6014  000CAA  0101               	movlb	1	; () banked
  6015  000CAC  6FB3               	movwf	(??_main+0+0)&0ffh
  6016  000CAE  0E0A               	movlw	low(0Ah)
  6017  000CB0  0101               	movlb	1	; () banked
  6018  000CB2  0101               	movlb	1	; () banked
  6019  000CB4  6FAE               	movwf	((?_ToMainHigh_recvmsg))&0ffh
  6020  000CB6  0101               	movlb	1	; () banked
  6021  000CB8  51B3               	movf	(??_main+0+0)&0ffh,w
  6022  000CBA  0101               	movlb	1	; () banked
  6023  000CBC  0E01               	movlw	high(main@msgtype)
  6024  000CBE  0101               	movlb	1	; () banked
  6025  000CC0  0101               	movlb	1	; () banked
  6026  000CC2  6FB0               	movwf	(1+(?_ToMainHigh_recvmsg+01h))&0ffh
  6027  000CC4  0101               	movlb	1	; () banked
  6028  000CC6  0ECC               	movlw	low(main@msgtype)
  6029  000CC8  0101               	movlb	1	; () banked
  6030  000CCA  6FAF               	movwf	(0+(?_ToMainHigh_recvmsg+01h))&0ffh
  6031  000CCC  0101               	movlb	1	; () banked
  6032  000CCE  0E01               	movlw	high(main@msgbuffer)
  6033  000CD0  0101               	movlb	1	; () banked
  6034  000CD2  0101               	movlb	1	; () banked
  6035  000CD4  6FB2               	movwf	(1+(?_ToMainHigh_recvmsg+03h))&0ffh
  6036  000CD6  0101               	movlb	1	; () banked
  6037  000CD8  0EB4               	movlw	low(main@msgbuffer)
  6038  000CDA  0101               	movlb	1	; () banked
  6039  000CDC  6FB1               	movwf	(0+(?_ToMainHigh_recvmsg+03h))&0ffh
  6040  000CDE  0101               	movlb	1	; () banked
  6041  000CE0  ECA9  F00F         	call	_ToMainHigh_recvmsg	;wreg free
  6042  000CE4  0101               	movlb	1	; () banked
  6043  000CE6  0101               	movlb	1	; () banked
  6044  000CE8  6FCB               	movwf	((main@length))&0ffh
  6045                           	line	238
  6046                           	
  6047  000CEA                     l19372:; BSR set to: 1
  6048                           
  6049                           ;main.c: 238: if (length < 0) {
  6050  000CEA  0101               	movlb	1	; () banked
  6051  000CEC  0101               	movlb	1	; () banked
  6052  000CEE  AFCB               	btfss	((main@length))&0ffh,7
  6053  000CF0  D001               	goto	u2151
  6054  000CF2  D001               	goto	u2150
  6055  000CF4                     u2151:
  6056  000CF4  D03F               	goto	l19384
  6057  000CF6                     u2150:
  6058  000CF6  D058               	goto	l19386
  6059                           	line	240
  6060                           	
  6061  000CF8                     l19374:; BSR set to: 1
  6062                           
  6063  000CF8  D057               	goto	l19386
  6064                           	line	242
  6065                           	
  6066  000CFA                     l3647:; BSR set to: 1
  6067                           
  6068                           	line	243
  6069                           ;main.c: 242: }
  6070                           ;main.c: 243: } else {
  6071  000CFA  D056               	goto	l19386
  6072                           	
  6073  000CFC                     l3646:; BSR set to: 1
  6074                           
  6075                           	line	244
  6076                           ;main.c: 244: switch (msgtype) {
  6077  000CFC  D03B               	goto	l19384
  6078                           	line	245
  6079                           ;main.c: 245: case 43:
  6080                           	
  6081  000CFE                     l3650:; BSR set to: 1
  6082                           
  6083                           	line	247
  6084                           ;main.c: 246: {
  6085                           ;main.c: 247: break;
  6086  000CFE  D054               	goto	l19386
  6087                           	line	249
  6088                           ;main.c: 248: }
  6089                           ;main.c: 249: case 44:
  6090                           	
  6091  000D00                     l3652:; BSR set to: 1
  6092                           
  6093                           	line	252
  6094                           ;main.c: 250: {
  6095                           ;main.c: 252: break;
  6096  000D00  D053               	goto	l19386
  6097                           	line	254
  6098                           ;main.c: 253: }
  6099                           ;main.c: 254: case 45:
  6100                           	
  6101  000D02                     l3653:; BSR set to: 1
  6102                           
  6103                           	line	257
  6104                           ;main.c: 255: {
  6105                           ;main.c: 257: break;
  6106  000D02  D052               	goto	l19386
  6107                           	line	262
  6108                           ;main.c: 258: }
  6109                           ;main.c: 262: case 10:
  6110                           	
  6111  000D04                     l3654:; BSR set to: 1
  6112                           
  6113                           	line	264
  6114                           	
  6115  000D04                     l19376:; BSR set to: 1
  6116                           
  6117                           ;main.c: 263: {
  6118                           ;main.c: 264: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  6119  000D04  0101               	movlb	1	; () banked
  6120  000D06  0E01               	movlw	high(main@t0thread_data)
  6121  000D08  0100               	movlb	0	; () banked
  6122  000D0A  0100               	movlb	0	; () banked
  6123  000D0C  6FBA               	movwf	((?_timer0_lthread+1))&0ffh
  6124  000D0E  0101               	movlb	1	; () banked
  6125  000D10  0EC1               	movlw	low(main@t0thread_data)
  6126  000D12  0100               	movlb	0	; () banked
  6127  000D14  6FB9               	movwf	((?_timer0_lthread))&0ffh
  6128  000D16  0101               	movlb	1	; () banked
  6129  000D18  0100               	movlb	0	; () banked
  6130  000D1A  C1CC  F0BB         	movff	(main@msgtype),0+(?_timer0_lthread+02h)
  6131  000D1E  0100               	movlb	0	; () banked
  6132  000D20  0100               	movlb	0	; () banked
  6133  000D22  6BBC               	clrf	(1+(?_timer0_lthread+02h))&0ffh
  6134  000D24  0101               	movlb	1	; () banked
  6135  000D26  0101               	movlb	1	; () banked
  6136  000D28  51CB               	movf	((main@length))&0ffh,w
  6137  000D2A  0100               	movlb	0	; () banked
  6138  000D2C  0100               	movlb	0	; () banked
  6139  000D2E  6FBD               	movwf	(0+(?_timer0_lthread+04h))&0ffh
  6140  000D30  0100               	movlb	0	; () banked
  6141  000D32  6BBE               	clrf	(1+(?_timer0_lthread+04h))&0ffh
  6142  000D34  0100               	movlb	0	; () banked
  6143  000D36  BFBD               	btfsc	(0+(?_timer0_lthread+04h))&0ffh,7
  6144  000D38  07BE               	decf	(1+(?_timer0_lthread+04h))&0ffh
  6145  000D3A  0101               	movlb	1	; () banked
  6146  000D3C  0E01               	movlw	high(main@msgbuffer)
  6147  000D3E  0100               	movlb	0	; () banked
  6148  000D40  0100               	movlb	0	; () banked
  6149  000D42  6FC0               	movwf	(1+(?_timer0_lthread+06h))&0ffh
  6150  000D44  0101               	movlb	1	; () banked
  6151  000D46  0EB4               	movlw	low(main@msgbuffer)
  6152  000D48  0100               	movlb	0	; () banked
  6153  000D4A  6FBF               	movwf	(0+(?_timer0_lthread+06h))&0ffh
  6154  000D4C  0100               	movlb	0	; () banked
  6155  000D4E  ECD7  F010         	call	_timer0_lthread	;wreg free
  6156                           	line	265
  6157                           ;main.c: 265: break;
  6158  000D52  D02A               	goto	l19386
  6159                           	line	267
  6160                           ;main.c: 266: };
  6161                           ;main.c: 267: case 40:
  6162                           	
  6163  000D54                     l3655:
  6164                           	line	269
  6165                           	
  6166  000D54                     l3656:
  6167                           	line	273
  6168                           ;main.c: 269: case 41:
  6169                           ;main.c: 270: {
  6170                           ;main.c: 273: last_reg_recvd = msgbuffer[0];
  6171  000D54  C1B4  F1C3         	movff	(main@msgbuffer),(main@last_reg_recvd)
  6172                           	line	274
  6173                           ;main.c: 274: break;
  6174  000D58  D027               	goto	l19386
  6175                           	line	276
  6176                           ;main.c: 275: };
  6177                           ;main.c: 276: case 42:
  6178                           	
  6179  000D5A                     l3657:
  6180                           	line	285
  6181                           ;main.c: 277: {
  6182                           ;main.c: 285: switch (last_reg_recvd) {
  6183  000D5A  D002               	goto	l19380
  6184                           	line	286
  6185                           ;main.c: 286: case 0xaa:
  6186                           	
  6187  000D5C                     l3659:
  6188                           	line	291
  6189                           ;main.c: 287: {
  6190                           ;main.c: 291: break;
  6191  000D5C  D025               	goto	l19386
  6192                           	line	305
  6193                           	
  6194  000D5E                     l19378:
  6195                           ;main.c: 292: }
  6196                           ;main.c: 305: };
  6197  000D5E  D024               	goto	l19386
  6198                           	line	285
  6199                           	
  6200  000D60                     l3658:
  6201                           	
  6202  000D60                     l19380:
  6203  000D60  0101               	movlb	1	; () banked
  6204  000D62  0101               	movlb	1	; () banked
  6205  000D64  51C3               	movf	((main@last_reg_recvd))&0ffh,w
  6206                           	; Switch size 1, requested type "space"
  6207                           ; Number of cases is 1, Range of values is 170 to 170
  6208                           ; switch strategies available:
  6209                           ; Name         Instructions Cycles
  6210                           ; simple_byte            4     3 (average)
  6211                           ;	Chosen strategy is simple_byte
  6212                           
  6213  000D66  0AAA               	xorlw	170^0	; case 170
  6214  000D68  B4D8               	skipnz
  6215  000D6A  D01E               	goto	l19386
  6216  000D6C  D01D               	goto	l19386
  6217                           
  6218                           	line	305
  6219                           	
  6220  000D6E                     l3660:; BSR set to: 1
  6221                           
  6222                           	line	307
  6223                           ;main.c: 307: break;
  6224  000D6E  D01C               	goto	l19386
  6225                           	line	309
  6226                           ;main.c: 308: };
  6227                           ;main.c: 309: default:
  6228                           	
  6229  000D70                     l3661:; BSR set to: 1
  6230                           
  6231                           	line	312
  6232                           ;main.c: 310: {
  6233                           ;main.c: 312: break;
  6234  000D70  D01B               	goto	l19386
  6235                           	line	314
  6236                           	
  6237  000D72                     l19382:; BSR set to: 1
  6238                           
  6239                           ;main.c: 313: };
  6240                           ;main.c: 314: };
  6241  000D72  D01A               	goto	l19386
  6242                           	line	244
  6243                           	
  6244  000D74                     l3649:; BSR set to: 1
  6245                           
  6246                           	
  6247  000D74                     l19384:; BSR set to: 1
  6248                           
  6249  000D74  0101               	movlb	1	; () banked
  6250  000D76  0101               	movlb	1	; () banked
  6251  000D78  51CC               	movf	((main@msgtype))&0ffh,w
  6252                           	; Switch size 1, requested type "space"
  6253                           ; Number of cases is 7, Range of values is 10 to 45
  6254                           ; switch strategies available:
  6255                           ; Name         Instructions Cycles
  6256                           ; simple_byte           22    12 (average)
  6257                           ;	Chosen strategy is simple_byte
  6258                           
  6259  000D7A  0A0A               	xorlw	10^0	; case 10
  6260  000D7C  B4D8               	skipnz
  6261  000D7E  D7C2               	goto	l19376
  6262  000D80  0A22               	xorlw	40^10	; case 40
  6263  000D82  B4D8               	skipnz
  6264  000D84  D7E7               	goto	l3656
  6265  000D86  0A01               	xorlw	41^40	; case 41
  6266  000D88  B4D8               	skipnz
  6267  000D8A  D7E4               	goto	l3656
  6268  000D8C  0A03               	xorlw	42^41	; case 42
  6269  000D8E  B4D8               	skipnz
  6270  000D90  D7E7               	goto	l19380
  6271  000D92  0A01               	xorlw	43^42	; case 43
  6272  000D94  B4D8               	skipnz
  6273  000D96  D008               	goto	l19386
  6274  000D98  0A07               	xorlw	44^43	; case 44
  6275  000D9A  B4D8               	skipnz
  6276  000D9C  D005               	goto	l19386
  6277  000D9E  0A01               	xorlw	45^44	; case 45
  6278  000DA0  B4D8               	skipnz
  6279  000DA2  D002               	goto	l19386
  6280  000DA4  D001               	goto	l19386
  6281                           
  6282                           	line	314
  6283                           	
  6284  000DA6                     l3651:; BSR set to: 1
  6285                           
  6286  000DA6  D000               	goto	l19386
  6287                           	line	315
  6288                           	
  6289  000DA8                     l3648:; BSR set to: 1
  6290                           
  6291                           	line	318
  6292                           	
  6293  000DA8                     l19386:
  6294                           ;main.c: 315: }
  6295                           ;main.c: 318: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  6296  000DA8  0101               	movlb	1	; () banked
  6297  000DAA  6FB3               	movwf	(??_main+0+0)&0ffh
  6298  000DAC  0E0A               	movlw	low(0Ah)
  6299  000DAE  0101               	movlb	1	; () banked
  6300  000DB0  0101               	movlb	1	; () banked
  6301  000DB2  6FAE               	movwf	((?_ToMainLow_recvmsg))&0ffh
  6302  000DB4  0101               	movlb	1	; () banked
  6303  000DB6  51B3               	movf	(??_main+0+0)&0ffh,w
  6304  000DB8  0101               	movlb	1	; () banked
  6305  000DBA  0E01               	movlw	high(main@msgtype)
  6306  000DBC  0101               	movlb	1	; () banked
  6307  000DBE  0101               	movlb	1	; () banked
  6308  000DC0  6FB0               	movwf	(1+(?_ToMainLow_recvmsg+01h))&0ffh
  6309  000DC2  0101               	movlb	1	; () banked
  6310  000DC4  0ECC               	movlw	low(main@msgtype)
  6311  000DC6  0101               	movlb	1	; () banked
  6312  000DC8  6FAF               	movwf	(0+(?_ToMainLow_recvmsg+01h))&0ffh
  6313  000DCA  0101               	movlb	1	; () banked
  6314  000DCC  0E01               	movlw	high(main@msgbuffer)
  6315  000DCE  0101               	movlb	1	; () banked
  6316  000DD0  0101               	movlb	1	; () banked
  6317  000DD2  6FB2               	movwf	(1+(?_ToMainLow_recvmsg+03h))&0ffh
  6318  000DD4  0101               	movlb	1	; () banked
  6319  000DD6  0EB4               	movlw	low(main@msgbuffer)
  6320  000DD8  0101               	movlb	1	; () banked
  6321  000DDA  6FB1               	movwf	(0+(?_ToMainLow_recvmsg+03h))&0ffh
  6322  000DDC  0101               	movlb	1	; () banked
  6323  000DDE  ECC1  F00F         	call	_ToMainLow_recvmsg	;wreg free
  6324  000DE2  0101               	movlb	1	; () banked
  6325  000DE4  0101               	movlb	1	; () banked
  6326  000DE6  6FCB               	movwf	((main@length))&0ffh
  6327                           	line	319
  6328                           	
  6329  000DE8                     l19388:; BSR set to: 1
  6330                           
  6331                           ;main.c: 319: if (length < 0) {
  6332  000DE8  0101               	movlb	1	; () banked
  6333  000DEA  0101               	movlb	1	; () banked
  6334  000DEC  AFCB               	btfss	((main@length))&0ffh,7
  6335  000DEE  D001               	goto	u2161
  6336  000DF0  D001               	goto	u2160
  6337  000DF2                     u2161:
  6338  000DF2  D068               	goto	l19400
  6339  000DF4                     u2160:
  6340  000DF4  D758               	goto	l19368
  6341                           	line	321
  6342                           	
  6343  000DF6                     l19390:; BSR set to: 1
  6344                           
  6345  000DF6  D757               	goto	l19368
  6346                           	line	323
  6347                           	
  6348  000DF8                     l3663:; BSR set to: 1
  6349                           
  6350                           	line	324
  6351                           ;main.c: 323: }
  6352                           ;main.c: 324: } else {
  6353  000DF8  D756               	goto	l19368
  6354                           	
  6355  000DFA                     l3662:; BSR set to: 1
  6356                           
  6357                           	line	325
  6358                           ;main.c: 325: switch (msgtype) {
  6359  000DFA  D064               	goto	l19400
  6360                           	line	326
  6361                           ;main.c: 326: case 11:
  6362                           	
  6363  000DFC                     l3666:; BSR set to: 1
  6364                           
  6365                           	line	328
  6366                           	
  6367  000DFC                     l19392:; BSR set to: 1
  6368                           
  6369                           ;main.c: 327: {
  6370                           ;main.c: 328: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  6371  000DFC  0101               	movlb	1	; () banked
  6372  000DFE  0E01               	movlw	high(main@t1thread_data)
  6373  000E00  0100               	movlb	0	; () banked
  6374  000E02  0100               	movlb	0	; () banked
  6375  000E04  6FBA               	movwf	((?_timer1_lthread+1))&0ffh
  6376  000E06  0101               	movlb	1	; () banked
  6377  000E08  0EC4               	movlw	low(main@t1thread_data)
  6378  000E0A  0100               	movlb	0	; () banked
  6379  000E0C  6FB9               	movwf	((?_timer1_lthread))&0ffh
  6380  000E0E  0101               	movlb	1	; () banked
  6381  000E10  0100               	movlb	0	; () banked
  6382  000E12  C1CC  F0BB         	movff	(main@msgtype),0+(?_timer1_lthread+02h)
  6383  000E16  0100               	movlb	0	; () banked
  6384  000E18  0100               	movlb	0	; () banked
  6385  000E1A  6BBC               	clrf	(1+(?_timer1_lthread+02h))&0ffh
  6386  000E1C  0101               	movlb	1	; () banked
  6387  000E1E  0101               	movlb	1	; () banked
  6388  000E20  51CB               	movf	((main@length))&0ffh,w
  6389  000E22  0100               	movlb	0	; () banked
  6390  000E24  0100               	movlb	0	; () banked
  6391  000E26  6FBD               	movwf	(0+(?_timer1_lthread+04h))&0ffh
  6392  000E28  0100               	movlb	0	; () banked
  6393  000E2A  6BBE               	clrf	(1+(?_timer1_lthread+04h))&0ffh
  6394  000E2C  0100               	movlb	0	; () banked
  6395  000E2E  BFBD               	btfsc	(0+(?_timer1_lthread+04h))&0ffh,7
  6396  000E30  07BE               	decf	(1+(?_timer1_lthread+04h))&0ffh
  6397  000E32  0101               	movlb	1	; () banked
  6398  000E34  0E01               	movlw	high(main@msgbuffer)
  6399  000E36  0100               	movlb	0	; () banked
  6400  000E38  0100               	movlb	0	; () banked
  6401  000E3A  6FC0               	movwf	(1+(?_timer1_lthread+06h))&0ffh
  6402  000E3C  0101               	movlb	1	; () banked
  6403  000E3E  0EB4               	movlw	low(main@msgbuffer)
  6404  000E40  0100               	movlb	0	; () banked
  6405  000E42  6FBF               	movwf	(0+(?_timer1_lthread+06h))&0ffh
  6406  000E44  0100               	movlb	0	; () banked
  6407  000E46  EC35  F010         	call	_timer1_lthread	;wreg free
  6408                           	line	329
  6409                           ;main.c: 329: break;
  6410  000E4A  D72D               	goto	l19368
  6411                           	line	331
  6412                           ;main.c: 330: };
  6413                           ;main.c: 331: case 40:
  6414                           	
  6415  000E4C                     l3668:
  6416                           	line	334
  6417                           	
  6418  000E4C                     l19394:
  6419                           ;main.c: 332: {
  6420                           ;main.c: 334: FromMainLow_sendmsg(length, msgtype, (void *) msgbuffer);
  6421  000E4C  C1CB  F1AD         	movff	(main@length),(?_FromMainLow_sendmsg)
  6422  000E50  C1CC  F1AE         	movff	(main@msgtype),0+(?_FromMainLow_sendmsg+01h)
  6423  000E54  0101               	movlb	1	; () banked
  6424  000E56  0E01               	movlw	high(main@msgbuffer)
  6425  000E58  0101               	movlb	1	; () banked
  6426  000E5A  0101               	movlb	1	; () banked
  6427  000E5C  6FB0               	movwf	(1+(?_FromMainLow_sendmsg+02h))&0ffh
  6428  000E5E  0101               	movlb	1	; () banked
  6429  000E60  0EB4               	movlw	low(main@msgbuffer)
  6430  000E62  0101               	movlb	1	; () banked
  6431  000E64  6FAF               	movwf	(0+(?_FromMainLow_sendmsg+02h))&0ffh
  6432  000E66  0101               	movlb	1	; () banked
  6433  000E68  EC09  F010         	call	_FromMainLow_sendmsg	;wreg free
  6434  000E6C  D001               	goto	l19396
  6435                           	line	336
  6436                           ;main.c: 335: };
  6437                           ;main.c: 336: case 30:
  6438                           	
  6439  000E6E                     l3669:
  6440  000E6E  D000               	goto	l19396
  6441                           	line	337
  6442                           	
  6443  000E70                     l3670:
  6444                           	line	339
  6445                           	
  6446  000E70                     l19396:
  6447                           ;main.c: 337: case 31:
  6448                           ;main.c: 338: {
  6449                           ;main.c: 339: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  6450  000E70  0101               	movlb	1	; () banked
  6451  000E72  0E01               	movlw	high(main@uthread_data)
  6452  000E74  0100               	movlb	0	; () banked
  6453  000E76  0100               	movlb	0	; () banked
  6454  000E78  6FBA               	movwf	((?_uart_lthread+1))&0ffh
  6455  000E7A  0101               	movlb	1	; () banked
  6456  000E7C  0EBF               	movlw	low(main@uthread_data)
  6457  000E7E  0100               	movlb	0	; () banked
  6458  000E80  6FB9               	movwf	((?_uart_lthread))&0ffh
  6459  000E82  0101               	movlb	1	; () banked
  6460  000E84  0100               	movlb	0	; () banked
  6461  000E86  C1CC  F0BB         	movff	(main@msgtype),0+(?_uart_lthread+02h)
  6462  000E8A  0100               	movlb	0	; () banked
  6463  000E8C  0100               	movlb	0	; () banked
  6464  000E8E  6BBC               	clrf	(1+(?_uart_lthread+02h))&0ffh
  6465  000E90  0101               	movlb	1	; () banked
  6466  000E92  0101               	movlb	1	; () banked
  6467  000E94  51CB               	movf	((main@length))&0ffh,w
  6468  000E96  0100               	movlb	0	; () banked
  6469  000E98  0100               	movlb	0	; () banked
  6470  000E9A  6FBD               	movwf	(0+(?_uart_lthread+04h))&0ffh
  6471  000E9C  0100               	movlb	0	; () banked
  6472  000E9E  6BBE               	clrf	(1+(?_uart_lthread+04h))&0ffh
  6473  000EA0  0100               	movlb	0	; () banked
  6474  000EA2  BFBD               	btfsc	(0+(?_uart_lthread+04h))&0ffh,7
  6475  000EA4  07BE               	decf	(1+(?_uart_lthread+04h))&0ffh
  6476  000EA6  0101               	movlb	1	; () banked
  6477  000EA8  0E01               	movlw	high(main@msgbuffer)
  6478  000EAA  0100               	movlb	0	; () banked
  6479  000EAC  0100               	movlb	0	; () banked
  6480  000EAE  6FC0               	movwf	(1+(?_uart_lthread+06h))&0ffh
  6481  000EB0  0101               	movlb	1	; () banked
  6482  000EB2  0EB4               	movlw	low(main@msgbuffer)
  6483  000EB4  0100               	movlb	0	; () banked
  6484  000EB6  6FBF               	movwf	(0+(?_uart_lthread+06h))&0ffh
  6485  000EB8  0100               	movlb	0	; () banked
  6486  000EBA  EC27  F00E         	call	_uart_lthread	;wreg free
  6487                           	line	340
  6488                           ;main.c: 340: break;
  6489  000EBE  D6F3               	goto	l19368
  6490                           	line	342
  6491                           ;main.c: 341: };
  6492                           ;main.c: 342: default:
  6493                           	
  6494  000EC0                     l3671:
  6495                           	line	345
  6496                           ;main.c: 343: {
  6497                           ;main.c: 345: break;
  6498  000EC0  D6F2               	goto	l19368
  6499                           	line	347
  6500                           	
  6501  000EC2                     l19398:
  6502                           ;main.c: 346: };
  6503                           ;main.c: 347: };
  6504  000EC2  D6F1               	goto	l19368
  6505                           	line	325
  6506                           	
  6507  000EC4                     l3665:
  6508                           	
  6509  000EC4                     l19400:
  6510  000EC4  0101               	movlb	1	; () banked
  6511  000EC6  0101               	movlb	1	; () banked
  6512  000EC8  51CC               	movf	((main@msgtype))&0ffh,w
  6513                           	; Switch size 1, requested type "space"
  6514                           ; Number of cases is 4, Range of values is 11 to 40
  6515                           ; switch strategies available:
  6516                           ; Name         Instructions Cycles
  6517                           ; simple_byte           13     7 (average)
  6518                           ;	Chosen strategy is simple_byte
  6519                           
  6520  000ECA  0A0B               	xorlw	11^0	; case 11
  6521  000ECC  B4D8               	skipnz
  6522  000ECE  D796               	goto	l19392
  6523  000ED0  0A15               	xorlw	30^11	; case 30
  6524  000ED2  B4D8               	skipnz
  6525  000ED4  D7CD               	goto	l19396
  6526  000ED6  0A01               	xorlw	31^30	; case 31
  6527  000ED8  B4D8               	skipnz
  6528  000EDA  D7CA               	goto	l19396
  6529  000EDC  0A37               	xorlw	40^31	; case 40
  6530  000EDE  B4D8               	skipnz
  6531  000EE0  D7B5               	goto	l19394
  6532  000EE2  D6E1               	goto	l19368
  6533                           
  6534                           	line	347
  6535                           	
  6536  000EE4                     l3667:; BSR set to: 1
  6537                           
  6538  000EE4  D6E0               	goto	l19368
  6539                           	line	348
  6540                           	
  6541  000EE6                     l3664:; BSR set to: 1
  6542                           
  6543  000EE6  D6DF               	goto	l19368
  6544                           	line	349
  6545                           	
  6546  000EE8                     l3672:; BSR set to: 1
  6547                           
  6548                           	line	226
  6549  000EE8  D6DE               	goto	l19368
  6550                           	
  6551  000EEA                     l3673:; BSR set to: 1
  6552                           
  6553                           	line	351
  6554                           	
  6555  000EEA                     l3674:; BSR set to: 1
  6556                           
  6557                           	global	start
  6558  000EEA  EF69  F000         	goto	start
  6559                           	opt stack 0
  6560                           GLOBAL	__end_of_main
  6561  000EEE                     	__end_of_main:
  6562                           	signat	_main,88
  6563                           	global	_enable_interrupts
  6564                           
  6565 ;; *************** function _enable_interrupts *****************
  6566 ;; Defined at:
  6567 ;;		line 14 in file "../src/interrupts.c"
  6568 ;; Parameters:    Size  Location     Type
  6569 ;;		None
  6570 ;; Auto vars:     Size  Location     Type
  6571 ;;		None
  6572 ;; Return value:  Size  Location     Type
  6573 ;;		None               void
  6574 ;; Registers used:
  6575 ;;		None
  6576 ;; Tracked objects:
  6577 ;;		On entry : 0/0
  6578 ;;		On exit  : 0/0
  6579 ;;		Unchanged: 0/0
  6580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6581 ;;      Params:         0       0       0       0       0
  6582 ;;      Locals:         0       0       0       0       0
  6583 ;;      Temps:          0       0       0       0       0
  6584 ;;      Totals:         0       0       0       0       0
  6585 ;;Total ram usage:        0 bytes
  6586 ;; Hardware stack levels used:    1
  6587 ;; Hardware stack levels required when called:   11
  6588 ;; This function calls:
  6589 ;;		Nothing
  6590 ;; This function is called by:
  6591 ;;		_main
  6592 ;; This function uses a non-reentrant model
  6593 ;;
  6594                           psect	text1,class=CODE,space=0,reloc=2
  6595                           global __ptext1
  6596  0021B8                     __ptext1:
  6597                           psect	text1
  6598                           	file	"../src/interrupts.c"
  6599                           	line	14
  6600                           	global	__size_of_enable_interrupts
  6601  0000                     	__size_of_enable_interrupts	equ	__end_of_enable_interrupts-_enable_interrupts
  6602                           	
  6603  0021B8                     _enable_interrupts:; BSR set to: 1
  6604                           
  6605                           	opt	stack 19
  6606                           	line	17
  6607                           	
  6608  0021B8                     l18322:
  6609                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  6610  0021B8  8ED0               	bsf	((c:4048)),c,7	;volatile
  6611                           	line	18
  6612                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  6613  0021BA  8EF2               	bsf	((c:4082)),c,7	;volatile
  6614                           	line	19
  6615                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  6616  0021BC  8CF2               	bsf	((c:4082)),c,6	;volatile
  6617                           	line	20
  6618                           	
  6619  0021BE                     l1799:
  6620  0021BE  0012               	return
  6621                           	opt stack 0
  6622                           GLOBAL	__end_of_enable_interrupts
  6623  0021C0                     	__end_of_enable_interrupts:
  6624                           	signat	_enable_interrupts,88
  6625                           	global	_init_uart_recv
  6626                           
  6627 ;; *************** function _init_uart_recv *****************
  6628 ;; Defined at:
  6629 ;;		line 31 in file "../src/my_uart.c"
  6630 ;; Parameters:    Size  Location     Type
  6631 ;;  uc              2   57[BANK0 ] PTR struct __uart_comm
  6632 ;;		 -> main@uc(5), 
  6633 ;; Auto vars:     Size  Location     Type
  6634 ;;		None
  6635 ;; Return value:  Size  Location     Type
  6636 ;;		None               void
  6637 ;; Registers used:
  6638 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6639 ;; Tracked objects:
  6640 ;;		On entry : 0/0
  6641 ;;		On exit  : 0/0
  6642 ;;		Unchanged: 0/0
  6643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6644 ;;      Params:         0       2       0       0       0
  6645 ;;      Locals:         0       0       0       0       0
  6646 ;;      Temps:          0       0       0       0       0
  6647 ;;      Totals:         0       2       0       0       0
  6648 ;;Total ram usage:        2 bytes
  6649 ;; Hardware stack levels used:    1
  6650 ;; Hardware stack levels required when called:   11
  6651 ;; This function calls:
  6652 ;;		Nothing
  6653 ;; This function is called by:
  6654 ;;		_main
  6655 ;; This function uses a non-reentrant model
  6656 ;;
  6657                           psect	text2,class=CODE,space=0,reloc=2
  6658                           global __ptext2
  6659  00211C                     __ptext2:
  6660                           psect	text2
  6661                           	file	"../src/my_uart.c"
  6662                           	line	31
  6663                           	global	__size_of_init_uart_recv
  6664  0000                     	__size_of_init_uart_recv	equ	__end_of_init_uart_recv-_init_uart_recv
  6665                           	
  6666  00211C                     _init_uart_recv:
  6667                           	opt	stack 19
  6668                           	line	32
  6669                           	
  6670  00211C                     l18474:
  6671                           ;my_uart.c: 32: uc_ptr = uc;
  6672  00211C  C0B9  F04A         	movff	(init_uart_recv@uc),(c:_uc_ptr)
  6673  002120  C0BA  F04B         	movff	(init_uart_recv@uc+1),(c:_uc_ptr+1)
  6674                           	line	33
  6675                           	
  6676  002124                     l18476:
  6677                           ;my_uart.c: 33: uc_ptr->buflen = 0;
  6678  002124  EE20 F004          	lfsr	2,04h
  6679  002128  504A               	movf	((c:_uc_ptr)),c,w
  6680  00212A  26D9               	addwf	fsr2l
  6681  00212C  504B               	movf	((c:_uc_ptr+1)),c,w
  6682  00212E  22DA               	addwfc	fsr2h
  6683  002130  0E00               	movlw	low(0)
  6684  002132  6EDF               	movwf	indf2
  6685                           	line	34
  6686                           	
  6687  002134                     l9264:
  6688  002134  0012               	return
  6689                           	opt stack 0
  6690                           GLOBAL	__end_of_init_uart_recv
  6691  002136                     	__end_of_init_uart_recv:
  6692                           	signat	_init_uart_recv,4216
  6693                           	global	_init_i2c
  6694                           
  6695 ;; *************** function _init_i2c *****************
  6696 ;; Defined at:
  6697 ;;		line 504 in file "../src/my_i2c.c"
  6698 ;; Parameters:    Size  Location     Type
  6699 ;;  ic              2   57[BANK0 ] PTR struct __i2c_comm
  6700 ;;		 -> main@ic(29), 
  6701 ;; Auto vars:     Size  Location     Type
  6702 ;;		None
  6703 ;; Return value:  Size  Location     Type
  6704 ;;		None               void
  6705 ;; Registers used:
  6706 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6707 ;; Tracked objects:
  6708 ;;		On entry : 0/0
  6709 ;;		On exit  : 0/0
  6710 ;;		Unchanged: 0/0
  6711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6712 ;;      Params:         0       2       0       0       0
  6713 ;;      Locals:         0       0       0       0       0
  6714 ;;      Temps:          0       0       0       0       0
  6715 ;;      Totals:         0       2       0       0       0
  6716 ;;Total ram usage:        2 bytes
  6717 ;; Hardware stack levels used:    1
  6718 ;; Hardware stack levels required when called:   11
  6719 ;; This function calls:
  6720 ;;		Nothing
  6721 ;; This function is called by:
  6722 ;;		_main
  6723 ;; This function uses a non-reentrant model
  6724 ;;
  6725                           psect	text3,class=CODE,space=0,reloc=2
  6726                           global __ptext3
  6727  001C9C                     __ptext3:
  6728                           psect	text3
  6729                           	file	"../src/my_i2c.c"
  6730                           	line	504
  6731                           	global	__size_of_init_i2c
  6732  0000                     	__size_of_init_i2c	equ	__end_of_init_i2c-_init_i2c
  6733                           	
  6734  001C9C                     _init_i2c:
  6735                           	opt	stack 19
  6736                           	line	505
  6737                           	
  6738  001C9C                     l18478:
  6739                           ;my_i2c.c: 505: ic_ptr = ic;
  6740  001C9C  C0B9  F048         	movff	(init_i2c@ic),(c:_ic_ptr)
  6741  001CA0  C0BA  F049         	movff	(init_i2c@ic+1),(c:_ic_ptr+1)
  6742                           	line	506
  6743                           	
  6744  001CA4                     l18480:
  6745                           ;my_i2c.c: 506: ic_ptr->buflen = 0;
  6746  001CA4  EE20 F00A          	lfsr	2,0Ah
  6747  001CA8  5048               	movf	((c:_ic_ptr)),c,w
  6748  001CAA  26D9               	addwf	fsr2l
  6749  001CAC  5049               	movf	((c:_ic_ptr+1)),c,w
  6750  001CAE  22DA               	addwfc	fsr2h
  6751  001CB0  0E00               	movlw	low(0)
  6752  001CB2  6EDF               	movwf	indf2
  6753                           	line	507
  6754                           ;my_i2c.c: 507: ic_ptr->event_count = 0;
  6755  001CB4  EE20 F00C          	lfsr	2,0Ch
  6756  001CB8  5048               	movf	((c:_ic_ptr)),c,w
  6757  001CBA  26D9               	addwf	fsr2l
  6758  001CBC  5049               	movf	((c:_ic_ptr+1)),c,w
  6759  001CBE  22DA               	addwfc	fsr2h
  6760  001CC0  0E00               	movlw	low(0)
  6761  001CC2  6EDF               	movwf	indf2
  6762                           	line	508
  6763                           ;my_i2c.c: 508: ic_ptr->status = 0x5;
  6764  001CC4  EE20 F00D          	lfsr	2,0Dh
  6765  001CC8  5048               	movf	((c:_ic_ptr)),c,w
  6766  001CCA  26D9               	addwf	fsr2l
  6767  001CCC  5049               	movf	((c:_ic_ptr+1)),c,w
  6768  001CCE  22DA               	addwfc	fsr2h
  6769  001CD0  0E05               	movlw	low(05h)
  6770  001CD2  6EDF               	movwf	indf2
  6771                           	line	509
  6772                           ;my_i2c.c: 509: ic_ptr->error_count = 0;
  6773  001CD4  EE20 F00F          	lfsr	2,0Fh
  6774  001CD8  5048               	movf	((c:_ic_ptr)),c,w
  6775  001CDA  26D9               	addwf	fsr2l
  6776  001CDC  5049               	movf	((c:_ic_ptr+1)),c,w
  6777  001CDE  22DA               	addwfc	fsr2h
  6778  001CE0  0E00               	movlw	low(0)
  6779  001CE2  6EDF               	movwf	indf2
  6780                           	line	510
  6781                           	
  6782  001CE4                     l7460:
  6783  001CE4  0012               	return
  6784                           	opt stack 0
  6785                           GLOBAL	__end_of_init_i2c
  6786  001CE6                     	__end_of_init_i2c:
  6787                           	signat	_init_i2c,4216
  6788                           	global	_init_timer1_lthread
  6789                           
  6790 ;; *************** function _init_timer1_lthread *****************
  6791 ;; Defined at:
  6792 ;;		line 9 in file "../src/timer1_thread.c"
  6793 ;; Parameters:    Size  Location     Type
  6794 ;;  tptr            2   62[BANK0 ] PTR struct __timer1_thre
  6795 ;;		 -> main@t1thread_data(2), 
  6796 ;; Auto vars:     Size  Location     Type
  6797 ;;		None
  6798 ;; Return value:  Size  Location     Type
  6799 ;;		None               void
  6800 ;; Registers used:
  6801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6802 ;; Tracked objects:
  6803 ;;		On entry : 0/0
  6804 ;;		On exit  : 0/0
  6805 ;;		Unchanged: 0/0
  6806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6807 ;;      Params:         0       2       0       0       0
  6808 ;;      Locals:         0       0       0       0       0
  6809 ;;      Temps:          0       3       0       0       0
  6810 ;;      Totals:         0       5       0       0       0
  6811 ;;Total ram usage:        5 bytes
  6812 ;; Hardware stack levels used:    1
  6813 ;; Hardware stack levels required when called:   12
  6814 ;; This function calls:
  6815 ;;		_OpenADC
  6816 ;;		_SetChanADC
  6817 ;; This function is called by:
  6818 ;;		_main
  6819 ;; This function uses a non-reentrant model
  6820 ;;
  6821                           psect	text4,class=CODE,space=0,reloc=2
  6822                           global __ptext4
  6823  001ADE                     __ptext4:
  6824                           psect	text4
  6825                           	file	"../src/timer1_thread.c"
  6826                           	line	9
  6827                           	global	__size_of_init_timer1_lthread
  6828  0000                     	__size_of_init_timer1_lthread	equ	__end_of_init_timer1_lthread-_init_timer1_lthread
  6829                           	
  6830  001ADE                     _init_timer1_lthread:
  6831                           	opt	stack 18
  6832                           	line	15
  6833                           	
  6834  001ADE                     l18482:
  6835                           ;timer1_thread.c: 12: OpenADC(0b10011111 & 0b11111111 & 0b11110001,
  6836                           ;timer1_thread.c: 13: 0b10000111 & 0b10001111 &
  6837                           ;timer1_thread.c: 14: 0b01111111 & 0b11111110 &
  6838                           ;timer1_thread.c: 15: 0b11111101, 0b1011);
  6839  001ADE  0100               	movlb	0	; () banked
  6840  001AE0  6FC0               	movwf	(??_init_timer1_lthread+0+0)&0ffh
  6841  001AE2  0E91               	movlw	low(091h)
  6842  001AE4  0100               	movlb	0	; () banked
  6843  001AE6  0100               	movlb	0	; () banked
  6844  001AE8  6FB9               	movwf	((?_OpenADC))&0ffh
  6845  001AEA  0100               	movlb	0	; () banked
  6846  001AEC  51C0               	movf	(??_init_timer1_lthread+0+0)&0ffh,w
  6847  001AEE  0100               	movlb	0	; () banked
  6848  001AF0  6FC1               	movwf	(??_init_timer1_lthread+1+0)&0ffh
  6849  001AF2  0E04               	movlw	low(04h)
  6850  001AF4  0100               	movlb	0	; () banked
  6851  001AF6  0100               	movlb	0	; () banked
  6852  001AF8  6FBA               	movwf	(0+(?_OpenADC+01h))&0ffh
  6853  001AFA  0100               	movlb	0	; () banked
  6854  001AFC  51C1               	movf	(??_init_timer1_lthread+1+0)&0ffh,w
  6855  001AFE  0100               	movlb	0	; () banked
  6856  001B00  6FC2               	movwf	(??_init_timer1_lthread+2+0)&0ffh
  6857  001B02  0E0B               	movlw	low(0Bh)
  6858  001B04  0100               	movlb	0	; () banked
  6859  001B06  0100               	movlb	0	; () banked
  6860  001B08  6FBB               	movwf	(0+(?_OpenADC+02h))&0ffh
  6861  001B0A  0100               	movlb	0	; () banked
  6862  001B0C  51C2               	movf	(??_init_timer1_lthread+2+0)&0ffh,w
  6863  001B0E  0100               	movlb	0	; () banked
  6864  001B10  ECBB  F00C         	call	_OpenADC	;wreg free
  6865                           	line	16
  6866                           ;timer1_thread.c: 16: SetChanADC(0b10000111);
  6867  001B14  0100               	movlb	0	; () banked
  6868  001B16  6FC0               	movwf	(??_init_timer1_lthread+0+0)&0ffh
  6869  001B18  0E87               	movlw	low(087h)
  6870  001B1A  0100               	movlb	0	; () banked
  6871  001B1C  0100               	movlb	0	; () banked
  6872  001B1E  6FB9               	movwf	((?_SetChanADC))&0ffh
  6873  001B20  0100               	movlb	0	; () banked
  6874  001B22  51C0               	movf	(??_init_timer1_lthread+0+0)&0ffh,w
  6875  001B24  0100               	movlb	0	; () banked
  6876  001B26  EC80  F010         	call	_SetChanADC	;wreg free
  6877                           	line	18
  6878                           	
  6879  001B2A                     l18484:
  6880                           ;timer1_thread.c: 18: (PIR1bits.ADIF=0,INTCONbits.PEIE=1,PIE1bits.ADIE=1);
  6881  001B2A  9C9E               	bcf	((c:3998)),c,6	;volatile
  6882                           	
  6883  001B2C                     l18486:
  6884  001B2C  8CF2               	bsf	((c:4082)),c,6	;volatile
  6885                           	
  6886  001B2E                     l18488:
  6887  001B2E  8C9D               	bsf	((c:3997)),c,6	;volatile
  6888                           	line	20
  6889                           	
  6890  001B30                     l18490:
  6891                           ;timer1_thread.c: 20: tptr->timerval = 0;
  6892  001B30  C0BE  FFD9         	movff	(init_timer1_lthread@tptr),fsr2l
  6893  001B34  C0BF  FFDA         	movff	(init_timer1_lthread@tptr+1),fsr2h
  6894  001B38  0E00               	movlw	low(0)
  6895  001B3A  6EDE               	movwf	postinc2
  6896  001B3C  0E00               	movlw	high(0)
  6897  001B3E  6EDD               	movwf	postdec2
  6898                           	line	21
  6899                           	
  6900  001B40                     l12847:
  6901  001B40  0012               	return
  6902                           	opt stack 0
  6903                           GLOBAL	__end_of_init_timer1_lthread
  6904  001B42                     	__end_of_init_timer1_lthread:
  6905                           	signat	_init_timer1_lthread,4216
  6906                           	global	_init_queues
  6907                           
  6908 ;; *************** function _init_queues *****************
  6909 ;; Defined at:
  6910 ;;		line 194 in file "../src/messages.c"
  6911 ;; Parameters:    Size  Location     Type
  6912 ;;		None
  6913 ;; Auto vars:     Size  Location     Type
  6914 ;;		None
  6915 ;; Return value:  Size  Location     Type
  6916 ;;		None               void
  6917 ;; Registers used:
  6918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6919 ;; Tracked objects:
  6920 ;;		On entry : 0/0
  6921 ;;		On exit  : 0/0
  6922 ;;		Unchanged: 0/0
  6923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6924 ;;      Params:         0       0       0       0       0
  6925 ;;      Locals:         0       0       0       0       0
  6926 ;;      Temps:          0       1       0       0       0
  6927 ;;      Totals:         0       1       0       0       0
  6928 ;;Total ram usage:        1 bytes
  6929 ;; Hardware stack levels used:    1
  6930 ;; Hardware stack levels required when called:   12
  6931 ;; This function calls:
  6932 ;;		_init_queue
  6933 ;; This function is called by:
  6934 ;;		_main
  6935 ;; This function uses a non-reentrant model
  6936 ;;
  6937                           psect	text5,class=CODE,space=0,reloc=2
  6938                           global __ptext5
  6939  001A70                     __ptext5:
  6940                           psect	text5
  6941                           	file	"../src/messages.c"
  6942                           	line	194
  6943                           	global	__size_of_init_queues
  6944  0000                     	__size_of_init_queues	equ	__end_of_init_queues-_init_queues
  6945                           	
  6946  001A70                     _init_queues:
  6947                           	opt	stack 18
  6948                           	line	195
  6949                           	
  6950  001A70                     l18492:
  6951                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  6952  001A70  0100               	movlb	0	; () banked
  6953  001A72  6FBD               	movwf	(??_init_queues+0+0)&0ffh
  6954  001A74  0E00               	movlw	low(0)
  6955  001A76  6E45               	movwf	((c:_MQ_Main_Willing_to_block)),c
  6956  001A78  0100               	movlb	0	; () banked
  6957  001A7A  51BD               	movf	(??_init_queues+0+0)&0ffh,w
  6958                           	line	196
  6959                           	
  6960  001A7C                     l18494:; BSR set to: 0
  6961                           
  6962                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  6963  001A7C  0101               	movlb	1	; () banked
  6964  001A7E  0E01               	movlw	high(_ToMainLow_MQ)
  6965  001A80  0100               	movlb	0	; () banked
  6966  001A82  0100               	movlb	0	; () banked
  6967  001A84  6FBA               	movwf	((?_init_queue+1))&0ffh
  6968  001A86  0101               	movlb	1	; () banked
  6969  001A88  0E6C               	movlw	low(_ToMainLow_MQ)
  6970  001A8A  0100               	movlb	0	; () banked
  6971  001A8C  6FB9               	movwf	((?_init_queue))&0ffh
  6972  001A8E  0100               	movlb	0	; () banked
  6973  001A90  EC78  F00C         	call	_init_queue	;wreg free
  6974                           	line	197
  6975                           	
  6976  001A94                     l18496:
  6977                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  6978  001A94  0101               	movlb	1	; () banked
  6979  001A96  0E01               	movlw	high(_ToMainHigh_MQ)
  6980  001A98  0100               	movlb	0	; () banked
  6981  001A9A  0100               	movlb	0	; () banked
  6982  001A9C  6FBA               	movwf	((?_init_queue+1))&0ffh
  6983  001A9E  0101               	movlb	1	; () banked
  6984  001AA0  0E36               	movlw	low(_ToMainHigh_MQ)
  6985  001AA2  0100               	movlb	0	; () banked
  6986  001AA4  6FB9               	movwf	((?_init_queue))&0ffh
  6987  001AA6  0100               	movlb	0	; () banked
  6988  001AA8  EC78  F00C         	call	_init_queue	;wreg free
  6989                           	line	198
  6990                           	
  6991  001AAC                     l18498:
  6992                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  6993  001AAC  0101               	movlb	1	; () banked
  6994  001AAE  0E01               	movlw	high(_FromMainLow_MQ)
  6995  001AB0  0100               	movlb	0	; () banked
  6996  001AB2  0100               	movlb	0	; () banked
  6997  001AB4  6FBA               	movwf	((?_init_queue+1))&0ffh
  6998  001AB6  0101               	movlb	1	; () banked
  6999  001AB8  0E00               	movlw	low(_FromMainLow_MQ)
  7000  001ABA  0100               	movlb	0	; () banked
  7001  001ABC  6FB9               	movwf	((?_init_queue))&0ffh
  7002  001ABE  0100               	movlb	0	; () banked
  7003  001AC0  EC78  F00C         	call	_init_queue	;wreg free
  7004                           	line	199
  7005                           	
  7006  001AC4                     l18500:
  7007                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  7008  001AC4  0102               	movlb	2	; () banked
  7009  001AC6  0E02               	movlw	high(_FromMainHigh_MQ)
  7010  001AC8  0100               	movlb	0	; () banked
  7011  001ACA  0100               	movlb	0	; () banked
  7012  001ACC  6FBA               	movwf	((?_init_queue+1))&0ffh
  7013  001ACE  0102               	movlb	2	; () banked
  7014  001AD0  0E00               	movlw	low(_FromMainHigh_MQ)
  7015  001AD2  0100               	movlb	0	; () banked
  7016  001AD4  6FB9               	movwf	((?_init_queue))&0ffh
  7017  001AD6  0100               	movlb	0	; () banked
  7018  001AD8  EC78  F00C         	call	_init_queue	;wreg free
  7019                           	line	200
  7020                           	
  7021  001ADC                     l5520:
  7022  001ADC  0012               	return
  7023                           	opt stack 0
  7024                           GLOBAL	__end_of_init_queues
  7025  001ADE                     	__end_of_init_queues:
  7026                           	signat	_init_queues,88
  7027                           	global	_OpenTimer1
  7028                           
  7029 ;; *************** function _OpenTimer1 *****************
  7030 ;; Defined at:
  7031 ;;		line 17 in file "plib/Timers/t1open.c"
  7032 ;; Parameters:    Size  Location     Type
  7033 ;;  config          1   57[BANK0 ] unsigned char 
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;		None
  7036 ;; Return value:  Size  Location     Type
  7037 ;;		None               void
  7038 ;; Registers used:
  7039 ;;		wreg, status,2, status,0
  7040 ;; Tracked objects:
  7041 ;;		On entry : 0/0
  7042 ;;		On exit  : 0/0
  7043 ;;		Unchanged: 0/0
  7044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7045 ;;      Params:         0       1       0       0       0
  7046 ;;      Locals:         0       0       0       0       0
  7047 ;;      Temps:          0       0       0       0       0
  7048 ;;      Totals:         0       1       0       0       0
  7049 ;;Total ram usage:        1 bytes
  7050 ;; Hardware stack levels used:    1
  7051 ;; Hardware stack levels required when called:   11
  7052 ;; This function calls:
  7053 ;;		Nothing
  7054 ;; This function is called by:
  7055 ;;		_main
  7056 ;; This function uses a non-reentrant model
  7057 ;;
  7058                           psect	text6,class=CODE,space=0,reloc=2
  7059                           global __ptext6
  7060  001E02                     __ptext6:
  7061                           psect	text6
  7062                           	file	"plib/Timers/t1open.c"
  7063                           	line	17
  7064                           	global	__size_of_OpenTimer1
  7065  0000                     	__size_of_OpenTimer1	equ	__end_of_OpenTimer1-_OpenTimer1
  7066                           	
  7067  001E02                     _OpenTimer1:
  7068                           	opt	stack 19
  7069                           	line	18
  7070                           	
  7071  001E02                     l18502:
  7072  001E02  0100               	movlb	0	; () banked
  7073  001E04  0100               	movlb	0	; () banked
  7074  001E06  51B9               	movf	((OpenTimer1@config))&0ffh,w
  7075  001E08  0B7E               	andlw	low(07Eh)
  7076  001E0A  6ECD               	movwf	((c:4045)),c	;volatile
  7077                           	line	21
  7078                           	
  7079  001E0C                     l18504:; BSR set to: 0
  7080                           
  7081  001E0C  0100               	movlb	0	; () banked
  7082                           	
  7083  001E0E  0100               	movlb	0	; () banked
  7084  001E10  ADB9               	btfss	((OpenTimer1@config))&0ffh,(6)&7
  7085  001E12  D001               	goto	u1251
  7086  001E14  D001               	goto	u1250
  7087  001E16                     u1251:
  7088  001E16  D002               	goto	l16509
  7089  001E18                     u1250:
  7090                           	line	22
  7091                           	
  7092  001E18                     l18506:; BSR set to: 0
  7093                           
  7094  001E18  8ECD               	bsf	((c:4045)),c,7	;volatile
  7095  001E1A  D002               	goto	l18508
  7096                           	line	23
  7097                           	
  7098  001E1C                     l16509:; BSR set to: 0
  7099                           
  7100                           	line	24
  7101  001E1C  9ECD               	bcf	((c:4045)),c,7	;volatile
  7102  001E1E  D000               	goto	l18508
  7103                           	
  7104  001E20                     l16510:; BSR set to: 0
  7105                           
  7106                           	line	26
  7107                           	
  7108  001E20                     l18508:; BSR set to: 0
  7109                           
  7110  001E20  0E00               	movlw	low(0)
  7111  001E22  6ECF               	movwf	((c:4047)),c	;volatile
  7112                           	line	27
  7113  001E24  0E00               	movlw	low(0)
  7114  001E26  6ECE               	movwf	((c:4046)),c	;volatile
  7115                           	line	28
  7116                           	
  7117  001E28                     l18510:; BSR set to: 0
  7118                           
  7119  001E28  909E               	bcf	((c:3998)),c,0	;volatile
  7120                           	line	30
  7121                           	
  7122  001E2A                     l18512:; BSR set to: 0
  7123                           
  7124  001E2A  0100               	movlb	0	; () banked
  7125                           	
  7126  001E2C  0100               	movlb	0	; () banked
  7127  001E2E  AFB9               	btfss	((OpenTimer1@config))&0ffh,(7)&7
  7128  001E30  D001               	goto	u1261
  7129  001E32  D001               	goto	u1260
  7130  001E34                     u1261:
  7131  001E34  D002               	goto	l16511
  7132  001E36                     u1260:
  7133                           	line	31
  7134                           	
  7135  001E36                     l18514:; BSR set to: 0
  7136                           
  7137  001E36  809D               	bsf	((c:3997)),c,0	;volatile
  7138  001E38  D001               	goto	l16512
  7139                           	line	32
  7140                           	
  7141  001E3A                     l16511:; BSR set to: 0
  7142                           
  7143                           	line	33
  7144  001E3A  909D               	bcf	((c:3997)),c,0	;volatile
  7145                           	
  7146  001E3C                     l16512:; BSR set to: 0
  7147                           
  7148                           	line	35
  7149  001E3C  80CD               	bsf	((c:4045)),c,0	;volatile
  7150                           	line	36
  7151                           	
  7152  001E3E                     l16513:; BSR set to: 0
  7153                           
  7154  001E3E  0012               	return
  7155                           	opt stack 0
  7156                           GLOBAL	__end_of_OpenTimer1
  7157  001E40                     	__end_of_OpenTimer1:
  7158                           	signat	_OpenTimer1,4216
  7159                           	global	_i2c_configure_slave
  7160                           
  7161 ;; *************** function _i2c_configure_slave *****************
  7162 ;; Defined at:
  7163 ;;		line 515 in file "../src/my_i2c.c"
  7164 ;; Parameters:    Size  Location     Type
  7165 ;;  addr            1   57[BANK0 ] unsigned char 
  7166 ;; Auto vars:     Size  Location     Type
  7167 ;;		None
  7168 ;; Return value:  Size  Location     Type
  7169 ;;		None               void
  7170 ;; Registers used:
  7171 ;;		wreg, status,2, status,0
  7172 ;; Tracked objects:
  7173 ;;		On entry : 0/0
  7174 ;;		On exit  : 0/0
  7175 ;;		Unchanged: 0/0
  7176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7177 ;;      Params:         0       1       0       0       0
  7178 ;;      Locals:         0       0       0       0       0
  7179 ;;      Temps:          0       1       0       0       0
  7180 ;;      Totals:         0       2       0       0       0
  7181 ;;Total ram usage:        2 bytes
  7182 ;; Hardware stack levels used:    1
  7183 ;; Hardware stack levels required when called:   11
  7184 ;; This function calls:
  7185 ;;		Nothing
  7186 ;; This function is called by:
  7187 ;;		_main
  7188 ;; This function uses a non-reentrant model
  7189 ;;
  7190                           psect	text7,class=CODE,space=0,reloc=2
  7191                           global __ptext7
  7192  001EEE                     __ptext7:
  7193                           psect	text7
  7194                           	file	"../src/my_i2c.c"
  7195                           	line	515
  7196                           	global	__size_of_i2c_configure_slave
  7197  0000                     	__size_of_i2c_configure_slave	equ	__end_of_i2c_configure_slave-_i2c_configure_slave
  7198                           	
  7199  001EEE                     _i2c_configure_slave:; BSR set to: 0
  7200                           
  7201                           	opt	stack 19
  7202                           	line	516
  7203                           	
  7204  001EEE                     l18516:
  7205                           ;my_i2c.c: 516: i2cMode = 1;
  7206  001EEE  0100               	movlb	0	; () banked
  7207  001EF0  6FBA               	movwf	(??_i2c_configure_slave+0+0)&0ffh
  7208  001EF2  0E01               	movlw	low(01h)
  7209  001EF4  0100               	movlb	0	; () banked
  7210  001EF6  0100               	movlb	0	; () banked
  7211  001EF8  6FC6               	movwf	((_i2cMode))&0ffh
  7212  001EFA  0100               	movlb	0	; () banked
  7213  001EFC  51BA               	movf	(??_i2c_configure_slave+0+0)&0ffh,w
  7214                           	line	519
  7215                           	
  7216  001EFE                     l18518:; BSR set to: 0
  7217                           
  7218                           ;my_i2c.c: 519: TRISCbits.TRISC3 = 1;
  7219  001EFE  8694               	bsf	((c:3988)),c,3	;volatile
  7220                           	line	520
  7221                           	
  7222  001F00                     l18520:; BSR set to: 0
  7223                           
  7224                           ;my_i2c.c: 520: TRISCbits.TRISC4 = 1;
  7225  001F00  8894               	bsf	((c:3988)),c,4	;volatile
  7226                           	line	522
  7227                           	
  7228  001F02                     l18522:; BSR set to: 0
  7229                           
  7230                           ;my_i2c.c: 522: SSPADD = addr;
  7231  001F02  C0B9  FFC8         	movff	(i2c_configure_slave@addr),(c:4040)	;volatile
  7232                           	line	524
  7233                           	
  7234  001F06                     l18524:; BSR set to: 0
  7235                           
  7236                           ;my_i2c.c: 524: SSPSTAT = 0x0;
  7237  001F06  0E00               	movlw	low(0)
  7238  001F08  6EC7               	movwf	((c:4039)),c	;volatile
  7239                           	line	525
  7240                           	
  7241  001F0A                     l18526:; BSR set to: 0
  7242                           
  7243                           ;my_i2c.c: 525: SSPCON1 = 0x0;
  7244  001F0A  0E00               	movlw	low(0)
  7245  001F0C  6EC6               	movwf	((c:4038)),c	;volatile
  7246                           	line	526
  7247                           	
  7248  001F0E                     l18528:; BSR set to: 0
  7249                           
  7250                           ;my_i2c.c: 526: SSPCON2 = 0x0;
  7251  001F0E  0E00               	movlw	low(0)
  7252  001F10  6EC5               	movwf	((c:4037)),c	;volatile
  7253                           	line	527
  7254                           	
  7255  001F12                     l18530:; BSR set to: 0
  7256                           
  7257                           ;my_i2c.c: 527: SSPCON1 |= 0x0E;
  7258  001F12  0E0E               	movlw	(0Eh)&0ffh
  7259  001F14  12C6               	iorwf	((c:4038)),c	;volatile
  7260                           	line	528
  7261                           ;my_i2c.c: 528: SSPSTAT |= 0b10000000;
  7262  001F16  8EC7               	bsf	(0+(7/8)+(c:4039)),c,(7)&7	;volatile
  7263                           	line	530
  7264                           	
  7265  001F18                     l18532:; BSR set to: 0
  7266                           
  7267                           ;my_i2c.c: 530: TRISCbits.TRISC3 = 1;
  7268  001F18  8694               	bsf	((c:3988)),c,3	;volatile
  7269                           	line	531
  7270                           	
  7271  001F1A                     l18534:; BSR set to: 0
  7272                           
  7273                           ;my_i2c.c: 531: TRISCbits.TRISC4 = 1;
  7274  001F1A  8894               	bsf	((c:3988)),c,4	;volatile
  7275                           	line	546
  7276                           	
  7277  001F1C                     l18536:; BSR set to: 0
  7278                           
  7279                           ;my_i2c.c: 546: SSPCON2bits.SEN = 1;
  7280  001F1C  80C5               	bsf	((c:4037)),c,0	;volatile
  7281                           	line	547
  7282                           ;my_i2c.c: 547: SSPCON1 |= 0b00100000;
  7283  001F1E  8AC6               	bsf	(0+(5/8)+(c:4038)),c,(5)&7	;volatile
  7284                           	line	549
  7285                           	
  7286  001F20                     l7463:; BSR set to: 0
  7287                           
  7288  001F20  0012               	return
  7289                           	opt stack 0
  7290                           GLOBAL	__end_of_i2c_configure_slave
  7291  001F22                     	__end_of_i2c_configure_slave:
  7292                           	signat	_i2c_configure_slave,4216
  7293                           	global	_OpenUSART
  7294                           
  7295 ;; *************** function _OpenUSART *****************
  7296 ;; Defined at:
  7297 ;;		line 74 in file "plib/USART/uopen.c"
  7298 ;; Parameters:    Size  Location     Type
  7299 ;;  config          1   57[BANK0 ] unsigned char 
  7300 ;;  spbrg           2   58[BANK0 ] unsigned int 
  7301 ;; Auto vars:     Size  Location     Type
  7302 ;;		None
  7303 ;; Return value:  Size  Location     Type
  7304 ;;		None               void
  7305 ;; Registers used:
  7306 ;;		wreg, status,2
  7307 ;; Tracked objects:
  7308 ;;		On entry : 0/0
  7309 ;;		On exit  : 0/0
  7310 ;;		Unchanged: 0/0
  7311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7312 ;;      Params:         0       3       0       0       0
  7313 ;;      Locals:         0       0       0       0       0
  7314 ;;      Temps:          0       0       0       0       0
  7315 ;;      Totals:         0       3       0       0       0
  7316 ;;Total ram usage:        3 bytes
  7317 ;; Hardware stack levels used:    1
  7318 ;; Hardware stack levels required when called:   11
  7319 ;; This function calls:
  7320 ;;		Nothing
  7321 ;; This function is called by:
  7322 ;;		_main
  7323 ;; This function uses a non-reentrant model
  7324 ;;
  7325                           psect	text8,class=CODE,space=0,reloc=2
  7326                           global __ptext8
  7327  0015AA                     __ptext8:
  7328                           psect	text8
  7329                           	file	"plib/USART/uopen.c"
  7330                           	line	74
  7331                           	global	__size_of_OpenUSART
  7332  0000                     	__size_of_OpenUSART	equ	__end_of_OpenUSART-_OpenUSART
  7333                           	
  7334  0015AA                     _OpenUSART:; BSR set to: 0
  7335                           
  7336                           	opt	stack 19
  7337                           	line	75
  7338                           	
  7339  0015AA                     l18538:
  7340  0015AA  0E00               	movlw	low(0)
  7341  0015AC  6EAC               	movwf	((c:4012)),c	;volatile
  7342                           	line	76
  7343  0015AE  0E00               	movlw	low(0)
  7344  0015B0  6EAB               	movwf	((c:4011)),c	;volatile
  7345                           	line	78
  7346                           	
  7347  0015B2                     l18540:
  7348  0015B2  0100               	movlb	0	; () banked
  7349                           	
  7350  0015B4  0100               	movlb	0	; () banked
  7351  0015B6  A1B9               	btfss	((OpenUSART@config))&0ffh,(0)&7
  7352  0015B8  D001               	goto	u1271
  7353  0015BA  D001               	goto	u1270
  7354  0015BC                     u1271:
  7355  0015BC  D001               	goto	l16550
  7356  0015BE                     u1270:
  7357                           	line	79
  7358                           	
  7359  0015BE                     l18542:; BSR set to: 0
  7360                           
  7361  0015BE  88AC               	bsf	((c:4012)),c,4	;volatile
  7362                           	
  7363  0015C0                     l16550:; BSR set to: 0
  7364                           
  7365                           	line	81
  7366  0015C0  0100               	movlb	0	; () banked
  7367                           	
  7368  0015C2  0100               	movlb	0	; () banked
  7369  0015C4  A3B9               	btfss	((OpenUSART@config))&0ffh,(1)&7
  7370  0015C6  D001               	goto	u1281
  7371  0015C8  D001               	goto	u1280
  7372  0015CA                     u1281:
  7373  0015CA  D002               	goto	l16551
  7374  0015CC                     u1280:
  7375                           	line	83
  7376                           	
  7377  0015CC                     l18544:; BSR set to: 0
  7378                           
  7379  0015CC  8CAC               	bsf	((c:4012)),c,6	;volatile
  7380                           	line	84
  7381  0015CE  8CAB               	bsf	((c:4011)),c,6	;volatile
  7382                           	line	85
  7383                           	
  7384  0015D0                     l16551:; BSR set to: 0
  7385                           
  7386                           	line	87
  7387  0015D0  0100               	movlb	0	; () banked
  7388                           	
  7389  0015D2  0100               	movlb	0	; () banked
  7390  0015D4  A5B9               	btfss	((OpenUSART@config))&0ffh,(2)&7
  7391  0015D6  D001               	goto	u1291
  7392  0015D8  D001               	goto	u1290
  7393  0015DA                     u1291:
  7394  0015DA  D001               	goto	l16552
  7395  0015DC                     u1290:
  7396                           	line	88
  7397                           	
  7398  0015DC                     l18546:; BSR set to: 0
  7399                           
  7400  0015DC  8EAC               	bsf	((c:4012)),c,7	;volatile
  7401                           	
  7402  0015DE                     l16552:; BSR set to: 0
  7403                           
  7404                           	line	90
  7405  0015DE  0100               	movlb	0	; () banked
  7406                           	
  7407  0015E0  0100               	movlb	0	; () banked
  7408  0015E2  A7B9               	btfss	((OpenUSART@config))&0ffh,(3)&7
  7409  0015E4  D001               	goto	u1301
  7410  0015E6  D001               	goto	u1300
  7411  0015E8                     u1301:
  7412  0015E8  D002               	goto	l16553
  7413  0015EA                     u1300:
  7414                           	line	91
  7415                           	
  7416  0015EA                     l18548:; BSR set to: 0
  7417                           
  7418  0015EA  88AB               	bsf	((c:4011)),c,4	;volatile
  7419  0015EC  D001               	goto	l16554
  7420                           	line	92
  7421                           	
  7422  0015EE                     l16553:; BSR set to: 0
  7423                           
  7424                           	line	93
  7425  0015EE  8AAB               	bsf	((c:4011)),c,5	;volatile
  7426                           	
  7427  0015F0                     l16554:; BSR set to: 0
  7428                           
  7429                           	line	95
  7430  0015F0  0100               	movlb	0	; () banked
  7431                           	
  7432  0015F2  0100               	movlb	0	; () banked
  7433  0015F4  A9B9               	btfss	((OpenUSART@config))&0ffh,(4)&7
  7434  0015F6  D001               	goto	u1311
  7435  0015F8  D001               	goto	u1310
  7436  0015FA                     u1311:
  7437  0015FA  D001               	goto	l16555
  7438  0015FC                     u1310:
  7439                           	line	96
  7440                           	
  7441  0015FC                     l18550:; BSR set to: 0
  7442                           
  7443  0015FC  84AC               	bsf	((c:4012)),c,2	;volatile
  7444                           	
  7445  0015FE                     l16555:; BSR set to: 0
  7446                           
  7447                           	line	98
  7448  0015FE  989E               	bcf	((c:3998)),c,4	;volatile
  7449                           	line	100
  7450  001600  0100               	movlb	0	; () banked
  7451                           	
  7452  001602  0100               	movlb	0	; () banked
  7453  001604  ABB9               	btfss	((OpenUSART@config))&0ffh,(5)&7
  7454  001606  D001               	goto	u1321
  7455  001608  D001               	goto	u1320
  7456  00160A                     u1321:
  7457  00160A  D001               	goto	l16556
  7458  00160C                     u1320:
  7459                           	line	101
  7460                           	
  7461  00160C                     l18552:; BSR set to: 0
  7462                           
  7463  00160C  86AB               	bsf	((c:4011)),c,3	;volatile
  7464                           	
  7465  00160E                     l16556:; BSR set to: 0
  7466                           
  7467                           	line	103
  7468  00160E  0100               	movlb	0	; () banked
  7469                           	
  7470  001610  0100               	movlb	0	; () banked
  7471  001612  ADB9               	btfss	((OpenUSART@config))&0ffh,(6)&7
  7472  001614  D001               	goto	u1331
  7473  001616  D001               	goto	u1330
  7474  001618                     u1331:
  7475  001618  D002               	goto	l16557
  7476  00161A                     u1330:
  7477                           	line	104
  7478                           	
  7479  00161A                     l18554:; BSR set to: 0
  7480                           
  7481  00161A  8A9D               	bsf	((c:3997)),c,5	;volatile
  7482  00161C  D001               	goto	l16558
  7483                           	line	105
  7484                           	
  7485  00161E                     l16557:; BSR set to: 0
  7486                           
  7487                           	line	106
  7488  00161E  9A9D               	bcf	((c:3997)),c,5	;volatile
  7489                           	
  7490  001620                     l16558:; BSR set to: 0
  7491                           
  7492                           	line	108
  7493  001620  9A9E               	bcf	((c:3998)),c,5	;volatile
  7494                           	line	110
  7495  001622  0100               	movlb	0	; () banked
  7496                           	
  7497  001624  0100               	movlb	0	; () banked
  7498  001626  AFB9               	btfss	((OpenUSART@config))&0ffh,(7)&7
  7499  001628  D001               	goto	u1341
  7500  00162A  D001               	goto	u1340
  7501  00162C                     u1341:
  7502  00162C  D002               	goto	l16559
  7503  00162E                     u1340:
  7504                           	line	111
  7505                           	
  7506  00162E                     l18556:; BSR set to: 0
  7507                           
  7508  00162E  889D               	bsf	((c:3997)),c,4	;volatile
  7509  001630  D001               	goto	l16560
  7510                           	line	112
  7511                           	
  7512  001632                     l16559:; BSR set to: 0
  7513                           
  7514                           	line	113
  7515  001632  989D               	bcf	((c:3997)),c,4	;volatile
  7516                           	
  7517  001634                     l16560:; BSR set to: 0
  7518                           
  7519                           	line	115
  7520  001634  C0BA  FFAF         	movff	(OpenUSART@spbrg),(c:4015)	;volatile
  7521                           	line	116
  7522                           	
  7523  001638                     l18558:; BSR set to: 0
  7524                           
  7525  001638  0100               	movlb	0	; () banked
  7526  00163A  0100               	movlb	0	; () banked
  7527  00163C  51BB               	movf	((OpenUSART@spbrg+1))&0ffh,w
  7528  00163E  6EB0               	movwf	((c:4016)),c	;volatile
  7529                           	line	118
  7530                           	
  7531  001640                     l18560:; BSR set to: 0
  7532                           
  7533  001640  8AAC               	bsf	((c:4012)),c,5	;volatile
  7534                           	line	119
  7535                           	
  7536  001642                     l18562:; BSR set to: 0
  7537                           
  7538  001642  8EAB               	bsf	((c:4011)),c,7	;volatile
  7539                           	line	137
  7540                           	
  7541  001644                     l18564:; BSR set to: 0
  7542                           
  7543  001644  9C94               	bcf	((c:3988)),c,6	;volatile
  7544                           	
  7545  001646                     l18566:; BSR set to: 0
  7546                           
  7547  001646  8E94               	bsf	((c:3988)),c,7	;volatile
  7548                           	line	138
  7549                           	
  7550  001648                     l18568:; BSR set to: 0
  7551                           
  7552                           	
  7553  001648  A8AC               	btfss	((c:4012)),c,4	;volatile
  7554  00164A  D001               	goto	u1351
  7555  00164C  D001               	goto	u1350
  7556  00164E                     u1351:
  7557  00164E  D006               	goto	l16562
  7558  001650                     u1350:
  7559                           	
  7560  001650                     l18570:; BSR set to: 0
  7561                           
  7562                           	
  7563  001650  BEAC               	btfsc	((c:4012)),c,7	;volatile
  7564  001652  D001               	goto	u1361
  7565  001654  D001               	goto	u1360
  7566  001656                     u1361:
  7567  001656  D002               	goto	l16562
  7568  001658                     u1360:
  7569                           	line	139
  7570                           	
  7571  001658                     l18572:; BSR set to: 0
  7572                           
  7573  001658  8C94               	bsf	((c:3988)),c,6	;volatile
  7574  00165A  D000               	goto	l16562
  7575                           	
  7576  00165C                     l16561:; BSR set to: 0
  7577                           
  7578                           	line	143
  7579                           	
  7580  00165C                     l16562:; BSR set to: 0
  7581                           
  7582  00165C  0012               	return
  7583                           	opt stack 0
  7584                           GLOBAL	__end_of_OpenUSART
  7585  00165E                     	__end_of_OpenUSART:
  7586                           	signat	_OpenUSART,8312
  7587                           	global	_block_on_To_msgqueues
  7588                           
  7589 ;; *************** function _block_on_To_msgqueues *****************
  7590 ;; Defined at:
  7591 ;;		line 258 in file "../src/messages.c"
  7592 ;; Parameters:    Size  Location     Type
  7593 ;;		None
  7594 ;; Auto vars:     Size  Location     Type
  7595 ;;		None
  7596 ;; Return value:  Size  Location     Type
  7597 ;;		None               void
  7598 ;; Registers used:
  7599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7600 ;; Tracked objects:
  7601 ;;		On entry : 0/0
  7602 ;;		On exit  : 0/0
  7603 ;;		Unchanged: 0/0
  7604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7605 ;;      Params:         0       0       0       0       0
  7606 ;;      Locals:         0       0       0       0       0
  7607 ;;      Temps:          0       1       0       0       0
  7608 ;;      Totals:         0       1       0       0       0
  7609 ;;Total ram usage:        1 bytes
  7610 ;; Hardware stack levels used:    1
  7611 ;; Hardware stack levels required when called:   14
  7612 ;; This function calls:
  7613 ;;		_in_main
  7614 ;;		_check_msg
  7615 ;;		_Delay1KTCYx
  7616 ;; This function is called by:
  7617 ;;		_main
  7618 ;; This function uses a non-reentrant model
  7619 ;;
  7620                           psect	text9,class=CODE,space=0,reloc=2
  7621                           global __ptext9
  7622  001360                     __ptext9:
  7623                           psect	text9
  7624                           	file	"../src/messages.c"
  7625                           	line	258
  7626                           	global	__size_of_block_on_To_msgqueues
  7627  0000                     	__size_of_block_on_To_msgqueues	equ	__end_of_block_on_To_msgqueues-_block_on_To_msgqueu
                                 es
  7628                           	
  7629  001360                     _block_on_To_msgqueues:; BSR set to: 0
  7630                           
  7631                           	opt	stack 16
  7632                           	line	259
  7633                           	
  7634  001360                     l18574:
  7635                           ;messages.c: 259: if (!in_main()) {
  7636  001360  0100               	movlb	0	; () banked
  7637  001362  ECD0  F00D         	call	_in_main	;wreg free
  7638  001366  0100               	movlb	0	; () banked
  7639  001368  0100               	movlb	0	; () banked
  7640  00136A  51BE               	movf	(1+?_in_main)&0ffh,w
  7641  00136C  0100               	movlb	0	; () banked
  7642  00136E  11BD               	iorwf (0+?_in_main)&0ffh,w
  7643                           
  7644  001370  A4D8               	btfss	status,2
  7645  001372  D001               	goto	u1371
  7646  001374  D001               	goto	u1370
  7647  001376                     u1371:
  7648  001376  D002               	goto	l5537
  7649  001378                     u1370:
  7650  001378  D05C               	goto	l5538
  7651                           	line	260
  7652                           	
  7653  00137A                     l18576:; BSR set to: 0
  7654                           
  7655                           ;messages.c: 260: return;
  7656  00137A  D05B               	goto	l5538
  7657                           	line	261
  7658                           	
  7659  00137C                     l5537:; BSR set to: 0
  7660                           
  7661                           	line	262
  7662                           ;messages.c: 261: }
  7663                           ;messages.c: 262: LATBbits.LATB3 = 1;
  7664  00137C  868A               	bsf	((c:3978)),c,3	;volatile
  7665                           	line	263
  7666                           	
  7667  00137E                     l18578:; BSR set to: 0
  7668                           
  7669                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  7670  00137E  0100               	movlb	0	; () banked
  7671  001380  6FBF               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7672  001382  0E01               	movlw	low(01h)
  7673  001384  6E45               	movwf	((c:_MQ_Main_Willing_to_block)),c
  7674  001386  0100               	movlb	0	; () banked
  7675  001388  51BF               	movf	(??_block_on_To_msgqueues+0+0)&0ffh,w
  7676  00138A  D000               	goto	l18580
  7677                           	line	264
  7678                           ;messages.c: 264: while (1) {
  7679                           	
  7680  00138C                     l5539:; BSR set to: 0
  7681                           
  7682                           	line	265
  7683                           	
  7684  00138C                     l18580:; BSR set to: 0
  7685                           
  7686                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  7687  00138C  0101               	movlb	1	; () banked
  7688  00138E  0E01               	movlw	high(_ToMainHigh_MQ)
  7689  001390  0100               	movlb	0	; () banked
  7690  001392  0100               	movlb	0	; () banked
  7691  001394  6FBA               	movwf	((?_check_msg+1))&0ffh
  7692  001396  0101               	movlb	1	; () banked
  7693  001398  0E36               	movlw	low(_ToMainHigh_MQ)
  7694  00139A  0100               	movlb	0	; () banked
  7695  00139C  6FB9               	movwf	((?_check_msg))&0ffh
  7696  00139E  0100               	movlb	0	; () banked
  7697  0013A0  EC3F  F00F         	call	_check_msg	;wreg free
  7698  0013A4  0900               	iorlw	0
  7699  0013A6  B4D8               	btfsc	status,2
  7700  0013A8  D001               	goto	u1381
  7701  0013AA  D001               	goto	u1380
  7702  0013AC                     u1381:
  7703  0013AC  D009               	goto	l18588
  7704  0013AE                     u1380:
  7705                           	line	266
  7706                           	
  7707  0013AE                     l18582:
  7708                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  7709  0013AE  0100               	movlb	0	; () banked
  7710  0013B0  6FBF               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7711  0013B2  0E00               	movlw	low(0)
  7712  0013B4  6E45               	movwf	((c:_MQ_Main_Willing_to_block)),c
  7713  0013B6  0100               	movlb	0	; () banked
  7714  0013B8  51BF               	movf	(??_block_on_To_msgqueues+0+0)&0ffh,w
  7715                           	line	267
  7716                           	
  7717  0013BA                     l18584:; BSR set to: 0
  7718                           
  7719                           ;messages.c: 267: LATBbits.LATB3 = 0;
  7720  0013BA  968A               	bcf	((c:3978)),c,3	;volatile
  7721  0013BC  D03A               	goto	l5538
  7722                           	line	268
  7723                           	
  7724  0013BE                     l18586:; BSR set to: 0
  7725                           
  7726                           ;messages.c: 268: return;
  7727  0013BE  D039               	goto	l5538
  7728                           	line	269
  7729                           	
  7730  0013C0                     l5540:; BSR set to: 0
  7731                           
  7732                           	line	270
  7733                           	
  7734  0013C0                     l18588:
  7735                           ;messages.c: 269: }
  7736                           ;messages.c: 270: if (check_msg(&ToMainLow_MQ)) {
  7737  0013C0  0101               	movlb	1	; () banked
  7738  0013C2  0E01               	movlw	high(_ToMainLow_MQ)
  7739  0013C4  0100               	movlb	0	; () banked
  7740  0013C6  0100               	movlb	0	; () banked
  7741  0013C8  6FBA               	movwf	((?_check_msg+1))&0ffh
  7742  0013CA  0101               	movlb	1	; () banked
  7743  0013CC  0E6C               	movlw	low(_ToMainLow_MQ)
  7744  0013CE  0100               	movlb	0	; () banked
  7745  0013D0  6FB9               	movwf	((?_check_msg))&0ffh
  7746  0013D2  0100               	movlb	0	; () banked
  7747  0013D4  EC3F  F00F         	call	_check_msg	;wreg free
  7748  0013D8  0900               	iorlw	0
  7749  0013DA  B4D8               	btfsc	status,2
  7750  0013DC  D001               	goto	u1391
  7751  0013DE  D001               	goto	u1390
  7752  0013E0                     u1391:
  7753  0013E0  D009               	goto	l18596
  7754  0013E2                     u1390:
  7755                           	line	271
  7756                           	
  7757  0013E2                     l18590:
  7758                           ;messages.c: 271: MQ_Main_Willing_to_block = 0;
  7759  0013E2  0100               	movlb	0	; () banked
  7760  0013E4  6FBF               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7761  0013E6  0E00               	movlw	low(0)
  7762  0013E8  6E45               	movwf	((c:_MQ_Main_Willing_to_block)),c
  7763  0013EA  0100               	movlb	0	; () banked
  7764  0013EC  51BF               	movf	(??_block_on_To_msgqueues+0+0)&0ffh,w
  7765                           	line	272
  7766                           	
  7767  0013EE                     l18592:; BSR set to: 0
  7768                           
  7769                           ;messages.c: 272: LATBbits.LATB3 = 0;
  7770  0013EE  968A               	bcf	((c:3978)),c,3	;volatile
  7771  0013F0  D020               	goto	l5538
  7772                           	line	273
  7773                           	
  7774  0013F2                     l18594:; BSR set to: 0
  7775                           
  7776                           ;messages.c: 273: return;
  7777  0013F2  D01F               	goto	l5538
  7778                           	line	274
  7779                           	
  7780  0013F4                     l5541:; BSR set to: 0
  7781                           
  7782                           	line	275
  7783                           	
  7784  0013F4                     l18596:
  7785                           ;messages.c: 274: }
  7786                           ;messages.c: 275: Delay1KTCYx(10);
  7787  0013F4  0100               	movlb	0	; () banked
  7788  0013F6  6FBF               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7789  0013F8  0E0A               	movlw	low(0Ah)
  7790  0013FA  0100               	movlb	0	; () banked
  7791  0013FC  0100               	movlb	0	; () banked
  7792  0013FE  6FB9               	movwf	((?_Delay1KTCYx))&0ffh
  7793  001400  0100               	movlb	0	; () banked
  7794  001402  51BF               	movf	(??_block_on_To_msgqueues+0+0)&0ffh,w
  7795  001404  0100               	movlb	0	; () banked
  7796  001406  ECA5  F010         	call	_Delay1KTCYx	;wreg free
  7797                           	line	276
  7798                           	
  7799  00140A                     l18598:
  7800                           ;messages.c: 276: LATBbits.LATB3 = !LATBbits.LATB3;
  7801                           	
  7802  00140A  A68A               	btfss	((c:3978)),c,3	;volatile
  7803  00140C  D001               	goto	u1401
  7804  00140E  D002               	goto	u1400
  7805  001410                     u1401:
  7806  001410  0E01               	movlw	1
  7807  001412  D001               	goto	u1406
  7808  001414                     u1400:
  7809  001414  0E00               	movlw	0
  7810  001416                     u1406:
  7811  001416  0100               	movlb	0	; () banked
  7812  001418  6FBF               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7813  00141A  0100               	movlb	0	; () banked
  7814  00141C  47BF               	rlncf	((??_block_on_To_msgqueues+0+0))&0ffh
  7815  00141E  47BF               	rlncf	((??_block_on_To_msgqueues+0+0))&0ffh
  7816  001420  47BF               	rlncf	((??_block_on_To_msgqueues+0+0))&0ffh
  7817  001422  508A               	movf	((c:3978)),c,w	;volatile
  7818  001424  0100               	movlb	0	; () banked
  7819  001426  19BF               	xorwf	((??_block_on_To_msgqueues+0+0))&0ffh,w
  7820  001428  0BF7               	andlw	not (((1<<1)-1)<<3)
  7821  00142A  19BF               	xorwf	((??_block_on_To_msgqueues+0+0))&0ffh,w
  7822  00142C  6E8A               	movwf	((c:3978)),c	;volatile
  7823  00142E  D7AE               	goto	l18580
  7824                           	line	277
  7825                           	
  7826  001430                     l5542:; BSR set to: 0
  7827                           
  7828                           	line	264
  7829  001430  D7AD               	goto	l18580
  7830                           	
  7831  001432                     l5543:; BSR set to: 0
  7832                           
  7833                           	line	278
  7834                           	
  7835  001432                     l5538:; BSR set to: 0
  7836                           
  7837  001432  0012               	return
  7838                           	opt stack 0
  7839                           GLOBAL	__end_of_block_on_To_msgqueues
  7840  001434                     	__end_of_block_on_To_msgqueues:
  7841                           	signat	_block_on_To_msgqueues,88
  7842                           	global	_in_main
  7843                           
  7844 ;; *************** function _in_main *****************
  7845 ;; Defined at:
  7846 ;;		line 40 in file "../src/interrupts.c"
  7847 ;; Parameters:    Size  Location     Type
  7848 ;;		None
  7849 ;; Auto vars:     Size  Location     Type
  7850 ;;		None
  7851 ;; Return value:  Size  Location     Type
  7852 ;;                  2   61[BANK0 ] int 
  7853 ;; Registers used:
  7854 ;;		wreg, status,2, status,0, cstack
  7855 ;; Tracked objects:
  7856 ;;		On entry : 0/0
  7857 ;;		On exit  : 0/0
  7858 ;;		Unchanged: 0/0
  7859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7860 ;;      Params:         0       2       0       0       0
  7861 ;;      Locals:         0       0       0       0       0
  7862 ;;      Temps:          0       0       0       0       0
  7863 ;;      Totals:         0       2       0       0       0
  7864 ;;Total ram usage:        2 bytes
  7865 ;; Hardware stack levels used:    1
  7866 ;; Hardware stack levels required when called:   13
  7867 ;; This function calls:
  7868 ;;		_in_low_int
  7869 ;;		_in_high_int
  7870 ;; This function is called by:
  7871 ;;		_block_on_To_msgqueues
  7872 ;; This function uses a non-reentrant model
  7873 ;;
  7874                           psect	text10,class=CODE,space=0,reloc=2
  7875                           global __ptext10
  7876  001BA0                     __ptext10:
  7877                           psect	text10
  7878                           	file	"../src/interrupts.c"
  7879                           	line	40
  7880                           	global	__size_of_in_main
  7881  0000                     	__size_of_in_main	equ	__end_of_in_main-_in_main
  7882                           	
  7883  001BA0                     _in_main:; BSR set to: 0
  7884                           
  7885                           	opt	stack 16
  7886                           	line	41
  7887                           	
  7888  001BA0                     l18348:
  7889                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  7890  001BA0  0100               	movlb	0	; () banked
  7891  001BA2  ECA1  F00D         	call	_in_low_int	;wreg free
  7892  001BA6  0100               	movlb	0	; () banked
  7893  001BA8  0100               	movlb	0	; () banked
  7894  001BAA  51BC               	movf	(1+?_in_low_int)&0ffh,w
  7895  001BAC  0100               	movlb	0	; () banked
  7896  001BAE  11BB               	iorwf (0+?_in_low_int)&0ffh,w
  7897                           
  7898  001BB0  A4D8               	btfss	status,2
  7899  001BB2  D001               	goto	u1121
  7900  001BB4  D001               	goto	u1120
  7901  001BB6                     u1121:
  7902  001BB6  D016               	goto	l18358
  7903  001BB8                     u1120:
  7904                           	
  7905  001BB8                     l18350:; BSR set to: 0
  7906                           
  7907  001BB8  0100               	movlb	0	; () banked
  7908  001BBA  EC9B  F010         	call	_in_high_int	;wreg free
  7909  001BBE  0100               	movlb	0	; () banked
  7910  001BC0  0100               	movlb	0	; () banked
  7911  001BC2  51BA               	movf	(1+?_in_high_int)&0ffh,w
  7912  001BC4  0100               	movlb	0	; () banked
  7913  001BC6  11B9               	iorwf (0+?_in_high_int)&0ffh,w
  7914                           
  7915  001BC8  A4D8               	btfss	status,2
  7916  001BCA  D001               	goto	u1131
  7917  001BCC  D001               	goto	u1130
  7918  001BCE                     u1131:
  7919  001BCE  D00A               	goto	l18358
  7920  001BD0                     u1130:
  7921                           	line	42
  7922                           	
  7923  001BD0                     l18352:; BSR set to: 0
  7924                           
  7925                           ;interrupts.c: 42: return (1);
  7926  001BD0  0E00               	movlw	high(01h)
  7927  001BD2  0100               	movlb	0	; () banked
  7928  001BD4  0100               	movlb	0	; () banked
  7929  001BD6  6FBE               	movwf	((?_in_main+1))&0ffh
  7930  001BD8  0E01               	movlw	low(01h)
  7931  001BDA  0100               	movlb	0	; () banked
  7932  001BDC  6FBD               	movwf	((?_in_main))&0ffh
  7933  001BDE  D00B               	goto	l1816
  7934                           	
  7935  001BE0                     l18354:; BSR set to: 0
  7936                           
  7937  001BE0  D00A               	goto	l1816
  7938                           	line	43
  7939                           	
  7940  001BE2                     l18356:; BSR set to: 0
  7941                           
  7942                           ;interrupts.c: 43: } else {
  7943  001BE2  D009               	goto	l1816
  7944                           	
  7945  001BE4                     l1815:; BSR set to: 0
  7946                           
  7947                           	line	44
  7948                           	
  7949  001BE4                     l18358:; BSR set to: 0
  7950                           
  7951                           ;interrupts.c: 44: return (0);
  7952  001BE4  0E00               	movlw	high(0)
  7953  001BE6  0100               	movlb	0	; () banked
  7954  001BE8  0100               	movlb	0	; () banked
  7955  001BEA  6FBE               	movwf	((?_in_main+1))&0ffh
  7956  001BEC  0E00               	movlw	low(0)
  7957  001BEE  0100               	movlb	0	; () banked
  7958  001BF0  6FBD               	movwf	((?_in_main))&0ffh
  7959  001BF2  D001               	goto	l1816
  7960                           	
  7961  001BF4                     l18360:; BSR set to: 0
  7962                           
  7963  001BF4  D000               	goto	l1816
  7964                           	line	45
  7965                           	
  7966  001BF6                     l1817:; BSR set to: 0
  7967                           
  7968                           	line	46
  7969                           	
  7970  001BF6                     l1816:; BSR set to: 0
  7971                           
  7972  001BF6  0012               	return
  7973                           	opt stack 0
  7974                           GLOBAL	__end_of_in_main
  7975  001BF8                     	__end_of_in_main:
  7976                           	signat	_in_main,90
  7977                           	global	_in_low_int
  7978                           
  7979 ;; *************** function _in_low_int *****************
  7980 ;; Defined at:
  7981 ;;		line 30 in file "../src/interrupts.c"
  7982 ;; Parameters:    Size  Location     Type
  7983 ;;		None
  7984 ;; Auto vars:     Size  Location     Type
  7985 ;;		None
  7986 ;; Return value:  Size  Location     Type
  7987 ;;                  2   59[BANK0 ] int 
  7988 ;; Registers used:
  7989 ;;		wreg, status,2, status,0, cstack
  7990 ;; Tracked objects:
  7991 ;;		On entry : 0/0
  7992 ;;		On exit  : 0/0
  7993 ;;		Unchanged: 0/0
  7994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7995 ;;      Params:         0       2       0       0       0
  7996 ;;      Locals:         0       0       0       0       0
  7997 ;;      Temps:          0       0       0       0       0
  7998 ;;      Totals:         0       2       0       0       0
  7999 ;;Total ram usage:        2 bytes
  8000 ;; Hardware stack levels used:    1
  8001 ;; Hardware stack levels required when called:   12
  8002 ;; This function calls:
  8003 ;;		_in_high_int
  8004 ;; This function is called by:
  8005 ;;		_in_main
  8006 ;; This function uses a non-reentrant model
  8007 ;;
  8008                           psect	text11,class=CODE,space=0,reloc=2
  8009                           global __ptext11
  8010  001B42                     __ptext11:
  8011                           psect	text11
  8012                           	file	"../src/interrupts.c"
  8013                           	line	30
  8014                           	global	__size_of_in_low_int
  8015  0000                     	__size_of_in_low_int	equ	__end_of_in_low_int-_in_low_int
  8016                           	
  8017  001B42                     _in_low_int:; BSR set to: 0
  8018                           
  8019                           	opt	stack 16
  8020                           	line	31
  8021                           	
  8022  001B42                     l18328:
  8023                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  8024                           	
  8025  001B42  ACF2               	btfss	((c:4082)),c,6	;volatile
  8026  001B44  D001               	goto	u1101
  8027  001B46  D001               	goto	u1100
  8028  001B48                     u1101:
  8029  001B48  D00A               	goto	l18336
  8030  001B4A                     u1100:
  8031                           	line	32
  8032                           	
  8033  001B4A                     l18330:
  8034                           ;interrupts.c: 32: return (0);
  8035  001B4A  0E00               	movlw	high(0)
  8036  001B4C  0100               	movlb	0	; () banked
  8037  001B4E  0100               	movlb	0	; () banked
  8038  001B50  6FBC               	movwf	((?_in_low_int+1))&0ffh
  8039  001B52  0E00               	movlw	low(0)
  8040  001B54  0100               	movlb	0	; () banked
  8041  001B56  6FBB               	movwf	((?_in_low_int))&0ffh
  8042  001B58  D022               	goto	l1809
  8043                           	
  8044  001B5A                     l18332:; BSR set to: 0
  8045                           
  8046  001B5A  D021               	goto	l1809
  8047                           	line	33
  8048                           	
  8049  001B5C                     l18334:; BSR set to: 0
  8050                           
  8051                           ;interrupts.c: 33: } else if (in_high_int()) {
  8052  001B5C  D020               	goto	l1809
  8053                           	
  8054  001B5E                     l1808:; BSR set to: 0
  8055                           
  8056                           	
  8057  001B5E                     l18336:
  8058  001B5E  0100               	movlb	0	; () banked
  8059  001B60  EC9B  F010         	call	_in_high_int	;wreg free
  8060  001B64  0100               	movlb	0	; () banked
  8061  001B66  0100               	movlb	0	; () banked
  8062  001B68  51BA               	movf	(1+?_in_high_int)&0ffh,w
  8063  001B6A  0100               	movlb	0	; () banked
  8064  001B6C  11B9               	iorwf (0+?_in_high_int)&0ffh,w
  8065                           
  8066  001B6E  B4D8               	btfsc	status,2
  8067  001B70  D001               	goto	u1111
  8068  001B72  D001               	goto	u1110
  8069  001B74                     u1111:
  8070  001B74  D00A               	goto	l18344
  8071  001B76                     u1110:
  8072                           	line	34
  8073                           	
  8074  001B76                     l18338:; BSR set to: 0
  8075                           
  8076                           ;interrupts.c: 34: return (0);
  8077  001B76  0E00               	movlw	high(0)
  8078  001B78  0100               	movlb	0	; () banked
  8079  001B7A  0100               	movlb	0	; () banked
  8080  001B7C  6FBC               	movwf	((?_in_low_int+1))&0ffh
  8081  001B7E  0E00               	movlw	low(0)
  8082  001B80  0100               	movlb	0	; () banked
  8083  001B82  6FBB               	movwf	((?_in_low_int))&0ffh
  8084  001B84  D00C               	goto	l1809
  8085                           	
  8086  001B86                     l18340:; BSR set to: 0
  8087                           
  8088  001B86  D00B               	goto	l1809
  8089                           	line	35
  8090                           	
  8091  001B88                     l18342:; BSR set to: 0
  8092                           
  8093                           ;interrupts.c: 35: } else {
  8094  001B88  D00A               	goto	l1809
  8095                           	
  8096  001B8A                     l1811:; BSR set to: 0
  8097                           
  8098                           	line	36
  8099                           	
  8100  001B8A                     l18344:; BSR set to: 0
  8101                           
  8102                           ;interrupts.c: 36: return (1);
  8103  001B8A  0E00               	movlw	high(01h)
  8104  001B8C  0100               	movlb	0	; () banked
  8105  001B8E  0100               	movlb	0	; () banked
  8106  001B90  6FBC               	movwf	((?_in_low_int+1))&0ffh
  8107  001B92  0E01               	movlw	low(01h)
  8108  001B94  0100               	movlb	0	; () banked
  8109  001B96  6FBB               	movwf	((?_in_low_int))&0ffh
  8110  001B98  D002               	goto	l1809
  8111                           	
  8112  001B9A                     l18346:; BSR set to: 0
  8113                           
  8114  001B9A  D001               	goto	l1809
  8115                           	line	37
  8116                           	
  8117  001B9C                     l1812:; BSR set to: 0
  8118                           
  8119  001B9C  D000               	goto	l1809
  8120                           	
  8121  001B9E                     l1810:; BSR set to: 0
  8122                           
  8123                           	line	38
  8124                           	
  8125  001B9E                     l1809:; BSR set to: 0
  8126                           
  8127  001B9E  0012               	return
  8128                           	opt stack 0
  8129                           GLOBAL	__end_of_in_low_int
  8130  001BA0                     	__end_of_in_low_int:
  8131                           	signat	_in_low_int,90
  8132                           	global	_in_high_int
  8133                           
  8134 ;; *************** function _in_high_int *****************
  8135 ;; Defined at:
  8136 ;;		line 22 in file "../src/interrupts.c"
  8137 ;; Parameters:    Size  Location     Type
  8138 ;;		None
  8139 ;; Auto vars:     Size  Location     Type
  8140 ;;		None
  8141 ;; Return value:  Size  Location     Type
  8142 ;;                  2   57[BANK0 ] int 
  8143 ;; Registers used:
  8144 ;;		wreg, status,2
  8145 ;; Tracked objects:
  8146 ;;		On entry : 0/0
  8147 ;;		On exit  : 0/0
  8148 ;;		Unchanged: 0/0
  8149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8150 ;;      Params:         0       2       0       0       0
  8151 ;;      Locals:         0       0       0       0       0
  8152 ;;      Temps:          0       0       0       0       0
  8153 ;;      Totals:         0       2       0       0       0
  8154 ;;Total ram usage:        2 bytes
  8155 ;; Hardware stack levels used:    1
  8156 ;; Hardware stack levels required when called:   11
  8157 ;; This function calls:
  8158 ;;		Nothing
  8159 ;; This function is called by:
  8160 ;;		_in_low_int
  8161 ;;		_in_main
  8162 ;; This function uses a non-reentrant model
  8163 ;;
  8164                           psect	text12,class=CODE,space=0,reloc=2
  8165                           global __ptext12
  8166  002136                     __ptext12:
  8167                           psect	text12
  8168                           	file	"../src/interrupts.c"
  8169                           	line	22
  8170                           	global	__size_of_in_high_int
  8171  0000                     	__size_of_in_high_int	equ	__end_of_in_high_int-_in_high_int
  8172                           	
  8173  002136                     _in_high_int:; BSR set to: 0
  8174                           
  8175                           	opt	stack 17
  8176                           	line	23
  8177                           	
  8178  002136                     l18324:
  8179                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  8180                           	
  8181  002136  0E00               	movlw	0
  8182  002138  AEF2               	btfss	((c:4082)),c,7	;volatile
  8183  00213A  0E01               	movlw	1
  8184  00213C  0100               	movlb	0	; () banked
  8185  00213E  0100               	movlb	0	; () banked
  8186  002140  6FB9               	movwf	((?_in_high_int))&0ffh
  8187  002142  0100               	movlb	0	; () banked
  8188  002144  6BBA               	clrf	((?_in_high_int+1))&0ffh
  8189  002146  D000               	goto	l1802
  8190                           	
  8191  002148                     l18326:; BSR set to: 0
  8192                           
  8193                           	line	24
  8194                           	
  8195  002148                     l1802:; BSR set to: 0
  8196                           
  8197  002148  0012               	return
  8198                           	opt stack 0
  8199                           GLOBAL	__end_of_in_high_int
  8200  00214A                     	__end_of_in_high_int:
  8201                           	signat	_in_high_int,90
  8202                           	global	_ToMainHigh_recvmsg
  8203                           
  8204 ;; *************** function _ToMainHigh_recvmsg *****************
  8205 ;; Defined at:
  8206 ;;		line 135 in file "../src/messages.c"
  8207 ;; Parameters:    Size  Location     Type
  8208 ;;  maxlength       1   12[BANK1 ] unsigned char 
  8209 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  8210 ;;		 -> main@msgtype(1), 
  8211 ;;  data            2   15[BANK1 ] PTR void 
  8212 ;;		 -> main@msgbuffer(11), 
  8213 ;; Auto vars:     Size  Location     Type
  8214 ;;		None
  8215 ;; Return value:  Size  Location     Type
  8216 ;;                  1    wreg      char 
  8217 ;; Registers used:
  8218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8219 ;; Tracked objects:
  8220 ;;		On entry : 0/0
  8221 ;;		On exit  : 0/0
  8222 ;;		Unchanged: 0/0
  8223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8224 ;;      Params:         0       0       5       0       0
  8225 ;;      Locals:         0       0       0       0       0
  8226 ;;      Temps:          0       0       0       0       0
  8227 ;;      Totals:         0       0       5       0       0
  8228 ;;Total ram usage:        5 bytes
  8229 ;; Hardware stack levels used:    1
  8230 ;; Hardware stack levels required when called:   13
  8231 ;; This function calls:
  8232 ;;		_recv_msg
  8233 ;; This function is called by:
  8234 ;;		_main
  8235 ;; This function uses a non-reentrant model
  8236 ;;
  8237                           psect	text13,class=CODE,space=0,reloc=2
  8238                           global __ptext13
  8239  001F52                     __ptext13:
  8240                           psect	text13
  8241                           	file	"../src/messages.c"
  8242                           	line	135
  8243                           	global	__size_of_ToMainHigh_recvmsg
  8244  0000                     	__size_of_ToMainHigh_recvmsg	equ	__end_of_ToMainHigh_recvmsg-_ToMainHigh_recvmsg
  8245                           	
  8246  001F52                     _ToMainHigh_recvmsg:; BSR set to: 0
  8247                           
  8248                           	opt	stack 17
  8249                           	line	141
  8250                           	
  8251  001F52                     l19402:
  8252                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  8253  001F52  0101               	movlb	1	; () banked
  8254  001F54  0E01               	movlw	high(_ToMainHigh_MQ)
  8255  001F56  0101               	movlb	1	; () banked
  8256  001F58  0101               	movlb	1	; () banked
  8257  001F5A  6FA3               	movwf	((?_recv_msg+1))&0ffh
  8258  001F5C  0101               	movlb	1	; () banked
  8259  001F5E  0E36               	movlw	low(_ToMainHigh_MQ)
  8260  001F60  0101               	movlb	1	; () banked
  8261  001F62  6FA2               	movwf	((?_recv_msg))&0ffh
  8262  001F64  C1AE  F1A4         	movff	(ToMainHigh_recvmsg@maxlength),0+(?_recv_msg+02h)
  8263  001F68  C1AF  F1A5         	movff	(ToMainHigh_recvmsg@msgtype),0+(?_recv_msg+03h)
  8264  001F6C  C1B0  F1A6         	movff	(ToMainHigh_recvmsg@msgtype+1),1+(?_recv_msg+03h)
  8265  001F70  C1B1  F1A7         	movff	(ToMainHigh_recvmsg@data),0+(?_recv_msg+05h)
  8266  001F74  C1B2  F1A8         	movff	(ToMainHigh_recvmsg@data+1),1+(?_recv_msg+05h)
  8267  001F78  0101               	movlb	1	; () banked
  8268  001F7A  EC77  F007         	call	_recv_msg	;wreg free
  8269  001F7E  D000               	goto	l5499
  8270                           	
  8271  001F80                     l19404:
  8272                           	line	142
  8273                           	
  8274  001F80                     l5499:
  8275  001F80  0012               	return
  8276                           	opt stack 0
  8277                           GLOBAL	__end_of_ToMainHigh_recvmsg
  8278  001F82                     	__end_of_ToMainHigh_recvmsg:
  8279                           	signat	_ToMainHigh_recvmsg,12409
  8280                           	global	_timer0_lthread
  8281                           
  8282 ;; *************** function _timer0_lthread *****************
  8283 ;; Defined at:
  8284 ;;		line 9 in file "../src/timer0_thread.c"
  8285 ;; Parameters:    Size  Location     Type
  8286 ;;  tptr            2   57[BANK0 ] PTR struct __timer0_thre
  8287 ;;		 -> main@t0thread_data(2), 
  8288 ;;  msgtype         2   59[BANK0 ] int 
  8289 ;;  length          2   61[BANK0 ] int 
  8290 ;;  msgbuffer       2   63[BANK0 ] PTR unsigned char 
  8291 ;;		 -> main@msgbuffer(11), 
  8292 ;; Auto vars:     Size  Location     Type
  8293 ;;  msgval          2   65[BANK0 ] PTR unsigned int 
  8294 ;;		 -> main@msgbuffer(11), 
  8295 ;; Return value:  Size  Location     Type
  8296 ;;                  2   57[BANK0 ] int 
  8297 ;; Registers used:
  8298 ;;		None
  8299 ;; Tracked objects:
  8300 ;;		On entry : 0/0
  8301 ;;		On exit  : 0/0
  8302 ;;		Unchanged: 0/0
  8303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8304 ;;      Params:         0       8       0       0       0
  8305 ;;      Locals:         0       2       0       0       0
  8306 ;;      Temps:          0       0       0       0       0
  8307 ;;      Totals:         0      10       0       0       0
  8308 ;;Total ram usage:       10 bytes
  8309 ;; Hardware stack levels used:    1
  8310 ;; Hardware stack levels required when called:   11
  8311 ;; This function calls:
  8312 ;;		Nothing
  8313 ;; This function is called by:
  8314 ;;		_main
  8315 ;; This function uses a non-reentrant model
  8316 ;;
  8317                           psect	text14,class=CODE,space=0,reloc=2
  8318                           global __ptext14
  8319  0021AE                     __ptext14:
  8320                           psect	text14
  8321                           	file	"../src/timer0_thread.c"
  8322                           	line	9
  8323                           	global	__size_of_timer0_lthread
  8324  0000                     	__size_of_timer0_lthread	equ	__end_of_timer0_lthread-_timer0_lthread
  8325                           	
  8326  0021AE                     _timer0_lthread:
  8327                           	opt	stack 19
  8328                           	line	12
  8329                           	
  8330  0021AE                     l18604:
  8331                           ;timer0_thread.c: 10: unsigned int *msgval;
  8332                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  8333  0021AE  C0BF  F0C1         	movff	(timer0_lthread@msgbuffer),(timer0_lthread@msgval)
  8334  0021B2  C0C0  F0C2         	movff	(timer0_lthread@msgbuffer+1),(timer0_lthread@msgval+1)
  8335                           	line	16
  8336                           	
  8337  0021B6                     l11054:
  8338  0021B6  0012               	return
  8339                           	opt stack 0
  8340                           GLOBAL	__end_of_timer0_lthread
  8341  0021B8                     	__end_of_timer0_lthread:
  8342                           	signat	_timer0_lthread,16506
  8343                           	global	_ToMainLow_recvmsg
  8344                           
  8345 ;; *************** function _ToMainLow_recvmsg *****************
  8346 ;; Defined at:
  8347 ;;		line 112 in file "../src/messages.c"
  8348 ;; Parameters:    Size  Location     Type
  8349 ;;  maxlength       1   12[BANK1 ] unsigned char 
  8350 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  8351 ;;		 -> main@msgtype(1), 
  8352 ;;  data            2   15[BANK1 ] PTR void 
  8353 ;;		 -> main@msgbuffer(11), 
  8354 ;; Auto vars:     Size  Location     Type
  8355 ;;		None
  8356 ;; Return value:  Size  Location     Type
  8357 ;;                  1    wreg      char 
  8358 ;; Registers used:
  8359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8360 ;; Tracked objects:
  8361 ;;		On entry : 0/0
  8362 ;;		On exit  : 0/0
  8363 ;;		Unchanged: 0/0
  8364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8365 ;;      Params:         0       0       5       0       0
  8366 ;;      Locals:         0       0       0       0       0
  8367 ;;      Temps:          0       0       0       0       0
  8368 ;;      Totals:         0       0       5       0       0
  8369 ;;Total ram usage:        5 bytes
  8370 ;; Hardware stack levels used:    1
  8371 ;; Hardware stack levels required when called:   13
  8372 ;; This function calls:
  8373 ;;		_recv_msg
  8374 ;; This function is called by:
  8375 ;;		_main
  8376 ;; This function uses a non-reentrant model
  8377 ;;
  8378                           psect	text15,class=CODE,space=0,reloc=2
  8379                           global __ptext15
  8380  001F82                     __ptext15:
  8381                           psect	text15
  8382                           	file	"../src/messages.c"
  8383                           	line	112
  8384                           	global	__size_of_ToMainLow_recvmsg
  8385  0000                     	__size_of_ToMainLow_recvmsg	equ	__end_of_ToMainLow_recvmsg-_ToMainLow_recvmsg
  8386                           	
  8387  001F82                     _ToMainLow_recvmsg:
  8388                           	opt	stack 17
  8389                           	line	118
  8390                           	
  8391  001F82                     l19406:
  8392                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  8393  001F82  0101               	movlb	1	; () banked
  8394  001F84  0E01               	movlw	high(_ToMainLow_MQ)
  8395  001F86  0101               	movlb	1	; () banked
  8396  001F88  0101               	movlb	1	; () banked
  8397  001F8A  6FA3               	movwf	((?_recv_msg+1))&0ffh
  8398  001F8C  0101               	movlb	1	; () banked
  8399  001F8E  0E6C               	movlw	low(_ToMainLow_MQ)
  8400  001F90  0101               	movlb	1	; () banked
  8401  001F92  6FA2               	movwf	((?_recv_msg))&0ffh
  8402  001F94  C1AE  F1A4         	movff	(ToMainLow_recvmsg@maxlength),0+(?_recv_msg+02h)
  8403  001F98  C1AF  F1A5         	movff	(ToMainLow_recvmsg@msgtype),0+(?_recv_msg+03h)
  8404  001F9C  C1B0  F1A6         	movff	(ToMainLow_recvmsg@msgtype+1),1+(?_recv_msg+03h)
  8405  001FA0  C1B1  F1A7         	movff	(ToMainLow_recvmsg@data),0+(?_recv_msg+05h)
  8406  001FA4  C1B2  F1A8         	movff	(ToMainLow_recvmsg@data+1),1+(?_recv_msg+05h)
  8407  001FA8  0101               	movlb	1	; () banked
  8408  001FAA  EC77  F007         	call	_recv_msg	;wreg free
  8409  001FAE  D000               	goto	l5491
  8410                           	
  8411  001FB0                     l19408:
  8412                           	line	119
  8413                           	
  8414  001FB0                     l5491:
  8415  001FB0  0012               	return
  8416                           	opt stack 0
  8417                           GLOBAL	__end_of_ToMainLow_recvmsg
  8418  001FB2                     	__end_of_ToMainLow_recvmsg:
  8419                           	signat	_ToMainLow_recvmsg,12409
  8420                           	global	_timer1_lthread
  8421                           
  8422 ;; *************** function _timer1_lthread *****************
  8423 ;; Defined at:
  8424 ;;		line 27 in file "../src/timer1_thread.c"
  8425 ;; Parameters:    Size  Location     Type
  8426 ;;  tptr            2   57[BANK0 ] PTR struct __timer1_thre
  8427 ;;		 -> main@t1thread_data(2), 
  8428 ;;  msgtype         2   59[BANK0 ] int 
  8429 ;;  length          2   61[BANK0 ] int 
  8430 ;;  msgbuffer       2   63[BANK0 ] PTR unsigned char 
  8431 ;;		 -> main@msgbuffer(11), 
  8432 ;; Auto vars:     Size  Location     Type
  8433 ;;		None
  8434 ;; Return value:  Size  Location     Type
  8435 ;;                  2   57[BANK0 ] int 
  8436 ;; Registers used:
  8437 ;;		wreg, fsr2l, fsr2h, cstack
  8438 ;; Tracked objects:
  8439 ;;		On entry : 0/0
  8440 ;;		On exit  : 0/0
  8441 ;;		Unchanged: 0/0
  8442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8443 ;;      Params:         0       8       0       0       0
  8444 ;;      Locals:         0       0       0       0       0
  8445 ;;      Temps:          0       2       0       0       0
  8446 ;;      Totals:         0      10       0       0       0
  8447 ;;Total ram usage:       10 bytes
  8448 ;; Hardware stack levels used:    1
  8449 ;; Hardware stack levels required when called:   12
  8450 ;; This function calls:
  8451 ;;		_ConvertADC
  8452 ;; This function is called by:
  8453 ;;		_main
  8454 ;; This function uses a non-reentrant model
  8455 ;;
  8456                           psect	text16,class=CODE,space=0,reloc=2
  8457                           global __ptext16
  8458  00206A                     __ptext16:
  8459                           psect	text16
  8460                           	file	"../src/timer1_thread.c"
  8461                           	line	27
  8462                           	global	__size_of_timer1_lthread
  8463  0000                     	__size_of_timer1_lthread	equ	__end_of_timer1_lthread-_timer1_lthread
  8464                           	
  8465  00206A                     _timer1_lthread:
  8466                           	opt	stack 18
  8467                           	line	29
  8468                           	
  8469  00206A                     l18610:
  8470                           ;timer1_thread.c: 29: tptr->timerval = msgbuffer[0];
  8471  00206A  C0BF  FFD9         	movff	(timer1_lthread@msgbuffer),fsr2l
  8472  00206E  C0C0  FFDA         	movff	(timer1_lthread@msgbuffer+1),fsr2h
  8473  002072  50DF               	movf	indf2,w
  8474  002074  0100               	movlb	0	; () banked
  8475  002076  6FC1               	movwf	(??_timer1_lthread+0+0)&0ffh
  8476  002078  6BC2               	clrf	(??_timer1_lthread+0+0+1)&0ffh
  8477                           
  8478  00207A  C0B9  FFD9         	movff	(timer1_lthread@tptr),fsr2l
  8479  00207E  C0BA  FFDA         	movff	(timer1_lthread@tptr+1),fsr2h
  8480  002082  C0C1  FFDE         	movff	??_timer1_lthread+0+0,postinc2
  8481  002086  C0C2  FFDD         	movff	??_timer1_lthread+0+1,postdec2
  8482                           
  8483                           	line	36
  8484                           	
  8485  00208A                     l18612:; BSR set to: 0
  8486                           
  8487                           ;timer1_thread.c: 36: ConvertADC();
  8488  00208A  ECE3  F010         	call	_ConvertADC	;wreg free
  8489                           	line	43
  8490                           	
  8491  00208E                     l12850:
  8492  00208E  0012               	return
  8493                           	opt stack 0
  8494                           GLOBAL	__end_of_timer1_lthread
  8495  002090                     	__end_of_timer1_lthread:
  8496                           	signat	_timer1_lthread,16506
  8497                           	global	_FromMainLow_sendmsg
  8498                           
  8499 ;; *************** function _FromMainLow_sendmsg *****************
  8500 ;; Defined at:
  8501 ;;		line 150 in file "../src/messages.c"
  8502 ;; Parameters:    Size  Location     Type
  8503 ;;  length          1   11[BANK1 ] unsigned char 
  8504 ;;  msgtype         1   12[BANK1 ] unsigned char 
  8505 ;;  data            2   13[BANK1 ] PTR void 
  8506 ;;		 -> main@msgbuffer(11), 
  8507 ;; Auto vars:     Size  Location     Type
  8508 ;;		None
  8509 ;; Return value:  Size  Location     Type
  8510 ;;                  1    wreg      char 
  8511 ;; Registers used:
  8512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8513 ;; Tracked objects:
  8514 ;;		On entry : 0/0
  8515 ;;		On exit  : 0/0
  8516 ;;		Unchanged: 0/0
  8517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8518 ;;      Params:         0       0       4       0       0
  8519 ;;      Locals:         0       0       0       0       0
  8520 ;;      Temps:          0       0       0       0       0
  8521 ;;      Totals:         0       0       4       0       0
  8522 ;;Total ram usage:        4 bytes
  8523 ;; Hardware stack levels used:    1
  8524 ;; Hardware stack levels required when called:   13
  8525 ;; This function calls:
  8526 ;;		_send_msg
  8527 ;; This function is called by:
  8528 ;;		_main
  8529 ;; This function uses a non-reentrant model
  8530 ;;
  8531                           psect	text17,class=CODE,space=0,reloc=2
  8532                           global __ptext17
  8533  002012                     __ptext17:
  8534                           psect	text17
  8535                           	file	"../src/messages.c"
  8536                           	line	150
  8537                           	global	__size_of_FromMainLow_sendmsg
  8538  0000                     	__size_of_FromMainLow_sendmsg	equ	__end_of_FromMainLow_sendmsg-_FromMainLow_sendmsg
  8539                           	
  8540  002012                     _FromMainLow_sendmsg:
  8541                           	opt	stack 17
  8542                           	line	156
  8543                           	
  8544  002012                     l19410:
  8545                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  8546                           ;	Return value of _FromMainLow_sendmsg is never used
  8547  002012  0101               	movlb	1	; () banked
  8548  002014  0E01               	movlw	high(_FromMainLow_MQ)
  8549  002016  0101               	movlb	1	; () banked
  8550  002018  0101               	movlb	1	; () banked
  8551  00201A  6FA3               	movwf	((?_send_msg+1))&0ffh
  8552  00201C  0101               	movlb	1	; () banked
  8553  00201E  0E00               	movlw	low(_FromMainLow_MQ)
  8554  002020  0101               	movlb	1	; () banked
  8555  002022  6FA2               	movwf	((?_send_msg))&0ffh
  8556  002024  C1AD  F1A4         	movff	(FromMainLow_sendmsg@length),0+(?_send_msg+02h)
  8557  002028  C1AE  F1A5         	movff	(FromMainLow_sendmsg@msgtype),0+(?_send_msg+03h)
  8558  00202C  C1AF  F1A6         	movff	(FromMainLow_sendmsg@data),0+(?_send_msg+04h)
  8559  002030  C1B0  F1A7         	movff	(FromMainLow_sendmsg@data+1),1+(?_send_msg+04h)
  8560  002034  0101               	movlb	1	; () banked
  8561  002036  ECB0  F008         	call	_send_msg	;wreg free
  8562  00203A  D000               	goto	l5504
  8563                           	
  8564  00203C                     l19412:
  8565                           	line	157
  8566                           	
  8567  00203C                     l5504:
  8568  00203C  0012               	return
  8569                           	opt stack 0
  8570                           GLOBAL	__end_of_FromMainLow_sendmsg
  8571  00203E                     	__end_of_FromMainLow_sendmsg:
  8572                           	signat	_FromMainLow_sendmsg,12409
  8573                           	global	_uart_lthread
  8574                           
  8575 ;; *************** function _uart_lthread *****************
  8576 ;; Defined at:
  8577 ;;		line 9 in file "../src/uart_thread.c"
  8578 ;; Parameters:    Size  Location     Type
  8579 ;;  uptr            2   57[BANK0 ] PTR struct __uart_thread
  8580 ;;		 -> main@uthread_data(2), 
  8581 ;;  msgtype         2   59[BANK0 ] int 
  8582 ;;  length          2   61[BANK0 ] int 
  8583 ;;  msgbuffer       2   63[BANK0 ] PTR unsigned char 
  8584 ;;		 -> main@msgbuffer(11), 
  8585 ;; Auto vars:     Size  Location     Type
  8586 ;;		None
  8587 ;; Return value:  Size  Location     Type
  8588 ;;                  2   57[BANK0 ] int 
  8589 ;; Registers used:
  8590 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8591 ;; Tracked objects:
  8592 ;;		On entry : 0/0
  8593 ;;		On exit  : 0/0
  8594 ;;		Unchanged: 0/0
  8595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8596 ;;      Params:         0       8       0       0       0
  8597 ;;      Locals:         0       0       0       0       0
  8598 ;;      Temps:          0       0       0       0       0
  8599 ;;      Totals:         0       8       0       0       0
  8600 ;;Total ram usage:        8 bytes
  8601 ;; Hardware stack levels used:    1
  8602 ;; Hardware stack levels required when called:   11
  8603 ;; This function calls:
  8604 ;;		Nothing
  8605 ;; This function is called by:
  8606 ;;		_main
  8607 ;; This function uses a non-reentrant model
  8608 ;;
  8609                           psect	text18,class=CODE,space=0,reloc=2
  8610                           global __ptext18
  8611  001C4E                     __ptext18:
  8612                           psect	text18
  8613                           	file	"../src/uart_thread.c"
  8614                           	line	9
  8615                           	global	__size_of_uart_lthread
  8616  0000                     	__size_of_uart_lthread	equ	__end_of_uart_lthread-_uart_lthread
  8617                           	
  8618  001C4E                     _uart_lthread:
  8619                           	opt	stack 19
  8620                           	line	10
  8621                           	
  8622  001C4E                     l18618:
  8623                           ;uart_thread.c: 10: if (msgtype == 30) {
  8624  001C4E  0100               	movlb	0	; () banked
  8625  001C50  0100               	movlb	0	; () banked
  8626  001C52  51BB               	movf	((uart_lthread@msgtype))&0ffh,w
  8627  001C54  0A1E               	xorlw	30
  8628  001C56  11BC               	iorwf ((uart_lthread@msgtype+1))&0ffh,w
  8629                           
  8630  001C58  A4D8               	btfss	status,2
  8631  001C5A  D001               	goto	u1411
  8632  001C5C  D001               	goto	u1410
  8633  001C5E                     u1411:
  8634  001C5E  D002               	goto	l18622
  8635  001C60                     u1410:
  8636  001C60  D01C               	goto	l14640
  8637                           	line	11
  8638                           	
  8639  001C62                     l18620:; BSR set to: 0
  8640                           
  8641                           ;uart_thread.c: 11: } else if (msgtype == 31) {
  8642  001C62  D01B               	goto	l14640
  8643                           	
  8644  001C64                     l14637:; BSR set to: 0
  8645                           
  8646                           	
  8647  001C64                     l18622:; BSR set to: 0
  8648                           
  8649  001C64  0100               	movlb	0	; () banked
  8650  001C66  0100               	movlb	0	; () banked
  8651  001C68  51BB               	movf	((uart_lthread@msgtype))&0ffh,w
  8652  001C6A  0A1F               	xorlw	31
  8653  001C6C  11BC               	iorwf ((uart_lthread@msgtype+1))&0ffh,w
  8654                           
  8655  001C6E  A4D8               	btfss	status,2
  8656  001C70  D001               	goto	u1421
  8657  001C72  D001               	goto	u1420
  8658  001C74                     u1421:
  8659  001C74  D012               	goto	l14640
  8660  001C76                     u1420:
  8661                           	line	14
  8662                           	
  8663  001C76                     l18624:; BSR set to: 0
  8664                           
  8665                           ;uart_thread.c: 14: msgbuffer[length] = '\0';
  8666  001C76  0100               	movlb	0	; () banked
  8667  001C78  0100               	movlb	0	; () banked
  8668  001C7A  51BD               	movf	((uart_lthread@length))&0ffh,w
  8669  001C7C  0100               	movlb	0	; () banked
  8670  001C7E  0100               	movlb	0	; () banked
  8671  001C80  25BF               	addwf	((uart_lthread@msgbuffer))&0ffh,w
  8672  001C82  6ED9               	movwf	c:fsr2l
  8673  001C84  0100               	movlb	0	; () banked
  8674  001C86  0100               	movlb	0	; () banked
  8675  001C88  51BE               	movf	((uart_lthread@length+1))&0ffh,w
  8676  001C8A  0100               	movlb	0	; () banked
  8677  001C8C  0100               	movlb	0	; () banked
  8678  001C8E  21C0               	addwfc	((uart_lthread@msgbuffer+1))&0ffh,w
  8679  001C90  6EDA               	movwf	1+c:fsr2l
  8680  001C92  0E00               	movlw	low(0)
  8681  001C94  6EDF               	movwf	indf2
  8682  001C96  D001               	goto	l14640
  8683                           	line	16
  8684                           	
  8685  001C98                     l14639:; BSR set to: 0
  8686                           
  8687  001C98  D000               	goto	l14640
  8688                           	line	17
  8689                           	
  8690  001C9A                     l14638:; BSR set to: 0
  8691                           
  8692                           	
  8693  001C9A                     l14640:; BSR set to: 0
  8694                           
  8695  001C9A  0012               	return
  8696                           	opt stack 0
  8697                           GLOBAL	__end_of_uart_lthread
  8698  001C9C                     	__end_of_uart_lthread:
  8699                           	signat	_uart_lthread,16506
  8700                           	global	_init_queue
  8701                           
  8702 ;; *************** function _init_queue *****************
  8703 ;; Defined at:
  8704 ;;		line 14 in file "../src/messages.c"
  8705 ;; Parameters:    Size  Location     Type
  8706 ;;  qptr            2   57[BANK0 ] PTR struct __msg_queue
  8707 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8708 ;; Auto vars:     Size  Location     Type
  8709 ;;  i               1   60[BANK0 ] unsigned char 
  8710 ;; Return value:  Size  Location     Type
  8711 ;;		None               void
  8712 ;; Registers used:
  8713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8714 ;; Tracked objects:
  8715 ;;		On entry : 0/0
  8716 ;;		On exit  : 0/0
  8717 ;;		Unchanged: 0/0
  8718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8719 ;;      Params:         0       2       0       0       0
  8720 ;;      Locals:         0       1       0       0       0
  8721 ;;      Temps:          0       1       0       0       0
  8722 ;;      Totals:         0       4       0       0       0
  8723 ;;Total ram usage:        4 bytes
  8724 ;; Hardware stack levels used:    1
  8725 ;; Hardware stack levels required when called:   11
  8726 ;; This function calls:
  8727 ;;		Nothing
  8728 ;; This function is called by:
  8729 ;;		_init_queues
  8730 ;; This function uses a non-reentrant model
  8731 ;;
  8732                           psect	text19,class=CODE,space=0,reloc=2
  8733                           global __ptext19
  8734  0018F0                     __ptext19:
  8735                           psect	text19
  8736                           	file	"../src/messages.c"
  8737                           	line	14
  8738                           	global	__size_of_init_queue
  8739  0000                     	__size_of_init_queue	equ	__end_of_init_queue-_init_queue
  8740                           	
  8741  0018F0                     _init_queue:; BSR set to: 0
  8742                           
  8743                           	opt	stack 18
  8744                           	line	17
  8745                           	
  8746  0018F0                     l18626:
  8747                           ;messages.c: 15: unsigned char i;
  8748                           ;messages.c: 17: qptr->cur_write_ind = 0;
  8749  0018F0  0100               	movlb	0	; () banked
  8750  0018F2  EE20 F034          	lfsr	2,034h
  8751  0018F6  0100               	movlb	0	; () banked
  8752  0018F8  51B9               	movf	((init_queue@qptr))&0ffh,w
  8753  0018FA  26D9               	addwf	fsr2l
  8754  0018FC  0100               	movlb	0	; () banked
  8755  0018FE  51BA               	movf	((init_queue@qptr+1))&0ffh,w
  8756  001900  22DA               	addwfc	fsr2h
  8757  001902  0E00               	movlw	low(0)
  8758  001904  6EDF               	movwf	indf2
  8759                           	line	18
  8760                           ;messages.c: 18: qptr->cur_read_ind = 0;
  8761  001906  0100               	movlb	0	; () banked
  8762  001908  EE20 F035          	lfsr	2,035h
  8763  00190C  0100               	movlb	0	; () banked
  8764  00190E  51B9               	movf	((init_queue@qptr))&0ffh,w
  8765  001910  26D9               	addwf	fsr2l
  8766  001912  0100               	movlb	0	; () banked
  8767  001914  51BA               	movf	((init_queue@qptr+1))&0ffh,w
  8768  001916  22DA               	addwfc	fsr2h
  8769  001918  0E00               	movlw	low(0)
  8770  00191A  6EDF               	movwf	indf2
  8771                           	line	19
  8772                           	
  8773  00191C                     l18628:; BSR set to: 0
  8774                           
  8775                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  8776  00191C  0100               	movlb	0	; () banked
  8777  00191E  6FBB               	movwf	(??_init_queue+0+0)&0ffh
  8778  001920  0E00               	movlw	low(0)
  8779  001922  0100               	movlb	0	; () banked
  8780  001924  0100               	movlb	0	; () banked
  8781  001926  6FBC               	movwf	((init_queue@i))&0ffh
  8782  001928  0100               	movlb	0	; () banked
  8783  00192A  51BB               	movf	(??_init_queue+0+0)&0ffh,w
  8784                           	
  8785  00192C                     l18630:; BSR set to: 0
  8786                           
  8787  00192C  0E03               	movlw	(04h-1)
  8788  00192E  0100               	movlb	0	; () banked
  8789  001930  0100               	movlb	0	; () banked
  8790  001932  65BC               	cpfsgt	((init_queue@i))&0ffh
  8791  001934  D001               	goto	u1431
  8792  001936  D001               	goto	u1430
  8793  001938                     u1431:
  8794  001938  D002               	goto	l18634
  8795  00193A                     u1430:
  8796  00193A  D01C               	goto	l5473
  8797                           	
  8798  00193C                     l18632:; BSR set to: 0
  8799                           
  8800  00193C  D01B               	goto	l5473
  8801                           	
  8802  00193E                     l5471:; BSR set to: 0
  8803                           
  8804                           	line	20
  8805                           	
  8806  00193E                     l18634:; BSR set to: 0
  8807                           
  8808                           ;messages.c: 20: qptr->queue[i].full = 0;
  8809  00193E  0100               	movlb	0	; () banked
  8810  001940  0100               	movlb	0	; () banked
  8811  001942  51BC               	movf	((init_queue@i))&0ffh,w
  8812  001944  0D0D               	mullw	0Dh
  8813  001946  50F3               	movf	(prodl),c,w
  8814  001948  0100               	movlb	0	; () banked
  8815  00194A  0100               	movlb	0	; () banked
  8816  00194C  25B9               	addwf	((init_queue@qptr))&0ffh,w
  8817  00194E  6ED9               	movwf	c:fsr2l
  8818  001950  50F4               	movf	(prodh),c,w
  8819  001952  0100               	movlb	0	; () banked
  8820  001954  0100               	movlb	0	; () banked
  8821  001956  21BA               	addwfc	((init_queue@qptr+1))&0ffh,w
  8822  001958  6EDA               	movwf	1+c:fsr2l
  8823  00195A  0E00               	movlw	low(0)
  8824  00195C  6EDF               	movwf	indf2
  8825                           	line	19
  8826                           	
  8827  00195E                     l18636:; BSR set to: 0
  8828                           
  8829  00195E  0100               	movlb	0	; () banked
  8830  001960  0100               	movlb	0	; () banked
  8831  001962  2BBC               	incf	((init_queue@i))&0ffh
  8832                           	
  8833  001964                     l18638:; BSR set to: 0
  8834                           
  8835  001964  0E03               	movlw	(04h-1)
  8836  001966  0100               	movlb	0	; () banked
  8837  001968  0100               	movlb	0	; () banked
  8838  00196A  65BC               	cpfsgt	((init_queue@i))&0ffh
  8839  00196C  D001               	goto	u1441
  8840  00196E  D001               	goto	u1440
  8841  001970                     u1441:
  8842  001970  D7E6               	goto	l18634
  8843  001972                     u1440:
  8844  001972  D000               	goto	l5473
  8845                           	
  8846  001974                     l5472:; BSR set to: 0
  8847                           
  8848                           	line	22
  8849                           	
  8850  001974                     l5473:; BSR set to: 0
  8851                           
  8852  001974  0012               	return
  8853                           	opt stack 0
  8854                           GLOBAL	__end_of_init_queue
  8855  001976                     	__end_of_init_queue:
  8856                           	signat	_init_queue,4216
  8857                           	global	_send_msg
  8858                           
  8859 ;; *************** function _send_msg *****************
  8860 ;; Defined at:
  8861 ;;		line 24 in file "../src/messages.c"
  8862 ;; Parameters:    Size  Location     Type
  8863 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  8864 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8865 ;;  length          1    2[BANK1 ] unsigned char 
  8866 ;;  msgtype         1    3[BANK1 ] unsigned char 
  8867 ;;  data            2    4[BANK1 ] PTR void 
  8868 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), i2c_slave_int_handler@error
       _buf(3), 
  8869 ;;		 -> NULL(0), main@msgbuffer(11), main@ic(29), main@uc(5), 
  8870 ;; Auto vars:     Size  Location     Type
  8871 ;;  qmsg            2    9[BANK1 ] PTR struct __msg
  8872 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8873 ;;  tlength         2    6[BANK1 ] unsigned int 
  8874 ;;  slot            1    8[BANK1 ] unsigned char 
  8875 ;; Return value:  Size  Location     Type
  8876 ;;                  1    wreg      char 
  8877 ;; Registers used:
  8878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8879 ;; Tracked objects:
  8880 ;;		On entry : 0/0
  8881 ;;		On exit  : 0/0
  8882 ;;		Unchanged: 0/0
  8883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8884 ;;      Params:         0       0       6       0       0
  8885 ;;      Locals:         0       0       5       0       0
  8886 ;;      Temps:          0       1       0       0       0
  8887 ;;      Totals:         0       1      11       0       0
  8888 ;;Total ram usage:       12 bytes
  8889 ;; Hardware stack levels used:    1
  8890 ;; Hardware stack levels required when called:   12
  8891 ;; This function calls:
  8892 ;;		_memcpy
  8893 ;; This function is called by:
  8894 ;;		_FromMainLow_sendmsg
  8895 ;;		_FromMainHigh_sendmsg
  8896 ;; This function uses a non-reentrant model
  8897 ;;
  8898                           psect	text20,class=CODE,space=0,reloc=2
  8899                           global __ptext20
  8900  001160                     __ptext20:
  8901                           psect	text20
  8902                           	file	"../src/messages.c"
  8903                           	line	24
  8904                           	global	__size_of_send_msg
  8905  0000                     	__size_of_send_msg	equ	__end_of_send_msg-_send_msg
  8906                           	
  8907  001160                     _send_msg:; BSR set to: 0
  8908                           
  8909                           	opt	stack 17
  8910                           	line	28
  8911                           	
  8912  001160                     l19414:
  8913                           ;messages.c: 25: unsigned char slot;
  8914                           ;messages.c: 27: msg *qmsg;
  8915                           ;messages.c: 28: size_t tlength = length;
  8916  001160  0101               	movlb	1	; () banked
  8917  001162  0101               	movlb	1	; () banked
  8918  001164  C1A4  F1A8         	movff	(send_msg@length),(send_msg@tlength)
  8919  001168  0101               	movlb	1	; () banked
  8920  00116A  0101               	movlb	1	; () banked
  8921  00116C  6BA9               	clrf	((send_msg@tlength+1))&0ffh
  8922                           	line	38
  8923                           	
  8924  00116E                     l19416:; BSR set to: 1
  8925                           
  8926                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8927  00116E  0101               	movlb	1	; () banked
  8928  001170  EE20 F034          	lfsr	2,034h
  8929  001174  0101               	movlb	1	; () banked
  8930  001176  51A2               	movf	((send_msg@qptr))&0ffh,w
  8931  001178  26D9               	addwf	fsr2l
  8932  00117A  0101               	movlb	1	; () banked
  8933  00117C  51A3               	movf	((send_msg@qptr+1))&0ffh,w
  8934  00117E  22DA               	addwfc	fsr2h
  8935  001180  50DF               	movf	indf2,w
  8936  001182  0101               	movlb	1	; () banked
  8937  001184  0101               	movlb	1	; () banked
  8938  001186  6FAA               	movwf	((send_msg@slot))&0ffh
  8939                           	line	39
  8940                           	
  8941  001188                     l19418:; BSR set to: 1
  8942                           
  8943                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8944  001188  0101               	movlb	1	; () banked
  8945  00118A  0101               	movlb	1	; () banked
  8946  00118C  51AA               	movf	((send_msg@slot))&0ffh,w
  8947  00118E  0D0D               	mullw	0Dh
  8948  001190  50F3               	movf	(prodl),c,w
  8949  001192  0101               	movlb	1	; () banked
  8950  001194  0101               	movlb	1	; () banked
  8951  001196  25A2               	addwf	((send_msg@qptr))&0ffh,w
  8952  001198  0101               	movlb	1	; () banked
  8953                           	
  8954  00119A  0101               	movlb	1	; () banked
  8955  00119C  6FAB               	movwf	((send_msg@qmsg))&0ffh
  8956  00119E  50F4               	movf	(prodh),c,w
  8957  0011A0  0101               	movlb	1	; () banked
  8958  0011A2  0101               	movlb	1	; () banked
  8959  0011A4  21A3               	addwfc	((send_msg@qptr+1))&0ffh,w
  8960  0011A6  0101               	movlb	1	; () banked
  8961  0011A8  6FAC               	movwf	1+((send_msg@qmsg))&0ffh
  8962                           	line	41
  8963                           	
  8964  0011AA                     l19420:; BSR set to: 1
  8965                           
  8966                           ;messages.c: 41: if (qmsg->full != 0) {
  8967  0011AA  C1AB  FFD9         	movff	(send_msg@qmsg),fsr2l
  8968  0011AE  C1AC  FFDA         	movff	(send_msg@qmsg+1),fsr2h
  8969  0011B2  50DF               	movf	indf2,w
  8970  0011B4  B4D8               	btfsc	status,2
  8971  0011B6  D001               	goto	u2171
  8972  0011B8  D001               	goto	u2170
  8973  0011BA                     u2171:
  8974  0011BA  D003               	goto	l19426
  8975  0011BC                     u2170:
  8976                           	line	42
  8977                           	
  8978  0011BC                     l19422:; BSR set to: 1
  8979                           
  8980                           ;messages.c: 42: return (-1);
  8981  0011BC  0EFF               	movlw	(-1)&0ffh
  8982  0011BE  D052               	goto	l5477
  8983                           	
  8984  0011C0                     l19424:; BSR set to: 1
  8985                           
  8986  0011C0  D051               	goto	l5477
  8987                           	line	43
  8988                           	
  8989  0011C2                     l5476:; BSR set to: 1
  8990                           
  8991                           	line	46
  8992                           	
  8993  0011C2                     l19426:; BSR set to: 1
  8994                           
  8995                           ;messages.c: 43: }
  8996                           ;messages.c: 46: qmsg->length = length;
  8997  0011C2  0101               	movlb	1	; () banked
  8998  0011C4  EE20 F001          	lfsr	2,01h
  8999  0011C8  0101               	movlb	1	; () banked
  9000  0011CA  51AB               	movf	((send_msg@qmsg))&0ffh,w
  9001  0011CC  26D9               	addwf	fsr2l
  9002  0011CE  0101               	movlb	1	; () banked
  9003  0011D0  51AC               	movf	((send_msg@qmsg+1))&0ffh,w
  9004  0011D2  22DA               	addwfc	fsr2h
  9005  0011D4  0101               	movlb	1	; () banked
  9006  0011D6  C1A4  FFDF         	movff	(send_msg@length),indf2
  9007                           
  9008                           	line	47
  9009                           ;messages.c: 47: qmsg->msgtype = msgtype;
  9010  0011DA  0101               	movlb	1	; () banked
  9011  0011DC  EE20 F002          	lfsr	2,02h
  9012  0011E0  0101               	movlb	1	; () banked
  9013  0011E2  51AB               	movf	((send_msg@qmsg))&0ffh,w
  9014  0011E4  26D9               	addwf	fsr2l
  9015  0011E6  0101               	movlb	1	; () banked
  9016  0011E8  51AC               	movf	((send_msg@qmsg+1))&0ffh,w
  9017  0011EA  22DA               	addwfc	fsr2h
  9018  0011EC  0101               	movlb	1	; () banked
  9019  0011EE  C1A5  FFDF         	movff	(send_msg@msgtype),indf2
  9020                           
  9021                           	line	55
  9022                           	
  9023  0011F2                     l19428:; BSR set to: 1
  9024                           
  9025                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  9026  0011F2  0E03               	movlw	low(03h)
  9027  0011F4  0101               	movlb	1	; () banked
  9028  0011F6  0101               	movlb	1	; () banked
  9029  0011F8  25AB               	addwf	((send_msg@qmsg))&0ffh,w
  9030  0011FA  0100               	movlb	0	; () banked
  9031                           	
  9032  0011FC  0100               	movlb	0	; () banked
  9033  0011FE  6FB9               	movwf	((?_memcpy))&0ffh
  9034  001200  0E00               	movlw	high(03h)
  9035  001202  0101               	movlb	1	; () banked
  9036  001204  0101               	movlb	1	; () banked
  9037  001206  21AC               	addwfc	((send_msg@qmsg+1))&0ffh,w
  9038  001208  0100               	movlb	0	; () banked
  9039  00120A  6FBA               	movwf	1+((?_memcpy))&0ffh
  9040  00120C  C1A6  F0BB         	movff	(send_msg@data),0+(?_memcpy+02h)
  9041  001210  C1A7  F0BC         	movff	(send_msg@data+1),1+(?_memcpy+02h)
  9042  001214  C1A8  F0BD         	movff	(send_msg@tlength),0+(?_memcpy+04h)
  9043  001218  C1A9  F0BE         	movff	(send_msg@tlength+1),1+(?_memcpy+04h)
  9044  00121C  0100               	movlb	0	; () banked
  9045  00121E  ECFC  F00D         	call	_memcpy	;wreg free
  9046                           	line	56
  9047                           	
  9048  001222                     l19430:
  9049                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  9050  001222  0101               	movlb	1	; () banked
  9051  001224  EE20 F034          	lfsr	2,034h
  9052  001228  0101               	movlb	1	; () banked
  9053  00122A  51A2               	movf	((send_msg@qptr))&0ffh,w
  9054  00122C  26D9               	addwf	fsr2l
  9055  00122E  0101               	movlb	1	; () banked
  9056  001230  51A3               	movf	((send_msg@qptr+1))&0ffh,w
  9057  001232  22DA               	addwfc	fsr2h
  9058  001234  0101               	movlb	1	; () banked
  9059  001236  EE10 F034          	lfsr	1,034h
  9060  00123A  0101               	movlb	1	; () banked
  9061  00123C  51A2               	movf	((send_msg@qptr))&0ffh,w
  9062  00123E  26E1               	addwf	fsr1l
  9063  001240  0101               	movlb	1	; () banked
  9064  001242  51A3               	movf	((send_msg@qptr+1))&0ffh,w
  9065  001244  22E2               	addwfc	fsr1h
  9066  001246  50E7               	movf	indf1,w
  9067  001248  0100               	movlb	0	; () banked
  9068  00124A  6FC3               	movwf	(??_send_msg+0+0)&0ffh
  9069  00124C  0100               	movlb	0	; () banked
  9070  00124E  29C3               	incf	((??_send_msg+0+0))&0ffh,w
  9071  001250  0B03               	andlw	low(03h)
  9072  001252  6EDF               	movwf	indf2
  9073                           
  9074                           	line	59
  9075                           	
  9076  001254                     l19432:; BSR set to: 0
  9077                           
  9078                           ;messages.c: 59: qmsg->full = 1;
  9079  001254  C1AB  FFD9         	movff	(send_msg@qmsg),fsr2l
  9080  001258  C1AC  FFDA         	movff	(send_msg@qmsg+1),fsr2h
  9081  00125C  0E01               	movlw	low(01h)
  9082  00125E  6EDF               	movwf	indf2
  9083                           	line	60
  9084                           	
  9085  001260                     l19434:; BSR set to: 0
  9086                           
  9087                           ;messages.c: 60: return (1);
  9088  001260  0E01               	movlw	(01h)&0ffh
  9089  001262  D000               	goto	l5477
  9090                           	
  9091  001264                     l19436:; BSR set to: 0
  9092                           
  9093                           	line	61
  9094                           	
  9095  001264                     l5477:
  9096  001264  0012               	return
  9097                           	opt stack 0
  9098                           GLOBAL	__end_of_send_msg
  9099  001266                     	__end_of_send_msg:
  9100                           	signat	_send_msg,16505
  9101                           	global	_recv_msg
  9102                           
  9103 ;; *************** function _recv_msg *****************
  9104 ;; Defined at:
  9105 ;;		line 63 in file "../src/messages.c"
  9106 ;; Parameters:    Size  Location     Type
  9107 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  9108 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9109 ;;  maxlength       1    2[BANK1 ] unsigned char 
  9110 ;;  msgtype         2    3[BANK1 ] PTR unsigned char 
  9111 ;;		 -> RAM(1023), i2c_slave_int_handler@msgtype(1), main@msgtype(1), 
  9112 ;;  data            2    5[BANK1 ] PTR void 
  9113 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@data(10), main@msgbuffer(11), 
  9114 ;; Auto vars:     Size  Location     Type
  9115 ;;  qmsg            2   10[BANK1 ] PTR struct __msg
  9116 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9117 ;;  tlength         2    8[BANK1 ] unsigned int 
  9118 ;;  slot            1    7[BANK1 ] unsigned char 
  9119 ;; Return value:  Size  Location     Type
  9120 ;;                  1    wreg      char 
  9121 ;; Registers used:
  9122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9123 ;; Tracked objects:
  9124 ;;		On entry : 0/0
  9125 ;;		On exit  : 0/0
  9126 ;;		Unchanged: 0/0
  9127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9128 ;;      Params:         0       0       7       0       0
  9129 ;;      Locals:         0       0       5       0       0
  9130 ;;      Temps:          0       2       0       0       0
  9131 ;;      Totals:         0       2      12       0       0
  9132 ;;Total ram usage:       14 bytes
  9133 ;; Hardware stack levels used:    1
  9134 ;; Hardware stack levels required when called:   12
  9135 ;; This function calls:
  9136 ;;		_memcpy
  9137 ;; This function is called by:
  9138 ;;		_ToMainLow_recvmsg
  9139 ;;		_ToMainHigh_recvmsg
  9140 ;; This function uses a non-reentrant model
  9141 ;;
  9142                           psect	text21,class=CODE,space=0,reloc=2
  9143                           global __ptext21
  9144  000EEE                     __ptext21:
  9145                           psect	text21
  9146                           	file	"../src/messages.c"
  9147                           	line	63
  9148                           	global	__size_of_recv_msg
  9149  0000                     	__size_of_recv_msg	equ	__end_of_recv_msg-_recv_msg
  9150                           	
  9151  000EEE                     _recv_msg:
  9152                           	opt	stack 17
  9153                           	line	72
  9154                           	
  9155  000EEE                     l19448:
  9156                           ;messages.c: 64: unsigned char slot;
  9157                           ;messages.c: 68: msg *qmsg;
  9158                           ;messages.c: 69: size_t tlength;
  9159                           ;messages.c: 72: slot = qptr->cur_read_ind;
  9160  000EEE  0101               	movlb	1	; () banked
  9161  000EF0  EE20 F035          	lfsr	2,035h
  9162  000EF4  0101               	movlb	1	; () banked
  9163  000EF6  51A2               	movf	((recv_msg@qptr))&0ffh,w
  9164  000EF8  26D9               	addwf	fsr2l
  9165  000EFA  0101               	movlb	1	; () banked
  9166  000EFC  51A3               	movf	((recv_msg@qptr+1))&0ffh,w
  9167  000EFE  22DA               	addwfc	fsr2h
  9168  000F00  50DF               	movf	indf2,w
  9169  000F02  0101               	movlb	1	; () banked
  9170  000F04  0101               	movlb	1	; () banked
  9171  000F06  6FA9               	movwf	((recv_msg@slot))&0ffh
  9172                           	line	73
  9173                           	
  9174  000F08                     l19450:; BSR set to: 1
  9175                           
  9176                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  9177  000F08  0101               	movlb	1	; () banked
  9178  000F0A  0101               	movlb	1	; () banked
  9179  000F0C  51A9               	movf	((recv_msg@slot))&0ffh,w
  9180  000F0E  0D0D               	mullw	0Dh
  9181  000F10  50F3               	movf	(prodl),c,w
  9182  000F12  0101               	movlb	1	; () banked
  9183  000F14  0101               	movlb	1	; () banked
  9184  000F16  25A2               	addwf	((recv_msg@qptr))&0ffh,w
  9185  000F18  0101               	movlb	1	; () banked
  9186                           	
  9187  000F1A  0101               	movlb	1	; () banked
  9188  000F1C  6FAC               	movwf	((recv_msg@qmsg))&0ffh
  9189  000F1E  50F4               	movf	(prodh),c,w
  9190  000F20  0101               	movlb	1	; () banked
  9191  000F22  0101               	movlb	1	; () banked
  9192  000F24  21A3               	addwfc	((recv_msg@qptr+1))&0ffh,w
  9193  000F26  0101               	movlb	1	; () banked
  9194  000F28  6FAD               	movwf	1+((recv_msg@qmsg))&0ffh
  9195                           	line	74
  9196                           	
  9197  000F2A                     l19452:; BSR set to: 1
  9198                           
  9199                           ;messages.c: 74: if (qmsg->full == 1) {
  9200  000F2A  0E01               	movlw	(01h)&0ffh
  9201  000F2C  C1AC  FFD9         	movff	(recv_msg@qmsg),fsr2l
  9202  000F30  C1AD  FFDA         	movff	(recv_msg@qmsg+1),fsr2h
  9203  000F34  62DF               	cpfseq	indf2
  9204  000F36  D001               	goto	u2191
  9205  000F38  D001               	goto	u2190
  9206  000F3A                     u2191:
  9207  000F3A  D075               	goto	l19476
  9208  000F3C                     u2190:
  9209                           	line	76
  9210                           	
  9211  000F3C                     l19454:; BSR set to: 1
  9212                           
  9213                           ;messages.c: 76: if (qmsg->length > maxlength) {
  9214  000F3C  0101               	movlb	1	; () banked
  9215  000F3E  EE20 F001          	lfsr	2,01h
  9216  000F42  0101               	movlb	1	; () banked
  9217  000F44  51AC               	movf	((recv_msg@qmsg))&0ffh,w
  9218  000F46  26D9               	addwf	fsr2l
  9219  000F48  0101               	movlb	1	; () banked
  9220  000F4A  51AD               	movf	((recv_msg@qmsg+1))&0ffh,w
  9221  000F4C  22DA               	addwfc	fsr2h
  9222  000F4E  50DF               	movf	indf2,w
  9223  000F50  0101               	movlb	1	; () banked
  9224  000F52  0101               	movlb	1	; () banked
  9225  000F54  61A4               	cpfslt	((recv_msg@maxlength))&0ffh
  9226  000F56  D001               	goto	u2201
  9227  000F58  D001               	goto	u2200
  9228  000F5A                     u2201:
  9229  000F5A  D003               	goto	l19460
  9230  000F5C                     u2200:
  9231                           	line	77
  9232                           	
  9233  000F5C                     l19456:; BSR set to: 1
  9234                           
  9235                           ;messages.c: 77: return (-3);
  9236  000F5C  0EFD               	movlw	(-3)&0ffh
  9237  000F5E  D066               	goto	l5482
  9238                           	
  9239  000F60                     l19458:; BSR set to: 1
  9240                           
  9241  000F60  D065               	goto	l5482
  9242                           	line	78
  9243                           	
  9244  000F62                     l5481:; BSR set to: 1
  9245                           
  9246                           	line	80
  9247                           	
  9248  000F62                     l19460:; BSR set to: 1
  9249                           
  9250                           ;messages.c: 78: }
  9251                           ;messages.c: 80: tlength = qmsg->length;
  9252  000F62  0101               	movlb	1	; () banked
  9253  000F64  EE20 F001          	lfsr	2,01h
  9254  000F68  0101               	movlb	1	; () banked
  9255  000F6A  51AC               	movf	((recv_msg@qmsg))&0ffh,w
  9256  000F6C  26D9               	addwf	fsr2l
  9257  000F6E  0101               	movlb	1	; () banked
  9258  000F70  51AD               	movf	((recv_msg@qmsg+1))&0ffh,w
  9259  000F72  22DA               	addwfc	fsr2h
  9260  000F74  50DF               	movf	indf2,w
  9261  000F76  0100               	movlb	0	; () banked
  9262  000F78  6FC3               	movwf	(??_recv_msg+0+0)&0ffh
  9263  000F7A  0100               	movlb	0	; () banked
  9264  000F7C  51C3               	movf	((??_recv_msg+0+0))&0ffh,w
  9265  000F7E  0101               	movlb	1	; () banked
  9266  000F80  0101               	movlb	1	; () banked
  9267  000F82  6FAA               	movwf	((recv_msg@tlength))&0ffh
  9268  000F84  0101               	movlb	1	; () banked
  9269  000F86  6BAB               	clrf	((recv_msg@tlength+1))&0ffh
  9270                           	line	81
  9271                           	
  9272  000F88                     l19462:; BSR set to: 1
  9273                           
  9274                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  9275  000F88  C1A7  F0B9         	movff	(recv_msg@data),(?_memcpy)
  9276  000F8C  C1A8  F0BA         	movff	(recv_msg@data+1),(?_memcpy+1)
  9277  000F90  0E03               	movlw	03h
  9278  000F92  0101               	movlb	1	; () banked
  9279  000F94  0101               	movlb	1	; () banked
  9280  000F96  25AC               	addwf	((recv_msg@qmsg))&0ffh,w
  9281  000F98  0100               	movlb	0	; () banked
  9282  000F9A  6FC3               	movwf	(??_recv_msg+0+0)&0ffh
  9283  000F9C  0E00               	movlw	0
  9284  000F9E  0101               	movlb	1	; () banked
  9285  000FA0  0101               	movlb	1	; () banked
  9286  000FA2  21AD               	addwfc	((recv_msg@qmsg+1))&0ffh,w
  9287  000FA4  0100               	movlb	0	; () banked
  9288  000FA6  6FC4               	movwf	(??_recv_msg+0+0+1)&0ffh
  9289  000FA8  C0C3  F0BB         	movff	??_recv_msg+0+0,0+(?_memcpy+02h)
  9290  000FAC  C0C4  F0BC         	movff	??_recv_msg+0+1,1+(?_memcpy+02h)
  9291  000FB0  C1AA  F0BD         	movff	(recv_msg@tlength),0+(?_memcpy+04h)
  9292  000FB4  C1AB  F0BE         	movff	(recv_msg@tlength+1),1+(?_memcpy+04h)
  9293  000FB8  0100               	movlb	0	; () banked
  9294  000FBA  ECFC  F00D         	call	_memcpy	;wreg free
  9295                           	line	87
  9296                           	
  9297  000FBE                     l19464:
  9298                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  9299  000FBE  0101               	movlb	1	; () banked
  9300  000FC0  EE20 F035          	lfsr	2,035h
  9301  000FC4  0101               	movlb	1	; () banked
  9302  000FC6  51A2               	movf	((recv_msg@qptr))&0ffh,w
  9303  000FC8  26D9               	addwf	fsr2l
  9304  000FCA  0101               	movlb	1	; () banked
  9305  000FCC  51A3               	movf	((recv_msg@qptr+1))&0ffh,w
  9306  000FCE  22DA               	addwfc	fsr2h
  9307  000FD0  0101               	movlb	1	; () banked
  9308  000FD2  EE10 F035          	lfsr	1,035h
  9309  000FD6  0101               	movlb	1	; () banked
  9310  000FD8  51A2               	movf	((recv_msg@qptr))&0ffh,w
  9311  000FDA  26E1               	addwf	fsr1l
  9312  000FDC  0101               	movlb	1	; () banked
  9313  000FDE  51A3               	movf	((recv_msg@qptr+1))&0ffh,w
  9314  000FE0  22E2               	addwfc	fsr1h
  9315  000FE2  50E7               	movf	indf1,w
  9316  000FE4  0100               	movlb	0	; () banked
  9317  000FE6  6FC3               	movwf	(??_recv_msg+0+0)&0ffh
  9318  000FE8  0100               	movlb	0	; () banked
  9319  000FEA  29C3               	incf	((??_recv_msg+0+0))&0ffh,w
  9320  000FEC  0B03               	andlw	low(03h)
  9321  000FEE  6EDF               	movwf	indf2
  9322                           
  9323                           	line	89
  9324                           	
  9325  000FF0                     l19466:; BSR set to: 0
  9326                           
  9327                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  9328  000FF0  0101               	movlb	1	; () banked
  9329  000FF2  EE20 F002          	lfsr	2,02h
  9330  000FF6  0101               	movlb	1	; () banked
  9331  000FF8  51AC               	movf	((recv_msg@qmsg))&0ffh,w
  9332  000FFA  26D9               	addwf	fsr2l
  9333  000FFC  0101               	movlb	1	; () banked
  9334  000FFE  51AD               	movf	((recv_msg@qmsg+1))&0ffh,w
  9335  001000  22DA               	addwfc	fsr2h
  9336  001002  C1A5  FFE1         	movff	(recv_msg@msgtype),fsr1l
  9337  001006  C1A6  FFE2         	movff	(recv_msg@msgtype+1),fsr1h
  9338  00100A  CFDF FFE7          	movff	indf2,indf1
  9339                           	line	91
  9340                           	
  9341  00100E                     l19468:; BSR set to: 1
  9342                           
  9343                           ;messages.c: 91: qmsg->full = 0;
  9344  00100E  C1AC  FFD9         	movff	(recv_msg@qmsg),fsr2l
  9345  001012  C1AD  FFDA         	movff	(recv_msg@qmsg+1),fsr2h
  9346  001016  0E00               	movlw	low(0)
  9347  001018  6EDF               	movwf	indf2
  9348                           	line	92
  9349                           	
  9350  00101A                     l19470:; BSR set to: 1
  9351                           
  9352                           ;messages.c: 92: return (tlength);
  9353  00101A  0101               	movlb	1	; () banked
  9354  00101C  0101               	movlb	1	; () banked
  9355  00101E  51AA               	movf	((recv_msg@tlength))&0ffh,w
  9356  001020  D005               	goto	l5482
  9357                           	
  9358  001022                     l19472:; BSR set to: 1
  9359                           
  9360  001022  D004               	goto	l5482
  9361                           	line	93
  9362                           	
  9363  001024                     l19474:; BSR set to: 1
  9364                           
  9365                           ;messages.c: 93: } else {
  9366  001024  D003               	goto	l5482
  9367                           	
  9368  001026                     l5480:; BSR set to: 1
  9369                           
  9370                           	line	94
  9371                           	
  9372  001026                     l19476:; BSR set to: 1
  9373                           
  9374                           ;messages.c: 94: return (-4);
  9375  001026  0EFC               	movlw	(-4)&0ffh
  9376  001028  D001               	goto	l5482
  9377                           	
  9378  00102A                     l19478:; BSR set to: 1
  9379                           
  9380  00102A  D000               	goto	l5482
  9381                           	line	95
  9382                           	
  9383  00102C                     l5483:; BSR set to: 1
  9384                           
  9385                           	line	96
  9386                           	
  9387  00102C                     l5482:; BSR set to: 1
  9388                           
  9389  00102C  0012               	return
  9390                           	opt stack 0
  9391                           GLOBAL	__end_of_recv_msg
  9392  00102E                     	__end_of_recv_msg:
  9393                           	signat	_recv_msg,16505
  9394                           	global	_memcpy
  9395                           
  9396 ;; *************** function _memcpy *****************
  9397 ;; Defined at:
  9398 ;;		line 13 in file "/opt/microchip/xc8/v1.10/sources/memcpy.c"
  9399 ;; Parameters:    Size  Location     Type
  9400 ;;  d1              2   57[BANK0 ] PTR void 
  9401 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  9402 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  9403 ;;  s1              2   59[BANK0 ] PTR const void 
  9404 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), i2c_slave_int_handler@error
       _buf(3), 
  9405 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  9406 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@ic(29), main@uc(5), 
  9407 ;;  n               2   61[BANK0 ] unsigned int 
  9408 ;; Auto vars:     Size  Location     Type
  9409 ;;  s               2   65[BANK0 ] PTR const unsigned char 
  9410 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), i2c_slave_int_handler@error
       _buf(3), 
  9411 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  9412 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@ic(29), main@uc(5), 
  9413 ;;  d               2   63[BANK0 ] PTR unsigned char 
  9414 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  9415 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  9416 ;; Return value:  Size  Location     Type
  9417 ;;                  2   57[BANK0 ] PTR void 
  9418 ;; Registers used:
  9419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9420 ;; Tracked objects:
  9421 ;;		On entry : 0/0
  9422 ;;		On exit  : 0/0
  9423 ;;		Unchanged: 0/0
  9424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9425 ;;      Params:         0       6       0       0       0
  9426 ;;      Locals:         0       4       0       0       0
  9427 ;;      Temps:          0       0       0       0       0
  9428 ;;      Totals:         0      10       0       0       0
  9429 ;;Total ram usage:       10 bytes
  9430 ;; Hardware stack levels used:    1
  9431 ;; Hardware stack levels required when called:   11
  9432 ;; This function calls:
  9433 ;;		Nothing
  9434 ;; This function is called by:
  9435 ;;		_send_msg
  9436 ;;		_recv_msg
  9437 ;; This function uses a non-reentrant model
  9438 ;;
  9439                           psect	text22,class=CODE,space=0,reloc=2
  9440                           global __ptext22
  9441  001BF8                     __ptext22:
  9442                           psect	text22
  9443                           	file	"/opt/microchip/xc8/v1.10/sources/memcpy.c"
  9444                           	line	13
  9445                           	global	__size_of_memcpy
  9446  0000                     	__size_of_memcpy	equ	__end_of_memcpy-_memcpy
  9447                           	
  9448  001BF8                     _memcpy:; BSR set to: 1
  9449                           
  9450                           	opt	stack 17
  9451                           	line	24
  9452                           	
  9453  001BF8                     l19438:
  9454  001BF8  C0BB  F0C1         	movff	(memcpy@s1),(memcpy@s)
  9455  001BFC  C0BC  F0C2         	movff	(memcpy@s1+1),(memcpy@s+1)
  9456                           	line	25
  9457  001C00  C0B9  F0BF         	movff	(memcpy@d1),(memcpy@d)
  9458  001C04  C0BA  F0C0         	movff	(memcpy@d1+1),(memcpy@d+1)
  9459                           	line	26
  9460  001C08  D013               	goto	l19446
  9461                           	
  9462  001C0A                     l17092:
  9463                           	line	27
  9464                           	
  9465  001C0A                     l19440:
  9466  001C0A  C0C1  FFD9         	movff	(memcpy@s),fsr2l
  9467  001C0E  C0C2  FFDA         	movff	(memcpy@s+1),fsr2h
  9468  001C12  C0BF  FFE1         	movff	(memcpy@d),fsr1l
  9469  001C16  C0C0  FFE2         	movff	(memcpy@d+1),fsr1h
  9470  001C1A  CFDF FFE7          	movff	indf2,indf1
  9471                           	
  9472  001C1E                     l19442:
  9473  001C1E  0100               	movlb	0	; () banked
  9474  001C20  0100               	movlb	0	; () banked
  9475  001C22  4BC1               	infsnz	((memcpy@s))&0ffh
  9476  001C24  2BC2               	incf	((memcpy@s+1))&0ffh
  9477                           	
  9478  001C26                     l19444:; BSR set to: 0
  9479                           
  9480  001C26  0100               	movlb	0	; () banked
  9481  001C28  0100               	movlb	0	; () banked
  9482  001C2A  4BBF               	infsnz	((memcpy@d))&0ffh
  9483  001C2C  2BC0               	incf	((memcpy@d+1))&0ffh
  9484  001C2E  D000               	goto	l19446
  9485                           	
  9486  001C30                     l17091:; BSR set to: 0
  9487                           
  9488                           	line	26
  9489                           	
  9490  001C30                     l19446:
  9491  001C30  0100               	movlb	0	; () banked
  9492  001C32  0100               	movlb	0	; () banked
  9493  001C34  07BD               	decf	((memcpy@n))&0ffh
  9494  001C36  A0D8               	btfss	status,0
  9495  001C38  07BE               	decf	((memcpy@n+1))&0ffh
  9496  001C3A  0100               	movlb	0	; () banked
  9497  001C3C  29BD               	incf	((memcpy@n))&0ffh,w
  9498  001C3E  B4D8               	btfsc	status,2
  9499  001C40  29BE               	incf ((memcpy@n+1))&0ffh,w
  9500                           
  9501  001C42  A4D8               	btfss	status,2
  9502  001C44  D001               	goto	u2181
  9503  001C46  D001               	goto	u2180
  9504  001C48                     u2181:
  9505  001C48  D7E0               	goto	l19440
  9506  001C4A                     u2180:
  9507  001C4A  D000               	goto	l17094
  9508                           	
  9509  001C4C                     l17093:; BSR set to: 0
  9510                           
  9511                           	line	32
  9512                           ;	Return value of _memcpy is never used
  9513                           	
  9514  001C4C                     l17094:; BSR set to: 0
  9515                           
  9516  001C4C  0012               	return
  9517                           	opt stack 0
  9518                           GLOBAL	__end_of_memcpy
  9519  001C4E                     	__end_of_memcpy:
  9520                           	signat	_memcpy,12410
  9521                           	global	_check_msg
  9522                           
  9523 ;; *************** function _check_msg *****************
  9524 ;; Defined at:
  9525 ;;		line 222 in file "../src/messages.c"
  9526 ;; Parameters:    Size  Location     Type
  9527 ;;  qptr            2   57[BANK0 ] PTR struct __msg_queue
  9528 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9529 ;; Auto vars:     Size  Location     Type
  9530 ;;		None
  9531 ;; Return value:  Size  Location     Type
  9532 ;;                  1    wreg      unsigned char 
  9533 ;; Registers used:
  9534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9535 ;; Tracked objects:
  9536 ;;		On entry : 0/0
  9537 ;;		On exit  : 0/0
  9538 ;;		Unchanged: 0/0
  9539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9540 ;;      Params:         0       2       0       0       0
  9541 ;;      Locals:         0       0       0       0       0
  9542 ;;      Temps:          0       1       0       0       0
  9543 ;;      Totals:         0       3       0       0       0
  9544 ;;Total ram usage:        3 bytes
  9545 ;; Hardware stack levels used:    1
  9546 ;; Hardware stack levels required when called:   11
  9547 ;; This function calls:
  9548 ;;		Nothing
  9549 ;; This function is called by:
  9550 ;;		_block_on_To_msgqueues
  9551 ;; This function uses a non-reentrant model
  9552 ;;
  9553                           psect	text23,class=CODE,space=0,reloc=2
  9554                           global __ptext23
  9555  001E7E                     __ptext23:
  9556                           psect	text23
  9557                           	file	"../src/messages.c"
  9558                           	line	222
  9559                           	global	__size_of_check_msg
  9560  0000                     	__size_of_check_msg	equ	__end_of_check_msg-_check_msg
  9561                           	
  9562  001E7E                     _check_msg:; BSR set to: 0
  9563                           
  9564                           	opt	stack 18
  9565                           	line	223
  9566                           	
  9567  001E7E                     l18724:
  9568                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  9569  001E7E  0100               	movlb	0	; () banked
  9570  001E80  EE20 F035          	lfsr	2,035h
  9571  001E84  0100               	movlb	0	; () banked
  9572  001E86  51B9               	movf	((check_msg@qptr))&0ffh,w
  9573  001E88  26D9               	addwf	fsr2l
  9574  001E8A  0100               	movlb	0	; () banked
  9575  001E8C  51BA               	movf	((check_msg@qptr+1))&0ffh,w
  9576  001E8E  22DA               	addwfc	fsr2h
  9577  001E90  50DF               	movf	indf2,w
  9578  001E92  0100               	movlb	0	; () banked
  9579  001E94  6FBB               	movwf	(??_check_msg+0+0)&0ffh
  9580  001E96  0100               	movlb	0	; () banked
  9581  001E98  51BB               	movf	((??_check_msg+0+0))&0ffh,w
  9582  001E9A  0D0D               	mullw	0Dh
  9583  001E9C  50F3               	movf	(prodl),c,w
  9584  001E9E  0100               	movlb	0	; () banked
  9585  001EA0  0100               	movlb	0	; () banked
  9586  001EA2  25B9               	addwf	((check_msg@qptr))&0ffh,w
  9587  001EA4  6ED9               	movwf	c:fsr2l
  9588  001EA6  50F4               	movf	(prodh),c,w
  9589  001EA8  0100               	movlb	0	; () banked
  9590  001EAA  0100               	movlb	0	; () banked
  9591  001EAC  21BA               	addwfc	((check_msg@qptr+1))&0ffh,w
  9592  001EAE  6EDA               	movwf	1+c:fsr2l
  9593  001EB0  50DF               	movf	indf2,w
  9594  001EB2  D000               	goto	l5526
  9595                           	
  9596  001EB4                     l18726:; BSR set to: 0
  9597                           
  9598                           	line	224
  9599                           	
  9600  001EB4                     l5526:; BSR set to: 0
  9601                           
  9602  001EB4  0012               	return
  9603                           	opt stack 0
  9604                           GLOBAL	__end_of_check_msg
  9605  001EB6                     	__end_of_check_msg:
  9606                           	signat	_check_msg,4217
  9607                           	global	_Delay1KTCYx
  9608                           
  9609 ;; *************** function _Delay1KTCYx *****************
  9610 ;; Defined at:
  9611 ;;		line 9 in file "../common/d1ktcyx.c"
  9612 ;; Parameters:    Size  Location     Type
  9613 ;;  unit            1   57[BANK0 ] unsigned char 
  9614 ;; Auto vars:     Size  Location     Type
  9615 ;;		None
  9616 ;; Return value:  Size  Location     Type
  9617 ;;		None               void
  9618 ;; Registers used:
  9619 ;;		wreg
  9620 ;; Tracked objects:
  9621 ;;		On entry : 0/0
  9622 ;;		On exit  : 0/0
  9623 ;;		Unchanged: 0/0
  9624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9625 ;;      Params:         0       1       0       0       0
  9626 ;;      Locals:         0       0       0       0       0
  9627 ;;      Temps:          0       0       0       0       0
  9628 ;;      Totals:         0       1       0       0       0
  9629 ;;Total ram usage:        1 bytes
  9630 ;; Hardware stack levels used:    1
  9631 ;; Hardware stack levels required when called:   11
  9632 ;; This function calls:
  9633 ;;		Nothing
  9634 ;; This function is called by:
  9635 ;;		_block_on_To_msgqueues
  9636 ;; This function uses a non-reentrant model
  9637 ;;
  9638                           psect	text24,class=CODE,space=0,reloc=2
  9639                           global __ptext24
  9640  00214A                     __ptext24:
  9641                           psect	text24
  9642                           	file	"../common/d1ktcyx.c"
  9643                           	line	9
  9644                           	global	__size_of_Delay1KTCYx
  9645  0000                     	__size_of_Delay1KTCYx	equ	__end_of_Delay1KTCYx-_Delay1KTCYx
  9646                           	
  9647  00214A                     _Delay1KTCYx:; BSR set to: 0
  9648                           
  9649                           	opt	stack 18
  9650                           	line	10
  9651                           	
  9652  00214A                     l17156:
  9653                           	line	11
  9654                           	
  9655  00214A                     l18728:
  9656  00214A  0EFA               	movlw	250
  9657  00214C                     u2617:
  9658  00214C  F000               	nop
  9659  00214E  2EE8               decfsz	wreg,f
  9660  002150  D7FD               	goto	u2617
  9661                           
  9662                           	line	12
  9663                           	
  9664  002152                     l18730:
  9665  002152  0100               	movlb	0	; () banked
  9666  002154  0100               	movlb	0	; () banked
  9667  002156  2FB9               	decfsz	((Delay1KTCYx@unit))&0ffh
  9668                           	
  9669  002158  D7F8               	goto	l17156
  9670  00215A  D000               	goto	l17158
  9671                           	
  9672  00215C                     l17157:; BSR set to: 0
  9673                           
  9674                           	line	13
  9675                           	
  9676  00215C                     l17158:; BSR set to: 0
  9677                           
  9678  00215C  0012               	return
  9679                           	opt stack 0
  9680                           GLOBAL	__end_of_Delay1KTCYx
  9681  00215E                     	__end_of_Delay1KTCYx:
  9682                           	signat	_Delay1KTCYx,4216
  9683                           	global	_OpenADC
  9684                           
  9685 ;; *************** function _OpenADC *****************
  9686 ;; Defined at:
  9687 ;;		line 71 in file "plib/ADC/adcopen.c"
  9688 ;; Parameters:    Size  Location     Type
  9689 ;;  config          1   57[BANK0 ] unsigned char 
  9690 ;;  config2         1   58[BANK0 ] unsigned char 
  9691 ;;  portconfig      1   59[BANK0 ] unsigned char 
  9692 ;; Auto vars:     Size  Location     Type
  9693 ;;		None
  9694 ;; Return value:  Size  Location     Type
  9695 ;;		None               void
  9696 ;; Registers used:
  9697 ;;		wreg, status,2, status,0
  9698 ;; Tracked objects:
  9699 ;;		On entry : 0/0
  9700 ;;		On exit  : 0/0
  9701 ;;		Unchanged: 0/0
  9702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9703 ;;      Params:         0       3       0       0       0
  9704 ;;      Locals:         0       0       0       0       0
  9705 ;;      Temps:          0       2       0       0       0
  9706 ;;      Totals:         0       5       0       0       0
  9707 ;;Total ram usage:        5 bytes
  9708 ;; Hardware stack levels used:    1
  9709 ;; Hardware stack levels required when called:   11
  9710 ;; This function calls:
  9711 ;;		Nothing
  9712 ;; This function is called by:
  9713 ;;		_init_timer1_lthread
  9714 ;; This function uses a non-reentrant model
  9715 ;;
  9716                           psect	text25,class=CODE,space=0,reloc=2
  9717                           global __ptext25
  9718  001976                     __ptext25:
  9719                           psect	text25
  9720                           	file	"plib/ADC/adcopen.c"
  9721                           	line	71
  9722                           	global	__size_of_OpenADC
  9723  0000                     	__size_of_OpenADC	equ	__end_of_OpenADC-_OpenADC
  9724                           	
  9725  001976                     _OpenADC:; BSR set to: 0
  9726                           
  9727                           	opt	stack 18
  9728                           	line	72
  9729                           	
  9730  001976                     l19084:
  9731  001976  0E00               	movlw	low(0)
  9732  001978  6EC2               	movwf	((c:4034)),c	;volatile
  9733                           	line	73
  9734  00197A  0E00               	movlw	low(0)
  9735  00197C  6EC0               	movwf	((c:4032)),c	;volatile
  9736                           	line	75
  9737                           	
  9738  00197E                     l19086:
  9739  00197E  0100               	movlb	0	; () banked
  9740  001980  0100               	movlb	0	; () banked
  9741  001982  90D8               	bcf	status,0
  9742  001984  31BA               	rrcf	((OpenADC@config2))&0ffh,w
  9743  001986  0B3C               	andlw	low(03Ch)
  9744  001988  6EC2               	movwf	((c:4034)),c	;volatile
  9745                           	line	77
  9746                           	
  9747  00198A                     l19088:; BSR set to: 0
  9748                           
  9749  00198A  C0BA  F0BC         	movff	(OpenADC@config2),??_OpenADC+0+0
  9750  00198E  0100               	movlb	0	; () banked
  9751  001990  3BBC               	swapf	(??_OpenADC+0+0)&0ffh
  9752  001992  0EF0               	movlw	(0ffh shl 4) & 0ffh
  9753  001994  17BC               	andwf	(??_OpenADC+0+0)&0ffh
  9754  001996  0E30               	movlw	030h
  9755  001998  0100               	movlb	0	; () banked
  9756  00199A  17BC               	andwf	(??_OpenADC+0+0)&0ffh
  9757  00199C  0100               	movlb	0	; () banked
  9758  00199E  0100               	movlb	0	; () banked
  9759  0019A0  51BB               	movf	((OpenADC@portconfig))&0ffh,w
  9760  0019A2  0B0F               	andlw	low(0Fh)
  9761  0019A4  0100               	movlb	0	; () banked
  9762  0019A6  11BC               	iorwf	(??_OpenADC+0+0)&0ffh,w
  9763  0019A8  6EC1               	movwf	((c:4033)),c	;volatile
  9764                           	line	80
  9765                           	
  9766  0019AA                     l19090:; BSR set to: 0
  9767                           
  9768  0019AA  C0B9  F0BC         	movff	(OpenADC@config),??_OpenADC+0+0
  9769  0019AE  0100               	movlb	0	; () banked
  9770  0019B0  90D8               	bcf	status,0
  9771  0019B2  37BC               	rlcf	(??_OpenADC+0+0)&0ffh
  9772  0019B4  0100               	movlb	0	; () banked
  9773  0019B6  90D8               	bcf	status,0
  9774  0019B8  37BC               	rlcf	(??_OpenADC+0+0)&0ffh
  9775                           
  9776  0019BA  0E38               	movlw	038h
  9777  0019BC  0100               	movlb	0	; () banked
  9778  0019BE  17BC               	andwf	(??_OpenADC+0+0)&0ffh
  9779  0019C0  C0B9  F0BD         	movff	(OpenADC@config),??_OpenADC+1+0
  9780  0019C4  0100               	movlb	0	; () banked
  9781  0019C6  3BBD               	swapf	(??_OpenADC+1+0)&0ffh
  9782  0019C8  0E0F               	movlw	(0ffh shr 4) & 0ffh
  9783  0019CA  17BD               	andwf	(??_OpenADC+1+0)&0ffh
  9784  0019CC  0E07               	movlw	07h
  9785  0019CE  0100               	movlb	0	; () banked
  9786  0019D0  17BD               	andwf	(??_OpenADC+1+0)&0ffh
  9787  0019D2  0100               	movlb	0	; () banked
  9788  0019D4  0100               	movlb	0	; () banked
  9789  0019D6  51B9               	movf	((OpenADC@config))&0ffh,w
  9790  0019D8  0B80               	andlw	low(080h)
  9791  0019DA  0100               	movlb	0	; () banked
  9792  0019DC  11BD               	iorwf	(??_OpenADC+1+0)&0ffh,w
  9793  0019DE  0100               	movlb	0	; () banked
  9794  0019E0  11BC               	iorwf	(??_OpenADC+0+0)&0ffh,w
  9795  0019E2  6EC0               	movwf	((c:4032)),c	;volatile
  9796                           	line	82
  9797                           	
  9798  0019E4                     l19092:; BSR set to: 0
  9799                           
  9800  0019E4  0100               	movlb	0	; () banked
  9801                           	
  9802  0019E6  0100               	movlb	0	; () banked
  9803  0019E8  AFBA               	btfss	((OpenADC@config2))&0ffh,(7)&7
  9804  0019EA  D001               	goto	u1961
  9805  0019EC  D001               	goto	u1960
  9806  0019EE                     u1961:
  9807  0019EE  D003               	goto	l16472
  9808  0019F0                     u1960:
  9809                           	line	84
  9810                           	
  9811  0019F0                     l19094:; BSR set to: 0
  9812                           
  9813  0019F0  9C9E               	bcf	((c:3998)),c,6	;volatile
  9814                           	line	85
  9815  0019F2  8C9D               	bsf	((c:3997)),c,6	;volatile
  9816                           	line	86
  9817  0019F4  8CF2               	bsf	((c:4082)),c,6	;volatile
  9818                           	line	87
  9819                           	
  9820  0019F6                     l16472:; BSR set to: 0
  9821                           
  9822                           	line	88
  9823  0019F6  80C2               	bsf	((c:4034)),c,0	;volatile
  9824                           	line	89
  9825                           	
  9826  0019F8                     l16473:; BSR set to: 0
  9827                           
  9828  0019F8  0012               	return
  9829                           	opt stack 0
  9830                           GLOBAL	__end_of_OpenADC
  9831  0019FA                     	__end_of_OpenADC:
  9832                           	signat	_OpenADC,12408
  9833                           	global	_SetChanADC
  9834                           
  9835 ;; *************** function _SetChanADC *****************
  9836 ;; Defined at:
  9837 ;;		line 31 in file "plib/ADC/adcsetch.c"
  9838 ;; Parameters:    Size  Location     Type
  9839 ;;  channel         1   57[BANK0 ] unsigned char 
  9840 ;; Auto vars:     Size  Location     Type
  9841 ;;		None
  9842 ;; Return value:  Size  Location     Type
  9843 ;;		None               void
  9844 ;; Registers used:
  9845 ;;		wreg, status,2, status,0
  9846 ;; Tracked objects:
  9847 ;;		On entry : 0/0
  9848 ;;		On exit  : 0/0
  9849 ;;		Unchanged: 0/0
  9850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9851 ;;      Params:         0       1       0       0       0
  9852 ;;      Locals:         0       0       0       0       0
  9853 ;;      Temps:          0       1       0       0       0
  9854 ;;      Totals:         0       2       0       0       0
  9855 ;;Total ram usage:        2 bytes
  9856 ;; Hardware stack levels used:    1
  9857 ;; Hardware stack levels required when called:   11
  9858 ;; This function calls:
  9859 ;;		Nothing
  9860 ;; This function is called by:
  9861 ;;		_init_timer1_lthread
  9862 ;; This function uses a non-reentrant model
  9863 ;;
  9864                           psect	text26,class=CODE,space=0,reloc=2
  9865                           global __ptext26
  9866  002100                     __ptext26:
  9867                           psect	text26
  9868                           	file	"plib/ADC/adcsetch.c"
  9869                           	line	31
  9870                           	global	__size_of_SetChanADC
  9871  0000                     	__size_of_SetChanADC	equ	__end_of_SetChanADC-_SetChanADC
  9872                           	
  9873  002100                     _SetChanADC:; BSR set to: 0
  9874                           
  9875                           	opt	stack 18
  9876                           	line	34
  9877                           	
  9878  002100                     l19096:
  9879  002100  CFC2 F0BA          	movff	(c:4034),??_SetChanADC+0+0	;volatile
  9880  002104  0EC3               	movlw	0C3h
  9881  002106  0100               	movlb	0	; () banked
  9882  002108  17BA               	andwf	(??_SetChanADC+0+0)&0ffh
  9883  00210A  0100               	movlb	0	; () banked
  9884  00210C  0100               	movlb	0	; () banked
  9885  00210E  90D8               	bcf	status,0
  9886  002110  31B9               	rrcf	((SetChanADC@channel))&0ffh,w
  9887  002112  0B3C               	andlw	low(03Ch)
  9888  002114  0100               	movlb	0	; () banked
  9889  002116  11BA               	iorwf	(??_SetChanADC+0+0)&0ffh,w
  9890  002118  6EC2               	movwf	((c:4034)),c	;volatile
  9891                           	line	36
  9892                           	
  9893  00211A                     l16485:; BSR set to: 0
  9894                           
  9895  00211A  0012               	return
  9896                           	opt stack 0
  9897                           GLOBAL	__end_of_SetChanADC
  9898  00211C                     	__end_of_SetChanADC:
  9899                           	signat	_SetChanADC,4216
  9900                           	global	_ConvertADC
  9901                           
  9902 ;; *************** function _ConvertADC *****************
  9903 ;; Defined at:
  9904 ;;		line 23 in file "plib/ADC/adcconv.c"
  9905 ;; Parameters:    Size  Location     Type
  9906 ;;		None
  9907 ;; Auto vars:     Size  Location     Type
  9908 ;;		None
  9909 ;; Return value:  Size  Location     Type
  9910 ;;		None               void
  9911 ;; Registers used:
  9912 ;;		None
  9913 ;; Tracked objects:
  9914 ;;		On entry : 0/0
  9915 ;;		On exit  : 0/0
  9916 ;;		Unchanged: 0/0
  9917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9918 ;;      Params:         0       0       0       0       0
  9919 ;;      Locals:         0       0       0       0       0
  9920 ;;      Temps:          0       0       0       0       0
  9921 ;;      Totals:         0       0       0       0       0
  9922 ;;Total ram usage:        0 bytes
  9923 ;; Hardware stack levels used:    1
  9924 ;; Hardware stack levels required when called:   11
  9925 ;; This function calls:
  9926 ;;		Nothing
  9927 ;; This function is called by:
  9928 ;;		_timer1_lthread
  9929 ;; This function uses a non-reentrant model
  9930 ;;
  9931                           psect	text27,class=CODE,space=0,reloc=2
  9932                           global __ptext27
  9933  0021C6                     __ptext27:
  9934                           psect	text27
  9935                           	file	"plib/ADC/adcconv.c"
  9936                           	line	23
  9937                           	global	__size_of_ConvertADC
  9938  0000                     	__size_of_ConvertADC	equ	__end_of_ConvertADC-_ConvertADC
  9939                           	
  9940  0021C6                     _ConvertADC:; BSR set to: 0
  9941                           
  9942                           	opt	stack 18
  9943                           	line	24
  9944                           	
  9945  0021C6                     l19098:
  9946  0021C6  82C2               	bsf	((c:4034)),c,1	;volatile
  9947                           	line	25
  9948                           	
  9949  0021C8                     l16455:
  9950  0021C8  0012               	return
  9951                           	opt stack 0
  9952                           GLOBAL	__end_of_ConvertADC
  9953  0021CA                     	__end_of_ConvertADC:
  9954                           	signat	_ConvertADC,88
  9955                           	global	_InterruptHandlerLow
  9956                           
  9957 ;; *************** function _InterruptHandlerLow *****************
  9958 ;; Defined at:
  9959 ;;		line 132 in file "../src/interrupts.c"
  9960 ;; Parameters:    Size  Location     Type
  9961 ;;		None
  9962 ;; Auto vars:     Size  Location     Type
  9963 ;;		None
  9964 ;; Return value:  Size  Location     Type
  9965 ;;		None               void
  9966 ;; Registers used:
  9967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9968 ;; Tracked objects:
  9969 ;;		On entry : 0/0
  9970 ;;		On exit  : 0/0
  9971 ;;		Unchanged: 0/0
  9972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9973 ;;      Params:         0       0       0       0       0
  9974 ;;      Locals:         0       0       0       0       0
  9975 ;;      Temps:         17       0       0       0       0
  9976 ;;      Totals:        17       0       0       0       0
  9977 ;;Total ram usage:       17 bytes
  9978 ;; Hardware stack levels used:    1
  9979 ;; Hardware stack levels required when called:   10
  9980 ;; This function calls:
  9981 ;;		_timer1_int_handler
  9982 ;;		_adc_int_handler
  9983 ;;		_uart_recv_int_handler
  9984 ;; This function is called by:
  9985 ;;		Interrupt level 1
  9986 ;; This function uses a non-reentrant model
  9987 ;;
  9988                           psect	intcodelo,class=CODE,space=0,reloc=2
  9989                           global __pintcodelo
  9990  000018                     __pintcodelo:
  9991                           psect	intcodelo
  9992                           	file	"../src/interrupts.c"
  9993                           	line	132
  9994                           	global	__size_of_InterruptHandlerLow
  9995  0000                     	__size_of_InterruptHandlerLow	equ	__end_of_InterruptHandlerLow-_InterruptHandlerLow
  9996                           	
  9997  000018                     _InterruptHandlerLow:
  9998                           	opt	stack 16
  9999  000018  CFD8 F023          	movff	status+0,??_InterruptHandlerLow+0
 10000  00001C  CFE8 F024          	movff	wreg+0,??_InterruptHandlerLow+1
 10001  000020  CFE0 F025          	movff	bsr+0,??_InterruptHandlerLow+2
 10002  000024  CFFA F026          	movff	pclat+0,??_InterruptHandlerLow+3
 10003  000028  CFFB F027          	movff	pclat+1,??_InterruptHandlerLow+4
 10004  00002C  CFE9 F028          	movff	fsr0l+0,??_InterruptHandlerLow+5
 10005  000030  CFEA F029          	movff	fsr0h+0,??_InterruptHandlerLow+6
 10006  000034  CFE1 F02A          	movff	fsr1l+0,??_InterruptHandlerLow+7
 10007  000038  CFE2 F02B          	movff	fsr1h+0,??_InterruptHandlerLow+8
 10008  00003C  CFD9 F02C          	movff	fsr2l+0,??_InterruptHandlerLow+9
 10009  000040  CFDA F02D          	movff	fsr2h+0,??_InterruptHandlerLow+10
 10010  000044  CFF3 F02E          	movff	prodl+0,??_InterruptHandlerLow+11
 10011  000048  CFF4 F02F          	movff	prodh+0,??_InterruptHandlerLow+12
 10012  00004C  CFF6 F030          	movff	tblptrl+0,??_InterruptHandlerLow+13
 10013  000050  CFF7 F031          	movff	tblptrh+0,??_InterruptHandlerLow+14
 10014  000054  CFF8 F032          	movff	tblptru+0,??_InterruptHandlerLow+15
 10015  000058  CFF5 F033          	movff	tablat+0,??_InterruptHandlerLow+16
 10016                           	line	134
 10017                           	
 10018  00005C                     i1l19276:
 10019                           ;interrupts.c: 134: if (PIR1bits.TMR1IF) {
 10020                           	
 10021  00005C  A09E               	btfss	((c:3998)),c,0	;volatile
 10022  00005E  D001               	goto	i1u208_21
 10023  000060  D001               	goto	i1u208_20
 10024  000062                     i1u208_21:
 10025  000062  D004               	goto	i1l19282
 10026  000064                     i1u208_20:
 10027                           	line	135
 10028                           	
 10029  000064                     i1l19278:
 10030                           ;interrupts.c: 135: PIR1bits.TMR1IF = 0;
 10031  000064  909E               	bcf	((c:3998)),c,0	;volatile
 10032                           	line	136
 10033                           	
 10034  000066                     i1l19280:
 10035                           ;interrupts.c: 136: timer1_int_handler();
 10036  000066  EC20  F00F         	call	_timer1_int_handler	;wreg free
 10037  00006A  D000               	goto	i1l19282
 10038                           	line	137
 10039                           	
 10040  00006C                     i1l1825:
 10041                           	line	140
 10042                           	
 10043  00006C                     i1l19282:
 10044                           ;interrupts.c: 137: }
 10045                           ;interrupts.c: 140: if(PIR1bits.ADIF){
 10046                           	
 10047  00006C  AC9E               	btfss	((c:3998)),c,6	;volatile
 10048  00006E  D001               	goto	i1u209_21
 10049  000070  D001               	goto	i1u209_20
 10050  000072                     i1u209_21:
 10051  000072  D004               	goto	i1l19288
 10052  000074                     i1u209_20:
 10053                           	line	141
 10054                           	
 10055  000074                     i1l19284:
 10056                           ;interrupts.c: 141: PIR1bits.ADIF = 0;
 10057  000074  9C9E               	bcf	((c:3998)),c,6	;volatile
 10058                           	line	142
 10059                           	
 10060  000076                     i1l19286:
 10061                           ;interrupts.c: 142: adc_int_handler();
 10062  000076  EC73  F00E         	call	_adc_int_handler	;wreg free
 10063  00007A  D000               	goto	i1l19288
 10064                           	line	143
 10065                           	
 10066  00007C                     i1l1826:
 10067                           	line	147
 10068                           	
 10069  00007C                     i1l19288:
 10070                           ;interrupts.c: 143: }
 10071                           ;interrupts.c: 147: if (PIR1bits.RCIF) {
 10072                           	
 10073  00007C  AA9E               	btfss	((c:3998)),c,5	;volatile
 10074  00007E  D001               	goto	i1u210_21
 10075  000080  D001               	goto	i1u210_20
 10076  000082                     i1u210_21:
 10077  000082  D004               	goto	i1l1828
 10078  000084                     i1u210_20:
 10079                           	line	148
 10080                           	
 10081  000084                     i1l19290:
 10082                           ;interrupts.c: 148: PIR1bits.RCIF = 0;
 10083  000084  9A9E               	bcf	((c:3998)),c,5	;volatile
 10084                           	line	149
 10085                           	
 10086  000086                     i1l19292:
 10087                           ;interrupts.c: 149: uart_recv_int_handler();
 10088  000086  EC7A  F00A         	call	_uart_recv_int_handler	;wreg free
 10089  00008A  D000               	goto	i1l1828
 10090                           	line	150
 10091                           	
 10092  00008C                     i1l1827:
 10093                           	line	152
 10094                           	
 10095  00008C                     i1l1828:
 10096  00008C  C033  FFF5         	movff	??_InterruptHandlerLow+16,tablat+0
 10097  000090  C032  FFF8         	movff	??_InterruptHandlerLow+15,tblptru+0
 10098  000094  C031  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh+0
 10099  000098  C030  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl+0
 10100  00009C  C02F  FFF4         	movff	??_InterruptHandlerLow+12,prodh+0
 10101  0000A0  C02E  FFF3         	movff	??_InterruptHandlerLow+11,prodl+0
 10102  0000A4  C02D  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h+0
 10103  0000A8  C02C  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l+0
 10104  0000AC  C02B  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h+0
 10105  0000B0  C02A  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l+0
 10106  0000B4  C029  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h+0
 10107  0000B8  C028  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l+0
 10108  0000BC  C027  FFFB         	movff	??_InterruptHandlerLow+4,pclat+1
 10109  0000C0  C026  FFFA         	movff	??_InterruptHandlerLow+3,pclat+0
 10110  0000C4  C025  FFE0         	movff	??_InterruptHandlerLow+2,bsr+0
 10111  0000C8  C024  FFE8         	movff	??_InterruptHandlerLow+1,wreg+0
 10112  0000CC  C023  FFD8         	movff	??_InterruptHandlerLow+0,status+0
 10113  0000D0  0010               	retfie
 10114                           	opt stack 0
 10115                           GLOBAL	__end_of_InterruptHandlerLow
 10116  0000D2                     	__end_of_InterruptHandlerLow:
 10117                           	signat	_InterruptHandlerLow,1112
 10118                           	global	_timer1_int_handler
 10119                           
 10120 ;; *************** function _timer1_int_handler *****************
 10121 ;; Defined at:
 10122 ;;		line 37 in file "../src/user_interrupts.c"
 10123 ;; Parameters:    Size  Location     Type
 10124 ;;		None
 10125 ;; Auto vars:     Size  Location     Type
 10126 ;;  result          2   30[COMRAM] unsigned int 
 10127 ;;  temp            2   28[COMRAM] unsigned int 
 10128 ;; Return value:  Size  Location     Type
 10129 ;;		None               void
 10130 ;; Registers used:
 10131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10132 ;; Tracked objects:
 10133 ;;		On entry : 0/0
 10134 ;;		On exit  : 0/0
 10135 ;;		Unchanged: 0/0
 10136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10137 ;;      Params:         0       0       0       0       0
 10138 ;;      Locals:         4       0       0       0       0
 10139 ;;      Temps:          2       0       0       0       0
 10140 ;;      Totals:         6       0       0       0       0
 10141 ;;Total ram usage:        6 bytes
 10142 ;; Hardware stack levels used:    1
 10143 ;; Hardware stack levels required when called:    9
 10144 ;; This function calls:
 10145 ;;		_ReadTimer1
 10146 ;;		_WriteTimer1
 10147 ;;		_ToMainLow_sendmsg
 10148 ;; This function is called by:
 10149 ;;		_InterruptHandlerLow
 10150 ;; This function uses a non-reentrant model
 10151 ;;
 10152                           psect	text29,class=CODE,space=0,reloc=2
 10153                           global __ptext29
 10154  001E40                     __ptext29:
 10155                           psect	text29
 10156                           	file	"../src/user_interrupts.c"
 10157                           	line	37
 10158                           	global	__size_of_timer1_int_handler
 10159  0000                     	__size_of_timer1_int_handler	equ	__end_of_timer1_int_handler-_timer1_int_handler
 10160                           	
 10161  001E40                     _timer1_int_handler:
 10162                           	opt	stack 16
 10163                           	line	42
 10164                           	
 10165  001E40                     i1l19234:
 10166                           ;user_interrupts.c: 38: unsigned int result;
 10167                           ;user_interrupts.c: 42: result = ReadTimer1();
 10168  001E40  ECAF  F010         	call	_ReadTimer1	;wreg free
 10169  001E44  C001  F01F         	movff	0+?_ReadTimer1,(c:timer1_int_handler@result)
 10170  001E48  C002  F020         	movff	1+?_ReadTimer1,(c:timer1_int_handler@result+1)
 10171                           	line	44
 10172                           	
 10173  001E4C                     i1l19236:
 10174                           ;user_interrupts.c: 44: unsigned int temp = 0x1;
 10175  001E4C  0E00               	movlw	high(01h)
 10176  001E4E  6E1E               	movwf	((c:timer1_int_handler@temp+1)),c
 10177  001E50  0E01               	movlw	low(01h)
 10178  001E52  6E1D               	movwf	((c:timer1_int_handler@temp)),c
 10179                           	line	45
 10180                           	
 10181  001E54                     i1l19238:
 10182                           ;user_interrupts.c: 45: WriteTimer1(temp);
 10183  001E54  C01D  F001         	movff	(c:timer1_int_handler@temp),(c:?_WriteTimer1)
 10184  001E58  C01E  F002         	movff	(c:timer1_int_handler@temp+1),(c:?_WriteTimer1+1)
 10185  001E5C  ECB8  F010         	call	_WriteTimer1	;wreg free
 10186                           	line	46
 10187                           	
 10188  001E60                     i1l19240:
 10189                           ;user_interrupts.c: 46: ToMainLow_sendmsg(sizeof(result), 11, (void *) &result);
 10190  001E60  6E1B               	movwf	(??_timer1_int_handler+0+0)&0ffh,c
 10191  001E62  0E02               	movlw	low(02h)
 10192  001E64  6E17               	movwf	((c:?_ToMainLow_sendmsg)),c
 10193  001E66  501B               	movf	(??_timer1_int_handler+0+0)&0ffh,c,w
 10194  001E68  6E1C               	movwf	(??_timer1_int_handler+1+0)&0ffh,c
 10195  001E6A  0E0B               	movlw	low(0Bh)
 10196  001E6C  6E18               	movwf	(0+((c:?_ToMainLow_sendmsg)+01h)),c
 10197  001E6E  501C               	movf	(??_timer1_int_handler+1+0)&0ffh,c,w
 10198  001E70  0E00               	movlw	high((c:timer1_int_handler@result))
 10199  001E72  6E1A               	movwf	(1+((c:?_ToMainLow_sendmsg)+02h)),c
 10200  001E74  0E1F               	movlw	low((c:timer1_int_handler@result))
 10201  001E76  6E19               	movwf	(0+((c:?_ToMainLow_sendmsg)+02h)),c
 10202  001E78  EC6E  F010         	call	_ToMainLow_sendmsg	;wreg free
 10203                           	line	47
 10204                           	
 10205  001E7C                     i1l16447:
 10206  001E7C  0012               	return
 10207                           	opt stack 0
 10208                           GLOBAL	__end_of_timer1_int_handler
 10209  001E7E                     	__end_of_timer1_int_handler:
 10210                           	signat	_timer1_int_handler,88
 10211                           	global	_adc_int_handler
 10212                           
 10213 ;; *************** function _adc_int_handler *****************
 10214 ;; Defined at:
 10215 ;;		line 49 in file "../src/user_interrupts.c"
 10216 ;; Parameters:    Size  Location     Type
 10217 ;;		None
 10218 ;; Auto vars:     Size  Location     Type
 10219 ;;  message         4   28[COMRAM] unsigned char [4]
 10220 ;;  value           2   32[COMRAM] unsigned int 
 10221 ;; Return value:  Size  Location     Type
 10222 ;;		None               void
 10223 ;; Registers used:
 10224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10225 ;; Tracked objects:
 10226 ;;		On entry : 0/0
 10227 ;;		On exit  : 0/0
 10228 ;;		Unchanged: 0/0
 10229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10230 ;;      Params:         0       0       0       0       0
 10231 ;;      Locals:         6       0       0       0       0
 10232 ;;      Temps:          2       0       0       0       0
 10233 ;;      Totals:         8       0       0       0       0
 10234 ;;Total ram usage:        8 bytes
 10235 ;; Hardware stack levels used:    1
 10236 ;; Hardware stack levels required when called:    9
 10237 ;; This function calls:
 10238 ;;		_ReadADC
 10239 ;;		_ToMainLow_sendmsg
 10240 ;; This function is called by:
 10241 ;;		_InterruptHandlerLow
 10242 ;; This function uses a non-reentrant model
 10243 ;;
 10244                           psect	text30,class=CODE,space=0,reloc=2
 10245                           global __ptext30
 10246  001CE6                     __ptext30:
 10247                           psect	text30
 10248                           	file	"../src/user_interrupts.c"
 10249                           	line	49
 10250                           	global	__size_of_adc_int_handler
 10251  0000                     	__size_of_adc_int_handler	equ	__end_of_adc_int_handler-_adc_int_handler
 10252                           	
 10253  001CE6                     _adc_int_handler:
 10254                           	opt	stack 16
 10255                           	line	50
 10256                           	
 10257  001CE6                     i1l19242:
 10258                           ;user_interrupts.c: 50: unsigned int value = ReadADC();
 10259  001CE6  ECD1  F010         	call	_ReadADC	;wreg free
 10260  001CEA  C001  F021         	movff	0+?_ReadADC,(c:adc_int_handler@value)
 10261  001CEE  C002  F022         	movff	1+?_ReadADC,(c:adc_int_handler@value+1)
 10262                           	line	51
 10263                           	
 10264  001CF2                     i1l19244:
 10265                           ;user_interrupts.c: 51: value = 0x123;
 10266  001CF2  0E01               	movlw	high(0123h)
 10267  001CF4  6E22               	movwf	((c:adc_int_handler@value+1)),c
 10268  001CF6  0E23               	movlw	low(0123h)
 10269  001CF8  6E21               	movwf	((c:adc_int_handler@value)),c
 10270                           	line	53
 10271                           	
 10272  001CFA                     i1l19246:
 10273                           ;user_interrupts.c: 52: unsigned char message[4];
 10274                           ;user_interrupts.c: 53: message[2] = (unsigned char)(0xFF & value);
 10275  001CFA  C021  F01F         	movff	(c:adc_int_handler@value),0+((c:adc_int_handler@message)+02h)
 10276                           	line	54
 10277                           	
 10278  001CFE                     i1l19248:
 10279                           ;user_interrupts.c: 54: message[3] = (unsigned char)(0xFF & (value>>8));
 10280  001CFE  5022               	movf	((c:adc_int_handler@value+1)),c,w
 10281  001D00  6E20               	movwf	(0+((c:adc_int_handler@message)+03h)),c
 10282                           	line	55
 10283                           	
 10284  001D02                     i1l19250:
 10285                           ;user_interrupts.c: 55: message[0] = 0x11;
 10286  001D02  6E1B               	movwf	(??_adc_int_handler+0+0)&0ffh,c
 10287  001D04  0E11               	movlw	low(011h)
 10288  001D06  6E1D               	movwf	((c:adc_int_handler@message)),c
 10289  001D08  501B               	movf	(??_adc_int_handler+0+0)&0ffh,c,w
 10290                           	line	56
 10291                           	
 10292  001D0A                     i1l19252:
 10293                           ;user_interrupts.c: 56: message[1] = adcMsgCount;
 10294  001D0A  C047  F01E         	movff	(c:_adcMsgCount),0+((c:adc_int_handler@message)+01h)
 10295                           	line	57
 10296                           	
 10297  001D0E                     i1l19254:
 10298                           ;user_interrupts.c: 57: adcMsgCount++;
 10299  001D0E  2A47               	incf	((c:_adcMsgCount)),c
 10300                           	line	58
 10301                           	
 10302  001D10                     i1l19256:
 10303                           ;user_interrupts.c: 58: ToMainLow_sendmsg(4,40,(void *) message);
 10304  001D10  6E1B               	movwf	(??_adc_int_handler+0+0)&0ffh,c
 10305  001D12  0E04               	movlw	low(04h)
 10306  001D14  6E17               	movwf	((c:?_ToMainLow_sendmsg)),c
 10307  001D16  501B               	movf	(??_adc_int_handler+0+0)&0ffh,c,w
 10308  001D18  6E1C               	movwf	(??_adc_int_handler+1+0)&0ffh,c
 10309  001D1A  0E28               	movlw	low(028h)
 10310  001D1C  6E18               	movwf	(0+((c:?_ToMainLow_sendmsg)+01h)),c
 10311  001D1E  501C               	movf	(??_adc_int_handler+1+0)&0ffh,c,w
 10312  001D20  0E00               	movlw	high((c:adc_int_handler@message))
 10313  001D22  6E1A               	movwf	(1+((c:?_ToMainLow_sendmsg)+02h)),c
 10314  001D24  0E1D               	movlw	low((c:adc_int_handler@message))
 10315  001D26  6E19               	movwf	(0+((c:?_ToMainLow_sendmsg)+02h)),c
 10316  001D28  EC6E  F010         	call	_ToMainLow_sendmsg	;wreg free
 10317                           	line	59
 10318                           	
 10319  001D2C                     i1l16450:
 10320  001D2C  0012               	return
 10321                           	opt stack 0
 10322                           GLOBAL	__end_of_adc_int_handler
 10323  001D2E                     	__end_of_adc_int_handler:
 10324                           	signat	_adc_int_handler,88
 10325                           	global	_uart_recv_int_handler
 10326                           
 10327 ;; *************** function _uart_recv_int_handler *****************
 10328 ;; Defined at:
 10329 ;;		line 12 in file "../src/my_uart.c"
 10330 ;; Parameters:    Size  Location     Type
 10331 ;;		None
 10332 ;; Auto vars:     Size  Location     Type
 10333 ;;		None
 10334 ;; Return value:  Size  Location     Type
 10335 ;;		None               void
 10336 ;; Registers used:
 10337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10338 ;; Tracked objects:
 10339 ;;		On entry : 0/0
 10340 ;;		On exit  : 0/0
 10341 ;;		Unchanged: 0/0
 10342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10343 ;;      Params:         0       0       0       0       0
 10344 ;;      Locals:         0       0       0       0       0
 10345 ;;      Temps:          2       0       0       0       0
 10346 ;;      Totals:         2       0       0       0       0
 10347 ;;Total ram usage:        2 bytes
 10348 ;; Hardware stack levels used:    1
 10349 ;; Hardware stack levels required when called:    9
 10350 ;; This function calls:
 10351 ;;		_ReadUSART
 10352 ;;		_ToMainLow_sendmsg
 10353 ;; This function is called by:
 10354 ;;		_InterruptHandlerLow
 10355 ;; This function uses a non-reentrant model
 10356 ;;
 10357                           psect	text31,class=CODE,space=0,reloc=2
 10358                           global __ptext31
 10359  0014F4                     __ptext31:
 10360                           psect	text31
 10361                           	file	"../src/my_uart.c"
 10362                           	line	12
 10363                           	global	__size_of_uart_recv_int_handler
 10364  0000                     	__size_of_uart_recv_int_handler	equ	__end_of_uart_recv_int_handler-_uart_recv_int_handl
                                 er
 10365                           	
 10366  0014F4                     _uart_recv_int_handler:
 10367                           	opt	stack 16
 10368                           	line	13
 10369                           	
 10370  0014F4                     i1l19258:
 10371                           ;my_uart.c: 13: if ((PIR1bits.RCIF)) {
 10372                           	
 10373  0014F4  AA9E               	btfss	((c:3998)),c,5	;volatile
 10374  0014F6  D001               	goto	i1u205_21
 10375  0014F8  D001               	goto	i1u205_20
 10376  0014FA                     i1u205_21:
 10377  0014FA  D041               	goto	i1l19270
 10378  0014FC                     i1u205_20:
 10379                           	line	14
 10380                           	
 10381  0014FC                     i1l19260:
 10382                           ;my_uart.c: 14: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
 10383  0014FC  EE20 F004          	lfsr	2,04h
 10384  001500  504A               	movf	((c:_uc_ptr)),c,w
 10385  001502  26D9               	addwf	fsr2l
 10386  001504  504B               	movf	((c:_uc_ptr+1)),c,w
 10387  001506  22DA               	addwfc	fsr2h
 10388  001508  50DF               	movf	indf2,w
 10389  00150A  6E1B               	movwf	(??_uart_recv_int_handler+0+0)&0ffh,c
 10390  00150C  501B               	movf	((??_uart_recv_int_handler+0+0)),c,w
 10391  00150E  0D01               	mullw	01h
 10392  001510  50F3               	movf	(prodl),c,w
 10393  001512  244A               	addwf	((c:_uc_ptr)),c,w
 10394  001514  6ED9               	movwf	c:fsr2l
 10395  001516  50F4               	movf	(prodh),c,w
 10396  001518  204B               	addwfc	((c:_uc_ptr+1)),c,w
 10397  00151A  6EDA               	movwf	1+c:fsr2l
 10398  00151C  EC5B  F00F         	call	_ReadUSART	;wreg free
 10399  001520  6EDF               	movwf	indf2
 10400                           
 10401                           	line	15
 10402                           	
 10403  001522                     i1l19262:
 10404                           ;my_uart.c: 15: uc_ptr->buflen++;
 10405  001522  EE20 F004          	lfsr	2,04h
 10406  001526  504A               	movf	((c:_uc_ptr)),c,w
 10407  001528  26D9               	addwf	fsr2l
 10408  00152A  504B               	movf	((c:_uc_ptr+1)),c,w
 10409  00152C  22DA               	addwfc	fsr2h
 10410  00152E  2ADF               	incf	indf2
 10411                           
 10412                           	line	17
 10413                           	
 10414  001530                     i1l19264:
 10415                           ;my_uart.c: 17: if (uc_ptr->buflen == 4) {
 10416  001530  EE20 F004          	lfsr	2,04h
 10417  001534  504A               	movf	((c:_uc_ptr)),c,w
 10418  001536  26D9               	addwf	fsr2l
 10419  001538  504B               	movf	((c:_uc_ptr+1)),c,w
 10420  00153A  22DA               	addwfc	fsr2h
 10421  00153C  0E04               	movlw	(04h)&0ffh
 10422  00153E  62DF               	cpfseq	indf2
 10423  001540  D001               	goto	i1u206_21
 10424  001542  D001               	goto	i1u206_20
 10425  001544                     i1u206_21:
 10426  001544  D01C               	goto	i1l19270
 10427  001546                     i1u206_20:
 10428                           	line	18
 10429                           	
 10430  001546                     i1l19266:
 10431                           ;my_uart.c: 18: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
 10432  001546  EE20 F004          	lfsr	2,04h
 10433  00154A  504A               	movf	((c:_uc_ptr)),c,w
 10434  00154C  26D9               	addwf	fsr2l
 10435  00154E  504B               	movf	((c:_uc_ptr+1)),c,w
 10436  001550  22DA               	addwfc	fsr2h
 10437  001552  50DF               	movf	indf2,w
 10438  001554  6E17               	movwf	((c:?_ToMainLow_sendmsg)),c
 10439  001556  6E1B               	movwf	(??_uart_recv_int_handler+0+0)&0ffh,c
 10440  001558  0E1F               	movlw	low(01Fh)
 10441  00155A  6E18               	movwf	(0+((c:?_ToMainLow_sendmsg)+01h)),c
 10442  00155C  501B               	movf	(??_uart_recv_int_handler+0+0)&0ffh,c,w
 10443  00155E  C04A  F019         	movff	(c:_uc_ptr),0+((c:?_ToMainLow_sendmsg)+02h)
 10444  001562  C04B  F01A         	movff	(c:_uc_ptr+1),1+((c:?_ToMainLow_sendmsg)+02h)
 10445  001566  EC6E  F010         	call	_ToMainLow_sendmsg	;wreg free
 10446                           	line	19
 10447                           	
 10448  00156A                     i1l19268:
 10449                           ;my_uart.c: 19: uc_ptr->buflen = 0;
 10450  00156A  EE20 F004          	lfsr	2,04h
 10451  00156E  504A               	movf	((c:_uc_ptr)),c,w
 10452  001570  26D9               	addwf	fsr2l
 10453  001572  504B               	movf	((c:_uc_ptr+1)),c,w
 10454  001574  22DA               	addwfc	fsr2h
 10455  001576  0E00               	movlw	low(0)
 10456  001578  6EDF               	movwf	indf2
 10457  00157A  D001               	goto	i1l19270
 10458                           	line	20
 10459                           	
 10460  00157C                     i1l9259:
 10461  00157C  D000               	goto	i1l19270
 10462                           	line	21
 10463                           	
 10464  00157E                     i1l9258:
 10465                           	line	22
 10466                           	
 10467  00157E                     i1l19270:
 10468                           ;my_uart.c: 20: }
 10469                           ;my_uart.c: 21: }
 10470                           ;my_uart.c: 22: if (USART_Status.OVERRUN_ERROR == 1) {
 10471                           	
 10472  00157E  A646               	btfss	((c:_USART_Status)),c,3
 10473  001580  D001               	goto	i1u207_21
 10474  001582  D001               	goto	i1u207_20
 10475  001584                     i1u207_21:
 10476  001584  D011               	goto	i1l9261
 10477  001586                     i1u207_20:
 10478                           	line	25
 10479                           	
 10480  001586                     i1l19272:
 10481                           ;my_uart.c: 25: RCSTAbits.CREN = 0;
 10482  001586  98AB               	bcf	((c:4011)),c,4	;volatile
 10483                           	line	26
 10484                           ;my_uart.c: 26: RCSTAbits.CREN = 1;
 10485  001588  88AB               	bsf	((c:4011)),c,4	;volatile
 10486                           	line	27
 10487                           	
 10488  00158A                     i1l19274:
 10489                           ;my_uart.c: 27: ToMainLow_sendmsg(0, 30, (void *) 0);
 10490  00158A  6E1B               	movwf	(??_uart_recv_int_handler+0+0)&0ffh,c
 10491  00158C  0E00               	movlw	low(0)
 10492  00158E  6E17               	movwf	((c:?_ToMainLow_sendmsg)),c
 10493  001590  501B               	movf	(??_uart_recv_int_handler+0+0)&0ffh,c,w
 10494  001592  6E1C               	movwf	(??_uart_recv_int_handler+1+0)&0ffh,c
 10495  001594  0E1E               	movlw	low(01Eh)
 10496  001596  6E18               	movwf	(0+((c:?_ToMainLow_sendmsg)+01h)),c
 10497  001598  501C               	movf	(??_uart_recv_int_handler+1+0)&0ffh,c,w
 10498  00159A  0E00               	movlw	high(0)
 10499  00159C  6E1A               	movwf	(1+((c:?_ToMainLow_sendmsg)+02h)),c
 10500  00159E  0E00               	movlw	low(0)
 10501  0015A0  6E19               	movwf	(0+((c:?_ToMainLow_sendmsg)+02h)),c
 10502  0015A2  EC6E  F010         	call	_ToMainLow_sendmsg	;wreg free
 10503  0015A6  D000               	goto	i1l9261
 10504                           	line	28
 10505                           	
 10506  0015A8                     i1l9260:
 10507                           	line	29
 10508                           	
 10509  0015A8                     i1l9261:
 10510  0015A8  0012               	return
 10511                           	opt stack 0
 10512                           GLOBAL	__end_of_uart_recv_int_handler
 10513  0015AA                     	__end_of_uart_recv_int_handler:
 10514                           	signat	_uart_recv_int_handler,88
 10515                           	global	_ToMainLow_sendmsg
 10516                           
 10517 ;; *************** function _ToMainLow_sendmsg *****************
 10518 ;; Defined at:
 10519 ;;		line 103 in file "../src/messages.c"
 10520 ;; Parameters:    Size  Location     Type
 10521 ;;  length          1   22[COMRAM] unsigned char 
 10522 ;;  msgtype         1   23[COMRAM] unsigned char 
 10523 ;;  data            2   24[COMRAM] PTR void 
 10524 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), NULL(0), main@uc(5), 
 10525 ;; Auto vars:     Size  Location     Type
 10526 ;;		None
 10527 ;; Return value:  Size  Location     Type
 10528 ;;                  1    wreg      char 
 10529 ;; Registers used:
 10530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10531 ;; Tracked objects:
 10532 ;;		On entry : 0/0
 10533 ;;		On exit  : 0/0
 10534 ;;		Unchanged: 0/0
 10535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10536 ;;      Params:         4       0       0       0       0
 10537 ;;      Locals:         0       0       0       0       0
 10538 ;;      Temps:          0       0       0       0       0
 10539 ;;      Totals:         4       0       0       0       0
 10540 ;;Total ram usage:        4 bytes
 10541 ;; Hardware stack levels used:    1
 10542 ;; Hardware stack levels required when called:    8
 10543 ;; This function calls:
 10544 ;;		i1_send_msg
 10545 ;; This function is called by:
 10546 ;;		_uart_recv_int_handler
 10547 ;;		_timer1_int_handler
 10548 ;;		_adc_int_handler
 10549 ;; This function uses a non-reentrant model
 10550 ;;
 10551                           psect	text32,class=CODE,space=0,reloc=2
 10552                           global __ptext32
 10553  0020DC                     __ptext32:
 10554                           psect	text32
 10555                           	file	"../src/messages.c"
 10556                           	line	103
 10557                           	global	__size_of_ToMainLow_sendmsg
 10558  0000                     	__size_of_ToMainLow_sendmsg	equ	__end_of_ToMainLow_sendmsg-_ToMainLow_sendmsg
 10559                           	
 10560  0020DC                     _ToMainLow_sendmsg:
 10561                           	opt	stack 16
 10562                           	line	109
 10563                           	
 10564  0020DC                     i1l19230:
 10565                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
 10566                           ;	Return value of _ToMainLow_sendmsg is never used
 10567  0020DC  0101               	movlb	1	; () banked
 10568  0020DE  0E01               	movlw	high(_ToMainLow_MQ)
 10569  0020E0  6E0C               	movwf	((c:?i1_send_msg+1)),c
 10570  0020E2  0101               	movlb	1	; () banked
 10571  0020E4  0E6C               	movlw	low(_ToMainLow_MQ)
 10572  0020E6  6E0B               	movwf	((c:?i1_send_msg)),c
 10573  0020E8  C017  F00D         	movff	(c:ToMainLow_sendmsg@length),0+((c:?i1_send_msg)+02h)
 10574  0020EC  C018  F00E         	movff	(c:ToMainLow_sendmsg@msgtype),0+((c:?i1_send_msg)+03h)
 10575  0020F0  C019  F00F         	movff	(c:ToMainLow_sendmsg@data),0+((c:?i1_send_msg)+04h)
 10576  0020F4  C01A  F010         	movff	(c:ToMainLow_sendmsg@data+1),1+((c:?i1_send_msg)+04h)
 10577  0020F8  EC2F  F00B         	call	i1_send_msg	;wreg free
 10578  0020FC  D000               	goto	i1l5488
 10579                           	
 10580  0020FE                     i1l19232:
 10581                           	line	110
 10582                           	
 10583  0020FE                     i1l5488:
 10584  0020FE  0012               	return
 10585                           	opt stack 0
 10586                           GLOBAL	__end_of_ToMainLow_sendmsg
 10587  002100                     	__end_of_ToMainLow_sendmsg:
 10588                           	signat	_ToMainLow_sendmsg,12409
 10589                           	global	_ReadUSART
 10590                           
 10591 ;; *************** function _ReadUSART *****************
 10592 ;; Defined at:
 10593 ;;		line 16 in file "plib/USART/uread.c"
 10594 ;; Parameters:    Size  Location     Type
 10595 ;;		None
 10596 ;; Auto vars:     Size  Location     Type
 10597 ;;  data            1    0[COMRAM] unsigned char 
 10598 ;; Return value:  Size  Location     Type
 10599 ;;                  1    wreg      unsigned char 
 10600 ;; Registers used:
 10601 ;;		wreg, status,2, status,0
 10602 ;; Tracked objects:
 10603 ;;		On entry : 0/0
 10604 ;;		On exit  : 0/0
 10605 ;;		Unchanged: 0/0
 10606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10607 ;;      Params:         0       0       0       0       0
 10608 ;;      Locals:         1       0       0       0       0
 10609 ;;      Temps:          0       0       0       0       0
 10610 ;;      Totals:         1       0       0       0       0
 10611 ;;Total ram usage:        1 bytes
 10612 ;; Hardware stack levels used:    1
 10613 ;; Hardware stack levels required when called:    6
 10614 ;; This function calls:
 10615 ;;		Nothing
 10616 ;; This function is called by:
 10617 ;;		_uart_recv_int_handler
 10618 ;; This function uses a non-reentrant model
 10619 ;;
 10620                           psect	text33,class=CODE,space=0,reloc=2
 10621                           global __ptext33
 10622  001EB6                     __ptext33:
 10623                           psect	text33
 10624                           	file	"plib/USART/uread.c"
 10625                           	line	16
 10626                           	global	__size_of_ReadUSART
 10627  0000                     	__size_of_ReadUSART	equ	__end_of_ReadUSART-_ReadUSART
 10628                           	
 10629  001EB6                     _ReadUSART:
 10630                           	opt	stack 18
 10631                           	line	19
 10632                           	
 10633  001EB6                     i1l19068:
 10634  001EB6  0EF2               	movlw	(0F2h)&0ffh
 10635  001EB8  1646               	andwf	((c:_USART_Status)),c
 10636                           	line	21
 10637                           	
 10638  001EBA                     i1l19070:
 10639                           	
 10640  001EBA  ACAB               	btfss	((c:4011)),c,6	;volatile
 10641  001EBC  D001               	goto	i1u192_21
 10642  001EBE  D001               	goto	i1u192_20
 10643  001EC0                     i1u192_21:
 10644  001EC0  D007               	goto	i1l16583
 10645  001EC2                     i1u192_20:
 10646                           	line	23
 10647                           	
 10648  001EC2                     i1l19072:
 10649  001EC2  9046               	bcf	((c:_USART_Status)),c,0
 10650                           	line	24
 10651                           	
 10652  001EC4  A0AB               	btfss	((c:4011)),c,0	;volatile
 10653  001EC6  D001               	goto	i1u193_21
 10654  001EC8  D001               	goto	i1u193_20
 10655  001ECA                     i1u193_21:
 10656  001ECA  D002               	goto	i1l16583
 10657  001ECC                     i1u193_20:
 10658                           	line	25
 10659                           	
 10660  001ECC                     i1l19074:
 10661  001ECC  8046               	bsf	((c:_USART_Status)),c,0
 10662  001ECE  D000               	goto	i1l16583
 10663                           	
 10664  001ED0                     i1l16584:
 10665                           	line	26
 10666                           	
 10667  001ED0                     i1l16583:
 10668                           	line	28
 10669                           	
 10670  001ED0  A4AB               	btfss	((c:4011)),c,2	;volatile
 10671  001ED2  D001               	goto	i1u194_21
 10672  001ED4  D001               	goto	i1u194_20
 10673  001ED6                     i1u194_21:
 10674  001ED6  D001               	goto	i1l16585
 10675  001ED8                     i1u194_20:
 10676                           	line	29
 10677                           	
 10678  001ED8                     i1l19076:
 10679  001ED8  8446               	bsf	((c:_USART_Status)),c,2
 10680                           	
 10681  001EDA                     i1l16585:
 10682                           	line	31
 10683                           	
 10684  001EDA  A2AB               	btfss	((c:4011)),c,1	;volatile
 10685  001EDC  D001               	goto	i1u195_21
 10686  001EDE  D001               	goto	i1u195_20
 10687  001EE0                     i1u195_21:
 10688  001EE0  D001               	goto	i1l16586
 10689  001EE2                     i1u195_20:
 10690                           	line	32
 10691                           	
 10692  001EE2                     i1l19078:
 10693  001EE2  8646               	bsf	((c:_USART_Status)),c,3
 10694                           	
 10695  001EE4                     i1l16586:
 10696                           	line	34
 10697  001EE4  CFAE F001          	movff	(c:4014),(c:ReadUSART@data)	;volatile
 10698                           	line	36
 10699                           	
 10700  001EE8                     i1l19080:
 10701  001EE8  5001               	movf	((c:ReadUSART@data)),c,w
 10702  001EEA  D000               	goto	i1l16587
 10703                           	
 10704  001EEC                     i1l19082:
 10705                           	line	37
 10706                           	
 10707  001EEC                     i1l16587:
 10708  001EEC  0012               	return
 10709                           	opt stack 0
 10710                           GLOBAL	__end_of_ReadUSART
 10711  001EEE                     	__end_of_ReadUSART:
 10712                           	signat	_ReadUSART,89
 10713                           	global	_ReadTimer1
 10714                           
 10715 ;; *************** function _ReadTimer1 *****************
 10716 ;; Defined at:
 10717 ;;		line 16 in file "plib/Timers/t1read.c"
 10718 ;; Parameters:    Size  Location     Type
 10719 ;;		None
 10720 ;; Auto vars:     Size  Location     Type
 10721 ;;  timer           2    2[COMRAM] struct Timers
 10722 ;; Return value:  Size  Location     Type
 10723 ;;                  2    0[COMRAM] unsigned int 
 10724 ;; Registers used:
 10725 ;;		None
 10726 ;; Tracked objects:
 10727 ;;		On entry : 0/0
 10728 ;;		On exit  : 0/0
 10729 ;;		Unchanged: 0/0
 10730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10731 ;;      Params:         2       0       0       0       0
 10732 ;;      Locals:         2       0       0       0       0
 10733 ;;      Temps:          0       0       0       0       0
 10734 ;;      Totals:         4       0       0       0       0
 10735 ;;Total ram usage:        4 bytes
 10736 ;; Hardware stack levels used:    1
 10737 ;; Hardware stack levels required when called:    6
 10738 ;; This function calls:
 10739 ;;		Nothing
 10740 ;; This function is called by:
 10741 ;;		_timer1_int_handler
 10742 ;; This function uses a non-reentrant model
 10743 ;;
 10744                           psect	text34,class=CODE,space=0,reloc=2
 10745                           global __ptext34
 10746  00215E                     __ptext34:
 10747                           psect	text34
 10748                           	file	"plib/Timers/t1read.c"
 10749                           	line	16
 10750                           	global	__size_of_ReadTimer1
 10751  0000                     	__size_of_ReadTimer1	equ	__end_of_ReadTimer1-_ReadTimer1
 10752                           	
 10753  00215E                     _ReadTimer1:
 10754                           	opt	stack 18
 10755                           	line	19
 10756                           	
 10757  00215E                     i1l17994:
 10758  00215E  CFCE F003          	movff	(c:4046),(c:ReadTimer1@timer)	;volatile
 10759                           	line	20
 10760  002162  CFCF F004          	movff	(c:4047),0+((c:ReadTimer1@timer)+01h)	;volatile
 10761                           	line	22
 10762  002166  C003  F001         	movff	(c:ReadTimer1@timer),(c:?_ReadTimer1)
 10763  00216A  C004  F002         	movff	(c:ReadTimer1@timer+1),(c:?_ReadTimer1+1)
 10764                           	line	23
 10765                           	
 10766  00216E                     i1l16520:
 10767  00216E  0012               	return
 10768                           	opt stack 0
 10769                           GLOBAL	__end_of_ReadTimer1
 10770  002170                     	__end_of_ReadTimer1:
 10771                           	signat	_ReadTimer1,90
 10772                           	global	_WriteTimer1
 10773                           
 10774 ;; *************** function _WriteTimer1 *****************
 10775 ;; Defined at:
 10776 ;;		line 15 in file "plib/Timers/t1write.c"
 10777 ;; Parameters:    Size  Location     Type
 10778 ;;  timer1          2    0[COMRAM] unsigned int 
 10779 ;; Auto vars:     Size  Location     Type
 10780 ;;  timer           2    2[COMRAM] struct Timers
 10781 ;; Return value:  Size  Location     Type
 10782 ;;		None               void
 10783 ;; Registers used:
 10784 ;;		None
 10785 ;; Tracked objects:
 10786 ;;		On entry : 0/0
 10787 ;;		On exit  : 0/0
 10788 ;;		Unchanged: 0/0
 10789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10790 ;;      Params:         2       0       0       0       0
 10791 ;;      Locals:         2       0       0       0       0
 10792 ;;      Temps:          0       0       0       0       0
 10793 ;;      Totals:         4       0       0       0       0
 10794 ;;Total ram usage:        4 bytes
 10795 ;; Hardware stack levels used:    1
 10796 ;; Hardware stack levels required when called:    6
 10797 ;; This function calls:
 10798 ;;		Nothing
 10799 ;; This function is called by:
 10800 ;;		_timer1_int_handler
 10801 ;; This function uses a non-reentrant model
 10802 ;;
 10803                           psect	text35,class=CODE,space=0,reloc=2
 10804                           global __ptext35
 10805  002170                     __ptext35:
 10806                           psect	text35
 10807                           	file	"plib/Timers/t1write.c"
 10808                           	line	15
 10809                           	global	__size_of_WriteTimer1
 10810  0000                     	__size_of_WriteTimer1	equ	__end_of_WriteTimer1-_WriteTimer1
 10811                           	
 10812  002170                     _WriteTimer1:
 10813                           	opt	stack 18
 10814                           	line	18
 10815                           	
 10816  002170                     i1l17996:
 10817  002170  C001  F003         	movff	(c:WriteTimer1@timer1),(c:WriteTimer1@timer)
 10818  002174  C002  F004         	movff	(c:WriteTimer1@timer1+1),(c:WriteTimer1@timer+1)
 10819                           	line	20
 10820  002178  C004  FFCF         	movff	0+((c:WriteTimer1@timer)+01h),(c:4047)	;volatile
 10821                           	line	21
 10822  00217C  C003  FFCE         	movff	(c:WriteTimer1@timer),(c:4046)	;volatile
 10823                           	line	22
 10824                           	
 10825  002180                     i1l16527:
 10826  002180  0012               	return
 10827                           	opt stack 0
 10828                           GLOBAL	__end_of_WriteTimer1
 10829  002182                     	__end_of_WriteTimer1:
 10830                           	signat	_WriteTimer1,4216
 10831                           	global	_ReadADC
 10832                           
 10833 ;; *************** function _ReadADC *****************
 10834 ;; Defined at:
 10835 ;;		line 25 in file "plib/ADC/adcread.c"
 10836 ;; Parameters:    Size  Location     Type
 10837 ;;		None
 10838 ;; Auto vars:     Size  Location     Type
 10839 ;;		None
 10840 ;; Return value:  Size  Location     Type
 10841 ;;                  2    0[COMRAM] int 
 10842 ;; Registers used:
 10843 ;;		wreg, status,2
 10844 ;; Tracked objects:
 10845 ;;		On entry : 0/0
 10846 ;;		On exit  : 0/0
 10847 ;;		Unchanged: 0/0
 10848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10849 ;;      Params:         2       0       0       0       0
 10850 ;;      Locals:         0       0       0       0       0
 10851 ;;      Temps:          0       0       0       0       0
 10852 ;;      Totals:         2       0       0       0       0
 10853 ;;Total ram usage:        2 bytes
 10854 ;; Hardware stack levels used:    1
 10855 ;; Hardware stack levels required when called:    6
 10856 ;; This function calls:
 10857 ;;		Nothing
 10858 ;; This function is called by:
 10859 ;;		_adc_int_handler
 10860 ;; This function uses a non-reentrant model
 10861 ;;
 10862                           psect	text36,class=CODE,space=0,reloc=2
 10863                           global __ptext36
 10864  0021A2                     __ptext36:
 10865                           psect	text36
 10866                           	file	"plib/ADC/adcread.c"
 10867                           	line	25
 10868                           	global	__size_of_ReadADC
 10869  0000                     	__size_of_ReadADC	equ	__end_of_ReadADC-_ReadADC
 10870                           	
 10871  0021A2                     _ReadADC:
 10872                           	opt	stack 18
 10873                           	line	26
 10874                           	
 10875  0021A2                     i1l17998:
 10876  0021A2  50C4               	movf	((c:4036)),c,w	;volatile
 10877  0021A4  6E02               	movwf	((c:?_ReadADC+1)),c
 10878  0021A6  50C3               	movf	((c:4035)),c,w	;volatile
 10879  0021A8  6E01               	movwf	((c:?_ReadADC)),c
 10880  0021AA  D000               	goto	i1l16480
 10881                           	
 10882  0021AC                     i1l18000:
 10883                           	line	27
 10884                           	
 10885  0021AC                     i1l16480:
 10886  0021AC  0012               	return
 10887                           	opt stack 0
 10888                           GLOBAL	__end_of_ReadADC
 10889  0021AE                     	__end_of_ReadADC:
 10890                           	signat	_ReadADC,90
 10891                           	global	i1_send_msg
 10892                           
 10893 ;; *************** function i1_send_msg *****************
 10894 ;; Defined at:
 10895 ;;		line 24 in file "../src/messages.c"
 10896 ;; Parameters:    Size  Location     Type
 10897 ;;  send_msg        2   10[COMRAM] PTR struct __msg_queue
 10898 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 10899 ;;  send_msg        1   12[COMRAM] unsigned char 
 10900 ;;  send_msg        1   13[COMRAM] unsigned char 
 10901 ;;  send_msg        2   14[COMRAM] PTR void 
 10902 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), i2c_slave_int_handler@error
       _buf(3), 
 10903 ;;		 -> NULL(0), main@msgbuffer(11), main@ic(29), main@uc(5), 
 10904 ;; Auto vars:     Size  Location     Type
 10905 ;;  send_msg        2   20[COMRAM] PTR struct __msg
 10906 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 10907 ;;  send_msg        2   17[COMRAM] unsigned int 
 10908 ;;  send_msg        1   19[COMRAM] unsigned char 
 10909 ;; Return value:  Size  Location     Type
 10910 ;;                  1    wreg      char 
 10911 ;; Registers used:
 10912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10913 ;; Tracked objects:
 10914 ;;		On entry : 0/0
 10915 ;;		On exit  : 0/0
 10916 ;;		Unchanged: 0/0
 10917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10918 ;;      Params:         6       0       0       0       0
 10919 ;;      Locals:         5       0       0       0       0
 10920 ;;      Temps:          1       0       0       0       0
 10921 ;;      Totals:        12       0       0       0       0
 10922 ;;Total ram usage:       12 bytes
 10923 ;; Hardware stack levels used:    1
 10924 ;; Hardware stack levels required when called:    7
 10925 ;; This function calls:
 10926 ;;		i1_memcpy
 10927 ;; This function is called by:
 10928 ;;		_ToMainLow_sendmsg
 10929 ;; This function uses a non-reentrant model
 10930 ;;
 10931                           psect	text37,class=CODE,space=0,reloc=2
 10932                           global __ptext37
 10933  00165E                     __ptext37:
 10934                           psect	text37
 10935                           	file	"../src/messages.c"
 10936                           	line	24
 10937                           	global	__size_ofi1_send_msg
 10938  0000                     	__size_ofi1_send_msg	equ	__end_ofi1_send_msg-i1_send_msg
 10939                           	
 10940  00165E                     i1_send_msg:
 10941                           	opt	stack 16
 10942                           	line	28
 10943                           	
 10944  00165E                     i1l19206:
 10945                           ;messages.c: 25: unsigned char slot;
 10946                           ;messages.c: 27: msg *qmsg;
 10947                           ;messages.c: 28: size_t tlength = length;
 10948  00165E  C00D  F012         	movff	(c:i1send_msg@length),(c:i1send_msg@tlength)
 10949  001662  6A13               	clrf	((c:i1send_msg@tlength+1)),c
 10950                           	line	38
 10951                           	
 10952  001664                     i1l19208:
 10953                           ;messages.c: 38: slot = qptr->cur_write_ind;
 10954  001664  EE20 F034          	lfsr	2,034h
 10955  001668  500B               	movf	((c:i1send_msg@qptr)),c,w
 10956  00166A  26D9               	addwf	fsr2l
 10957  00166C  500C               	movf	((c:i1send_msg@qptr+1)),c,w
 10958  00166E  22DA               	addwfc	fsr2h
 10959  001670  50DF               	movf	indf2,w
 10960  001672  6E14               	movwf	((c:i1send_msg@slot)),c
 10961                           	line	39
 10962                           	
 10963  001674                     i1l19210:
 10964                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
 10965  001674  5014               	movf	((c:i1send_msg@slot)),c,w
 10966  001676  0D0D               	mullw	0Dh
 10967  001678  50F3               	movf	(prodl),c,w
 10968  00167A  240B               	addwf	((c:i1send_msg@qptr)),c,w
 10969                           	
 10970  00167C  6E15               	movwf	((c:i1send_msg@qmsg)),c
 10971  00167E  50F4               	movf	(prodh),c,w
 10972  001680  200C               	addwfc	((c:i1send_msg@qptr+1)),c,w
 10973  001682  6E16               	movwf	1+((c:i1send_msg@qmsg)),c
 10974                           	line	41
 10975                           	
 10976  001684                     i1l19212:
 10977                           ;messages.c: 41: if (qmsg->full != 0) {
 10978  001684  C015  FFD9         	movff	(c:i1send_msg@qmsg),fsr2l
 10979  001688  C016  FFDA         	movff	(c:i1send_msg@qmsg+1),fsr2h
 10980  00168C  50DF               	movf	indf2,w
 10981  00168E  B4D8               	btfsc	status,2
 10982  001690  D001               	goto	i1u204_21
 10983  001692  D001               	goto	i1u204_20
 10984  001694                     i1u204_21:
 10985  001694  D003               	goto	i1l19218
 10986  001696                     i1u204_20:
 10987                           	line	42
 10988                           	
 10989  001696                     i1l19214:
 10990                           ;messages.c: 42: return (-1);
 10991  001696  0EFF               	movlw	(-1)&0ffh
 10992  001698  D03A               	goto	i1l5477
 10993                           	
 10994  00169A                     i1l19216:
 10995  00169A  D039               	goto	i1l5477
 10996                           	line	43
 10997                           	
 10998  00169C                     i1l5476:
 10999                           	line	46
 11000                           	
 11001  00169C                     i1l19218:
 11002                           ;messages.c: 43: }
 11003                           ;messages.c: 46: qmsg->length = length;
 11004  00169C  EE20 F001          	lfsr	2,01h
 11005  0016A0  5015               	movf	((c:i1send_msg@qmsg)),c,w
 11006  0016A2  26D9               	addwf	fsr2l
 11007  0016A4  5016               	movf	((c:i1send_msg@qmsg+1)),c,w
 11008  0016A6  22DA               	addwfc	fsr2h
 11009  0016A8  C00D  FFDF         	movff	(c:i1send_msg@length),indf2
 11010                           
 11011                           	line	47
 11012                           ;messages.c: 47: qmsg->msgtype = msgtype;
 11013  0016AC  EE20 F002          	lfsr	2,02h
 11014  0016B0  5015               	movf	((c:i1send_msg@qmsg)),c,w
 11015  0016B2  26D9               	addwf	fsr2l
 11016  0016B4  5016               	movf	((c:i1send_msg@qmsg+1)),c,w
 11017  0016B6  22DA               	addwfc	fsr2h
 11018  0016B8  C00E  FFDF         	movff	(c:i1send_msg@msgtype),indf2
 11019                           
 11020                           	line	55
 11021                           	
 11022  0016BC                     i1l19220:
 11023                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
 11024  0016BC  0E03               	movlw	low(03h)
 11025  0016BE  2415               	addwf	((c:i1send_msg@qmsg)),c,w
 11026                           	
 11027  0016C0  6E01               	movwf	((c:?i1_memcpy)),c
 11028  0016C2  0E00               	movlw	high(03h)
 11029  0016C4  2016               	addwfc	((c:i1send_msg@qmsg+1)),c,w
 11030  0016C6  6E02               	movwf	1+((c:?i1_memcpy)),c
 11031  0016C8  C00F  F003         	movff	(c:i1send_msg@data),0+((c:?i1_memcpy)+02h)
 11032  0016CC  C010  F004         	movff	(c:i1send_msg@data+1),1+((c:?i1_memcpy)+02h)
 11033  0016D0  C012  F005         	movff	(c:i1send_msg@tlength),0+((c:?i1_memcpy)+04h)
 11034  0016D4  C013  F006         	movff	(c:i1send_msg@tlength+1),1+((c:?i1_memcpy)+04h)
 11035  0016D8  EC97  F00E         	call	i1_memcpy	;wreg free
 11036                           	line	56
 11037                           	
 11038  0016DC                     i1l19222:
 11039                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
 11040  0016DC  EE20 F034          	lfsr	2,034h
 11041  0016E0  500B               	movf	((c:i1send_msg@qptr)),c,w
 11042  0016E2  26D9               	addwf	fsr2l
 11043  0016E4  500C               	movf	((c:i1send_msg@qptr+1)),c,w
 11044  0016E6  22DA               	addwfc	fsr2h
 11045  0016E8  EE10 F034          	lfsr	1,034h
 11046  0016EC  500B               	movf	((c:i1send_msg@qptr)),c,w
 11047  0016EE  26E1               	addwf	fsr1l
 11048  0016F0  500C               	movf	((c:i1send_msg@qptr+1)),c,w
 11049  0016F2  22E2               	addwfc	fsr1h
 11050  0016F4  50E7               	movf	indf1,w
 11051  0016F6  6E11               	movwf	(??i1_send_msg+0+0)&0ffh,c
 11052  0016F8  2811               	incf	((??i1_send_msg+0+0)),c,w
 11053  0016FA  0B03               	andlw	low(03h)
 11054  0016FC  6EDF               	movwf	indf2
 11055                           
 11056                           	line	59
 11057                           	
 11058  0016FE                     i1l19224:
 11059                           ;messages.c: 59: qmsg->full = 1;
 11060  0016FE  C015  FFD9         	movff	(c:i1send_msg@qmsg),fsr2l
 11061  001702  C016  FFDA         	movff	(c:i1send_msg@qmsg+1),fsr2h
 11062  001706  0E01               	movlw	low(01h)
 11063  001708  6EDF               	movwf	indf2
 11064                           	line	60
 11065                           	
 11066  00170A                     i1l19226:
 11067                           ;messages.c: 60: return (1);
 11068  00170A  0E01               	movlw	(01h)&0ffh
 11069  00170C  D000               	goto	i1l5477
 11070                           	
 11071  00170E                     i1l19228:
 11072                           	line	61
 11073                           	
 11074  00170E                     i1l5477:
 11075  00170E  0012               	return
 11076                           	opt stack 0
 11077                           GLOBAL	__end_ofi1_send_msg
 11078  001710                     	__end_ofi1_send_msg:
 11079                           	signat	i1_send_msg,89
 11080                           	global	i1_memcpy
 11081                           
 11082 ;; *************** function i1_memcpy *****************
 11083 ;; Defined at:
 11084 ;;		line 13 in file "/opt/microchip/xc8/v1.10/sources/memcpy.c"
 11085 ;; Parameters:    Size  Location     Type
 11086 ;;  memcpy          2    0[COMRAM] PTR void 
 11087 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
 11088 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
 11089 ;;  memcpy          2    2[COMRAM] PTR const void 
 11090 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), i2c_slave_int_handler@error
       _buf(3), 
 11091 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 11092 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@ic(29), main@uc(5), 
 11093 ;;  memcpy          2    4[COMRAM] unsigned int 
 11094 ;; Auto vars:     Size  Location     Type
 11095 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 11096 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), i2c_slave_int_handler@error
       _buf(3), 
 11097 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 11098 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@ic(29), main@uc(5), 
 11099 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 11100 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
 11101 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
 11102 ;; Return value:  Size  Location     Type
 11103 ;;                  2    0[COMRAM] PTR void 
 11104 ;; Registers used:
 11105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11106 ;; Tracked objects:
 11107 ;;		On entry : 0/0
 11108 ;;		On exit  : 0/0
 11109 ;;		Unchanged: 0/0
 11110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11111 ;;      Params:         6       0       0       0       0
 11112 ;;      Locals:         4       0       0       0       0
 11113 ;;      Temps:          0       0       0       0       0
 11114 ;;      Totals:        10       0       0       0       0
 11115 ;;Total ram usage:       10 bytes
 11116 ;; Hardware stack levels used:    1
 11117 ;; Hardware stack levels required when called:    6
 11118 ;; This function calls:
 11119 ;;		Nothing
 11120 ;; This function is called by:
 11121 ;;		i1_send_msg
 11122 ;; This function uses a non-reentrant model
 11123 ;;
 11124                           psect	text38,class=CODE,space=0,reloc=2
 11125                           global __ptext38
 11126  001D2E                     __ptext38:
 11127                           psect	text38
 11128                           	file	"/opt/microchip/xc8/v1.10/sources/memcpy.c"
 11129                           	line	13
 11130                           	global	__size_ofi1_memcpy
 11131  0000                     	__size_ofi1_memcpy	equ	__end_ofi1_memcpy-i1_memcpy
 11132                           	
 11133  001D2E                     i1_memcpy:
 11134                           	opt	stack 16
 11135                           	line	24
 11136                           	
 11137  001D2E                     i1l19186:
 11138  001D2E  C003  F009         	movff	(c:i1memcpy@s1),(c:i1memcpy@s)
 11139  001D32  C004  F00A         	movff	(c:i1memcpy@s1+1),(c:i1memcpy@s+1)
 11140                           	line	25
 11141  001D36  C001  F007         	movff	(c:i1memcpy@d1),(c:i1memcpy@d)
 11142  001D3A  C002  F008         	movff	(c:i1memcpy@d1+1),(c:i1memcpy@d+1)
 11143                           	line	26
 11144  001D3E  D00F               	goto	i1l19194
 11145                           	
 11146  001D40                     i1l17092:
 11147                           	line	27
 11148                           	
 11149  001D40                     i1l19188:
 11150  001D40  C009  FFD9         	movff	(c:i1memcpy@s),fsr2l
 11151  001D44  C00A  FFDA         	movff	(c:i1memcpy@s+1),fsr2h
 11152  001D48  C007  FFE1         	movff	(c:i1memcpy@d),fsr1l
 11153  001D4C  C008  FFE2         	movff	(c:i1memcpy@d+1),fsr1h
 11154  001D50  CFDF FFE7          	movff	indf2,indf1
 11155                           	
 11156  001D54                     i1l19190:
 11157  001D54  4A09               	infsnz	((c:i1memcpy@s)),c
 11158  001D56  2A0A               	incf	((c:i1memcpy@s+1)),c
 11159                           	
 11160  001D58                     i1l19192:
 11161  001D58  4A07               	infsnz	((c:i1memcpy@d)),c
 11162  001D5A  2A08               	incf	((c:i1memcpy@d+1)),c
 11163  001D5C  D000               	goto	i1l19194
 11164                           	
 11165  001D5E                     i1l17091:
 11166                           	line	26
 11167                           	
 11168  001D5E                     i1l19194:
 11169  001D5E  0605               	decf	((c:i1memcpy@n)),c
 11170  001D60  A0D8               	btfss	status,0
 11171  001D62  0606               	decf	((c:i1memcpy@n+1)),c
 11172  001D64  2805               	incf	((c:i1memcpy@n))&0ffh,w
 11173  001D66  B4D8               	btfsc	status,2
 11174  001D68  2806               	incf ((c:i1memcpy@n+1))&0ffh,w
 11175                           
 11176  001D6A  A4D8               	btfss	status,2
 11177  001D6C  D001               	goto	i1u202_21
 11178  001D6E  D001               	goto	i1u202_20
 11179  001D70                     i1u202_21:
 11180  001D70  D7E7               	goto	i1l19188
 11181  001D72                     i1u202_20:
 11182  001D72  D000               	goto	i1l17094
 11183                           	
 11184  001D74                     i1l17093:
 11185                           	line	32
 11186                           ;	Return value of i1_memcpy is never used
 11187                           	
 11188  001D74                     i1l17094:
 11189  001D74  0012               	return
 11190                           	opt stack 0
 11191                           GLOBAL	__end_ofi1_memcpy
 11192  001D76                     	__end_ofi1_memcpy:
 11193                           	signat	i1_memcpy,90
 11194                           	global	_InterruptHandlerHigh
 11195                           
 11196 ;; *************** function _InterruptHandlerHigh *****************
 11197 ;; Defined at:
 11198 ;;		line 83 in file "../src/interrupts.c"
 11199 ;; Parameters:    Size  Location     Type
 11200 ;;		None
 11201 ;; Auto vars:     Size  Location     Type
 11202 ;;		None
 11203 ;; Return value:  Size  Location     Type
 11204 ;;		None               void
 11205 ;; Registers used:
 11206 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11207 ;; Tracked objects:
 11208 ;;		On entry : 0/0
 11209 ;;		On exit  : 0/0
 11210 ;;		Unchanged: 0/0
 11211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11212 ;;      Params:         0       0       0       0       0
 11213 ;;      Locals:         0       0       0       0       0
 11214 ;;      Temps:          0      14       0       0       0
 11215 ;;      Totals:         0      14       0       0       0
 11216 ;;Total ram usage:       14 bytes
 11217 ;; Hardware stack levels used:    1
 11218 ;; Hardware stack levels required when called:    5
 11219 ;; This function calls:
 11220 ;;		_i2c_int_handler
 11221 ;;		_timer0_int_handler
 11222 ;;		_SleepIfOkay
 11223 ;; This function is called by:
 11224 ;;		Interrupt level 2
 11225 ;; This function uses a non-reentrant model
 11226 ;;
 11227                           psect	intcode,class=CODE,space=0,reloc=2
 11228                           global __pintcode
 11229  000008                     __pintcode:
 11230                           psect	intcode
 11231                           	file	"../src/interrupts.c"
 11232                           	line	83
 11233                           	global	__size_of_InterruptHandlerHigh
 11234  0000                     	__size_of_InterruptHandlerHigh	equ	__end_of_InterruptHandlerHigh-_InterruptHandlerHigh
 11235                           	
 11236  000008                     _InterruptHandlerHigh:
 11237                           	opt	stack 16
 11238  000008  CFFA F0AB          	movff	pclat+0,??_InterruptHandlerHigh+0
 11239  00000C  CFFB F0AC          	movff	pclat+1,??_InterruptHandlerHigh+1
 11240  000010  CFE9 F0AD          	movff	fsr0l+0,??_InterruptHandlerHigh+2
 11241                           	global	int_func
 11242  000014  EF33  F00C         	goto	int_func
 11243                           psect	intcode_body,class=CODE,space=0,reloc=2
 11244                           global __pintcode_body
 11245  001866                     __pintcode_body:
 11246  001866                     int_func:
 11247  001866  CFEA F0AE          	movff	fsr0h+0,??_InterruptHandlerHigh+3
 11248  00186A  CFE1 F0AF          	movff	fsr1l+0,??_InterruptHandlerHigh+4
 11249  00186E  CFE2 F0B0          	movff	fsr1h+0,??_InterruptHandlerHigh+5
 11250  001872  CFD9 F0B1          	movff	fsr2l+0,??_InterruptHandlerHigh+6
 11251  001876  CFDA F0B2          	movff	fsr2h+0,??_InterruptHandlerHigh+7
 11252  00187A  CFF3 F0B3          	movff	prodl+0,??_InterruptHandlerHigh+8
 11253  00187E  CFF4 F0B4          	movff	prodh+0,??_InterruptHandlerHigh+9
 11254  001882  CFF6 F0B5          	movff	tblptrl+0,??_InterruptHandlerHigh+10
 11255  001886  CFF7 F0B6          	movff	tblptrh+0,??_InterruptHandlerHigh+11
 11256  00188A  CFF8 F0B7          	movff	tblptru+0,??_InterruptHandlerHigh+12
 11257  00188E  CFF5 F0B8          	movff	tablat+0,??_InterruptHandlerHigh+13
 11258                           	line	97
 11259                           	
 11260  001892                     i2l19294:
 11261                           ;interrupts.c: 97: if (PIR1bits.SSPIF) {
 11262                           	
 11263  001892  A69E               	btfss	((c:3998)),c,3	;volatile
 11264  001894  D001               	goto	i2u211_41
 11265  001896  D001               	goto	i2u211_40
 11266  001898                     i2u211_41:
 11267  001898  D004               	goto	i2l19300
 11268  00189A                     i2u211_40:
 11269                           	line	99
 11270                           	
 11271  00189A                     i2l19296:
 11272                           ;interrupts.c: 99: PIR1bits.SSPIF = 0;
 11273  00189A  969E               	bcf	((c:3998)),c,3	;volatile
 11274                           	line	101
 11275                           	
 11276  00189C                     i2l19298:
 11277                           ;interrupts.c: 101: i2c_int_handler();
 11278  00189C  EC48  F010         	call	_i2c_int_handler	;wreg free
 11279  0018A0  D000               	goto	i2l19300
 11280                           	line	102
 11281                           	
 11282  0018A2                     i2l1820:
 11283                           	line	106
 11284                           	
 11285  0018A2                     i2l19300:
 11286                           ;interrupts.c: 102: }
 11287                           ;interrupts.c: 106: if (INTCONbits.TMR0IF) {
 11288                           	
 11289  0018A2  A4F2               	btfss	((c:4082)),c,2	;volatile
 11290  0018A4  D001               	goto	i2u212_41
 11291  0018A6  D001               	goto	i2u212_40
 11292  0018A8                     i2u212_41:
 11293  0018A8  D004               	goto	i2l19306
 11294  0018AA                     i2u212_40:
 11295                           	line	107
 11296                           	
 11297  0018AA                     i2l19302:
 11298                           ;interrupts.c: 107: INTCONbits.TMR0IF = 0;
 11299  0018AA  94F2               	bcf	((c:4082)),c,2	;volatile
 11300                           	line	109
 11301                           	
 11302  0018AC                     i2l19304:
 11303                           ;interrupts.c: 109: timer0_int_handler();
 11304  0018AC  EC88  F00B         	call	_timer0_int_handler	;wreg free
 11305  0018B0  D000               	goto	i2l19306
 11306                           	line	110
 11307                           	
 11308  0018B2                     i2l1821:
 11309                           	line	119
 11310                           	
 11311  0018B2                     i2l19306:
 11312                           ;interrupts.c: 110: }
 11313                           ;interrupts.c: 119: SleepIfOkay();
 11314  0018B2  ECFD  F00C         	call	_SleepIfOkay	;wreg free
 11315                           	line	120
 11316                           	
 11317  0018B6                     i2l1822:
 11318  0018B6  C0B8  FFF5         	movff	??_InterruptHandlerHigh+13,tablat+0
 11319  0018BA  C0B7  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru+0
 11320  0018BE  C0B6  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh+0
 11321  0018C2  C0B5  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl+0
 11322  0018C6  C0B4  FFF4         	movff	??_InterruptHandlerHigh+9,prodh+0
 11323  0018CA  C0B3  FFF3         	movff	??_InterruptHandlerHigh+8,prodl+0
 11324  0018CE  C0B2  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h+0
 11325  0018D2  C0B1  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l+0
 11326  0018D6  C0B0  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h+0
 11327  0018DA  C0AF  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l+0
 11328  0018DE  C0AE  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h+0
 11329  0018E2  C0AD  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l+0
 11330  0018E6  C0AC  FFFB         	movff	??_InterruptHandlerHigh+1,pclat+1
 11331  0018EA  C0AB  FFFA         	movff	??_InterruptHandlerHigh+0,pclat+0
 11332  0018EE  0011               	retfie f
 11333                           	opt stack 0
 11334                           GLOBAL	__end_of_InterruptHandlerHigh
 11335  0018F0                     	__end_of_InterruptHandlerHigh:
 11336                           	signat	_InterruptHandlerHigh,88
 11337                           	global	_i2c_int_handler
 11338                           
 11339 ;; *************** function _i2c_int_handler *****************
 11340 ;; Defined at:
 11341 ;;		line 174 in file "../src/my_i2c.c"
 11342 ;; Parameters:    Size  Location     Type
 11343 ;;		None
 11344 ;; Auto vars:     Size  Location     Type
 11345 ;;		None
 11346 ;; Return value:  Size  Location     Type
 11347 ;;		None               void
 11348 ;; Registers used:
 11349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11350 ;; Tracked objects:
 11351 ;;		On entry : 0/0
 11352 ;;		On exit  : 0/0
 11353 ;;		Unchanged: 0/0
 11354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11355 ;;      Params:         0       0       0       0       0
 11356 ;;      Locals:         0       0       0       0       0
 11357 ;;      Temps:          0       0       0       0       0
 11358 ;;      Totals:         0       0       0       0       0
 11359 ;;Total ram usage:        0 bytes
 11360 ;; Hardware stack levels used:    1
 11361 ;; Hardware stack levels required when called:    4
 11362 ;; This function calls:
 11363 ;;		_i2c_slave_int_handler
 11364 ;;		_i2c_master_int_handler
 11365 ;; This function is called by:
 11366 ;;		_InterruptHandlerHigh
 11367 ;; This function uses a non-reentrant model
 11368 ;;
 11369                           psect	text40,class=CODE,space=0,reloc=2
 11370                           global __ptext40
 11371  002090                     __ptext40:
 11372                           psect	text40
 11373                           	file	"../src/my_i2c.c"
 11374                           	line	174
 11375                           	global	__size_of_i2c_int_handler
 11376  0000                     	__size_of_i2c_int_handler	equ	__end_of_i2c_int_handler-_i2c_int_handler
 11377                           	
 11378  002090                     _i2c_int_handler:
 11379                           	opt	stack 16
 11380                           	line	175
 11381                           	
 11382  002090                     i2l19308:
 11383                           ;my_i2c.c: 175: switch(i2cMode){
 11384  002090  D007               	goto	i2l19314
 11385                           	line	176
 11386                           ;my_i2c.c: 176: case 1:{
 11387                           	
 11388  002092                     i2l7374:
 11389                           	line	177
 11390                           	
 11391  002092                     i2l19310:
 11392                           ;my_i2c.c: 177: i2c_slave_int_handler();
 11393  002092  EC6B  F000         	call	_i2c_slave_int_handler	;wreg free
 11394                           	line	178
 11395                           ;my_i2c.c: 178: break;
 11396  002096  D00E               	goto	i2l7378
 11397                           	line	180
 11398                           ;my_i2c.c: 179: }
 11399                           ;my_i2c.c: 180: case 2:{
 11400                           	
 11401  002098                     i2l7376:
 11402                           	line	181
 11403                           	
 11404  002098                     i2l19312:
 11405                           ;my_i2c.c: 181: i2c_master_int_handler();
 11406  002098  EC85  F003         	call	_i2c_master_int_handler	;wreg free
 11407                           	line	182
 11408                           ;my_i2c.c: 182: break;
 11409  00209C  D00B               	goto	i2l7378
 11410                           	line	184
 11411                           ;my_i2c.c: 183: }
 11412                           ;my_i2c.c: 184: default:{
 11413                           	
 11414  00209E                     i2l7377:
 11415                           	line	187
 11416                           ;my_i2c.c: 186: }
 11417                           ;my_i2c.c: 187: }
 11418  00209E  D00A               	goto	i2l7378
 11419                           	line	175
 11420                           	
 11421  0020A0                     i2l7373:
 11422                           	
 11423  0020A0                     i2l19314:
 11424  0020A0  0100               	movlb	0	; () banked
 11425  0020A2  0100               	movlb	0	; () banked
 11426  0020A4  51C6               	movf	((_i2cMode))&0ffh,w
 11427                           	; Switch size 1, requested type "space"
 11428                           ; Number of cases is 2, Range of values is 1 to 2
 11429                           ; switch strategies available:
 11430                           ; Name         Instructions Cycles
 11431                           ; simple_byte            7     4 (average)
 11432                           ;	Chosen strategy is simple_byte
 11433                           
 11434  0020A6  0A01               	xorlw	1^0	; case 1
 11435  0020A8  B4D8               	skipnz
 11436  0020AA  D7F3               	goto	i2l19310
 11437  0020AC  0A03               	xorlw	2^1	; case 2
 11438  0020AE  B4D8               	skipnz
 11439  0020B0  D7F3               	goto	i2l19312
 11440  0020B2  D000               	goto	i2l7378
 11441                           
 11442                           	line	187
 11443                           	
 11444  0020B4                     i2l7375:; BSR set to: 0
 11445                           
 11446                           	line	188
 11447                           	
 11448  0020B4                     i2l7378:
 11449  0020B4  0012               	return
 11450                           	opt stack 0
 11451                           GLOBAL	__end_of_i2c_int_handler
 11452  0020B6                     	__end_of_i2c_int_handler:
 11453                           	signat	_i2c_int_handler,88
 11454                           	global	_timer0_int_handler
 11455                           
 11456 ;; *************** function _timer0_int_handler *****************
 11457 ;; Defined at:
 11458 ;;		line 19 in file "../src/user_interrupts.c"
 11459 ;; Parameters:    Size  Location     Type
 11460 ;;		None
 11461 ;; Auto vars:     Size  Location     Type
 11462 ;;  val             2   21[BANK0 ] unsigned int 
 11463 ;;  length          2   19[BANK0 ] int 
 11464 ;;  msgtype         2   17[BANK0 ] int 
 11465 ;; Return value:  Size  Location     Type
 11466 ;;		None               void
 11467 ;; Registers used:
 11468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11469 ;; Tracked objects:
 11470 ;;		On entry : 0/0
 11471 ;;		On exit  : 0/0
 11472 ;;		Unchanged: 0/0
 11473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11474 ;;      Params:         0       0       0       0       0
 11475 ;;      Locals:         0       6       0       0       0
 11476 ;;      Temps:          2       0       0       0       0
 11477 ;;      Totals:         2       6       0       0       0
 11478 ;;Total ram usage:        8 bytes
 11479 ;; Hardware stack levels used:    1
 11480 ;; Hardware stack levels required when called:    3
 11481 ;; This function calls:
 11482 ;;		_WriteTimer0
 11483 ;;		_FromMainHigh_recvmsg
 11484 ;;		_ToMainHigh_sendmsg
 11485 ;; This function is called by:
 11486 ;;		_InterruptHandlerHigh
 11487 ;; This function uses a non-reentrant model
 11488 ;;
 11489                           psect	text41,class=CODE,space=0,reloc=2
 11490                           global __ptext41
 11491  001710                     __ptext41:
 11492                           psect	text41
 11493                           	file	"../src/user_interrupts.c"
 11494                           	line	19
 11495                           	global	__size_of_timer0_int_handler
 11496  0000                     	__size_of_timer0_int_handler	equ	__end_of_timer0_int_handler-_timer0_int_handler
 11497                           	
 11498  001710                     _timer0_int_handler:
 11499                           	opt	stack 17
 11500                           	line	24
 11501                           	
 11502  001710                     i2l19316:
 11503                           ;user_interrupts.c: 20: unsigned int val;
 11504                           ;user_interrupts.c: 21: int length, msgtype;
 11505                           ;user_interrupts.c: 24: LATBbits.LATB0 = !LATBbits.LATB0;
 11506                           	
 11507  001710  A08A               	btfss	((c:3978)),c,0	;volatile
 11508  001712  D001               	goto	i2u213_41
 11509  001714  D002               	goto	i2u213_40
 11510  001716                     i2u213_41:
 11511  001716  0E01               	movlw	1
 11512  001718  D001               	goto	i2u213_46
 11513  00171A                     i2u213_40:
 11514  00171A  0E00               	movlw	0
 11515  00171C                     i2u213_46:
 11516  00171C  6E40               	movwf	(??_timer0_int_handler+0+0)&0ffh,c
 11517  00171E  508A               	movf	((c:3978)),c,w	;volatile
 11518  001720  1840               	xorwf	((??_timer0_int_handler+0+0)),c,w
 11519  001722  0BFE               	andlw	not ((1<<1)-1)
 11520  001724  1840               	xorwf	((??_timer0_int_handler+0+0)),c,w
 11521  001726  6E8A               	movwf	((c:3978)),c	;volatile
 11522                           	line	26
 11523                           	
 11524  001728                     i2l19318:
 11525                           ;user_interrupts.c: 26: WriteTimer0(0);
 11526  001728  0E00               	movlw	high(0)
 11527  00172A  6E35               	movwf	((c:?_WriteTimer0+1)),c
 11528  00172C  0E00               	movlw	low(0)
 11529  00172E  6E34               	movwf	((c:?_WriteTimer0)),c
 11530  001730  ECC1  F010         	call	_WriteTimer0	;wreg free
 11531                           	line	28
 11532                           	
 11533  001734                     i2l19320:
 11534                           ;user_interrupts.c: 28: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)(uns
                                 igned int)&msgtype, (void *) &val);
 11535  001734  6E40               	movwf	(??_timer0_int_handler+0+0)&0ffh,c
 11536  001736  0E02               	movlw	low(02h)
 11537  001738  0100               	movlb	0	; () banked
 11538  00173A  0100               	movlb	0	; () banked
 11539  00173C  6F8C               	movwf	((?_FromMainHigh_recvmsg))&0ffh
 11540  00173E  5040               	movf	(??_timer0_int_handler+0+0)&0ffh,c,w
 11541  001740  0100               	movlb	0	; () banked
 11542  001742  0E00               	movlw	high(timer0_int_handler@msgtype)
 11543  001744  0100               	movlb	0	; () banked
 11544  001746  0100               	movlb	0	; () banked
 11545  001748  6F8E               	movwf	(1+(?_FromMainHigh_recvmsg+01h))&0ffh
 11546  00174A  0100               	movlb	0	; () banked
 11547  00174C  0E91               	movlw	low(timer0_int_handler@msgtype)
 11548  00174E  0100               	movlb	0	; () banked
 11549  001750  6F8D               	movwf	(0+(?_FromMainHigh_recvmsg+01h))&0ffh
 11550  001752  0100               	movlb	0	; () banked
 11551  001754  0E00               	movlw	high(timer0_int_handler@val)
 11552  001756  0100               	movlb	0	; () banked
 11553  001758  0100               	movlb	0	; () banked
 11554  00175A  6F90               	movwf	(1+(?_FromMainHigh_recvmsg+03h))&0ffh
 11555  00175C  0100               	movlb	0	; () banked
 11556  00175E  0E95               	movlw	low(timer0_int_handler@val)
 11557  001760  0100               	movlb	0	; () banked
 11558  001762  6F8F               	movwf	(0+(?_FromMainHigh_recvmsg+03h))&0ffh
 11559  001764  0100               	movlb	0	; () banked
 11560  001766  ECD9  F00F         	call	_FromMainHigh_recvmsg	;wreg free
 11561  00176A  0100               	movlb	0	; () banked
 11562  00176C  0100               	movlb	0	; () banked
 11563  00176E  6F93               	movwf	((timer0_int_handler@length))&0ffh
 11564  001770  0100               	movlb	0	; () banked
 11565  001772  6B94               	clrf	((timer0_int_handler@length+1))&0ffh
 11566  001774  0100               	movlb	0	; () banked
 11567  001776  BF93               	btfsc	((timer0_int_handler@length))&0ffh,7
 11568  001778  0794               	decf	((timer0_int_handler@length+1))&0ffh
 11569                           	line	29
 11570                           	
 11571  00177A                     i2l19322:; BSR set to: 0
 11572                           
 11573                           ;user_interrupts.c: 29: if (length == sizeof (val)) {
 11574  00177A  0100               	movlb	0	; () banked
 11575  00177C  0100               	movlb	0	; () banked
 11576  00177E  5193               	movf	((timer0_int_handler@length))&0ffh,w
 11577  001780  0A02               	xorlw	2
 11578  001782  1194               	iorwf ((timer0_int_handler@length+1))&0ffh,w
 11579                           
 11580  001784  A4D8               	btfss	status,2
 11581  001786  D001               	goto	i2u214_41
 11582  001788  D001               	goto	i2u214_40
 11583  00178A                     i2u214_41:
 11584  00178A  D019               	goto	i2l16444
 11585  00178C                     i2u214_40:
 11586                           	line	30
 11587                           	
 11588  00178C                     i2l19324:; BSR set to: 0
 11589                           
 11590                           ;user_interrupts.c: 30: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
 11591  00178C  6E40               	movwf	(??_timer0_int_handler+0+0)&0ffh,c
 11592  00178E  0E02               	movlw	low(02h)
 11593  001790  0100               	movlb	0	; () banked
 11594  001792  0100               	movlb	0	; () banked
 11595  001794  6F8B               	movwf	((?_ToMainHigh_sendmsg))&0ffh
 11596  001796  5040               	movf	(??_timer0_int_handler+0+0)&0ffh,c,w
 11597  001798  6E41               	movwf	(??_timer0_int_handler+1+0)&0ffh,c
 11598  00179A  0E0A               	movlw	low(0Ah)
 11599  00179C  0100               	movlb	0	; () banked
 11600  00179E  0100               	movlb	0	; () banked
 11601  0017A0  6F8C               	movwf	(0+(?_ToMainHigh_sendmsg+01h))&0ffh
 11602  0017A2  5041               	movf	(??_timer0_int_handler+1+0)&0ffh,c,w
 11603  0017A4  0100               	movlb	0	; () banked
 11604  0017A6  0E00               	movlw	high(timer0_int_handler@val)
 11605  0017A8  0100               	movlb	0	; () banked
 11606  0017AA  0100               	movlb	0	; () banked
 11607  0017AC  6F8E               	movwf	(1+(?_ToMainHigh_sendmsg+02h))&0ffh
 11608  0017AE  0100               	movlb	0	; () banked
 11609  0017B0  0E95               	movlw	low(timer0_int_handler@val)
 11610  0017B2  0100               	movlb	0	; () banked
 11611  0017B4  6F8D               	movwf	(0+(?_ToMainHigh_sendmsg+02h))&0ffh
 11612  0017B6  0100               	movlb	0	; () banked
 11613  0017B8  EC1F  F010         	call	_ToMainHigh_sendmsg	;wreg free
 11614  0017BC  D000               	goto	i2l16444
 11615                           	line	31
 11616                           	
 11617  0017BE                     i2l16443:
 11618                           	line	32
 11619                           	
 11620  0017BE                     i2l16444:
 11621  0017BE  0012               	return
 11622                           	opt stack 0
 11623                           GLOBAL	__end_of_timer0_int_handler
 11624  0017C0                     	__end_of_timer0_int_handler:
 11625                           	signat	_timer0_int_handler,88
 11626                           	global	_SleepIfOkay
 11627                           
 11628 ;; *************** function _SleepIfOkay *****************
 11629 ;; Defined at:
 11630 ;;		line 228 in file "../src/messages.c"
 11631 ;; Parameters:    Size  Location     Type
 11632 ;;		None
 11633 ;; Auto vars:     Size  Location     Type
 11634 ;;		None
 11635 ;; Return value:  Size  Location     Type
 11636 ;;		None               void
 11637 ;; Registers used:
 11638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11639 ;; Tracked objects:
 11640 ;;		On entry : 0/0
 11641 ;;		On exit  : 0/0
 11642 ;;		Unchanged: 0/0
 11643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11644 ;;      Params:         0       0       0       0       0
 11645 ;;      Locals:         0       0       0       0       0
 11646 ;;      Temps:          0       0       0       0       0
 11647 ;;      Totals:         0       0       0       0       0
 11648 ;;Total ram usage:        0 bytes
 11649 ;; Hardware stack levels used:    1
 11650 ;; Hardware stack levels required when called:    2
 11651 ;; This function calls:
 11652 ;;		i2_in_low_int
 11653 ;;		i2_in_high_int
 11654 ;;		i2_check_msg
 11655 ;;		_enter_sleep_mode
 11656 ;; This function is called by:
 11657 ;;		_InterruptHandlerHigh
 11658 ;; This function uses a non-reentrant model
 11659 ;;
 11660                           psect	text42,class=CODE,space=0,reloc=2
 11661                           global __ptext42
 11662  0019FA                     __ptext42:
 11663                           psect	text42
 11664                           	file	"../src/messages.c"
 11665                           	line	228
 11666                           	global	__size_of_SleepIfOkay
 11667  0000                     	__size_of_SleepIfOkay	equ	__end_of_SleepIfOkay-_SleepIfOkay
 11668                           	
 11669  0019FA                     _SleepIfOkay:
 11670                           	opt	stack 18
 11671                           	line	230
 11672                           	
 11673  0019FA                     i2l18390:
 11674                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
 11675  0019FA  6645               	tstfsz	((c:_MQ_Main_Willing_to_block)),c
 11676  0019FC  D001               	goto	i2u118_41
 11677  0019FE  D001               	goto	i2u118_40
 11678  001A00                     i2u118_41:
 11679  001A00  D002               	goto	i2l18394
 11680  001A02                     i2u118_40:
 11681  001A02  D035               	goto	i2l5530
 11682                           	line	231
 11683                           	
 11684  001A04                     i2l18392:
 11685                           ;messages.c: 231: return;
 11686  001A04  D034               	goto	i2l5530
 11687                           	line	232
 11688                           	
 11689  001A06                     i2l5529:
 11690                           	line	235
 11691                           	
 11692  001A06                     i2l18394:
 11693                           ;messages.c: 232: }
 11694                           ;messages.c: 235: if (in_low_int()) {
 11695  001A06  ECDF  F00E         	call	i2_in_low_int	;wreg free
 11696  001A0A  5037               	movf	(1+?i2_in_low_int),c,w
 11697  001A0C  1036               	iorwf (0+?i2_in_low_int),c,w
 11698                           
 11699  001A0E  B4D8               	btfsc	status,2
 11700  001A10  D001               	goto	i2u119_41
 11701  001A12  D001               	goto	i2u119_40
 11702  001A14                     i2u119_41:
 11703  001A14  D002               	goto	i2l18398
 11704  001A16                     i2u119_40:
 11705  001A16  D02B               	goto	i2l5530
 11706                           	line	236
 11707                           	
 11708  001A18                     i2l18396:
 11709                           ;messages.c: 236: return;
 11710  001A18  D02A               	goto	i2l5530
 11711                           	line	237
 11712                           	
 11713  001A1A                     i2l5531:
 11714                           	line	240
 11715                           	
 11716  001A1A                     i2l18398:
 11717                           ;messages.c: 237: }
 11718                           ;messages.c: 240: if (!in_high_int()) {
 11719  001A1A  ECCA  F010         	call	i2_in_high_int	;wreg free
 11720  001A1E  5035               	movf	(1+?i2_in_high_int),c,w
 11721  001A20  1034               	iorwf (0+?i2_in_high_int),c,w
 11722                           
 11723  001A22  A4D8               	btfss	status,2
 11724  001A24  D001               	goto	i2u120_41
 11725  001A26  D001               	goto	i2u120_40
 11726  001A28                     i2u120_41:
 11727  001A28  D002               	goto	i2l18402
 11728  001A2A                     i2u120_40:
 11729  001A2A  D021               	goto	i2l5530
 11730                           	line	241
 11731                           	
 11732  001A2C                     i2l18400:
 11733                           ;messages.c: 241: return;
 11734  001A2C  D020               	goto	i2l5530
 11735                           	line	242
 11736                           	
 11737  001A2E                     i2l5532:
 11738                           	line	247
 11739                           	
 11740  001A2E                     i2l18402:
 11741                           ;messages.c: 242: }
 11742                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
 11743  001A2E  0101               	movlb	1	; () banked
 11744  001A30  0E01               	movlw	high(_ToMainHigh_MQ)
 11745  001A32  6E35               	movwf	((c:?i2_check_msg+1)),c
 11746  001A34  0101               	movlb	1	; () banked
 11747  001A36  0E36               	movlw	low(_ToMainHigh_MQ)
 11748  001A38  6E34               	movwf	((c:?i2_check_msg)),c
 11749  001A3A  EC5B  F010         	call	i2_check_msg	;wreg free
 11750  001A3E  0900               	iorlw	0
 11751  001A40  B4D8               	btfsc	status,2
 11752  001A42  D001               	goto	i2u121_41
 11753  001A44  D001               	goto	i2u121_40
 11754  001A46                     i2u121_41:
 11755  001A46  D002               	goto	i2l18406
 11756  001A48                     i2u121_40:
 11757  001A48  D012               	goto	i2l5530
 11758                           	line	248
 11759                           	
 11760  001A4A                     i2l18404:
 11761                           ;messages.c: 248: return;
 11762  001A4A  D011               	goto	i2l5530
 11763                           	line	249
 11764                           	
 11765  001A4C                     i2l5533:
 11766                           	line	250
 11767                           	
 11768  001A4C                     i2l18406:
 11769                           ;messages.c: 249: }
 11770                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
 11771  001A4C  0101               	movlb	1	; () banked
 11772  001A4E  0E01               	movlw	high(_ToMainLow_MQ)
 11773  001A50  6E35               	movwf	((c:?i2_check_msg+1)),c
 11774  001A52  0101               	movlb	1	; () banked
 11775  001A54  0E6C               	movlw	low(_ToMainLow_MQ)
 11776  001A56  6E34               	movwf	((c:?i2_check_msg)),c
 11777  001A58  EC5B  F010         	call	i2_check_msg	;wreg free
 11778  001A5C  0900               	iorlw	0
 11779  001A5E  B4D8               	btfsc	status,2
 11780  001A60  D001               	goto	i2u122_41
 11781  001A62  D001               	goto	i2u122_40
 11782  001A64                     i2u122_41:
 11783  001A64  D002               	goto	i2l18410
 11784  001A66                     i2u122_40:
 11785  001A66  D003               	goto	i2l5530
 11786                           	line	251
 11787                           	
 11788  001A68                     i2l18408:
 11789                           ;messages.c: 251: return;
 11790  001A68  D002               	goto	i2l5530
 11791                           	line	252
 11792                           	
 11793  001A6A                     i2l5534:
 11794                           	line	253
 11795                           	
 11796  001A6A                     i2l18410:
 11797                           ;messages.c: 252: }
 11798                           ;messages.c: 253: enter_sleep_mode();
 11799  001A6A  ECE0  F010         	call	_enter_sleep_mode	;wreg free
 11800                           	line	254
 11801                           	
 11802  001A6E                     i2l5530:
 11803  001A6E  0012               	return
 11804                           	opt stack 0
 11805                           GLOBAL	__end_of_SleepIfOkay
 11806  001A70                     	__end_of_SleepIfOkay:
 11807                           	signat	_SleepIfOkay,88
 11808                           	global	_FromMainHigh_recvmsg
 11809                           
 11810 ;; *************** function _FromMainHigh_recvmsg *****************
 11811 ;; Defined at:
 11812 ;;		line 183 in file "../src/messages.c"
 11813 ;; Parameters:    Size  Location     Type
 11814 ;;  maxlength       1   12[BANK0 ] unsigned char 
 11815 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
 11816 ;;		 -> RAM(1023), 
 11817 ;;  data            2   15[BANK0 ] PTR void 
 11818 ;;		 -> timer0_int_handler@val(2), 
 11819 ;; Auto vars:     Size  Location     Type
 11820 ;;		None
 11821 ;; Return value:  Size  Location     Type
 11822 ;;                  1    wreg      char 
 11823 ;; Registers used:
 11824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11825 ;; Tracked objects:
 11826 ;;		On entry : 0/0
 11827 ;;		On exit  : 0/0
 11828 ;;		Unchanged: 0/0
 11829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11830 ;;      Params:         0       5       0       0       0
 11831 ;;      Locals:         0       0       0       0       0
 11832 ;;      Temps:          0       0       0       0       0
 11833 ;;      Totals:         0       5       0       0       0
 11834 ;;Total ram usage:        5 bytes
 11835 ;; Hardware stack levels used:    1
 11836 ;; Hardware stack levels required when called:    2
 11837 ;; This function calls:
 11838 ;;		i2_recv_msg
 11839 ;; This function is called by:
 11840 ;;		_timer0_int_handler
 11841 ;; This function uses a non-reentrant model
 11842 ;;
 11843                           psect	text43,class=CODE,space=0,reloc=2
 11844                           global __ptext43
 11845  001FB2                     __ptext43:
 11846                           psect	text43
 11847                           	file	"../src/messages.c"
 11848                           	line	183
 11849                           	global	__size_of_FromMainHigh_recvmsg
 11850  0000                     	__size_of_FromMainHigh_recvmsg	equ	__end_of_FromMainHigh_recvmsg-_FromMainHigh_recvmsg
 11851                           	
 11852  001FB2                     _FromMainHigh_recvmsg:
 11853                           	opt	stack 17
 11854                           	line	189
 11855                           	
 11856  001FB2                     i2l19492:
 11857                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
 11858  001FB2  0102               	movlb	2	; () banked
 11859  001FB4  0E02               	movlw	high(_FromMainHigh_MQ)
 11860  001FB6  0100               	movlb	0	; () banked
 11861  001FB8  0100               	movlb	0	; () banked
 11862  001FBA  6F81               	movwf	((?i2_recv_msg+1))&0ffh
 11863  001FBC  0102               	movlb	2	; () banked
 11864  001FBE  0E00               	movlw	low(_FromMainHigh_MQ)
 11865  001FC0  0100               	movlb	0	; () banked
 11866  001FC2  6F80               	movwf	((?i2_recv_msg))&0ffh
 11867  001FC4  C08C  F082         	movff	(FromMainHigh_recvmsg@maxlength),0+(?i2_recv_msg+02h)
 11868  001FC8  C08D  F083         	movff	(FromMainHigh_recvmsg@msgtype),0+(?i2_recv_msg+03h)
 11869  001FCC  C08E  F084         	movff	(FromMainHigh_recvmsg@msgtype+1),1+(?i2_recv_msg+03h)
 11870  001FD0  C08F  F085         	movff	(FromMainHigh_recvmsg@data),0+(?i2_recv_msg+05h)
 11871  001FD4  C090  F086         	movff	(FromMainHigh_recvmsg@data+1),1+(?i2_recv_msg+05h)
 11872  001FD8  0100               	movlb	0	; () banked
 11873  001FDA  EC17  F008         	call	i2_recv_msg	;wreg free
 11874  001FDE  D000               	goto	i2l5515
 11875                           	
 11876  001FE0                     i2l19494:
 11877                           	line	190
 11878                           	
 11879  001FE0                     i2l5515:
 11880  001FE0  0012               	return
 11881                           	opt stack 0
 11882                           GLOBAL	__end_of_FromMainHigh_recvmsg
 11883  001FE2                     	__end_of_FromMainHigh_recvmsg:
 11884                           	signat	_FromMainHigh_recvmsg,12409
 11885                           	global	_enter_sleep_mode
 11886                           
 11887 ;; *************** function _enter_sleep_mode *****************
 11888 ;; Defined at:
 11889 ;;		line 202 in file "../src/messages.c"
 11890 ;; Parameters:    Size  Location     Type
 11891 ;;		None
 11892 ;; Auto vars:     Size  Location     Type
 11893 ;;		None
 11894 ;; Return value:  Size  Location     Type
 11895 ;;		None               void
 11896 ;; Registers used:
 11897 ;;		None
 11898 ;; Tracked objects:
 11899 ;;		On entry : 0/0
 11900 ;;		On exit  : 0/0
 11901 ;;		Unchanged: 0/0
 11902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11903 ;;      Params:         0       0       0       0       0
 11904 ;;      Locals:         0       0       0       0       0
 11905 ;;      Temps:          0       0       0       0       0
 11906 ;;      Totals:         0       0       0       0       0
 11907 ;;Total ram usage:        0 bytes
 11908 ;; Hardware stack levels used:    1
 11909 ;; This function calls:
 11910 ;;		Nothing
 11911 ;; This function is called by:
 11912 ;;		_SleepIfOkay
 11913 ;; This function uses a non-reentrant model
 11914 ;;
 11915                           psect	text44,class=CODE,space=0,reloc=2
 11916                           global __ptext44
 11917  0021C0                     __ptext44:
 11918                           psect	text44
 11919                           	file	"../src/messages.c"
 11920                           	line	202
 11921                           	global	__size_of_enter_sleep_mode
 11922  0000                     	__size_of_enter_sleep_mode	equ	__end_of_enter_sleep_mode-_enter_sleep_mode
 11923                           	
 11924  0021C0                     _enter_sleep_mode:
 11925                           	opt	stack 19
 11926                           	line	204
 11927                           	
 11928  0021C0                     i2l18722:
 11929                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
 11930  0021C0  8ED3               	bsf	((c:4051)),c,7	;volatile
 11931                           	line	213
 11932                           # 213 "../src/messages.c"
 11933  0021C2  0003               SLEEP ;# 
 11934                           	line	215
 11935                           # 215 "../src/messages.c"
 11936                           # 214 ;# 
 11937                           psect	text44
 11938                           	line	218
 11939                           	
 11940  0021C4                     i2l5523:
 11941  0021C4  0012               	return
 11942                           	opt stack 0
 11943                           GLOBAL	__end_of_enter_sleep_mode
 11944  0021C6                     	__end_of_enter_sleep_mode:
 11945                           	signat	_enter_sleep_mode,88
 11946                           	global	_i2c_slave_int_handler
 11947                           
 11948 ;; *************** function _i2c_slave_int_handler *****************
 11949 ;; Defined at:
 11950 ;;		line 313 in file "../src/my_i2c.c"
 11951 ;; Parameters:    Size  Location     Type
 11952 ;;		None
 11953 ;; Auto vars:     Size  Location     Type
 11954 ;;  empty           4   27[BANK0 ] unsigned char [4]
 11955 ;;  data           10   17[BANK0 ] unsigned char [10]
 11956 ;;  length          2   36[BANK0 ] int 
 11957 ;;  msgtype         1   39[BANK0 ] unsigned char 
 11958 ;;  error_buf       3   31[BANK0 ] unsigned char [3]
 11959 ;;  data_read       1   42[BANK0 ] unsigned char 
 11960 ;;  msg_ready       1   41[BANK0 ] unsigned char 
 11961 ;;  msg_to_send     1   40[BANK0 ] unsigned char 
 11962 ;;  i2c_data        1   38[BANK0 ] unsigned char 
 11963 ;;  overrun_erro    1   35[BANK0 ] unsigned char 
 11964 ;;  data_written    1   34[BANK0 ] unsigned char 
 11965 ;; Return value:  Size  Location     Type
 11966 ;;		None               void
 11967 ;; Registers used:
 11968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11969 ;; Tracked objects:
 11970 ;;		On entry : 0/0
 11971 ;;		On exit  : 0/0
 11972 ;;		Unchanged: 0/0
 11973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11974 ;;      Params:         0       0       0       0       0
 11975 ;;      Locals:         0      26       0       0       0
 11976 ;;      Temps:          2       0       0       0       0
 11977 ;;      Totals:         2      26       0       0       0
 11978 ;;Total ram usage:       28 bytes
 11979 ;; Hardware stack levels used:    1
 11980 ;; Hardware stack levels required when called:    3
 11981 ;; This function calls:
 11982 ;;		_handle_start
 11983 ;;		_FromMainLow_recvmsg
 11984 ;;		_start_i2c_slave_reply
 11985 ;;		_ToMainHigh_sendmsg
 11986 ;; This function is called by:
 11987 ;;		_i2c_int_handler
 11988 ;; This function uses a non-reentrant model
 11989 ;;
 11990                           psect	text45,class=CODE,space=0,reloc=2
 11991                           global __ptext45
 11992  0000D6                     __ptext45:
 11993                           psect	text45
 11994                           	file	"../src/my_i2c.c"
 11995                           	line	313
 11996                           	global	__size_of_i2c_slave_int_handler
 11997  0000                     	__size_of_i2c_slave_int_handler	equ	__end_of_i2c_slave_int_handler-_i2c_slave_int_handl
                                 er
 11998                           	
 11999  0000D6                     _i2c_slave_int_handler:
 12000                           	opt	stack 16
 12001                           	line	315
 12002                           	
 12003  0000D6                     i2l19496:
 12004                           ;my_i2c.c: 314: unsigned char i2c_data;
 12005                           ;my_i2c.c: 315: unsigned char data_read = 0;
 12006  0000D6  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12007  0000D8  0E00               	movlw	low(0)
 12008  0000DA  0100               	movlb	0	; () banked
 12009  0000DC  0100               	movlb	0	; () banked
 12010  0000DE  6FAA               	movwf	((i2c_slave_int_handler@data_read))&0ffh
 12011  0000E0  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 12012                           	line	316
 12013                           ;my_i2c.c: 316: unsigned char data_written = 0;
 12014  0000E2  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12015  0000E4  0E00               	movlw	low(0)
 12016  0000E6  0100               	movlb	0	; () banked
 12017  0000E8  0100               	movlb	0	; () banked
 12018  0000EA  6FA2               	movwf	((i2c_slave_int_handler@data_written))&0ffh
 12019  0000EC  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 12020                           	line	317
 12021                           ;my_i2c.c: 317: unsigned char msg_ready = 0;
 12022  0000EE  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12023  0000F0  0E00               	movlw	low(0)
 12024  0000F2  0100               	movlb	0	; () banked
 12025  0000F4  0100               	movlb	0	; () banked
 12026  0000F6  6FA9               	movwf	((i2c_slave_int_handler@msg_ready))&0ffh
 12027  0000F8  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 12028                           	line	318
 12029                           ;my_i2c.c: 318: unsigned char msg_to_send = 0;
 12030  0000FA  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12031  0000FC  0E00               	movlw	low(0)
 12032  0000FE  0100               	movlb	0	; () banked
 12033  000100  0100               	movlb	0	; () banked
 12034  000102  6FA8               	movwf	((i2c_slave_int_handler@msg_to_send))&0ffh
 12035  000104  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 12036                           	line	319
 12037                           ;my_i2c.c: 319: unsigned char overrun_error = 0;
 12038  000106  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12039  000108  0E00               	movlw	low(0)
 12040  00010A  0100               	movlb	0	; () banked
 12041  00010C  0100               	movlb	0	; () banked
 12042  00010E  6FA3               	movwf	((i2c_slave_int_handler@overrun_error))&0ffh
 12043  000110  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 12044                           	line	323
 12045                           	
 12046  000112                     i2l19498:; BSR set to: 0
 12047                           
 12048                           ;my_i2c.c: 320: unsigned char error_buf[3];
 12049                           ;my_i2c.c: 323: if (SSPCON1bits.SSPOV == 1) {
 12050                           	
 12051  000112  ACC6               	btfss	((c:4038)),c,6	;volatile
 12052  000114  D001               	goto	i2u221_41
 12053  000116  D001               	goto	i2u221_40
 12054  000118                     i2u221_41:
 12055  000118  D01F               	goto	i2l19510
 12056  00011A                     i2u221_40:
 12057                           	line	324
 12058                           	
 12059  00011A                     i2l19500:; BSR set to: 0
 12060                           
 12061                           ;my_i2c.c: 324: SSPCON1bits.SSPOV = 0;
 12062  00011A  9CC6               	bcf	((c:4038)),c,6	;volatile
 12063                           	line	328
 12064                           	
 12065  00011C                     i2l19502:; BSR set to: 0
 12066                           
 12067                           ;my_i2c.c: 328: ic_ptr->status = 0x5;
 12068  00011C  EE20 F00D          	lfsr	2,0Dh
 12069  000120  5048               	movf	((c:_ic_ptr)),c,w
 12070  000122  26D9               	addwf	fsr2l
 12071  000124  5049               	movf	((c:_ic_ptr+1)),c,w
 12072  000126  22DA               	addwfc	fsr2h
 12073  000128  0E05               	movlw	low(05h)
 12074  00012A  6EDF               	movwf	indf2
 12075                           	line	329
 12076                           	
 12077  00012C                     i2l19504:; BSR set to: 0
 12078                           
 12079                           ;my_i2c.c: 329: overrun_error = 1;
 12080  00012C  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12081  00012E  0E01               	movlw	low(01h)
 12082  000130  0100               	movlb	0	; () banked
 12083  000132  0100               	movlb	0	; () banked
 12084  000134  6FA3               	movwf	((i2c_slave_int_handler@overrun_error))&0ffh
 12085  000136  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 12086                           	line	330
 12087                           	
 12088  000138                     i2l19506:; BSR set to: 0
 12089                           
 12090                           ;my_i2c.c: 330: ic_ptr->error_count++;
 12091  000138  EE20 F00F          	lfsr	2,0Fh
 12092  00013C  5048               	movf	((c:_ic_ptr)),c,w
 12093  00013E  26D9               	addwf	fsr2l
 12094  000140  5049               	movf	((c:_ic_ptr+1)),c,w
 12095  000142  22DA               	addwfc	fsr2h
 12096  000144  2ADF               	incf	indf2
 12097                           
 12098                           	line	331
 12099                           	
 12100  000146                     i2l19508:; BSR set to: 0
 12101                           
 12102                           ;my_i2c.c: 331: ic_ptr->error_code = 0x4;
 12103  000146  EE20 F00E          	lfsr	2,0Eh
 12104  00014A  5048               	movf	((c:_ic_ptr)),c,w
 12105  00014C  26D9               	addwf	fsr2l
 12106  00014E  5049               	movf	((c:_ic_ptr+1)),c,w
 12107  000150  22DA               	addwfc	fsr2h
 12108  000152  0E04               	movlw	low(04h)
 12109  000154  6EDF               	movwf	indf2
 12110  000156  D000               	goto	i2l19510
 12111                           	line	332
 12112                           	
 12113  000158                     i2l7412:; BSR set to: 0
 12114                           
 12115                           	line	334
 12116                           	
 12117  000158                     i2l19510:; BSR set to: 0
 12118                           
 12119                           ;my_i2c.c: 332: }
 12120                           ;my_i2c.c: 334: if (SSPSTATbits.BF == 1) {
 12121                           	
 12122  000158  A0C7               	btfss	((c:4039)),c,0	;volatile
 12123  00015A  D001               	goto	i2u222_41
 12124  00015C  D001               	goto	i2u222_40
 12125  00015E                     i2u222_41:
 12126  00015E  D009               	goto	i2l19516
 12127  000160                     i2u222_40:
 12128                           	line	335
 12129                           	
 12130  000160                     i2l19512:; BSR set to: 0
 12131                           
 12132                           ;my_i2c.c: 335: i2c_data = SSPBUF;
 12133  000160  CFC9 F0A6          	movff	(c:4041),(i2c_slave_int_handler@i2c_data)	;volatile
 12134                           	line	336
 12135                           	
 12136  000164                     i2l19514:; BSR set to: 0
 12137                           
 12138                           ;my_i2c.c: 336: data_read = 1;
 12139  000164  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12140  000166  0E01               	movlw	low(01h)
 12141  000168  0100               	movlb	0	; () banked
 12142  00016A  0100               	movlb	0	; () banked
 12143  00016C  6FAA               	movwf	((i2c_slave_int_handler@data_read))&0ffh
 12144  00016E  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 12145  000170  D000               	goto	i2l19516
 12146                           	line	337
 12147                           	
 12148  000172                     i2l7413:; BSR set to: 0
 12149                           
 12150                           	line	342
 12151                           	
 12152  000172                     i2l19516:; BSR set to: 0
 12153                           
 12154                           ;my_i2c.c: 337: }
 12155                           ;my_i2c.c: 342: if (!overrun_error) {
 12156  000172  0100               	movlb	0	; () banked
 12157  000174  0100               	movlb	0	; () banked
 12158  000176  67A3               	tstfsz	((i2c_slave_int_handler@overrun_error))&0ffh
 12159  000178  D001               	goto	i2u223_41
 12160  00017A  D001               	goto	i2u223_40
 12161  00017C                     i2u223_41:
 12162  00017C  D1C9               	goto	i2l7414
 12163  00017E                     i2u223_40:
 12164  00017E  D1B4               	goto	i2l19604
 12165                           	line	343
 12166                           	
 12167  000180                     i2l19518:; BSR set to: 0
 12168                           
 12169                           ;my_i2c.c: 343: switch (ic_ptr->status) {
 12170  000180  D1B3               	goto	i2l19604
 12171                           	line	344
 12172                           ;my_i2c.c: 344: case 0x5:
 12173                           	
 12174  000182                     i2l7416:; BSR set to: 0
 12175                           
 12176                           	line	347
 12177                           ;my_i2c.c: 345: {
 12178                           ;my_i2c.c: 347: if (SSPSTATbits.S == 1) {
 12179                           	
 12180  000182  A6C7               	btfss	((c:4039)),c,3	;volatile
 12181  000184  D001               	goto	i2u224_41
 12182  000186  D001               	goto	i2u224_40
 12183  000188                     i2u224_41:
 12184  000188  D1C3               	goto	i2l7414
 12185  00018A                     i2u224_40:
 12186                           	line	348
 12187                           	
 12188  00018A                     i2l19520:; BSR set to: 0
 12189                           
 12190                           ;my_i2c.c: 348: handle_start(data_read);
 12191  00018A  C0AA  F034         	movff	(i2c_slave_int_handler@data_read),(c:?_handle_start)
 12192  00018E  ECE0  F00B         	call	_handle_start	;wreg free
 12193                           	line	350
 12194                           	
 12195  000192                     i2l19522:
 12196                           ;my_i2c.c: 350: if (ic_ptr->status == 0x8) {
 12197  000192  EE20 F00D          	lfsr	2,0Dh
 12198  000196  5048               	movf	((c:_ic_ptr)),c,w
 12199  000198  26D9               	addwf	fsr2l
 12200  00019A  5049               	movf	((c:_ic_ptr+1)),c,w
 12201  00019C  22DA               	addwfc	fsr2h
 12202  00019E  0E08               	movlw	(08h)&0ffh
 12203  0001A0  62DF               	cpfseq	indf2
 12204  0001A2  D001               	goto	i2u225_41
 12205  0001A4  D001               	goto	i2u225_40
 12206  0001A6                     i2u225_41:
 12207  0001A6  D1B4               	goto	i2l7414
 12208  0001A8                     i2u225_40:
 12209                           	line	351
 12210                           	
 12211  0001A8                     i2l19524:
 12212                           ;my_i2c.c: 351: data_read = 0;
 12213  0001A8  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12214  0001AA  0E00               	movlw	low(0)
 12215  0001AC  0100               	movlb	0	; () banked
 12216  0001AE  0100               	movlb	0	; () banked
 12217  0001B0  6FAA               	movwf	((i2c_slave_int_handler@data_read))&0ffh
 12218  0001B2  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 12219                           	line	352
 12220                           ;my_i2c.c: 352: msg_to_send = 1;
 12221  0001B4  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12222  0001B6  0E01               	movlw	low(01h)
 12223  0001B8  0100               	movlb	0	; () banked
 12224  0001BA  0100               	movlb	0	; () banked
 12225  0001BC  6FA8               	movwf	((i2c_slave_int_handler@msg_to_send))&0ffh
 12226  0001BE  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 12227  0001C0  D1A7               	goto	i2l7414
 12228                           	line	353
 12229                           	
 12230  0001C2                     i2l7418:; BSR set to: 0
 12231                           
 12232  0001C2  D1A6               	goto	i2l7414
 12233                           	line	354
 12234                           	
 12235  0001C4                     i2l7417:; BSR set to: 0
 12236                           
 12237                           	line	355
 12238                           ;my_i2c.c: 353: }
 12239                           ;my_i2c.c: 354: }
 12240                           ;my_i2c.c: 355: break;
 12241  0001C4  D1A5               	goto	i2l7414
 12242                           	line	357
 12243                           ;my_i2c.c: 356: }
 12244                           ;my_i2c.c: 357: case 0x6:
 12245                           	
 12246  0001C6                     i2l7420:; BSR set to: 0
 12247                           
 12248                           	line	360
 12249                           ;my_i2c.c: 358: {
 12250                           ;my_i2c.c: 360: if (SSPSTATbits.P == 1) {
 12251                           	
 12252  0001C6  A8C7               	btfss	((c:4039)),c,4	;volatile
 12253  0001C8  D001               	goto	i2u226_41
 12254  0001CA  D001               	goto	i2u226_40
 12255  0001CC                     i2u226_41:
 12256  0001CC  D032               	goto	i2l19536
 12257  0001CE                     i2u226_40:
 12258                           	line	363
 12259                           	
 12260  0001CE                     i2l19526:; BSR set to: 0
 12261                           
 12262                           ;my_i2c.c: 363: ic_ptr->event_count++;
 12263  0001CE  EE20 F00C          	lfsr	2,0Ch
 12264  0001D2  5048               	movf	((c:_ic_ptr)),c,w
 12265  0001D4  26D9               	addwf	fsr2l
 12266  0001D6  5049               	movf	((c:_ic_ptr+1)),c,w
 12267  0001D8  22DA               	addwfc	fsr2h
 12268  0001DA  2ADF               	incf	indf2
 12269                           
 12270                           	line	364
 12271                           	
 12272  0001DC                     i2l19528:; BSR set to: 0
 12273                           
 12274                           ;my_i2c.c: 364: if (data_read) {
 12275  0001DC  0100               	movlb	0	; () banked
 12276  0001DE  0100               	movlb	0	; () banked
 12277  0001E0  51AA               	movf	((i2c_slave_int_handler@data_read))&0ffh,w
 12278  0001E2  B4D8               	btfsc	status,2
 12279  0001E4  D001               	goto	i2u227_41
 12280  0001E6  D001               	goto	i2u227_40
 12281  0001E8                     i2u227_41:
 12282  0001E8  D01B               	goto	i2l7422
 12283  0001EA                     i2u227_40:
 12284                           	line	365
 12285                           	
 12286  0001EA                     i2l19530:; BSR set to: 0
 12287                           
 12288                           ;my_i2c.c: 365: if (SSPSTATbits.D_A == 0) {
 12289                           	
 12290  0001EA  BAC7               	btfsc	((c:4039)),c,5	;volatile
 12291  0001EC  D001               	goto	i2u228_41
 12292  0001EE  D001               	goto	i2u228_40
 12293  0001F0                     i2u228_41:
 12294  0001F0  D007               	goto	i2l19534
 12295  0001F2                     i2u228_40:
 12296                           	line	366
 12297                           	
 12298  0001F2                     i2l19532:; BSR set to: 0
 12299                           
 12300                           ;my_i2c.c: 366: msg_ready = 1;
 12301  0001F2  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12302  0001F4  0E01               	movlw	low(01h)
 12303  0001F6  0100               	movlb	0	; () banked
 12304  0001F8  0100               	movlb	0	; () banked
 12305  0001FA  6FA9               	movwf	((i2c_slave_int_handler@msg_ready))&0ffh
 12306  0001FC  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 12307                           	line	367
 12308                           ;my_i2c.c: 367: } else {
 12309  0001FE  D010               	goto	i2l7422
 12310                           	
 12311  000200                     i2l7423:; BSR set to: 0
 12312                           
 12313                           	line	368
 12314                           	
 12315  000200                     i2l19534:; BSR set to: 0
 12316                           
 12317                           ;my_i2c.c: 368: ic_ptr->error_count++;
 12318  000200  EE20 F00F          	lfsr	2,0Fh
 12319  000204  5048               	movf	((c:_ic_ptr)),c,w
 12320  000206  26D9               	addwf	fsr2l
 12321  000208  5049               	movf	((c:_ic_ptr+1)),c,w
 12322  00020A  22DA               	addwfc	fsr2h
 12323  00020C  2ADF               	incf	indf2
 12324                           
 12325                           	line	369
 12326                           ;my_i2c.c: 369: ic_ptr->error_code = 0x6;
 12327  00020E  EE20 F00E          	lfsr	2,0Eh
 12328  000212  5048               	movf	((c:_ic_ptr)),c,w
 12329  000214  26D9               	addwf	fsr2l
 12330  000216  5049               	movf	((c:_ic_ptr+1)),c,w
 12331  000218  22DA               	addwfc	fsr2h
 12332  00021A  0E06               	movlw	low(06h)
 12333  00021C  6EDF               	movwf	indf2
 12334  00021E  D000               	goto	i2l7422
 12335                           	line	370
 12336                           	
 12337  000220                     i2l7424:; BSR set to: 0
 12338                           
 12339                           	line	371
 12340                           	
 12341  000220                     i2l7422:; BSR set to: 0
 12342                           
 12343                           	line	372
 12344                           ;my_i2c.c: 370: }
 12345                           ;my_i2c.c: 371: }
 12346                           ;my_i2c.c: 372: ic_ptr->status = 0x5;
 12347  000220  EE20 F00D          	lfsr	2,0Dh
 12348  000224  5048               	movf	((c:_ic_ptr)),c,w
 12349  000226  26D9               	addwf	fsr2l
 12350  000228  5049               	movf	((c:_ic_ptr+1)),c,w
 12351  00022A  22DA               	addwfc	fsr2h
 12352  00022C  0E05               	movlw	low(05h)
 12353  00022E  6EDF               	movwf	indf2
 12354                           	line	373
 12355                           ;my_i2c.c: 373: } else if (data_read) {
 12356  000230  D16F               	goto	i2l7414
 12357                           	
 12358  000232                     i2l7421:; BSR set to: 0
 12359                           
 12360                           	
 12361  000232                     i2l19536:; BSR set to: 0
 12362                           
 12363  000232  0100               	movlb	0	; () banked
 12364  000234  0100               	movlb	0	; () banked
 12365  000236  51AA               	movf	((i2c_slave_int_handler@data_read))&0ffh,w
 12366  000238  B4D8               	btfsc	status,2
 12367  00023A  D001               	goto	i2u229_41
 12368  00023C  D001               	goto	i2u229_40
 12369  00023E                     i2u229_41:
 12370  00023E  D168               	goto	i2l7414
 12371  000240                     i2u229_40:
 12372                           	line	374
 12373                           	
 12374  000240                     i2l19538:; BSR set to: 0
 12375                           
 12376                           ;my_i2c.c: 374: ic_ptr->event_count++;
 12377  000240  EE20 F00C          	lfsr	2,0Ch
 12378  000244  5048               	movf	((c:_ic_ptr)),c,w
 12379  000246  26D9               	addwf	fsr2l
 12380  000248  5049               	movf	((c:_ic_ptr+1)),c,w
 12381  00024A  22DA               	addwfc	fsr2h
 12382  00024C  2ADF               	incf	indf2
 12383                           
 12384                           	line	375
 12385                           	
 12386  00024E                     i2l19540:; BSR set to: 0
 12387                           
 12388                           ;my_i2c.c: 375: if (SSPSTATbits.D_A == 0) {
 12389                           	
 12390  00024E  BAC7               	btfsc	((c:4039)),c,5	;volatile
 12391  000250  D001               	goto	i2u230_41
 12392  000252  D001               	goto	i2u230_40
 12393  000254                     i2u230_41:
 12394  000254  D023               	goto	i2l19552
 12395  000256                     i2u230_40:
 12396                           	line	376
 12397                           	
 12398  000256                     i2l19542:; BSR set to: 0
 12399                           
 12400                           ;my_i2c.c: 376: if (SSPSTATbits.R_W == 0) {
 12401                           	
 12402  000256  B4C7               	btfsc	((c:4039)),c,2	;volatile
 12403  000258  D001               	goto	i2u231_41
 12404  00025A  D001               	goto	i2u231_40
 12405  00025C                     i2u231_41:
 12406  00025C  D009               	goto	i2l19546
 12407  00025E                     i2u231_40:
 12408                           	line	377
 12409                           	
 12410  00025E                     i2l19544:; BSR set to: 0
 12411                           
 12412                           ;my_i2c.c: 377: ic_ptr->status = 0x7;
 12413  00025E  EE20 F00D          	lfsr	2,0Dh
 12414  000262  5048               	movf	((c:_ic_ptr)),c,w
 12415  000264  26D9               	addwf	fsr2l
 12416  000266  5049               	movf	((c:_ic_ptr+1)),c,w
 12417  000268  22DA               	addwfc	fsr2h
 12418  00026A  0E07               	movlw	low(07h)
 12419  00026C  6EDF               	movwf	indf2
 12420                           	line	378
 12421                           ;my_i2c.c: 378: } else {
 12422  00026E  D150               	goto	i2l7414
 12423                           	
 12424  000270                     i2l7428:; BSR set to: 0
 12425                           
 12426                           	line	379
 12427                           	
 12428  000270                     i2l19546:; BSR set to: 0
 12429                           
 12430                           ;my_i2c.c: 379: ic_ptr->status = 0x8;
 12431  000270  EE20 F00D          	lfsr	2,0Dh
 12432  000274  5048               	movf	((c:_ic_ptr)),c,w
 12433  000276  26D9               	addwf	fsr2l
 12434  000278  5049               	movf	((c:_ic_ptr+1)),c,w
 12435  00027A  22DA               	addwfc	fsr2h
 12436  00027C  0E08               	movlw	low(08h)
 12437  00027E  6EDF               	movwf	indf2
 12438                           	line	380
 12439                           	
 12440  000280                     i2l19548:; BSR set to: 0
 12441                           
 12442                           ;my_i2c.c: 380: msg_to_send = 1;
 12443  000280  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12444  000282  0E01               	movlw	low(01h)
 12445  000284  0100               	movlb	0	; () banked
 12446  000286  0100               	movlb	0	; () banked
 12447  000288  6FA8               	movwf	((i2c_slave_int_handler@msg_to_send))&0ffh
 12448  00028A  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 12449                           	line	382
 12450                           	
 12451  00028C                     i2l19550:; BSR set to: 0
 12452                           
 12453                           ;my_i2c.c: 382: data_read = 0;
 12454  00028C  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12455  00028E  0E00               	movlw	low(0)
 12456  000290  0100               	movlb	0	; () banked
 12457  000292  0100               	movlb	0	; () banked
 12458  000294  6FAA               	movwf	((i2c_slave_int_handler@data_read))&0ffh
 12459  000296  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 12460  000298  D13B               	goto	i2l7414
 12461                           	line	383
 12462                           	
 12463  00029A                     i2l7429:; BSR set to: 0
 12464                           
 12465                           	line	384
 12466                           ;my_i2c.c: 383: }
 12467                           ;my_i2c.c: 384: } else {
 12468  00029A  D13A               	goto	i2l7414
 12469                           	
 12470  00029C                     i2l7427:; BSR set to: 0
 12471                           
 12472                           	line	385
 12473                           	
 12474  00029C                     i2l19552:; BSR set to: 0
 12475                           
 12476                           ;my_i2c.c: 385: ic_ptr->error_count++;
 12477  00029C  EE20 F00F          	lfsr	2,0Fh
 12478  0002A0  5048               	movf	((c:_ic_ptr)),c,w
 12479  0002A2  26D9               	addwf	fsr2l
 12480  0002A4  5049               	movf	((c:_ic_ptr+1)),c,w
 12481  0002A6  22DA               	addwfc	fsr2h
 12482  0002A8  2ADF               	incf	indf2
 12483                           
 12484                           	line	386
 12485                           ;my_i2c.c: 386: ic_ptr->status = 0x5;
 12486  0002AA  EE20 F00D          	lfsr	2,0Dh
 12487  0002AE  5048               	movf	((c:_ic_ptr)),c,w
 12488  0002B0  26D9               	addwf	fsr2l
 12489  0002B2  5049               	movf	((c:_ic_ptr+1)),c,w
 12490  0002B4  22DA               	addwfc	fsr2h
 12491  0002B6  0E05               	movlw	low(05h)
 12492  0002B8  6EDF               	movwf	indf2
 12493                           	line	387
 12494                           ;my_i2c.c: 387: ic_ptr->error_code = 0x6;
 12495  0002BA  EE20 F00E          	lfsr	2,0Eh
 12496  0002BE  5048               	movf	((c:_ic_ptr)),c,w
 12497  0002C0  26D9               	addwf	fsr2l
 12498  0002C2  5049               	movf	((c:_ic_ptr+1)),c,w
 12499  0002C4  22DA               	addwfc	fsr2h
 12500  0002C6  0E06               	movlw	low(06h)
 12501  0002C8  6EDF               	movwf	indf2
 12502  0002CA  D122               	goto	i2l7414
 12503                           	line	388
 12504                           	
 12505  0002CC                     i2l7430:; BSR set to: 0
 12506                           
 12507  0002CC  D121               	goto	i2l7414
 12508                           	line	389
 12509                           	
 12510  0002CE                     i2l7426:; BSR set to: 0
 12511                           
 12512  0002CE  D120               	goto	i2l7414
 12513                           	line	390
 12514                           	
 12515  0002D0                     i2l7425:; BSR set to: 0
 12516                           
 12517                           ;my_i2c.c: 388: }
 12518                           ;my_i2c.c: 389: }
 12519                           ;my_i2c.c: 390: break;
 12520  0002D0  D11F               	goto	i2l7414
 12521                           	line	392
 12522                           ;my_i2c.c: 391: }
 12523                           ;my_i2c.c: 392: case 0x8:
 12524                           	
 12525  0002D2                     i2l7431:; BSR set to: 0
 12526                           
 12527                           	line	394
 12528                           	
 12529  0002D2                     i2l19554:; BSR set to: 0
 12530                           
 12531                           ;my_i2c.c: 393: {
 12532                           ;my_i2c.c: 394: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
 12533  0002D2  EE20 F01B          	lfsr	2,01Bh
 12534  0002D6  5048               	movf	((c:_ic_ptr)),c,w
 12535  0002D8  26D9               	addwf	fsr2l
 12536  0002DA  5049               	movf	((c:_ic_ptr+1)),c,w
 12537  0002DC  22DA               	addwfc	fsr2h
 12538  0002DE  50DF               	movf	indf2,w
 12539  0002E0  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12540  0002E2  EE20 F01A          	lfsr	2,01Ah
 12541  0002E6  5048               	movf	((c:_ic_ptr)),c,w
 12542  0002E8  26D9               	addwf	fsr2l
 12543  0002EA  5049               	movf	((c:_ic_ptr+1)),c,w
 12544  0002EC  22DA               	addwfc	fsr2h
 12545  0002EE  50DF               	movf	indf2,w
 12546  0002F0  5C40               	subwf	((??_i2c_slave_int_handler+0+0)),c,w
 12547  0002F2  B0D8               	btfsc	status,0
 12548  0002F4  D001               	goto	i2u232_41
 12549  0002F6  D001               	goto	i2u232_40
 12550  0002F8                     i2u232_41:
 12551  0002F8  D024               	goto	i2l19562
 12552  0002FA                     i2u232_40:
 12553                           	line	395
 12554                           	
 12555  0002FA                     i2l19556:; BSR set to: 0
 12556                           
 12557                           ;my_i2c.c: 395: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
 12558  0002FA  EE20 F01B          	lfsr	2,01Bh
 12559  0002FE  5048               	movf	((c:_ic_ptr)),c,w
 12560  000300  26D9               	addwf	fsr2l
 12561  000302  5049               	movf	((c:_ic_ptr+1)),c,w
 12562  000304  22DA               	addwfc	fsr2h
 12563  000306  50DF               	movf	indf2,w
 12564  000308  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12565  00030A  5040               	movf	((??_i2c_slave_int_handler+0+0)),c,w
 12566  00030C  0D01               	mullw	01h
 12567  00030E  0E10               	movlw	010h
 12568  000310  26F3               	addwf	(prodl),c
 12569  000312  0E00               	movlw	0
 12570  000314  22F4               	addwfc	(prodh),c
 12571  000316  50F3               	movf	(prodl),c,w
 12572  000318  2448               	addwf	((c:_ic_ptr)),c,w
 12573  00031A  6ED9               	movwf	c:fsr2l
 12574  00031C  50F4               	movf	(prodh),c,w
 12575  00031E  2049               	addwfc	((c:_ic_ptr+1)),c,w
 12576  000320  6EDA               	movwf	1+c:fsr2l
 12577  000322  50DF               	movf	indf2,w
 12578  000324  6EC9               	movwf	((c:4041)),c	;volatile
 12579                           	line	396
 12580                           	
 12581  000326                     i2l19558:; BSR set to: 0
 12582                           
 12583                           ;my_i2c.c: 396: ic_ptr->outbufind++;
 12584  000326  EE20 F01B          	lfsr	2,01Bh
 12585  00032A  5048               	movf	((c:_ic_ptr)),c,w
 12586  00032C  26D9               	addwf	fsr2l
 12587  00032E  5049               	movf	((c:_ic_ptr+1)),c,w
 12588  000330  22DA               	addwfc	fsr2h
 12589  000332  2ADF               	incf	indf2
 12590                           
 12591                           	line	397
 12592                           	
 12593  000334                     i2l19560:; BSR set to: 0
 12594                           
 12595                           ;my_i2c.c: 397: data_written = 1;
 12596  000334  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12597  000336  0E01               	movlw	low(01h)
 12598  000338  0100               	movlb	0	; () banked
 12599  00033A  0100               	movlb	0	; () banked
 12600  00033C  6FA2               	movwf	((i2c_slave_int_handler@data_written))&0ffh
 12601  00033E  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 12602                           	line	398
 12603                           ;my_i2c.c: 398: } else {
 12604  000340  D0E7               	goto	i2l7414
 12605                           	
 12606  000342                     i2l7432:; BSR set to: 0
 12607                           
 12608                           	line	400
 12609                           	
 12610  000342                     i2l19562:; BSR set to: 0
 12611                           
 12612                           ;my_i2c.c: 400: ic_ptr->status = 0x5;
 12613  000342  EE20 F00D          	lfsr	2,0Dh
 12614  000346  5048               	movf	((c:_ic_ptr)),c,w
 12615  000348  26D9               	addwf	fsr2l
 12616  00034A  5049               	movf	((c:_ic_ptr+1)),c,w
 12617  00034C  22DA               	addwfc	fsr2h
 12618  00034E  0E05               	movlw	low(05h)
 12619  000350  6EDF               	movwf	indf2
 12620  000352  D0DE               	goto	i2l7414
 12621                           	line	401
 12622                           	
 12623  000354                     i2l7433:; BSR set to: 0
 12624                           
 12625                           	line	402
 12626                           ;my_i2c.c: 401: }
 12627                           ;my_i2c.c: 402: break;
 12628  000354  D0DD               	goto	i2l7414
 12629                           	line	404
 12630                           ;my_i2c.c: 403: }
 12631                           ;my_i2c.c: 404: case 0x7:
 12632                           	
 12633  000356                     i2l7434:; BSR set to: 0
 12634                           
 12635                           	line	407
 12636                           ;my_i2c.c: 405: {
 12637                           ;my_i2c.c: 407: if (SSPSTATbits.P == 1) {
 12638                           	
 12639  000356  A8C7               	btfss	((c:4039)),c,4	;volatile
 12640  000358  D001               	goto	i2u233_41
 12641  00035A  D001               	goto	i2u233_40
 12642  00035C                     i2u233_41:
 12643  00035C  D05C               	goto	i2l19582
 12644  00035E                     i2u233_40:
 12645                           	line	409
 12646                           	
 12647  00035E                     i2l19564:; BSR set to: 0
 12648                           
 12649                           ;my_i2c.c: 409: ic_ptr->event_count++;
 12650  00035E  EE20 F00C          	lfsr	2,0Ch
 12651  000362  5048               	movf	((c:_ic_ptr)),c,w
 12652  000364  26D9               	addwf	fsr2l
 12653  000366  5049               	movf	((c:_ic_ptr+1)),c,w
 12654  000368  22DA               	addwfc	fsr2h
 12655  00036A  2ADF               	incf	indf2
 12656                           
 12657                           	line	410
 12658                           	
 12659  00036C                     i2l19566:; BSR set to: 0
 12660                           
 12661                           ;my_i2c.c: 410: if (data_read) {
 12662  00036C  0100               	movlb	0	; () banked
 12663  00036E  0100               	movlb	0	; () banked
 12664  000370  51AA               	movf	((i2c_slave_int_handler@data_read))&0ffh,w
 12665  000372  B4D8               	btfsc	status,2
 12666  000374  D001               	goto	i2u234_41
 12667  000376  D001               	goto	i2u234_40
 12668  000378                     i2u234_41:
 12669  000378  D03E               	goto	i2l19578
 12670  00037A                     i2u234_40:
 12671                           	line	411
 12672                           	
 12673  00037A                     i2l19568:; BSR set to: 0
 12674                           
 12675                           ;my_i2c.c: 411: if (SSPSTATbits.D_A == 1) {
 12676                           	
 12677  00037A  AAC7               	btfss	((c:4039)),c,5	;volatile
 12678  00037C  D001               	goto	i2u235_41
 12679  00037E  D001               	goto	i2u235_40
 12680  000380                     i2u235_41:
 12681  000380  D021               	goto	i2l19576
 12682  000382                     i2u235_40:
 12683                           	line	412
 12684                           	
 12685  000382                     i2l19570:; BSR set to: 0
 12686                           
 12687                           ;my_i2c.c: 412: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
 12688  000382  EE20 F00A          	lfsr	2,0Ah
 12689  000386  5048               	movf	((c:_ic_ptr)),c,w
 12690  000388  26D9               	addwf	fsr2l
 12691  00038A  5049               	movf	((c:_ic_ptr+1)),c,w
 12692  00038C  22DA               	addwfc	fsr2h
 12693  00038E  50DF               	movf	indf2,w
 12694  000390  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12695  000392  5040               	movf	((??_i2c_slave_int_handler+0+0)),c,w
 12696  000394  0D01               	mullw	01h
 12697  000396  50F3               	movf	(prodl),c,w
 12698  000398  2448               	addwf	((c:_ic_ptr)),c,w
 12699  00039A  6ED9               	movwf	c:fsr2l
 12700  00039C  50F4               	movf	(prodh),c,w
 12701  00039E  2049               	addwfc	((c:_ic_ptr+1)),c,w
 12702  0003A0  6EDA               	movwf	1+c:fsr2l
 12703  0003A2  0100               	movlb	0	; () banked
 12704  0003A4  C0A6  FFDF         	movff	(i2c_slave_int_handler@i2c_data),indf2
 12705                           
 12706                           	line	413
 12707                           	
 12708  0003A8                     i2l19572:; BSR set to: 0
 12709                           
 12710                           ;my_i2c.c: 413: ic_ptr->buflen++;
 12711  0003A8  EE20 F00A          	lfsr	2,0Ah
 12712  0003AC  5048               	movf	((c:_ic_ptr)),c,w
 12713  0003AE  26D9               	addwf	fsr2l
 12714  0003B0  5049               	movf	((c:_ic_ptr+1)),c,w
 12715  0003B2  22DA               	addwfc	fsr2h
 12716  0003B4  2ADF               	incf	indf2
 12717                           
 12718                           	line	414
 12719                           	
 12720  0003B6                     i2l19574:; BSR set to: 0
 12721                           
 12722                           ;my_i2c.c: 414: msg_ready = 1;
 12723  0003B6  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12724  0003B8  0E01               	movlw	low(01h)
 12725  0003BA  0100               	movlb	0	; () banked
 12726  0003BC  0100               	movlb	0	; () banked
 12727  0003BE  6FA9               	movwf	((i2c_slave_int_handler@msg_ready))&0ffh
 12728  0003C0  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 12729                           	line	415
 12730                           ;my_i2c.c: 415: } else {
 12731  0003C2  D020               	goto	i2l19580
 12732                           	
 12733  0003C4                     i2l7437:; BSR set to: 0
 12734                           
 12735                           	line	416
 12736                           	
 12737  0003C4                     i2l19576:; BSR set to: 0
 12738                           
 12739                           ;my_i2c.c: 416: ic_ptr->error_count++;
 12740  0003C4  EE20 F00F          	lfsr	2,0Fh
 12741  0003C8  5048               	movf	((c:_ic_ptr)),c,w
 12742  0003CA  26D9               	addwf	fsr2l
 12743  0003CC  5049               	movf	((c:_ic_ptr+1)),c,w
 12744  0003CE  22DA               	addwfc	fsr2h
 12745  0003D0  2ADF               	incf	indf2
 12746                           
 12747                           	line	417
 12748                           ;my_i2c.c: 417: ic_ptr->error_code = 0x6;
 12749  0003D2  EE20 F00E          	lfsr	2,0Eh
 12750  0003D6  5048               	movf	((c:_ic_ptr)),c,w
 12751  0003D8  26D9               	addwf	fsr2l
 12752  0003DA  5049               	movf	((c:_ic_ptr+1)),c,w
 12753  0003DC  22DA               	addwfc	fsr2h
 12754  0003DE  0E06               	movlw	low(06h)
 12755  0003E0  6EDF               	movwf	indf2
 12756                           	line	418
 12757                           ;my_i2c.c: 418: ic_ptr->status = 0x5;
 12758  0003E2  EE20 F00D          	lfsr	2,0Dh
 12759  0003E6  5048               	movf	((c:_ic_ptr)),c,w
 12760  0003E8  26D9               	addwf	fsr2l
 12761  0003EA  5049               	movf	((c:_ic_ptr+1)),c,w
 12762  0003EC  22DA               	addwfc	fsr2h
 12763  0003EE  0E05               	movlw	low(05h)
 12764  0003F0  6EDF               	movwf	indf2
 12765  0003F2  D008               	goto	i2l19580
 12766                           	line	419
 12767                           	
 12768  0003F4                     i2l7438:; BSR set to: 0
 12769                           
 12770                           	line	420
 12771                           ;my_i2c.c: 419: }
 12772                           ;my_i2c.c: 420: } else {
 12773  0003F4  D007               	goto	i2l19580
 12774                           	
 12775  0003F6                     i2l7436:; BSR set to: 0
 12776                           
 12777                           	line	421
 12778                           	
 12779  0003F6                     i2l19578:; BSR set to: 0
 12780                           
 12781                           ;my_i2c.c: 421: msg_ready = 1;
 12782  0003F6  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12783  0003F8  0E01               	movlw	low(01h)
 12784  0003FA  0100               	movlb	0	; () banked
 12785  0003FC  0100               	movlb	0	; () banked
 12786  0003FE  6FA9               	movwf	((i2c_slave_int_handler@msg_ready))&0ffh
 12787  000400  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 12788  000402  D000               	goto	i2l19580
 12789                           	line	422
 12790                           	
 12791  000404                     i2l7439:; BSR set to: 0
 12792                           
 12793                           	line	423
 12794                           	
 12795  000404                     i2l19580:; BSR set to: 0
 12796                           
 12797                           ;my_i2c.c: 422: }
 12798                           ;my_i2c.c: 423: ic_ptr->status = 0x5;
 12799  000404  EE20 F00D          	lfsr	2,0Dh
 12800  000408  5048               	movf	((c:_ic_ptr)),c,w
 12801  00040A  26D9               	addwf	fsr2l
 12802  00040C  5049               	movf	((c:_ic_ptr+1)),c,w
 12803  00040E  22DA               	addwfc	fsr2h
 12804  000410  0E05               	movlw	low(05h)
 12805  000412  6EDF               	movwf	indf2
 12806                           	line	424
 12807                           ;my_i2c.c: 424: } else if (data_read) {
 12808  000414  D07D               	goto	i2l7414
 12809                           	
 12810  000416                     i2l7435:; BSR set to: 0
 12811                           
 12812                           	
 12813  000416                     i2l19582:; BSR set to: 0
 12814                           
 12815  000416  0100               	movlb	0	; () banked
 12816  000418  0100               	movlb	0	; () banked
 12817  00041A  51AA               	movf	((i2c_slave_int_handler@data_read))&0ffh,w
 12818  00041C  B4D8               	btfsc	status,2
 12819  00041E  D001               	goto	i2u236_41
 12820  000420  D001               	goto	i2u236_40
 12821  000422                     i2u236_41:
 12822  000422  D076               	goto	i2l7414
 12823  000424                     i2u236_40:
 12824                           	line	425
 12825                           	
 12826  000424                     i2l19584:; BSR set to: 0
 12827                           
 12828                           ;my_i2c.c: 425: ic_ptr->event_count++;
 12829  000424  EE20 F00C          	lfsr	2,0Ch
 12830  000428  5048               	movf	((c:_ic_ptr)),c,w
 12831  00042A  26D9               	addwf	fsr2l
 12832  00042C  5049               	movf	((c:_ic_ptr+1)),c,w
 12833  00042E  22DA               	addwfc	fsr2h
 12834  000430  2ADF               	incf	indf2
 12835                           
 12836                           	line	426
 12837                           	
 12838  000432                     i2l19586:; BSR set to: 0
 12839                           
 12840                           ;my_i2c.c: 426: if (SSPSTATbits.D_A == 1) {
 12841                           	
 12842  000432  AAC7               	btfss	((c:4039)),c,5	;volatile
 12843  000434  D001               	goto	i2u237_41
 12844  000436  D001               	goto	i2u237_40
 12845  000438                     i2u237_41:
 12846  000438  D01B               	goto	i2l7442
 12847  00043A                     i2u237_40:
 12848                           	line	427
 12849                           	
 12850  00043A                     i2l19588:; BSR set to: 0
 12851                           
 12852                           ;my_i2c.c: 427: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
 12853  00043A  EE20 F00A          	lfsr	2,0Ah
 12854  00043E  5048               	movf	((c:_ic_ptr)),c,w
 12855  000440  26D9               	addwf	fsr2l
 12856  000442  5049               	movf	((c:_ic_ptr+1)),c,w
 12857  000444  22DA               	addwfc	fsr2h
 12858  000446  50DF               	movf	indf2,w
 12859  000448  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12860  00044A  5040               	movf	((??_i2c_slave_int_handler+0+0)),c,w
 12861  00044C  0D01               	mullw	01h
 12862  00044E  50F3               	movf	(prodl),c,w
 12863  000450  2448               	addwf	((c:_ic_ptr)),c,w
 12864  000452  6ED9               	movwf	c:fsr2l
 12865  000454  50F4               	movf	(prodh),c,w
 12866  000456  2049               	addwfc	((c:_ic_ptr+1)),c,w
 12867  000458  6EDA               	movwf	1+c:fsr2l
 12868  00045A  0100               	movlb	0	; () banked
 12869  00045C  C0A6  FFDF         	movff	(i2c_slave_int_handler@i2c_data),indf2
 12870                           
 12871                           	line	428
 12872                           	
 12873  000460                     i2l19590:; BSR set to: 0
 12874                           
 12875                           ;my_i2c.c: 428: ic_ptr->buflen++;
 12876  000460  EE20 F00A          	lfsr	2,0Ah
 12877  000464  5048               	movf	((c:_ic_ptr)),c,w
 12878  000466  26D9               	addwf	fsr2l
 12879  000468  5049               	movf	((c:_ic_ptr+1)),c,w
 12880  00046A  22DA               	addwfc	fsr2h
 12881  00046C  2ADF               	incf	indf2
 12882                           
 12883                           	line	429
 12884                           ;my_i2c.c: 429: } else {
 12885  00046E  D050               	goto	i2l7414
 12886                           	
 12887  000470                     i2l7442:; BSR set to: 0
 12888                           
 12889                           	line	430
 12890                           ;my_i2c.c: 430: if (SSPSTATbits.R_W == 1) {
 12891                           	
 12892  000470  A4C7               	btfss	((c:4039)),c,2	;volatile
 12893  000472  D001               	goto	i2u238_41
 12894  000474  D001               	goto	i2u238_40
 12895  000476                     i2u238_41:
 12896  000476  D01B               	goto	i2l19600
 12897  000478                     i2u238_40:
 12898                           	line	431
 12899                           	
 12900  000478                     i2l19592:; BSR set to: 0
 12901                           
 12902                           ;my_i2c.c: 431: ic_ptr->status = 0x8;
 12903  000478  EE20 F00D          	lfsr	2,0Dh
 12904  00047C  5048               	movf	((c:_ic_ptr)),c,w
 12905  00047E  26D9               	addwf	fsr2l
 12906  000480  5049               	movf	((c:_ic_ptr+1)),c,w
 12907  000482  22DA               	addwfc	fsr2h
 12908  000484  0E08               	movlw	low(08h)
 12909  000486  6EDF               	movwf	indf2
 12910                           	line	432
 12911                           	
 12912  000488                     i2l19594:; BSR set to: 0
 12913                           
 12914                           ;my_i2c.c: 432: msg_ready = 1;
 12915  000488  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12916  00048A  0E01               	movlw	low(01h)
 12917  00048C  0100               	movlb	0	; () banked
 12918  00048E  0100               	movlb	0	; () banked
 12919  000490  6FA9               	movwf	((i2c_slave_int_handler@msg_ready))&0ffh
 12920  000492  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 12921                           	line	433
 12922                           	
 12923  000494                     i2l19596:; BSR set to: 0
 12924                           
 12925                           ;my_i2c.c: 433: msg_to_send = 1;
 12926  000494  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12927  000496  0E01               	movlw	low(01h)
 12928  000498  0100               	movlb	0	; () banked
 12929  00049A  0100               	movlb	0	; () banked
 12930  00049C  6FA8               	movwf	((i2c_slave_int_handler@msg_to_send))&0ffh
 12931  00049E  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 12932                           	line	435
 12933                           	
 12934  0004A0                     i2l19598:; BSR set to: 0
 12935                           
 12936                           ;my_i2c.c: 435: data_read = 0;
 12937  0004A0  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 12938  0004A2  0E00               	movlw	low(0)
 12939  0004A4  0100               	movlb	0	; () banked
 12940  0004A6  0100               	movlb	0	; () banked
 12941  0004A8  6FAA               	movwf	((i2c_slave_int_handler@data_read))&0ffh
 12942  0004AA  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 12943                           	line	436
 12944                           ;my_i2c.c: 436: } else {
 12945  0004AC  D031               	goto	i2l7414
 12946                           	
 12947  0004AE                     i2l7444:; BSR set to: 0
 12948                           
 12949                           	line	437
 12950                           	
 12951  0004AE                     i2l19600:; BSR set to: 0
 12952                           
 12953                           ;my_i2c.c: 437: ic_ptr->error_count++;
 12954  0004AE  EE20 F00F          	lfsr	2,0Fh
 12955  0004B2  5048               	movf	((c:_ic_ptr)),c,w
 12956  0004B4  26D9               	addwf	fsr2l
 12957  0004B6  5049               	movf	((c:_ic_ptr+1)),c,w
 12958  0004B8  22DA               	addwfc	fsr2h
 12959  0004BA  2ADF               	incf	indf2
 12960                           
 12961                           	line	438
 12962                           ;my_i2c.c: 438: ic_ptr->error_code = 0x6;
 12963  0004BC  EE20 F00E          	lfsr	2,0Eh
 12964  0004C0  5048               	movf	((c:_ic_ptr)),c,w
 12965  0004C2  26D9               	addwf	fsr2l
 12966  0004C4  5049               	movf	((c:_ic_ptr+1)),c,w
 12967  0004C6  22DA               	addwfc	fsr2h
 12968  0004C8  0E06               	movlw	low(06h)
 12969  0004CA  6EDF               	movwf	indf2
 12970                           	line	439
 12971                           ;my_i2c.c: 439: ic_ptr->status = 0x5;
 12972  0004CC  EE20 F00D          	lfsr	2,0Dh
 12973  0004D0  5048               	movf	((c:_ic_ptr)),c,w
 12974  0004D2  26D9               	addwf	fsr2l
 12975  0004D4  5049               	movf	((c:_ic_ptr+1)),c,w
 12976  0004D6  22DA               	addwfc	fsr2h
 12977  0004D8  0E05               	movlw	low(05h)
 12978  0004DA  6EDF               	movwf	indf2
 12979  0004DC  D019               	goto	i2l7414
 12980                           	line	440
 12981                           	
 12982  0004DE                     i2l7445:; BSR set to: 0
 12983                           
 12984  0004DE  D018               	goto	i2l7414
 12985                           	line	441
 12986                           	
 12987  0004E0                     i2l7443:; BSR set to: 0
 12988                           
 12989  0004E0  D017               	goto	i2l7414
 12990                           	line	442
 12991                           	
 12992  0004E2                     i2l7441:; BSR set to: 0
 12993                           
 12994  0004E2  D016               	goto	i2l7414
 12995                           	line	443
 12996                           	
 12997  0004E4                     i2l7440:; BSR set to: 0
 12998                           
 12999                           ;my_i2c.c: 440: }
 13000                           ;my_i2c.c: 441: }
 13001                           ;my_i2c.c: 442: }
 13002                           ;my_i2c.c: 443: break;
 13003  0004E4  D015               	goto	i2l7414
 13004                           	line	445
 13005                           	
 13006  0004E6                     i2l19602:; BSR set to: 0
 13007                           
 13008                           ;my_i2c.c: 444: }
 13009                           ;my_i2c.c: 445: }
 13010  0004E6  D014               	goto	i2l7414
 13011                           	line	343
 13012                           	
 13013  0004E8                     i2l7415:; BSR set to: 0
 13014                           
 13015                           	
 13016  0004E8                     i2l19604:; BSR set to: 0
 13017                           
 13018  0004E8  EE20 F00D          	lfsr	2,0Dh
 13019  0004EC  5048               	movf	((c:_ic_ptr)),c,w
 13020  0004EE  26D9               	addwf	fsr2l
 13021  0004F0  5049               	movf	((c:_ic_ptr+1)),c,w
 13022  0004F2  22DA               	addwfc	fsr2h
 13023  0004F4  50DF               	movf	indf2,w
 13024                           	; Switch size 1, requested type "space"
 13025                           ; Number of cases is 4, Range of values is 5 to 8
 13026                           ; switch strategies available:
 13027                           ; Name         Instructions Cycles
 13028                           ; simple_byte           13     7 (average)
 13029                           ;	Chosen strategy is simple_byte
 13030                           
 13031  0004F6  0A05               	xorlw	5^0	; case 5
 13032  0004F8  B4D8               	skipnz
 13033  0004FA  D643               	goto	i2l7416
 13034  0004FC  0A03               	xorlw	6^5	; case 6
 13035  0004FE  B4D8               	skipnz
 13036  000500  D662               	goto	i2l7420
 13037  000502  0A01               	xorlw	7^6	; case 7
 13038  000504  B4D8               	skipnz
 13039  000506  D727               	goto	i2l7434
 13040  000508  0A0F               	xorlw	8^7	; case 8
 13041  00050A  B4D8               	skipnz
 13042  00050C  D6E2               	goto	i2l19554
 13043  00050E  D000               	goto	i2l7414
 13044                           
 13045                           	line	445
 13046                           	
 13047  000510                     i2l7419:; BSR set to: 0
 13048                           
 13049                           	line	446
 13050                           	
 13051  000510                     i2l7414:
 13052                           	line	449
 13053                           ;my_i2c.c: 446: }
 13054                           ;my_i2c.c: 449: if (data_read || data_written) {
 13055  000510  0100               	movlb	0	; () banked
 13056  000512  0100               	movlb	0	; () banked
 13057  000514  67AA               	tstfsz	((i2c_slave_int_handler@data_read))&0ffh
 13058  000516  D001               	goto	i2u239_41
 13059  000518  D001               	goto	i2u239_40
 13060  00051A                     i2u239_41:
 13061  00051A  D007               	goto	i2l7448
 13062  00051C                     i2u239_40:
 13063                           	
 13064  00051C                     i2l19606:; BSR set to: 0
 13065                           
 13066  00051C  0100               	movlb	0	; () banked
 13067  00051E  0100               	movlb	0	; () banked
 13068  000520  51A2               	movf	((i2c_slave_int_handler@data_written))&0ffh,w
 13069  000522  B4D8               	btfsc	status,2
 13070  000524  D001               	goto	i2u240_41
 13071  000526  D001               	goto	i2u240_40
 13072  000528                     i2u240_41:
 13073  000528  D007               	goto	i2l19610
 13074  00052A                     i2u240_40:
 13075                           	
 13076  00052A                     i2l7448:; BSR set to: 0
 13077                           
 13078                           	line	451
 13079                           ;my_i2c.c: 451: if (SSPCON1bits.CKP == 0) {
 13080                           	
 13081  00052A  B8C6               	btfsc	((c:4038)),c,4	;volatile
 13082  00052C  D001               	goto	i2u241_41
 13083  00052E  D001               	goto	i2u241_40
 13084  000530                     i2u241_41:
 13085  000530  D003               	goto	i2l19610
 13086  000532                     i2u241_40:
 13087                           	line	452
 13088                           	
 13089  000532                     i2l19608:; BSR set to: 0
 13090                           
 13091                           ;my_i2c.c: 452: SSPCON1bits.CKP = 1;
 13092  000532  88C6               	bsf	((c:4038)),c,4	;volatile
 13093  000534  D001               	goto	i2l19610
 13094                           	line	453
 13095                           	
 13096  000536                     i2l7449:; BSR set to: 0
 13097                           
 13098  000536  D000               	goto	i2l19610
 13099                           	line	454
 13100                           	
 13101  000538                     i2l7446:; BSR set to: 0
 13102                           
 13103                           	line	457
 13104                           	
 13105  000538                     i2l19610:; BSR set to: 0
 13106                           
 13107                           ;my_i2c.c: 453: }
 13108                           ;my_i2c.c: 454: }
 13109                           ;my_i2c.c: 457: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
 13110  000538  EE20 F00A          	lfsr	2,0Ah
 13111  00053C  5048               	movf	((c:_ic_ptr)),c,w
 13112  00053E  26D9               	addwf	fsr2l
 13113  000540  5049               	movf	((c:_ic_ptr+1)),c,w
 13114  000542  22DA               	addwfc	fsr2h
 13115  000544  0E08               	movlw	(09h-1)
 13116  000546  64DF               	cpfsgt	indf2
 13117  000548  D001               	goto	i2u242_41
 13118  00054A  D001               	goto	i2u242_40
 13119  00054C                     i2u242_41:
 13120  00054C  D01E               	goto	i2l19616
 13121  00054E                     i2u242_40:
 13122                           	
 13123  00054E                     i2l19612:; BSR set to: 0
 13124                           
 13125  00054E  0100               	movlb	0	; () banked
 13126  000550  0100               	movlb	0	; () banked
 13127  000552  67A9               	tstfsz	((i2c_slave_int_handler@msg_ready))&0ffh
 13128  000554  D001               	goto	i2u243_41
 13129  000556  D001               	goto	i2u243_40
 13130  000558                     i2u243_41:
 13131  000558  D018               	goto	i2l19616
 13132  00055A                     i2u243_40:
 13133                           	line	458
 13134                           	
 13135  00055A                     i2l19614:; BSR set to: 0
 13136                           
 13137                           ;my_i2c.c: 458: ic_ptr->status = 0x5;
 13138  00055A  EE20 F00D          	lfsr	2,0Dh
 13139  00055E  5048               	movf	((c:_ic_ptr)),c,w
 13140  000560  26D9               	addwf	fsr2l
 13141  000562  5049               	movf	((c:_ic_ptr+1)),c,w
 13142  000564  22DA               	addwfc	fsr2h
 13143  000566  0E05               	movlw	low(05h)
 13144  000568  6EDF               	movwf	indf2
 13145                           	line	459
 13146                           ;my_i2c.c: 459: ic_ptr->error_count++;
 13147  00056A  EE20 F00F          	lfsr	2,0Fh
 13148  00056E  5048               	movf	((c:_ic_ptr)),c,w
 13149  000570  26D9               	addwf	fsr2l
 13150  000572  5049               	movf	((c:_ic_ptr+1)),c,w
 13151  000574  22DA               	addwfc	fsr2h
 13152  000576  2ADF               	incf	indf2
 13153                           
 13154                           	line	460
 13155                           ;my_i2c.c: 460: ic_ptr->error_code = 0x7;
 13156  000578  EE20 F00E          	lfsr	2,0Eh
 13157  00057C  5048               	movf	((c:_ic_ptr)),c,w
 13158  00057E  26D9               	addwf	fsr2l
 13159  000580  5049               	movf	((c:_ic_ptr+1)),c,w
 13160  000582  22DA               	addwfc	fsr2h
 13161  000584  0E07               	movlw	low(07h)
 13162  000586  6EDF               	movwf	indf2
 13163  000588  D000               	goto	i2l19616
 13164                           	line	461
 13165                           	
 13166  00058A                     i2l7450:; BSR set to: 0
 13167                           
 13168                           	line	463
 13169                           	
 13170  00058A                     i2l19616:; BSR set to: 0
 13171                           
 13172                           ;my_i2c.c: 461: }
 13173                           ;my_i2c.c: 463: if (msg_ready) {
 13174  00058A  0100               	movlb	0	; () banked
 13175  00058C  0100               	movlb	0	; () banked
 13176  00058E  51A9               	movf	((i2c_slave_int_handler@msg_ready))&0ffh,w
 13177  000590  B4D8               	btfsc	status,2
 13178  000592  D001               	goto	i2u244_41
 13179  000594  D001               	goto	i2u244_40
 13180  000596                     i2u244_41:
 13181  000596  D05F               	goto	i2l19632
 13182  000598                     i2u244_40:
 13183                           	line	467
 13184                           	
 13185  000598                     i2l19618:; BSR set to: 0
 13186                           
 13187                           ;my_i2c.c: 465: unsigned char data[10];
 13188                           ;my_i2c.c: 466: unsigned char msgtype;
 13189                           ;my_i2c.c: 467: int length = FromMainLow_recvmsg(10, &msgtype, (void *) data);
 13190  000598  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 13191  00059A  0E0A               	movlw	low(0Ah)
 13192  00059C  0100               	movlb	0	; () banked
 13193  00059E  0100               	movlb	0	; () banked
 13194  0005A0  6F8C               	movwf	((?_FromMainLow_recvmsg))&0ffh
 13195  0005A2  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 13196  0005A4  0100               	movlb	0	; () banked
 13197  0005A6  0E00               	movlw	high(i2c_slave_int_handler@msgtype)
 13198  0005A8  0100               	movlb	0	; () banked
 13199  0005AA  0100               	movlb	0	; () banked
 13200  0005AC  6F8E               	movwf	(1+(?_FromMainLow_recvmsg+01h))&0ffh
 13201  0005AE  0100               	movlb	0	; () banked
 13202  0005B0  0EA7               	movlw	low(i2c_slave_int_handler@msgtype)
 13203  0005B2  0100               	movlb	0	; () banked
 13204  0005B4  6F8D               	movwf	(0+(?_FromMainLow_recvmsg+01h))&0ffh
 13205  0005B6  0100               	movlb	0	; () banked
 13206  0005B8  0E00               	movlw	high(i2c_slave_int_handler@data)
 13207  0005BA  0100               	movlb	0	; () banked
 13208  0005BC  0100               	movlb	0	; () banked
 13209  0005BE  6F90               	movwf	(1+(?_FromMainLow_recvmsg+03h))&0ffh
 13210  0005C0  0100               	movlb	0	; () banked
 13211  0005C2  0E91               	movlw	low(i2c_slave_int_handler@data)
 13212  0005C4  0100               	movlb	0	; () banked
 13213  0005C6  6F8F               	movwf	(0+(?_FromMainLow_recvmsg+03h))&0ffh
 13214  0005C8  0100               	movlb	0	; () banked
 13215  0005CA  ECF1  F00F         	call	_FromMainLow_recvmsg	;wreg free
 13216  0005CE  0100               	movlb	0	; () banked
 13217  0005D0  0100               	movlb	0	; () banked
 13218  0005D2  6FA4               	movwf	((i2c_slave_int_handler@length))&0ffh
 13219  0005D4  0100               	movlb	0	; () banked
 13220  0005D6  6BA5               	clrf	((i2c_slave_int_handler@length+1))&0ffh
 13221  0005D8  0100               	movlb	0	; () banked
 13222  0005DA  BFA4               	btfsc	((i2c_slave_int_handler@length))&0ffh,7
 13223  0005DC  07A5               	decf	((i2c_slave_int_handler@length+1))&0ffh
 13224                           	line	468
 13225                           	
 13226  0005DE                     i2l19620:; BSR set to: 0
 13227                           
 13228                           ;my_i2c.c: 468: if(length > 0){
 13229  0005DE  0100               	movlb	0	; () banked
 13230  0005E0  0100               	movlb	0	; () banked
 13231  0005E2  51A5               	movf	((i2c_slave_int_handler@length+1))&0ffh,w
 13232  0005E4  0A80               	xorlw	80h
 13233  0005E6  0F80               	addlw	-((0)^80h)
 13234  0005E8  0E01               	movlw	01h
 13235  0005EA  B4D8               	btfsc	status,2
 13236  0005EC  5DA4               	subwf	((i2c_slave_int_handler@length))&0ffh,w
 13237  0005EE  A0D8               	btfss	status,0
 13238  0005F0  D001               	goto	i2u245_41
 13239  0005F2  D001               	goto	i2u245_40
 13240  0005F4                     i2u245_41:
 13241  0005F4  D00B               	goto	i2l19624
 13242  0005F6                     i2u245_40:
 13243                           	line	469
 13244                           	
 13245  0005F6                     i2l19622:; BSR set to: 0
 13246                           
 13247                           ;my_i2c.c: 469: start_i2c_slave_reply(length, data);
 13248  0005F6  C0A4  F034         	movff	(i2c_slave_int_handler@length),(c:?_start_i2c_slave_reply)
 13249  0005FA  0100               	movlb	0	; () banked
 13250  0005FC  0E00               	movlw	high(i2c_slave_int_handler@data)
 13251  0005FE  6E36               	movwf	(1+((c:?_start_i2c_slave_reply)+01h)),c
 13252  000600  0100               	movlb	0	; () banked
 13253  000602  0E91               	movlw	low(i2c_slave_int_handler@data)
 13254  000604  6E35               	movwf	(0+((c:?_start_i2c_slave_reply)+01h)),c
 13255  000606  EC1A  F00A         	call	_start_i2c_slave_reply	;wreg free
 13256                           	line	470
 13257                           ;my_i2c.c: 470: }
 13258  00060A  D070               	goto	i2l19640
 13259                           	line	471
 13260                           	
 13261  00060C                     i2l7452:
 13262                           	line	474
 13263                           	
 13264  00060C                     i2l19624:
 13265                           ;my_i2c.c: 471: else {
 13266                           ;my_i2c.c: 473: unsigned char empty[4];
 13267                           ;my_i2c.c: 474: empty[0] = 0x51;
 13268  00060C  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 13269  00060E  0E51               	movlw	low(051h)
 13270  000610  0100               	movlb	0	; () banked
 13271  000612  0100               	movlb	0	; () banked
 13272  000614  6F9B               	movwf	((i2c_slave_int_handler@empty))&0ffh
 13273  000616  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 13274                           	line	475
 13275                           	
 13276  000618                     i2l19626:; BSR set to: 0
 13277                           
 13278                           ;my_i2c.c: 475: empty[1] = emptyMsgCount;
 13279  000618  C0C5  F09C         	movff	(_emptyMsgCount),0+(i2c_slave_int_handler@empty+01h)
 13280                           	line	476
 13281                           ;my_i2c.c: 476: empty[2] = 0x0;
 13282  00061C  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 13283  00061E  0E00               	movlw	low(0)
 13284  000620  0100               	movlb	0	; () banked
 13285  000622  0100               	movlb	0	; () banked
 13286  000624  6F9D               	movwf	(0+(i2c_slave_int_handler@empty+02h))&0ffh
 13287  000626  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 13288                           	line	477
 13289                           ;my_i2c.c: 477: empty[3] = 0x0;
 13290  000628  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 13291  00062A  0E00               	movlw	low(0)
 13292  00062C  0100               	movlb	0	; () banked
 13293  00062E  0100               	movlb	0	; () banked
 13294  000630  6F9E               	movwf	(0+(i2c_slave_int_handler@empty+03h))&0ffh
 13295  000632  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 13296                           	line	478
 13297                           	
 13298  000634                     i2l19628:; BSR set to: 0
 13299                           
 13300                           ;my_i2c.c: 478: emptyMsgCount++;
 13301  000634  0100               	movlb	0	; () banked
 13302  000636  0100               	movlb	0	; () banked
 13303  000638  2BC5               	incf	((_emptyMsgCount))&0ffh
 13304                           	line	479
 13305                           	
 13306  00063A                     i2l19630:; BSR set to: 0
 13307                           
 13308                           ;my_i2c.c: 479: start_i2c_slave_reply(4,empty);
 13309  00063A  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 13310  00063C  0E04               	movlw	low(04h)
 13311  00063E  6E34               	movwf	((c:?_start_i2c_slave_reply)),c
 13312  000640  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 13313  000642  0100               	movlb	0	; () banked
 13314  000644  0E00               	movlw	high(i2c_slave_int_handler@empty)
 13315  000646  6E36               	movwf	(1+((c:?_start_i2c_slave_reply)+01h)),c
 13316  000648  0100               	movlb	0	; () banked
 13317  00064A  0E9B               	movlw	low(i2c_slave_int_handler@empty)
 13318  00064C  6E35               	movwf	(0+((c:?_start_i2c_slave_reply)+01h)),c
 13319  00064E  EC1A  F00A         	call	_start_i2c_slave_reply	;wreg free
 13320  000652  D04C               	goto	i2l19640
 13321                           	line	480
 13322                           	
 13323  000654                     i2l7453:
 13324                           	line	483
 13325                           ;my_i2c.c: 480: }
 13326                           ;my_i2c.c: 483: } else if (ic_ptr->error_count >= 1) {
 13327  000654  D04B               	goto	i2l19640
 13328                           	
 13329  000656                     i2l7451:
 13330                           	
 13331  000656                     i2l19632:
 13332  000656  EE20 F00F          	lfsr	2,0Fh
 13333  00065A  5048               	movf	((c:_ic_ptr)),c,w
 13334  00065C  26D9               	addwf	fsr2l
 13335  00065E  5049               	movf	((c:_ic_ptr+1)),c,w
 13336  000660  22DA               	addwfc	fsr2h
 13337  000662  50DF               	movf	indf2,w
 13338  000664  B4D8               	btfsc	status,2
 13339  000666  D001               	goto	i2u246_41
 13340  000668  D001               	goto	i2u246_40
 13341  00066A                     i2u246_41:
 13342  00066A  D040               	goto	i2l19640
 13343  00066C                     i2u246_40:
 13344                           	line	484
 13345                           	
 13346  00066C                     i2l19634:
 13347                           ;my_i2c.c: 484: error_buf[0] = ic_ptr->error_count;
 13348  00066C  EE20 F00F          	lfsr	2,0Fh
 13349  000670  5048               	movf	((c:_ic_ptr)),c,w
 13350  000672  26D9               	addwf	fsr2l
 13351  000674  5049               	movf	((c:_ic_ptr+1)),c,w
 13352  000676  22DA               	addwfc	fsr2h
 13353  000678  50DF               	movf	indf2,w
 13354  00067A  0100               	movlb	0	; () banked
 13355  00067C  0100               	movlb	0	; () banked
 13356  00067E  6F9F               	movwf	((i2c_slave_int_handler@error_buf))&0ffh
 13357                           	line	485
 13358                           ;my_i2c.c: 485: error_buf[1] = ic_ptr->error_code;
 13359  000680  EE20 F00E          	lfsr	2,0Eh
 13360  000684  5048               	movf	((c:_ic_ptr)),c,w
 13361  000686  26D9               	addwf	fsr2l
 13362  000688  5049               	movf	((c:_ic_ptr+1)),c,w
 13363  00068A  22DA               	addwfc	fsr2h
 13364  00068C  50DF               	movf	indf2,w
 13365  00068E  0100               	movlb	0	; () banked
 13366  000690  0100               	movlb	0	; () banked
 13367  000692  6FA0               	movwf	(0+(i2c_slave_int_handler@error_buf+01h))&0ffh
 13368                           	line	486
 13369                           ;my_i2c.c: 486: error_buf[2] = ic_ptr->event_count;
 13370  000694  EE20 F00C          	lfsr	2,0Ch
 13371  000698  5048               	movf	((c:_ic_ptr)),c,w
 13372  00069A  26D9               	addwf	fsr2l
 13373  00069C  5049               	movf	((c:_ic_ptr+1)),c,w
 13374  00069E  22DA               	addwfc	fsr2h
 13375  0006A0  50DF               	movf	indf2,w
 13376  0006A2  0100               	movlb	0	; () banked
 13377  0006A4  0100               	movlb	0	; () banked
 13378  0006A6  6FA1               	movwf	(0+(i2c_slave_int_handler@error_buf+02h))&0ffh
 13379                           	line	487
 13380                           	
 13381  0006A8                     i2l19636:; BSR set to: 0
 13382                           
 13383                           ;my_i2c.c: 487: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
 13384  0006A8  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 13385  0006AA  0E03               	movlw	low(03h)
 13386  0006AC  0100               	movlb	0	; () banked
 13387  0006AE  0100               	movlb	0	; () banked
 13388  0006B0  6F8B               	movwf	((?_ToMainHigh_sendmsg))&0ffh
 13389  0006B2  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 13390  0006B4  6E41               	movwf	(??_i2c_slave_int_handler+1+0)&0ffh,c
 13391  0006B6  0E29               	movlw	low(029h)
 13392  0006B8  0100               	movlb	0	; () banked
 13393  0006BA  0100               	movlb	0	; () banked
 13394  0006BC  6F8C               	movwf	(0+(?_ToMainHigh_sendmsg+01h))&0ffh
 13395  0006BE  5041               	movf	(??_i2c_slave_int_handler+1+0)&0ffh,c,w
 13396  0006C0  0100               	movlb	0	; () banked
 13397  0006C2  0E00               	movlw	high(i2c_slave_int_handler@error_buf)
 13398  0006C4  0100               	movlb	0	; () banked
 13399  0006C6  0100               	movlb	0	; () banked
 13400  0006C8  6F8E               	movwf	(1+(?_ToMainHigh_sendmsg+02h))&0ffh
 13401  0006CA  0100               	movlb	0	; () banked
 13402  0006CC  0E9F               	movlw	low(i2c_slave_int_handler@error_buf)
 13403  0006CE  0100               	movlb	0	; () banked
 13404  0006D0  6F8D               	movwf	(0+(?_ToMainHigh_sendmsg+02h))&0ffh
 13405  0006D2  0100               	movlb	0	; () banked
 13406  0006D4  EC1F  F010         	call	_ToMainHigh_sendmsg	;wreg free
 13407                           	line	488
 13408                           	
 13409  0006D8                     i2l19638:
 13410                           ;my_i2c.c: 488: ic_ptr->error_count = 0;
 13411  0006D8  EE20 F00F          	lfsr	2,0Fh
 13412  0006DC  5048               	movf	((c:_ic_ptr)),c,w
 13413  0006DE  26D9               	addwf	fsr2l
 13414  0006E0  5049               	movf	((c:_ic_ptr+1)),c,w
 13415  0006E2  22DA               	addwfc	fsr2h
 13416  0006E4  0E00               	movlw	low(0)
 13417  0006E6  6EDF               	movwf	indf2
 13418  0006E8  D001               	goto	i2l19640
 13419                           	line	489
 13420                           	
 13421  0006EA                     i2l7455:
 13422  0006EA  D000               	goto	i2l19640
 13423                           	line	490
 13424                           	
 13425  0006EC                     i2l7454:
 13426                           	
 13427  0006EC                     i2l19640:
 13428                           ;my_i2c.c: 489: }
 13429                           ;my_i2c.c: 490: if (msg_to_send) {
 13430  0006EC  0100               	movlb	0	; () banked
 13431  0006EE  0100               	movlb	0	; () banked
 13432  0006F0  51A8               	movf	((i2c_slave_int_handler@msg_to_send))&0ffh,w
 13433  0006F2  B4D8               	btfsc	status,2
 13434  0006F4  D001               	goto	i2u247_41
 13435  0006F6  D001               	goto	i2u247_40
 13436  0006F8                     i2u247_41:
 13437  0006F8  D007               	goto	i2l7457
 13438  0006FA                     i2u247_40:
 13439                           	line	497
 13440                           	
 13441  0006FA                     i2l19642:; BSR set to: 0
 13442                           
 13443                           ;my_i2c.c: 497: msg_to_send = 0;
 13444  0006FA  6E40               	movwf	(??_i2c_slave_int_handler+0+0)&0ffh,c
 13445  0006FC  0E00               	movlw	low(0)
 13446  0006FE  0100               	movlb	0	; () banked
 13447  000700  0100               	movlb	0	; () banked
 13448  000702  6FA8               	movwf	((i2c_slave_int_handler@msg_to_send))&0ffh
 13449  000704  5040               	movf	(??_i2c_slave_int_handler+0+0)&0ffh,c,w
 13450  000706  D000               	goto	i2l7457
 13451                           	line	498
 13452                           	
 13453  000708                     i2l7456:; BSR set to: 0
 13454                           
 13455                           	line	499
 13456                           	
 13457  000708                     i2l7457:; BSR set to: 0
 13458                           
 13459  000708  0012               	return
 13460                           	opt stack 0
 13461                           GLOBAL	__end_of_i2c_slave_int_handler
 13462  00070A                     	__end_of_i2c_slave_int_handler:
 13463                           	signat	_i2c_slave_int_handler,88
 13464                           	global	_FromMainLow_recvmsg
 13465                           
 13466 ;; *************** function _FromMainLow_recvmsg *****************
 13467 ;; Defined at:
 13468 ;;		line 159 in file "../src/messages.c"
 13469 ;; Parameters:    Size  Location     Type
 13470 ;;  maxlength       1   12[BANK0 ] unsigned char 
 13471 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
 13472 ;;		 -> i2c_slave_int_handler@msgtype(1), 
 13473 ;;  data            2   15[BANK0 ] PTR void 
 13474 ;;		 -> i2c_slave_int_handler@data(10), 
 13475 ;; Auto vars:     Size  Location     Type
 13476 ;;		None
 13477 ;; Return value:  Size  Location     Type
 13478 ;;                  1    wreg      char 
 13479 ;; Registers used:
 13480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13481 ;; Tracked objects:
 13482 ;;		On entry : 0/0
 13483 ;;		On exit  : 0/0
 13484 ;;		Unchanged: 0/0
 13485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13486 ;;      Params:         0       5       0       0       0
 13487 ;;      Locals:         0       0       0       0       0
 13488 ;;      Temps:          0       0       0       0       0
 13489 ;;      Totals:         0       5       0       0       0
 13490 ;;Total ram usage:        5 bytes
 13491 ;; Hardware stack levels used:    1
 13492 ;; Hardware stack levels required when called:    2
 13493 ;; This function calls:
 13494 ;;		i2_recv_msg
 13495 ;; This function is called by:
 13496 ;;		_i2c_slave_int_handler
 13497 ;; This function uses a non-reentrant model
 13498 ;;
 13499                           psect	text46,class=CODE,space=0,reloc=2
 13500                           global __ptext46
 13501  001FE2                     __ptext46:
 13502                           psect	text46
 13503                           	file	"../src/messages.c"
 13504                           	line	159
 13505                           	global	__size_of_FromMainLow_recvmsg
 13506  0000                     	__size_of_FromMainLow_recvmsg	equ	__end_of_FromMainLow_recvmsg-_FromMainLow_recvmsg
 13507                           	
 13508  001FE2                     _FromMainLow_recvmsg:; BSR set to: 0
 13509                           
 13510                           	opt	stack 16
 13511                           	line	165
 13512                           	
 13513  001FE2                     i2l19484:
 13514                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
 13515  001FE2  0101               	movlb	1	; () banked
 13516  001FE4  0E01               	movlw	high(_FromMainLow_MQ)
 13517  001FE6  0100               	movlb	0	; () banked
 13518  001FE8  0100               	movlb	0	; () banked
 13519  001FEA  6F81               	movwf	((?i2_recv_msg+1))&0ffh
 13520  001FEC  0101               	movlb	1	; () banked
 13521  001FEE  0E00               	movlw	low(_FromMainLow_MQ)
 13522  001FF0  0100               	movlb	0	; () banked
 13523  001FF2  6F80               	movwf	((?i2_recv_msg))&0ffh
 13524  001FF4  C08C  F082         	movff	(FromMainLow_recvmsg@maxlength),0+(?i2_recv_msg+02h)
 13525  001FF8  C08D  F083         	movff	(FromMainLow_recvmsg@msgtype),0+(?i2_recv_msg+03h)
 13526  001FFC  C08E  F084         	movff	(FromMainLow_recvmsg@msgtype+1),1+(?i2_recv_msg+03h)
 13527  002000  C08F  F085         	movff	(FromMainLow_recvmsg@data),0+(?i2_recv_msg+05h)
 13528  002004  C090  F086         	movff	(FromMainLow_recvmsg@data+1),1+(?i2_recv_msg+05h)
 13529  002008  0100               	movlb	0	; () banked
 13530  00200A  EC17  F008         	call	i2_recv_msg	;wreg free
 13531  00200E  D000               	goto	i2l5507
 13532                           	
 13533  002010                     i2l19486:
 13534                           	line	166
 13535                           	
 13536  002010                     i2l5507:
 13537  002010  0012               	return
 13538                           	opt stack 0
 13539                           GLOBAL	__end_of_FromMainLow_recvmsg
 13540  002012                     	__end_of_FromMainLow_recvmsg:
 13541                           	signat	_FromMainLow_recvmsg,12409
 13542                           	global	_start_i2c_slave_reply
 13543                           
 13544 ;; *************** function _start_i2c_slave_reply *****************
 13545 ;; Defined at:
 13546 ;;		line 127 in file "../src/my_i2c.c"
 13547 ;; Parameters:    Size  Location     Type
 13548 ;;  length          1   51[COMRAM] unsigned char 
 13549 ;;  msg             2   52[COMRAM] PTR unsigned char 
 13550 ;;		 -> i2c_slave_int_handler@empty(4), i2c_slave_int_handler@data(10), 
 13551 ;; Auto vars:     Size  Location     Type
 13552 ;;		None
 13553 ;; Return value:  Size  Location     Type
 13554 ;;		None               void
 13555 ;; Registers used:
 13556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13557 ;; Tracked objects:
 13558 ;;		On entry : 0/0
 13559 ;;		On exit  : 0/0
 13560 ;;		Unchanged: 0/0
 13561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13562 ;;      Params:         3       0       0       0       0
 13563 ;;      Locals:         0       0       0       0       0
 13564 ;;      Temps:          2       0       0       0       0
 13565 ;;      Totals:         5       0       0       0       0
 13566 ;;Total ram usage:        5 bytes
 13567 ;; Hardware stack levels used:    1
 13568 ;; This function calls:
 13569 ;;		Nothing
 13570 ;; This function is called by:
 13571 ;;		_i2c_slave_int_handler
 13572 ;; This function uses a non-reentrant model
 13573 ;;
 13574                           psect	text47,class=CODE,space=0,reloc=2
 13575                           global __ptext47
 13576  001434                     __ptext47:
 13577                           psect	text47
 13578                           	file	"../src/my_i2c.c"
 13579                           	line	127
 13580                           	global	__size_of_start_i2c_slave_reply
 13581  0000                     	__size_of_start_i2c_slave_reply	equ	__end_of_start_i2c_slave_reply-_start_i2c_slave_rep
                                 ly
 13582                           	
 13583  001434                     _start_i2c_slave_reply:
 13584                           	opt	stack 18
 13585                           	line	129
 13586                           	
 13587  001434                     i2l18786:
 13588                           ;my_i2c.c: 129: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbufle
                                 n++) {
 13589  001434  EE20 F01A          	lfsr	2,01Ah
 13590  001438  5048               	movf	((c:_ic_ptr)),c,w
 13591  00143A  26D9               	addwf	fsr2l
 13592  00143C  5049               	movf	((c:_ic_ptr+1)),c,w
 13593  00143E  22DA               	addwfc	fsr2h
 13594  001440  0E00               	movlw	low(0)
 13595  001442  6EDF               	movwf	indf2
 13596  001444  D02E               	goto	i2l18792
 13597                           	
 13598  001446                     i2l7359:
 13599                           	line	130
 13600                           	
 13601  001446                     i2l18788:
 13602                           ;my_i2c.c: 130: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
 13603  001446  EE20 F01A          	lfsr	2,01Ah
 13604  00144A  5048               	movf	((c:_ic_ptr)),c,w
 13605  00144C  26D9               	addwf	fsr2l
 13606  00144E  5049               	movf	((c:_ic_ptr+1)),c,w
 13607  001450  22DA               	addwfc	fsr2h
 13608  001452  50DF               	movf	indf2,w
 13609  001454  6E37               	movwf	(??_start_i2c_slave_reply+0+0)&0ffh,c
 13610  001456  5037               	movf	((??_start_i2c_slave_reply+0+0)),c,w
 13611  001458  0D01               	mullw	01h
 13612  00145A  50F3               	movf	(prodl),c,w
 13613  00145C  2435               	addwf	((c:start_i2c_slave_reply@msg)),c,w
 13614  00145E  6ED9               	movwf	c:fsr2l
 13615  001460  50F4               	movf	(prodh),c,w
 13616  001462  2036               	addwfc	((c:start_i2c_slave_reply@msg+1)),c,w
 13617  001464  6EDA               	movwf	1+c:fsr2l
 13618  001466  EE10 F01A          	lfsr	1,01Ah
 13619  00146A  5048               	movf	((c:_ic_ptr)),c,w
 13620  00146C  26E1               	addwf	fsr1l
 13621  00146E  5049               	movf	((c:_ic_ptr+1)),c,w
 13622  001470  22E2               	addwfc	fsr1h
 13623  001472  50E7               	movf	indf1,w
 13624  001474  6E38               	movwf	(??_start_i2c_slave_reply+1+0)&0ffh,c
 13625  001476  5038               	movf	((??_start_i2c_slave_reply+1+0)),c,w
 13626  001478  0D01               	mullw	01h
 13627  00147A  0E10               	movlw	010h
 13628  00147C  26F3               	addwf	(prodl),c
 13629  00147E  0E00               	movlw	0
 13630  001480  22F4               	addwfc	(prodh),c
 13631  001482  50F3               	movf	(prodl),c,w
 13632  001484  2448               	addwf	((c:_ic_ptr)),c,w
 13633  001486  6EE1               	movwf	c:fsr1l
 13634  001488  50F4               	movf	(prodh),c,w
 13635  00148A  2049               	addwfc	((c:_ic_ptr+1)),c,w
 13636  00148C  6EE2               	movwf	1+c:fsr1l
 13637  00148E  CFDF FFE7          	movff	indf2,indf1
 13638                           	line	129
 13639                           	
 13640  001492                     i2l18790:
 13641  001492  EE20 F01A          	lfsr	2,01Ah
 13642  001496  5048               	movf	((c:_ic_ptr)),c,w
 13643  001498  26D9               	addwf	fsr2l
 13644  00149A  5049               	movf	((c:_ic_ptr+1)),c,w
 13645  00149C  22DA               	addwfc	fsr2h
 13646  00149E  2ADF               	incf	indf2
 13647                           
 13648  0014A0  D000               	goto	i2l18792
 13649                           	
 13650  0014A2                     i2l7358:
 13651                           	
 13652  0014A2                     i2l18792:
 13653  0014A2  EE20 F01A          	lfsr	2,01Ah
 13654  0014A6  5048               	movf	((c:_ic_ptr)),c,w
 13655  0014A8  26D9               	addwf	fsr2l
 13656  0014AA  5049               	movf	((c:_ic_ptr+1)),c,w
 13657  0014AC  22DA               	addwfc	fsr2h
 13658  0014AE  50DF               	movf	indf2,w
 13659  0014B0  6E37               	movwf	(??_start_i2c_slave_reply+0+0)&0ffh,c
 13660  0014B2  5034               	movf	((c:start_i2c_slave_reply@length)),c,w
 13661  0014B4  5C37               	subwf	((??_start_i2c_slave_reply+0+0)),c,w
 13662  0014B6  A0D8               	btfss	status,0
 13663  0014B8  D001               	goto	i2u152_41
 13664  0014BA  D001               	goto	i2u152_40
 13665  0014BC                     i2u152_41:
 13666  0014BC  D7C4               	goto	i2l18788
 13667  0014BE                     i2u152_40:
 13668  0014BE  D000               	goto	i2l18794
 13669                           	
 13670  0014C0                     i2l7360:
 13671                           	line	132
 13672                           	
 13673  0014C0                     i2l18794:
 13674                           ;my_i2c.c: 131: }
 13675                           ;my_i2c.c: 132: ic_ptr->outbuflen = length;
 13676  0014C0  EE20 F01A          	lfsr	2,01Ah
 13677  0014C4  5048               	movf	((c:_ic_ptr)),c,w
 13678  0014C6  26D9               	addwf	fsr2l
 13679  0014C8  5049               	movf	((c:_ic_ptr+1)),c,w
 13680  0014CA  22DA               	addwfc	fsr2h
 13681  0014CC  C034  FFDF         	movff	(c:start_i2c_slave_reply@length),indf2
 13682                           
 13683                           	line	133
 13684                           ;my_i2c.c: 133: ic_ptr->outbufind = 1;
 13685  0014D0  EE20 F01B          	lfsr	2,01Bh
 13686  0014D4  5048               	movf	((c:_ic_ptr)),c,w
 13687  0014D6  26D9               	addwf	fsr2l
 13688  0014D8  5049               	movf	((c:_ic_ptr+1)),c,w
 13689  0014DA  22DA               	addwfc	fsr2h
 13690  0014DC  0E01               	movlw	low(01h)
 13691  0014DE  6EDF               	movwf	indf2
 13692                           	line	136
 13693                           ;my_i2c.c: 136: SSPBUF = ic_ptr->outbuffer[0];
 13694  0014E0  EE20 F010          	lfsr	2,010h
 13695  0014E4  5048               	movf	((c:_ic_ptr)),c,w
 13696  0014E6  26D9               	addwf	fsr2l
 13697  0014E8  5049               	movf	((c:_ic_ptr+1)),c,w
 13698  0014EA  22DA               	addwfc	fsr2h
 13699  0014EC  50DF               	movf	indf2,w
 13700  0014EE  6EC9               	movwf	((c:4041)),c	;volatile
 13701                           	line	139
 13702                           	
 13703  0014F0                     i2l18796:
 13704                           ;my_i2c.c: 139: SSPCON1bits.CKP = 1;
 13705  0014F0  88C6               	bsf	((c:4038)),c,4	;volatile
 13706                           	line	141
 13707                           	
 13708  0014F2                     i2l7361:
 13709  0014F2  0012               	return
 13710                           	opt stack 0
 13711                           GLOBAL	__end_of_start_i2c_slave_reply
 13712  0014F4                     	__end_of_start_i2c_slave_reply:
 13713                           	signat	_start_i2c_slave_reply,8312
 13714                           	global	_handle_start
 13715                           
 13716 ;; *************** function _handle_start *****************
 13717 ;; Defined at:
 13718 ;;		line 145 in file "../src/my_i2c.c"
 13719 ;; Parameters:    Size  Location     Type
 13720 ;;  data_read       1   51[COMRAM] unsigned char 
 13721 ;; Auto vars:     Size  Location     Type
 13722 ;;		None
 13723 ;; Return value:  Size  Location     Type
 13724 ;;		None               void
 13725 ;; Registers used:
 13726 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13727 ;; Tracked objects:
 13728 ;;		On entry : 0/0
 13729 ;;		On exit  : 0/0
 13730 ;;		Unchanged: 0/0
 13731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13732 ;;      Params:         1       0       0       0       0
 13733 ;;      Locals:         0       0       0       0       0
 13734 ;;      Temps:          0       0       0       0       0
 13735 ;;      Totals:         1       0       0       0       0
 13736 ;;Total ram usage:        1 bytes
 13737 ;; Hardware stack levels used:    1
 13738 ;; This function calls:
 13739 ;;		Nothing
 13740 ;; This function is called by:
 13741 ;;		_i2c_slave_int_handler
 13742 ;; This function uses a non-reentrant model
 13743 ;;
 13744                           psect	text48,class=CODE,space=0,reloc=2
 13745                           global __ptext48
 13746  0017C0                     __ptext48:
 13747                           psect	text48
 13748                           	file	"../src/my_i2c.c"
 13749                           	line	145
 13750                           	global	__size_of_handle_start
 13751  0000                     	__size_of_handle_start	equ	__end_of_handle_start-_handle_start
 13752                           	
 13753  0017C0                     _handle_start:
 13754                           	opt	stack 18
 13755                           	line	146
 13756                           	
 13757  0017C0                     i2l18798:
 13758                           ;my_i2c.c: 146: ic_ptr->event_count = 1;
 13759  0017C0  EE20 F00C          	lfsr	2,0Ch
 13760  0017C4  5048               	movf	((c:_ic_ptr)),c,w
 13761  0017C6  26D9               	addwf	fsr2l
 13762  0017C8  5049               	movf	((c:_ic_ptr+1)),c,w
 13763  0017CA  22DA               	addwfc	fsr2h
 13764  0017CC  0E01               	movlw	low(01h)
 13765  0017CE  6EDF               	movwf	indf2
 13766                           	line	147
 13767                           ;my_i2c.c: 147: ic_ptr->buflen = 0;
 13768  0017D0  EE20 F00A          	lfsr	2,0Ah
 13769  0017D4  5048               	movf	((c:_ic_ptr)),c,w
 13770  0017D6  26D9               	addwf	fsr2l
 13771  0017D8  5049               	movf	((c:_ic_ptr+1)),c,w
 13772  0017DA  22DA               	addwfc	fsr2h
 13773  0017DC  0E00               	movlw	low(0)
 13774  0017DE  6EDF               	movwf	indf2
 13775                           	line	149
 13776                           	
 13777  0017E0                     i2l18800:
 13778                           ;my_i2c.c: 149: if (data_read) {
 13779  0017E0  5034               	movf	((c:handle_start@data_read)),c,w
 13780  0017E2  B4D8               	btfsc	status,2
 13781  0017E4  D001               	goto	i2u153_41
 13782  0017E6  D001               	goto	i2u153_40
 13783  0017E8                     i2u153_41:
 13784  0017E8  D034               	goto	i2l18810
 13785  0017EA                     i2u153_40:
 13786                           	line	150
 13787                           	
 13788  0017EA                     i2l18802:
 13789                           ;my_i2c.c: 150: if (SSPSTATbits.D_A == 1) {
 13790                           	
 13791  0017EA  AAC7               	btfss	((c:4039)),c,5	;volatile
 13792  0017EC  D001               	goto	i2u154_41
 13793  0017EE  D001               	goto	i2u154_40
 13794  0017F0                     i2u154_41:
 13795  0017F0  D018               	goto	i2l7365
 13796  0017F2                     i2u154_40:
 13797                           	line	153
 13798                           	
 13799  0017F2                     i2l18804:
 13800                           ;my_i2c.c: 153: ic_ptr->status = 0x5;
 13801  0017F2  EE20 F00D          	lfsr	2,0Dh
 13802  0017F6  5048               	movf	((c:_ic_ptr)),c,w
 13803  0017F8  26D9               	addwf	fsr2l
 13804  0017FA  5049               	movf	((c:_ic_ptr+1)),c,w
 13805  0017FC  22DA               	addwfc	fsr2h
 13806  0017FE  0E05               	movlw	low(05h)
 13807  001800  6EDF               	movwf	indf2
 13808                           	line	154
 13809                           ;my_i2c.c: 154: ic_ptr->error_count++;
 13810  001802  EE20 F00F          	lfsr	2,0Fh
 13811  001806  5048               	movf	((c:_ic_ptr)),c,w
 13812  001808  26D9               	addwf	fsr2l
 13813  00180A  5049               	movf	((c:_ic_ptr+1)),c,w
 13814  00180C  22DA               	addwfc	fsr2h
 13815  00180E  2ADF               	incf	indf2
 13816                           
 13817                           	line	155
 13818                           ;my_i2c.c: 155: ic_ptr->error_code = 0x5;
 13819  001810  EE20 F00E          	lfsr	2,0Eh
 13820  001814  5048               	movf	((c:_ic_ptr)),c,w
 13821  001816  26D9               	addwf	fsr2l
 13822  001818  5049               	movf	((c:_ic_ptr+1)),c,w
 13823  00181A  22DA               	addwfc	fsr2h
 13824  00181C  0E05               	movlw	low(05h)
 13825  00181E  6EDF               	movwf	indf2
 13826                           	line	156
 13827                           ;my_i2c.c: 156: } else {
 13828  001820  D021               	goto	i2l7370
 13829                           	
 13830  001822                     i2l7365:
 13831                           	line	157
 13832                           ;my_i2c.c: 157: if (SSPSTATbits.R_W == 1) {
 13833                           	
 13834  001822  A4C7               	btfss	((c:4039)),c,2	;volatile
 13835  001824  D001               	goto	i2u155_41
 13836  001826  D001               	goto	i2u155_40
 13837  001828                     i2u155_41:
 13838  001828  D009               	goto	i2l18808
 13839  00182A                     i2u155_40:
 13840                           	line	158
 13841                           	
 13842  00182A                     i2l18806:
 13843                           ;my_i2c.c: 158: ic_ptr->status = 0x8;
 13844  00182A  EE20 F00D          	lfsr	2,0Dh
 13845  00182E  5048               	movf	((c:_ic_ptr)),c,w
 13846  001830  26D9               	addwf	fsr2l
 13847  001832  5049               	movf	((c:_ic_ptr+1)),c,w
 13848  001834  22DA               	addwfc	fsr2h
 13849  001836  0E08               	movlw	low(08h)
 13850  001838  6EDF               	movwf	indf2
 13851                           	line	159
 13852                           ;my_i2c.c: 159: } else {
 13853  00183A  D014               	goto	i2l7370
 13854                           	
 13855  00183C                     i2l7367:
 13856                           	line	160
 13857                           	
 13858  00183C                     i2l18808:
 13859                           ;my_i2c.c: 160: ic_ptr->status = 0x7;
 13860  00183C  EE20 F00D          	lfsr	2,0Dh
 13861  001840  5048               	movf	((c:_ic_ptr)),c,w
 13862  001842  26D9               	addwf	fsr2l
 13863  001844  5049               	movf	((c:_ic_ptr+1)),c,w
 13864  001846  22DA               	addwfc	fsr2h
 13865  001848  0E07               	movlw	low(07h)
 13866  00184A  6EDF               	movwf	indf2
 13867  00184C  D00B               	goto	i2l7370
 13868                           	line	161
 13869                           	
 13870  00184E                     i2l7368:
 13871  00184E  D00A               	goto	i2l7370
 13872                           	line	162
 13873                           	
 13874  001850                     i2l7366:
 13875                           	line	163
 13876                           ;my_i2c.c: 161: }
 13877                           ;my_i2c.c: 162: }
 13878                           ;my_i2c.c: 163: } else {
 13879  001850  D009               	goto	i2l7370
 13880                           	
 13881  001852                     i2l7364:
 13882                           	line	164
 13883                           	
 13884  001852                     i2l18810:
 13885                           ;my_i2c.c: 164: ic_ptr->status = 0x6;
 13886  001852  EE20 F00D          	lfsr	2,0Dh
 13887  001856  5048               	movf	((c:_ic_ptr)),c,w
 13888  001858  26D9               	addwf	fsr2l
 13889  00185A  5049               	movf	((c:_ic_ptr+1)),c,w
 13890  00185C  22DA               	addwfc	fsr2h
 13891  00185E  0E06               	movlw	low(06h)
 13892  001860  6EDF               	movwf	indf2
 13893  001862  D000               	goto	i2l7370
 13894                           	line	165
 13895                           	
 13896  001864                     i2l7369:
 13897                           	line	166
 13898                           	
 13899  001864                     i2l7370:
 13900  001864  0012               	return
 13901                           	opt stack 0
 13902                           GLOBAL	__end_of_handle_start
 13903  001866                     	__end_of_handle_start:
 13904                           	signat	_handle_start,4216
 13905                           	global	_i2c_master_int_handler
 13906                           
 13907 ;; *************** function _i2c_master_int_handler *****************
 13908 ;; Defined at:
 13909 ;;		line 190 in file "../src/my_i2c.c"
 13910 ;; Parameters:    Size  Location     Type
 13911 ;;		None
 13912 ;; Auto vars:     Size  Location     Type
 13913 ;;		None
 13914 ;; Return value:  Size  Location     Type
 13915 ;;		None               void
 13916 ;; Registers used:
 13917 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13918 ;; Tracked objects:
 13919 ;;		On entry : 0/0
 13920 ;;		On exit  : 0/0
 13921 ;;		Unchanged: 0/0
 13922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13923 ;;      Params:         0       0       0       0       0
 13924 ;;      Locals:         0       0       0       0       0
 13925 ;;      Temps:          2       0       0       0       0
 13926 ;;      Totals:         2       0       0       0       0
 13927 ;;Total ram usage:        2 bytes
 13928 ;; Hardware stack levels used:    1
 13929 ;; Hardware stack levels required when called:    3
 13930 ;; This function calls:
 13931 ;;		_ToMainHigh_sendmsg
 13932 ;; This function is called by:
 13933 ;;		_i2c_int_handler
 13934 ;; This function uses a non-reentrant model
 13935 ;;
 13936                           psect	text49,class=CODE,space=0,reloc=2
 13937                           global __ptext49
 13938  00070A                     __ptext49:
 13939                           psect	text49
 13940                           	file	"../src/my_i2c.c"
 13941                           	line	190
 13942                           	global	__size_of_i2c_master_int_handler
 13943  0000                     	__size_of_i2c_master_int_handler	equ	__end_of_i2c_master_int_handler-_i2c_master_int_ha
                                 ndler
 13944                           	
 13945  00070A                     _i2c_master_int_handler:
 13946                           	opt	stack 16
 13947                           	line	191
 13948                           	
 13949  00070A                     i2l19644:
 13950                           ;my_i2c.c: 191: switch (ic_ptr->status) {
 13951  00070A  D244               	goto	i2l19750
 13952                           	line	192
 13953                           ;my_i2c.c: 192: case 0x11: {
 13954                           	
 13955  00070C                     i2l7382:
 13956                           	line	193
 13957                           	
 13958  00070C                     i2l19646:
 13959                           ;my_i2c.c: 193: ic_ptr->status = 0x9;
 13960  00070C  EE20 F00D          	lfsr	2,0Dh
 13961  000710  5048               	movf	((c:_ic_ptr)),c,w
 13962  000712  26D9               	addwf	fsr2l
 13963  000714  5049               	movf	((c:_ic_ptr+1)),c,w
 13964  000716  22DA               	addwfc	fsr2h
 13965  000718  0E09               	movlw	low(09h)
 13966  00071A  6EDF               	movwf	indf2
 13967                           	line	194
 13968                           ;my_i2c.c: 194: SSPBUF = (ic_ptr->slave_addr & 0xFE);
 13969  00071C  EE20 F01C          	lfsr	2,01Ch
 13970  000720  5048               	movf	((c:_ic_ptr)),c,w
 13971  000722  26D9               	addwf	fsr2l
 13972  000724  5049               	movf	((c:_ic_ptr+1)),c,w
 13973  000726  22DA               	addwfc	fsr2h
 13974  000728  50DF               	movf	indf2,w
 13975  00072A  0BFE               	andlw	low(0FEh)
 13976  00072C  6EC9               	movwf	((c:4041)),c	;volatile
 13977                           	line	195
 13978                           ;my_i2c.c: 195: break;
 13979  00072E  D255               	goto	i2l7409
 13980                           	line	197
 13981                           ;my_i2c.c: 196: }
 13982                           ;my_i2c.c: 197: case 0x9: {
 13983                           	
 13984  000730                     i2l7384:
 13985                           	line	198
 13986                           ;my_i2c.c: 198: if (SSPCON2bits.ACKSTAT == 0) {
 13987                           	
 13988  000730  BCC5               	btfsc	((c:4037)),c,6	;volatile
 13989  000732  D001               	goto	i2u248_41
 13990  000734  D001               	goto	i2u248_40
 13991  000736                     i2u248_41:
 13992  000736  D05B               	goto	i2l19662
 13993  000738                     i2u248_40:
 13994                           	line	199
 13995                           	
 13996  000738                     i2l19648:
 13997                           ;my_i2c.c: 199: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
 13998  000738  EE20 F01B          	lfsr	2,01Bh
 13999  00073C  5048               	movf	((c:_ic_ptr)),c,w
 14000  00073E  26D9               	addwf	fsr2l
 14001  000740  5049               	movf	((c:_ic_ptr+1)),c,w
 14002  000742  22DA               	addwfc	fsr2h
 14003  000744  50DF               	movf	indf2,w
 14004  000746  6E3F               	movwf	(??_i2c_master_int_handler+0+0)&0ffh,c
 14005  000748  EE20 F01A          	lfsr	2,01Ah
 14006  00074C  5048               	movf	((c:_ic_ptr)),c,w
 14007  00074E  26D9               	addwf	fsr2l
 14008  000750  5049               	movf	((c:_ic_ptr+1)),c,w
 14009  000752  22DA               	addwfc	fsr2h
 14010  000754  50DF               	movf	indf2,w
 14011  000756  5C3F               	subwf	((??_i2c_master_int_handler+0+0)),c,w
 14012  000758  B0D8               	btfsc	status,0
 14013  00075A  D001               	goto	i2u249_41
 14014  00075C  D001               	goto	i2u249_40
 14015  00075E                     i2u249_41:
 14016  00075E  D01E               	goto	i2l19654
 14017  000760                     i2u249_40:
 14018                           	line	200
 14019                           	
 14020  000760                     i2l19650:
 14021                           ;my_i2c.c: 200: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
 14022  000760  EE20 F01B          	lfsr	2,01Bh
 14023  000764  5048               	movf	((c:_ic_ptr)),c,w
 14024  000766  26D9               	addwf	fsr2l
 14025  000768  5049               	movf	((c:_ic_ptr+1)),c,w
 14026  00076A  22DA               	addwfc	fsr2h
 14027  00076C  50DF               	movf	indf2,w
 14028  00076E  6E3F               	movwf	(??_i2c_master_int_handler+0+0)&0ffh,c
 14029  000770  503F               	movf	((??_i2c_master_int_handler+0+0)),c,w
 14030  000772  0D01               	mullw	01h
 14031  000774  0E10               	movlw	010h
 14032  000776  26F3               	addwf	(prodl),c
 14033  000778  0E00               	movlw	0
 14034  00077A  22F4               	addwfc	(prodh),c
 14035  00077C  50F3               	movf	(prodl),c,w
 14036  00077E  2448               	addwf	((c:_ic_ptr)),c,w
 14037  000780  6ED9               	movwf	c:fsr2l
 14038  000782  50F4               	movf	(prodh),c,w
 14039  000784  2049               	addwfc	((c:_ic_ptr+1)),c,w
 14040  000786  6EDA               	movwf	1+c:fsr2l
 14041  000788  50DF               	movf	indf2,w
 14042  00078A  6EC9               	movwf	((c:4041)),c	;volatile
 14043                           	line	201
 14044                           	
 14045  00078C                     i2l19652:
 14046                           ;my_i2c.c: 201: ic_ptr->outbufind++;
 14047  00078C  EE20 F01B          	lfsr	2,01Bh
 14048  000790  5048               	movf	((c:_ic_ptr)),c,w
 14049  000792  26D9               	addwf	fsr2l
 14050  000794  5049               	movf	((c:_ic_ptr+1)),c,w
 14051  000796  22DA               	addwfc	fsr2h
 14052  000798  2ADF               	incf	indf2
 14053                           
 14054                           	line	202
 14055                           ;my_i2c.c: 202: }
 14056  00079A  D21F               	goto	i2l7409
 14057                           	line	203
 14058                           	
 14059  00079C                     i2l7386:
 14060                           	line	204
 14061                           	
 14062  00079C                     i2l19654:
 14063                           ;my_i2c.c: 203: else {
 14064                           ;my_i2c.c: 204: ToMainHigh_sendmsg(0, 43, 0);
 14065  00079C  6E3F               	movwf	(??_i2c_master_int_handler+0+0)&0ffh,c
 14066  00079E  0E00               	movlw	low(0)
 14067  0007A0  0100               	movlb	0	; () banked
 14068  0007A2  0100               	movlb	0	; () banked
 14069  0007A4  6F8B               	movwf	((?_ToMainHigh_sendmsg))&0ffh
 14070  0007A6  503F               	movf	(??_i2c_master_int_handler+0+0)&0ffh,c,w
 14071  0007A8  6E40               	movwf	(??_i2c_master_int_handler+1+0)&0ffh,c
 14072  0007AA  0E2B               	movlw	low(02Bh)
 14073  0007AC  0100               	movlb	0	; () banked
 14074  0007AE  0100               	movlb	0	; () banked
 14075  0007B0  6F8C               	movwf	(0+(?_ToMainHigh_sendmsg+01h))&0ffh
 14076  0007B2  5040               	movf	(??_i2c_master_int_handler+1+0)&0ffh,c,w
 14077  0007B4  0E00               	movlw	high(0)
 14078  0007B6  0100               	movlb	0	; () banked
 14079  0007B8  0100               	movlb	0	; () banked
 14080  0007BA  6F8E               	movwf	(1+(?_ToMainHigh_sendmsg+02h))&0ffh
 14081  0007BC  0E00               	movlw	low(0)
 14082  0007BE  0100               	movlb	0	; () banked
 14083  0007C0  6F8D               	movwf	(0+(?_ToMainHigh_sendmsg+02h))&0ffh
 14084  0007C2  0100               	movlb	0	; () banked
 14085  0007C4  EC1F  F010         	call	_ToMainHigh_sendmsg	;wreg free
 14086                           	line	205
 14087                           	
 14088  0007C8                     i2l19656:
 14089                           ;my_i2c.c: 205: ic_ptr->outbuflen = 0;
 14090  0007C8  EE20 F01A          	lfsr	2,01Ah
 14091  0007CC  5048               	movf	((c:_ic_ptr)),c,w
 14092  0007CE  26D9               	addwf	fsr2l
 14093  0007D0  5049               	movf	((c:_ic_ptr+1)),c,w
 14094  0007D2  22DA               	addwfc	fsr2h
 14095  0007D4  0E00               	movlw	low(0)
 14096  0007D6  6EDF               	movwf	indf2
 14097                           	line	206
 14098                           	
 14099  0007D8                     i2l19658:
 14100                           ;my_i2c.c: 206: ic_ptr->status = 0x5;
 14101  0007D8  EE20 F00D          	lfsr	2,0Dh
 14102  0007DC  5048               	movf	((c:_ic_ptr)),c,w
 14103  0007DE  26D9               	addwf	fsr2l
 14104  0007E0  5049               	movf	((c:_ic_ptr+1)),c,w
 14105  0007E2  22DA               	addwfc	fsr2h
 14106  0007E4  0E05               	movlw	low(05h)
 14107  0007E6  6EDF               	movwf	indf2
 14108                           	line	207
 14109                           	
 14110  0007E8                     i2l19660:
 14111                           ;my_i2c.c: 207: SSPCON2bits.PEN = 1;
 14112  0007E8  84C5               	bsf	((c:4037)),c,2	;volatile
 14113  0007EA  D1F7               	goto	i2l7409
 14114                           	line	208
 14115                           	
 14116  0007EC                     i2l7387:
 14117                           	line	209
 14118                           ;my_i2c.c: 208: }
 14119                           ;my_i2c.c: 209: }
 14120  0007EC  D1F6               	goto	i2l7409
 14121                           	line	210
 14122                           	
 14123  0007EE                     i2l7385:
 14124                           	line	211
 14125                           	
 14126  0007EE                     i2l19662:
 14127                           ;my_i2c.c: 210: else {
 14128                           ;my_i2c.c: 211: ToMainHigh_sendmsg(0, 44, 0);
 14129  0007EE  6E3F               	movwf	(??_i2c_master_int_handler+0+0)&0ffh,c
 14130  0007F0  0E00               	movlw	low(0)
 14131  0007F2  0100               	movlb	0	; () banked
 14132  0007F4  0100               	movlb	0	; () banked
 14133  0007F6  6F8B               	movwf	((?_ToMainHigh_sendmsg))&0ffh
 14134  0007F8  503F               	movf	(??_i2c_master_int_handler+0+0)&0ffh,c,w
 14135  0007FA  6E40               	movwf	(??_i2c_master_int_handler+1+0)&0ffh,c
 14136  0007FC  0E2C               	movlw	low(02Ch)
 14137  0007FE  0100               	movlb	0	; () banked
 14138  000800  0100               	movlb	0	; () banked
 14139  000802  6F8C               	movwf	(0+(?_ToMainHigh_sendmsg+01h))&0ffh
 14140  000804  5040               	movf	(??_i2c_master_int_handler+1+0)&0ffh,c,w
 14141  000806  0E00               	movlw	high(0)
 14142  000808  0100               	movlb	0	; () banked
 14143  00080A  0100               	movlb	0	; () banked
 14144  00080C  6F8E               	movwf	(1+(?_ToMainHigh_sendmsg+02h))&0ffh
 14145  00080E  0E00               	movlw	low(0)
 14146  000810  0100               	movlb	0	; () banked
 14147  000812  6F8D               	movwf	(0+(?_ToMainHigh_sendmsg+02h))&0ffh
 14148  000814  0100               	movlb	0	; () banked
 14149  000816  EC1F  F010         	call	_ToMainHigh_sendmsg	;wreg free
 14150                           	line	212
 14151                           	
 14152  00081A                     i2l19664:
 14153                           ;my_i2c.c: 212: ic_ptr->error_count++;
 14154  00081A  EE20 F00F          	lfsr	2,0Fh
 14155  00081E  5048               	movf	((c:_ic_ptr)),c,w
 14156  000820  26D9               	addwf	fsr2l
 14157  000822  5049               	movf	((c:_ic_ptr+1)),c,w
 14158  000824  22DA               	addwfc	fsr2h
 14159  000826  2ADF               	incf	indf2
 14160                           
 14161                           	line	213
 14162                           	
 14163  000828                     i2l19666:
 14164                           ;my_i2c.c: 213: ic_ptr->error_code = 0x9;
 14165  000828  EE20 F00E          	lfsr	2,0Eh
 14166  00082C  5048               	movf	((c:_ic_ptr)),c,w
 14167  00082E  26D9               	addwf	fsr2l
 14168  000830  5049               	movf	((c:_ic_ptr+1)),c,w
 14169  000832  22DA               	addwfc	fsr2h
 14170  000834  0E09               	movlw	low(09h)
 14171  000836  6EDF               	movwf	indf2
 14172                           	line	214
 14173                           	
 14174  000838                     i2l19668:
 14175                           ;my_i2c.c: 214: ic_ptr->status = 0x5;
 14176  000838  EE20 F00D          	lfsr	2,0Dh
 14177  00083C  5048               	movf	((c:_ic_ptr)),c,w
 14178  00083E  26D9               	addwf	fsr2l
 14179  000840  5049               	movf	((c:_ic_ptr+1)),c,w
 14180  000842  22DA               	addwfc	fsr2h
 14181  000844  0E05               	movlw	low(05h)
 14182  000846  6EDF               	movwf	indf2
 14183                           	line	215
 14184                           	
 14185  000848                     i2l19670:
 14186                           ;my_i2c.c: 215: SSPCON2bits.PEN = 1;
 14187  000848  84C5               	bsf	((c:4037)),c,2	;volatile
 14188  00084A  D1C7               	goto	i2l7409
 14189                           	line	216
 14190                           	
 14191  00084C                     i2l7388:
 14192                           	line	217
 14193                           ;my_i2c.c: 216: }
 14194                           ;my_i2c.c: 217: break;
 14195  00084C  D1C6               	goto	i2l7409
 14196                           	line	219
 14197                           ;my_i2c.c: 218: }
 14198                           ;my_i2c.c: 219: case 0x12: {
 14199                           	
 14200  00084E                     i2l7389:
 14201                           	line	220
 14202                           ;my_i2c.c: 220: if (SSPCON2bits.ACKSTAT == 0) {
 14203                           	
 14204  00084E  BCC5               	btfsc	((c:4037)),c,6	;volatile
 14205  000850  D001               	goto	i2u250_41
 14206  000852  D001               	goto	i2u250_40
 14207  000854                     i2u250_41:
 14208  000854  D012               	goto	i2l19674
 14209  000856                     i2u250_40:
 14210                           	line	221
 14211                           	
 14212  000856                     i2l19672:
 14213                           ;my_i2c.c: 221: ic_ptr->status = 0x14;
 14214  000856  EE20 F00D          	lfsr	2,0Dh
 14215  00085A  5048               	movf	((c:_ic_ptr)),c,w
 14216  00085C  26D9               	addwf	fsr2l
 14217  00085E  5049               	movf	((c:_ic_ptr+1)),c,w
 14218  000860  22DA               	addwfc	fsr2h
 14219  000862  0E14               	movlw	low(014h)
 14220  000864  6EDF               	movwf	indf2
 14221                           	line	222
 14222                           ;my_i2c.c: 222: SSPBUF = ic_ptr->slave_addr & 0xFE;
 14223  000866  EE20 F01C          	lfsr	2,01Ch
 14224  00086A  5048               	movf	((c:_ic_ptr)),c,w
 14225  00086C  26D9               	addwf	fsr2l
 14226  00086E  5049               	movf	((c:_ic_ptr+1)),c,w
 14227  000870  22DA               	addwfc	fsr2h
 14228  000872  50DF               	movf	indf2,w
 14229  000874  0BFE               	andlw	low(0FEh)
 14230  000876  6EC9               	movwf	((c:4041)),c	;volatile
 14231                           	line	223
 14232                           ;my_i2c.c: 223: }
 14233  000878  D1B0               	goto	i2l7409
 14234                           	line	224
 14235                           	
 14236  00087A                     i2l7390:
 14237                           	line	225
 14238                           	
 14239  00087A                     i2l19674:
 14240                           ;my_i2c.c: 224: else {
 14241                           ;my_i2c.c: 225: ToMainHigh_sendmsg(0, 46, 0);
 14242  00087A  6E3F               	movwf	(??_i2c_master_int_handler+0+0)&0ffh,c
 14243  00087C  0E00               	movlw	low(0)
 14244  00087E  0100               	movlb	0	; () banked
 14245  000880  0100               	movlb	0	; () banked
 14246  000882  6F8B               	movwf	((?_ToMainHigh_sendmsg))&0ffh
 14247  000884  503F               	movf	(??_i2c_master_int_handler+0+0)&0ffh,c,w
 14248  000886  6E40               	movwf	(??_i2c_master_int_handler+1+0)&0ffh,c
 14249  000888  0E2E               	movlw	low(02Eh)
 14250  00088A  0100               	movlb	0	; () banked
 14251  00088C  0100               	movlb	0	; () banked
 14252  00088E  6F8C               	movwf	(0+(?_ToMainHigh_sendmsg+01h))&0ffh
 14253  000890  5040               	movf	(??_i2c_master_int_handler+1+0)&0ffh,c,w
 14254  000892  0E00               	movlw	high(0)
 14255  000894  0100               	movlb	0	; () banked
 14256  000896  0100               	movlb	0	; () banked
 14257  000898  6F8E               	movwf	(1+(?_ToMainHigh_sendmsg+02h))&0ffh
 14258  00089A  0E00               	movlw	low(0)
 14259  00089C  0100               	movlb	0	; () banked
 14260  00089E  6F8D               	movwf	(0+(?_ToMainHigh_sendmsg+02h))&0ffh
 14261  0008A0  0100               	movlb	0	; () banked
 14262  0008A2  EC1F  F010         	call	_ToMainHigh_sendmsg	;wreg free
 14263                           	line	226
 14264                           	
 14265  0008A6                     i2l19676:
 14266                           ;my_i2c.c: 226: ic_ptr->error_count++;
 14267  0008A6  EE20 F00F          	lfsr	2,0Fh
 14268  0008AA  5048               	movf	((c:_ic_ptr)),c,w
 14269  0008AC  26D9               	addwf	fsr2l
 14270  0008AE  5049               	movf	((c:_ic_ptr+1)),c,w
 14271  0008B0  22DA               	addwfc	fsr2h
 14272  0008B2  2ADF               	incf	indf2
 14273                           
 14274                           	line	227
 14275                           	
 14276  0008B4                     i2l19678:
 14277                           ;my_i2c.c: 227: ic_ptr->error_code = 0x9;
 14278  0008B4  EE20 F00E          	lfsr	2,0Eh
 14279  0008B8  5048               	movf	((c:_ic_ptr)),c,w
 14280  0008BA  26D9               	addwf	fsr2l
 14281  0008BC  5049               	movf	((c:_ic_ptr+1)),c,w
 14282  0008BE  22DA               	addwfc	fsr2h
 14283  0008C0  0E09               	movlw	low(09h)
 14284  0008C2  6EDF               	movwf	indf2
 14285                           	line	228
 14286                           	
 14287  0008C4                     i2l19680:
 14288                           ;my_i2c.c: 228: ic_ptr->status = 0x5;
 14289  0008C4  EE20 F00D          	lfsr	2,0Dh
 14290  0008C8  5048               	movf	((c:_ic_ptr)),c,w
 14291  0008CA  26D9               	addwf	fsr2l
 14292  0008CC  5049               	movf	((c:_ic_ptr+1)),c,w
 14293  0008CE  22DA               	addwfc	fsr2h
 14294  0008D0  0E05               	movlw	low(05h)
 14295  0008D2  6EDF               	movwf	indf2
 14296                           	line	229
 14297                           	
 14298  0008D4                     i2l19682:
 14299                           ;my_i2c.c: 229: SSPCON2bits.PEN = 1;
 14300  0008D4  84C5               	bsf	((c:4037)),c,2	;volatile
 14301  0008D6  D181               	goto	i2l7409
 14302                           	line	230
 14303                           	
 14304  0008D8                     i2l7391:
 14305                           	line	231
 14306                           ;my_i2c.c: 230: }
 14307                           ;my_i2c.c: 231: break;
 14308  0008D8  D180               	goto	i2l7409
 14309                           	line	233
 14310                           ;my_i2c.c: 232: }
 14311                           ;my_i2c.c: 233: case 0x14: {
 14312                           	
 14313  0008DA                     i2l7392:
 14314                           	line	234
 14315                           ;my_i2c.c: 234: if (SSPCON2bits.ACKSTAT == 0) {
 14316                           	
 14317  0008DA  BCC5               	btfsc	((c:4037)),c,6	;volatile
 14318  0008DC  D001               	goto	i2u251_41
 14319  0008DE  D001               	goto	i2u251_40
 14320  0008E0                     i2u251_41:
 14321  0008E0  D019               	goto	i2l19686
 14322  0008E2                     i2u251_40:
 14323                           	line	235
 14324                           	
 14325  0008E2                     i2l19684:
 14326                           ;my_i2c.c: 235: ic_ptr->status = 0x15;
 14327  0008E2  EE20 F00D          	lfsr	2,0Dh
 14328  0008E6  5048               	movf	((c:_ic_ptr)),c,w
 14329  0008E8  26D9               	addwf	fsr2l
 14330  0008EA  5049               	movf	((c:_ic_ptr+1)),c,w
 14331  0008EC  22DA               	addwfc	fsr2h
 14332  0008EE  0E15               	movlw	low(015h)
 14333  0008F0  6EDF               	movwf	indf2
 14334                           	line	236
 14335                           ;my_i2c.c: 236: ic_ptr->outbuflen = 0;
 14336  0008F2  EE20 F01A          	lfsr	2,01Ah
 14337  0008F6  5048               	movf	((c:_ic_ptr)),c,w
 14338  0008F8  26D9               	addwf	fsr2l
 14339  0008FA  5049               	movf	((c:_ic_ptr+1)),c,w
 14340  0008FC  22DA               	addwfc	fsr2h
 14341  0008FE  0E00               	movlw	low(0)
 14342  000900  6EDF               	movwf	indf2
 14343                           	line	237
 14344                           ;my_i2c.c: 237: SSPBUF = ic_ptr->outbuffer[0];
 14345  000902  EE20 F010          	lfsr	2,010h
 14346  000906  5048               	movf	((c:_ic_ptr)),c,w
 14347  000908  26D9               	addwf	fsr2l
 14348  00090A  5049               	movf	((c:_ic_ptr+1)),c,w
 14349  00090C  22DA               	addwfc	fsr2h
 14350  00090E  50DF               	movf	indf2,w
 14351  000910  6EC9               	movwf	((c:4041)),c	;volatile
 14352                           	line	238
 14353                           ;my_i2c.c: 238: }
 14354  000912  D163               	goto	i2l7409
 14355                           	line	239
 14356                           	
 14357  000914                     i2l7393:
 14358                           	line	240
 14359                           	
 14360  000914                     i2l19686:
 14361                           ;my_i2c.c: 239: else {
 14362                           ;my_i2c.c: 240: ToMainHigh_sendmsg(0, 46, 0);
 14363  000914  6E3F               	movwf	(??_i2c_master_int_handler+0+0)&0ffh,c
 14364  000916  0E00               	movlw	low(0)
 14365  000918  0100               	movlb	0	; () banked
 14366  00091A  0100               	movlb	0	; () banked
 14367  00091C  6F8B               	movwf	((?_ToMainHigh_sendmsg))&0ffh
 14368  00091E  503F               	movf	(??_i2c_master_int_handler+0+0)&0ffh,c,w
 14369  000920  6E40               	movwf	(??_i2c_master_int_handler+1+0)&0ffh,c
 14370  000922  0E2E               	movlw	low(02Eh)
 14371  000924  0100               	movlb	0	; () banked
 14372  000926  0100               	movlb	0	; () banked
 14373  000928  6F8C               	movwf	(0+(?_ToMainHigh_sendmsg+01h))&0ffh
 14374  00092A  5040               	movf	(??_i2c_master_int_handler+1+0)&0ffh,c,w
 14375  00092C  0E00               	movlw	high(0)
 14376  00092E  0100               	movlb	0	; () banked
 14377  000930  0100               	movlb	0	; () banked
 14378  000932  6F8E               	movwf	(1+(?_ToMainHigh_sendmsg+02h))&0ffh
 14379  000934  0E00               	movlw	low(0)
 14380  000936  0100               	movlb	0	; () banked
 14381  000938  6F8D               	movwf	(0+(?_ToMainHigh_sendmsg+02h))&0ffh
 14382  00093A  0100               	movlb	0	; () banked
 14383  00093C  EC1F  F010         	call	_ToMainHigh_sendmsg	;wreg free
 14384                           	line	241
 14385                           	
 14386  000940                     i2l19688:
 14387                           ;my_i2c.c: 241: ic_ptr->error_count++;
 14388  000940  EE20 F00F          	lfsr	2,0Fh
 14389  000944  5048               	movf	((c:_ic_ptr)),c,w
 14390  000946  26D9               	addwf	fsr2l
 14391  000948  5049               	movf	((c:_ic_ptr+1)),c,w
 14392  00094A  22DA               	addwfc	fsr2h
 14393  00094C  2ADF               	incf	indf2
 14394                           
 14395                           	line	242
 14396                           	
 14397  00094E                     i2l19690:
 14398                           ;my_i2c.c: 242: ic_ptr->error_code = 0x9;
 14399  00094E  EE20 F00E          	lfsr	2,0Eh
 14400  000952  5048               	movf	((c:_ic_ptr)),c,w
 14401  000954  26D9               	addwf	fsr2l
 14402  000956  5049               	movf	((c:_ic_ptr+1)),c,w
 14403  000958  22DA               	addwfc	fsr2h
 14404  00095A  0E09               	movlw	low(09h)
 14405  00095C  6EDF               	movwf	indf2
 14406                           	line	243
 14407                           	
 14408  00095E                     i2l19692:
 14409                           ;my_i2c.c: 243: ic_ptr->status = 0x5;
 14410  00095E  EE20 F00D          	lfsr	2,0Dh
 14411  000962  5048               	movf	((c:_ic_ptr)),c,w
 14412  000964  26D9               	addwf	fsr2l
 14413  000966  5049               	movf	((c:_ic_ptr+1)),c,w
 14414  000968  22DA               	addwfc	fsr2h
 14415  00096A  0E05               	movlw	low(05h)
 14416  00096C  6EDF               	movwf	indf2
 14417                           	line	244
 14418                           	
 14419  00096E                     i2l19694:
 14420                           ;my_i2c.c: 244: SSPCON2bits.PEN = 1;
 14421  00096E  84C5               	bsf	((c:4037)),c,2	;volatile
 14422  000970  D134               	goto	i2l7409
 14423                           	line	245
 14424                           	
 14425  000972                     i2l7394:
 14426                           	line	246
 14427                           ;my_i2c.c: 245: }
 14428                           ;my_i2c.c: 246: break;
 14429  000972  D133               	goto	i2l7409
 14430                           	line	248
 14431                           ;my_i2c.c: 247: }
 14432                           ;my_i2c.c: 248: case 0x15: {
 14433                           	
 14434  000974                     i2l7395:
 14435                           	line	249
 14436                           ;my_i2c.c: 249: if (SSPCON2bits.ACKSTAT == 0) {
 14437                           	
 14438  000974  BCC5               	btfsc	((c:4037)),c,6	;volatile
 14439  000976  D001               	goto	i2u252_41
 14440  000978  D001               	goto	i2u252_40
 14441  00097A                     i2u252_41:
 14442  00097A  D00A               	goto	i2l19700
 14443  00097C                     i2u252_40:
 14444                           	line	250
 14445                           	
 14446  00097C                     i2l19696:
 14447                           ;my_i2c.c: 250: ic_ptr->status = 0x16;
 14448  00097C  EE20 F00D          	lfsr	2,0Dh
 14449  000980  5048               	movf	((c:_ic_ptr)),c,w
 14450  000982  26D9               	addwf	fsr2l
 14451  000984  5049               	movf	((c:_ic_ptr+1)),c,w
 14452  000986  22DA               	addwfc	fsr2h
 14453  000988  0E16               	movlw	low(016h)
 14454  00098A  6EDF               	movwf	indf2
 14455                           	line	251
 14456                           	
 14457  00098C                     i2l19698:
 14458                           ;my_i2c.c: 251: SSPCON2bits.RSEN = 1;
 14459  00098C  82C5               	bsf	((c:4037)),c,1	;volatile
 14460                           	line	252
 14461                           ;my_i2c.c: 252: }
 14462  00098E  D125               	goto	i2l7409
 14463                           	line	253
 14464                           	
 14465  000990                     i2l7396:
 14466                           	line	254
 14467                           	
 14468  000990                     i2l19700:
 14469                           ;my_i2c.c: 253: else {
 14470                           ;my_i2c.c: 254: ToMainHigh_sendmsg(0, 46, 0);
 14471  000990  6E3F               	movwf	(??_i2c_master_int_handler+0+0)&0ffh,c
 14472  000992  0E00               	movlw	low(0)
 14473  000994  0100               	movlb	0	; () banked
 14474  000996  0100               	movlb	0	; () banked
 14475  000998  6F8B               	movwf	((?_ToMainHigh_sendmsg))&0ffh
 14476  00099A  503F               	movf	(??_i2c_master_int_handler+0+0)&0ffh,c,w
 14477  00099C  6E40               	movwf	(??_i2c_master_int_handler+1+0)&0ffh,c
 14478  00099E  0E2E               	movlw	low(02Eh)
 14479  0009A0  0100               	movlb	0	; () banked
 14480  0009A2  0100               	movlb	0	; () banked
 14481  0009A4  6F8C               	movwf	(0+(?_ToMainHigh_sendmsg+01h))&0ffh
 14482  0009A6  5040               	movf	(??_i2c_master_int_handler+1+0)&0ffh,c,w
 14483  0009A8  0E00               	movlw	high(0)
 14484  0009AA  0100               	movlb	0	; () banked
 14485  0009AC  0100               	movlb	0	; () banked
 14486  0009AE  6F8E               	movwf	(1+(?_ToMainHigh_sendmsg+02h))&0ffh
 14487  0009B0  0E00               	movlw	low(0)
 14488  0009B2  0100               	movlb	0	; () banked
 14489  0009B4  6F8D               	movwf	(0+(?_ToMainHigh_sendmsg+02h))&0ffh
 14490  0009B6  0100               	movlb	0	; () banked
 14491  0009B8  EC1F  F010         	call	_ToMainHigh_sendmsg	;wreg free
 14492                           	line	255
 14493                           	
 14494  0009BC                     i2l19702:
 14495                           ;my_i2c.c: 255: ic_ptr->error_count++;
 14496  0009BC  EE20 F00F          	lfsr	2,0Fh
 14497  0009C0  5048               	movf	((c:_ic_ptr)),c,w
 14498  0009C2  26D9               	addwf	fsr2l
 14499  0009C4  5049               	movf	((c:_ic_ptr+1)),c,w
 14500  0009C6  22DA               	addwfc	fsr2h
 14501  0009C8  2ADF               	incf	indf2
 14502                           
 14503                           	line	256
 14504                           	
 14505  0009CA                     i2l19704:
 14506                           ;my_i2c.c: 256: ic_ptr->error_code = 0x9;
 14507  0009CA  EE20 F00E          	lfsr	2,0Eh
 14508  0009CE  5048               	movf	((c:_ic_ptr)),c,w
 14509  0009D0  26D9               	addwf	fsr2l
 14510  0009D2  5049               	movf	((c:_ic_ptr+1)),c,w
 14511  0009D4  22DA               	addwfc	fsr2h
 14512  0009D6  0E09               	movlw	low(09h)
 14513  0009D8  6EDF               	movwf	indf2
 14514                           	line	257
 14515                           	
 14516  0009DA                     i2l19706:
 14517                           ;my_i2c.c: 257: ic_ptr->status = 0x5;
 14518  0009DA  EE20 F00D          	lfsr	2,0Dh
 14519  0009DE  5048               	movf	((c:_ic_ptr)),c,w
 14520  0009E0  26D9               	addwf	fsr2l
 14521  0009E2  5049               	movf	((c:_ic_ptr+1)),c,w
 14522  0009E4  22DA               	addwfc	fsr2h
 14523  0009E6  0E05               	movlw	low(05h)
 14524  0009E8  6EDF               	movwf	indf2
 14525                           	line	258
 14526                           	
 14527  0009EA                     i2l19708:
 14528                           ;my_i2c.c: 258: SSPCON2bits.PEN = 1;
 14529  0009EA  84C5               	bsf	((c:4037)),c,2	;volatile
 14530  0009EC  D0F6               	goto	i2l7409
 14531                           	line	259
 14532                           	
 14533  0009EE                     i2l7397:
 14534                           	line	260
 14535                           ;my_i2c.c: 259: }
 14536                           ;my_i2c.c: 260: break;
 14537  0009EE  D0F5               	goto	i2l7409
 14538                           	line	262
 14539                           ;my_i2c.c: 261: }
 14540                           ;my_i2c.c: 262: case 0x16: {
 14541                           	
 14542  0009F0                     i2l7398:
 14543                           	line	263
 14544                           	
 14545  0009F0                     i2l19710:
 14546                           ;my_i2c.c: 263: ic_ptr->status = 0x17;
 14547  0009F0  EE20 F00D          	lfsr	2,0Dh
 14548  0009F4  5048               	movf	((c:_ic_ptr)),c,w
 14549  0009F6  26D9               	addwf	fsr2l
 14550  0009F8  5049               	movf	((c:_ic_ptr+1)),c,w
 14551  0009FA  22DA               	addwfc	fsr2h
 14552  0009FC  0E17               	movlw	low(017h)
 14553  0009FE  6EDF               	movwf	indf2
 14554                           	line	264
 14555                           ;my_i2c.c: 264: SSPBUF = ic_ptr->slave_addr | 0x1;
 14556  000A00  EE20 F01C          	lfsr	2,01Ch
 14557  000A04  5048               	movf	((c:_ic_ptr)),c,w
 14558  000A06  26D9               	addwf	fsr2l
 14559  000A08  5049               	movf	((c:_ic_ptr+1)),c,w
 14560  000A0A  22DA               	addwfc	fsr2h
 14561  000A0C  50DF               	movf	indf2,w
 14562  000A0E  0901               	iorlw	low(01h)
 14563  000A10  6EC9               	movwf	((c:4041)),c	;volatile
 14564                           	line	265
 14565                           ;my_i2c.c: 265: break;
 14566  000A12  D0E3               	goto	i2l7409
 14567                           	line	267
 14568                           ;my_i2c.c: 266: }
 14569                           ;my_i2c.c: 267: case 0x17: {
 14570                           	
 14571  000A14                     i2l7399:
 14572                           	line	268
 14573                           ;my_i2c.c: 268: if (SSPCON2bits.ACKSTAT == 0) {
 14574                           	
 14575  000A14  BCC5               	btfsc	((c:4037)),c,6	;volatile
 14576  000A16  D001               	goto	i2u253_41
 14577  000A18  D001               	goto	i2u253_40
 14578  000A1A                     i2u253_41:
 14579  000A1A  D00A               	goto	i2l19716
 14580  000A1C                     i2u253_40:
 14581                           	line	269
 14582                           	
 14583  000A1C                     i2l19712:
 14584                           ;my_i2c.c: 269: ic_ptr->status = 0x18;
 14585  000A1C  EE20 F00D          	lfsr	2,0Dh
 14586  000A20  5048               	movf	((c:_ic_ptr)),c,w
 14587  000A22  26D9               	addwf	fsr2l
 14588  000A24  5049               	movf	((c:_ic_ptr+1)),c,w
 14589  000A26  22DA               	addwfc	fsr2h
 14590  000A28  0E18               	movlw	low(018h)
 14591  000A2A  6EDF               	movwf	indf2
 14592                           	line	270
 14593                           	
 14594  000A2C                     i2l19714:
 14595                           ;my_i2c.c: 270: SSPCON2bits.RCEN = 1;
 14596  000A2C  86C5               	bsf	((c:4037)),c,3	;volatile
 14597                           	line	271
 14598                           ;my_i2c.c: 271: }
 14599  000A2E  D0D5               	goto	i2l7409
 14600                           	line	272
 14601                           	
 14602  000A30                     i2l7400:
 14603                           	line	273
 14604                           	
 14605  000A30                     i2l19716:
 14606                           ;my_i2c.c: 272: else {
 14607                           ;my_i2c.c: 273: ToMainHigh_sendmsg(0, 46, 0);
 14608  000A30  6E3F               	movwf	(??_i2c_master_int_handler+0+0)&0ffh,c
 14609  000A32  0E00               	movlw	low(0)
 14610  000A34  0100               	movlb	0	; () banked
 14611  000A36  0100               	movlb	0	; () banked
 14612  000A38  6F8B               	movwf	((?_ToMainHigh_sendmsg))&0ffh
 14613  000A3A  503F               	movf	(??_i2c_master_int_handler+0+0)&0ffh,c,w
 14614  000A3C  6E40               	movwf	(??_i2c_master_int_handler+1+0)&0ffh,c
 14615  000A3E  0E2E               	movlw	low(02Eh)
 14616  000A40  0100               	movlb	0	; () banked
 14617  000A42  0100               	movlb	0	; () banked
 14618  000A44  6F8C               	movwf	(0+(?_ToMainHigh_sendmsg+01h))&0ffh
 14619  000A46  5040               	movf	(??_i2c_master_int_handler+1+0)&0ffh,c,w
 14620  000A48  0E00               	movlw	high(0)
 14621  000A4A  0100               	movlb	0	; () banked
 14622  000A4C  0100               	movlb	0	; () banked
 14623  000A4E  6F8E               	movwf	(1+(?_ToMainHigh_sendmsg+02h))&0ffh
 14624  000A50  0E00               	movlw	low(0)
 14625  000A52  0100               	movlb	0	; () banked
 14626  000A54  6F8D               	movwf	(0+(?_ToMainHigh_sendmsg+02h))&0ffh
 14627  000A56  0100               	movlb	0	; () banked
 14628  000A58  EC1F  F010         	call	_ToMainHigh_sendmsg	;wreg free
 14629                           	line	274
 14630                           	
 14631  000A5C                     i2l19718:
 14632                           ;my_i2c.c: 274: ic_ptr->error_count++;
 14633  000A5C  EE20 F00F          	lfsr	2,0Fh
 14634  000A60  5048               	movf	((c:_ic_ptr)),c,w
 14635  000A62  26D9               	addwf	fsr2l
 14636  000A64  5049               	movf	((c:_ic_ptr+1)),c,w
 14637  000A66  22DA               	addwfc	fsr2h
 14638  000A68  2ADF               	incf	indf2
 14639                           
 14640                           	line	275
 14641                           	
 14642  000A6A                     i2l19720:
 14643                           ;my_i2c.c: 275: ic_ptr->error_code = 0x9;
 14644  000A6A  EE20 F00E          	lfsr	2,0Eh
 14645  000A6E  5048               	movf	((c:_ic_ptr)),c,w
 14646  000A70  26D9               	addwf	fsr2l
 14647  000A72  5049               	movf	((c:_ic_ptr+1)),c,w
 14648  000A74  22DA               	addwfc	fsr2h
 14649  000A76  0E09               	movlw	low(09h)
 14650  000A78  6EDF               	movwf	indf2
 14651                           	line	276
 14652                           	
 14653  000A7A                     i2l19722:
 14654                           ;my_i2c.c: 276: ic_ptr->status = 0x5;
 14655  000A7A  EE20 F00D          	lfsr	2,0Dh
 14656  000A7E  5048               	movf	((c:_ic_ptr)),c,w
 14657  000A80  26D9               	addwf	fsr2l
 14658  000A82  5049               	movf	((c:_ic_ptr+1)),c,w
 14659  000A84  22DA               	addwfc	fsr2h
 14660  000A86  0E05               	movlw	low(05h)
 14661  000A88  6EDF               	movwf	indf2
 14662                           	line	277
 14663                           	
 14664  000A8A                     i2l19724:
 14665                           ;my_i2c.c: 277: SSPCON2bits.PEN = 1;
 14666  000A8A  84C5               	bsf	((c:4037)),c,2	;volatile
 14667  000A8C  D0A6               	goto	i2l7409
 14668                           	line	278
 14669                           	
 14670  000A8E                     i2l7401:
 14671                           	line	279
 14672                           ;my_i2c.c: 278: }
 14673                           ;my_i2c.c: 279: break;
 14674  000A8E  D0A5               	goto	i2l7409
 14675                           	line	281
 14676                           ;my_i2c.c: 280: }
 14677                           ;my_i2c.c: 281: case 0x18: {
 14678                           	
 14679  000A90                     i2l7402:
 14680                           	line	282
 14681                           ;my_i2c.c: 282: if (SSPSTATbits.BF == 1) {
 14682                           	
 14683  000A90  A0C7               	btfss	((c:4039)),c,0	;volatile
 14684  000A92  D001               	goto	i2u254_41
 14685  000A94  D001               	goto	i2u254_40
 14686  000A96                     i2u254_41:
 14687  000A96  D0A1               	goto	i2l7409
 14688  000A98                     i2u254_40:
 14689                           	line	283
 14690                           	
 14691  000A98                     i2l19726:
 14692                           ;my_i2c.c: 283: ic_ptr->status = 0x19;
 14693  000A98  EE20 F00D          	lfsr	2,0Dh
 14694  000A9C  5048               	movf	((c:_ic_ptr)),c,w
 14695  000A9E  26D9               	addwf	fsr2l
 14696  000AA0  5049               	movf	((c:_ic_ptr+1)),c,w
 14697  000AA2  22DA               	addwfc	fsr2h
 14698  000AA4  0E19               	movlw	low(019h)
 14699  000AA6  6EDF               	movwf	indf2
 14700                           	line	284
 14701                           	
 14702  000AA8                     i2l19728:
 14703                           ;my_i2c.c: 284: ic_ptr->buffer[ic_ptr->bufind] = SSPBUF;
 14704  000AA8  EE20 F00B          	lfsr	2,0Bh
 14705  000AAC  5048               	movf	((c:_ic_ptr)),c,w
 14706  000AAE  26D9               	addwf	fsr2l
 14707  000AB0  5049               	movf	((c:_ic_ptr+1)),c,w
 14708  000AB2  22DA               	addwfc	fsr2h
 14709  000AB4  50DF               	movf	indf2,w
 14710  000AB6  6E3F               	movwf	(??_i2c_master_int_handler+0+0)&0ffh,c
 14711  000AB8  503F               	movf	((??_i2c_master_int_handler+0+0)),c,w
 14712  000ABA  0D01               	mullw	01h
 14713  000ABC  50F3               	movf	(prodl),c,w
 14714  000ABE  2448               	addwf	((c:_ic_ptr)),c,w
 14715  000AC0  6ED9               	movwf	c:fsr2l
 14716  000AC2  50F4               	movf	(prodh),c,w
 14717  000AC4  2049               	addwfc	((c:_ic_ptr+1)),c,w
 14718  000AC6  6EDA               	movwf	1+c:fsr2l
 14719  000AC8  CFC9 FFDF          	movff	(c:4041),indf2	;volatile
 14720                           
 14721                           	line	285
 14722                           	
 14723  000ACC                     i2l19730:
 14724                           ;my_i2c.c: 285: ic_ptr->bufind++;
 14725  000ACC  EE20 F00B          	lfsr	2,0Bh
 14726  000AD0  5048               	movf	((c:_ic_ptr)),c,w
 14727  000AD2  26D9               	addwf	fsr2l
 14728  000AD4  5049               	movf	((c:_ic_ptr+1)),c,w
 14729  000AD6  22DA               	addwfc	fsr2h
 14730  000AD8  2ADF               	incf	indf2
 14731                           
 14732                           	line	286
 14733                           	
 14734  000ADA                     i2l19732:
 14735                           ;my_i2c.c: 286: if (ic_ptr->bufind < ic_ptr->buflen) {
 14736  000ADA  EE20 F00B          	lfsr	2,0Bh
 14737  000ADE  5048               	movf	((c:_ic_ptr)),c,w
 14738  000AE0  26D9               	addwf	fsr2l
 14739  000AE2  5049               	movf	((c:_ic_ptr+1)),c,w
 14740  000AE4  22DA               	addwfc	fsr2h
 14741  000AE6  50DF               	movf	indf2,w
 14742  000AE8  6E3F               	movwf	(??_i2c_master_int_handler+0+0)&0ffh,c
 14743  000AEA  EE20 F00A          	lfsr	2,0Ah
 14744  000AEE  5048               	movf	((c:_ic_ptr)),c,w
 14745  000AF0  26D9               	addwf	fsr2l
 14746  000AF2  5049               	movf	((c:_ic_ptr+1)),c,w
 14747  000AF4  22DA               	addwfc	fsr2h
 14748  000AF6  50DF               	movf	indf2,w
 14749  000AF8  5C3F               	subwf	((??_i2c_master_int_handler+0+0)),c,w
 14750  000AFA  B0D8               	btfsc	status,0
 14751  000AFC  D001               	goto	i2u255_41
 14752  000AFE  D001               	goto	i2u255_40
 14753  000B00                     i2u255_41:
 14754  000B00  D003               	goto	i2l7404
 14755  000B02                     i2u255_40:
 14756                           	line	287
 14757                           	
 14758  000B02                     i2l19734:
 14759                           ;my_i2c.c: 287: SSPCON2bits.ACKDT = 0;
 14760  000B02  9AC5               	bcf	((c:4037)),c,5	;volatile
 14761                           	line	288
 14762                           ;my_i2c.c: 288: SSPCON2bits.ACKEN = 1;
 14763  000B04  88C5               	bsf	((c:4037)),c,4	;volatile
 14764                           	line	289
 14765                           ;my_i2c.c: 289: }
 14766  000B06  D069               	goto	i2l7409
 14767                           	line	290
 14768                           	
 14769  000B08                     i2l7404:
 14770                           	line	291
 14771                           ;my_i2c.c: 290: else {
 14772                           ;my_i2c.c: 291: SSPCON2bits.ACKDT = 1;
 14773  000B08  8AC5               	bsf	((c:4037)),c,5	;volatile
 14774                           	line	292
 14775                           ;my_i2c.c: 292: SSPCON2bits.ACKEN = 1;
 14776  000B0A  88C5               	bsf	((c:4037)),c,4	;volatile
 14777  000B0C  D066               	goto	i2l7409
 14778                           	line	293
 14779                           	
 14780  000B0E                     i2l7405:
 14781  000B0E  D065               	goto	i2l7409
 14782                           	line	294
 14783                           	
 14784  000B10                     i2l7403:
 14785                           	line	295
 14786                           ;my_i2c.c: 293: }
 14787                           ;my_i2c.c: 294: }
 14788                           ;my_i2c.c: 295: break;
 14789  000B10  D064               	goto	i2l7409
 14790                           	line	297
 14791                           ;my_i2c.c: 296: }
 14792                           ;my_i2c.c: 297: case 0x19: {
 14793                           	
 14794  000B12                     i2l7406:
 14795                           	line	298
 14796                           	
 14797  000B12                     i2l19736:
 14798                           ;my_i2c.c: 298: if (ic_ptr->bufind < ic_ptr->buflen) {
 14799  000B12  EE20 F00B          	lfsr	2,0Bh
 14800  000B16  5048               	movf	((c:_ic_ptr)),c,w
 14801  000B18  26D9               	addwf	fsr2l
 14802  000B1A  5049               	movf	((c:_ic_ptr+1)),c,w
 14803  000B1C  22DA               	addwfc	fsr2h
 14804  000B1E  50DF               	movf	indf2,w
 14805  000B20  6E3F               	movwf	(??_i2c_master_int_handler+0+0)&0ffh,c
 14806  000B22  EE20 F00A          	lfsr	2,0Ah
 14807  000B26  5048               	movf	((c:_ic_ptr)),c,w
 14808  000B28  26D9               	addwf	fsr2l
 14809  000B2A  5049               	movf	((c:_ic_ptr+1)),c,w
 14810  000B2C  22DA               	addwfc	fsr2h
 14811  000B2E  50DF               	movf	indf2,w
 14812  000B30  5C3F               	subwf	((??_i2c_master_int_handler+0+0)),c,w
 14813  000B32  B0D8               	btfsc	status,0
 14814  000B34  D001               	goto	i2u256_41
 14815  000B36  D001               	goto	i2u256_40
 14816  000B38                     i2u256_41:
 14817  000B38  D00A               	goto	i2l19742
 14818  000B3A                     i2u256_40:
 14819                           	line	299
 14820                           	
 14821  000B3A                     i2l19738:
 14822                           ;my_i2c.c: 299: ic_ptr->status = 0x18;
 14823  000B3A  EE20 F00D          	lfsr	2,0Dh
 14824  000B3E  5048               	movf	((c:_ic_ptr)),c,w
 14825  000B40  26D9               	addwf	fsr2l
 14826  000B42  5049               	movf	((c:_ic_ptr+1)),c,w
 14827  000B44  22DA               	addwfc	fsr2h
 14828  000B46  0E18               	movlw	low(018h)
 14829  000B48  6EDF               	movwf	indf2
 14830                           	line	300
 14831                           	
 14832  000B4A                     i2l19740:
 14833                           ;my_i2c.c: 300: SSPCON2bits.RCEN = 1;
 14834  000B4A  86C5               	bsf	((c:4037)),c,3	;volatile
 14835                           	line	301
 14836                           ;my_i2c.c: 301: }
 14837  000B4C  D046               	goto	i2l7409
 14838                           	line	302
 14839                           	
 14840  000B4E                     i2l7407:
 14841                           	line	304
 14842                           	
 14843  000B4E                     i2l19742:
 14844                           ;my_i2c.c: 302: else {
 14845                           ;my_i2c.c: 303: ToMainHigh_sendmsg(ic_ptr->buflen, 45,
 14846                           ;my_i2c.c: 304: (void *)(ic_ptr->buffer));
 14847  000B4E  EE20 F00A          	lfsr	2,0Ah
 14848  000B52  5048               	movf	((c:_ic_ptr)),c,w
 14849  000B54  26D9               	addwf	fsr2l
 14850  000B56  5049               	movf	((c:_ic_ptr+1)),c,w
 14851  000B58  22DA               	addwfc	fsr2h
 14852  000B5A  50DF               	movf	indf2,w
 14853  000B5C  0100               	movlb	0	; () banked
 14854  000B5E  0100               	movlb	0	; () banked
 14855  000B60  6F8B               	movwf	((?_ToMainHigh_sendmsg))&0ffh
 14856  000B62  6E3F               	movwf	(??_i2c_master_int_handler+0+0)&0ffh,c
 14857  000B64  0E2D               	movlw	low(02Dh)
 14858  000B66  0100               	movlb	0	; () banked
 14859  000B68  0100               	movlb	0	; () banked
 14860  000B6A  6F8C               	movwf	(0+(?_ToMainHigh_sendmsg+01h))&0ffh
 14861  000B6C  503F               	movf	(??_i2c_master_int_handler+0+0)&0ffh,c,w
 14862  000B6E  C048  F08D         	movff	(c:_ic_ptr),0+(?_ToMainHigh_sendmsg+02h)
 14863  000B72  C049  F08E         	movff	(c:_ic_ptr+1),1+(?_ToMainHigh_sendmsg+02h)
 14864  000B76  0100               	movlb	0	; () banked
 14865  000B78  EC1F  F010         	call	_ToMainHigh_sendmsg	;wreg free
 14866                           	line	305
 14867                           	
 14868  000B7C                     i2l19744:
 14869                           ;my_i2c.c: 305: ic_ptr->status = 0x5;
 14870  000B7C  EE20 F00D          	lfsr	2,0Dh
 14871  000B80  5048               	movf	((c:_ic_ptr)),c,w
 14872  000B82  26D9               	addwf	fsr2l
 14873  000B84  5049               	movf	((c:_ic_ptr+1)),c,w
 14874  000B86  22DA               	addwfc	fsr2h
 14875  000B88  0E05               	movlw	low(05h)
 14876  000B8A  6EDF               	movwf	indf2
 14877                           	line	306
 14878                           	
 14879  000B8C                     i2l19746:
 14880                           ;my_i2c.c: 306: SSPCON2bits.PEN = 1;
 14881  000B8C  84C5               	bsf	((c:4037)),c,2	;volatile
 14882  000B8E  D025               	goto	i2l7409
 14883                           	line	307
 14884                           	
 14885  000B90                     i2l7408:
 14886                           	line	308
 14887                           ;my_i2c.c: 307: }
 14888                           ;my_i2c.c: 308: break;
 14889  000B90  D024               	goto	i2l7409
 14890                           	line	310
 14891                           	
 14892  000B92                     i2l19748:
 14893                           ;my_i2c.c: 309: }
 14894                           ;my_i2c.c: 310: }
 14895  000B92  D023               	goto	i2l7409
 14896                           	line	191
 14897                           	
 14898  000B94                     i2l7381:
 14899                           	
 14900  000B94                     i2l19750:
 14901  000B94  EE20 F00D          	lfsr	2,0Dh
 14902  000B98  5048               	movf	((c:_ic_ptr)),c,w
 14903  000B9A  26D9               	addwf	fsr2l
 14904  000B9C  5049               	movf	((c:_ic_ptr+1)),c,w
 14905  000B9E  22DA               	addwfc	fsr2h
 14906  000BA0  50DF               	movf	indf2,w
 14907                           	; Switch size 1, requested type "space"
 14908                           ; Number of cases is 9, Range of values is 9 to 25
 14909                           ; switch strategies available:
 14910                           ; Name         Instructions Cycles
 14911                           ; simple_byte           28    15 (average)
 14912                           ;	Chosen strategy is simple_byte
 14913                           
 14914  000BA2  0A09               	xorlw	9^0	; case 9
 14915  000BA4  B4D8               	skipnz
 14916  000BA6  D5C4               	goto	i2l7384
 14917  000BA8  0A18               	xorlw	17^9	; case 17
 14918  000BAA  B4D8               	skipnz
 14919  000BAC  D5AF               	goto	i2l19646
 14920  000BAE  0A03               	xorlw	18^17	; case 18
 14921  000BB0  B4D8               	skipnz
 14922  000BB2  D64D               	goto	i2l7389
 14923  000BB4  0A06               	xorlw	20^18	; case 20
 14924  000BB6  B4D8               	skipnz
 14925  000BB8  D690               	goto	i2l7392
 14926  000BBA  0A01               	xorlw	21^20	; case 21
 14927  000BBC  B4D8               	skipnz
 14928  000BBE  D6DA               	goto	i2l7395
 14929  000BC0  0A03               	xorlw	22^21	; case 22
 14930  000BC2  B4D8               	skipnz
 14931  000BC4  D715               	goto	i2l19710
 14932  000BC6  0A01               	xorlw	23^22	; case 23
 14933  000BC8  B4D8               	skipnz
 14934  000BCA  D724               	goto	i2l7399
 14935  000BCC  0A0F               	xorlw	24^23	; case 24
 14936  000BCE  B4D8               	skipnz
 14937  000BD0  D75F               	goto	i2l7402
 14938  000BD2  0A01               	xorlw	25^24	; case 25
 14939  000BD4  B4D8               	skipnz
 14940  000BD6  D79D               	goto	i2l19736
 14941  000BD8  D000               	goto	i2l7409
 14942                           
 14943                           	line	310
 14944                           	
 14945  000BDA                     i2l7383:
 14946                           	line	311
 14947                           	
 14948  000BDA                     i2l7409:
 14949  000BDA  0012               	return
 14950                           	opt stack 0
 14951                           GLOBAL	__end_of_i2c_master_int_handler
 14952  000BDC                     	__end_of_i2c_master_int_handler:
 14953                           	signat	_i2c_master_int_handler,88
 14954                           	global	_ToMainHigh_sendmsg
 14955                           
 14956 ;; *************** function _ToMainHigh_sendmsg *****************
 14957 ;; Defined at:
 14958 ;;		line 126 in file "../src/messages.c"
 14959 ;; Parameters:    Size  Location     Type
 14960 ;;  length          1   11[BANK0 ] unsigned char 
 14961 ;;  msgtype         1   12[BANK0 ] unsigned char 
 14962 ;;  data            2   13[BANK0 ] PTR void 
 14963 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@error_buf(3), NULL(0), main@ic(29), 
 14964 ;; Auto vars:     Size  Location     Type
 14965 ;;		None
 14966 ;; Return value:  Size  Location     Type
 14967 ;;                  1    wreg      char 
 14968 ;; Registers used:
 14969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14970 ;; Tracked objects:
 14971 ;;		On entry : 0/0
 14972 ;;		On exit  : 0/0
 14973 ;;		Unchanged: 0/0
 14974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14975 ;;      Params:         0       4       0       0       0
 14976 ;;      Locals:         0       0       0       0       0
 14977 ;;      Temps:          0       0       0       0       0
 14978 ;;      Totals:         0       4       0       0       0
 14979 ;;Total ram usage:        4 bytes
 14980 ;; Hardware stack levels used:    1
 14981 ;; Hardware stack levels required when called:    2
 14982 ;; This function calls:
 14983 ;;		i2_send_msg
 14984 ;; This function is called by:
 14985 ;;		_i2c_master_int_handler
 14986 ;;		_i2c_slave_int_handler
 14987 ;;		_timer0_int_handler
 14988 ;; This function uses a non-reentrant model
 14989 ;;
 14990                           psect	text50,class=CODE,space=0,reloc=2
 14991                           global __ptext50
 14992  00203E                     __ptext50:
 14993                           psect	text50
 14994                           	file	"../src/messages.c"
 14995                           	line	126
 14996                           	global	__size_of_ToMainHigh_sendmsg
 14997  0000                     	__size_of_ToMainHigh_sendmsg	equ	__end_of_ToMainHigh_sendmsg-_ToMainHigh_sendmsg
 14998                           	
 14999  00203E                     _ToMainHigh_sendmsg:
 15000                           	opt	stack 17
 15001                           	line	132
 15002                           	
 15003  00203E                     i2l19480:
 15004                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
 15005                           ;	Return value of _ToMainHigh_sendmsg is never used
 15006  00203E  0101               	movlb	1	; () banked
 15007  002040  0E01               	movlw	high(_ToMainHigh_MQ)
 15008  002042  0100               	movlb	0	; () banked
 15009  002044  0100               	movlb	0	; () banked
 15010  002046  6F81               	movwf	((?i2_send_msg+1))&0ffh
 15011  002048  0101               	movlb	1	; () banked
 15012  00204A  0E36               	movlw	low(_ToMainHigh_MQ)
 15013  00204C  0100               	movlb	0	; () banked
 15014  00204E  6F80               	movwf	((?i2_send_msg))&0ffh
 15015  002050  C08B  F082         	movff	(ToMainHigh_sendmsg@length),0+(?i2_send_msg+02h)
 15016  002054  C08C  F083         	movff	(ToMainHigh_sendmsg@msgtype),0+(?i2_send_msg+03h)
 15017  002058  C08D  F084         	movff	(ToMainHigh_sendmsg@data),0+(?i2_send_msg+04h)
 15018  00205C  C08E  F085         	movff	(ToMainHigh_sendmsg@data+1),1+(?i2_send_msg+04h)
 15019  002060  0100               	movlb	0	; () banked
 15020  002062  EC33  F009         	call	i2_send_msg	;wreg free
 15021  002066  D000               	goto	i2l5496
 15022                           	
 15023  002068                     i2l19482:
 15024                           	line	133
 15025                           	
 15026  002068                     i2l5496:
 15027  002068  0012               	return
 15028                           	opt stack 0
 15029                           GLOBAL	__end_of_ToMainHigh_sendmsg
 15030  00206A                     	__end_of_ToMainHigh_sendmsg:
 15031                           	signat	_ToMainHigh_sendmsg,12409
 15032                           	global	_WriteTimer0
 15033                           
 15034 ;; *************** function _WriteTimer0 *****************
 15035 ;; Defined at:
 15036 ;;		line 17 in file "plib/Timers/t0write.c"
 15037 ;; Parameters:    Size  Location     Type
 15038 ;;  timer0          2   51[COMRAM] unsigned int 
 15039 ;; Auto vars:     Size  Location     Type
 15040 ;;  timer           2   53[COMRAM] struct Timers
 15041 ;; Return value:  Size  Location     Type
 15042 ;;		None               void
 15043 ;; Registers used:
 15044 ;;		None
 15045 ;; Tracked objects:
 15046 ;;		On entry : 0/0
 15047 ;;		On exit  : 0/0
 15048 ;;		Unchanged: 0/0
 15049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15050 ;;      Params:         2       0       0       0       0
 15051 ;;      Locals:         2       0       0       0       0
 15052 ;;      Temps:          0       0       0       0       0
 15053 ;;      Totals:         4       0       0       0       0
 15054 ;;Total ram usage:        4 bytes
 15055 ;; Hardware stack levels used:    1
 15056 ;; This function calls:
 15057 ;;		Nothing
 15058 ;; This function is called by:
 15059 ;;		_timer0_int_handler
 15060 ;; This function uses a non-reentrant model
 15061 ;;
 15062                           psect	text51,class=CODE,space=0,reloc=2
 15063                           global __ptext51
 15064  002182                     __ptext51:
 15065                           psect	text51
 15066                           	file	"plib/Timers/t0write.c"
 15067                           	line	17
 15068                           	global	__size_of_WriteTimer0
 15069  0000                     	__size_of_WriteTimer0	equ	__end_of_WriteTimer0-_WriteTimer0
 15070                           	
 15071  002182                     _WriteTimer0:
 15072                           	opt	stack 19
 15073                           	line	20
 15074                           	
 15075  002182                     i2l19100:
 15076  002182  C034  F036         	movff	(c:WriteTimer0@timer0),(c:WriteTimer0@timer)
 15077  002186  C035  F037         	movff	(c:WriteTimer0@timer0+1),(c:WriteTimer0@timer+1)
 15078                           	line	22
 15079  00218A  C037  FFD7         	movff	0+((c:WriteTimer0@timer)+01h),(c:4055)	;volatile
 15080                           	line	23
 15081  00218E  C036  FFD6         	movff	(c:WriteTimer0@timer),(c:4054)	;volatile
 15082                           	line	24
 15083                           	
 15084  002192                     i2l16494:
 15085  002192  0012               	return
 15086                           	opt stack 0
 15087                           GLOBAL	__end_of_WriteTimer0
 15088  002194                     	__end_of_WriteTimer0:
 15089                           	signat	_WriteTimer0,4216
 15090                           	global	i2_in_low_int
 15091                           
 15092 ;; *************** function i2_in_low_int *****************
 15093 ;; Defined at:
 15094 ;;		line 30 in file "../src/interrupts.c"
 15095 ;; Parameters:    Size  Location     Type
 15096 ;;		None
 15097 ;; Auto vars:     Size  Location     Type
 15098 ;;		None
 15099 ;; Return value:  Size  Location     Type
 15100 ;;                  2   53[COMRAM] int 
 15101 ;; Registers used:
 15102 ;;		wreg, status,2, status,0, cstack
 15103 ;; Tracked objects:
 15104 ;;		On entry : 0/0
 15105 ;;		On exit  : 0/0
 15106 ;;		Unchanged: 0/0
 15107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15108 ;;      Params:         2       0       0       0       0
 15109 ;;      Locals:         0       0       0       0       0
 15110 ;;      Temps:          0       0       0       0       0
 15111 ;;      Totals:         2       0       0       0       0
 15112 ;;Total ram usage:        2 bytes
 15113 ;; Hardware stack levels used:    1
 15114 ;; Hardware stack levels required when called:    1
 15115 ;; This function calls:
 15116 ;;		i2_in_high_int
 15117 ;; This function is called by:
 15118 ;;		_SleepIfOkay
 15119 ;; This function uses a non-reentrant model
 15120 ;;
 15121                           psect	text52,class=CODE,space=0,reloc=2
 15122                           global __ptext52
 15123  001DBE                     __ptext52:
 15124                           psect	text52
 15125                           	file	"../src/interrupts.c"
 15126                           	line	30
 15127                           	global	__size_ofi2_in_low_int
 15128  0000                     	__size_ofi2_in_low_int	equ	__end_ofi2_in_low_int-i2_in_low_int
 15129                           	
 15130  001DBE                     i2_in_low_int:
 15131                           	opt	stack 18
 15132                           	line	31
 15133                           	
 15134  001DBE                     i2l19106:
 15135                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
 15136                           	
 15137  001DBE  ACF2               	btfss	((c:4082)),c,6	;volatile
 15138  001DC0  D001               	goto	i2u197_41
 15139  001DC2  D001               	goto	i2u197_40
 15140  001DC4                     i2u197_41:
 15141  001DC4  D007               	goto	i2l19114
 15142  001DC6                     i2u197_40:
 15143                           	line	32
 15144                           	
 15145  001DC6                     i2l19108:
 15146                           ;interrupts.c: 32: return (0);
 15147  001DC6  0E00               	movlw	high(0)
 15148  001DC8  6E37               	movwf	((c:?i2_in_low_int+1)),c
 15149  001DCA  0E00               	movlw	low(0)
 15150  001DCC  6E36               	movwf	((c:?i2_in_low_int)),c
 15151  001DCE  D018               	goto	i2l1809
 15152                           	
 15153  001DD0                     i2l19110:
 15154  001DD0  D017               	goto	i2l1809
 15155                           	line	33
 15156                           	
 15157  001DD2                     i2l19112:
 15158                           ;interrupts.c: 33: } else if (in_high_int()) {
 15159  001DD2  D016               	goto	i2l1809
 15160                           	
 15161  001DD4                     i2l1808:
 15162                           	
 15163  001DD4                     i2l19114:
 15164  001DD4  ECCA  F010         	call	i2_in_high_int	;wreg free
 15165  001DD8  5035               	movf	(1+?i2_in_high_int),c,w
 15166  001DDA  1034               	iorwf (0+?i2_in_high_int),c,w
 15167                           
 15168  001DDC  B4D8               	btfsc	status,2
 15169  001DDE  D001               	goto	i2u198_41
 15170  001DE0  D001               	goto	i2u198_40
 15171  001DE2                     i2u198_41:
 15172  001DE2  D007               	goto	i2l19122
 15173  001DE4                     i2u198_40:
 15174                           	line	34
 15175                           	
 15176  001DE4                     i2l19116:
 15177                           ;interrupts.c: 34: return (0);
 15178  001DE4  0E00               	movlw	high(0)
 15179  001DE6  6E37               	movwf	((c:?i2_in_low_int+1)),c
 15180  001DE8  0E00               	movlw	low(0)
 15181  001DEA  6E36               	movwf	((c:?i2_in_low_int)),c
 15182  001DEC  D009               	goto	i2l1809
 15183                           	
 15184  001DEE                     i2l19118:
 15185  001DEE  D008               	goto	i2l1809
 15186                           	line	35
 15187                           	
 15188  001DF0                     i2l19120:
 15189                           ;interrupts.c: 35: } else {
 15190  001DF0  D007               	goto	i2l1809
 15191                           	
 15192  001DF2                     i2l1811:
 15193                           	line	36
 15194                           	
 15195  001DF2                     i2l19122:
 15196                           ;interrupts.c: 36: return (1);
 15197  001DF2  0E00               	movlw	high(01h)
 15198  001DF4  6E37               	movwf	((c:?i2_in_low_int+1)),c
 15199  001DF6  0E01               	movlw	low(01h)
 15200  001DF8  6E36               	movwf	((c:?i2_in_low_int)),c
 15201  001DFA  D002               	goto	i2l1809
 15202                           	
 15203  001DFC                     i2l19124:
 15204  001DFC  D001               	goto	i2l1809
 15205                           	line	37
 15206                           	
 15207  001DFE                     i2l1812:
 15208  001DFE  D000               	goto	i2l1809
 15209                           	
 15210  001E00                     i2l1810:
 15211                           	line	38
 15212                           	
 15213  001E00                     i2l1809:
 15214  001E00  0012               	return
 15215                           	opt stack 0
 15216                           GLOBAL	__end_ofi2_in_low_int
 15217  001E02                     	__end_ofi2_in_low_int:
 15218                           	signat	i2_in_low_int,90
 15219                           	global	i2_in_high_int
 15220                           
 15221 ;; *************** function i2_in_high_int *****************
 15222 ;; Defined at:
 15223 ;;		line 22 in file "../src/interrupts.c"
 15224 ;; Parameters:    Size  Location     Type
 15225 ;;		None
 15226 ;; Auto vars:     Size  Location     Type
 15227 ;;		None
 15228 ;; Return value:  Size  Location     Type
 15229 ;;                  2   51[COMRAM] int 
 15230 ;; Registers used:
 15231 ;;		wreg, status,2
 15232 ;; Tracked objects:
 15233 ;;		On entry : 0/0
 15234 ;;		On exit  : 0/0
 15235 ;;		Unchanged: 0/0
 15236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15237 ;;      Params:         2       0       0       0       0
 15238 ;;      Locals:         0       0       0       0       0
 15239 ;;      Temps:          0       0       0       0       0
 15240 ;;      Totals:         2       0       0       0       0
 15241 ;;Total ram usage:        2 bytes
 15242 ;; Hardware stack levels used:    1
 15243 ;; This function calls:
 15244 ;;		Nothing
 15245 ;; This function is called by:
 15246 ;;		_SleepIfOkay
 15247 ;;		i2_in_low_int
 15248 ;; This function uses a non-reentrant model
 15249 ;;
 15250                           psect	text53,class=CODE,space=0,reloc=2
 15251                           global __ptext53
 15252  002194                     __ptext53:
 15253                           psect	text53
 15254                           	file	"../src/interrupts.c"
 15255                           	line	22
 15256                           	global	__size_ofi2_in_high_int
 15257  0000                     	__size_ofi2_in_high_int	equ	__end_ofi2_in_high_int-i2_in_high_int
 15258                           	
 15259  002194                     i2_in_high_int:
 15260                           	opt	stack 19
 15261                           	line	23
 15262                           	
 15263  002194                     i2l19102:
 15264                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
 15265                           	
 15266  002194  0E00               	movlw	0
 15267  002196  AEF2               	btfss	((c:4082)),c,7	;volatile
 15268  002198  0E01               	movlw	1
 15269  00219A  6E34               	movwf	((c:?i2_in_high_int)),c
 15270  00219C  6A35               	clrf	((c:?i2_in_high_int+1)),c
 15271  00219E  D000               	goto	i2l1802
 15272                           	
 15273  0021A0                     i2l19104:
 15274                           	line	24
 15275                           	
 15276  0021A0                     i2l1802:
 15277  0021A0  0012               	return
 15278                           	opt stack 0
 15279                           GLOBAL	__end_ofi2_in_high_int
 15280  0021A2                     	__end_ofi2_in_high_int:
 15281                           	signat	i2_in_high_int,90
 15282                           	global	i2_send_msg
 15283                           
 15284 ;; *************** function i2_send_msg *****************
 15285 ;; Defined at:
 15286 ;;		line 24 in file "../src/messages.c"
 15287 ;; Parameters:    Size  Location     Type
 15288 ;;  send_msg        2    0[BANK0 ] PTR struct __msg_queue
 15289 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 15290 ;;  send_msg        1    2[BANK0 ] unsigned char 
 15291 ;;  send_msg        1    3[BANK0 ] unsigned char 
 15292 ;;  send_msg        2    4[BANK0 ] PTR void 
 15293 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), i2c_slave_int_handler@error
       _buf(3), 
 15294 ;;		 -> NULL(0), main@msgbuffer(11), main@ic(29), main@uc(5), 
 15295 ;; Auto vars:     Size  Location     Type
 15296 ;;  send_msg        2    9[BANK0 ] PTR struct __msg
 15297 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 15298 ;;  send_msg        2    6[BANK0 ] unsigned int 
 15299 ;;  send_msg        1    8[BANK0 ] unsigned char 
 15300 ;; Return value:  Size  Location     Type
 15301 ;;                  1    wreg      char 
 15302 ;; Registers used:
 15303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15304 ;; Tracked objects:
 15305 ;;		On entry : 0/0
 15306 ;;		On exit  : 0/0
 15307 ;;		Unchanged: 0/0
 15308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15309 ;;      Params:         0       6       0       0       0
 15310 ;;      Locals:         0       5       0       0       0
 15311 ;;      Temps:          1       0       0       0       0
 15312 ;;      Totals:         1      11       0       0       0
 15313 ;;Total ram usage:       12 bytes
 15314 ;; Hardware stack levels used:    1
 15315 ;; Hardware stack levels required when called:    1
 15316 ;; This function calls:
 15317 ;;		i2_memcpy
 15318 ;; This function is called by:
 15319 ;;		_ToMainHigh_sendmsg
 15320 ;; This function uses a non-reentrant model
 15321 ;;
 15322                           psect	text54,class=CODE,space=0,reloc=2
 15323                           global __ptext54
 15324  001266                     __ptext54:
 15325                           psect	text54
 15326                           	file	"../src/messages.c"
 15327                           	global	__size_ofi2_send_msg
 15328  0000                     	__size_ofi2_send_msg	equ	__end_ofi2_send_msg-i2_send_msg
 15329                           	
 15330  001266                     i2_send_msg:
 15331                           	opt	stack 17
 15332                           	line	28
 15333                           	
 15334  001266                     i2l19752:
 15335                           ;messages.c: 25: unsigned char slot;
 15336                           ;messages.c: 27: msg *qmsg;
 15337                           ;messages.c: 28: size_t tlength = length;
 15338  001266  0100               	movlb	0	; () banked
 15339  001268  0100               	movlb	0	; () banked
 15340  00126A  C082  F086         	movff	(i2send_msg@length),(i2send_msg@tlength)
 15341  00126E  0100               	movlb	0	; () banked
 15342  001270  0100               	movlb	0	; () banked
 15343  001272  6B87               	clrf	((i2send_msg@tlength+1))&0ffh
 15344                           	line	38
 15345                           	
 15346  001274                     i2l19754:; BSR set to: 0
 15347                           
 15348                           ;messages.c: 38: slot = qptr->cur_write_ind;
 15349  001274  0100               	movlb	0	; () banked
 15350  001276  EE20 F034          	lfsr	2,034h
 15351  00127A  0100               	movlb	0	; () banked
 15352  00127C  5180               	movf	((i2send_msg@qptr))&0ffh,w
 15353  00127E  26D9               	addwf	fsr2l
 15354  001280  0100               	movlb	0	; () banked
 15355  001282  5181               	movf	((i2send_msg@qptr+1))&0ffh,w
 15356  001284  22DA               	addwfc	fsr2h
 15357  001286  50DF               	movf	indf2,w
 15358  001288  0100               	movlb	0	; () banked
 15359  00128A  0100               	movlb	0	; () banked
 15360  00128C  6F88               	movwf	((i2send_msg@slot))&0ffh
 15361                           	line	39
 15362                           	
 15363  00128E                     i2l19756:; BSR set to: 0
 15364                           
 15365                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
 15366  00128E  0100               	movlb	0	; () banked
 15367  001290  0100               	movlb	0	; () banked
 15368  001292  5188               	movf	((i2send_msg@slot))&0ffh,w
 15369  001294  0D0D               	mullw	0Dh
 15370  001296  50F3               	movf	(prodl),c,w
 15371  001298  0100               	movlb	0	; () banked
 15372  00129A  0100               	movlb	0	; () banked
 15373  00129C  2580               	addwf	((i2send_msg@qptr))&0ffh,w
 15374  00129E  0100               	movlb	0	; () banked
 15375                           	
 15376  0012A0  0100               	movlb	0	; () banked
 15377  0012A2  6F89               	movwf	((i2send_msg@qmsg))&0ffh
 15378  0012A4  50F4               	movf	(prodh),c,w
 15379  0012A6  0100               	movlb	0	; () banked
 15380  0012A8  0100               	movlb	0	; () banked
 15381  0012AA  2181               	addwfc	((i2send_msg@qptr+1))&0ffh,w
 15382  0012AC  0100               	movlb	0	; () banked
 15383  0012AE  6F8A               	movwf	1+((i2send_msg@qmsg))&0ffh
 15384                           	line	41
 15385                           	
 15386  0012B0                     i2l19758:; BSR set to: 0
 15387                           
 15388                           ;messages.c: 41: if (qmsg->full != 0) {
 15389  0012B0  C089  FFD9         	movff	(i2send_msg@qmsg),fsr2l
 15390  0012B4  C08A  FFDA         	movff	(i2send_msg@qmsg+1),fsr2h
 15391  0012B8  50DF               	movf	indf2,w
 15392  0012BA  B4D8               	btfsc	status,2
 15393  0012BC  D001               	goto	i2u257_41
 15394  0012BE  D001               	goto	i2u257_40
 15395  0012C0                     i2u257_41:
 15396  0012C0  D003               	goto	i2l19764
 15397  0012C2                     i2u257_40:
 15398                           	line	42
 15399                           	
 15400  0012C2                     i2l19760:; BSR set to: 0
 15401                           
 15402                           ;messages.c: 42: return (-1);
 15403  0012C2  0EFF               	movlw	(-1)&0ffh
 15404  0012C4  D04C               	goto	i2l5477
 15405                           	
 15406  0012C6                     i2l19762:; BSR set to: 0
 15407                           
 15408  0012C6  D04B               	goto	i2l5477
 15409                           	line	43
 15410                           	
 15411  0012C8                     i2l5476:; BSR set to: 0
 15412                           
 15413                           	line	46
 15414                           	
 15415  0012C8                     i2l19764:; BSR set to: 0
 15416                           
 15417                           ;messages.c: 43: }
 15418                           ;messages.c: 46: qmsg->length = length;
 15419  0012C8  0100               	movlb	0	; () banked
 15420  0012CA  EE20 F001          	lfsr	2,01h
 15421  0012CE  0100               	movlb	0	; () banked
 15422  0012D0  5189               	movf	((i2send_msg@qmsg))&0ffh,w
 15423  0012D2  26D9               	addwf	fsr2l
 15424  0012D4  0100               	movlb	0	; () banked
 15425  0012D6  518A               	movf	((i2send_msg@qmsg+1))&0ffh,w
 15426  0012D8  22DA               	addwfc	fsr2h
 15427  0012DA  0100               	movlb	0	; () banked
 15428  0012DC  C082  FFDF         	movff	(i2send_msg@length),indf2
 15429                           
 15430                           	line	47
 15431                           ;messages.c: 47: qmsg->msgtype = msgtype;
 15432  0012E0  0100               	movlb	0	; () banked
 15433  0012E2  EE20 F002          	lfsr	2,02h
 15434  0012E6  0100               	movlb	0	; () banked
 15435  0012E8  5189               	movf	((i2send_msg@qmsg))&0ffh,w
 15436  0012EA  26D9               	addwf	fsr2l
 15437  0012EC  0100               	movlb	0	; () banked
 15438  0012EE  518A               	movf	((i2send_msg@qmsg+1))&0ffh,w
 15439  0012F0  22DA               	addwfc	fsr2h
 15440  0012F2  0100               	movlb	0	; () banked
 15441  0012F4  C083  FFDF         	movff	(i2send_msg@msgtype),indf2
 15442                           
 15443                           	line	55
 15444                           	
 15445  0012F8                     i2l19766:; BSR set to: 0
 15446                           
 15447                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
 15448  0012F8  0E03               	movlw	low(03h)
 15449  0012FA  0100               	movlb	0	; () banked
 15450  0012FC  0100               	movlb	0	; () banked
 15451  0012FE  2589               	addwf	((i2send_msg@qmsg))&0ffh,w
 15452                           	
 15453  001300  6E34               	movwf	((c:?i2_memcpy)),c
 15454  001302  0E00               	movlw	high(03h)
 15455  001304  0100               	movlb	0	; () banked
 15456  001306  0100               	movlb	0	; () banked
 15457  001308  218A               	addwfc	((i2send_msg@qmsg+1))&0ffh,w
 15458  00130A  6E35               	movwf	1+((c:?i2_memcpy)),c
 15459  00130C  C084  F036         	movff	(i2send_msg@data),0+((c:?i2_memcpy)+02h)
 15460  001310  C085  F037         	movff	(i2send_msg@data+1),1+((c:?i2_memcpy)+02h)
 15461  001314  C086  F038         	movff	(i2send_msg@tlength),0+((c:?i2_memcpy)+04h)
 15462  001318  C087  F039         	movff	(i2send_msg@tlength+1),1+((c:?i2_memcpy)+04h)
 15463  00131C  ECBB  F00E         	call	i2_memcpy	;wreg free
 15464                           	line	56
 15465                           	
 15466  001320                     i2l19768:
 15467                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
 15468  001320  0100               	movlb	0	; () banked
 15469  001322  EE20 F034          	lfsr	2,034h
 15470  001326  0100               	movlb	0	; () banked
 15471  001328  5180               	movf	((i2send_msg@qptr))&0ffh,w
 15472  00132A  26D9               	addwf	fsr2l
 15473  00132C  0100               	movlb	0	; () banked
 15474  00132E  5181               	movf	((i2send_msg@qptr+1))&0ffh,w
 15475  001330  22DA               	addwfc	fsr2h
 15476  001332  0100               	movlb	0	; () banked
 15477  001334  EE10 F034          	lfsr	1,034h
 15478  001338  0100               	movlb	0	; () banked
 15479  00133A  5180               	movf	((i2send_msg@qptr))&0ffh,w
 15480  00133C  26E1               	addwf	fsr1l
 15481  00133E  0100               	movlb	0	; () banked
 15482  001340  5181               	movf	((i2send_msg@qptr+1))&0ffh,w
 15483  001342  22E2               	addwfc	fsr1h
 15484  001344  50E7               	movf	indf1,w
 15485  001346  6E3E               	movwf	(??i2_send_msg+0+0)&0ffh,c
 15486  001348  283E               	incf	((??i2_send_msg+0+0)),c,w
 15487  00134A  0B03               	andlw	low(03h)
 15488  00134C  6EDF               	movwf	indf2
 15489                           
 15490                           	line	59
 15491                           	
 15492  00134E                     i2l19770:; BSR set to: 0
 15493                           
 15494                           ;messages.c: 59: qmsg->full = 1;
 15495  00134E  C089  FFD9         	movff	(i2send_msg@qmsg),fsr2l
 15496  001352  C08A  FFDA         	movff	(i2send_msg@qmsg+1),fsr2h
 15497  001356  0E01               	movlw	low(01h)
 15498  001358  6EDF               	movwf	indf2
 15499                           	line	60
 15500                           	
 15501  00135A                     i2l19772:; BSR set to: 0
 15502                           
 15503                           ;messages.c: 60: return (1);
 15504  00135A  0E01               	movlw	(01h)&0ffh
 15505  00135C  D000               	goto	i2l5477
 15506                           	
 15507  00135E                     i2l19774:; BSR set to: 0
 15508                           
 15509                           	line	61
 15510                           	
 15511  00135E                     i2l5477:; BSR set to: 0
 15512                           
 15513  00135E  0012               	return
 15514                           	opt stack 0
 15515                           GLOBAL	__end_ofi2_send_msg
 15516  001360                     	__end_ofi2_send_msg:
 15517                           	signat	i2_send_msg,89
 15518                           	global	i2_recv_msg
 15519                           
 15520 ;; *************** function i2_recv_msg *****************
 15521 ;; Defined at:
 15522 ;;		line 63 in file "../src/messages.c"
 15523 ;; Parameters:    Size  Location     Type
 15524 ;;  recv_msg        2    0[BANK0 ] PTR struct __msg_queue
 15525 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 15526 ;;  recv_msg        1    2[BANK0 ] unsigned char 
 15527 ;;  recv_msg        2    3[BANK0 ] PTR unsigned char 
 15528 ;;		 -> RAM(1023), i2c_slave_int_handler@msgtype(1), main@msgtype(1), 
 15529 ;;  recv_msg        2    5[BANK0 ] PTR void 
 15530 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@data(10), main@msgbuffer(11), 
 15531 ;; Auto vars:     Size  Location     Type
 15532 ;;  recv_msg        2   10[BANK0 ] PTR struct __msg
 15533 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 15534 ;;  recv_msg        2    8[BANK0 ] unsigned int 
 15535 ;;  recv_msg        1    7[BANK0 ] unsigned char 
 15536 ;; Return value:  Size  Location     Type
 15537 ;;                  1    wreg      char 
 15538 ;; Registers used:
 15539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15540 ;; Tracked objects:
 15541 ;;		On entry : 0/0
 15542 ;;		On exit  : 0/0
 15543 ;;		Unchanged: 0/0
 15544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15545 ;;      Params:         0       7       0       0       0
 15546 ;;      Locals:         0       5       0       0       0
 15547 ;;      Temps:          2       0       0       0       0
 15548 ;;      Totals:         2      12       0       0       0
 15549 ;;Total ram usage:       14 bytes
 15550 ;; Hardware stack levels used:    1
 15551 ;; Hardware stack levels required when called:    1
 15552 ;; This function calls:
 15553 ;;		i2_memcpy
 15554 ;; This function is called by:
 15555 ;;		_FromMainLow_recvmsg
 15556 ;;		_FromMainHigh_recvmsg
 15557 ;; This function uses a non-reentrant model
 15558 ;;
 15559                           psect	text55,class=CODE,space=0,reloc=2
 15560                           global __ptext55
 15561  00102E                     __ptext55:
 15562                           psect	text55
 15563                           	file	"../src/messages.c"
 15564                           	line	63
 15565                           	global	__size_ofi2_recv_msg
 15566  0000                     	__size_ofi2_recv_msg	equ	__end_ofi2_recv_msg-i2_recv_msg
 15567                           	
 15568  00102E                     i2_recv_msg:; BSR set to: 0
 15569                           
 15570                           	opt	stack 17
 15571                           	line	72
 15572                           	
 15573  00102E                     i2l19776:
 15574                           ;messages.c: 64: unsigned char slot;
 15575                           ;messages.c: 68: msg *qmsg;
 15576                           ;messages.c: 69: size_t tlength;
 15577                           ;messages.c: 72: slot = qptr->cur_read_ind;
 15578  00102E  0100               	movlb	0	; () banked
 15579  001030  EE20 F035          	lfsr	2,035h
 15580  001034  0100               	movlb	0	; () banked
 15581  001036  5180               	movf	((i2recv_msg@qptr))&0ffh,w
 15582  001038  26D9               	addwf	fsr2l
 15583  00103A  0100               	movlb	0	; () banked
 15584  00103C  5181               	movf	((i2recv_msg@qptr+1))&0ffh,w
 15585  00103E  22DA               	addwfc	fsr2h
 15586  001040  50DF               	movf	indf2,w
 15587  001042  0100               	movlb	0	; () banked
 15588  001044  0100               	movlb	0	; () banked
 15589  001046  6F87               	movwf	((i2recv_msg@slot))&0ffh
 15590                           	line	73
 15591                           	
 15592  001048                     i2l19778:; BSR set to: 0
 15593                           
 15594                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
 15595  001048  0100               	movlb	0	; () banked
 15596  00104A  0100               	movlb	0	; () banked
 15597  00104C  5187               	movf	((i2recv_msg@slot))&0ffh,w
 15598  00104E  0D0D               	mullw	0Dh
 15599  001050  50F3               	movf	(prodl),c,w
 15600  001052  0100               	movlb	0	; () banked
 15601  001054  0100               	movlb	0	; () banked
 15602  001056  2580               	addwf	((i2recv_msg@qptr))&0ffh,w
 15603  001058  0100               	movlb	0	; () banked
 15604                           	
 15605  00105A  0100               	movlb	0	; () banked
 15606  00105C  6F8A               	movwf	((i2recv_msg@qmsg))&0ffh
 15607  00105E  50F4               	movf	(prodh),c,w
 15608  001060  0100               	movlb	0	; () banked
 15609  001062  0100               	movlb	0	; () banked
 15610  001064  2181               	addwfc	((i2recv_msg@qptr+1))&0ffh,w
 15611  001066  0100               	movlb	0	; () banked
 15612  001068  6F8B               	movwf	1+((i2recv_msg@qmsg))&0ffh
 15613                           	line	74
 15614                           	
 15615  00106A                     i2l19780:; BSR set to: 0
 15616                           
 15617                           ;messages.c: 74: if (qmsg->full == 1) {
 15618  00106A  0E01               	movlw	(01h)&0ffh
 15619  00106C  C08A  FFD9         	movff	(i2recv_msg@qmsg),fsr2l
 15620  001070  C08B  FFDA         	movff	(i2recv_msg@qmsg+1),fsr2h
 15621  001074  62DF               	cpfseq	indf2
 15622  001076  D001               	goto	i2u258_41
 15623  001078  D001               	goto	i2u258_40
 15624  00107A                     i2u258_41:
 15625  00107A  D06E               	goto	i2l19804
 15626  00107C                     i2u258_40:
 15627                           	line	76
 15628                           	
 15629  00107C                     i2l19782:; BSR set to: 0
 15630                           
 15631                           ;messages.c: 76: if (qmsg->length > maxlength) {
 15632  00107C  0100               	movlb	0	; () banked
 15633  00107E  EE20 F001          	lfsr	2,01h
 15634  001082  0100               	movlb	0	; () banked
 15635  001084  518A               	movf	((i2recv_msg@qmsg))&0ffh,w
 15636  001086  26D9               	addwf	fsr2l
 15637  001088  0100               	movlb	0	; () banked
 15638  00108A  518B               	movf	((i2recv_msg@qmsg+1))&0ffh,w
 15639  00108C  22DA               	addwfc	fsr2h
 15640  00108E  50DF               	movf	indf2,w
 15641  001090  0100               	movlb	0	; () banked
 15642  001092  0100               	movlb	0	; () banked
 15643  001094  6182               	cpfslt	((i2recv_msg@maxlength))&0ffh
 15644  001096  D001               	goto	i2u259_41
 15645  001098  D001               	goto	i2u259_40
 15646  00109A                     i2u259_41:
 15647  00109A  D003               	goto	i2l19788
 15648  00109C                     i2u259_40:
 15649                           	line	77
 15650                           	
 15651  00109C                     i2l19784:; BSR set to: 0
 15652                           
 15653                           ;messages.c: 77: return (-3);
 15654  00109C  0EFD               	movlw	(-3)&0ffh
 15655  00109E  D05F               	goto	i2l5482
 15656                           	
 15657  0010A0                     i2l19786:; BSR set to: 0
 15658                           
 15659  0010A0  D05E               	goto	i2l5482
 15660                           	line	78
 15661                           	
 15662  0010A2                     i2l5481:; BSR set to: 0
 15663                           
 15664                           	line	80
 15665                           	
 15666  0010A2                     i2l19788:; BSR set to: 0
 15667                           
 15668                           ;messages.c: 78: }
 15669                           ;messages.c: 80: tlength = qmsg->length;
 15670  0010A2  0100               	movlb	0	; () banked
 15671  0010A4  EE20 F001          	lfsr	2,01h
 15672  0010A8  0100               	movlb	0	; () banked
 15673  0010AA  518A               	movf	((i2recv_msg@qmsg))&0ffh,w
 15674  0010AC  26D9               	addwf	fsr2l
 15675  0010AE  0100               	movlb	0	; () banked
 15676  0010B0  518B               	movf	((i2recv_msg@qmsg+1))&0ffh,w
 15677  0010B2  22DA               	addwfc	fsr2h
 15678  0010B4  50DF               	movf	indf2,w
 15679  0010B6  6E3E               	movwf	(??i2_recv_msg+0+0)&0ffh,c
 15680  0010B8  503E               	movf	((??i2_recv_msg+0+0)),c,w
 15681  0010BA  0100               	movlb	0	; () banked
 15682  0010BC  0100               	movlb	0	; () banked
 15683  0010BE  6F88               	movwf	((i2recv_msg@tlength))&0ffh
 15684  0010C0  0100               	movlb	0	; () banked
 15685  0010C2  6B89               	clrf	((i2recv_msg@tlength+1))&0ffh
 15686                           	line	81
 15687                           	
 15688  0010C4                     i2l19790:; BSR set to: 0
 15689                           
 15690                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
 15691  0010C4  C085  F034         	movff	(i2recv_msg@data),(c:?i2_memcpy)
 15692  0010C8  C086  F035         	movff	(i2recv_msg@data+1),(c:?i2_memcpy+1)
 15693  0010CC  0E03               	movlw	03h
 15694  0010CE  0100               	movlb	0	; () banked
 15695  0010D0  0100               	movlb	0	; () banked
 15696  0010D2  258A               	addwf	((i2recv_msg@qmsg))&0ffh,w
 15697  0010D4  6E3E               	movwf	(??i2_recv_msg+0+0)&0ffh,c
 15698  0010D6  0E00               	movlw	0
 15699  0010D8  0100               	movlb	0	; () banked
 15700  0010DA  0100               	movlb	0	; () banked
 15701  0010DC  218B               	addwfc	((i2recv_msg@qmsg+1))&0ffh,w
 15702  0010DE  6E3F               	movwf	(??i2_recv_msg+0+0+1)&0ffh,c
 15703  0010E0  C03E  F036         	movff	??i2_recv_msg+0+0,0+((c:?i2_memcpy)+02h)
 15704  0010E4  C03F  F037         	movff	??i2_recv_msg+0+1,1+((c:?i2_memcpy)+02h)
 15705  0010E8  C088  F038         	movff	(i2recv_msg@tlength),0+((c:?i2_memcpy)+04h)
 15706  0010EC  C089  F039         	movff	(i2recv_msg@tlength+1),1+((c:?i2_memcpy)+04h)
 15707  0010F0  ECBB  F00E         	call	i2_memcpy	;wreg free
 15708                           	line	87
 15709                           	
 15710  0010F4                     i2l19792:
 15711                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
 15712  0010F4  0100               	movlb	0	; () banked
 15713  0010F6  EE20 F035          	lfsr	2,035h
 15714  0010FA  0100               	movlb	0	; () banked
 15715  0010FC  5180               	movf	((i2recv_msg@qptr))&0ffh,w
 15716  0010FE  26D9               	addwf	fsr2l
 15717  001100  0100               	movlb	0	; () banked
 15718  001102  5181               	movf	((i2recv_msg@qptr+1))&0ffh,w
 15719  001104  22DA               	addwfc	fsr2h
 15720  001106  0100               	movlb	0	; () banked
 15721  001108  EE10 F035          	lfsr	1,035h
 15722  00110C  0100               	movlb	0	; () banked
 15723  00110E  5180               	movf	((i2recv_msg@qptr))&0ffh,w
 15724  001110  26E1               	addwf	fsr1l
 15725  001112  0100               	movlb	0	; () banked
 15726  001114  5181               	movf	((i2recv_msg@qptr+1))&0ffh,w
 15727  001116  22E2               	addwfc	fsr1h
 15728  001118  50E7               	movf	indf1,w
 15729  00111A  6E3E               	movwf	(??i2_recv_msg+0+0)&0ffh,c
 15730  00111C  283E               	incf	((??i2_recv_msg+0+0)),c,w
 15731  00111E  0B03               	andlw	low(03h)
 15732  001120  6EDF               	movwf	indf2
 15733                           
 15734                           	line	89
 15735                           	
 15736  001122                     i2l19794:; BSR set to: 0
 15737                           
 15738                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
 15739  001122  0100               	movlb	0	; () banked
 15740  001124  EE20 F002          	lfsr	2,02h
 15741  001128  0100               	movlb	0	; () banked
 15742  00112A  518A               	movf	((i2recv_msg@qmsg))&0ffh,w
 15743  00112C  26D9               	addwf	fsr2l
 15744  00112E  0100               	movlb	0	; () banked
 15745  001130  518B               	movf	((i2recv_msg@qmsg+1))&0ffh,w
 15746  001132  22DA               	addwfc	fsr2h
 15747  001134  C083  FFE1         	movff	(i2recv_msg@msgtype),fsr1l
 15748  001138  C084  FFE2         	movff	(i2recv_msg@msgtype+1),fsr1h
 15749  00113C  CFDF FFE7          	movff	indf2,indf1
 15750                           	line	91
 15751                           	
 15752  001140                     i2l19796:; BSR set to: 0
 15753                           
 15754                           ;messages.c: 91: qmsg->full = 0;
 15755  001140  C08A  FFD9         	movff	(i2recv_msg@qmsg),fsr2l
 15756  001144  C08B  FFDA         	movff	(i2recv_msg@qmsg+1),fsr2h
 15757  001148  0E00               	movlw	low(0)
 15758  00114A  6EDF               	movwf	indf2
 15759                           	line	92
 15760                           	
 15761  00114C                     i2l19798:; BSR set to: 0
 15762                           
 15763                           ;messages.c: 92: return (tlength);
 15764  00114C  0100               	movlb	0	; () banked
 15765  00114E  0100               	movlb	0	; () banked
 15766  001150  5188               	movf	((i2recv_msg@tlength))&0ffh,w
 15767  001152  D005               	goto	i2l5482
 15768                           	
 15769  001154                     i2l19800:; BSR set to: 0
 15770                           
 15771  001154  D004               	goto	i2l5482
 15772                           	line	93
 15773                           	
 15774  001156                     i2l19802:; BSR set to: 0
 15775                           
 15776                           ;messages.c: 93: } else {
 15777  001156  D003               	goto	i2l5482
 15778                           	
 15779  001158                     i2l5480:; BSR set to: 0
 15780                           
 15781                           	line	94
 15782                           	
 15783  001158                     i2l19804:; BSR set to: 0
 15784                           
 15785                           ;messages.c: 94: return (-4);
 15786  001158  0EFC               	movlw	(-4)&0ffh
 15787  00115A  D001               	goto	i2l5482
 15788                           	
 15789  00115C                     i2l19806:; BSR set to: 0
 15790                           
 15791  00115C  D000               	goto	i2l5482
 15792                           	line	95
 15793                           	
 15794  00115E                     i2l5483:; BSR set to: 0
 15795                           
 15796                           	line	96
 15797                           	
 15798  00115E                     i2l5482:; BSR set to: 0
 15799                           
 15800  00115E  0012               	return
 15801                           	opt stack 0
 15802                           GLOBAL	__end_ofi2_recv_msg
 15803  001160                     	__end_ofi2_recv_msg:
 15804                           	signat	i2_recv_msg,89
 15805                           	global	i2_check_msg
 15806                           
 15807 ;; *************** function i2_check_msg *****************
 15808 ;; Defined at:
 15809 ;;		line 222 in file "../src/messages.c"
 15810 ;; Parameters:    Size  Location     Type
 15811 ;;  check_msg       2   51[COMRAM] PTR struct __msg_queue
 15812 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 15813 ;; Auto vars:     Size  Location     Type
 15814 ;;		None
 15815 ;; Return value:  Size  Location     Type
 15816 ;;                  1    wreg      unsigned char 
 15817 ;; Registers used:
 15818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15819 ;; Tracked objects:
 15820 ;;		On entry : 0/0
 15821 ;;		On exit  : 0/0
 15822 ;;		Unchanged: 0/0
 15823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15824 ;;      Params:         2       0       0       0       0
 15825 ;;      Locals:         0       0       0       0       0
 15826 ;;      Temps:          1       0       0       0       0
 15827 ;;      Totals:         3       0       0       0       0
 15828 ;;Total ram usage:        3 bytes
 15829 ;; Hardware stack levels used:    1
 15830 ;; This function calls:
 15831 ;;		Nothing
 15832 ;; This function is called by:
 15833 ;;		_SleepIfOkay
 15834 ;; This function uses a non-reentrant model
 15835 ;;
 15836                           psect	text56,class=CODE,space=0,reloc=2
 15837                           global __ptext56
 15838  0020B6                     __ptext56:
 15839                           psect	text56
 15840                           	file	"../src/messages.c"
 15841                           	line	222
 15842                           	global	__size_ofi2_check_msg
 15843  0000                     	__size_ofi2_check_msg	equ	__end_ofi2_check_msg-i2_check_msg
 15844                           	
 15845  0020B6                     i2_check_msg:; BSR set to: 0
 15846                           
 15847                           	opt	stack 19
 15848                           	line	223
 15849                           	
 15850  0020B6                     i2l19182:
 15851                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
 15852  0020B6  EE20 F035          	lfsr	2,035h
 15853  0020BA  5034               	movf	((c:i2check_msg@qptr)),c,w
 15854  0020BC  26D9               	addwf	fsr2l
 15855  0020BE  5035               	movf	((c:i2check_msg@qptr+1)),c,w
 15856  0020C0  22DA               	addwfc	fsr2h
 15857  0020C2  50DF               	movf	indf2,w
 15858  0020C4  6E36               	movwf	(??i2_check_msg+0+0)&0ffh,c
 15859  0020C6  5036               	movf	((??i2_check_msg+0+0)),c,w
 15860  0020C8  0D0D               	mullw	0Dh
 15861  0020CA  50F3               	movf	(prodl),c,w
 15862  0020CC  2434               	addwf	((c:i2check_msg@qptr)),c,w
 15863  0020CE  6ED9               	movwf	c:fsr2l
 15864  0020D0  50F4               	movf	(prodh),c,w
 15865  0020D2  2035               	addwfc	((c:i2check_msg@qptr+1)),c,w
 15866  0020D4  6EDA               	movwf	1+c:fsr2l
 15867  0020D6  50DF               	movf	indf2,w
 15868  0020D8  D000               	goto	i2l5526
 15869                           	
 15870  0020DA                     i2l19184:
 15871                           	line	224
 15872                           	
 15873  0020DA                     i2l5526:
 15874  0020DA  0012               	return
 15875                           	opt stack 0
 15876                           GLOBAL	__end_ofi2_check_msg
 15877  0020DC                     	__end_ofi2_check_msg:
 15878                           	signat	i2_check_msg,89
 15879                           	global	i2_memcpy
 15880                           
 15881 ;; *************** function i2_memcpy *****************
 15882 ;; Defined at:
 15883 ;;		line 13 in file "/opt/microchip/xc8/v1.10/sources/memcpy.c"
 15884 ;; Parameters:    Size  Location     Type
 15885 ;;  memcpy          2   51[COMRAM] PTR void 
 15886 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
 15887 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
 15888 ;;  memcpy          2   53[COMRAM] PTR const void 
 15889 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), i2c_slave_int_handler@error
       _buf(3), 
 15890 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 15891 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@ic(29), main@uc(5), 
 15892 ;;  memcpy          2   55[COMRAM] unsigned int 
 15893 ;; Auto vars:     Size  Location     Type
 15894 ;;  memcpy          2   59[COMRAM] PTR const unsigned char 
 15895 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), i2c_slave_int_handler@error
       _buf(3), 
 15896 ;;		 -> NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 15897 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@ic(29), main@uc(5), 
 15898 ;;  memcpy          2   57[COMRAM] PTR unsigned char 
 15899 ;;		 -> timer0_int_handler@val(2), i2c_slave_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
 15900 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
 15901 ;; Return value:  Size  Location     Type
 15902 ;;                  2   51[COMRAM] PTR void 
 15903 ;; Registers used:
 15904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 15905 ;; Tracked objects:
 15906 ;;		On entry : 0/0
 15907 ;;		On exit  : 0/0
 15908 ;;		Unchanged: 0/0
 15909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 15910 ;;      Params:         6       0       0       0       0
 15911 ;;      Locals:         4       0       0       0       0
 15912 ;;      Temps:          0       0       0       0       0
 15913 ;;      Totals:        10       0       0       0       0
 15914 ;;Total ram usage:       10 bytes
 15915 ;; Hardware stack levels used:    1
 15916 ;; This function calls:
 15917 ;;		Nothing
 15918 ;; This function is called by:
 15919 ;;		i2_send_msg
 15920 ;;		i2_recv_msg
 15921 ;; This function uses a non-reentrant model
 15922 ;;
 15923                           psect	text57,class=CODE,space=0,reloc=2
 15924                           global __ptext57
 15925  001D76                     __ptext57:
 15926                           psect	text57
 15927                           	file	"/opt/microchip/xc8/v1.10/sources/memcpy.c"
 15928                           	line	13
 15929                           	global	__size_ofi2_memcpy
 15930  0000                     	__size_ofi2_memcpy	equ	__end_ofi2_memcpy-i2_memcpy
 15931                           	
 15932  001D76                     i2_memcpy:
 15933                           	opt	stack 17
 15934                           	line	24
 15935                           	
 15936  001D76                     i2l19808:
 15937  001D76  C036  F03C         	movff	(c:i2memcpy@s1),(c:i2memcpy@s)
 15938  001D7A  C037  F03D         	movff	(c:i2memcpy@s1+1),(c:i2memcpy@s+1)
 15939                           	line	25
 15940  001D7E  C034  F03A         	movff	(c:i2memcpy@d1),(c:i2memcpy@d)
 15941  001D82  C035  F03B         	movff	(c:i2memcpy@d1+1),(c:i2memcpy@d+1)
 15942                           	line	26
 15943  001D86  D00F               	goto	i2l19816
 15944                           	
 15945  001D88                     i2l17092:
 15946                           	line	27
 15947                           	
 15948  001D88                     i2l19810:
 15949  001D88  C03C  FFD9         	movff	(c:i2memcpy@s),fsr2l
 15950  001D8C  C03D  FFDA         	movff	(c:i2memcpy@s+1),fsr2h
 15951  001D90  C03A  FFE1         	movff	(c:i2memcpy@d),fsr1l
 15952  001D94  C03B  FFE2         	movff	(c:i2memcpy@d+1),fsr1h
 15953  001D98  CFDF FFE7          	movff	indf2,indf1
 15954                           	
 15955  001D9C                     i2l19812:
 15956  001D9C  4A3C               	infsnz	((c:i2memcpy@s)),c
 15957  001D9E  2A3D               	incf	((c:i2memcpy@s+1)),c
 15958                           	
 15959  001DA0                     i2l19814:
 15960  001DA0  4A3A               	infsnz	((c:i2memcpy@d)),c
 15961  001DA2  2A3B               	incf	((c:i2memcpy@d+1)),c
 15962  001DA4  D000               	goto	i2l19816
 15963                           	
 15964  001DA6                     i2l17091:
 15965                           	line	26
 15966                           	
 15967  001DA6                     i2l19816:
 15968  001DA6  0638               	decf	((c:i2memcpy@n)),c
 15969  001DA8  A0D8               	btfss	status,0
 15970  001DAA  0639               	decf	((c:i2memcpy@n+1)),c
 15971  001DAC  2838               	incf	((c:i2memcpy@n))&0ffh,w
 15972  001DAE  B4D8               	btfsc	status,2
 15973  001DB0  2839               	incf ((c:i2memcpy@n+1))&0ffh,w
 15974                           
 15975  001DB2  A4D8               	btfss	status,2
 15976  001DB4  D001               	goto	i2u260_41
 15977  001DB6  D001               	goto	i2u260_40
 15978  001DB8                     i2u260_41:
 15979  001DB8  D7E7               	goto	i2l19810
 15980  001DBA                     i2u260_40:
 15981  001DBA  D000               	goto	i2l17094
 15982                           	
 15983  001DBC                     i2l17093:
 15984                           	line	32
 15985                           ;	Return value of i2_memcpy is never used
 15986                           	
 15987  001DBC                     i2l17094:
 15988  001DBC  0012               	return
 15989                           	opt stack 0
 15990                           GLOBAL	__end_ofi2_memcpy
 15991  001DBE                     	__end_ofi2_memcpy:
 15992                           	signat	i2_memcpy,90
 15993                           	GLOBAL	__activetblptr
 15994  0000                     __activetblptr	EQU	0
 15995                           	psect	intsave_regs,class=BIGRAM,space=1
 15996                           psect	text58,class=CODE,space=0,reloc=2
 15997                           global __ptext58
 15998  000000                     __ptext58:
 15999                           	PSECT	rparam,class=COMRAM,space=1
 16000                           	GLOBAL	__Lrparam
 16001                           	FNCONF	rparam,??,?
 16002                           GLOBAL	__Lparam, __Hparam
 16003                           GLOBAL	__Lrparam, __Hrparam
 16004  0000                     __Lparam	EQU	__Lrparam
 16005  0000                     __Hparam	EQU	__Hrparam


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         224
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     65      75
    BANK0           128     69      71
    BANK1           256     72     234
    BANK2           256      0      54
    BANK3           256      0       0

Pointer List with Targets:

    ?_ReadTimer1	unsigned int  size(2) Largest target is 2
		 -> WriteTimer1@timer(COMRAM[2]), ReadTimer1@timer(COMRAM[2]), 

    ?_ReadADC	int  size(2) Largest target is 0

    ?_memcpy	PTR void  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@data(BANK0[10]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    ?_in_high_int	int  size(2) Largest target is 0

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@data(BANK0[10]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@data(BANK0[10]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@error_buf(BANK0[3]), 
		 -> NULL(NULL[0]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), main@ic(BANK1[29]), main@uc(BANK1[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@error_buf(BANK0[3]), 
		 -> NULL(NULL[0]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), main@ic(BANK1[29]), main@uc(BANK1[5]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 29
		 -> main@ic(BANK1[29]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 10
		 -> i2c_slave_int_handler@empty(BANK0[4]), i2c_slave_int_handler@data(BANK0[10]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 29
		 -> NULL(NULL[0]), main@ic(BANK1[29]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1023
		 -> RAM(DATA[1023]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 10
		 -> i2c_slave_int_handler@data(BANK0[10]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> i2c_slave_int_handler@msgtype(BANK0[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 29
		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@error_buf(BANK0[3]), NULL(NULL[0]), main@ic(BANK1[29]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), NULL(NULL[0]), main@uc(BANK1[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1023
		 -> RAM(DATA[1023]), i2c_slave_int_handler@msgtype(BANK0[1]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@data(BANK0[10]), main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@data(BANK0[10]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 29
		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), timer0_int_handler@val(BANK0[2]), i2c_slave_int_handler@error_buf(BANK0[3]), 
		 -> NULL(NULL[0]), main@msgbuffer(BANK1[11]), main@ic(BANK1[29]), main@uc(BANK1[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_timer0_int_handler
    _i2c_int_handler->_i2c_slave_int_handler
    _SleepIfOkay->i2_in_low_int
    _FromMainHigh_recvmsg->i2_recv_msg
    _FromMainLow_recvmsg->i2_recv_msg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_in_low_int->i2_in_high_int
    i2_send_msg->i2_memcpy
    i2_recv_msg->i2_memcpy
    _InterruptHandlerLow->_adc_int_handler
    _timer1_int_handler->_ToMainLow_sendmsg
    _adc_int_handler->_ToMainLow_sendmsg
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _init_timer1_lthread->_OpenADC
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainHigh_recvmsg->_recv_msg
    _ToMainLow_recvmsg->_recv_msg
    _FromMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _i2c_int_handler->_i2c_slave_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    _FromMainHigh_recvmsg->i2_recv_msg
    _i2c_slave_int_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i2_recv_msg
    _i2c_master_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg

Critical Paths under _main in BANK1

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _ToMainHigh_recvmsg->_recv_msg
    _ToMainLow_recvmsg->_recv_msg
    _FromMainLow_sendmsg->_send_msg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                57    57      0    4921
                                             17 BANK1     55    55      0
                     _init_uart_recv
                           _init_i2c
                _init_timer1_lthread
                        _init_queues
                         _OpenTimer1
                  _enable_interrupts
                _i2c_configure_slave
                          _OpenUSART
              _block_on_To_msgqueues
                 _ToMainHigh_recvmsg
                     _timer0_lthread
                  _ToMainLow_recvmsg
                     _timer1_lthread
                _FromMainLow_sendmsg
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      22
                                             57 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      22
                                             57 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  5     3      2     198
                                             62 BANK0      5     3      2
                            _OpenADC
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     134
                                             61 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     0      1      66
                                             57 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  2     1      1      22
                                             57 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            3     0      3     220
                                             57 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0      66
                                             63 BANK0      1     1      0
                            _in_main
                          _check_msg
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             61 BANK0      2     0      2
                         _in_low_int
                        _in_high_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             59 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (3) _in_high_int                                          2     0      2       0
                                             57 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     0      5     772
                                             12 BANK1      5     0      5
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8      23
                                             57 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     0      5     772
                                             12 BANK1      5     0      5
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8      44
                                             57 BANK0     10     2      8
                         _ConvertADC
 ---------------------------------------------------------------------------------
 (1) _FromMainLow_sendmsg                                  4     0      4     741
                                             11 BANK1      4     0      4
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8      88
                                             57 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     134
                                             57 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _send_msg                                            12     6      6     648
                                             67 BANK0      1     1      0
                                              0 BANK1     11     5      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7     679
                                             67 BANK0      2     2      0
                                              0 BANK1     12     5      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     174
                                             57 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2      44
                                             57 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     0      1      22
                                             57 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     2      3     154
                                             57 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _SetChanADC                                           2     1      1      22
                                             57 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    4981
                                             34 COMRAM    17    17      0
                 _timer1_int_handler
                    _adc_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   6     6      0    1688
                                             26 COMRAM     6     6      0
                         _ReadTimer1
                        _WriteTimer1
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (6) _adc_int_handler                                      8     8      0    1708
                                             26 COMRAM     8     8      0
                            _ReadADC
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                2     2      0    1585
                                             26 COMRAM     2     2      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     0      4    1562
                                             22 COMRAM     4     0      4
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      45
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ReadADC                                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    1496
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     395
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0   11139
                                             43 BANK0     14    14      0
                    _i2c_int_handler
                 _timer0_int_handler
                        _SleepIfOkay
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                     0     0      0    6847
              _i2c_slave_int_handler
             _i2c_master_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  8     8      0    4146
                                             63 COMRAM     2     2      0
                                             17 BANK0      6     6      0
                        _WriteTimer0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     146
                       i2_in_low_int
                      i2_in_high_int
                        i2_check_msg
                   _enter_sleep_mode
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     0      5    2000
                                             12 BANK0      5     0      5
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _i2c_slave_int_handler                              28    28      0    4935
                                             63 COMRAM     2     2      0
                                             17 BANK0     26    26      0
                       _handle_start
                _FromMainLow_recvmsg
              _start_i2c_slave_reply
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (13) _FromMainLow_recvmsg                                 5     0      5    2000
                                             12 BANK0      5     0      5
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) _start_i2c_slave_reply                               5     2      3      66
                                             51 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     0      1      22
                                             51 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (12) _i2c_master_int_handler                              2     2      0    1912
                                             62 COMRAM     2     2      0
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     0      4    1912
                                             11 BANK0      4     0      4
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2      68
                                             51 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             53 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (12) i2_in_high_int                                       2     0      2       0
                                             51 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    1819
                                             61 COMRAM     1     1      0
                                              0 BANK0     11     5      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    1907
                                             61 COMRAM     2     2      0
                                              0 BANK0     12     5      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     146
                                             51 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     484
                                             51 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_uart_recv
   _init_i2c
   _init_timer1_lthread
     _OpenADC
     _SetChanADC
   _init_queues
     _init_queue
   _OpenTimer1
   _enable_interrupts
   _i2c_configure_slave
   _OpenUSART
   _block_on_To_msgqueues
     _in_main
       _in_low_int
         _in_high_int
       _in_high_int
     _check_msg
     _Delay1KTCYx
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _timer0_lthread
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _timer1_lthread
     _ConvertADC
   _FromMainLow_sendmsg
     _send_msg
       _memcpy
   _uart_lthread

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _WriteTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _adc_int_handler
     _ReadADC
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      36       8       21.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100     48      EA       6       91.4%
BITBANK0            80      0       0       3        0.0%
BANK0               80     45      47       4       55.5%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     41      4B       1       59.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0      24       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B2      11        0.0%
DATA                 0      0     1D6      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.10 build 47796 
Symbol Table                                                                                   Tue Oct  2 06:08:06 2012

                        _STKPTRbits 000FFC                    main@uthread_data 01BF  
          _MQ_Main_Willing_to_block 0045                         _SSPSTATbits 000FC7  
                                _DA 007E3D                                  _BF 007E38  
                                _DC 007EC1                                  _CK 007C16  
                                _P2 007C3C                                  _S2 007C3B  
                                _CS 007C22                                  _DT 007C17  
                                _GO 007E11                                  _PC 000FF9  
                                _PD 007E82                                  _RD 007C20  
                                _UA 007E39                                  _RI 007E84  
                                _OV 007EC3                                  _TO 007E83  
                                _RW 007E3A                                  _RX 007C17  
                                _WR 007D31                                  _TX 007C16  
         __end_of_ToMainLow_recvmsg 1FB2                                  bsr 000FE0  
         __end_of_ToMainLow_sendmsg 2100                        __CFG_CP0$OFF 000000  
                 i2recv_msg@msgtype 0083                   i2recv_msg@tlength 0088  
              ?_FromMainLow_recvmsg 008C                                 _DA1 007E3D  
                               _DA2 007C3D                                 _BF1 007E38  
                               _BF2 007C38                                 _AN0 007C00  
                               _AN1 007C01                                 _AN2 007C02  
                               _AN3 007C03                                 _AN4 007C05  
                               _AN5 007C20                                 _CM0 007DA0  
                               _AN6 007C21                                 _CM1 007DA1  
                               _AN7 007C22                                 _CM2 007DA2  
                               _AN8 007C0A                                 _AN9 007C0B  
                               _LA0 007C48                                 _P1A 007C12  
                               _LA1 007C49                                 _P1B 007C1D  
                               _LB0 007C50                                 _LA2 007C4A  
                               _P1C 007C1E                                 _LB1 007C51  
                               _LA3 007C4B                                 _P1D 007C1F  
                               _LC0 007C58                                 _LB2 007C52  
                               _LA4 007C4C                                 _LC1 007C59  
                               _LB3 007C53                                 _LA5 007C4D  
                               _CKE 007E3E                ?_FromMainLow_sendmsg 01AD  
                               _LD0 007C60                                 _LC2 007C5A  
                               _LB4 007C54                                 _LA6 007C4E  
                               _LD1 007C61                                 _LC3 007C5B  
                               _LB5 007C55                                 _LA7 007C4F  
                               _LE0 007C68                                 _LD2 007C62  
                               _LC4 007C5C                                 _LB6 007C56  
                               _LE1 007C69                                 _LD3 007C63  
                               _LC5 007C5D                                 _LB7 007C57  
                               _LE2 007C6A                                 _LD4 007C64  
                               _LC6 007C5E                                 _LE3 007C6B  
                               _LD5 007C65                                 _LC7 007C5F  
                               _LE4 007C6C                                 _LD6 007C66  
                               _IBF 007CB7                                 _LE5 007C6D  
                               _LD7 007C67                                 _LE6 007C6E  
                               _LE7 007C6F                                 _CIS 007DA3  
                               _CKP 007E34                                 _PA1 007C12  
                               _GIE 007F97                                 _PA2 007C11  
                               _PB2 007C22                                 _PC2 007C21  
                               _BOR 007E80                                 _RA0 007C00  
                               _PD2 007C20                                 _RA1 007C01  
                               _RB0 007C08                                 _RA2 007C02  
                               _RB1 007C09                                 _RA3 007C03  
                               _RC0 007C10                                 _RB2 007C0A  
                               _RA4 007C04                                 _RC1 007C11  
                               _RB3 007C0B                                 _RA5 007C05  
                               _RD0 007C18                                 _RC2 007C12  
                               _RB4 007C0C                                 _RA6 007C06  
                               _BSR 000FE0                                 _RD1 007C19  
                               _RC3 007C13                                 _RB5 007C0D  
                               _RA7 007C07                                 _RE0 007C20  
                               _RD2 007C1A                                 _RC4 007C14  
                               _RB6 007C0E                                 _RE1 007C21  
                               _RD3 007C1B                                 _RC5 007C15  
                               _RB7 007C0F                                 _RE2 007C22  
                               _RD4 007C1C                                 _RC6 007C16  
                               _RE3 007CB3                                 _RD5 007C1D  
                               _RC7 007C17                                 _RE4 007C24  
                               _RD6 007C1E                                 _OBF 007CB6  
                               _UA1 007E39                                 _RE5 007C25  
                               _RD7 007C1F                                 _RC9 007D5E  
                               _UA2 007C39                                 _RE6 007C26  
                               _W4E 007DC1                                 _RE7 007C27  
                               _PGC 007C0E                                 _PGD 007C0F  
                               _PCL 000FF9                                 _SDA 007C14  
                               _RDE 007C20                                 _PR2 000FCB  
                               _PEN 007E2A                                 _SDI 007C14  
                               _SCK 007C13                                 _SCL 007C13  
                               _SS1 007C05                                 _SDO 007C15  
                               _SS2 007C1B                                 _SEN 007E28  
                               _RW1 007E3A                                 _PSA 007EAB  
                               _RW2 007C3A                                 _POR 007E81  
                               _RX9 007D5E                                 _SMP 007E3F  
                               _TX9 007D66                                 _TOS 000FFD  
                               _WRE 007C21                                 _WUE 007DC1  
                               _nA2 007C3D                                 _nCS 007C22  
                               _nW2 007C3A                                 _nPD 007E82  
              __size_of_WriteTimer0 0012                __size_of_WriteTimer1 0012  
                               _nRD 007C20                                 _nRI 007E84  
                               _nTO 007E83                                 _nWR 007C21  
                    _FromMainLow_MQ 0100                                 wreg 000FE8  
         i2c_slave_int_handler@data 0091                          _TXSTA1bits 000FAC  
                      __CFG_IESO$ON 000000                        ?_in_high_int 00B9  
                  ??_init_uart_recv 00BB        i2c_slave_int_handler@msgtype 00A7  
                   ReadTimer1@timer 0003                 i2recv_msg@maxlength 0082  
                              l1802 2148                                l1810 1B9E  
                              l1811 1B8A                                l1812 1B9C  
                              l1815 1BE4                                l1808 1B5E  
                              l1816 1BF6                                l1809 1B9E  
                              l1817 1BF6                                _AN10 007C09  
                              _AN11 007C0C                                _AN12 007C08  
                              l3650 0CFE                                l3651 0DA6  
                              l3660 0D6E                                l3652 0D00  
                              l3661 0D70                                l3653 0D02  
                              l3645 0CA6                                l3670 0E70  
                              l3662 0DFA                                l3654 0D04  
                              l3646 0CFC                                l1799 21BE  
                              l3671 0EC0                                l3663 0DF8  
                              l3655 0D54                                l3647 0CFA  
                              l5504 203C                                l5520 1ADC  
                              l3672 0EE8                                l3664 0EE6  
                              l3648 0DA8                                l3656 0D54  
                              l3673 0EEA                                l3665 0EC4  
                              l3649 0D74                                l3657 0D5A  
                              l3674 0EEA                                l3666 0DFC  
                              l3658 0D60                                l3667 0EE4  
                              l3659 0D5C                                l5540 13C0  
                              l3668 0E4C                                l5541 13F4  
                              l3669 0E6E                                l5526 1EB4  
                              l5542 1430                                l5471 193E  
                              l5543 1432                                l5480 1026  
                              l5472 1974                                l5481 0F62  
                              l5473 1974                                l5537 137C  
                              l5482 102C                                l5538 1432  
                              l5483 102C                                l5491 1FB0  
                              l5539 138C                                l5476 11C2  
                              l5477 1264                                _ADIE 007CEE  
                              _ADIF 007CF6                                _ADEN 007D5B  
                              _ADFM 007E07                                l5499 1F80  
                              l7460 1CE4                                _CCP1 007C12  
                              l7463 1F20                                _ADIP 007CFE  
                              _CKE1 007E3E                                l9264 2134  
                              _CKE2 007C3E                                _ADON 007E10  
                              _P1M0 007DEE                                _CHS0 007E12  
                              _P1M1 007DEF                                _CHS1 007E13  
                              _CHS2 007E14                                _CHS3 007E15  
                              _CKP1 007E34                                _DDRA 000F92  
                              _CKP2 007C34                                _DDRB 000F93  
                              _DDRC 000F94                                _DDRD 000F95  
                              _DDRE 000F96                                _GCEN 007E2F  
                              _KBI0 007C0C                                _KBI1 007C0D  
                              _CMIE 007D06                                _KBI2 007C0E  
                              _CMIF 007D0E                                _KBI3 007C0F  
                              _PA2E 007C27                                _GIEH 007F97  
                              _CMIP 007D16                                _BRGH 007D62  
                              _PB1E 007C26                                _GIEL 007F96  
                              _PC1E 007C25                                _PB3E 007C24  
                              _T0IE 007F95                                _PC3E 007C23  
                              _T0IF 007F92                                _RD16 007E6F  
                              _FLT0 007C08                                _CREN 007D5C  
                              _T0CS 007EAD                                _FERR 007D5A  
                              u1100 1B4A                                u1101 1B48  
                              _DONE 007E11                                u1110 1B76  
                              u1111 1B74                                u1120 1BB8  
                              u1121 1BB6                                u1130 1BD0  
                              _T0IP 007F8A                                u1131 1BCE  
                              u1300 15EA                                _IBOV 007CB5  
                              _CVR0 007DA8                                u1301 15E8  
                              _CVR1 007DA9                                u1310 15FC  
                              _PDC0 007DB8                                _CVR2 007DAA  
                              u1311 15FA                                _PDC1 007DB9  
                              _FREE 007D34                                _CVR3 007DAB  
                              u2200 0F5C                                u1400 1414  
                              u1320 160C                                _PDC2 007DBA  
                              u2201 0F5A                                u1401 1410  
                              u1321 160A                                _PDC3 007DBB  
                              u1410 1C60                                u1330 161A  
                              u1250 1E18                                _PDC4 007DBC  
                              u1411 1C5E                                u1331 1618  
                              u1251 1E16                                _T0SE 007EAC  
                              _PDC5 007DBD                                _CSRC 007D67  
                              u1420 1C76                                u1340 162E  
                              u1260 1E36                                _PDC6 007DBE  
                              u1421 1C74                                u1341 162C  
                              u1261 1E34                                _LATA 000F89  
                              u1430 193A                                u1406 1416  
                              u1350 1650                                u1270 15BE  
                              u2150 0CF6                                _LATB 000F8A  
                              u1431 1938                                u1351 164E  
                              u1271 15BC                                u2151 0CF4  
                              _LATC 000F8B                                u1440 1972  
                              u1360 1658                                u1280 15CC  
                              u2160 0DF4                                _D_A2 007C3D  
                              _LATD 000F8C                                _FSR0 000FE9  
                              u1441 1970                                u1361 1656  
                              u1281 15CA                                u2161 0DF2  
                              _LATE 000F8D                                _FSR1 000FE1  
                              u2170 11BC                                u1370 1378  
                              u1290 15DC                                _FSR2 000FD9  
                              u2171 11BA                                u1371 1376  
                              u1291 15DA                                u2180 1C4A  
                              u1380 13AE                                u2181 1C48  
                              u1381 13AC                                u2190 0F3C  
                              u1390 13E2                                u2191 0F3A  
                              u1391 13E0                                _INT0 007C08  
                              _INT1 007C09                                _INT2 007C0A  
                              _SDA1 007C14                                _SDA2 007C19  
                              _RCD8 007D58                                _IPR1 000F9F  
                              _IPR2 000FA2                                _PIE1 000F9D  
                              _IPR3 000FA5                                _IPEN 007E87  
                              _PIE2 000FA0                                u2617 214C  
                              _PEN1 007E2A                                _PIE3 000FA3  
                              _PEN2 007C2A                                _CVRR 007DAD  
                              u1960 19F0                                u1961 19EE  
                              _SDI1 007C14                                _SCK1 007C13  
                              _PEIE 007F96                                _SDI2 007C19  
                              _SCK2 007C18                                _SCL1 007C13  
                              _SCL2 007C18                                _RBIE 007F93  
                              _RBIF 007F90                                _RCIE 007CED  
                              _RCIF 007CF5                                _RCEN 007E2B  
                              _SDO1 007C15                                _SDO2 007C1A  
                              _SEN1 007E28                                _PIR1 000F9E  
                              _SEN2 007C28                                _SCS0 007E98  
                              _RBIP 007F88                                _MSK0 007E40  
                              _PIR2 000FA1                                _SCS1 007E99  
                              _MSK1 007E41                                _PIR3 000FA4  
                              _MSK2 007E42                                _MSK3 007E43  
                              _RCIP 007CFD                                _MSK4 007E44  
                              _MSK5 007E45                                _MSK6 007E46  
                              _MSK7 007E47                                _OERR 007D59  
                              _RCON 000FD0                                _SCKP 007DC4  
                              _RCMT 007DC6                                _RBPU 007F8F  
                              _RX91 007D5E                                _PSP0 007C18  
                              _SMP1 007E3F                                _PSP1 007C19  
                              _SMP2 007C3F                                _PSP2 007C1A  
                              _PSP3 007C1B                                _PSP4 007C1C  
                              _PSP5 007C1D                                _PSP6 007C1E  
                              _TX91 007D66                                _PSP7 007C1F  
                              _RX9D 007D58                                _TMR0 000FD6  
                              _TMR1 000FCE                                _TMR2 000FCC  
                              _PROD 000FF3                                _RJPU 007C07  
                              _WCOL 007E37                                _SPEN 007D5F  
                              _RSEN 007E29                                _TX9D 007D60  
                              _SREN 007D5D                                _OSTS 007E9B  
                              _TXD8 007D60                                _TOSH 000FFE  
                              _TOSL 000FFD                                _WREG 000FE8  
                              _TRMT 007D61                                _STOP 007E3C  
                              _ZERO 007EC2                                _TXIE 007CEC  
                              _TOSU 000FFF                                _WREN 007D32  
                              _TXIF 007CF4                                _TXEN 007D65  
                              _SYNC 007D64                                _TXIP 007CFC  
                              _R_W2 007C3A                     _FromMainHigh_MQ 0200  
                              _nBOR 007E80                       __CFG_FCMEN$ON 000000  
                              _nRC8 007D5E                                _nSS1 007C05  
                              _nSS2 007C1B                                _nPOR 007E81  
                              _nTX8 007D66              ?_block_on_To_msgqueues 0001  
                              _main 0BDC                                fsr0h 000FEA  
                              fsr1h 000FE2                                fsr0l 000FE9  
                              fsr2h 000FDA                                indf1 000FE7  
                              fsr1l 000FE1                                indf2 000FDF  
                              fsr2l 000FD9                         main@msgtype 01CC  
                        i1_send_msg 165E                                pclat 000FFA  
                       i2_check_msg 20B6                                prodh 000FF4  
                              prodl 000FF3               handle_start@data_read 0034  
                              start 00D2                          i2_recv_msg 102E  
                     __CFG_FOSC2$ON 000000                    ?_adc_int_handler 0001  
        i2c_slave_int_handler@empty 009B                          i2_send_msg 1266  
         ToMainHigh_recvmsg@msgtype 01AF                        _ECCP1DELbits 000FB7  
                   __end_of_ReadADC 21AE                        _ECCP1CONbits 000FBD  
                    send_msg@length 01A4                     __end_of_OpenADC 19FA  
       __size_of_timer0_int_handler 00B0             ??_i2c_slave_int_handler 0040  
                       _Delay1KTCYx 214A                               l11054 21B6  
             ??_FromMainLow_recvmsg 0040                               l12850 208E  
                             l12847 1B40                               l14640 1C9A  
                             l14637 1C64                               l14638 1C9A  
                             l16510 1E20                               l14639 1C98  
                             l16511 1E3A                               l16512 1E3C  
                             l16513 1E3E                               l17091 1C30  
                             l17156 214A                               l17092 1C0A  
                             l17157 215C                               l17093 1C4C  
                             l16509 1E1C                               l17158 215C  
                             l17094 1C4C                               l16550 15C0  
                             _C1INV 007DA4                               l16455 21C8  
                             l16551 15D0                               l16472 19F6  
                             l16560 1634                               l16552 15DE  
                             _DC1B0 007DEC                               l16473 19F8  
                             l16561 165C                               l16553 15EE  
                             _DC1B1 007DED                               l18330 1B4A  
                             l16562 165C                               l16554 15F0  
                             l18322 21B8                               l16555 15FE  
                             l18324 2136                               l18340 1B86  
                             l18332 1B5A                               l16556 160E  
                             l18500 1AC4                               _DC2B0 007DD4  
                             l16485 211A                               l16557 161E  
                             _DC2B1 007DD5                               l18326 2148  
                             l18342 1B88                               l18334 1B5C  
                             l18350 1BB8                               l16558 1620  
                             l18510 1E28                               l18502 1E02  
                             _C2INV 007DA5                               l16559 1632  
                             l18344 1B8A                               l18336 1B5E  
                             l18328 1B42                               l18360 1BF4  
                             l18352 1BD0                               l18520 1F00  
                             l18512 1E2A                               l18504 1E0C  
                             l19400 0EC4                               l19090 19AA  
                             l19410 2012                               l18610 206A  
                             l19402 1F52                               l18346 1B9A  
                             l18338 1B76                               l18354 1BE0  
                             l18530 1F12                               l18522 1F02  
                             l18514 1E36                               l18506 1E18  
                             l19330 0BE2                               l19092 19E4  
                             l19084 1976                               l19420 11AA  
                             l18620 1C62                               l19412 203C  
                             l18612 208A                               l18604 21AE  
                             l19404 1F80                               l18356 1BE2  
                             l18348 1BA0                               l18540 15B2  
                             l18532 1F18                               l18524 1F06  
                             l18516 1EEE                               l18508 1E20  
                             l19340 0C32                               l19332 0BFA  
                             l19094 19F0                               l19086 197E  
                             l19430 1222                               l19422 11BC  
                             l19414 1160                               l18630 192C  
                             l18622 1C64                               l19406 1F82  
                             l18358 1BE4                               l18550 15FC  
                             l18542 15BE                               l18534 1F1A  
                             l18526 1F0A                               l18518 1EFE  
                             l19350 0C46                               l19342 0C36  
                             l19334 0C12                               l19326 0BDC  
                             l19096 2100                               l19088 198A  
                             l19440 1C0A                               l19432 1254  
                             l19424 11C0                               l19416 116E  
                             l18632 193C                               l18624 1C76  
                             l19408 1FB0                               l18560 1640  
                             l18552 160C                               l18544 15CC  
                             l18536 1F1C                               l18528 1F0E  
                             l18480 1CA4                               l19360 0C66  
                             l19352 0C5C                               l19344 0C3A  
                             l19336 0C2A                               l19328 0BE0  
                             l19098 21C6                               l18730 2152  
                             l19442 1C1E                               l19450 0F08  
                             l19434 1260                               l19426 11C2  
                             l19418 1188                               l18634 193E  
                             l18626 18F0                               l18618 1C4E  
                             l18570 1650                               l18562 1642  
                             l18554 161A                               l18546 15DC  
                             l18538 15AA                               l18490 1B30  
                             l18482 1ADE                               l18474 211C  
                             l19370 0CAA                               l19362 0C68  
                             l19354 0C60                               l19346 0C3E  
                             l19338 0C2E                               l18724 1E7E  
                             l19444 1C26                               l19460 0F62  
                             l19452 0F2A                               l19436 1264  
                             l19428 11F2                               l18636 195E  
                             l18628 191C                               l18580 138C  
                             l18572 1658                               l18564 1644  
                             l18556 162E                               l18548 15EA  
                             l18492 1A70                               l18484 1B2A  
                             l18476 2124                               l19380 0D60  
                             l19372 0CEA                               l19364 0C7E  
                             l19356 0C62                               l19348 0C42  
                             l18726 1EB4                               l19446 1C30  
                             l19438 1BF8                               l19470 101A  
                             l19462 0F88                               l19454 0F3C  
                             l18638 1964                               l18590 13E2  
                             l18582 13AE                               l18574 1360  
                             l18566 1646                               l18558 1638  
                             l18494 1A7C                               l18486 1B2C  
                             l18478 1C9C                               l19390 0DF6  
                             l19382 0D72                               l19374 0CF8  
                             l19366 0C80                               l19358 0C64  
                             l18728 214A                               l19472 1022  
                             l19464 0FBE                               l19456 0F5C  
                             l19448 0EEE                               l18592 13EE  
                             l18584 13BA                               l18576 137A  
                             l18568 1648                               l18496 1A94  
                             l18488 1B2E                               l19392 0DFC  
                             l19376 0D04                               l19384 0D74  
                             l19368 0CA6                               l19474 1024  
                             l19466 0FF0                               l19458 0F60  
                             l18594 13F2                               l18586 13BE  
                             l18578 137E                               l18498 1AAC  
                             l19394 0E4C                               l19378 0D5E  
                             l19386 0DA8                               l19468 100E  
                             l19476 1026                               l18596 13F4  
                             l18588 13C0                               l19396 0E70  
                             l19388 0DE8                               l19478 102A  
                             l18598 140A                               l19398 0EC2  
                             _C1OUT 007DA6                               _C2OUT 007DA7  
                             _ABDEN 007DC0                               _ADCAL 007E17  
                             _ADCS0 007E00                               _ADCS1 007E01  
                             _ADCS2 007E02               ??_FromMainLow_sendmsg 00C4  
                             _ADDEN 007D5B                               _CCP10 007C22  
                             ?_main 0001                               _ACKEN 007E2C  
                             _ACKDT 007E2D                               _CCP2E 007C27  
                             _CCP6E 007C26                               _CCP7E 007C25  
                             _CCP8E 007C24                               _CCP9E 007C23  
                             _BCLIE 007D03                               _BCLIF 007D0B  
                             _CCP1X 007DED                               _CCP1Y 007DEC  
                             _CCP2X 007DD5                               _ACQT0 007E03  
                             _CCP2Y 007DD4                               _ACQT1 007E04  
                             _ACQT2 007E05                               _BCLIP 007D13  
                             _ADRES 000FC3                               _CCPR1 000FBE  
                             _CCPR2 000FBB                               _BRG16 007DC3  
                             _GCEN1 007E2F                               _GCEN2 007C2F  
                             _CMEN0 007DA0                               _CMEN1 007DA1  
                             _CMEN2 007DA2                               _CARRY 007EC0  
                             _CHSN3 007E0B                               _BRGH1 007D62  
                             _CMCON 000FB4                               _CREN1 007D5C  
                             _FERR1 007D5A                               _T0CKI 007C0D  
                             _T1CKI 007C10                               _IDLEN 007E9F  
                             _T0CON 000FD5                               _T1CON 000FCD  
                             _CSRC1 007D67                               _T2CON 000FCA  
                             _LATA0 007C48                               _LATA1 007C49  
                             _LATB0 007C50                               _LATA2 007C4A  
                             _INDF0 000FEF                               _LATB1 007C51  
                             _LATA3 007C4B                               _INDF1 000FE7  
                             _LATC0 007C58                               _LATB2 007C52  
                             _INDF2 000FDF                               _LATC1 007C59  
                             _LATB3 007C53                               _LATA5 007C4D  
                             _LATD0 007C60                               _LATC2 007C5A  
                             _LATB4 007C54                               _LATD1 007C61  
                             _LATC3 007C5B                               _LATB5 007C55  
                             _LATA7 007C4F                               _LATE0 007C68  
                             _LATD2 007C62                               _LATC4 007C5C  
                             _LATB6 007C56                               _RC1IE 007CED  
                             _LATE1 007C69                               _LATD3 007C63  
                             _LATC5 007C5D                               _LATB7 007C57  
                             _RC1IF 007CF5                               _LATE2 007C6A  
                             _LATD4 007C64                               _LATC6 007C5E  
                             _LATD5 007C65                               _LATC7 007C5F  
                             _T0PS0 007EA8                               _LATD6 007C66  
                             _T0PS1 007EA9                               _LATD7 007C67  
                             _T0PS2 007EAA                               _RC1IP 007CFD  
                             _FSR0H 000FEA                               _FSR1H 000FE2  
                             _FSR2H 000FDA                               _FSR0L 000FE9  
                             _PCFG0 007E08                               _FSR1L 000FE1  
                             _PCFG1 007E09                               _PCFG2 007E0A  
                             _FSR2L 000FD9                               _PCFG3 007E0B  
                             _T1OSI 007C11                               _INT0E 007F94  
                             _INT0F 007F91                               _INT1E 007F83  
                             _INT1F 007F80                               _CVREF 007C02  
                             _T1OSO 007C10                               _INT2E 007F84  
                             _INT2F 007F81                               _CVREN 007DAF  
                             _INT1P 007F86                               _INT2P 007F87  
                             _T1RUN 007E6E                               _CVROE 007DAE  
                             _RC8_9 007D5E                               _RCEN1 007E2B  
                        i1memcpy@d1 0001                               _RCEN2 007C2B  
                             _PCLAT 000FF9                               _CVRSS 007DAC  
                             _MSK01 007E40                               _MSK02 007C40  
                             _MSK11 007E41                               _MSK12 007C41  
                             _MSK21 007E42                               _MSK22 007C42  
                             _MSK31 007E43                               _MSK32 007C43  
                             _MSK41 007E44                               _MSK42 007C44  
                             _MSK51 007E45                               _RCIDL 007DC6  
                             _MSK52 007C45                               _MSK61 007E46  
                             _MSK62 007C46                               _MSK71 007E47  
                             _MSK72 007C47                               _OERR1 007D59  
                        i1memcpy@s1 0003         FromMainHigh_recvmsg@msgtype 008D  
                             _VCFG0 007E0C                               _VCFG1 007E0D  
                             _RCREG 000FAE                               _SENDB 007D63  
                             _LVDIN 007C05                               _PLLEN 007CDE  
                             _RCSTA 000FAB                               _RX9D1 007D58  
                             _WCOL1 007E37                               _WCOL2 007C37  
                             _SPEN1 007D5F                               _TMR0H 000FD7  
                             _RSEN1 007E29                               _RSEN2 007C29  
                             _TMR1H 000FCF                               _TX1IE 007CEC  
                             _TX1IF 007CF4                               _TMR0L 000FD6  
                             _PRODH 000FF4                               _TX9D1 007D60  
                             _TMR1L 000FCE                               _PRODL 000FF3  
                             _SREN1 007D5D                               _SPBRG 000FAF  
                             _D_nA2 007C3D                               _TX1IP 007CFC  
                             _NOT_A 007E3D                               _PORTA 000F80  
                             _PORTB 000F81                               _PORTC 000F82  
                             _PORTD 000F83                               _PORTE 000F84  
                             _PSPIE 007CEF                               _PSPIF 007CF7  
                             _SRENA 007D5D                               _PRSEN 007DBF  
                             _PSPIP 007CFF                               _NOT_W 007E3A  
                             _START 007E3B                               _SSPM0 007E30  
                             _SSPM1 007E31                               _SSPM2 007E32  
                             _SSPM3 007E33                               _TX8_9 007D66  
                             _TRISA 000F92                               _TRISB 000F93  
                             _VREFM 007C02                               _TRMT1 007D61  
                             _STOP1 007E3C                               _TRISC 000F94  
                             _STOP2 007C3C                               _TRISD 000F95  
                             _SSPIE 007CEB                               _TRISE 000F96  
                             _VREFP 007C03                               _SSPIF 007CF3  
                             _SSPEN 007E35                               _TXEN1 007D65  
                             _SWDTE 007E88                               _SYNC1 007D64  
                             _SSPIP 007CFB                               _SSPOV 007E36  
                             _WRERR 007D33                               _TXREG 000FAD  
                             _TXSTA 000FAC                               _R_nW2 007C3A  
                        i2memcpy@d1 0034                               _nDONE 007E11  
                        i2memcpy@s1 0036                        ?_init_queues 0001  
                             _nRBPU 007F8F           __size_of_enter_sleep_mode 0006  
                   __end_of_in_main 1BF8                               _errno 0042  
        ToMainLow_recvmsg@maxlength 01AE             timer0_lthread@msgbuffer 00BF  
                        _ConvertADC 21C6             i2c_configure_slave@addr 00B9  
                             tablat 000FF5                               status 000FD8  
                  __end_ofi1_memcpy 1D76                    __end_ofi2_memcpy 1DBE  
                   __initialization 1F22                        __end_of_main 0EEE  
                        _ReadTimer1 215E         __size_of_timer1_int_handler 003E  
        __size_of_ToMainLow_recvmsg 0030          __size_of_ToMainLow_sendmsg 0024  
     __size_of_FromMainHigh_recvmsg 0030               __size_ofi2_in_low_int 0044  
                            ??_main 01B3                     send_msg@msgtype 01A5  
                     __activetblptr 000000                     send_msg@tlength 01A8  
        FromMainLow_sendmsg@msgtype 01AE                          _SetChanADC 2100  
              __end_of_handle_start 1866                       _emptyMsgCount 00C5  
                            _ADDEN1 007D5B                              _BCL1IE 007D03  
                            _BCL1IF 007D0B                              _BCL2IE 007D1E  
                            _BCL2IF 007D26                              _BCL1IP 007D13  
                            _BCL2IP 007D2E                              _ADCON0 000FC2  
                            _ADCON1 000FC1                              _ADCON2 000FC0  
                            _ACKEN1 007E2C                              _ACKEN2 007C2C  
                            _ABDOVF 007DC7                              _ACKDT1 007E2D  
                            _ACKDT2 007C2D                              _CCP1M0 007DE8  
                            _CCP1M1 007DE9                              _CCP1M2 007DEA  
                            _CCP1M3 007DEB                              _CCP2M0 007DD0  
                            _CCP2M1 007DD1                              _CCP2M2 007DD2  
                            _CCP2M3 007DD3                              _CCP1IE 007CEA  
                            _CCP1IF 007CF2                              _CCP2IE 007D00  
                            _CCP2IF 007D08                              _CCP1IP 007CFA  
                            _CCP2IP 007D10                              _ADMSK1 007E29  
                            _ADMSK2 007E2A                              _ADMSK3 007E2B  
                            _ADMSK4 007E2C                              _ADMSK5 007E2D  
                            _ADRESH 000FC4                              _ADRESL 000FC3  
                            _CCPR1H 000FBF                              _CCPR2H 000FBC  
                            _CCPR1L 000FBE                              _CCPR2L 000FBB  
                            _EECON1 000FA6                              _EECON2 000FA7  
                            _T08BIT 007EAE             ??_uart_recv_int_handler 001B  
                            _T1RD16 007E6F                              _GODONE 007E11  
                            _INT0IE 007F94                              _INT0IF 007F91  
                            _INT1IE 007F83                              _INT1IF 007F80  
                            _INT2IE 007F84                              _INT2IF 007F81  
                            _INT1IP 007F86                              _CVRCON 000FB5  
                            _INT2IP 007F87                              _MEMCON 000FCB  
                            i1l1825 006C                              i1l1826 007C  
                            i1l1827 008C                              i1l1828 008C  
                            _CVROEN 007DAE                              _T1SYNC 007E6A  
                            i2l1802 21A0                              i2l1810 1E00  
                        _OpenTimer1 1E02                              i2l1811 1DF2  
                            i2l1812 1DFE                              i2l1820 18A2  
                            i1l5476 169C                              i2l1821 18B2  
                            i1l5477 170E                              i2l1822 18B6  
                    __CFG_WDTEN$OFF 000000                              i2l1808 1DD4  
                            i1l5488 20FE                              i2l1809 1E00  
                            _PCLATH 000FFA                              i1l9260 15A8  
                            i1l9261 15A8                              _PCLATU 000FFB  
                            i2l5530 1A6E                              i1l9258 157E  
                            i2l5507 2010                              i2l5523 21C4  
                            i2l5515 1FE0                              i2l5531 1A1A  
                            i1l9259 157C                              i2l5532 1A2E  
                            i2l5533 1A4C                              i2l5526 20DA  
                            i2l5534 1A6A                              i2l5480 1158  
                            i2l7400 0A30                              _INTCON 000FF2  
                            i2l5481 10A2                              i2l7401 0A8E  
                            i2l5529 1A06                              i2l5482 115E  
                            i2l7402 0A90                              i2l5483 115E  
                            i2l7403 0B10                              i2l5476 12C8  
                            i2l7404 0B08                              i2l7420 01C6  
                            i2l7412 0158                              i2l5477 135E  
                            i2l7405 0B0E                              i2l7421 0232  
                            i2l7413 0172                              i2l7406 0B12  
                            i2l7430 02CC                              i2l7422 0220  
                            i2l7414 0510                              i2l7407 0B4E  
                            i2l7415 04E8                              i2l7431 02D2  
                            i2l7423 0200                              i2l5496 2068  
                            i2l7408 0B90                              i2l7360 14C0  
                            i2l7440 04E4                              i2l7432 0342  
                            i2l7424 0220                              i2l7416 0182  
                            i2l7409 0BDA                              i2l7361 14F2  
                            i2l7441 04E2                              i2l7433 0354  
                            i2l7425 02D0                              i2l7417 01C4  
                            i2l7370 1864                              i2l7450 058A  
                            i2l7442 0470                              i2l7434 0356  
                            i2l7426 02CE                              i2l7418 01C2  
                            i2l7451 0656                              i2l7419 0510  
                            i2l7443 04E0                              i2l7435 0416  
                            i2l7427 029C                              i2l7364 1852  
                            i2l7452 060C                              i2l7444 04AE  
                            i2l7436 03F6                              i2l7428 0270  
                            i2l7381 0B94                              i2l7365 1822  
                            i2l7453 0654                              i2l7445 04DE  
                            i2l7437 03C4                              i2l7429 029A  
                            i2l7373 20A0                              i2l7390 087A  
                            i2l7382 070C                              i2l7366 1850  
                            i2l7358 14A2                              i2l7454 06EC  
                            i2l7446 0538                              i2l7438 03F4  
                            i2l7374 2092                              _TABLAT 000FF5  
                            i2l7383 0BDA                              i2l7391 08D8  
                            i2l7367 183C                              i2l7359 1446  
                            i2l7455 06EA                              i2l7439 0404  
                            i2l7375 20B4                              i2l7392 08DA  
                            i2l7384 0730                              i2l7368 184E  
                            i2l7456 0708                              i2l7448 052A  
                            i2l7376 2098                              i2l7393 0914  
                            i2l7385 07EE                              i2l7369 1864  
                            i2l7457 0708                              i2l7449 0536  
                            i2l7377 209E                              i2l7394 0972  
                            i2l7386 079C                              i2l7378 20B4  
                            i2l7395 0974                              i2l7387 07EC  
                            i2l7396 0990                              i2l7388 084C  
                            i2l7397 09EE                              i2l7389 084E  
                            i2l7398 09F0                              i2l7399 0A14  
                            _VCFG01 007E0C                              _VCFG11 007E0D  
                            _RCREG1 000FAE         __end_of_i2c_configure_slave 1F22  
                            _SENDB1 007D63                       ??_SleepIfOkay 0038  
                __size_of_ReadUSART 0038                              _RCSTA1 000FAB  
                            _OSCFIE 007D07                              _OSCFIF 007D0F  
                            _OSCCON 000FD3                              _OSCFIP 007D17  
                            _TBLPTR 000FF6                              _TMR0IE 007F95  
                            _SPBRG1 000FAF                              _TMR0IF 007F92  
                            _TMR1IE 007CE8                              _TMR1IF 007CF0  
                            _TMR1CS 007E69                              _TMR2IE 007CE9  
                            _TMR2IF 007CF1                              _TMR0IP 007F8A  
                            _PSSAC0 007DB2                              _PSSAC1 007DB3  
                            _TMR1IP 007CF8                              _PSSBD0 007DB0  
                            _PSSBD1 007DB1                              _TMR2IP 007CF9  
                            _TMR0ON 007EAF                              _SPBRGH 000FB0  
                            _TMR1ON 007E68                              _PLUSW0 000FEB  
                            _PLUSW1 000FE3                              _TMR2ON 007E52  
                            _PLUSW2 000FDB                              _NOT_CS 007C22  
                            _SSP1IE 007CEB                              _SSP1IF 007CF3  
                            _SSP2IE 007D1F                              _SSP2IF 007D27  
                            _NOT_PD 007E82                              _NOT_RD 007C20  
                            _SSP1IP 007CFB                              _WDTCON 000FD1  
                            _NOT_RI 007E84                              _SSP2IP 007D2F  
                            _NOT_TO 007E83                              _START1 007E3B  
                            _START2 007C3B                              _SOSCEN 007E6B  
                            _NOT_WR 007C21                              _SSPM01 007E30  
                            _SSPM02 007C30                              _SSPM11 007E31  
                            _SSPM12 007C31                              _SSPM21 007E32  
                            _SSPM22 007C32                              _SSPM31 007E33  
                            _SSPM32 007C33                              _SSPADD 000FC8  
                            _TRISA0 007C90                              _TRISA1 007C91  
                            _TRISB0 007C98                              _TRISA2 007C92  
                            _TRISB1 007C99                              _TRISA3 007C93  
                            _TRISC0 007CA0                              _TRISB2 007C9A  
                            _TRISC1 007CA1                              _TRISB3 007C9B  
                            _TRISA5 007C95                              _TRISD0 007CA8  
                            _TRISC2 007CA2                              _TRISB4 007C9C  
                            _TRISD1 007CA9                              _TRISC3 007CA3  
                            _TRISB5 007C9D                              _TRISE0 007CB0  
                            _TRISD2 007CAA                              _TRISC4 007CA4  
                            _TRISB6 007C9E                              _TRISE1 007CB1  
                            _TRISD3 007CAB                              _TRISC5 007CA5  
                            _TRISB7 007C9F                              _TRISE2 007CB2  
                            _TRISD4 007CAC                              _TRISC6 007CA6  
                            _TRISD5 007CAD                              _TRISC7 007CA7  
                            _SSPEN1 007E35                              _TRISD6 007CAE  
                            _SSPEN2 007C35                              _TRISD7 007CAF  
                            _STATUS 000FD8                              _STKFUL 007FE7  
                            _SSPBUF 000FC9                              _SWDTEN 007E88  
                            _STKOVF 007FE7                              _SSPOV1 007E36  
                            _SSPOV2 007C36                              _STKUNF 007FE6  
                            _STKPTR 000FFC      __size_of_start_i2c_slave_reply 00C0  
                            _TXREG1 000FAD                         ?i1_send_msg 000B  
                         ??_ReadADC 0003                              _TXSTA1 000FAC  
     __end_of_start_i2c_slave_reply 14F4                  timer0_lthread@tptr 00B9  
           FromMainLow_recvmsg@data 008F                         ?i2_recv_msg 0080  
                         ??_OpenADC 00BC                        i2_in_low_int 1DBE  
                       ?i2_send_msg 0080                      __CFG_XINST$OFF 000000  
                __size_of_OpenUSART 00B4                     _i2c_int_handler 2090  
 i2c_slave_int_handler@data_written 00A2                              _ic_ptr 0048  
                     main@msgbuffer 01B4                    __end_of_init_i2c 1CE6  
                  OpenTimer1@config 00B9                              _memcpy 1BF8  
                            clear_0 1F28                              clear_1 1F34  
                            _uc_ptr 004A                              main@ic 01CD  
                            main@uc 01C6                    __end_of_recv_msg 102E  
       start_i2c_slave_reply@length 0034                           ??_in_main 00BF  
                  __end_of_send_msg 1266               timer0_int_handler@val 0095  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                         init_queue@i 00BC  
          ToMainLow_recvmsg@msgtype 01AF                __size_of_in_high_int 0014  
                       ?_ConvertADC 0001             FromMainLow_sendmsg@data 01AF  
                   __CFG_FOSC$HSPLL 000000                          __accesstop 0080  
           __end_of__initialization 1F4C          __end_of_ToMainHigh_recvmsg 1F82  
        __end_of_ToMainHigh_sendmsg 206A         __end_of_init_timer1_lthread 1B42  
               __end_of_SleepIfOkay 1A70                      __pcstackCOMRAM 0001  
            __size_ofi2_in_high_int 000E                         ?_ReadTimer1 0001  
                __size_of_check_msg 0038                   __end_of_ReadUSART 1EEE  
         timer0_int_handler@msgtype 0091                         ?_SetChanADC 00B9  
               __size_ofi1_send_msg 00B2                           ?i1_memcpy 0001  
     __size_of_InterruptHandlerHigh 18E8         __end_of_InterruptHandlerLow 00D2  
                         ?i2_memcpy 0034                       _ToMainHigh_MQ 0136  
               __size_ofi2_recv_msg 0132                    _enter_sleep_mode 21C0  
               __size_ofi2_send_msg 00FA                timer1_lthread@length 00BD  
                     ReadUSART@data 0001                   __end_of_OpenUSART 165E  
                     check_msg@qptr 00B9             ??_block_on_To_msgqueues 00BF  
              __size_of_init_queues 006E                          __pbssBANK0 00C5  
                        __pbssBANK1 0100                          __pbssBANK2 0200  
                       ?_OpenTimer1 00B9                          __pnvCOMRAM 0048  
           __end_of_i2c_int_handler 20B6                        ?i2_check_msg 0034  
                timer1_lthread@tptr 00B9            ??_i2c_master_int_handler 003F  
                     _DATA_ADDRESS2 007C3D                   recv_msg@maxlength 01A4  
                   recv_msg@msgtype 01A5                     recv_msg@tlength 01AA  
                           _CCP1CON 000FBD                             _CCP2CON 000FBA  
             __size_of_handle_start 00A6                        ?_Delay1KTCYx 00B9  
                  WriteTimer0@timer 0036                             _ADMSK11 007E29  
                           _ADMSK12 007C29                             _ADMSK21 007E2A  
                           _ECCP1AS 000FB6                             _ADMSK22 007C2A  
                           _ADMSK31 007E2B                             _ADMSK32 007C2B  
                           _ADMSK41 007E2C                             _ADMSK42 007C2C  
                           _ADMSK51 007E2D                             _ADMSK52 007C2D  
                           ?_memcpy 00B9                             _BAUDCON 000FB8  
                           _ACKSTAT 007E2E                             _BAUDCTL 000FB8  
                  WriteTimer1@timer 0003                       ??_WriteTimer0 0036  
                     ??_WriteTimer1 0003                             _ECCPAS0 007DB4  
                           _ECCPAS1 007DB5                             _ECCPAS2 007DB6  
                           _ECCPASE 007DB7                 __size_of_ConvertADC 0004  
    __size_of_i2c_slave_int_handler 0634             __size_of_timer0_lthread 000A  
     __end_of_i2c_slave_int_handler 070A                             _T1CKPS0 007E6C  
                           _T1CKPS1 007E6D                             _T2CKPS0 007E50  
                           _T2CKPS1 007E51             __size_of_timer1_lthread 0026  
                           _T1OSCEN 007E6B                             i1l18000 21AC  
                           i1l16520 216E                             i1l16450 1D2C  
                           i1l17091 1D5E                             i1l17092 1D40  
                           i1l17093 1D74                             i1l17094 1D74  
                           i1l16527 2180                             i1l16447 1E7C  
                           i1l16480 21AC                             i1l19210 1674  
                           i1l19220 16BC                             i1l19212 1684  
                           i1l19222 16DC                             i1l19214 1696  
                           i1l19206 165E                             i1l19070 1EBA  
                           i1l19230 20DC                             i1l16583 1ED0  
                           i1l19224 16FE                             i1l19216 169A  
                           i1l19208 1664                             i1l19080 1EE8  
                           i1l16584 1ED0                             i1l19072 1EC2  
                           i1l19232 20FE                             i1l19240 1E60  
                           i1l16585 1EDA                             i1l19226 170A  
                           i1l19218 169C                             i1l19082 1EEC  
                           i1l16586 1EE4                             i1l19074 1ECC  
                           i1l19250 1D02                             i1l19242 1CE6  
                           i1l19234 1E40                             i1l16587 1EEC  
                           i1l19228 170E                             i1l19076 1ED8  
                           i1l19068 1EB6                             i1l19260 14FC  
                           i1l19252 1D0A                             i1l19244 1CF2  
                           i1l19236 1E4C                             i1l19190 1D54  
                           i1l19078 1EE2                             i1l19262 1522  
                           i1l19270 157E                             i1l19254 1D0E  
                           i1l19246 1CFA                             i1l19238 1E54  
                           i1l19192 1D58                             i1l19272 1586  
                           i1l19264 1530                             i1l19256 1D10  
                           i1l19248 1CFE                             i1l19280 0066  
                           i1l19194 1D5E                             i1l19186 1D2E  
                           i1l19274 158A                             i1l19266 1546  
                           i1l19258 14F4                             i1l19290 0084  
                           i1l19282 006C                             i1l19188 1D40  
                           i1l19268 156A                             i1l19292 0086  
                           i1l19284 0074                             i1l19276 005C  
                           i1l19286 0076                             i1l19278 0064  
                           i1l19288 007C                             i1l17994 215E  
                           i1l17996 2170                             i1l17998 21A2  
                           i2l17091 1DA6                             i2l16443 17BE  
                           i2l17092 1D88                             i2l19100 2182  
                           i2l16444 17BE                             i2l17093 1DBC  
                           i2l17094 1DBC                             i2l19102 2194  
                           i2l19110 1DD0                             i2l19104 21A0  
                           i2l19120 1DF0                             i2l19112 1DD2  
                           i2l18400 1A2C                             i2l19122 1DF2  
                           i2l19114 1DD4                             i2l19106 1DBE  
                           i2l18410 1A6A                             i2l18402 1A2E  
                           i2l19124 1DFC                             i2l19116 1DE4  
                           i2l19108 1DC6                             i2l18404 1A4A  
                           i2l19300 18A2                             i2l19118 1DEE  
                           i2l16494 2192                             i2l18406 1A4C  
                           i2l19310 2092                             i2l19302 18AA  
                           _INTEDG0 007F8E                             _INTEDG1 007F8D  
                           i2l18408 1A68                             i2l19320 1734  
                           i2l19312 2098                             i2l19304 18AC  
                           _INTEDG2 007F8C                             i2l19322 177A  
                           i2l19314 20A0                             i2l19306 18B2  
                           i2l19500 011A                             i2l19324 178C  
                           i2l19316 1710                             i2l19308 2090  
                           i2l19182 20B6                             i2l19502 011C  
                           i2l19510 0158                             i2l18390 19FA  
                           i2l19318 1728                             i2l19184 20DA  
                           i2l18800 17E0                             i2l19600 04AE  
                           i2l19520 018A                             i2l19512 0160  
                           i2l19504 012C                             i2l18392 1A04  
                           i2l18802 17EA                             i2l18810 1852  
                           i2l19610 0538                             i2l19602 04E6  
                           i2l19530 01EA                             i2l19522 0192  
                           i2l19514 0164                             i2l19506 0138  
                           i2l18722 21C0                             i2l18394 1A06  
                           i2l19700 0990                             i2l18804 17F2  
                           i2l19620 05DE                             i2l19612 054E  
                           i2l19540 024E                             i2l19532 01F2  
                           i2l19524 01A8                             i2l19604 04E8  
                           i2l19516 0172                             i2l19508 0146  
                           i2l18396 1A18                             i2l19710 09F0  
                           i2l19702 09BC                             i2l18806 182A  
                           i2l19630 063A                             i2l19622 05F6  
                           i2l19614 055A                             i2l19606 051C  
                           i2l19550 028C                             i2l19542 0256  
                           i2l19534 0200                             i2l19526 01CE  
                           i2l19518 0180                             i2l18398 1A1A  
                           i2l19294 1892                             i2l19800 1154  
                           i2l19480 203E                             i2l19720 0A6A  
                           i2l19712 0A1C                             i2l19704 09CA  
                           i2l18808 183C                             i2l19640 06EC  
                           i2l19624 060C                             i2l19632 0656  
                           i2l19616 058A                             i2l19608 0532  
                           i2l19560 0334                             i2l19544 025E  
                           i2l19552 029C                             i2l19528 01DC  
                           i2l19536 0232                             i2l19296 189A  
                           i2l19810 1D88                             i2l19802 1156  
                           i2l19482 2068                             i2l19730 0ACC  
                           i2l19722 0A7A                             i2l19714 0A2C  
                           i2l19706 09DA                             i2l19650 0760  
                           i2l19642 06FA                             i2l19634 066C  
                           i2l19626 0618                             i2l19618 0598  
                           i2l19570 0382                             i2l19562 0342  
                           i2l19554 02D2                             i2l19546 0270  
                           i2l19538 0240                             i2l19298 189C  
                           i2l19812 1D9C                             i2l19804 1158  
                           i2l19740 0B4A                             i2l19732 0ADA  
                           i2l19724 0A8A                             i2l19716 0A30  
                           i2l19708 09EA                             i2l19660 07E8  
                           i2l19652 078C                             i2l19644 070A  
                           i2l19484 1FE2                             i2l19636 06A8  
                           i2l19628 0634                             i2l19580 0404  
                           i2l19572 03A8                             i2l19564 035E  
                           i2l19556 02FA                             i2l19548 0280  
                           i2l19492 1FB2                             i2l19814 1DA0  
                           i2l19806 115C                             i2l19742 0B4E  
                           i2l19734 0B02                             i2l19726 0A98  
                           i2l19718 0A5C                             i2l19670 0848  
                           i2l19654 079C                             i2l19662 07EE  
                           i2l19646 070C                             i2l19750 0B94  
                           i2l18790 1492                             i2l19486 2010  
                           i2l19638 06D8                             i2l19590 0460  
                           i2l19574 03B6                             i2l19566 036C  
                           i2l19582 0416                             i2l19558 0326  
                           i2l19494 1FE0                             i2l19816 1DA6  
                           i2l19808 1D76                             i2l19760 12C2  
                           i2l19752 1266                             i2l19744 0B7C  
                           i2l19736 0B12                             i2l19728 0AA8  
                           i2l19680 08C4                             i2l19672 0856  
                           i2l19664 081A                             i2l19656 07C8  
                           i2l19648 0738                             i2l18792 14A2  
                           i2l19592 0478                             i2l19584 0424  
                           i2l19576 03C4                             i2l19568 037A  
                           i2l19496 00D6                             i2l19770 134E  
                           i2l19762 12C6                             i2l19754 1274  
                           i2l19746 0B8C                             i2l19738 0B3A  
                           i2l19690 094E                             i2l19682 08D4  
                           i2l19674 087A                             i2l19666 0828  
                           i2l19658 07D8                             i2l18794 14C0  
                           i2l18786 1434                             i2l19594 0488  
                           i2l19586 0432                             i2l19578 03F6  
                           i2l19498 0112                             i2l19780 106A  
                           i2l19772 135A                             i2l19764 12C8  
                           i2l19756 128E                             i2l19748 0B92  
                           i2l19692 095E                             i2l19684 08E2  
                           i2l19676 08A6                             i2l19668 0838  
                           i2l18796 14F0                             i2l18788 1446  
                           i2l19596 0494                             i2l19588 043A  
                           i2l19790 10C4                             i2l19782 107C  
                           i2l19774 135E                             i2l19766 12F8  
                           i2l19758 12B0                             i2l19694 096E  
                           i2l19686 0914                             i2l19678 08B4  
                           i2l18798 17C0                             i2l19598 04A0  
                           i2l19792 10F4                             i2l19784 109C  
                           i2l19776 102E                             i2l19768 1320  
                           i2l19696 097C                             i2l19688 0940  
                           i2l19794 1122                             i2l19786 10A0  
                           i2l19778 1048                             i2l19698 098C  
                           i2l19796 1140                             i2l19788 10A2  
                           i2l19798 114C                             _INTCON2 000FF1  
                        ??i1_memcpy 0007                             _INTCON3 000FF0  
                           _GO_DONE 007E11                          ??i2_memcpy 003A  
                           _TBLPTRH 000FF7                             _TBLPTRL 000FF6  
                           _PREINC0 000FEC                             _PREINC1 000FE4  
                           _PREINC2 000FDC                             _TBLPTRU 000FF8  
                           _OSCTUNE 000F9B                             _PWM1CON 000FB7  
                  i1send_msg@length 000D                             _SSP1ADD 000FC8  
                           _SSP2ADD 000F88                             _NOT_BOR 007E80  
                           _NOT_RC8 007D5E                             _SSP1BUF 000FC9  
                           _SSP2BUF 000F8E                             _NOT_SS1 007C05  
                           _NOT_SS2 007C1B                             _NOT_POR 007E81  
                           _NOT_TX8 007D66                             _PSPMODE 007CB4  
                     i2_in_high_int 2194                             _SSPCON1 000FC6  
                           _SSPCON2 000FC5                             _STKPTR0 007FE0  
                           _STKPTR1 007FE1                             _STKPTR2 007FE2  
                           _STKPTR3 007FE3                             _STKPTR4 007FE4  
                           _ULPWUIN 007C00                             _SSPSTAT 000FC7  
                           _TOUTPS0 007E53                             _TOUTPS1 007E54  
                           _TOUTPS2 007E55                             _TOUTPS3 007E56  
               __size_of_ReadTimer1 0012                   __end_of_check_msg 1EB6  
                         _I2C_READ2 007C3A                           _I2C_STOP2 007C3C  
                         ?_init_i2c 00B9                         _SleepIfOkay 19FA  
                           _i2cMode 00C6                             _ReadADC 21A2  
                         ?_recv_msg 01A2                             _OpenADC 1976  
                        _in_low_int 1B42                        _handle_start 17C0  
                           __Hparam 0000                 __size_of_SetChanADC 001C  
                           _nT1SYNC 007E6A                           ?_send_msg 01A2  
                           __Lparam 0000          __end_of_timer0_int_handler 17C0  
       __end_of_FromMainLow_recvmsg 2012         __end_of_FromMainLow_sendmsg 203E  
                  init_uart_recv@uc 00B9                             _nWRITE2 007C3A  
                         _CMCONbits 000FB4                     __CFG_STVREN$OFF 000000  
i2c_slave_int_handler@overrun_error 00A3                             __pcinit 1F22  
                   __size_of_memcpy 0056            __size_of_adc_int_handler 0048  
                        _init_queue 18F0                             __ramtop 0400  
               __size_of_OpenTimer1 003E                             __ptext0 0BDC  
                           __ptext1 21B8                             __ptext2 211C  
                           __ptext3 1C9C                             __ptext4 1ADE  
                           __ptext5 1A70                             __ptext6 1E02  
                           __ptext7 1EEE                             __ptext8 15AA  
                           __ptext9 1360                           _T0CONbits 000FD5  
                           _in_main 1BA0                           _T1CONbits 000FCD  
                         _T2CONbits 000FCA                 __end_of_WriteTimer0 2194  
               __end_of_WriteTimer1 2182                      ?i2_in_high_int 0034  
                    OpenADC@config2 00BA                      __pintcode_body 1866  
      __end_of_FromMainHigh_recvmsg 1FE2                end_of_initialization 1F4C  
           timer1_lthread@msgbuffer 00BF                           _PEIE_GIEL 007F96  
    __size_of_uart_recv_int_handler 00B6                             memcpy@d 00BF  
                           memcpy@n 00BD                             memcpy@s 00C1  
     __end_of_uart_recv_int_handler 15AA                          ??_init_i2c 00BB  
                           int_func 1866                        ??i1_send_msg 0011  
                     ?_uart_lthread 00B9             __size_of_init_uart_recv 001A  
                  ?_i2c_int_handler 0001                        ??i2_recv_msg 003E  
                        ??_recv_msg 00C3                        ??i2_send_msg 003E  
                        ??_send_msg 00C3                adc_int_handler@value 0021  
   __size_of_i2c_master_int_handler 04D2          __end_of_timer1_int_handler 1E7E  
                         _RCSTAbits 000FAB                             postdec2 000FDD  
                           postinc0 000FEE                             postinc2 000FDE  
         ToMainHigh_sendmsg@msgtype 008C                           _PORTAbits 000F80  
                         _PORTBbits 000F81                           _PORTCbits 000F82  
                         _PORTDbits 000F83                           _PORTEbits 000F84  
                __end_ofi1_send_msg 1710                           _TRISAbits 000F92  
                         _TRISBbits 000F93                           _TRISCbits 000F94  
                         _TRISDbits 000F95                           _TRISEbits 000F96  
                __end_ofi2_recv_msg 1160                  __end_ofi2_send_msg 1360  
                      ??_ConvertADC 00B9                         _adcMsgCount 0047  
                         _CapStatus 0044       FromMainHigh_recvmsg@maxlength 008C  
          timer1_int_handler@result 001F                      ??_uart_lthread 00C1  
                       _CCP1CONbits 000FBD                         _CCP2CONbits 000FBA  
                         _TXSTAbits 000FAC                          main@length 01CB  
                       ?_in_low_int 00BB               timer0_lthread@msgtype 00BB  
             _start_i2c_slave_reply 1434        __size_of_i2c_configure_slave 0034  
              __size_ofi2_check_msg 0026            __end_of_enter_sleep_mode 21C6  
                      ??_ReadTimer1 0003                         _ECCP1ASbits 000FB6  
                _ToMainHigh_recvmsg 1F52                           i1memcpy@d 0007  
                _ToMainHigh_sendmsg 203E                           i1memcpy@n 0005  
                         i1memcpy@s 0009                         _BAUDCONbits 000FB8  
                    _timer0_lthread 21AE                         ?_init_queue 00B9  
                         i2memcpy@d 003A                         _BAUDCTLbits 000FB8  
                       _WriteTimer0 2182                         _WriteTimer1 2170  
                         i2memcpy@n 0038                           i2memcpy@s 003C  
                __end_of_ConvertADC 21CA                      _timer1_lthread 206A  
                    __end_of_memcpy 1C4E                   _enable_interrupts 21B8  
              __size_of_Delay1KTCYx 0014                           _nADDRESS2 007C3D  
                      ??_SetChanADC 00BA                 ?_ToMainHigh_recvmsg 01AE  
                   ??i2_in_high_int 0036                 ?_ToMainHigh_sendmsg 008B  
                ?_enable_interrupts 0001                 start_initialization 1F22  
            _i2c_master_int_handler 070A                       ??_in_high_int 00BB  
                         _ReadUSART 1EB6                   ??_adc_int_handler 001B  
                 __size_ofi1_memcpy 0048                   __size_ofi2_memcpy 0048  
         FromMainLow_sendmsg@length 01AD                 ??_enable_interrupts 00B9  
                      ??_OpenTimer1 00BA      __size_of_block_on_To_msgqueues 00D4  
                __end_of_ReadTimer1 2170       __end_of_block_on_To_msgqueues 1434  
                         _OpenUSART 15AA        __end_of_InterruptHandlerHigh 18F0  
                        init_i2c@ic 00B9                ??_ToMainHigh_recvmsg 00C5  
              ??_ToMainHigh_sendmsg 003F                  __end_of_SetChanADC 211C  
            __end_of_timer0_lthread 21B8              __end_of_timer1_lthread 2090  
         __end_of_enable_interrupts 21C0                            ??_memcpy 00BF  
             timer1_lthread@msgtype 00BB                _FromMainHigh_recvmsg 1FB2  
      __size_of_init_timer1_lthread 0064                  __end_of_OpenTimer1 1E40  
                       __pbssCOMRAM 0042              timer1_int_handler@temp 001D  
                        ?_ReadUSART 0001                       ??_init_queues 00BD  
                     __pcstackBANK0 0080                       __pcstackBANK1 01A2  
               __size_of_in_low_int 005E            start_i2c_slave_reply@msg 0035  
               __CFG_CCP2MX$DEFAULT 000000                     Delay1KTCYx@unit 00B9  
          ToMainLow_sendmsg@msgtype 0018        __size_of_InterruptHandlerLow 00BA  
    i2c_slave_int_handler@data_read 00AA                 __end_of_in_high_int 214A  
                        ?_OpenUSART 00B9                        ?_SleepIfOkay 0001  
             ToMainLow_recvmsg@data 01B1                        _ToMainLow_MQ 016C  
               __size_of_init_queue 0086                      _init_uart_recv 211C  
                          ?_ReadADC 0001                           _check_msg 1E7E  
            ?_start_i2c_slave_reply 0034                   __size_of_init_i2c 004A  
                 OpenADC@portconfig 00BB                            ?_OpenADC 00B9  
                      recv_msg@data 01A7                        recv_msg@qmsg 01AC  
                      recv_msg@slot 01A9                        recv_msg@qptr 01A2  
                 __size_of_recv_msg 0140                           __pintcode 0008  
                 __size_of_send_msg 0106                     ?_timer0_lthread 00B9  
             ?_FromMainHigh_recvmsg 008C                     ?_timer1_lthread 00B9  
                       __pintcodelo 0018              ToMainHigh_recvmsg@data 01B1  
              __end_of_uart_lthread 1C9C                            _I2C_DAT2 007C3D  
                          ?_in_main 00BD                   WriteTimer0@timer0 0034  
                          _ECCP1DEL 000FB7                            _ECCP1CON 000FBD  
                          _CCP2_PA2 007C0B                            _ACKSTAT1 007E2E  
                          _ACKSTAT2 007C2E                  _timer0_int_handler 1710  
                 WriteTimer1@timer1 0001               _i2c_slave_int_handler 00D6  
               uart_lthread@msgtype 00BB      i2c_slave_int_handler@error_buf 009F  
             ToMainLow_sendmsg@data 0019                            _DDRAbits 000F92  
                          _DDRBbits 000F93                            _DDRCbits 000F94  
                          _DDRDbits 000F95                            _DDREbits 000F96  
               ?_timer0_int_handler 0001                            _GIE_GIEH 007F97  
                          _T1INSYNC 007E6A                    uart_lthread@uptr 00B9  
    i2c_slave_int_handler@msg_ready 00A9              __end_of_init_uart_recv 2136  
               __end_of_init_queues 1ADE                            _NEGATIVE 007EC4  
       i2c_slave_int_handler@length 00A4                            _T2OUTPS0 007E53  
                          _T2OUTPS1 007E54                            _T2OUTPS2 007E55  
                          _T2OUTPS3 007E56                       OpenADC@config 00B9  
                          _LATAbits 000F89                            _LATBbits 000F8A  
                          _LATCbits 000F8B                            _LATDbits 000F8C  
                          _LATEbits 000F8D                     i2check_msg@qptr 0034  
                        ?_check_msg 00B9                            _IPR1bits 000F9F  
                          _IPR2bits 000FA2                            _PIE1bits 000F9D  
                          _IPR3bits 000FA5                            _PIE2bits 000FA0  
                          _PIE3bits 000FA3                            i1u202_20 1D72  
                          i1u210_20 0084                            i1u202_21 1D70  
                          i1u210_21 0082                            i1u204_20 1696  
                          i1u204_21 1694                            i1u205_20 14FC  
                     ?i2_in_low_int 0036                            i1u205_21 14FA  
                          i1u206_20 1546                            i1u206_21 1544  
                          i1u207_20 1586                            i1u207_21 1584  
                          i1u208_20 0064                            i1u208_21 0062  
                          i1u209_20 0074                            i1u209_21 0072  
                          i1u192_20 1EC2                            i1u192_21 1EC0  
                          i2u120_40 1A2A                            i2u120_41 1A28  
                          i1u193_20 1ECC                            i1u193_21 1ECA  
                          i2u121_40 1A48                            i2u121_41 1A46  
                          i1u194_20 1ED8                            i1u194_21 1ED6  
                          i2u122_40 1A66                            i2u122_41 1A64  
                          i1u195_20 1EE2                            i1u195_21 1EE0  
                          i2u211_40 189A                            i2u211_41 1898  
                          i2u212_40 18AA                            i2u212_41 18A8  
                          i2u221_40 011A                            i2u213_40 171A  
                          i2u221_41 0118                            i2u213_41 1716  
                          i2u213_46 171C                            i2u230_40 0256  
                          i2u222_40 0160                            i2u118_40 1A02  
                          i2u214_40 178C                            i2u230_41 0254  
                          i2u222_41 015E                            i2u118_41 1A00  
                          i2u214_41 178A                            i2u231_40 025E  
                          i2u223_40 017E                            i2u119_40 1A16  
                          i2u231_41 025C                            i2u223_41 017C  
                          i2u119_41 1A14                            i2u152_40 14BE  
                          i2u240_40 052A                            i2u232_40 02FA  
                          i2u224_40 018A                            i2u152_41 14BC  
                          i2u240_41 0528                            i2u232_41 02F8  
                          i2u224_41 0188                            i2u153_40 17EA  
                          i2u241_40 0532                            i2u233_40 035E  
                          i2u225_40 01A8                            i2u153_41 17E8  
                          i2u241_41 0530                            i2u233_41 035C  
                          i2u225_41 01A6                            i2u250_40 0856  
                          i2u154_40 17F2                            i2u242_40 054E  
                          i2u234_40 037A                            i2u226_40 01CE  
                          i2u250_41 0854                            i2u154_41 17F0  
                          i2u242_41 054C                            i2u234_41 0378  
                          i2u226_41 01CC                            i2u251_40 08E2  
                          i2u155_40 182A                            i2u243_40 055A  
                          i2u235_40 0382                            i2u227_40 01EA  
                          i2u251_41 08E0                            i2u155_41 1828  
                          i2u243_41 0558                            i2u235_41 0380  
                          i2u227_41 01E8                            i2u260_40 1DBA  
                          i2u252_40 097C                            i2u244_40 0598  
                          i2u236_40 0424                            i2u228_40 01F2  
                          i2u260_41 1DB8                            i2u252_41 097A  
                          i2u244_41 0596                            i2u236_41 0422  
                          i2u228_41 01F0                            i2u253_40 0A1C  
                          i2u245_40 05F6                            i2u237_40 043A  
                          i2u229_40 0240                            i2u253_41 0A1A  
                          i2u245_41 05F4                            i2u237_41 0438  
                          i2u229_41 023E                            i2u254_40 0A98  
                          i2u246_40 066C                            i2u238_40 0478  
                          i2u254_41 0A96                            i2u246_41 066A  
                          i2u238_41 0476                            i2u255_40 0B02  
                          i2u247_40 06FA                            i2u239_40 051C  
                          i2u255_41 0B00                            i2u247_41 06F8  
                          i2u239_41 051A                            i2u256_40 0B3A  
                          i2u248_40 0738                            i2u256_41 0B38  
                          i2u248_41 0736                            i2u257_40 12C2  
                          i2u249_40 0760                            i2u257_41 12C0  
                          i2u249_41 075E                            _PIR1bits 000F9E  
                          i2u258_40 107C                            i2u258_41 107A  
                          i2u259_40 109C                            i2u259_41 109A  
                          _PIR2bits 000FA1                            i2u197_40 1DC6  
                          i2u197_41 1DC4                            _PIR3bits 000FA4  
                          i2u198_40 1DE4                            i2u198_41 1DE2  
            ToMainHigh_sendmsg@data 008D                            _GO_nDONE 007E11  
                          _RCONbits 000FD0                    __CFG_WDTPS$32768 000000  
                          _OVERFLOW 007EC3                            _POSTDEC0 000FED  
                          _POSTDEC1 000FE5                            _POSTDEC2 000FDD  
                          _NOT_DONE 007E11                            _SSP1CON1 000FC6  
                          _SSP1CON2 000FC5                            _SSP2CON1 000F86  
                          _SSP2CON2 000F85                            _POSTINC0 000FEE  
                          _POSTINC1 000FE6                            _POSTINC2 000FDE  
                          _NOT_RBPU 007F8F                ??_timer0_int_handler 0040  
                          _SSP1STAT 000FC7                            _SSP2STAT 000F87  
      FromMainLow_recvmsg@maxlength 008C          __size_of_enable_interrupts 0008  
                 i1send_msg@msgtype 000E                   i1send_msg@tlength 0012  
        FromMainLow_recvmsg@msgtype 008D                          _ADCON0bits 000FC2  
                        _ADCON1bits 000FC1                          _ADCON2bits 000FC0  
      __size_of_FromMainLow_recvmsg 0030        __size_of_FromMainLow_sendmsg 002C  
              timer0_lthread@length 00BD                  _timer1_int_handler 1E40  
                          i1_memcpy 1D2E                _InterruptHandlerHigh 0008  
                       ??_ReadUSART 0001                            i2_memcpy 1D76  
              timer0_lthread@msgval 00C1            FromMainHigh_recvmsg@data 008F  
                        _I2C_START2 007C3B                         _in_high_int 2136  
                      send_msg@data 01A6                 _i2c_configure_slave 1EEE  
                      send_msg@qmsg 01AB                        send_msg@slot 01AA  
                      send_msg@qptr 01A2                         _INTCON2bits 000FF1  
                       _INTCON3bits 000FF0               uart_lthread@msgbuffer 00BF  
               ?_timer1_int_handler 0001                     ?_init_uart_recv 00B9  
                       ??_OpenUSART 00BC                     OpenUSART@config 00B9  
                        _EECON1bits 000FA6                      ??i2_in_low_int 0038  
             _uart_recv_int_handler 14F4                        ??_in_low_int 00BD  
                  __size_of_ReadADC 000C                         _READ_WRITE2 007C3A  
                          __Hrparam 0000                    __size_of_OpenADC 0084  
              ?_i2c_configure_slave 00B9                            __Lrparam 0000  
                 ?_enter_sleep_mode 0001              ??_FromMainHigh_recvmsg 0040  
              ??_timer1_int_handler 001B                     _adc_int_handler 1CE6  
          __size_of_i2c_int_handler 0026                  ??_enter_sleep_mode 0034  
                      ??_init_queue 00BB                        ?_WriteTimer0 0034  
                      ?_WriteTimer1 0001             ToMainLow_sendmsg@length 0017  
           ?_i2c_master_int_handler 0001              ?_i2c_slave_int_handler 0001  
                 main@t0thread_data 01C1               ?_InterruptHandlerHigh 0001  
                       _GO_NOT_DONE 007E11                    __size_of_in_main 0058  
                 i2send_msg@msgtype 0083         ToMainHigh_recvmsg@maxlength 01AE  
                 i2send_msg@tlength 0086             init_timer1_lthread@tptr 00BE  
                       _init_queues 1A70                  __end_of_in_low_int 1BA0  
                          __ptext10 1BA0                            __ptext11 1B42  
                          __ptext20 1160                            __ptext12 2136  
                          __ptext21 0EEE                            __ptext13 1F52  
                          __ptext30 1CE6                            __ptext22 1BF8  
                          __ptext14 21AE                            __ptext31 14F4  
                          __ptext23 1E7E                            __ptext15 1F82  
                          __ptext40 2090                            __ptext32 20DC  
                          __ptext24 214A                            __ptext16 206A  
                          __ptext41 1710                            __ptext33 1EB6  
                          __ptext25 1976                            __ptext17 2012  
                          __ptext50 203E                            __ptext42 19FA  
                          __ptext34 215E                            __ptext26 2100  
                          __ptext18 1C4E                            __ptext51 2182  
                          __ptext43 1FB2                            __ptext35 2170  
                          __ptext27 21C6                            __ptext19 18F0  
                          __ptext52 1DBE                            __ptext44 21C0  
                          __ptext36 21A2                            __ptext53 2194  
                          __ptext45 00D6                            __ptext37 165E  
                          __ptext29 1E40                            __ptext54 1266  
                          __ptext46 1FE2                            __ptext38 1D2E  
                          __ptext55 102E                            __ptext47 1434  
                          __ptext56 20B6                            __ptext48 17C0  
                          __ptext57 1D76                            __ptext49 070A  
                          __ptext58 0000                        _SSP1CON1bits 000FC6  
                      _SSP1CON2bits 000FC5                      i1send_msg@data 000F  
                      _SSP2CON1bits 000F86                        _SSP2CON2bits 000F85  
                    i1send_msg@qmsg 0015                      i1send_msg@slot 0014  
                    i1send_msg@qptr 000B                  uart_lthread@length 00BD  
          timer0_int_handler@length 0093                            _init_i2c 1C9C  
               _init_timer1_lthread 1ADE                       __size_of_main 0312  
            adc_int_handler@message 001D                       ??i2_check_msg 0036  
                 main@t1thread_data 01C4                         ??_check_msg 00BB  
                __end_of_init_queue 1976                __size_of_SleepIfOkay 0076  
                          _recv_msg 0EEE    i2c_slave_int_handler@msg_to_send 00A8  
             ??_i2c_configure_slave 00BA                            _send_msg 1160  
                    init_queue@qptr 00B9                          _CVRCONbits 000FB5  
             __size_of_uart_lthread 004E                      i2recv_msg@data 0085  
                    i2recv_msg@qmsg 008A                       ??_Delay1KTCYx 00BA  
                    i2recv_msg@slot 0087                      i2recv_msg@qptr 0080  
    __end_of_i2c_master_int_handler 0BDC                        _SSP1STATbits 000FC7  
               _InterruptHandlerLow 0018                ?_init_timer1_lthread 00BE  
                      _SSP2STATbits 000F87                         _OSCTUNEbits 000F9B  
                        _INTCONbits 000FF2                         _PWM1CONbits 000FB7  
                    OpenUSART@spbrg 00BA                            memcpy@d1 00B9  
                          memcpy@s1 00BB               __end_ofi2_in_high_int 21A2  
                  i2send_msg@length 0082                            intlevel1 0000  
                          intlevel2 0000                ?_InterruptHandlerLow 0001  
           ??_start_i2c_slave_reply 0037                         _SSP1ADDbits 000FC8  
                       _SSP2ADDbits 000F88              ?_uart_recv_int_handler 0001  
                      _uart_lthread 1C4E                   SetChanADC@channel 00B9  
                        _RCSTA1bits 000FAB               _block_on_To_msgqueues 1360  
                     ?_handle_start 0034                    ??_timer0_lthread 00C1  
       __size_of_ToMainHigh_recvmsg 0030             __end_of_adc_int_handler 1D2E  
       __size_of_ToMainHigh_sendmsg 002C                          _OSCCONbits 000FD3  
                  ??_timer1_lthread 00C1            ToMainHigh_sendmsg@length 008B  
               __end_ofi2_check_msg 20DC               ??_init_timer1_lthread 00C0  
            ??_InterruptHandlerHigh 00AB                   _ToMainLow_recvmsg 1F82  
                 _ToMainLow_sendmsg 20DC                  main@last_reg_recvd 01C3  
                        _NOT_T1SYNC 007E6A                __end_ofi2_in_low_int 1E02  
                ?_ToMainLow_recvmsg 01AE                 __end_of_Delay1KTCYx 215E  
                 ??_i2c_int_handler 0042                  ?_ToMainLow_sendmsg 0017  
                       _SSPCON1bits 000FC6                         _SSPCON2bits 000FC5  
                        _WDTCONbits 000FD1                      i2send_msg@data 0084  
             ??_InterruptHandlerLow 0023                 ??_ToMainLow_recvmsg 00C5  
                    i2send_msg@qmsg 0089                      i2send_msg@slot 0088  
                    i2send_msg@qptr 0080                 ??_ToMainLow_sendmsg 001B  
     i2c_slave_int_handler@i2c_data 00A6                          _SSPADDbits 000FC8  
                        _STATUSbits 000FD8                 _FromMainLow_recvmsg 1FE2  
                    ??_handle_start 0035                 _FromMainLow_sendmsg 2012  
                      _USART_Status 0046  
