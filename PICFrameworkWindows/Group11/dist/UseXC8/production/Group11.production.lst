

Microchip Technology PIC18 LITE Macro Assembler V1.10 build 47796 
                                                                                               Mon Sep 24 19:03:37 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 47796
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 47796"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	18F45J10
     8  0000                     porta	equ	0F80h
     9  0000                     portb	equ	0F81h
    10  0000                     portc	equ	0F82h
    11  0000                     portd	equ	0F83h
    12  0000                     porte	equ	0F84h
    13  0000                     lata	equ	0F89h
    14  0000                     latb	equ	0F8Ah
    15  0000                     latc	equ	0F8Bh
    16  0000                     latd	equ	0F8Ch
    17  0000                     late	equ	0F8Dh
    18  0000                     trisa	equ	0F92h
    19  0000                     trisb	equ	0F93h
    20  0000                     trisc	equ	0F94h
    21  0000                     trisd	equ	0F95h
    22  0000                     trise	equ	0F96h
    23  0000                     pie1	equ	0F9Dh
    24  0000                     pir1	equ	0F9Eh
    25  0000                     ipr1	equ	0F9Fh
    26  0000                     pie2	equ	0FA0h
    27  0000                     pir2	equ	0FA1h
    28  0000                     ipr2	equ	0FA2h
    29  0000                     t3con	equ	0FB1h
    30  0000                     tmr3l	equ	0FB2h
    31  0000                     tmr3h	equ	0FB3h
    32  0000                     ccp1con	equ	0FBDh
    33  0000                     ccpr1l	equ	0FBEh
    34  0000                     ccpr1h	equ	0FBFh
    35  0000                     adcon1	equ	0FC1h
    36  0000                     adcon0	equ	0FC2h
    37  0000                     adresl	equ	0FC3h
    38  0000                     adresh	equ	0FC4h
    39  0000                     sspcon2	equ	0FC5h
    40  0000                     sspcon1	equ	0FC6h
    41  0000                     sspstat	equ	0FC7h
    42  0000                     sspadd	equ	0FC8h
    43  0000                     sspbuf	equ	0FC9h
    44  0000                     t2con	equ	0FCAh
    45  0000                     pr2	equ	0FCBh
    46  0000                     tmr2	equ	0FCCh
    47  0000                     t1con	equ	0FCDh
    48  0000                     tmr1l	equ	0FCEh
    49  0000                     tmr1h	equ	0FCFh
    50  0000                     rcon	equ	0FD0h
    51  0000                     wdtcon	equ	0FD1h
    52  0000                     lvdcon	equ	0FD2h
    53  0000                     osccon	equ	0FD3h
    54  0000                     t0con	equ	0FD5h
    55  0000                     tmr0l	equ	0FD6h
    56  0000                     tmr0h	equ	0FD7h
    57  0000                     status	equ	0FD8h
    58  0000                     fsr2	equ	0FD9h
    59  0000                     fsr2l	equ	0FD9h
    60  0000                     fsr2h	equ	0FDAh
    61  0000                     plusw2	equ	0FDBh
    62  0000                     preinc2	equ	0FDCh
    63  0000                     postdec2	equ	0FDDh
    64  0000                     postinc2	equ	0FDEh
    65  0000                     indf2	equ	0FDFh
    66  0000                     bsr	equ	0FE0h
    67  0000                     fsr1	equ	0FE1h
    68  0000                     fsr1l	equ	0FE1h
    69  0000                     fsr1h	equ	0FE2h
    70  0000                     plusw1	equ	0FE3h
    71  0000                     preinc1	equ	0FE4h
    72  0000                     postdec1	equ	0FE5h
    73  0000                     postinc1	equ	0FE6h
    74  0000                     indf1	equ	0FE7h
    75  0000                     wreg	equ	0FE8h
    76  0000                     fsr0	equ	0FE9h
    77  0000                     fsr0l	equ	0FE9h
    78  0000                     fsr0h	equ	0FEAh
    79  0000                     plusw0	equ	0FEBh
    80  0000                     preinc0	equ	0FECh
    81  0000                     postdec0	equ	0FEDh
    82  0000                     postinc0	equ	0FEEh
    83  0000                     indf0	equ	0FEFh
    84  0000                     intcon3	equ	0FF0h
    85  0000                     intcon2	equ	0FF1h
    86  0000                     intcon	equ	0FF2h
    87  0000                     prod	equ	0FF3h
    88  0000                     prodl	equ	0FF3h
    89  0000                     prodh	equ	0FF4h
    90  0000                     tablat	equ	0FF5h
    91  0000                     tblptr	equ	0FF6h
    92  0000                     tblptrl	equ	0FF6h
    93  0000                     tblptrh	equ	0FF7h
    94  0000                     tblptru	equ	0FF8h
    95  0000                     pcl	equ	0FF9h
    96  0000                     pclat	equ	0FFAh
    97  0000                     pclath	equ	0FFAh
    98  0000                     pclatu	equ	0FFBh
    99  0000                     stkptr	equ	0FFCh
   100  0000                     tosl	equ	0FFDh
   101  0000                     tosh	equ	0FFEh
   102  0000                     tosu	equ	0FFFh
   103                           skipnz macro
   104                           	btfsc	status,2
   105  0000                     	endm
   106                           	global	__ramtop
   107                           	global	__accesstop
   108                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   109  0000                     PORTA equ 0F80h ;# 
   110                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   111  0000                     PORTB equ 0F81h ;# 
   112                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   113  0000                     PORTC equ 0F82h ;# 
   114                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   115  0000                     PORTD equ 0F83h ;# 
   116                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   117  0000                     PORTE equ 0F84h ;# 
   118                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   119  0000                     SSP2CON2 equ 0F85h ;# 
   120                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   121  0000                     SSP2CON1 equ 0F86h ;# 
   122                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   123  0000                     SSP2STAT equ 0F87h ;# 
   124                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   125  0000                     SSP2ADD equ 0F88h ;# 
   126                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   127  0000                     LATA equ 0F89h ;# 
   128                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   129  0000                     LATB equ 0F8Ah ;# 
   130                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   131  0000                     LATC equ 0F8Bh ;# 
   132                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   133  0000                     LATD equ 0F8Ch ;# 
   134                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   135  0000                     LATE equ 0F8Dh ;# 
   136                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   137  0000                     SSP2BUF equ 0F8Eh ;# 
   138                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   139  0000                     TRISA equ 0F92h ;# 
   140                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   141  0000                     DDRA equ 0F92h ;# 
   142                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   143  0000                     TRISB equ 0F93h ;# 
   144                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   145  0000                     DDRB equ 0F93h ;# 
   146                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   147  0000                     TRISC equ 0F94h ;# 
   148                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   149  0000                     DDRC equ 0F94h ;# 
   150                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   151  0000                     TRISD equ 0F95h ;# 
   152                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   153  0000                     DDRD equ 0F95h ;# 
   154                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   155  0000                     TRISE equ 0F96h ;# 
   156                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   157  0000                     DDRE equ 0F96h ;# 
   158                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   159  0000                     OSCTUNE equ 0F9Bh ;# 
   160                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   161  0000                     PIE1 equ 0F9Dh ;# 
   162                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   163  0000                     PIR1 equ 0F9Eh ;# 
   164                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   165  0000                     IPR1 equ 0F9Fh ;# 
   166                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   167  0000                     PIE2 equ 0FA0h ;# 
   168                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   169  0000                     PIR2 equ 0FA1h ;# 
   170                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   171  0000                     IPR2 equ 0FA2h ;# 
   172                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   173  0000                     PIE3 equ 0FA3h ;# 
   174                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   175  0000                     PIR3 equ 0FA4h ;# 
   176                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   177  0000                     IPR3 equ 0FA5h ;# 
   178                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   179  0000                     EECON1 equ 0FA6h ;# 
   180                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   181  0000                     EECON2 equ 0FA7h ;# 
   182                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   183  0000                     RCSTA equ 0FABh ;# 
   184                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   185  0000                     RCSTA1 equ 0FABh ;# 
   186                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   187  0000                     TXSTA equ 0FACh ;# 
   188                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   189  0000                     TXSTA1 equ 0FACh ;# 
   190                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   191  0000                     TXREG equ 0FADh ;# 
   192                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   193  0000                     TXREG1 equ 0FADh ;# 
   194                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   195  0000                     RCREG equ 0FAEh ;# 
   196                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   197  0000                     RCREG1 equ 0FAEh ;# 
   198                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   199  0000                     SPBRG equ 0FAFh ;# 
   200                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   201  0000                     SPBRG1 equ 0FAFh ;# 
   202                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   203  0000                     SPBRGH equ 0FB0h ;# 
   204                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   205  0000                     CMCON equ 0FB4h ;# 
   206                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   207  0000                     CVRCON equ 0FB5h ;# 
   208                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   209  0000                     ECCP1AS equ 0FB6h ;# 
   210                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   211  0000                     ECCP1DEL equ 0FB7h ;# 
   212                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   213  0000                     PWM1CON equ 0FB7h ;# 
   214                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   215  0000                     BAUDCON equ 0FB8h ;# 
   216                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   217  0000                     BAUDCTL equ 0FB8h ;# 
   218                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   219  0000                     CCP2CON equ 0FBAh ;# 
   220                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   221  0000                     CCPR2 equ 0FBBh ;# 
   222                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   223  0000                     CCPR2L equ 0FBBh ;# 
   224                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   225  0000                     CCPR2H equ 0FBCh ;# 
   226                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   227  0000                     ECCP1CON equ 0FBDh ;# 
   228                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   229  0000                     CCP1CON equ 0FBDh ;# 
   230                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   231  0000                     CCPR1 equ 0FBEh ;# 
   232                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   233  0000                     CCPR1L equ 0FBEh ;# 
   234                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   235  0000                     CCPR1H equ 0FBFh ;# 
   236                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   237  0000                     ADCON2 equ 0FC0h ;# 
   238                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   239  0000                     ADCON1 equ 0FC1h ;# 
   240                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   241  0000                     ADCON0 equ 0FC2h ;# 
   242                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   243  0000                     ADRES equ 0FC3h ;# 
   244                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   245  0000                     ADRESL equ 0FC3h ;# 
   246                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   247  0000                     ADRESH equ 0FC4h ;# 
   248                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   249  0000                     SSPCON2 equ 0FC5h ;# 
   250                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   251  0000                     SSP1CON2 equ 0FC5h ;# 
   252                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   253  0000                     SSPCON1 equ 0FC6h ;# 
   254                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   255  0000                     SSP1CON1 equ 0FC6h ;# 
   256                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   257  0000                     SSPSTAT equ 0FC7h ;# 
   258                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   259  0000                     SSP1STAT equ 0FC7h ;# 
   260                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   261  0000                     SSPADD equ 0FC8h ;# 
   262                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   263  0000                     SSP1ADD equ 0FC8h ;# 
   264                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   265  0000                     SSPBUF equ 0FC9h ;# 
   266                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   267  0000                     SSP1BUF equ 0FC9h ;# 
   268                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   269  0000                     T2CON equ 0FCAh ;# 
   270                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   271  0000                     PR2 equ 0FCBh ;# 
   272                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   273  0000                     MEMCON equ 0FCBh ;# 
   274                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   275  0000                     TMR2 equ 0FCCh ;# 
   276                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   277  0000                     T1CON equ 0FCDh ;# 
   278                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   279  0000                     TMR1 equ 0FCEh ;# 
   280                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   281  0000                     TMR1L equ 0FCEh ;# 
   282                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   283  0000                     TMR1H equ 0FCFh ;# 
   284                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   285  0000                     RCON equ 0FD0h ;# 
   286                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   287  0000                     WDTCON equ 0FD1h ;# 
   288                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   289  0000                     OSCCON equ 0FD3h ;# 
   290                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   291  0000                     T0CON equ 0FD5h ;# 
   292                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   293  0000                     TMR0 equ 0FD6h ;# 
   294                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   295  0000                     TMR0L equ 0FD6h ;# 
   296                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   297  0000                     TMR0H equ 0FD7h ;# 
   298                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   299  0000                     STATUS equ 0FD8h ;# 
   300                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   301  0000                     FSR2 equ 0FD9h ;# 
   302                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   303  0000                     FSR2L equ 0FD9h ;# 
   304                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   305  0000                     FSR2H equ 0FDAh ;# 
   306                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   307  0000                     PLUSW2 equ 0FDBh ;# 
   308                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   309  0000                     PREINC2 equ 0FDCh ;# 
   310                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   311  0000                     POSTDEC2 equ 0FDDh ;# 
   312                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   313  0000                     POSTINC2 equ 0FDEh ;# 
   314                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   315  0000                     INDF2 equ 0FDFh ;# 
   316                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   317  0000                     BSR equ 0FE0h ;# 
   318                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   319  0000                     FSR1 equ 0FE1h ;# 
   320                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   321  0000                     FSR1L equ 0FE1h ;# 
   322                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   323  0000                     FSR1H equ 0FE2h ;# 
   324                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   325  0000                     PLUSW1 equ 0FE3h ;# 
   326                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   327  0000                     PREINC1 equ 0FE4h ;# 
   328                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   329  0000                     POSTDEC1 equ 0FE5h ;# 
   330                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   331  0000                     POSTINC1 equ 0FE6h ;# 
   332                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   333  0000                     INDF1 equ 0FE7h ;# 
   334                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   335  0000                     WREG equ 0FE8h ;# 
   336                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   337  0000                     FSR0 equ 0FE9h ;# 
   338                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   339  0000                     FSR0L equ 0FE9h ;# 
   340                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   341  0000                     FSR0H equ 0FEAh ;# 
   342                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   343  0000                     PLUSW0 equ 0FEBh ;# 
   344                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   345  0000                     PREINC0 equ 0FECh ;# 
   346                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   347  0000                     POSTDEC0 equ 0FEDh ;# 
   348                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   349  0000                     POSTINC0 equ 0FEEh ;# 
   350                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   351  0000                     INDF0 equ 0FEFh ;# 
   352                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   353  0000                     INTCON3 equ 0FF0h ;# 
   354                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   355  0000                     INTCON2 equ 0FF1h ;# 
   356                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   357  0000                     INTCON equ 0FF2h ;# 
   358                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   359  0000                     PROD equ 0FF3h ;# 
   360                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   361  0000                     PRODL equ 0FF3h ;# 
   362                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   363  0000                     PRODH equ 0FF4h ;# 
   364                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   365  0000                     TABLAT equ 0FF5h ;# 
   366                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   367  0000                     TBLPTR equ 0FF6h ;# 
   368                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   369  0000                     TBLPTRL equ 0FF6h ;# 
   370                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   371  0000                     TBLPTRH equ 0FF7h ;# 
   372                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   373  0000                     TBLPTRU equ 0FF8h ;# 
   374                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   375  0000                     PCLAT equ 0FF9h ;# 
   376                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   377  0000                     PC equ 0FF9h ;# 
   378                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   379  0000                     PCL equ 0FF9h ;# 
   380                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   381  0000                     PCLATH equ 0FFAh ;# 
   382                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   383  0000                     PCLATU equ 0FFBh ;# 
   384                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   385  0000                     STKPTR equ 0FFCh ;# 
   386                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   387  0000                     TOS equ 0FFDh ;# 
   388                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   389  0000                     TOSL equ 0FFDh ;# 
   390                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   391  0000                     TOSH equ 0FFEh ;# 
   392                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   393  0000                     TOSU equ 0FFFh ;# 
   394                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   395  0000                     PORTA equ 0F80h ;# 
   396                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   397  0000                     PORTB equ 0F81h ;# 
   398                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   399  0000                     PORTC equ 0F82h ;# 
   400                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   401  0000                     PORTD equ 0F83h ;# 
   402                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   403  0000                     PORTE equ 0F84h ;# 
   404                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   405  0000                     SSP2CON2 equ 0F85h ;# 
   406                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   407  0000                     SSP2CON1 equ 0F86h ;# 
   408                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   409  0000                     SSP2STAT equ 0F87h ;# 
   410                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   411  0000                     SSP2ADD equ 0F88h ;# 
   412                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   413  0000                     LATA equ 0F89h ;# 
   414                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   415  0000                     LATB equ 0F8Ah ;# 
   416                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   417  0000                     LATC equ 0F8Bh ;# 
   418                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   419  0000                     LATD equ 0F8Ch ;# 
   420                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   421  0000                     LATE equ 0F8Dh ;# 
   422                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   423  0000                     SSP2BUF equ 0F8Eh ;# 
   424                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   425  0000                     TRISA equ 0F92h ;# 
   426                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   427  0000                     DDRA equ 0F92h ;# 
   428                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   429  0000                     TRISB equ 0F93h ;# 
   430                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   431  0000                     DDRB equ 0F93h ;# 
   432                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   433  0000                     TRISC equ 0F94h ;# 
   434                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   435  0000                     DDRC equ 0F94h ;# 
   436                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   437  0000                     TRISD equ 0F95h ;# 
   438                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   439  0000                     DDRD equ 0F95h ;# 
   440                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   441  0000                     TRISE equ 0F96h ;# 
   442                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   443  0000                     DDRE equ 0F96h ;# 
   444                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   445  0000                     OSCTUNE equ 0F9Bh ;# 
   446                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   447  0000                     PIE1 equ 0F9Dh ;# 
   448                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   449  0000                     PIR1 equ 0F9Eh ;# 
   450                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   451  0000                     IPR1 equ 0F9Fh ;# 
   452                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   453  0000                     PIE2 equ 0FA0h ;# 
   454                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   455  0000                     PIR2 equ 0FA1h ;# 
   456                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   457  0000                     IPR2 equ 0FA2h ;# 
   458                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   459  0000                     PIE3 equ 0FA3h ;# 
   460                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   461  0000                     PIR3 equ 0FA4h ;# 
   462                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   463  0000                     IPR3 equ 0FA5h ;# 
   464                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   465  0000                     EECON1 equ 0FA6h ;# 
   466                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   467  0000                     EECON2 equ 0FA7h ;# 
   468                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   469  0000                     RCSTA equ 0FABh ;# 
   470                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   471  0000                     RCSTA1 equ 0FABh ;# 
   472                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   473  0000                     TXSTA equ 0FACh ;# 
   474                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   475  0000                     TXSTA1 equ 0FACh ;# 
   476                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   477  0000                     TXREG equ 0FADh ;# 
   478                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   479  0000                     TXREG1 equ 0FADh ;# 
   480                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   481  0000                     RCREG equ 0FAEh ;# 
   482                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   483  0000                     RCREG1 equ 0FAEh ;# 
   484                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   485  0000                     SPBRG equ 0FAFh ;# 
   486                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   487  0000                     SPBRG1 equ 0FAFh ;# 
   488                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   489  0000                     SPBRGH equ 0FB0h ;# 
   490                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   491  0000                     CMCON equ 0FB4h ;# 
   492                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   493  0000                     CVRCON equ 0FB5h ;# 
   494                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   495  0000                     ECCP1AS equ 0FB6h ;# 
   496                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   497  0000                     ECCP1DEL equ 0FB7h ;# 
   498                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   499  0000                     PWM1CON equ 0FB7h ;# 
   500                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   501  0000                     BAUDCON equ 0FB8h ;# 
   502                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   503  0000                     BAUDCTL equ 0FB8h ;# 
   504                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   505  0000                     CCP2CON equ 0FBAh ;# 
   506                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   507  0000                     CCPR2 equ 0FBBh ;# 
   508                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   509  0000                     CCPR2L equ 0FBBh ;# 
   510                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   511  0000                     CCPR2H equ 0FBCh ;# 
   512                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   513  0000                     ECCP1CON equ 0FBDh ;# 
   514                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   515  0000                     CCP1CON equ 0FBDh ;# 
   516                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   517  0000                     CCPR1 equ 0FBEh ;# 
   518                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   519  0000                     CCPR1L equ 0FBEh ;# 
   520                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   521  0000                     CCPR1H equ 0FBFh ;# 
   522                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   523  0000                     ADCON2 equ 0FC0h ;# 
   524                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   525  0000                     ADCON1 equ 0FC1h ;# 
   526                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   527  0000                     ADCON0 equ 0FC2h ;# 
   528                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   529  0000                     ADRES equ 0FC3h ;# 
   530                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   531  0000                     ADRESL equ 0FC3h ;# 
   532                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   533  0000                     ADRESH equ 0FC4h ;# 
   534                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   535  0000                     SSPCON2 equ 0FC5h ;# 
   536                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   537  0000                     SSP1CON2 equ 0FC5h ;# 
   538                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   539  0000                     SSPCON1 equ 0FC6h ;# 
   540                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   541  0000                     SSP1CON1 equ 0FC6h ;# 
   542                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   543  0000                     SSPSTAT equ 0FC7h ;# 
   544                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   545  0000                     SSP1STAT equ 0FC7h ;# 
   546                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   547  0000                     SSPADD equ 0FC8h ;# 
   548                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   549  0000                     SSP1ADD equ 0FC8h ;# 
   550                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   551  0000                     SSPBUF equ 0FC9h ;# 
   552                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   553  0000                     SSP1BUF equ 0FC9h ;# 
   554                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   555  0000                     T2CON equ 0FCAh ;# 
   556                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   557  0000                     PR2 equ 0FCBh ;# 
   558                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   559  0000                     MEMCON equ 0FCBh ;# 
   560                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   561  0000                     TMR2 equ 0FCCh ;# 
   562                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   563  0000                     T1CON equ 0FCDh ;# 
   564                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   565  0000                     TMR1 equ 0FCEh ;# 
   566                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   567  0000                     TMR1L equ 0FCEh ;# 
   568                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   569  0000                     TMR1H equ 0FCFh ;# 
   570                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   571  0000                     RCON equ 0FD0h ;# 
   572                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   573  0000                     WDTCON equ 0FD1h ;# 
   574                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   575  0000                     OSCCON equ 0FD3h ;# 
   576                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   577  0000                     T0CON equ 0FD5h ;# 
   578                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   579  0000                     TMR0 equ 0FD6h ;# 
   580                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   581  0000                     TMR0L equ 0FD6h ;# 
   582                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   583  0000                     TMR0H equ 0FD7h ;# 
   584                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   585  0000                     STATUS equ 0FD8h ;# 
   586                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   587  0000                     FSR2 equ 0FD9h ;# 
   588                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   589  0000                     FSR2L equ 0FD9h ;# 
   590                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   591  0000                     FSR2H equ 0FDAh ;# 
   592                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   593  0000                     PLUSW2 equ 0FDBh ;# 
   594                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   595  0000                     PREINC2 equ 0FDCh ;# 
   596                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   597  0000                     POSTDEC2 equ 0FDDh ;# 
   598                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   599  0000                     POSTINC2 equ 0FDEh ;# 
   600                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   601  0000                     INDF2 equ 0FDFh ;# 
   602                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   603  0000                     BSR equ 0FE0h ;# 
   604                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   605  0000                     FSR1 equ 0FE1h ;# 
   606                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   607  0000                     FSR1L equ 0FE1h ;# 
   608                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   609  0000                     FSR1H equ 0FE2h ;# 
   610                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   611  0000                     PLUSW1 equ 0FE3h ;# 
   612                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   613  0000                     PREINC1 equ 0FE4h ;# 
   614                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   615  0000                     POSTDEC1 equ 0FE5h ;# 
   616                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   617  0000                     POSTINC1 equ 0FE6h ;# 
   618                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   619  0000                     INDF1 equ 0FE7h ;# 
   620                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   621  0000                     WREG equ 0FE8h ;# 
   622                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   623  0000                     FSR0 equ 0FE9h ;# 
   624                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   625  0000                     FSR0L equ 0FE9h ;# 
   626                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   627  0000                     FSR0H equ 0FEAh ;# 
   628                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   629  0000                     PLUSW0 equ 0FEBh ;# 
   630                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   631  0000                     PREINC0 equ 0FECh ;# 
   632                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   633  0000                     POSTDEC0 equ 0FEDh ;# 
   634                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   635  0000                     POSTINC0 equ 0FEEh ;# 
   636                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   637  0000                     INDF0 equ 0FEFh ;# 
   638                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   639  0000                     INTCON3 equ 0FF0h ;# 
   640                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   641  0000                     INTCON2 equ 0FF1h ;# 
   642                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   643  0000                     INTCON equ 0FF2h ;# 
   644                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   645  0000                     PROD equ 0FF3h ;# 
   646                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   647  0000                     PRODL equ 0FF3h ;# 
   648                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   649  0000                     PRODH equ 0FF4h ;# 
   650                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   651  0000                     TABLAT equ 0FF5h ;# 
   652                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   653  0000                     TBLPTR equ 0FF6h ;# 
   654                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   655  0000                     TBLPTRL equ 0FF6h ;# 
   656                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   657  0000                     TBLPTRH equ 0FF7h ;# 
   658                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   659  0000                     TBLPTRU equ 0FF8h ;# 
   660                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   661  0000                     PCLAT equ 0FF9h ;# 
   662                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   663  0000                     PC equ 0FF9h ;# 
   664                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   665  0000                     PCL equ 0FF9h ;# 
   666                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   667  0000                     PCLATH equ 0FFAh ;# 
   668                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   669  0000                     PCLATU equ 0FFBh ;# 
   670                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   671  0000                     STKPTR equ 0FFCh ;# 
   672                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   673  0000                     TOS equ 0FFDh ;# 
   674                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   675  0000                     TOSL equ 0FFDh ;# 
   676                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   677  0000                     TOSH equ 0FFEh ;# 
   678                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   679  0000                     TOSU equ 0FFFh ;# 
   680                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   681  0000                     PORTA equ 0F80h ;# 
   682                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   683  0000                     PORTB equ 0F81h ;# 
   684                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   685  0000                     PORTC equ 0F82h ;# 
   686                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   687  0000                     PORTD equ 0F83h ;# 
   688                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   689  0000                     PORTE equ 0F84h ;# 
   690                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   691  0000                     SSP2CON2 equ 0F85h ;# 
   692                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   693  0000                     SSP2CON1 equ 0F86h ;# 
   694                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   695  0000                     SSP2STAT equ 0F87h ;# 
   696                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   697  0000                     SSP2ADD equ 0F88h ;# 
   698                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   699  0000                     LATA equ 0F89h ;# 
   700                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   701  0000                     LATB equ 0F8Ah ;# 
   702                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   703  0000                     LATC equ 0F8Bh ;# 
   704                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   705  0000                     LATD equ 0F8Ch ;# 
   706                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   707  0000                     LATE equ 0F8Dh ;# 
   708                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   709  0000                     SSP2BUF equ 0F8Eh ;# 
   710                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   711  0000                     TRISA equ 0F92h ;# 
   712                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   713  0000                     DDRA equ 0F92h ;# 
   714                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   715  0000                     TRISB equ 0F93h ;# 
   716                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   717  0000                     DDRB equ 0F93h ;# 
   718                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   719  0000                     TRISC equ 0F94h ;# 
   720                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   721  0000                     DDRC equ 0F94h ;# 
   722                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   723  0000                     TRISD equ 0F95h ;# 
   724                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   725  0000                     DDRD equ 0F95h ;# 
   726                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   727  0000                     TRISE equ 0F96h ;# 
   728                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   729  0000                     DDRE equ 0F96h ;# 
   730                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   731  0000                     OSCTUNE equ 0F9Bh ;# 
   732                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   733  0000                     PIE1 equ 0F9Dh ;# 
   734                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   735  0000                     PIR1 equ 0F9Eh ;# 
   736                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   737  0000                     IPR1 equ 0F9Fh ;# 
   738                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   739  0000                     PIE2 equ 0FA0h ;# 
   740                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   741  0000                     PIR2 equ 0FA1h ;# 
   742                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   743  0000                     IPR2 equ 0FA2h ;# 
   744                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   745  0000                     PIE3 equ 0FA3h ;# 
   746                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   747  0000                     PIR3 equ 0FA4h ;# 
   748                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   749  0000                     IPR3 equ 0FA5h ;# 
   750                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   751  0000                     EECON1 equ 0FA6h ;# 
   752                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   753  0000                     EECON2 equ 0FA7h ;# 
   754                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   755  0000                     RCSTA equ 0FABh ;# 
   756                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   757  0000                     RCSTA1 equ 0FABh ;# 
   758                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   759  0000                     TXSTA equ 0FACh ;# 
   760                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   761  0000                     TXSTA1 equ 0FACh ;# 
   762                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   763  0000                     TXREG equ 0FADh ;# 
   764                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   765  0000                     TXREG1 equ 0FADh ;# 
   766                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   767  0000                     RCREG equ 0FAEh ;# 
   768                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   769  0000                     RCREG1 equ 0FAEh ;# 
   770                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   771  0000                     SPBRG equ 0FAFh ;# 
   772                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   773  0000                     SPBRG1 equ 0FAFh ;# 
   774                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   775  0000                     SPBRGH equ 0FB0h ;# 
   776                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   777  0000                     CMCON equ 0FB4h ;# 
   778                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   779  0000                     CVRCON equ 0FB5h ;# 
   780                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   781  0000                     ECCP1AS equ 0FB6h ;# 
   782                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   783  0000                     ECCP1DEL equ 0FB7h ;# 
   784                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   785  0000                     PWM1CON equ 0FB7h ;# 
   786                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   787  0000                     BAUDCON equ 0FB8h ;# 
   788                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   789  0000                     BAUDCTL equ 0FB8h ;# 
   790                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   791  0000                     CCP2CON equ 0FBAh ;# 
   792                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   793  0000                     CCPR2 equ 0FBBh ;# 
   794                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   795  0000                     CCPR2L equ 0FBBh ;# 
   796                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   797  0000                     CCPR2H equ 0FBCh ;# 
   798                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   799  0000                     ECCP1CON equ 0FBDh ;# 
   800                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   801  0000                     CCP1CON equ 0FBDh ;# 
   802                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   803  0000                     CCPR1 equ 0FBEh ;# 
   804                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   805  0000                     CCPR1L equ 0FBEh ;# 
   806                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   807  0000                     CCPR1H equ 0FBFh ;# 
   808                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   809  0000                     ADCON2 equ 0FC0h ;# 
   810                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   811  0000                     ADCON1 equ 0FC1h ;# 
   812                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   813  0000                     ADCON0 equ 0FC2h ;# 
   814                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   815  0000                     ADRES equ 0FC3h ;# 
   816                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   817  0000                     ADRESL equ 0FC3h ;# 
   818                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   819  0000                     ADRESH equ 0FC4h ;# 
   820                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   821  0000                     SSPCON2 equ 0FC5h ;# 
   822                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   823  0000                     SSP1CON2 equ 0FC5h ;# 
   824                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   825  0000                     SSPCON1 equ 0FC6h ;# 
   826                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   827  0000                     SSP1CON1 equ 0FC6h ;# 
   828                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   829  0000                     SSPSTAT equ 0FC7h ;# 
   830                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   831  0000                     SSP1STAT equ 0FC7h ;# 
   832                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   833  0000                     SSPADD equ 0FC8h ;# 
   834                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   835  0000                     SSP1ADD equ 0FC8h ;# 
   836                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   837  0000                     SSPBUF equ 0FC9h ;# 
   838                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   839  0000                     SSP1BUF equ 0FC9h ;# 
   840                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   841  0000                     T2CON equ 0FCAh ;# 
   842                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   843  0000                     PR2 equ 0FCBh ;# 
   844                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   845  0000                     MEMCON equ 0FCBh ;# 
   846                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   847  0000                     TMR2 equ 0FCCh ;# 
   848                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   849  0000                     T1CON equ 0FCDh ;# 
   850                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   851  0000                     TMR1 equ 0FCEh ;# 
   852                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   853  0000                     TMR1L equ 0FCEh ;# 
   854                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   855  0000                     TMR1H equ 0FCFh ;# 
   856                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   857  0000                     RCON equ 0FD0h ;# 
   858                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   859  0000                     WDTCON equ 0FD1h ;# 
   860                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   861  0000                     OSCCON equ 0FD3h ;# 
   862                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   863  0000                     T0CON equ 0FD5h ;# 
   864                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   865  0000                     TMR0 equ 0FD6h ;# 
   866                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   867  0000                     TMR0L equ 0FD6h ;# 
   868                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   869  0000                     TMR0H equ 0FD7h ;# 
   870                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   871  0000                     STATUS equ 0FD8h ;# 
   872                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   873  0000                     FSR2 equ 0FD9h ;# 
   874                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   875  0000                     FSR2L equ 0FD9h ;# 
   876                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   877  0000                     FSR2H equ 0FDAh ;# 
   878                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   879  0000                     PLUSW2 equ 0FDBh ;# 
   880                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   881  0000                     PREINC2 equ 0FDCh ;# 
   882                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   883  0000                     POSTDEC2 equ 0FDDh ;# 
   884                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   885  0000                     POSTINC2 equ 0FDEh ;# 
   886                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   887  0000                     INDF2 equ 0FDFh ;# 
   888                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   889  0000                     BSR equ 0FE0h ;# 
   890                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   891  0000                     FSR1 equ 0FE1h ;# 
   892                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   893  0000                     FSR1L equ 0FE1h ;# 
   894                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   895  0000                     FSR1H equ 0FE2h ;# 
   896                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   897  0000                     PLUSW1 equ 0FE3h ;# 
   898                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   899  0000                     PREINC1 equ 0FE4h ;# 
   900                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   901  0000                     POSTDEC1 equ 0FE5h ;# 
   902                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   903  0000                     POSTINC1 equ 0FE6h ;# 
   904                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   905  0000                     INDF1 equ 0FE7h ;# 
   906                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   907  0000                     WREG equ 0FE8h ;# 
   908                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   909  0000                     FSR0 equ 0FE9h ;# 
   910                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   911  0000                     FSR0L equ 0FE9h ;# 
   912                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   913  0000                     FSR0H equ 0FEAh ;# 
   914                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   915  0000                     PLUSW0 equ 0FEBh ;# 
   916                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   917  0000                     PREINC0 equ 0FECh ;# 
   918                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   919  0000                     POSTDEC0 equ 0FEDh ;# 
   920                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   921  0000                     POSTINC0 equ 0FEEh ;# 
   922                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   923  0000                     INDF0 equ 0FEFh ;# 
   924                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   925  0000                     INTCON3 equ 0FF0h ;# 
   926                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   927  0000                     INTCON2 equ 0FF1h ;# 
   928                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   929  0000                     INTCON equ 0FF2h ;# 
   930                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   931  0000                     PROD equ 0FF3h ;# 
   932                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   933  0000                     PRODL equ 0FF3h ;# 
   934                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   935  0000                     PRODH equ 0FF4h ;# 
   936                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   937  0000                     TABLAT equ 0FF5h ;# 
   938                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   939  0000                     TBLPTR equ 0FF6h ;# 
   940                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   941  0000                     TBLPTRL equ 0FF6h ;# 
   942                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   943  0000                     TBLPTRH equ 0FF7h ;# 
   944                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   945  0000                     TBLPTRU equ 0FF8h ;# 
   946                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   947  0000                     PCLAT equ 0FF9h ;# 
   948                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   949  0000                     PC equ 0FF9h ;# 
   950                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   951  0000                     PCL equ 0FF9h ;# 
   952                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   953  0000                     PCLATH equ 0FFAh ;# 
   954                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   955  0000                     PCLATU equ 0FFBh ;# 
   956                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   957  0000                     STKPTR equ 0FFCh ;# 
   958                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   959  0000                     TOS equ 0FFDh ;# 
   960                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   961  0000                     TOSL equ 0FFDh ;# 
   962                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   963  0000                     TOSH equ 0FFEh ;# 
   964                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   965  0000                     TOSU equ 0FFFh ;# 
   966                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   967  0000                     PORTA equ 0F80h ;# 
   968                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   969  0000                     PORTB equ 0F81h ;# 
   970                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   971  0000                     PORTC equ 0F82h ;# 
   972                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   973  0000                     PORTD equ 0F83h ;# 
   974                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   975  0000                     PORTE equ 0F84h ;# 
   976                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   977  0000                     SSP2CON2 equ 0F85h ;# 
   978                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   979  0000                     SSP2CON1 equ 0F86h ;# 
   980                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   981  0000                     SSP2STAT equ 0F87h ;# 
   982                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   983  0000                     SSP2ADD equ 0F88h ;# 
   984                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   985  0000                     LATA equ 0F89h ;# 
   986                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   987  0000                     LATB equ 0F8Ah ;# 
   988                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   989  0000                     LATC equ 0F8Bh ;# 
   990                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   991  0000                     LATD equ 0F8Ch ;# 
   992                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   993  0000                     LATE equ 0F8Dh ;# 
   994                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   995  0000                     SSP2BUF equ 0F8Eh ;# 
   996                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   997  0000                     TRISA equ 0F92h ;# 
   998                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
   999  0000                     DDRA equ 0F92h ;# 
  1000                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1001  0000                     TRISB equ 0F93h ;# 
  1002                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1003  0000                     DDRB equ 0F93h ;# 
  1004                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1005  0000                     TRISC equ 0F94h ;# 
  1006                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1007  0000                     DDRC equ 0F94h ;# 
  1008                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1009  0000                     TRISD equ 0F95h ;# 
  1010                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1011  0000                     DDRD equ 0F95h ;# 
  1012                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1013  0000                     TRISE equ 0F96h ;# 
  1014                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1015  0000                     DDRE equ 0F96h ;# 
  1016                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1017  0000                     OSCTUNE equ 0F9Bh ;# 
  1018                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1019  0000                     PIE1 equ 0F9Dh ;# 
  1020                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1021  0000                     PIR1 equ 0F9Eh ;# 
  1022                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1023  0000                     IPR1 equ 0F9Fh ;# 
  1024                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1025  0000                     PIE2 equ 0FA0h ;# 
  1026                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1027  0000                     PIR2 equ 0FA1h ;# 
  1028                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1029  0000                     IPR2 equ 0FA2h ;# 
  1030                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1031  0000                     PIE3 equ 0FA3h ;# 
  1032                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1033  0000                     PIR3 equ 0FA4h ;# 
  1034                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1035  0000                     IPR3 equ 0FA5h ;# 
  1036                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1037  0000                     EECON1 equ 0FA6h ;# 
  1038                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1039  0000                     EECON2 equ 0FA7h ;# 
  1040                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1041  0000                     RCSTA equ 0FABh ;# 
  1042                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1043  0000                     RCSTA1 equ 0FABh ;# 
  1044                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1045  0000                     TXSTA equ 0FACh ;# 
  1046                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1047  0000                     TXSTA1 equ 0FACh ;# 
  1048                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1049  0000                     TXREG equ 0FADh ;# 
  1050                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1051  0000                     TXREG1 equ 0FADh ;# 
  1052                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1053  0000                     RCREG equ 0FAEh ;# 
  1054                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1055  0000                     RCREG1 equ 0FAEh ;# 
  1056                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1057  0000                     SPBRG equ 0FAFh ;# 
  1058                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1059  0000                     SPBRG1 equ 0FAFh ;# 
  1060                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1061  0000                     SPBRGH equ 0FB0h ;# 
  1062                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1063  0000                     CMCON equ 0FB4h ;# 
  1064                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1065  0000                     CVRCON equ 0FB5h ;# 
  1066                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1067  0000                     ECCP1AS equ 0FB6h ;# 
  1068                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1069  0000                     ECCP1DEL equ 0FB7h ;# 
  1070                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1071  0000                     PWM1CON equ 0FB7h ;# 
  1072                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1073  0000                     BAUDCON equ 0FB8h ;# 
  1074                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1075  0000                     BAUDCTL equ 0FB8h ;# 
  1076                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1077  0000                     CCP2CON equ 0FBAh ;# 
  1078                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1079  0000                     CCPR2 equ 0FBBh ;# 
  1080                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1081  0000                     CCPR2L equ 0FBBh ;# 
  1082                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1083  0000                     CCPR2H equ 0FBCh ;# 
  1084                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1085  0000                     ECCP1CON equ 0FBDh ;# 
  1086                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1087  0000                     CCP1CON equ 0FBDh ;# 
  1088                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1089  0000                     CCPR1 equ 0FBEh ;# 
  1090                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1091  0000                     CCPR1L equ 0FBEh ;# 
  1092                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1093  0000                     CCPR1H equ 0FBFh ;# 
  1094                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1095  0000                     ADCON2 equ 0FC0h ;# 
  1096                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1097  0000                     ADCON1 equ 0FC1h ;# 
  1098                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1099  0000                     ADCON0 equ 0FC2h ;# 
  1100                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1101  0000                     ADRES equ 0FC3h ;# 
  1102                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1103  0000                     ADRESL equ 0FC3h ;# 
  1104                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1105  0000                     ADRESH equ 0FC4h ;# 
  1106                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1107  0000                     SSPCON2 equ 0FC5h ;# 
  1108                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1109  0000                     SSP1CON2 equ 0FC5h ;# 
  1110                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1111  0000                     SSPCON1 equ 0FC6h ;# 
  1112                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1113  0000                     SSP1CON1 equ 0FC6h ;# 
  1114                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1115  0000                     SSPSTAT equ 0FC7h ;# 
  1116                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1117  0000                     SSP1STAT equ 0FC7h ;# 
  1118                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1119  0000                     SSPADD equ 0FC8h ;# 
  1120                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1121  0000                     SSP1ADD equ 0FC8h ;# 
  1122                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1123  0000                     SSPBUF equ 0FC9h ;# 
  1124                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1125  0000                     SSP1BUF equ 0FC9h ;# 
  1126                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1127  0000                     T2CON equ 0FCAh ;# 
  1128                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1129  0000                     PR2 equ 0FCBh ;# 
  1130                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1131  0000                     MEMCON equ 0FCBh ;# 
  1132                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1133  0000                     TMR2 equ 0FCCh ;# 
  1134                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1135  0000                     T1CON equ 0FCDh ;# 
  1136                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1137  0000                     TMR1 equ 0FCEh ;# 
  1138                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1139  0000                     TMR1L equ 0FCEh ;# 
  1140                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1141  0000                     TMR1H equ 0FCFh ;# 
  1142                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1143  0000                     RCON equ 0FD0h ;# 
  1144                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1145  0000                     WDTCON equ 0FD1h ;# 
  1146                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1147  0000                     OSCCON equ 0FD3h ;# 
  1148                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1149  0000                     T0CON equ 0FD5h ;# 
  1150                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1151  0000                     TMR0 equ 0FD6h ;# 
  1152                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1153  0000                     TMR0L equ 0FD6h ;# 
  1154                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1155  0000                     TMR0H equ 0FD7h ;# 
  1156                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1157  0000                     STATUS equ 0FD8h ;# 
  1158                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1159  0000                     FSR2 equ 0FD9h ;# 
  1160                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1161  0000                     FSR2L equ 0FD9h ;# 
  1162                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1163  0000                     FSR2H equ 0FDAh ;# 
  1164                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1165  0000                     PLUSW2 equ 0FDBh ;# 
  1166                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1167  0000                     PREINC2 equ 0FDCh ;# 
  1168                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1169  0000                     POSTDEC2 equ 0FDDh ;# 
  1170                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1171  0000                     POSTINC2 equ 0FDEh ;# 
  1172                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1173  0000                     INDF2 equ 0FDFh ;# 
  1174                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1175  0000                     BSR equ 0FE0h ;# 
  1176                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1177  0000                     FSR1 equ 0FE1h ;# 
  1178                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1179  0000                     FSR1L equ 0FE1h ;# 
  1180                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1181  0000                     FSR1H equ 0FE2h ;# 
  1182                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1183  0000                     PLUSW1 equ 0FE3h ;# 
  1184                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1185  0000                     PREINC1 equ 0FE4h ;# 
  1186                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1187  0000                     POSTDEC1 equ 0FE5h ;# 
  1188                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1189  0000                     POSTINC1 equ 0FE6h ;# 
  1190                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1191  0000                     INDF1 equ 0FE7h ;# 
  1192                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1193  0000                     WREG equ 0FE8h ;# 
  1194                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1195  0000                     FSR0 equ 0FE9h ;# 
  1196                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1197  0000                     FSR0L equ 0FE9h ;# 
  1198                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1199  0000                     FSR0H equ 0FEAh ;# 
  1200                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1201  0000                     PLUSW0 equ 0FEBh ;# 
  1202                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1203  0000                     PREINC0 equ 0FECh ;# 
  1204                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1205  0000                     POSTDEC0 equ 0FEDh ;# 
  1206                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1207  0000                     POSTINC0 equ 0FEEh ;# 
  1208                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1209  0000                     INDF0 equ 0FEFh ;# 
  1210                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1211  0000                     INTCON3 equ 0FF0h ;# 
  1212                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1213  0000                     INTCON2 equ 0FF1h ;# 
  1214                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1215  0000                     INTCON equ 0FF2h ;# 
  1216                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1217  0000                     PROD equ 0FF3h ;# 
  1218                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1219  0000                     PRODL equ 0FF3h ;# 
  1220                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1221  0000                     PRODH equ 0FF4h ;# 
  1222                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1223  0000                     TABLAT equ 0FF5h ;# 
  1224                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1225  0000                     TBLPTR equ 0FF6h ;# 
  1226                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1227  0000                     TBLPTRL equ 0FF6h ;# 
  1228                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1229  0000                     TBLPTRH equ 0FF7h ;# 
  1230                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1231  0000                     TBLPTRU equ 0FF8h ;# 
  1232                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1233  0000                     PCLAT equ 0FF9h ;# 
  1234                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1235  0000                     PC equ 0FF9h ;# 
  1236                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1237  0000                     PCL equ 0FF9h ;# 
  1238                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1239  0000                     PCLATH equ 0FFAh ;# 
  1240                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1241  0000                     PCLATU equ 0FFBh ;# 
  1242                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1243  0000                     STKPTR equ 0FFCh ;# 
  1244                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1245  0000                     TOS equ 0FFDh ;# 
  1246                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1247  0000                     TOSL equ 0FFDh ;# 
  1248                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1249  0000                     TOSH equ 0FFEh ;# 
  1250                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1251  0000                     TOSU equ 0FFFh ;# 
  1252                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1253  0000                     PORTA equ 0F80h ;# 
  1254                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1255  0000                     PORTB equ 0F81h ;# 
  1256                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1257  0000                     PORTC equ 0F82h ;# 
  1258                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1259  0000                     PORTD equ 0F83h ;# 
  1260                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1261  0000                     PORTE equ 0F84h ;# 
  1262                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1263  0000                     SSP2CON2 equ 0F85h ;# 
  1264                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1265  0000                     SSP2CON1 equ 0F86h ;# 
  1266                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1267  0000                     SSP2STAT equ 0F87h ;# 
  1268                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1269  0000                     SSP2ADD equ 0F88h ;# 
  1270                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1271  0000                     LATA equ 0F89h ;# 
  1272                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1273  0000                     LATB equ 0F8Ah ;# 
  1274                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1275  0000                     LATC equ 0F8Bh ;# 
  1276                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1277  0000                     LATD equ 0F8Ch ;# 
  1278                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1279  0000                     LATE equ 0F8Dh ;# 
  1280                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1281  0000                     SSP2BUF equ 0F8Eh ;# 
  1282                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1283  0000                     TRISA equ 0F92h ;# 
  1284                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1285  0000                     DDRA equ 0F92h ;# 
  1286                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1287  0000                     TRISB equ 0F93h ;# 
  1288                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1289  0000                     DDRB equ 0F93h ;# 
  1290                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1291  0000                     TRISC equ 0F94h ;# 
  1292                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1293  0000                     DDRC equ 0F94h ;# 
  1294                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1295  0000                     TRISD equ 0F95h ;# 
  1296                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1297  0000                     DDRD equ 0F95h ;# 
  1298                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1299  0000                     TRISE equ 0F96h ;# 
  1300                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1301  0000                     DDRE equ 0F96h ;# 
  1302                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1303  0000                     OSCTUNE equ 0F9Bh ;# 
  1304                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1305  0000                     PIE1 equ 0F9Dh ;# 
  1306                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1307  0000                     PIR1 equ 0F9Eh ;# 
  1308                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1309  0000                     IPR1 equ 0F9Fh ;# 
  1310                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1311  0000                     PIE2 equ 0FA0h ;# 
  1312                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1313  0000                     PIR2 equ 0FA1h ;# 
  1314                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1315  0000                     IPR2 equ 0FA2h ;# 
  1316                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1317  0000                     PIE3 equ 0FA3h ;# 
  1318                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1319  0000                     PIR3 equ 0FA4h ;# 
  1320                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1321  0000                     IPR3 equ 0FA5h ;# 
  1322                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1323  0000                     EECON1 equ 0FA6h ;# 
  1324                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1325  0000                     EECON2 equ 0FA7h ;# 
  1326                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1327  0000                     RCSTA equ 0FABh ;# 
  1328                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1329  0000                     RCSTA1 equ 0FABh ;# 
  1330                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1331  0000                     TXSTA equ 0FACh ;# 
  1332                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1333  0000                     TXSTA1 equ 0FACh ;# 
  1334                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1335  0000                     TXREG equ 0FADh ;# 
  1336                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1337  0000                     TXREG1 equ 0FADh ;# 
  1338                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1339  0000                     RCREG equ 0FAEh ;# 
  1340                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1341  0000                     RCREG1 equ 0FAEh ;# 
  1342                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1343  0000                     SPBRG equ 0FAFh ;# 
  1344                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1345  0000                     SPBRG1 equ 0FAFh ;# 
  1346                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1347  0000                     SPBRGH equ 0FB0h ;# 
  1348                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1349  0000                     CMCON equ 0FB4h ;# 
  1350                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1351  0000                     CVRCON equ 0FB5h ;# 
  1352                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1353  0000                     ECCP1AS equ 0FB6h ;# 
  1354                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1355  0000                     ECCP1DEL equ 0FB7h ;# 
  1356                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1357  0000                     PWM1CON equ 0FB7h ;# 
  1358                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1359  0000                     BAUDCON equ 0FB8h ;# 
  1360                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1361  0000                     BAUDCTL equ 0FB8h ;# 
  1362                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1363  0000                     CCP2CON equ 0FBAh ;# 
  1364                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1365  0000                     CCPR2 equ 0FBBh ;# 
  1366                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1367  0000                     CCPR2L equ 0FBBh ;# 
  1368                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1369  0000                     CCPR2H equ 0FBCh ;# 
  1370                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1371  0000                     ECCP1CON equ 0FBDh ;# 
  1372                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1373  0000                     CCP1CON equ 0FBDh ;# 
  1374                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1375  0000                     CCPR1 equ 0FBEh ;# 
  1376                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1377  0000                     CCPR1L equ 0FBEh ;# 
  1378                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1379  0000                     CCPR1H equ 0FBFh ;# 
  1380                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1381  0000                     ADCON2 equ 0FC0h ;# 
  1382                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1383  0000                     ADCON1 equ 0FC1h ;# 
  1384                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1385  0000                     ADCON0 equ 0FC2h ;# 
  1386                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1387  0000                     ADRES equ 0FC3h ;# 
  1388                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1389  0000                     ADRESL equ 0FC3h ;# 
  1390                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1391  0000                     ADRESH equ 0FC4h ;# 
  1392                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1393  0000                     SSPCON2 equ 0FC5h ;# 
  1394                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1395  0000                     SSP1CON2 equ 0FC5h ;# 
  1396                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1397  0000                     SSPCON1 equ 0FC6h ;# 
  1398                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1399  0000                     SSP1CON1 equ 0FC6h ;# 
  1400                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1401  0000                     SSPSTAT equ 0FC7h ;# 
  1402                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1403  0000                     SSP1STAT equ 0FC7h ;# 
  1404                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1405  0000                     SSPADD equ 0FC8h ;# 
  1406                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1407  0000                     SSP1ADD equ 0FC8h ;# 
  1408                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1409  0000                     SSPBUF equ 0FC9h ;# 
  1410                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1411  0000                     SSP1BUF equ 0FC9h ;# 
  1412                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1413  0000                     T2CON equ 0FCAh ;# 
  1414                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1415  0000                     PR2 equ 0FCBh ;# 
  1416                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1417  0000                     MEMCON equ 0FCBh ;# 
  1418                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1419  0000                     TMR2 equ 0FCCh ;# 
  1420                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1421  0000                     T1CON equ 0FCDh ;# 
  1422                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1423  0000                     TMR1 equ 0FCEh ;# 
  1424                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1425  0000                     TMR1L equ 0FCEh ;# 
  1426                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1427  0000                     TMR1H equ 0FCFh ;# 
  1428                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1429  0000                     RCON equ 0FD0h ;# 
  1430                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1431  0000                     WDTCON equ 0FD1h ;# 
  1432                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1433  0000                     OSCCON equ 0FD3h ;# 
  1434                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1435  0000                     T0CON equ 0FD5h ;# 
  1436                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1437  0000                     TMR0 equ 0FD6h ;# 
  1438                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1439  0000                     TMR0L equ 0FD6h ;# 
  1440                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1441  0000                     TMR0H equ 0FD7h ;# 
  1442                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1443  0000                     STATUS equ 0FD8h ;# 
  1444                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1445  0000                     FSR2 equ 0FD9h ;# 
  1446                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1447  0000                     FSR2L equ 0FD9h ;# 
  1448                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1449  0000                     FSR2H equ 0FDAh ;# 
  1450                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1451  0000                     PLUSW2 equ 0FDBh ;# 
  1452                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1453  0000                     PREINC2 equ 0FDCh ;# 
  1454                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1455  0000                     POSTDEC2 equ 0FDDh ;# 
  1456                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1457  0000                     POSTINC2 equ 0FDEh ;# 
  1458                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1459  0000                     INDF2 equ 0FDFh ;# 
  1460                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1461  0000                     BSR equ 0FE0h ;# 
  1462                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1463  0000                     FSR1 equ 0FE1h ;# 
  1464                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1465  0000                     FSR1L equ 0FE1h ;# 
  1466                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1467  0000                     FSR1H equ 0FE2h ;# 
  1468                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1469  0000                     PLUSW1 equ 0FE3h ;# 
  1470                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1471  0000                     PREINC1 equ 0FE4h ;# 
  1472                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1473  0000                     POSTDEC1 equ 0FE5h ;# 
  1474                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1475  0000                     POSTINC1 equ 0FE6h ;# 
  1476                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1477  0000                     INDF1 equ 0FE7h ;# 
  1478                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1479  0000                     WREG equ 0FE8h ;# 
  1480                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1481  0000                     FSR0 equ 0FE9h ;# 
  1482                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1483  0000                     FSR0L equ 0FE9h ;# 
  1484                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1485  0000                     FSR0H equ 0FEAh ;# 
  1486                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1487  0000                     PLUSW0 equ 0FEBh ;# 
  1488                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1489  0000                     PREINC0 equ 0FECh ;# 
  1490                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1491  0000                     POSTDEC0 equ 0FEDh ;# 
  1492                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1493  0000                     POSTINC0 equ 0FEEh ;# 
  1494                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1495  0000                     INDF0 equ 0FEFh ;# 
  1496                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1497  0000                     INTCON3 equ 0FF0h ;# 
  1498                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1499  0000                     INTCON2 equ 0FF1h ;# 
  1500                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1501  0000                     INTCON equ 0FF2h ;# 
  1502                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1503  0000                     PROD equ 0FF3h ;# 
  1504                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1505  0000                     PRODL equ 0FF3h ;# 
  1506                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1507  0000                     PRODH equ 0FF4h ;# 
  1508                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1509  0000                     TABLAT equ 0FF5h ;# 
  1510                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1511  0000                     TBLPTR equ 0FF6h ;# 
  1512                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1513  0000                     TBLPTRL equ 0FF6h ;# 
  1514                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1515  0000                     TBLPTRH equ 0FF7h ;# 
  1516                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1517  0000                     TBLPTRU equ 0FF8h ;# 
  1518                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1519  0000                     PCLAT equ 0FF9h ;# 
  1520                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1521  0000                     PC equ 0FF9h ;# 
  1522                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1523  0000                     PCL equ 0FF9h ;# 
  1524                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1525  0000                     PCLATH equ 0FFAh ;# 
  1526                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1527  0000                     PCLATU equ 0FFBh ;# 
  1528                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1529  0000                     STKPTR equ 0FFCh ;# 
  1530                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1531  0000                     TOS equ 0FFDh ;# 
  1532                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1533  0000                     TOSL equ 0FFDh ;# 
  1534                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1535  0000                     TOSH equ 0FFEh ;# 
  1536                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1537  0000                     TOSU equ 0FFFh ;# 
  1538                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1539  0000                     PORTA equ 0F80h ;# 
  1540                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1541  0000                     PORTB equ 0F81h ;# 
  1542                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1543  0000                     PORTC equ 0F82h ;# 
  1544                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1545  0000                     PORTD equ 0F83h ;# 
  1546                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1547  0000                     PORTE equ 0F84h ;# 
  1548                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1549  0000                     SSP2CON2 equ 0F85h ;# 
  1550                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1551  0000                     SSP2CON1 equ 0F86h ;# 
  1552                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1553  0000                     SSP2STAT equ 0F87h ;# 
  1554                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1555  0000                     SSP2ADD equ 0F88h ;# 
  1556                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1557  0000                     LATA equ 0F89h ;# 
  1558                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1559  0000                     LATB equ 0F8Ah ;# 
  1560                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1561  0000                     LATC equ 0F8Bh ;# 
  1562                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1563  0000                     LATD equ 0F8Ch ;# 
  1564                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1565  0000                     LATE equ 0F8Dh ;# 
  1566                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1567  0000                     SSP2BUF equ 0F8Eh ;# 
  1568                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1569  0000                     TRISA equ 0F92h ;# 
  1570                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1571  0000                     DDRA equ 0F92h ;# 
  1572                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1573  0000                     TRISB equ 0F93h ;# 
  1574                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1575  0000                     DDRB equ 0F93h ;# 
  1576                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1577  0000                     TRISC equ 0F94h ;# 
  1578                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1579  0000                     DDRC equ 0F94h ;# 
  1580                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1581  0000                     TRISD equ 0F95h ;# 
  1582                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1583  0000                     DDRD equ 0F95h ;# 
  1584                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1585  0000                     TRISE equ 0F96h ;# 
  1586                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1587  0000                     DDRE equ 0F96h ;# 
  1588                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1589  0000                     OSCTUNE equ 0F9Bh ;# 
  1590                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1591  0000                     PIE1 equ 0F9Dh ;# 
  1592                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1593  0000                     PIR1 equ 0F9Eh ;# 
  1594                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1595  0000                     IPR1 equ 0F9Fh ;# 
  1596                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1597  0000                     PIE2 equ 0FA0h ;# 
  1598                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1599  0000                     PIR2 equ 0FA1h ;# 
  1600                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1601  0000                     IPR2 equ 0FA2h ;# 
  1602                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1603  0000                     PIE3 equ 0FA3h ;# 
  1604                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1605  0000                     PIR3 equ 0FA4h ;# 
  1606                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1607  0000                     IPR3 equ 0FA5h ;# 
  1608                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1609  0000                     EECON1 equ 0FA6h ;# 
  1610                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1611  0000                     EECON2 equ 0FA7h ;# 
  1612                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1613  0000                     RCSTA equ 0FABh ;# 
  1614                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1615  0000                     RCSTA1 equ 0FABh ;# 
  1616                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1617  0000                     TXSTA equ 0FACh ;# 
  1618                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1619  0000                     TXSTA1 equ 0FACh ;# 
  1620                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1621  0000                     TXREG equ 0FADh ;# 
  1622                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1623  0000                     TXREG1 equ 0FADh ;# 
  1624                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1625  0000                     RCREG equ 0FAEh ;# 
  1626                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1627  0000                     RCREG1 equ 0FAEh ;# 
  1628                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1629  0000                     SPBRG equ 0FAFh ;# 
  1630                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1631  0000                     SPBRG1 equ 0FAFh ;# 
  1632                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1633  0000                     SPBRGH equ 0FB0h ;# 
  1634                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1635  0000                     CMCON equ 0FB4h ;# 
  1636                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1637  0000                     CVRCON equ 0FB5h ;# 
  1638                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1639  0000                     ECCP1AS equ 0FB6h ;# 
  1640                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1641  0000                     ECCP1DEL equ 0FB7h ;# 
  1642                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1643  0000                     PWM1CON equ 0FB7h ;# 
  1644                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1645  0000                     BAUDCON equ 0FB8h ;# 
  1646                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1647  0000                     BAUDCTL equ 0FB8h ;# 
  1648                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1649  0000                     CCP2CON equ 0FBAh ;# 
  1650                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1651  0000                     CCPR2 equ 0FBBh ;# 
  1652                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1653  0000                     CCPR2L equ 0FBBh ;# 
  1654                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1655  0000                     CCPR2H equ 0FBCh ;# 
  1656                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1657  0000                     ECCP1CON equ 0FBDh ;# 
  1658                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1659  0000                     CCP1CON equ 0FBDh ;# 
  1660                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1661  0000                     CCPR1 equ 0FBEh ;# 
  1662                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1663  0000                     CCPR1L equ 0FBEh ;# 
  1664                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1665  0000                     CCPR1H equ 0FBFh ;# 
  1666                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1667  0000                     ADCON2 equ 0FC0h ;# 
  1668                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1669  0000                     ADCON1 equ 0FC1h ;# 
  1670                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1671  0000                     ADCON0 equ 0FC2h ;# 
  1672                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1673  0000                     ADRES equ 0FC3h ;# 
  1674                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1675  0000                     ADRESL equ 0FC3h ;# 
  1676                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1677  0000                     ADRESH equ 0FC4h ;# 
  1678                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1679  0000                     SSPCON2 equ 0FC5h ;# 
  1680                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1681  0000                     SSP1CON2 equ 0FC5h ;# 
  1682                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1683  0000                     SSPCON1 equ 0FC6h ;# 
  1684                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1685  0000                     SSP1CON1 equ 0FC6h ;# 
  1686                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1687  0000                     SSPSTAT equ 0FC7h ;# 
  1688                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1689  0000                     SSP1STAT equ 0FC7h ;# 
  1690                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1691  0000                     SSPADD equ 0FC8h ;# 
  1692                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1693  0000                     SSP1ADD equ 0FC8h ;# 
  1694                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1695  0000                     SSPBUF equ 0FC9h ;# 
  1696                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1697  0000                     SSP1BUF equ 0FC9h ;# 
  1698                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1699  0000                     T2CON equ 0FCAh ;# 
  1700                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1701  0000                     PR2 equ 0FCBh ;# 
  1702                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1703  0000                     MEMCON equ 0FCBh ;# 
  1704                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1705  0000                     TMR2 equ 0FCCh ;# 
  1706                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1707  0000                     T1CON equ 0FCDh ;# 
  1708                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1709  0000                     TMR1 equ 0FCEh ;# 
  1710                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1711  0000                     TMR1L equ 0FCEh ;# 
  1712                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1713  0000                     TMR1H equ 0FCFh ;# 
  1714                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1715  0000                     RCON equ 0FD0h ;# 
  1716                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1717  0000                     WDTCON equ 0FD1h ;# 
  1718                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1719  0000                     OSCCON equ 0FD3h ;# 
  1720                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1721  0000                     T0CON equ 0FD5h ;# 
  1722                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1723  0000                     TMR0 equ 0FD6h ;# 
  1724                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1725  0000                     TMR0L equ 0FD6h ;# 
  1726                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1727  0000                     TMR0H equ 0FD7h ;# 
  1728                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1729  0000                     STATUS equ 0FD8h ;# 
  1730                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1731  0000                     FSR2 equ 0FD9h ;# 
  1732                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1733  0000                     FSR2L equ 0FD9h ;# 
  1734                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1735  0000                     FSR2H equ 0FDAh ;# 
  1736                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1737  0000                     PLUSW2 equ 0FDBh ;# 
  1738                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1739  0000                     PREINC2 equ 0FDCh ;# 
  1740                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1741  0000                     POSTDEC2 equ 0FDDh ;# 
  1742                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1743  0000                     POSTINC2 equ 0FDEh ;# 
  1744                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1745  0000                     INDF2 equ 0FDFh ;# 
  1746                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1747  0000                     BSR equ 0FE0h ;# 
  1748                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1749  0000                     FSR1 equ 0FE1h ;# 
  1750                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1751  0000                     FSR1L equ 0FE1h ;# 
  1752                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1753  0000                     FSR1H equ 0FE2h ;# 
  1754                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1755  0000                     PLUSW1 equ 0FE3h ;# 
  1756                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1757  0000                     PREINC1 equ 0FE4h ;# 
  1758                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1759  0000                     POSTDEC1 equ 0FE5h ;# 
  1760                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1761  0000                     POSTINC1 equ 0FE6h ;# 
  1762                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1763  0000                     INDF1 equ 0FE7h ;# 
  1764                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1765  0000                     WREG equ 0FE8h ;# 
  1766                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1767  0000                     FSR0 equ 0FE9h ;# 
  1768                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1769  0000                     FSR0L equ 0FE9h ;# 
  1770                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1771  0000                     FSR0H equ 0FEAh ;# 
  1772                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1773  0000                     PLUSW0 equ 0FEBh ;# 
  1774                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1775  0000                     PREINC0 equ 0FECh ;# 
  1776                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1777  0000                     POSTDEC0 equ 0FEDh ;# 
  1778                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1779  0000                     POSTINC0 equ 0FEEh ;# 
  1780                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1781  0000                     INDF0 equ 0FEFh ;# 
  1782                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1783  0000                     INTCON3 equ 0FF0h ;# 
  1784                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1785  0000                     INTCON2 equ 0FF1h ;# 
  1786                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1787  0000                     INTCON equ 0FF2h ;# 
  1788                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1789  0000                     PROD equ 0FF3h ;# 
  1790                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1791  0000                     PRODL equ 0FF3h ;# 
  1792                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1793  0000                     PRODH equ 0FF4h ;# 
  1794                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1795  0000                     TABLAT equ 0FF5h ;# 
  1796                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1797  0000                     TBLPTR equ 0FF6h ;# 
  1798                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1799  0000                     TBLPTRL equ 0FF6h ;# 
  1800                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1801  0000                     TBLPTRH equ 0FF7h ;# 
  1802                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1803  0000                     TBLPTRU equ 0FF8h ;# 
  1804                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1805  0000                     PCLAT equ 0FF9h ;# 
  1806                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1807  0000                     PC equ 0FF9h ;# 
  1808                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1809  0000                     PCL equ 0FF9h ;# 
  1810                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1811  0000                     PCLATH equ 0FFAh ;# 
  1812                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1813  0000                     PCLATU equ 0FFBh ;# 
  1814                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1815  0000                     STKPTR equ 0FFCh ;# 
  1816                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1817  0000                     TOS equ 0FFDh ;# 
  1818                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1819  0000                     TOSL equ 0FFDh ;# 
  1820                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1821  0000                     TOSH equ 0FFEh ;# 
  1822                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1823  0000                     TOSU equ 0FFFh ;# 
  1824                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1825  0000                     PORTA equ 0F80h ;# 
  1826                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1827  0000                     PORTB equ 0F81h ;# 
  1828                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1829  0000                     PORTC equ 0F82h ;# 
  1830                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1831  0000                     PORTD equ 0F83h ;# 
  1832                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1833  0000                     PORTE equ 0F84h ;# 
  1834                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1835  0000                     SSP2CON2 equ 0F85h ;# 
  1836                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1837  0000                     SSP2CON1 equ 0F86h ;# 
  1838                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1839  0000                     SSP2STAT equ 0F87h ;# 
  1840                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1841  0000                     SSP2ADD equ 0F88h ;# 
  1842                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1843  0000                     LATA equ 0F89h ;# 
  1844                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1845  0000                     LATB equ 0F8Ah ;# 
  1846                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1847  0000                     LATC equ 0F8Bh ;# 
  1848                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1849  0000                     LATD equ 0F8Ch ;# 
  1850                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1851  0000                     LATE equ 0F8Dh ;# 
  1852                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1853  0000                     SSP2BUF equ 0F8Eh ;# 
  1854                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1855  0000                     TRISA equ 0F92h ;# 
  1856                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1857  0000                     DDRA equ 0F92h ;# 
  1858                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1859  0000                     TRISB equ 0F93h ;# 
  1860                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1861  0000                     DDRB equ 0F93h ;# 
  1862                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1863  0000                     TRISC equ 0F94h ;# 
  1864                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1865  0000                     DDRC equ 0F94h ;# 
  1866                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1867  0000                     TRISD equ 0F95h ;# 
  1868                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1869  0000                     DDRD equ 0F95h ;# 
  1870                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1871  0000                     TRISE equ 0F96h ;# 
  1872                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1873  0000                     DDRE equ 0F96h ;# 
  1874                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1875  0000                     OSCTUNE equ 0F9Bh ;# 
  1876                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1877  0000                     PIE1 equ 0F9Dh ;# 
  1878                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1879  0000                     PIR1 equ 0F9Eh ;# 
  1880                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1881  0000                     IPR1 equ 0F9Fh ;# 
  1882                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1883  0000                     PIE2 equ 0FA0h ;# 
  1884                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1885  0000                     PIR2 equ 0FA1h ;# 
  1886                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1887  0000                     IPR2 equ 0FA2h ;# 
  1888                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1889  0000                     PIE3 equ 0FA3h ;# 
  1890                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1891  0000                     PIR3 equ 0FA4h ;# 
  1892                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1893  0000                     IPR3 equ 0FA5h ;# 
  1894                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1895  0000                     EECON1 equ 0FA6h ;# 
  1896                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1897  0000                     EECON2 equ 0FA7h ;# 
  1898                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1899  0000                     RCSTA equ 0FABh ;# 
  1900                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1901  0000                     RCSTA1 equ 0FABh ;# 
  1902                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1903  0000                     TXSTA equ 0FACh ;# 
  1904                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1905  0000                     TXSTA1 equ 0FACh ;# 
  1906                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1907  0000                     TXREG equ 0FADh ;# 
  1908                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1909  0000                     TXREG1 equ 0FADh ;# 
  1910                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1911  0000                     RCREG equ 0FAEh ;# 
  1912                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1913  0000                     RCREG1 equ 0FAEh ;# 
  1914                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1915  0000                     SPBRG equ 0FAFh ;# 
  1916                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1917  0000                     SPBRG1 equ 0FAFh ;# 
  1918                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1919  0000                     SPBRGH equ 0FB0h ;# 
  1920                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1921  0000                     CMCON equ 0FB4h ;# 
  1922                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1923  0000                     CVRCON equ 0FB5h ;# 
  1924                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1925  0000                     ECCP1AS equ 0FB6h ;# 
  1926                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1927  0000                     ECCP1DEL equ 0FB7h ;# 
  1928                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1929  0000                     PWM1CON equ 0FB7h ;# 
  1930                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1931  0000                     BAUDCON equ 0FB8h ;# 
  1932                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1933  0000                     BAUDCTL equ 0FB8h ;# 
  1934                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1935  0000                     CCP2CON equ 0FBAh ;# 
  1936                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1937  0000                     CCPR2 equ 0FBBh ;# 
  1938                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1939  0000                     CCPR2L equ 0FBBh ;# 
  1940                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1941  0000                     CCPR2H equ 0FBCh ;# 
  1942                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1943  0000                     ECCP1CON equ 0FBDh ;# 
  1944                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1945  0000                     CCP1CON equ 0FBDh ;# 
  1946                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1947  0000                     CCPR1 equ 0FBEh ;# 
  1948                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1949  0000                     CCPR1L equ 0FBEh ;# 
  1950                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1951  0000                     CCPR1H equ 0FBFh ;# 
  1952                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1953  0000                     ADCON2 equ 0FC0h ;# 
  1954                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1955  0000                     ADCON1 equ 0FC1h ;# 
  1956                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1957  0000                     ADCON0 equ 0FC2h ;# 
  1958                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1959  0000                     ADRES equ 0FC3h ;# 
  1960                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1961  0000                     ADRESL equ 0FC3h ;# 
  1962                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1963  0000                     ADRESH equ 0FC4h ;# 
  1964                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1965  0000                     SSPCON2 equ 0FC5h ;# 
  1966                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1967  0000                     SSP1CON2 equ 0FC5h ;# 
  1968                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1969  0000                     SSPCON1 equ 0FC6h ;# 
  1970                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1971  0000                     SSP1CON1 equ 0FC6h ;# 
  1972                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1973  0000                     SSPSTAT equ 0FC7h ;# 
  1974                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1975  0000                     SSP1STAT equ 0FC7h ;# 
  1976                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1977  0000                     SSPADD equ 0FC8h ;# 
  1978                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1979  0000                     SSP1ADD equ 0FC8h ;# 
  1980                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1981  0000                     SSPBUF equ 0FC9h ;# 
  1982                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1983  0000                     SSP1BUF equ 0FC9h ;# 
  1984                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1985  0000                     T2CON equ 0FCAh ;# 
  1986                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1987  0000                     PR2 equ 0FCBh ;# 
  1988                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1989  0000                     MEMCON equ 0FCBh ;# 
  1990                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1991  0000                     TMR2 equ 0FCCh ;# 
  1992                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1993  0000                     T1CON equ 0FCDh ;# 
  1994                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1995  0000                     TMR1 equ 0FCEh ;# 
  1996                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1997  0000                     TMR1L equ 0FCEh ;# 
  1998                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  1999  0000                     TMR1H equ 0FCFh ;# 
  2000                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2001  0000                     RCON equ 0FD0h ;# 
  2002                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2003  0000                     WDTCON equ 0FD1h ;# 
  2004                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2005  0000                     OSCCON equ 0FD3h ;# 
  2006                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2007  0000                     T0CON equ 0FD5h ;# 
  2008                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2009  0000                     TMR0 equ 0FD6h ;# 
  2010                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2011  0000                     TMR0L equ 0FD6h ;# 
  2012                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2013  0000                     TMR0H equ 0FD7h ;# 
  2014                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2015  0000                     STATUS equ 0FD8h ;# 
  2016                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2017  0000                     FSR2 equ 0FD9h ;# 
  2018                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2019  0000                     FSR2L equ 0FD9h ;# 
  2020                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2021  0000                     FSR2H equ 0FDAh ;# 
  2022                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2023  0000                     PLUSW2 equ 0FDBh ;# 
  2024                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2025  0000                     PREINC2 equ 0FDCh ;# 
  2026                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2027  0000                     POSTDEC2 equ 0FDDh ;# 
  2028                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2029  0000                     POSTINC2 equ 0FDEh ;# 
  2030                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2031  0000                     INDF2 equ 0FDFh ;# 
  2032                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2033  0000                     BSR equ 0FE0h ;# 
  2034                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2035  0000                     FSR1 equ 0FE1h ;# 
  2036                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2037  0000                     FSR1L equ 0FE1h ;# 
  2038                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2039  0000                     FSR1H equ 0FE2h ;# 
  2040                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2041  0000                     PLUSW1 equ 0FE3h ;# 
  2042                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2043  0000                     PREINC1 equ 0FE4h ;# 
  2044                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2045  0000                     POSTDEC1 equ 0FE5h ;# 
  2046                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2047  0000                     POSTINC1 equ 0FE6h ;# 
  2048                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2049  0000                     INDF1 equ 0FE7h ;# 
  2050                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2051  0000                     WREG equ 0FE8h ;# 
  2052                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2053  0000                     FSR0 equ 0FE9h ;# 
  2054                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2055  0000                     FSR0L equ 0FE9h ;# 
  2056                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2057  0000                     FSR0H equ 0FEAh ;# 
  2058                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2059  0000                     PLUSW0 equ 0FEBh ;# 
  2060                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2061  0000                     PREINC0 equ 0FECh ;# 
  2062                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2063  0000                     POSTDEC0 equ 0FEDh ;# 
  2064                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2065  0000                     POSTINC0 equ 0FEEh ;# 
  2066                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2067  0000                     INDF0 equ 0FEFh ;# 
  2068                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2069  0000                     INTCON3 equ 0FF0h ;# 
  2070                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2071  0000                     INTCON2 equ 0FF1h ;# 
  2072                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2073  0000                     INTCON equ 0FF2h ;# 
  2074                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2075  0000                     PROD equ 0FF3h ;# 
  2076                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2077  0000                     PRODL equ 0FF3h ;# 
  2078                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2079  0000                     PRODH equ 0FF4h ;# 
  2080                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2081  0000                     TABLAT equ 0FF5h ;# 
  2082                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2083  0000                     TBLPTR equ 0FF6h ;# 
  2084                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2085  0000                     TBLPTRL equ 0FF6h ;# 
  2086                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2087  0000                     TBLPTRH equ 0FF7h ;# 
  2088                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2089  0000                     TBLPTRU equ 0FF8h ;# 
  2090                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2091  0000                     PCLAT equ 0FF9h ;# 
  2092                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2093  0000                     PC equ 0FF9h ;# 
  2094                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2095  0000                     PCL equ 0FF9h ;# 
  2096                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2097  0000                     PCLATH equ 0FFAh ;# 
  2098                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2099  0000                     PCLATU equ 0FFBh ;# 
  2100                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2101  0000                     STKPTR equ 0FFCh ;# 
  2102                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2103  0000                     TOS equ 0FFDh ;# 
  2104                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2105  0000                     TOSL equ 0FFDh ;# 
  2106                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2107  0000                     TOSH equ 0FFEh ;# 
  2108                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2109  0000                     TOSU equ 0FFFh ;# 
  2110                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2111  0000                     PORTA equ 0F80h ;# 
  2112                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2113  0000                     PORTB equ 0F81h ;# 
  2114                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2115  0000                     PORTC equ 0F82h ;# 
  2116                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2117  0000                     PORTD equ 0F83h ;# 
  2118                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2119  0000                     PORTE equ 0F84h ;# 
  2120                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2121  0000                     SSP2CON2 equ 0F85h ;# 
  2122                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2123  0000                     SSP2CON1 equ 0F86h ;# 
  2124                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2125  0000                     SSP2STAT equ 0F87h ;# 
  2126                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2127  0000                     SSP2ADD equ 0F88h ;# 
  2128                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2129  0000                     LATA equ 0F89h ;# 
  2130                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2131  0000                     LATB equ 0F8Ah ;# 
  2132                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2133  0000                     LATC equ 0F8Bh ;# 
  2134                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2135  0000                     LATD equ 0F8Ch ;# 
  2136                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2137  0000                     LATE equ 0F8Dh ;# 
  2138                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2139  0000                     SSP2BUF equ 0F8Eh ;# 
  2140                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2141  0000                     TRISA equ 0F92h ;# 
  2142                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2143  0000                     DDRA equ 0F92h ;# 
  2144                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2145  0000                     TRISB equ 0F93h ;# 
  2146                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2147  0000                     DDRB equ 0F93h ;# 
  2148                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2149  0000                     TRISC equ 0F94h ;# 
  2150                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2151  0000                     DDRC equ 0F94h ;# 
  2152                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2153  0000                     TRISD equ 0F95h ;# 
  2154                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2155  0000                     DDRD equ 0F95h ;# 
  2156                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2157  0000                     TRISE equ 0F96h ;# 
  2158                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2159  0000                     DDRE equ 0F96h ;# 
  2160                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2161  0000                     OSCTUNE equ 0F9Bh ;# 
  2162                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2163  0000                     PIE1 equ 0F9Dh ;# 
  2164                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2165  0000                     PIR1 equ 0F9Eh ;# 
  2166                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2167  0000                     IPR1 equ 0F9Fh ;# 
  2168                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2169  0000                     PIE2 equ 0FA0h ;# 
  2170                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2171  0000                     PIR2 equ 0FA1h ;# 
  2172                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2173  0000                     IPR2 equ 0FA2h ;# 
  2174                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2175  0000                     PIE3 equ 0FA3h ;# 
  2176                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2177  0000                     PIR3 equ 0FA4h ;# 
  2178                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2179  0000                     IPR3 equ 0FA5h ;# 
  2180                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2181  0000                     EECON1 equ 0FA6h ;# 
  2182                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2183  0000                     EECON2 equ 0FA7h ;# 
  2184                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2185  0000                     RCSTA equ 0FABh ;# 
  2186                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2187  0000                     RCSTA1 equ 0FABh ;# 
  2188                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2189  0000                     TXSTA equ 0FACh ;# 
  2190                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2191  0000                     TXSTA1 equ 0FACh ;# 
  2192                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2193  0000                     TXREG equ 0FADh ;# 
  2194                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2195  0000                     TXREG1 equ 0FADh ;# 
  2196                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2197  0000                     RCREG equ 0FAEh ;# 
  2198                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2199  0000                     RCREG1 equ 0FAEh ;# 
  2200                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2201  0000                     SPBRG equ 0FAFh ;# 
  2202                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2203  0000                     SPBRG1 equ 0FAFh ;# 
  2204                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2205  0000                     SPBRGH equ 0FB0h ;# 
  2206                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2207  0000                     CMCON equ 0FB4h ;# 
  2208                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2209  0000                     CVRCON equ 0FB5h ;# 
  2210                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2211  0000                     ECCP1AS equ 0FB6h ;# 
  2212                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2213  0000                     ECCP1DEL equ 0FB7h ;# 
  2214                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2215  0000                     PWM1CON equ 0FB7h ;# 
  2216                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2217  0000                     BAUDCON equ 0FB8h ;# 
  2218                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2219  0000                     BAUDCTL equ 0FB8h ;# 
  2220                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2221  0000                     CCP2CON equ 0FBAh ;# 
  2222                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2223  0000                     CCPR2 equ 0FBBh ;# 
  2224                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2225  0000                     CCPR2L equ 0FBBh ;# 
  2226                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2227  0000                     CCPR2H equ 0FBCh ;# 
  2228                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2229  0000                     ECCP1CON equ 0FBDh ;# 
  2230                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2231  0000                     CCP1CON equ 0FBDh ;# 
  2232                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2233  0000                     CCPR1 equ 0FBEh ;# 
  2234                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2235  0000                     CCPR1L equ 0FBEh ;# 
  2236                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2237  0000                     CCPR1H equ 0FBFh ;# 
  2238                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2239  0000                     ADCON2 equ 0FC0h ;# 
  2240                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2241  0000                     ADCON1 equ 0FC1h ;# 
  2242                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2243  0000                     ADCON0 equ 0FC2h ;# 
  2244                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2245  0000                     ADRES equ 0FC3h ;# 
  2246                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2247  0000                     ADRESL equ 0FC3h ;# 
  2248                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2249  0000                     ADRESH equ 0FC4h ;# 
  2250                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2251  0000                     SSPCON2 equ 0FC5h ;# 
  2252                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2253  0000                     SSP1CON2 equ 0FC5h ;# 
  2254                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2255  0000                     SSPCON1 equ 0FC6h ;# 
  2256                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2257  0000                     SSP1CON1 equ 0FC6h ;# 
  2258                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2259  0000                     SSPSTAT equ 0FC7h ;# 
  2260                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2261  0000                     SSP1STAT equ 0FC7h ;# 
  2262                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2263  0000                     SSPADD equ 0FC8h ;# 
  2264                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2265  0000                     SSP1ADD equ 0FC8h ;# 
  2266                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2267  0000                     SSPBUF equ 0FC9h ;# 
  2268                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2269  0000                     SSP1BUF equ 0FC9h ;# 
  2270                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2271  0000                     T2CON equ 0FCAh ;# 
  2272                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2273  0000                     PR2 equ 0FCBh ;# 
  2274                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2275  0000                     MEMCON equ 0FCBh ;# 
  2276                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2277  0000                     TMR2 equ 0FCCh ;# 
  2278                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2279  0000                     T1CON equ 0FCDh ;# 
  2280                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2281  0000                     TMR1 equ 0FCEh ;# 
  2282                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2283  0000                     TMR1L equ 0FCEh ;# 
  2284                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2285  0000                     TMR1H equ 0FCFh ;# 
  2286                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2287  0000                     RCON equ 0FD0h ;# 
  2288                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2289  0000                     WDTCON equ 0FD1h ;# 
  2290                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2291  0000                     OSCCON equ 0FD3h ;# 
  2292                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2293  0000                     T0CON equ 0FD5h ;# 
  2294                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2295  0000                     TMR0 equ 0FD6h ;# 
  2296                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2297  0000                     TMR0L equ 0FD6h ;# 
  2298                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2299  0000                     TMR0H equ 0FD7h ;# 
  2300                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2301  0000                     STATUS equ 0FD8h ;# 
  2302                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2303  0000                     FSR2 equ 0FD9h ;# 
  2304                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2305  0000                     FSR2L equ 0FD9h ;# 
  2306                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2307  0000                     FSR2H equ 0FDAh ;# 
  2308                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2309  0000                     PLUSW2 equ 0FDBh ;# 
  2310                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2311  0000                     PREINC2 equ 0FDCh ;# 
  2312                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2313  0000                     POSTDEC2 equ 0FDDh ;# 
  2314                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2315  0000                     POSTINC2 equ 0FDEh ;# 
  2316                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2317  0000                     INDF2 equ 0FDFh ;# 
  2318                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2319  0000                     BSR equ 0FE0h ;# 
  2320                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2321  0000                     FSR1 equ 0FE1h ;# 
  2322                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2323  0000                     FSR1L equ 0FE1h ;# 
  2324                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2325  0000                     FSR1H equ 0FE2h ;# 
  2326                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2327  0000                     PLUSW1 equ 0FE3h ;# 
  2328                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2329  0000                     PREINC1 equ 0FE4h ;# 
  2330                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2331  0000                     POSTDEC1 equ 0FE5h ;# 
  2332                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2333  0000                     POSTINC1 equ 0FE6h ;# 
  2334                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2335  0000                     INDF1 equ 0FE7h ;# 
  2336                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2337  0000                     WREG equ 0FE8h ;# 
  2338                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2339  0000                     FSR0 equ 0FE9h ;# 
  2340                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2341  0000                     FSR0L equ 0FE9h ;# 
  2342                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2343  0000                     FSR0H equ 0FEAh ;# 
  2344                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2345  0000                     PLUSW0 equ 0FEBh ;# 
  2346                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2347  0000                     PREINC0 equ 0FECh ;# 
  2348                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2349  0000                     POSTDEC0 equ 0FEDh ;# 
  2350                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2351  0000                     POSTINC0 equ 0FEEh ;# 
  2352                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2353  0000                     INDF0 equ 0FEFh ;# 
  2354                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2355  0000                     INTCON3 equ 0FF0h ;# 
  2356                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2357  0000                     INTCON2 equ 0FF1h ;# 
  2358                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2359  0000                     INTCON equ 0FF2h ;# 
  2360                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2361  0000                     PROD equ 0FF3h ;# 
  2362                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2363  0000                     PRODL equ 0FF3h ;# 
  2364                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2365  0000                     PRODH equ 0FF4h ;# 
  2366                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2367  0000                     TABLAT equ 0FF5h ;# 
  2368                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2369  0000                     TBLPTR equ 0FF6h ;# 
  2370                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2371  0000                     TBLPTRL equ 0FF6h ;# 
  2372                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2373  0000                     TBLPTRH equ 0FF7h ;# 
  2374                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2375  0000                     TBLPTRU equ 0FF8h ;# 
  2376                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2377  0000                     PCLAT equ 0FF9h ;# 
  2378                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2379  0000                     PC equ 0FF9h ;# 
  2380                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2381  0000                     PCL equ 0FF9h ;# 
  2382                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2383  0000                     PCLATH equ 0FFAh ;# 
  2384                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2385  0000                     PCLATU equ 0FFBh ;# 
  2386                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2387  0000                     STKPTR equ 0FFCh ;# 
  2388                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2389  0000                     TOS equ 0FFDh ;# 
  2390                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2391  0000                     TOSL equ 0FFDh ;# 
  2392                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2393  0000                     TOSH equ 0FFEh ;# 
  2394                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2395  0000                     TOSU equ 0FFFh ;# 
  2396                           # 46 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2397  0000                     PORTA equ 0F80h ;# 
  2398                           # 232 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2399  0000                     PORTB equ 0F81h ;# 
  2400                           # 417 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2401  0000                     PORTC equ 0F82h ;# 
  2402                           # 627 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2403  0000                     PORTD equ 0F83h ;# 
  2404                           # 813 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2405  0000                     PORTE equ 0F84h ;# 
  2406                           # 1117 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2407  0000                     SSP2CON2 equ 0F85h ;# 
  2408                           # 1294 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2409  0000                     SSP2CON1 equ 0F86h ;# 
  2410                           # 1434 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2411  0000                     SSP2STAT equ 0F87h ;# 
  2412                           # 1861 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2413  0000                     SSP2ADD equ 0F88h ;# 
  2414                           # 1943 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2415  0000                     LATA equ 0F89h ;# 
  2416                           # 2067 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2417  0000                     LATB equ 0F8Ah ;# 
  2418                           # 2199 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2419  0000                     LATC equ 0F8Bh ;# 
  2420                           # 2331 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2421  0000                     LATD equ 0F8Ch ;# 
  2422                           # 2463 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2423  0000                     LATE equ 0F8Dh ;# 
  2424                           # 2565 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2425  0000                     SSP2BUF equ 0F8Eh ;# 
  2426                           # 2571 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2427  0000                     TRISA equ 0F92h ;# 
  2428                           # 2576 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2429  0000                     DDRA equ 0F92h ;# 
  2430                           # 2724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2431  0000                     TRISB equ 0F93h ;# 
  2432                           # 2729 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2433  0000                     DDRB equ 0F93h ;# 
  2434                           # 2945 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2435  0000                     TRISC equ 0F94h ;# 
  2436                           # 2950 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2437  0000                     DDRC equ 0F94h ;# 
  2438                           # 3166 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2439  0000                     TRISD equ 0F95h ;# 
  2440                           # 3171 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2441  0000                     DDRD equ 0F95h ;# 
  2442                           # 3387 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2443  0000                     TRISE equ 0F96h ;# 
  2444                           # 3392 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2445  0000                     DDRE equ 0F96h ;# 
  2446                           # 3550 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2447  0000                     OSCTUNE equ 0F9Bh ;# 
  2448                           # 3570 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2449  0000                     PIE1 equ 0F9Dh ;# 
  2450                           # 3652 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2451  0000                     PIR1 equ 0F9Eh ;# 
  2452                           # 3734 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2453  0000                     IPR1 equ 0F9Fh ;# 
  2454                           # 3816 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2455  0000                     PIE2 equ 0FA0h ;# 
  2456                           # 3864 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2457  0000                     PIR2 equ 0FA1h ;# 
  2458                           # 3912 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2459  0000                     IPR2 equ 0FA2h ;# 
  2460                           # 3960 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2461  0000                     PIE3 equ 0FA3h ;# 
  2462                           # 3986 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2463  0000                     PIR3 equ 0FA4h ;# 
  2464                           # 4012 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2465  0000                     IPR3 equ 0FA5h ;# 
  2466                           # 4038 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2467  0000                     EECON1 equ 0FA6h ;# 
  2468                           # 4076 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2469  0000                     EECON2 equ 0FA7h ;# 
  2470                           # 4082 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2471  0000                     RCSTA equ 0FABh ;# 
  2472                           # 4087 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2473  0000                     RCSTA1 equ 0FABh ;# 
  2474                           # 4419 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2475  0000                     TXSTA equ 0FACh ;# 
  2476                           # 4424 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2477  0000                     TXSTA1 equ 0FACh ;# 
  2478                           # 4706 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2479  0000                     TXREG equ 0FADh ;# 
  2480                           # 4711 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2481  0000                     TXREG1 equ 0FADh ;# 
  2482                           # 4717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2483  0000                     RCREG equ 0FAEh ;# 
  2484                           # 4722 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2485  0000                     RCREG1 equ 0FAEh ;# 
  2486                           # 4728 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2487  0000                     SPBRG equ 0FAFh ;# 
  2488                           # 4733 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2489  0000                     SPBRG1 equ 0FAFh ;# 
  2490                           # 4739 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2491  0000                     SPBRGH equ 0FB0h ;# 
  2492                           # 4745 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2493  0000                     CMCON equ 0FB4h ;# 
  2494                           # 4840 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2495  0000                     CVRCON equ 0FB5h ;# 
  2496                           # 4918 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2497  0000                     ECCP1AS equ 0FB6h ;# 
  2498                           # 4999 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2499  0000                     ECCP1DEL equ 0FB7h ;# 
  2500                           # 5004 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2501  0000                     PWM1CON equ 0FB7h ;# 
  2502                           # 5136 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2503  0000                     BAUDCON equ 0FB8h ;# 
  2504                           # 5141 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2505  0000                     BAUDCTL equ 0FB8h ;# 
  2506                           # 5273 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2507  0000                     CCP2CON equ 0FBAh ;# 
  2508                           # 5351 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2509  0000                     CCPR2 equ 0FBBh ;# 
  2510                           # 5357 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2511  0000                     CCPR2L equ 0FBBh ;# 
  2512                           # 5363 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2513  0000                     CCPR2H equ 0FBCh ;# 
  2514                           # 5369 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2515  0000                     ECCP1CON equ 0FBDh ;# 
  2516                           # 5374 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2517  0000                     CCP1CON equ 0FBDh ;# 
  2518                           # 5560 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2519  0000                     CCPR1 equ 0FBEh ;# 
  2520                           # 5566 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2521  0000                     CCPR1L equ 0FBEh ;# 
  2522                           # 5572 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2523  0000                     CCPR1H equ 0FBFh ;# 
  2524                           # 5578 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2525  0000                     ADCON2 equ 0FC0h ;# 
  2526                           # 5648 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2527  0000                     ADCON1 equ 0FC1h ;# 
  2528                           # 5738 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2529  0000                     ADCON0 equ 0FC2h ;# 
  2530                           # 5867 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2531  0000                     ADRES equ 0FC3h ;# 
  2532                           # 5873 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2533  0000                     ADRESL equ 0FC3h ;# 
  2534                           # 5879 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2535  0000                     ADRESH equ 0FC4h ;# 
  2536                           # 5885 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2537  0000                     SSPCON2 equ 0FC5h ;# 
  2538                           # 5890 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2539  0000                     SSP1CON2 equ 0FC5h ;# 
  2540                           # 6328 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2541  0000                     SSPCON1 equ 0FC6h ;# 
  2542                           # 6333 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2543  0000                     SSP1CON1 equ 0FC6h ;# 
  2544                           # 6607 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2545  0000                     SSPSTAT equ 0FC7h ;# 
  2546                           # 6612 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2547  0000                     SSP1STAT equ 0FC7h ;# 
  2548                           # 7280 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2549  0000                     SSPADD equ 0FC8h ;# 
  2550                           # 7285 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2551  0000                     SSP1ADD equ 0FC8h ;# 
  2552                           # 7585 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2553  0000                     SSPBUF equ 0FC9h ;# 
  2554                           # 7590 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2555  0000                     SSP1BUF equ 0FC9h ;# 
  2556                           # 7596 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2557  0000                     T2CON equ 0FCAh ;# 
  2558                           # 7693 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2559  0000                     PR2 equ 0FCBh ;# 
  2560                           # 7698 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2561  0000                     MEMCON equ 0FCBh ;# 
  2562                           # 7704 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2563  0000                     TMR2 equ 0FCCh ;# 
  2564                           # 7710 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2565  0000                     T1CON equ 0FCDh ;# 
  2566                           # 7823 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2567  0000                     TMR1 equ 0FCEh ;# 
  2568                           # 7829 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2569  0000                     TMR1L equ 0FCEh ;# 
  2570                           # 7835 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2571  0000                     TMR1H equ 0FCFh ;# 
  2572                           # 7841 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2573  0000                     RCON equ 0FD0h ;# 
  2574                           # 7967 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2575  0000                     WDTCON equ 0FD1h ;# 
  2576                           # 7994 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2577  0000                     OSCCON equ 0FD3h ;# 
  2578                           # 8041 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2579  0000                     T0CON equ 0FD5h ;# 
  2580                           # 8110 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2581  0000                     TMR0 equ 0FD6h ;# 
  2582                           # 8116 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2583  0000                     TMR0L equ 0FD6h ;# 
  2584                           # 8122 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2585  0000                     TMR0H equ 0FD7h ;# 
  2586                           # 8128 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2587  0000                     STATUS equ 0FD8h ;# 
  2588                           # 8206 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2589  0000                     FSR2 equ 0FD9h ;# 
  2590                           # 8212 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2591  0000                     FSR2L equ 0FD9h ;# 
  2592                           # 8218 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2593  0000                     FSR2H equ 0FDAh ;# 
  2594                           # 8224 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2595  0000                     PLUSW2 equ 0FDBh ;# 
  2596                           # 8230 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2597  0000                     PREINC2 equ 0FDCh ;# 
  2598                           # 8236 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2599  0000                     POSTDEC2 equ 0FDDh ;# 
  2600                           # 8242 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2601  0000                     POSTINC2 equ 0FDEh ;# 
  2602                           # 8248 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2603  0000                     INDF2 equ 0FDFh ;# 
  2604                           # 8254 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2605  0000                     BSR equ 0FE0h ;# 
  2606                           # 8260 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2607  0000                     FSR1 equ 0FE1h ;# 
  2608                           # 8266 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2609  0000                     FSR1L equ 0FE1h ;# 
  2610                           # 8272 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2611  0000                     FSR1H equ 0FE2h ;# 
  2612                           # 8278 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2613  0000                     PLUSW1 equ 0FE3h ;# 
  2614                           # 8284 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2615  0000                     PREINC1 equ 0FE4h ;# 
  2616                           # 8290 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2617  0000                     POSTDEC1 equ 0FE5h ;# 
  2618                           # 8296 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2619  0000                     POSTINC1 equ 0FE6h ;# 
  2620                           # 8302 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2621  0000                     INDF1 equ 0FE7h ;# 
  2622                           # 8308 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2623  0000                     WREG equ 0FE8h ;# 
  2624                           # 8314 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2625  0000                     FSR0 equ 0FE9h ;# 
  2626                           # 8320 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2627  0000                     FSR0L equ 0FE9h ;# 
  2628                           # 8326 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2629  0000                     FSR0H equ 0FEAh ;# 
  2630                           # 8332 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2631  0000                     PLUSW0 equ 0FEBh ;# 
  2632                           # 8338 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2633  0000                     PREINC0 equ 0FECh ;# 
  2634                           # 8344 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2635  0000                     POSTDEC0 equ 0FEDh ;# 
  2636                           # 8350 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2637  0000                     POSTINC0 equ 0FEEh ;# 
  2638                           # 8356 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2639  0000                     INDF0 equ 0FEFh ;# 
  2640                           # 8362 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2641  0000                     INTCON3 equ 0FF0h ;# 
  2642                           # 8453 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2643  0000                     INTCON2 equ 0FF1h ;# 
  2644                           # 8529 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2645  0000                     INTCON equ 0FF2h ;# 
  2646                           # 8665 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2647  0000                     PROD equ 0FF3h ;# 
  2648                           # 8671 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2649  0000                     PRODL equ 0FF3h ;# 
  2650                           # 8677 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2651  0000                     PRODH equ 0FF4h ;# 
  2652                           # 8683 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2653  0000                     TABLAT equ 0FF5h ;# 
  2654                           # 8691 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2655  0000                     TBLPTR equ 0FF6h ;# 
  2656                           # 8697 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2657  0000                     TBLPTRL equ 0FF6h ;# 
  2658                           # 8703 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2659  0000                     TBLPTRH equ 0FF7h ;# 
  2660                           # 8709 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2661  0000                     TBLPTRU equ 0FF8h ;# 
  2662                           # 8717 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2663  0000                     PCLAT equ 0FF9h ;# 
  2664                           # 8724 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2665  0000                     PC equ 0FF9h ;# 
  2666                           # 8730 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2667  0000                     PCL equ 0FF9h ;# 
  2668                           # 8736 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2669  0000                     PCLATH equ 0FFAh ;# 
  2670                           # 8742 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2671  0000                     PCLATU equ 0FFBh ;# 
  2672                           # 8748 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2673  0000                     STKPTR equ 0FFCh ;# 
  2674                           # 8821 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2675  0000                     TOS equ 0FFDh ;# 
  2676                           # 8827 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2677  0000                     TOSL equ 0FFDh ;# 
  2678                           # 8833 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2679  0000                     TOSH equ 0FFEh ;# 
  2680                           # 8839 "/opt/microchip/xc8/v1.10/include/pic18f45j10.h"
  2681  0000                     TOSU equ 0FFFh ;# 
  2682                           	FNCALL	_main,_init_uart_recv
  2683                           	FNCALL	_main,_init_i2c
  2684                           	FNCALL	_main,_init_timer1_lthread
  2685                           	FNCALL	_main,_init_queues
  2686                           	FNCALL	_main,_OpenTimer1
  2687                           	FNCALL	_main,_enable_interrupts
  2688                           	FNCALL	_main,_i2c_configure_slave
  2689                           	FNCALL	_main,_OpenUSART
  2690                           	FNCALL	_main,_block_on_To_msgqueues
  2691                           	FNCALL	_main,_ToMainHigh_recvmsg
  2692                           	FNCALL	_main,_timer0_lthread
  2693                           	FNCALL	_main,_ToMainLow_recvmsg
  2694                           	FNCALL	_main,_timer1_lthread
  2695                           	FNCALL	_main,_FromMainLow_sendmsg
  2696                           	FNCALL	_main,_uart_lthread
  2697                           	FNCALL	_init_timer1_lthread,_OpenADC
  2698                           	FNCALL	_init_timer1_lthread,_SetChanADC
  2699                           	FNCALL	_init_queues,_init_queue
  2700                           	FNCALL	_block_on_To_msgqueues,_in_main
  2701                           	FNCALL	_block_on_To_msgqueues,_check_msg
  2702                           	FNCALL	_block_on_To_msgqueues,_Delay1KTCYx
  2703                           	FNCALL	_in_main,_in_low_int
  2704                           	FNCALL	_in_main,_in_high_int
  2705                           	FNCALL	_in_low_int,_in_high_int
  2706                           	FNCALL	_ToMainHigh_recvmsg,_recv_msg
  2707                           	FNCALL	_ToMainLow_recvmsg,_recv_msg
  2708                           	FNCALL	_timer1_lthread,_ConvertADC
  2709                           	FNCALL	_FromMainLow_sendmsg,_send_msg
  2710                           	FNCALL	_send_msg,_memcpy
  2711                           	FNCALL	_recv_msg,_memcpy
  2712                           	FNROOT	_main
  2713                           	FNCALL	_InterruptHandlerHigh,_i2c_int_handler
  2714                           	FNCALL	_InterruptHandlerHigh,_timer0_int_handler
  2715                           	FNCALL	_InterruptHandlerHigh,_SleepIfOkay
  2716                           	FNCALL	_i2c_int_handler,_handle_start
  2717                           	FNCALL	_i2c_int_handler,_FromMainLow_recvmsg
  2718                           	FNCALL	_i2c_int_handler,_start_i2c_slave_reply
  2719                           	FNCALL	_i2c_int_handler,_ToMainHigh_sendmsg
  2720                           	FNCALL	_timer0_int_handler,_WriteTimer0
  2721                           	FNCALL	_timer0_int_handler,_FromMainHigh_recvmsg
  2722                           	FNCALL	_timer0_int_handler,_ToMainHigh_sendmsg
  2723                           	FNCALL	_SleepIfOkay,i2_in_low_int
  2724                           	FNCALL	_SleepIfOkay,i2_in_high_int
  2725                           	FNCALL	_SleepIfOkay,i2_check_msg
  2726                           	FNCALL	_SleepIfOkay,_enter_sleep_mode
  2727                           	FNCALL	_ToMainHigh_sendmsg,i2_send_msg
  2728                           	FNCALL	_FromMainLow_recvmsg,i2_recv_msg
  2729                           	FNCALL	_FromMainHigh_recvmsg,i2_recv_msg
  2730                           	FNCALL	i2_in_low_int,i2_in_high_int
  2731                           	FNCALL	i2_send_msg,i2_memcpy
  2732                           	FNCALL	i2_recv_msg,i2_memcpy
  2733                           	FNCALL	intlevel2,_InterruptHandlerHigh
  2734                           	global	intlevel2
  2735                           	FNROOT	intlevel2
  2736                           	FNCALL	_InterruptHandlerLow,_timer1_int_handler
  2737                           	FNCALL	_InterruptHandlerLow,_adc_int_handler
  2738                           	FNCALL	_InterruptHandlerLow,_uart_recv_int_handler
  2739                           	FNCALL	_timer1_int_handler,_ReadTimer1
  2740                           	FNCALL	_timer1_int_handler,_ToMainLow_sendmsg
  2741                           	FNCALL	_timer1_int_handler,_WriteTimer1
  2742                           	FNCALL	_adc_int_handler,_ReadADC
  2743                           	FNCALL	_adc_int_handler,_ToMainLow_sendmsg
  2744                           	FNCALL	_uart_recv_int_handler,_ReadUSART
  2745                           	FNCALL	_uart_recv_int_handler,_ToMainLow_sendmsg
  2746                           	FNCALL	_ToMainLow_sendmsg,i1_send_msg
  2747                           	FNCALL	i1_send_msg,i1_memcpy
  2748                           	FNCALL	intlevel1,_InterruptHandlerLow
  2749                           	global	intlevel1
  2750                           	FNROOT	intlevel1
  2751                           	global	_MQ_Main_Willing_to_block
  2752                           	global	_USART_Status
  2753                           	global	_adcMsgCount
  2754                           	global	_emptyMsgCount
  2755                           	global	_FromMainLow_MQ
  2756                           	global	_ToMainHigh_MQ
  2757                           	global	_ToMainLow_MQ
  2758                           	global	_FromMainHigh_MQ
  2759                           	global	_PC
  2760  0000                     _PC	set	0xFF9
  2761                           	global	_PCLAT
  2762  0000                     _PCLAT	set	0xFF9
  2763                           	global	_TBLPTR
  2764  0000                     _TBLPTR	set	0xFF6
  2765                           	global	_TOS
  2766  0000                     _TOS	set	0xFFD
  2767                           	global	_ADRES
  2768  0000                     _ADRES	set	0xFC3
  2769                           	global	_CCPR1
  2770  0000                     _CCPR1	set	0xFBE
  2771                           	global	_CCPR2
  2772  0000                     _CCPR2	set	0xFBB
  2773                           	global	_FSR0
  2774  0000                     _FSR0	set	0xFE9
  2775                           	global	_FSR1
  2776  0000                     _FSR1	set	0xFE1
  2777                           	global	_FSR2
  2778  0000                     _FSR2	set	0xFD9
  2779                           	global	_PROD
  2780  0000                     _PROD	set	0xFF3
  2781                           	global	_TMR0
  2782  0000                     _TMR0	set	0xFD6
  2783                           	global	_TMR1
  2784  0000                     _TMR1	set	0xFCE
  2785                           	global	_ADCON0
  2786  0000                     _ADCON0	set	0xFC2
  2787                           	global	_ADCON0bits
  2788  0000                     _ADCON0bits	set	0xFC2
  2789                           	global	_ADCON1
  2790  0000                     _ADCON1	set	0xFC1
  2791                           	global	_ADCON1bits
  2792  0000                     _ADCON1bits	set	0xFC1
  2793                           	global	_ADCON2
  2794  0000                     _ADCON2	set	0xFC0
  2795                           	global	_ADCON2bits
  2796  0000                     _ADCON2bits	set	0xFC0
  2797                           	global	_ADRESH
  2798  0000                     _ADRESH	set	0xFC4
  2799                           	global	_ADRESL
  2800  0000                     _ADRESL	set	0xFC3
  2801                           	global	_BAUDCON
  2802  0000                     _BAUDCON	set	0xFB8
  2803                           	global	_BAUDCONbits
  2804  0000                     _BAUDCONbits	set	0xFB8
  2805                           	global	_BAUDCTL
  2806  0000                     _BAUDCTL	set	0xFB8
  2807                           	global	_BAUDCTLbits
  2808  0000                     _BAUDCTLbits	set	0xFB8
  2809                           	global	_BSR
  2810  0000                     _BSR	set	0xFE0
  2811                           	global	_CCP1CON
  2812  0000                     _CCP1CON	set	0xFBD
  2813                           	global	_CCP1CONbits
  2814  0000                     _CCP1CONbits	set	0xFBD
  2815                           	global	_CCP2CON
  2816  0000                     _CCP2CON	set	0xFBA
  2817                           	global	_CCP2CONbits
  2818  0000                     _CCP2CONbits	set	0xFBA
  2819                           	global	_CCPR1H
  2820  0000                     _CCPR1H	set	0xFBF
  2821                           	global	_CCPR1L
  2822  0000                     _CCPR1L	set	0xFBE
  2823                           	global	_CCPR2H
  2824  0000                     _CCPR2H	set	0xFBC
  2825                           	global	_CCPR2L
  2826  0000                     _CCPR2L	set	0xFBB
  2827                           	global	_CMCON
  2828  0000                     _CMCON	set	0xFB4
  2829                           	global	_CMCONbits
  2830  0000                     _CMCONbits	set	0xFB4
  2831                           	global	_CVRCON
  2832  0000                     _CVRCON	set	0xFB5
  2833                           	global	_CVRCONbits
  2834  0000                     _CVRCONbits	set	0xFB5
  2835                           	global	_DDRA
  2836  0000                     _DDRA	set	0xF92
  2837                           	global	_DDRAbits
  2838  0000                     _DDRAbits	set	0xF92
  2839                           	global	_DDRB
  2840  0000                     _DDRB	set	0xF93
  2841                           	global	_DDRBbits
  2842  0000                     _DDRBbits	set	0xF93
  2843                           	global	_DDRC
  2844  0000                     _DDRC	set	0xF94
  2845                           	global	_DDRCbits
  2846  0000                     _DDRCbits	set	0xF94
  2847                           	global	_DDRD
  2848  0000                     _DDRD	set	0xF95
  2849                           	global	_DDRDbits
  2850  0000                     _DDRDbits	set	0xF95
  2851                           	global	_DDRE
  2852  0000                     _DDRE	set	0xF96
  2853                           	global	_DDREbits
  2854  0000                     _DDREbits	set	0xF96
  2855                           	global	_ECCP1AS
  2856  0000                     _ECCP1AS	set	0xFB6
  2857                           	global	_ECCP1ASbits
  2858  0000                     _ECCP1ASbits	set	0xFB6
  2859                           	global	_ECCP1CON
  2860  0000                     _ECCP1CON	set	0xFBD
  2861                           	global	_ECCP1CONbits
  2862  0000                     _ECCP1CONbits	set	0xFBD
  2863                           	global	_ECCP1DEL
  2864  0000                     _ECCP1DEL	set	0xFB7
  2865                           	global	_ECCP1DELbits
  2866  0000                     _ECCP1DELbits	set	0xFB7
  2867                           	global	_EECON1
  2868  0000                     _EECON1	set	0xFA6
  2869                           	global	_EECON1bits
  2870  0000                     _EECON1bits	set	0xFA6
  2871                           	global	_EECON2
  2872  0000                     _EECON2	set	0xFA7
  2873                           	global	_FSR0H
  2874  0000                     _FSR0H	set	0xFEA
  2875                           	global	_FSR0L
  2876  0000                     _FSR0L	set	0xFE9
  2877                           	global	_FSR1H
  2878  0000                     _FSR1H	set	0xFE2
  2879                           	global	_FSR1L
  2880  0000                     _FSR1L	set	0xFE1
  2881                           	global	_FSR2H
  2882  0000                     _FSR2H	set	0xFDA
  2883                           	global	_FSR2L
  2884  0000                     _FSR2L	set	0xFD9
  2885                           	global	_INDF0
  2886  0000                     _INDF0	set	0xFEF
  2887                           	global	_INDF1
  2888  0000                     _INDF1	set	0xFE7
  2889                           	global	_INDF2
  2890  0000                     _INDF2	set	0xFDF
  2891                           	global	_INTCON
  2892  0000                     _INTCON	set	0xFF2
  2893                           	global	_INTCON2
  2894  0000                     _INTCON2	set	0xFF1
  2895                           	global	_INTCON2bits
  2896  0000                     _INTCON2bits	set	0xFF1
  2897                           	global	_INTCON3
  2898  0000                     _INTCON3	set	0xFF0
  2899                           	global	_INTCON3bits
  2900  0000                     _INTCON3bits	set	0xFF0
  2901                           	global	_INTCONbits
  2902  0000                     _INTCONbits	set	0xFF2
  2903                           	global	_IPR1
  2904  0000                     _IPR1	set	0xF9F
  2905                           	global	_IPR1bits
  2906  0000                     _IPR1bits	set	0xF9F
  2907                           	global	_IPR2
  2908  0000                     _IPR2	set	0xFA2
  2909                           	global	_IPR2bits
  2910  0000                     _IPR2bits	set	0xFA2
  2911                           	global	_IPR3
  2912  0000                     _IPR3	set	0xFA5
  2913                           	global	_IPR3bits
  2914  0000                     _IPR3bits	set	0xFA5
  2915                           	global	_LATA
  2916  0000                     _LATA	set	0xF89
  2917                           	global	_LATAbits
  2918  0000                     _LATAbits	set	0xF89
  2919                           	global	_LATB
  2920  0000                     _LATB	set	0xF8A
  2921                           	global	_LATBbits
  2922  0000                     _LATBbits	set	0xF8A
  2923                           	global	_LATC
  2924  0000                     _LATC	set	0xF8B
  2925                           	global	_LATCbits
  2926  0000                     _LATCbits	set	0xF8B
  2927                           	global	_LATD
  2928  0000                     _LATD	set	0xF8C
  2929                           	global	_LATDbits
  2930  0000                     _LATDbits	set	0xF8C
  2931                           	global	_LATE
  2932  0000                     _LATE	set	0xF8D
  2933                           	global	_LATEbits
  2934  0000                     _LATEbits	set	0xF8D
  2935                           	global	_MEMCON
  2936  0000                     _MEMCON	set	0xFCB
  2937                           	global	_OSCCON
  2938  0000                     _OSCCON	set	0xFD3
  2939                           	global	_OSCCONbits
  2940  0000                     _OSCCONbits	set	0xFD3
  2941                           	global	_OSCTUNE
  2942  0000                     _OSCTUNE	set	0xF9B
  2943                           	global	_OSCTUNEbits
  2944  0000                     _OSCTUNEbits	set	0xF9B
  2945                           	global	_PCL
  2946  0000                     _PCL	set	0xFF9
  2947                           	global	_PCLATH
  2948  0000                     _PCLATH	set	0xFFA
  2949                           	global	_PCLATU
  2950  0000                     _PCLATU	set	0xFFB
  2951                           	global	_PIE1
  2952  0000                     _PIE1	set	0xF9D
  2953                           	global	_PIE1bits
  2954  0000                     _PIE1bits	set	0xF9D
  2955                           	global	_PIE2
  2956  0000                     _PIE2	set	0xFA0
  2957                           	global	_PIE2bits
  2958  0000                     _PIE2bits	set	0xFA0
  2959                           	global	_PIE3
  2960  0000                     _PIE3	set	0xFA3
  2961                           	global	_PIE3bits
  2962  0000                     _PIE3bits	set	0xFA3
  2963                           	global	_PIR1
  2964  0000                     _PIR1	set	0xF9E
  2965                           	global	_PIR1bits
  2966  0000                     _PIR1bits	set	0xF9E
  2967                           	global	_PIR2
  2968  0000                     _PIR2	set	0xFA1
  2969                           	global	_PIR2bits
  2970  0000                     _PIR2bits	set	0xFA1
  2971                           	global	_PIR3
  2972  0000                     _PIR3	set	0xFA4
  2973                           	global	_PIR3bits
  2974  0000                     _PIR3bits	set	0xFA4
  2975                           	global	_PLUSW0
  2976  0000                     _PLUSW0	set	0xFEB
  2977                           	global	_PLUSW1
  2978  0000                     _PLUSW1	set	0xFE3
  2979                           	global	_PLUSW2
  2980  0000                     _PLUSW2	set	0xFDB
  2981                           	global	_PORTA
  2982  0000                     _PORTA	set	0xF80
  2983                           	global	_PORTAbits
  2984  0000                     _PORTAbits	set	0xF80
  2985                           	global	_PORTB
  2986  0000                     _PORTB	set	0xF81
  2987                           	global	_PORTBbits
  2988  0000                     _PORTBbits	set	0xF81
  2989                           	global	_PORTC
  2990  0000                     _PORTC	set	0xF82
  2991                           	global	_PORTCbits
  2992  0000                     _PORTCbits	set	0xF82
  2993                           	global	_PORTD
  2994  0000                     _PORTD	set	0xF83
  2995                           	global	_PORTDbits
  2996  0000                     _PORTDbits	set	0xF83
  2997                           	global	_PORTE
  2998  0000                     _PORTE	set	0xF84
  2999                           	global	_PORTEbits
  3000  0000                     _PORTEbits	set	0xF84
  3001                           	global	_POSTDEC0
  3002  0000                     _POSTDEC0	set	0xFED
  3003                           	global	_POSTDEC1
  3004  0000                     _POSTDEC1	set	0xFE5
  3005                           	global	_POSTDEC2
  3006  0000                     _POSTDEC2	set	0xFDD
  3007                           	global	_POSTINC0
  3008  0000                     _POSTINC0	set	0xFEE
  3009                           	global	_POSTINC1
  3010  0000                     _POSTINC1	set	0xFE6
  3011                           	global	_POSTINC2
  3012  0000                     _POSTINC2	set	0xFDE
  3013                           	global	_PR2
  3014  0000                     _PR2	set	0xFCB
  3015                           	global	_PREINC0
  3016  0000                     _PREINC0	set	0xFEC
  3017                           	global	_PREINC1
  3018  0000                     _PREINC1	set	0xFE4
  3019                           	global	_PREINC2
  3020  0000                     _PREINC2	set	0xFDC
  3021                           	global	_PRODH
  3022  0000                     _PRODH	set	0xFF4
  3023                           	global	_PRODL
  3024  0000                     _PRODL	set	0xFF3
  3025                           	global	_PWM1CON
  3026  0000                     _PWM1CON	set	0xFB7
  3027                           	global	_PWM1CONbits
  3028  0000                     _PWM1CONbits	set	0xFB7
  3029                           	global	_RCON
  3030  0000                     _RCON	set	0xFD0
  3031                           	global	_RCONbits
  3032  0000                     _RCONbits	set	0xFD0
  3033                           	global	_RCREG
  3034  0000                     _RCREG	set	0xFAE
  3035                           	global	_RCREG1
  3036  0000                     _RCREG1	set	0xFAE
  3037                           	global	_RCSTA
  3038  0000                     _RCSTA	set	0xFAB
  3039                           	global	_RCSTA1
  3040  0000                     _RCSTA1	set	0xFAB
  3041                           	global	_RCSTA1bits
  3042  0000                     _RCSTA1bits	set	0xFAB
  3043                           	global	_RCSTAbits
  3044  0000                     _RCSTAbits	set	0xFAB
  3045                           	global	_SPBRG
  3046  0000                     _SPBRG	set	0xFAF
  3047                           	global	_SPBRG1
  3048  0000                     _SPBRG1	set	0xFAF
  3049                           	global	_SPBRGH
  3050  0000                     _SPBRGH	set	0xFB0
  3051                           	global	_SSP1ADD
  3052  0000                     _SSP1ADD	set	0xFC8
  3053                           	global	_SSP1ADDbits
  3054  0000                     _SSP1ADDbits	set	0xFC8
  3055                           	global	_SSP1BUF
  3056  0000                     _SSP1BUF	set	0xFC9
  3057                           	global	_SSP1CON1
  3058  0000                     _SSP1CON1	set	0xFC6
  3059                           	global	_SSP1CON1bits
  3060  0000                     _SSP1CON1bits	set	0xFC6
  3061                           	global	_SSP1CON2
  3062  0000                     _SSP1CON2	set	0xFC5
  3063                           	global	_SSP1CON2bits
  3064  0000                     _SSP1CON2bits	set	0xFC5
  3065                           	global	_SSP1STAT
  3066  0000                     _SSP1STAT	set	0xFC7
  3067                           	global	_SSP1STATbits
  3068  0000                     _SSP1STATbits	set	0xFC7
  3069                           	global	_SSP2ADD
  3070  0000                     _SSP2ADD	set	0xF88
  3071                           	global	_SSP2ADDbits
  3072  0000                     _SSP2ADDbits	set	0xF88
  3073                           	global	_SSP2BUF
  3074  0000                     _SSP2BUF	set	0xF8E
  3075                           	global	_SSP2CON1
  3076  0000                     _SSP2CON1	set	0xF86
  3077                           	global	_SSP2CON1bits
  3078  0000                     _SSP2CON1bits	set	0xF86
  3079                           	global	_SSP2CON2
  3080  0000                     _SSP2CON2	set	0xF85
  3081                           	global	_SSP2CON2bits
  3082  0000                     _SSP2CON2bits	set	0xF85
  3083                           	global	_SSP2STAT
  3084  0000                     _SSP2STAT	set	0xF87
  3085                           	global	_SSP2STATbits
  3086  0000                     _SSP2STATbits	set	0xF87
  3087                           	global	_SSPADD
  3088  0000                     _SSPADD	set	0xFC8
  3089                           	global	_SSPADDbits
  3090  0000                     _SSPADDbits	set	0xFC8
  3091                           	global	_SSPBUF
  3092  0000                     _SSPBUF	set	0xFC9
  3093                           	global	_SSPCON1
  3094  0000                     _SSPCON1	set	0xFC6
  3095                           	global	_SSPCON1bits
  3096  0000                     _SSPCON1bits	set	0xFC6
  3097                           	global	_SSPCON2
  3098  0000                     _SSPCON2	set	0xFC5
  3099                           	global	_SSPCON2bits
  3100  0000                     _SSPCON2bits	set	0xFC5
  3101                           	global	_SSPSTAT
  3102  0000                     _SSPSTAT	set	0xFC7
  3103                           	global	_SSPSTATbits
  3104  0000                     _SSPSTATbits	set	0xFC7
  3105                           	global	_STATUS
  3106  0000                     _STATUS	set	0xFD8
  3107                           	global	_STATUSbits
  3108  0000                     _STATUSbits	set	0xFD8
  3109                           	global	_STKPTR
  3110  0000                     _STKPTR	set	0xFFC
  3111                           	global	_STKPTRbits
  3112  0000                     _STKPTRbits	set	0xFFC
  3113                           	global	_T0CON
  3114  0000                     _T0CON	set	0xFD5
  3115                           	global	_T0CONbits
  3116  0000                     _T0CONbits	set	0xFD5
  3117                           	global	_T1CON
  3118  0000                     _T1CON	set	0xFCD
  3119                           	global	_T1CONbits
  3120  0000                     _T1CONbits	set	0xFCD
  3121                           	global	_T2CON
  3122  0000                     _T2CON	set	0xFCA
  3123                           	global	_T2CONbits
  3124  0000                     _T2CONbits	set	0xFCA
  3125                           	global	_TABLAT
  3126  0000                     _TABLAT	set	0xFF5
  3127                           	global	_TBLPTRH
  3128  0000                     _TBLPTRH	set	0xFF7
  3129                           	global	_TBLPTRL
  3130  0000                     _TBLPTRL	set	0xFF6
  3131                           	global	_TBLPTRU
  3132  0000                     _TBLPTRU	set	0xFF8
  3133                           	global	_TMR0H
  3134  0000                     _TMR0H	set	0xFD7
  3135                           	global	_TMR0L
  3136  0000                     _TMR0L	set	0xFD6
  3137                           	global	_TMR1H
  3138  0000                     _TMR1H	set	0xFCF
  3139                           	global	_TMR1L
  3140  0000                     _TMR1L	set	0xFCE
  3141                           	global	_TMR2
  3142  0000                     _TMR2	set	0xFCC
  3143                           	global	_TOSH
  3144  0000                     _TOSH	set	0xFFE
  3145                           	global	_TOSL
  3146  0000                     _TOSL	set	0xFFD
  3147                           	global	_TOSU
  3148  0000                     _TOSU	set	0xFFF
  3149                           	global	_TRISA
  3150  0000                     _TRISA	set	0xF92
  3151                           	global	_TRISAbits
  3152  0000                     _TRISAbits	set	0xF92
  3153                           	global	_TRISB
  3154  0000                     _TRISB	set	0xF93
  3155                           	global	_TRISBbits
  3156  0000                     _TRISBbits	set	0xF93
  3157                           	global	_TRISC
  3158  0000                     _TRISC	set	0xF94
  3159                           	global	_TRISCbits
  3160  0000                     _TRISCbits	set	0xF94
  3161                           	global	_TRISD
  3162  0000                     _TRISD	set	0xF95
  3163                           	global	_TRISDbits
  3164  0000                     _TRISDbits	set	0xF95
  3165                           	global	_TRISE
  3166  0000                     _TRISE	set	0xF96
  3167                           	global	_TRISEbits
  3168  0000                     _TRISEbits	set	0xF96
  3169                           	global	_TXREG
  3170  0000                     _TXREG	set	0xFAD
  3171                           	global	_TXREG1
  3172  0000                     _TXREG1	set	0xFAD
  3173                           	global	_TXSTA
  3174  0000                     _TXSTA	set	0xFAC
  3175                           	global	_TXSTA1
  3176  0000                     _TXSTA1	set	0xFAC
  3177                           	global	_TXSTA1bits
  3178  0000                     _TXSTA1bits	set	0xFAC
  3179                           	global	_TXSTAbits
  3180  0000                     _TXSTAbits	set	0xFAC
  3181                           	global	_WDTCON
  3182  0000                     _WDTCON	set	0xFD1
  3183                           	global	_WDTCONbits
  3184  0000                     _WDTCONbits	set	0xFD1
  3185                           	global	_WREG
  3186  0000                     _WREG	set	0xFE8
  3187                           	global	_ABDEN
  3188  0000                     _ABDEN	set	0x7DC0
  3189                           	global	_ABDOVF
  3190  0000                     _ABDOVF	set	0x7DC7
  3191                           	global	_ACKDT
  3192  0000                     _ACKDT	set	0x7E2D
  3193                           	global	_ACKDT1
  3194  0000                     _ACKDT1	set	0x7E2D
  3195                           	global	_ACKDT2
  3196  0000                     _ACKDT2	set	0x7C2D
  3197                           	global	_ACKEN
  3198  0000                     _ACKEN	set	0x7E2C
  3199                           	global	_ACKEN1
  3200  0000                     _ACKEN1	set	0x7E2C
  3201                           	global	_ACKEN2
  3202  0000                     _ACKEN2	set	0x7C2C
  3203                           	global	_ACKSTAT
  3204  0000                     _ACKSTAT	set	0x7E2E
  3205                           	global	_ACKSTAT1
  3206  0000                     _ACKSTAT1	set	0x7E2E
  3207                           	global	_ACKSTAT2
  3208  0000                     _ACKSTAT2	set	0x7C2E
  3209                           	global	_ACQT0
  3210  0000                     _ACQT0	set	0x7E03
  3211                           	global	_ACQT1
  3212  0000                     _ACQT1	set	0x7E04
  3213                           	global	_ACQT2
  3214  0000                     _ACQT2	set	0x7E05
  3215                           	global	_ADCAL
  3216  0000                     _ADCAL	set	0x7E17
  3217                           	global	_ADCS0
  3218  0000                     _ADCS0	set	0x7E00
  3219                           	global	_ADCS1
  3220  0000                     _ADCS1	set	0x7E01
  3221                           	global	_ADCS2
  3222  0000                     _ADCS2	set	0x7E02
  3223                           	global	_ADDEN
  3224  0000                     _ADDEN	set	0x7D5B
  3225                           	global	_ADDEN1
  3226  0000                     _ADDEN1	set	0x7D5B
  3227                           	global	_ADEN
  3228  0000                     _ADEN	set	0x7D5B
  3229                           	global	_ADFM
  3230  0000                     _ADFM	set	0x7E07
  3231                           	global	_ADIE
  3232  0000                     _ADIE	set	0x7CEE
  3233                           	global	_ADIF
  3234  0000                     _ADIF	set	0x7CF6
  3235                           	global	_ADIP
  3236  0000                     _ADIP	set	0x7CFE
  3237                           	global	_ADMSK1
  3238  0000                     _ADMSK1	set	0x7E29
  3239                           	global	_ADMSK11
  3240  0000                     _ADMSK11	set	0x7E29
  3241                           	global	_ADMSK12
  3242  0000                     _ADMSK12	set	0x7C29
  3243                           	global	_ADMSK2
  3244  0000                     _ADMSK2	set	0x7E2A
  3245                           	global	_ADMSK21
  3246  0000                     _ADMSK21	set	0x7E2A
  3247                           	global	_ADMSK22
  3248  0000                     _ADMSK22	set	0x7C2A
  3249                           	global	_ADMSK3
  3250  0000                     _ADMSK3	set	0x7E2B
  3251                           	global	_ADMSK31
  3252  0000                     _ADMSK31	set	0x7E2B
  3253                           	global	_ADMSK32
  3254  0000                     _ADMSK32	set	0x7C2B
  3255                           	global	_ADMSK4
  3256  0000                     _ADMSK4	set	0x7E2C
  3257                           	global	_ADMSK41
  3258  0000                     _ADMSK41	set	0x7E2C
  3259                           	global	_ADMSK42
  3260  0000                     _ADMSK42	set	0x7C2C
  3261                           	global	_ADMSK5
  3262  0000                     _ADMSK5	set	0x7E2D
  3263                           	global	_ADMSK51
  3264  0000                     _ADMSK51	set	0x7E2D
  3265                           	global	_ADMSK52
  3266  0000                     _ADMSK52	set	0x7C2D
  3267                           	global	_ADON
  3268  0000                     _ADON	set	0x7E10
  3269                           	global	_AN0
  3270  0000                     _AN0	set	0x7C00
  3271                           	global	_AN1
  3272  0000                     _AN1	set	0x7C01
  3273                           	global	_AN10
  3274  0000                     _AN10	set	0x7C09
  3275                           	global	_AN11
  3276  0000                     _AN11	set	0x7C0C
  3277                           	global	_AN12
  3278  0000                     _AN12	set	0x7C08
  3279                           	global	_AN2
  3280  0000                     _AN2	set	0x7C02
  3281                           	global	_AN3
  3282  0000                     _AN3	set	0x7C03
  3283                           	global	_AN4
  3284  0000                     _AN4	set	0x7C05
  3285                           	global	_AN5
  3286  0000                     _AN5	set	0x7C20
  3287                           	global	_AN6
  3288  0000                     _AN6	set	0x7C21
  3289                           	global	_AN7
  3290  0000                     _AN7	set	0x7C22
  3291                           	global	_AN8
  3292  0000                     _AN8	set	0x7C0A
  3293                           	global	_AN9
  3294  0000                     _AN9	set	0x7C0B
  3295                           	global	_BCL1IE
  3296  0000                     _BCL1IE	set	0x7D03
  3297                           	global	_BCL1IF
  3298  0000                     _BCL1IF	set	0x7D0B
  3299                           	global	_BCL1IP
  3300  0000                     _BCL1IP	set	0x7D13
  3301                           	global	_BCL2IE
  3302  0000                     _BCL2IE	set	0x7D1E
  3303                           	global	_BCL2IF
  3304  0000                     _BCL2IF	set	0x7D26
  3305                           	global	_BCL2IP
  3306  0000                     _BCL2IP	set	0x7D2E
  3307                           	global	_BCLIE
  3308  0000                     _BCLIE	set	0x7D03
  3309                           	global	_BCLIF
  3310  0000                     _BCLIF	set	0x7D0B
  3311                           	global	_BCLIP
  3312  0000                     _BCLIP	set	0x7D13
  3313                           	global	_BF
  3314  0000                     _BF	set	0x7E38
  3315                           	global	_BF1
  3316  0000                     _BF1	set	0x7E38
  3317                           	global	_BF2
  3318  0000                     _BF2	set	0x7C38
  3319                           	global	_BOR
  3320  0000                     _BOR	set	0x7E80
  3321                           	global	_BRG16
  3322  0000                     _BRG16	set	0x7DC3
  3323                           	global	_BRGH
  3324  0000                     _BRGH	set	0x7D62
  3325                           	global	_BRGH1
  3326  0000                     _BRGH1	set	0x7D62
  3327                           	global	_C1INV
  3328  0000                     _C1INV	set	0x7DA4
  3329                           	global	_C1OUT
  3330  0000                     _C1OUT	set	0x7DA6
  3331                           	global	_C2INV
  3332  0000                     _C2INV	set	0x7DA5
  3333                           	global	_C2OUT
  3334  0000                     _C2OUT	set	0x7DA7
  3335                           	global	_CARRY
  3336  0000                     _CARRY	set	0x7EC0
  3337                           	global	_CCP1
  3338  0000                     _CCP1	set	0x7C12
  3339                           	global	_CCP10
  3340  0000                     _CCP10	set	0x7C22
  3341                           	global	_CCP1IE
  3342  0000                     _CCP1IE	set	0x7CEA
  3343                           	global	_CCP1IF
  3344  0000                     _CCP1IF	set	0x7CF2
  3345                           	global	_CCP1IP
  3346  0000                     _CCP1IP	set	0x7CFA
  3347                           	global	_CCP1M0
  3348  0000                     _CCP1M0	set	0x7DE8
  3349                           	global	_CCP1M1
  3350  0000                     _CCP1M1	set	0x7DE9
  3351                           	global	_CCP1M2
  3352  0000                     _CCP1M2	set	0x7DEA
  3353                           	global	_CCP1M3
  3354  0000                     _CCP1M3	set	0x7DEB
  3355                           	global	_CCP1X
  3356  0000                     _CCP1X	set	0x7DED
  3357                           	global	_CCP1Y
  3358  0000                     _CCP1Y	set	0x7DEC
  3359                           	global	_CCP2E
  3360  0000                     _CCP2E	set	0x7C27
  3361                           	global	_CCP2IE
  3362  0000                     _CCP2IE	set	0x7D00
  3363                           	global	_CCP2IF
  3364  0000                     _CCP2IF	set	0x7D08
  3365                           	global	_CCP2IP
  3366  0000                     _CCP2IP	set	0x7D10
  3367                           	global	_CCP2M0
  3368  0000                     _CCP2M0	set	0x7DD0
  3369                           	global	_CCP2M1
  3370  0000                     _CCP2M1	set	0x7DD1
  3371                           	global	_CCP2M2
  3372  0000                     _CCP2M2	set	0x7DD2
  3373                           	global	_CCP2M3
  3374  0000                     _CCP2M3	set	0x7DD3
  3375                           	global	_CCP2X
  3376  0000                     _CCP2X	set	0x7DD5
  3377                           	global	_CCP2Y
  3378  0000                     _CCP2Y	set	0x7DD4
  3379                           	global	_CCP2_PA2
  3380  0000                     _CCP2_PA2	set	0x7C0B
  3381                           	global	_CCP6E
  3382  0000                     _CCP6E	set	0x7C26
  3383                           	global	_CCP7E
  3384  0000                     _CCP7E	set	0x7C25
  3385                           	global	_CCP8E
  3386  0000                     _CCP8E	set	0x7C24
  3387                           	global	_CCP9E
  3388  0000                     _CCP9E	set	0x7C23
  3389                           	global	_CHS0
  3390  0000                     _CHS0	set	0x7E12
  3391                           	global	_CHS1
  3392  0000                     _CHS1	set	0x7E13
  3393                           	global	_CHS2
  3394  0000                     _CHS2	set	0x7E14
  3395                           	global	_CHS3
  3396  0000                     _CHS3	set	0x7E15
  3397                           	global	_CHSN3
  3398  0000                     _CHSN3	set	0x7E0B
  3399                           	global	_CIS
  3400  0000                     _CIS	set	0x7DA3
  3401                           	global	_CK
  3402  0000                     _CK	set	0x7C16
  3403                           	global	_CKE
  3404  0000                     _CKE	set	0x7E3E
  3405                           	global	_CKE1
  3406  0000                     _CKE1	set	0x7E3E
  3407                           	global	_CKE2
  3408  0000                     _CKE2	set	0x7C3E
  3409                           	global	_CKP
  3410  0000                     _CKP	set	0x7E34
  3411                           	global	_CKP1
  3412  0000                     _CKP1	set	0x7E34
  3413                           	global	_CKP2
  3414  0000                     _CKP2	set	0x7C34
  3415                           	global	_CM0
  3416  0000                     _CM0	set	0x7DA0
  3417                           	global	_CM1
  3418  0000                     _CM1	set	0x7DA1
  3419                           	global	_CM2
  3420  0000                     _CM2	set	0x7DA2
  3421                           	global	_CMEN0
  3422  0000                     _CMEN0	set	0x7DA0
  3423                           	global	_CMEN1
  3424  0000                     _CMEN1	set	0x7DA1
  3425                           	global	_CMEN2
  3426  0000                     _CMEN2	set	0x7DA2
  3427                           	global	_CMIE
  3428  0000                     _CMIE	set	0x7D06
  3429                           	global	_CMIF
  3430  0000                     _CMIF	set	0x7D0E
  3431                           	global	_CMIP
  3432  0000                     _CMIP	set	0x7D16
  3433                           	global	_CREN
  3434  0000                     _CREN	set	0x7D5C
  3435                           	global	_CREN1
  3436  0000                     _CREN1	set	0x7D5C
  3437                           	global	_CS
  3438  0000                     _CS	set	0x7C22
  3439                           	global	_CSRC
  3440  0000                     _CSRC	set	0x7D67
  3441                           	global	_CSRC1
  3442  0000                     _CSRC1	set	0x7D67
  3443                           	global	_CVR0
  3444  0000                     _CVR0	set	0x7DA8
  3445                           	global	_CVR1
  3446  0000                     _CVR1	set	0x7DA9
  3447                           	global	_CVR2
  3448  0000                     _CVR2	set	0x7DAA
  3449                           	global	_CVR3
  3450  0000                     _CVR3	set	0x7DAB
  3451                           	global	_CVREF
  3452  0000                     _CVREF	set	0x7C02
  3453                           	global	_CVREN
  3454  0000                     _CVREN	set	0x7DAF
  3455                           	global	_CVROE
  3456  0000                     _CVROE	set	0x7DAE
  3457                           	global	_CVROEN
  3458  0000                     _CVROEN	set	0x7DAE
  3459                           	global	_CVRR
  3460  0000                     _CVRR	set	0x7DAD
  3461                           	global	_CVRSS
  3462  0000                     _CVRSS	set	0x7DAC
  3463                           	global	_DA
  3464  0000                     _DA	set	0x7E3D
  3465                           	global	_DA1
  3466  0000                     _DA1	set	0x7E3D
  3467                           	global	_DA2
  3468  0000                     _DA2	set	0x7C3D
  3469                           	global	_DATA_ADDRESS2
  3470  0000                     _DATA_ADDRESS2	set	0x7C3D
  3471                           	global	_DC
  3472  0000                     _DC	set	0x7EC1
  3473                           	global	_DC1B0
  3474  0000                     _DC1B0	set	0x7DEC
  3475                           	global	_DC1B1
  3476  0000                     _DC1B1	set	0x7DED
  3477                           	global	_DC2B0
  3478  0000                     _DC2B0	set	0x7DD4
  3479                           	global	_DC2B1
  3480  0000                     _DC2B1	set	0x7DD5
  3481                           	global	_DONE
  3482  0000                     _DONE	set	0x7E11
  3483                           	global	_DT
  3484  0000                     _DT	set	0x7C17
  3485                           	global	_D_A2
  3486  0000                     _D_A2	set	0x7C3D
  3487                           	global	_D_nA2
  3488  0000                     _D_nA2	set	0x7C3D
  3489                           	global	_ECCPAS0
  3490  0000                     _ECCPAS0	set	0x7DB4
  3491                           	global	_ECCPAS1
  3492  0000                     _ECCPAS1	set	0x7DB5
  3493                           	global	_ECCPAS2
  3494  0000                     _ECCPAS2	set	0x7DB6
  3495                           	global	_ECCPASE
  3496  0000                     _ECCPASE	set	0x7DB7
  3497                           	global	_FERR
  3498  0000                     _FERR	set	0x7D5A
  3499                           	global	_FERR1
  3500  0000                     _FERR1	set	0x7D5A
  3501                           	global	_FLT0
  3502  0000                     _FLT0	set	0x7C08
  3503                           	global	_FREE
  3504  0000                     _FREE	set	0x7D34
  3505                           	global	_GCEN
  3506  0000                     _GCEN	set	0x7E2F
  3507                           	global	_GCEN1
  3508  0000                     _GCEN1	set	0x7E2F
  3509                           	global	_GCEN2
  3510  0000                     _GCEN2	set	0x7C2F
  3511                           	global	_GIE
  3512  0000                     _GIE	set	0x7F97
  3513                           	global	_GIEH
  3514  0000                     _GIEH	set	0x7F97
  3515                           	global	_GIEL
  3516  0000                     _GIEL	set	0x7F96
  3517                           	global	_GIE_GIEH
  3518  0000                     _GIE_GIEH	set	0x7F97
  3519                           	global	_GO
  3520  0000                     _GO	set	0x7E11
  3521                           	global	_GODONE
  3522  0000                     _GODONE	set	0x7E11
  3523                           	global	_GO_DONE
  3524  0000                     _GO_DONE	set	0x7E11
  3525                           	global	_GO_NOT_DONE
  3526  0000                     _GO_NOT_DONE	set	0x7E11
  3527                           	global	_GO_nDONE
  3528  0000                     _GO_nDONE	set	0x7E11
  3529                           	global	_I2C_DAT2
  3530  0000                     _I2C_DAT2	set	0x7C3D
  3531                           	global	_I2C_READ2
  3532  0000                     _I2C_READ2	set	0x7C3A
  3533                           	global	_I2C_START2
  3534  0000                     _I2C_START2	set	0x7C3B
  3535                           	global	_I2C_STOP2
  3536  0000                     _I2C_STOP2	set	0x7C3C
  3537                           	global	_IBF
  3538  0000                     _IBF	set	0x7CB7
  3539                           	global	_IBOV
  3540  0000                     _IBOV	set	0x7CB5
  3541                           	global	_IDLEN
  3542  0000                     _IDLEN	set	0x7E9F
  3543                           	global	_INT0
  3544  0000                     _INT0	set	0x7C08
  3545                           	global	_INT0E
  3546  0000                     _INT0E	set	0x7F94
  3547                           	global	_INT0F
  3548  0000                     _INT0F	set	0x7F91
  3549                           	global	_INT0IE
  3550  0000                     _INT0IE	set	0x7F94
  3551                           	global	_INT0IF
  3552  0000                     _INT0IF	set	0x7F91
  3553                           	global	_INT1
  3554  0000                     _INT1	set	0x7C09
  3555                           	global	_INT1E
  3556  0000                     _INT1E	set	0x7F83
  3557                           	global	_INT1F
  3558  0000                     _INT1F	set	0x7F80
  3559                           	global	_INT1IE
  3560  0000                     _INT1IE	set	0x7F83
  3561                           	global	_INT1IF
  3562  0000                     _INT1IF	set	0x7F80
  3563                           	global	_INT1IP
  3564  0000                     _INT1IP	set	0x7F86
  3565                           	global	_INT1P
  3566  0000                     _INT1P	set	0x7F86
  3567                           	global	_INT2
  3568  0000                     _INT2	set	0x7C0A
  3569                           	global	_INT2E
  3570  0000                     _INT2E	set	0x7F84
  3571                           	global	_INT2F
  3572  0000                     _INT2F	set	0x7F81
  3573                           	global	_INT2IE
  3574  0000                     _INT2IE	set	0x7F84
  3575                           	global	_INT2IF
  3576  0000                     _INT2IF	set	0x7F81
  3577                           	global	_INT2IP
  3578  0000                     _INT2IP	set	0x7F87
  3579                           	global	_INT2P
  3580  0000                     _INT2P	set	0x7F87
  3581                           	global	_INTEDG0
  3582  0000                     _INTEDG0	set	0x7F8E
  3583                           	global	_INTEDG1
  3584  0000                     _INTEDG1	set	0x7F8D
  3585                           	global	_INTEDG2
  3586  0000                     _INTEDG2	set	0x7F8C
  3587                           	global	_IPEN
  3588  0000                     _IPEN	set	0x7E87
  3589                           	global	_KBI0
  3590  0000                     _KBI0	set	0x7C0C
  3591                           	global	_KBI1
  3592  0000                     _KBI1	set	0x7C0D
  3593                           	global	_KBI2
  3594  0000                     _KBI2	set	0x7C0E
  3595                           	global	_KBI3
  3596  0000                     _KBI3	set	0x7C0F
  3597                           	global	_LA0
  3598  0000                     _LA0	set	0x7C48
  3599                           	global	_LA1
  3600  0000                     _LA1	set	0x7C49
  3601                           	global	_LA2
  3602  0000                     _LA2	set	0x7C4A
  3603                           	global	_LA3
  3604  0000                     _LA3	set	0x7C4B
  3605                           	global	_LA4
  3606  0000                     _LA4	set	0x7C4C
  3607                           	global	_LA5
  3608  0000                     _LA5	set	0x7C4D
  3609                           	global	_LA6
  3610  0000                     _LA6	set	0x7C4E
  3611                           	global	_LA7
  3612  0000                     _LA7	set	0x7C4F
  3613                           	global	_LATA0
  3614  0000                     _LATA0	set	0x7C48
  3615                           	global	_LATA1
  3616  0000                     _LATA1	set	0x7C49
  3617                           	global	_LATA2
  3618  0000                     _LATA2	set	0x7C4A
  3619                           	global	_LATA3
  3620  0000                     _LATA3	set	0x7C4B
  3621                           	global	_LATA5
  3622  0000                     _LATA5	set	0x7C4D
  3623                           	global	_LATA7
  3624  0000                     _LATA7	set	0x7C4F
  3625                           	global	_LATB0
  3626  0000                     _LATB0	set	0x7C50
  3627                           	global	_LATB1
  3628  0000                     _LATB1	set	0x7C51
  3629                           	global	_LATB2
  3630  0000                     _LATB2	set	0x7C52
  3631                           	global	_LATB3
  3632  0000                     _LATB3	set	0x7C53
  3633                           	global	_LATB4
  3634  0000                     _LATB4	set	0x7C54
  3635                           	global	_LATB5
  3636  0000                     _LATB5	set	0x7C55
  3637                           	global	_LATB6
  3638  0000                     _LATB6	set	0x7C56
  3639                           	global	_LATB7
  3640  0000                     _LATB7	set	0x7C57
  3641                           	global	_LATC0
  3642  0000                     _LATC0	set	0x7C58
  3643                           	global	_LATC1
  3644  0000                     _LATC1	set	0x7C59
  3645                           	global	_LATC2
  3646  0000                     _LATC2	set	0x7C5A
  3647                           	global	_LATC3
  3648  0000                     _LATC3	set	0x7C5B
  3649                           	global	_LATC4
  3650  0000                     _LATC4	set	0x7C5C
  3651                           	global	_LATC5
  3652  0000                     _LATC5	set	0x7C5D
  3653                           	global	_LATC6
  3654  0000                     _LATC6	set	0x7C5E
  3655                           	global	_LATC7
  3656  0000                     _LATC7	set	0x7C5F
  3657                           	global	_LATD0
  3658  0000                     _LATD0	set	0x7C60
  3659                           	global	_LATD1
  3660  0000                     _LATD1	set	0x7C61
  3661                           	global	_LATD2
  3662  0000                     _LATD2	set	0x7C62
  3663                           	global	_LATD3
  3664  0000                     _LATD3	set	0x7C63
  3665                           	global	_LATD4
  3666  0000                     _LATD4	set	0x7C64
  3667                           	global	_LATD5
  3668  0000                     _LATD5	set	0x7C65
  3669                           	global	_LATD6
  3670  0000                     _LATD6	set	0x7C66
  3671                           	global	_LATD7
  3672  0000                     _LATD7	set	0x7C67
  3673                           	global	_LATE0
  3674  0000                     _LATE0	set	0x7C68
  3675                           	global	_LATE1
  3676  0000                     _LATE1	set	0x7C69
  3677                           	global	_LATE2
  3678  0000                     _LATE2	set	0x7C6A
  3679                           	global	_LB0
  3680  0000                     _LB0	set	0x7C50
  3681                           	global	_LB1
  3682  0000                     _LB1	set	0x7C51
  3683                           	global	_LB2
  3684  0000                     _LB2	set	0x7C52
  3685                           	global	_LB3
  3686  0000                     _LB3	set	0x7C53
  3687                           	global	_LB4
  3688  0000                     _LB4	set	0x7C54
  3689                           	global	_LB5
  3690  0000                     _LB5	set	0x7C55
  3691                           	global	_LB6
  3692  0000                     _LB6	set	0x7C56
  3693                           	global	_LB7
  3694  0000                     _LB7	set	0x7C57
  3695                           	global	_LC0
  3696  0000                     _LC0	set	0x7C58
  3697                           	global	_LC1
  3698  0000                     _LC1	set	0x7C59
  3699                           	global	_LC2
  3700  0000                     _LC2	set	0x7C5A
  3701                           	global	_LC3
  3702  0000                     _LC3	set	0x7C5B
  3703                           	global	_LC4
  3704  0000                     _LC4	set	0x7C5C
  3705                           	global	_LC5
  3706  0000                     _LC5	set	0x7C5D
  3707                           	global	_LC6
  3708  0000                     _LC6	set	0x7C5E
  3709                           	global	_LC7
  3710  0000                     _LC7	set	0x7C5F
  3711                           	global	_LD0
  3712  0000                     _LD0	set	0x7C60
  3713                           	global	_LD1
  3714  0000                     _LD1	set	0x7C61
  3715                           	global	_LD2
  3716  0000                     _LD2	set	0x7C62
  3717                           	global	_LD3
  3718  0000                     _LD3	set	0x7C63
  3719                           	global	_LD4
  3720  0000                     _LD4	set	0x7C64
  3721                           	global	_LD5
  3722  0000                     _LD5	set	0x7C65
  3723                           	global	_LD6
  3724  0000                     _LD6	set	0x7C66
  3725                           	global	_LD7
  3726  0000                     _LD7	set	0x7C67
  3727                           	global	_LE0
  3728  0000                     _LE0	set	0x7C68
  3729                           	global	_LE1
  3730  0000                     _LE1	set	0x7C69
  3731                           	global	_LE2
  3732  0000                     _LE2	set	0x7C6A
  3733                           	global	_LE3
  3734  0000                     _LE3	set	0x7C6B
  3735                           	global	_LE4
  3736  0000                     _LE4	set	0x7C6C
  3737                           	global	_LE5
  3738  0000                     _LE5	set	0x7C6D
  3739                           	global	_LE6
  3740  0000                     _LE6	set	0x7C6E
  3741                           	global	_LE7
  3742  0000                     _LE7	set	0x7C6F
  3743                           	global	_LVDIN
  3744  0000                     _LVDIN	set	0x7C05
  3745                           	global	_MSK0
  3746  0000                     _MSK0	set	0x7E40
  3747                           	global	_MSK01
  3748  0000                     _MSK01	set	0x7E40
  3749                           	global	_MSK02
  3750  0000                     _MSK02	set	0x7C40
  3751                           	global	_MSK1
  3752  0000                     _MSK1	set	0x7E41
  3753                           	global	_MSK11
  3754  0000                     _MSK11	set	0x7E41
  3755                           	global	_MSK12
  3756  0000                     _MSK12	set	0x7C41
  3757                           	global	_MSK2
  3758  0000                     _MSK2	set	0x7E42
  3759                           	global	_MSK21
  3760  0000                     _MSK21	set	0x7E42
  3761                           	global	_MSK22
  3762  0000                     _MSK22	set	0x7C42
  3763                           	global	_MSK3
  3764  0000                     _MSK3	set	0x7E43
  3765                           	global	_MSK31
  3766  0000                     _MSK31	set	0x7E43
  3767                           	global	_MSK32
  3768  0000                     _MSK32	set	0x7C43
  3769                           	global	_MSK4
  3770  0000                     _MSK4	set	0x7E44
  3771                           	global	_MSK41
  3772  0000                     _MSK41	set	0x7E44
  3773                           	global	_MSK42
  3774  0000                     _MSK42	set	0x7C44
  3775                           	global	_MSK5
  3776  0000                     _MSK5	set	0x7E45
  3777                           	global	_MSK51
  3778  0000                     _MSK51	set	0x7E45
  3779                           	global	_MSK52
  3780  0000                     _MSK52	set	0x7C45
  3781                           	global	_MSK6
  3782  0000                     _MSK6	set	0x7E46
  3783                           	global	_MSK61
  3784  0000                     _MSK61	set	0x7E46
  3785                           	global	_MSK62
  3786  0000                     _MSK62	set	0x7C46
  3787                           	global	_MSK7
  3788  0000                     _MSK7	set	0x7E47
  3789                           	global	_MSK71
  3790  0000                     _MSK71	set	0x7E47
  3791                           	global	_MSK72
  3792  0000                     _MSK72	set	0x7C47
  3793                           	global	_NEGATIVE
  3794  0000                     _NEGATIVE	set	0x7EC4
  3795                           	global	_NOT_A
  3796  0000                     _NOT_A	set	0x7E3D
  3797                           	global	_NOT_BOR
  3798  0000                     _NOT_BOR	set	0x7E80
  3799                           	global	_NOT_CS
  3800  0000                     _NOT_CS	set	0x7C22
  3801                           	global	_NOT_DONE
  3802  0000                     _NOT_DONE	set	0x7E11
  3803                           	global	_NOT_PD
  3804  0000                     _NOT_PD	set	0x7E82
  3805                           	global	_NOT_POR
  3806  0000                     _NOT_POR	set	0x7E81
  3807                           	global	_NOT_RBPU
  3808  0000                     _NOT_RBPU	set	0x7F8F
  3809                           	global	_NOT_RC8
  3810  0000                     _NOT_RC8	set	0x7D5E
  3811                           	global	_NOT_RD
  3812  0000                     _NOT_RD	set	0x7C20
  3813                           	global	_NOT_RI
  3814  0000                     _NOT_RI	set	0x7E84
  3815                           	global	_NOT_SS1
  3816  0000                     _NOT_SS1	set	0x7C05
  3817                           	global	_NOT_SS2
  3818  0000                     _NOT_SS2	set	0x7C1B
  3819                           	global	_NOT_T1SYNC
  3820  0000                     _NOT_T1SYNC	set	0x7E6A
  3821                           	global	_NOT_TO
  3822  0000                     _NOT_TO	set	0x7E83
  3823                           	global	_NOT_TX8
  3824  0000                     _NOT_TX8	set	0x7D66
  3825                           	global	_NOT_W
  3826  0000                     _NOT_W	set	0x7E3A
  3827                           	global	_NOT_WR
  3828  0000                     _NOT_WR	set	0x7C21
  3829                           	global	_OBF
  3830  0000                     _OBF	set	0x7CB6
  3831                           	global	_OERR
  3832  0000                     _OERR	set	0x7D59
  3833                           	global	_OERR1
  3834  0000                     _OERR1	set	0x7D59
  3835                           	global	_OSCFIE
  3836  0000                     _OSCFIE	set	0x7D07
  3837                           	global	_OSCFIF
  3838  0000                     _OSCFIF	set	0x7D0F
  3839                           	global	_OSCFIP
  3840  0000                     _OSCFIP	set	0x7D17
  3841                           	global	_OSTS
  3842  0000                     _OSTS	set	0x7E9B
  3843                           	global	_OV
  3844  0000                     _OV	set	0x7EC3
  3845                           	global	_OVERFLOW
  3846  0000                     _OVERFLOW	set	0x7EC3
  3847                           	global	_P1A
  3848  0000                     _P1A	set	0x7C12
  3849                           	global	_P1B
  3850  0000                     _P1B	set	0x7C1D
  3851                           	global	_P1C
  3852  0000                     _P1C	set	0x7C1E
  3853                           	global	_P1D
  3854  0000                     _P1D	set	0x7C1F
  3855                           	global	_P1M0
  3856  0000                     _P1M0	set	0x7DEE
  3857                           	global	_P1M1
  3858  0000                     _P1M1	set	0x7DEF
  3859                           	global	_P2
  3860  0000                     _P2	set	0x7C3C
  3861                           	global	_PA1
  3862  0000                     _PA1	set	0x7C12
  3863                           	global	_PA2
  3864  0000                     _PA2	set	0x7C11
  3865                           	global	_PA2E
  3866  0000                     _PA2E	set	0x7C27
  3867                           	global	_PB1E
  3868  0000                     _PB1E	set	0x7C26
  3869                           	global	_PB2
  3870  0000                     _PB2	set	0x7C22
  3871                           	global	_PB3E
  3872  0000                     _PB3E	set	0x7C24
  3873                           	global	_PC1E
  3874  0000                     _PC1E	set	0x7C25
  3875                           	global	_PC2
  3876  0000                     _PC2	set	0x7C21
  3877                           	global	_PC3E
  3878  0000                     _PC3E	set	0x7C23
  3879                           	global	_PCFG0
  3880  0000                     _PCFG0	set	0x7E08
  3881                           	global	_PCFG1
  3882  0000                     _PCFG1	set	0x7E09
  3883                           	global	_PCFG2
  3884  0000                     _PCFG2	set	0x7E0A
  3885                           	global	_PCFG3
  3886  0000                     _PCFG3	set	0x7E0B
  3887                           	global	_PD
  3888  0000                     _PD	set	0x7E82
  3889                           	global	_PD2
  3890  0000                     _PD2	set	0x7C20
  3891                           	global	_PDC0
  3892  0000                     _PDC0	set	0x7DB8
  3893                           	global	_PDC1
  3894  0000                     _PDC1	set	0x7DB9
  3895                           	global	_PDC2
  3896  0000                     _PDC2	set	0x7DBA
  3897                           	global	_PDC3
  3898  0000                     _PDC3	set	0x7DBB
  3899                           	global	_PDC4
  3900  0000                     _PDC4	set	0x7DBC
  3901                           	global	_PDC5
  3902  0000                     _PDC5	set	0x7DBD
  3903                           	global	_PDC6
  3904  0000                     _PDC6	set	0x7DBE
  3905                           	global	_PEIE
  3906  0000                     _PEIE	set	0x7F96
  3907                           	global	_PEIE_GIEL
  3908  0000                     _PEIE_GIEL	set	0x7F96
  3909                           	global	_PEN
  3910  0000                     _PEN	set	0x7E2A
  3911                           	global	_PEN1
  3912  0000                     _PEN1	set	0x7E2A
  3913                           	global	_PEN2
  3914  0000                     _PEN2	set	0x7C2A
  3915                           	global	_PGC
  3916  0000                     _PGC	set	0x7C0E
  3917                           	global	_PGD
  3918  0000                     _PGD	set	0x7C0F
  3919                           	global	_PLLEN
  3920  0000                     _PLLEN	set	0x7CDE
  3921                           	global	_POR
  3922  0000                     _POR	set	0x7E81
  3923                           	global	_PRSEN
  3924  0000                     _PRSEN	set	0x7DBF
  3925                           	global	_PSA
  3926  0000                     _PSA	set	0x7EAB
  3927                           	global	_PSP0
  3928  0000                     _PSP0	set	0x7C18
  3929                           	global	_PSP1
  3930  0000                     _PSP1	set	0x7C19
  3931                           	global	_PSP2
  3932  0000                     _PSP2	set	0x7C1A
  3933                           	global	_PSP3
  3934  0000                     _PSP3	set	0x7C1B
  3935                           	global	_PSP4
  3936  0000                     _PSP4	set	0x7C1C
  3937                           	global	_PSP5
  3938  0000                     _PSP5	set	0x7C1D
  3939                           	global	_PSP6
  3940  0000                     _PSP6	set	0x7C1E
  3941                           	global	_PSP7
  3942  0000                     _PSP7	set	0x7C1F
  3943                           	global	_PSPIE
  3944  0000                     _PSPIE	set	0x7CEF
  3945                           	global	_PSPIF
  3946  0000                     _PSPIF	set	0x7CF7
  3947                           	global	_PSPIP
  3948  0000                     _PSPIP	set	0x7CFF
  3949                           	global	_PSPMODE
  3950  0000                     _PSPMODE	set	0x7CB4
  3951                           	global	_PSSAC0
  3952  0000                     _PSSAC0	set	0x7DB2
  3953                           	global	_PSSAC1
  3954  0000                     _PSSAC1	set	0x7DB3
  3955                           	global	_PSSBD0
  3956  0000                     _PSSBD0	set	0x7DB0
  3957                           	global	_PSSBD1
  3958  0000                     _PSSBD1	set	0x7DB1
  3959                           	global	_RA0
  3960  0000                     _RA0	set	0x7C00
  3961                           	global	_RA1
  3962  0000                     _RA1	set	0x7C01
  3963                           	global	_RA2
  3964  0000                     _RA2	set	0x7C02
  3965                           	global	_RA3
  3966  0000                     _RA3	set	0x7C03
  3967                           	global	_RA4
  3968  0000                     _RA4	set	0x7C04
  3969                           	global	_RA5
  3970  0000                     _RA5	set	0x7C05
  3971                           	global	_RA6
  3972  0000                     _RA6	set	0x7C06
  3973                           	global	_RA7
  3974  0000                     _RA7	set	0x7C07
  3975                           	global	_RB0
  3976  0000                     _RB0	set	0x7C08
  3977                           	global	_RB1
  3978  0000                     _RB1	set	0x7C09
  3979                           	global	_RB2
  3980  0000                     _RB2	set	0x7C0A
  3981                           	global	_RB3
  3982  0000                     _RB3	set	0x7C0B
  3983                           	global	_RB4
  3984  0000                     _RB4	set	0x7C0C
  3985                           	global	_RB5
  3986  0000                     _RB5	set	0x7C0D
  3987                           	global	_RB6
  3988  0000                     _RB6	set	0x7C0E
  3989                           	global	_RB7
  3990  0000                     _RB7	set	0x7C0F
  3991                           	global	_RBIE
  3992  0000                     _RBIE	set	0x7F93
  3993                           	global	_RBIF
  3994  0000                     _RBIF	set	0x7F90
  3995                           	global	_RBIP
  3996  0000                     _RBIP	set	0x7F88
  3997                           	global	_RBPU
  3998  0000                     _RBPU	set	0x7F8F
  3999                           	global	_RC0
  4000  0000                     _RC0	set	0x7C10
  4001                           	global	_RC1
  4002  0000                     _RC1	set	0x7C11
  4003                           	global	_RC1IE
  4004  0000                     _RC1IE	set	0x7CED
  4005                           	global	_RC1IF
  4006  0000                     _RC1IF	set	0x7CF5
  4007                           	global	_RC1IP
  4008  0000                     _RC1IP	set	0x7CFD
  4009                           	global	_RC2
  4010  0000                     _RC2	set	0x7C12
  4011                           	global	_RC3
  4012  0000                     _RC3	set	0x7C13
  4013                           	global	_RC4
  4014  0000                     _RC4	set	0x7C14
  4015                           	global	_RC5
  4016  0000                     _RC5	set	0x7C15
  4017                           	global	_RC6
  4018  0000                     _RC6	set	0x7C16
  4019                           	global	_RC7
  4020  0000                     _RC7	set	0x7C17
  4021                           	global	_RC8_9
  4022  0000                     _RC8_9	set	0x7D5E
  4023                           	global	_RC9
  4024  0000                     _RC9	set	0x7D5E
  4025                           	global	_RCD8
  4026  0000                     _RCD8	set	0x7D58
  4027                           	global	_RCEN
  4028  0000                     _RCEN	set	0x7E2B
  4029                           	global	_RCEN1
  4030  0000                     _RCEN1	set	0x7E2B
  4031                           	global	_RCEN2
  4032  0000                     _RCEN2	set	0x7C2B
  4033                           	global	_RCIDL
  4034  0000                     _RCIDL	set	0x7DC6
  4035                           	global	_RCIE
  4036  0000                     _RCIE	set	0x7CED
  4037                           	global	_RCIF
  4038  0000                     _RCIF	set	0x7CF5
  4039                           	global	_RCIP
  4040  0000                     _RCIP	set	0x7CFD
  4041                           	global	_RCMT
  4042  0000                     _RCMT	set	0x7DC6
  4043                           	global	_RD
  4044  0000                     _RD	set	0x7C20
  4045                           	global	_RD0
  4046  0000                     _RD0	set	0x7C18
  4047                           	global	_RD1
  4048  0000                     _RD1	set	0x7C19
  4049                           	global	_RD16
  4050  0000                     _RD16	set	0x7E6F
  4051                           	global	_RD2
  4052  0000                     _RD2	set	0x7C1A
  4053                           	global	_RD3
  4054  0000                     _RD3	set	0x7C1B
  4055                           	global	_RD4
  4056  0000                     _RD4	set	0x7C1C
  4057                           	global	_RD5
  4058  0000                     _RD5	set	0x7C1D
  4059                           	global	_RD6
  4060  0000                     _RD6	set	0x7C1E
  4061                           	global	_RD7
  4062  0000                     _RD7	set	0x7C1F
  4063                           	global	_RDE
  4064  0000                     _RDE	set	0x7C20
  4065                           	global	_RE0
  4066  0000                     _RE0	set	0x7C20
  4067                           	global	_RE1
  4068  0000                     _RE1	set	0x7C21
  4069                           	global	_RE2
  4070  0000                     _RE2	set	0x7C22
  4071                           	global	_RE3
  4072  0000                     _RE3	set	0x7CB3
  4073                           	global	_RE4
  4074  0000                     _RE4	set	0x7C24
  4075                           	global	_RE5
  4076  0000                     _RE5	set	0x7C25
  4077                           	global	_RE6
  4078  0000                     _RE6	set	0x7C26
  4079                           	global	_RE7
  4080  0000                     _RE7	set	0x7C27
  4081                           	global	_READ_WRITE2
  4082  0000                     _READ_WRITE2	set	0x7C3A
  4083                           	global	_RI
  4084  0000                     _RI	set	0x7E84
  4085                           	global	_RJPU
  4086  0000                     _RJPU	set	0x7C07
  4087                           	global	_RSEN
  4088  0000                     _RSEN	set	0x7E29
  4089                           	global	_RSEN1
  4090  0000                     _RSEN1	set	0x7E29
  4091                           	global	_RSEN2
  4092  0000                     _RSEN2	set	0x7C29
  4093                           	global	_RW
  4094  0000                     _RW	set	0x7E3A
  4095                           	global	_RW1
  4096  0000                     _RW1	set	0x7E3A
  4097                           	global	_RW2
  4098  0000                     _RW2	set	0x7C3A
  4099                           	global	_RX
  4100  0000                     _RX	set	0x7C17
  4101                           	global	_RX9
  4102  0000                     _RX9	set	0x7D5E
  4103                           	global	_RX91
  4104  0000                     _RX91	set	0x7D5E
  4105                           	global	_RX9D
  4106  0000                     _RX9D	set	0x7D58
  4107                           	global	_RX9D1
  4108  0000                     _RX9D1	set	0x7D58
  4109                           	global	_R_W2
  4110  0000                     _R_W2	set	0x7C3A
  4111                           	global	_R_nW2
  4112  0000                     _R_nW2	set	0x7C3A
  4113                           	global	_S2
  4114  0000                     _S2	set	0x7C3B
  4115                           	global	_SCK
  4116  0000                     _SCK	set	0x7C13
  4117                           	global	_SCK1
  4118  0000                     _SCK1	set	0x7C13
  4119                           	global	_SCK2
  4120  0000                     _SCK2	set	0x7C18
  4121                           	global	_SCKP
  4122  0000                     _SCKP	set	0x7DC4
  4123                           	global	_SCL
  4124  0000                     _SCL	set	0x7C13
  4125                           	global	_SCL1
  4126  0000                     _SCL1	set	0x7C13
  4127                           	global	_SCL2
  4128  0000                     _SCL2	set	0x7C18
  4129                           	global	_SCS0
  4130  0000                     _SCS0	set	0x7E98
  4131                           	global	_SCS1
  4132  0000                     _SCS1	set	0x7E99
  4133                           	global	_SDA
  4134  0000                     _SDA	set	0x7C14
  4135                           	global	_SDA1
  4136  0000                     _SDA1	set	0x7C14
  4137                           	global	_SDA2
  4138  0000                     _SDA2	set	0x7C19
  4139                           	global	_SDI
  4140  0000                     _SDI	set	0x7C14
  4141                           	global	_SDI1
  4142  0000                     _SDI1	set	0x7C14
  4143                           	global	_SDI2
  4144  0000                     _SDI2	set	0x7C19
  4145                           	global	_SDO
  4146  0000                     _SDO	set	0x7C15
  4147                           	global	_SDO1
  4148  0000                     _SDO1	set	0x7C15
  4149                           	global	_SDO2
  4150  0000                     _SDO2	set	0x7C1A
  4151                           	global	_SEN
  4152  0000                     _SEN	set	0x7E28
  4153                           	global	_SEN1
  4154  0000                     _SEN1	set	0x7E28
  4155                           	global	_SEN2
  4156  0000                     _SEN2	set	0x7C28
  4157                           	global	_SENDB
  4158  0000                     _SENDB	set	0x7D63
  4159                           	global	_SENDB1
  4160  0000                     _SENDB1	set	0x7D63
  4161                           	global	_SMP
  4162  0000                     _SMP	set	0x7E3F
  4163                           	global	_SMP1
  4164  0000                     _SMP1	set	0x7E3F
  4165                           	global	_SMP2
  4166  0000                     _SMP2	set	0x7C3F
  4167                           	global	_SOSCEN
  4168  0000                     _SOSCEN	set	0x7E6B
  4169                           	global	_SPEN
  4170  0000                     _SPEN	set	0x7D5F
  4171                           	global	_SPEN1
  4172  0000                     _SPEN1	set	0x7D5F
  4173                           	global	_SREN
  4174  0000                     _SREN	set	0x7D5D
  4175                           	global	_SREN1
  4176  0000                     _SREN1	set	0x7D5D
  4177                           	global	_SRENA
  4178  0000                     _SRENA	set	0x7D5D
  4179                           	global	_SS1
  4180  0000                     _SS1	set	0x7C05
  4181                           	global	_SS2
  4182  0000                     _SS2	set	0x7C1B
  4183                           	global	_SSP1IE
  4184  0000                     _SSP1IE	set	0x7CEB
  4185                           	global	_SSP1IF
  4186  0000                     _SSP1IF	set	0x7CF3
  4187                           	global	_SSP1IP
  4188  0000                     _SSP1IP	set	0x7CFB
  4189                           	global	_SSP2IE
  4190  0000                     _SSP2IE	set	0x7D1F
  4191                           	global	_SSP2IF
  4192  0000                     _SSP2IF	set	0x7D27
  4193                           	global	_SSP2IP
  4194  0000                     _SSP2IP	set	0x7D2F
  4195                           	global	_SSPEN
  4196  0000                     _SSPEN	set	0x7E35
  4197                           	global	_SSPEN1
  4198  0000                     _SSPEN1	set	0x7E35
  4199                           	global	_SSPEN2
  4200  0000                     _SSPEN2	set	0x7C35
  4201                           	global	_SSPIE
  4202  0000                     _SSPIE	set	0x7CEB
  4203                           	global	_SSPIF
  4204  0000                     _SSPIF	set	0x7CF3
  4205                           	global	_SSPIP
  4206  0000                     _SSPIP	set	0x7CFB
  4207                           	global	_SSPM0
  4208  0000                     _SSPM0	set	0x7E30
  4209                           	global	_SSPM01
  4210  0000                     _SSPM01	set	0x7E30
  4211                           	global	_SSPM02
  4212  0000                     _SSPM02	set	0x7C30
  4213                           	global	_SSPM1
  4214  0000                     _SSPM1	set	0x7E31
  4215                           	global	_SSPM11
  4216  0000                     _SSPM11	set	0x7E31
  4217                           	global	_SSPM12
  4218  0000                     _SSPM12	set	0x7C31
  4219                           	global	_SSPM2
  4220  0000                     _SSPM2	set	0x7E32
  4221                           	global	_SSPM21
  4222  0000                     _SSPM21	set	0x7E32
  4223                           	global	_SSPM22
  4224  0000                     _SSPM22	set	0x7C32
  4225                           	global	_SSPM3
  4226  0000                     _SSPM3	set	0x7E33
  4227                           	global	_SSPM31
  4228  0000                     _SSPM31	set	0x7E33
  4229                           	global	_SSPM32
  4230  0000                     _SSPM32	set	0x7C33
  4231                           	global	_SSPOV
  4232  0000                     _SSPOV	set	0x7E36
  4233                           	global	_SSPOV1
  4234  0000                     _SSPOV1	set	0x7E36
  4235                           	global	_SSPOV2
  4236  0000                     _SSPOV2	set	0x7C36
  4237                           	global	_START
  4238  0000                     _START	set	0x7E3B
  4239                           	global	_START1
  4240  0000                     _START1	set	0x7E3B
  4241                           	global	_START2
  4242  0000                     _START2	set	0x7C3B
  4243                           	global	_STKFUL
  4244  0000                     _STKFUL	set	0x7FE7
  4245                           	global	_STKOVF
  4246  0000                     _STKOVF	set	0x7FE7
  4247                           	global	_STKPTR0
  4248  0000                     _STKPTR0	set	0x7FE0
  4249                           	global	_STKPTR1
  4250  0000                     _STKPTR1	set	0x7FE1
  4251                           	global	_STKPTR2
  4252  0000                     _STKPTR2	set	0x7FE2
  4253                           	global	_STKPTR3
  4254  0000                     _STKPTR3	set	0x7FE3
  4255                           	global	_STKPTR4
  4256  0000                     _STKPTR4	set	0x7FE4
  4257                           	global	_STKUNF
  4258  0000                     _STKUNF	set	0x7FE6
  4259                           	global	_STOP
  4260  0000                     _STOP	set	0x7E3C
  4261                           	global	_STOP1
  4262  0000                     _STOP1	set	0x7E3C
  4263                           	global	_STOP2
  4264  0000                     _STOP2	set	0x7C3C
  4265                           	global	_SWDTE
  4266  0000                     _SWDTE	set	0x7E88
  4267                           	global	_SWDTEN
  4268  0000                     _SWDTEN	set	0x7E88
  4269                           	global	_SYNC
  4270  0000                     _SYNC	set	0x7D64
  4271                           	global	_SYNC1
  4272  0000                     _SYNC1	set	0x7D64
  4273                           	global	_T08BIT
  4274  0000                     _T08BIT	set	0x7EAE
  4275                           	global	_T0CKI
  4276  0000                     _T0CKI	set	0x7C0D
  4277                           	global	_T0CS
  4278  0000                     _T0CS	set	0x7EAD
  4279                           	global	_T0IE
  4280  0000                     _T0IE	set	0x7F95
  4281                           	global	_T0IF
  4282  0000                     _T0IF	set	0x7F92
  4283                           	global	_T0IP
  4284  0000                     _T0IP	set	0x7F8A
  4285                           	global	_T0PS0
  4286  0000                     _T0PS0	set	0x7EA8
  4287                           	global	_T0PS1
  4288  0000                     _T0PS1	set	0x7EA9
  4289                           	global	_T0PS2
  4290  0000                     _T0PS2	set	0x7EAA
  4291                           	global	_T0SE
  4292  0000                     _T0SE	set	0x7EAC
  4293                           	global	_T1CKI
  4294  0000                     _T1CKI	set	0x7C10
  4295                           	global	_T1CKPS0
  4296  0000                     _T1CKPS0	set	0x7E6C
  4297                           	global	_T1CKPS1
  4298  0000                     _T1CKPS1	set	0x7E6D
  4299                           	global	_T1INSYNC
  4300  0000                     _T1INSYNC	set	0x7E6A
  4301                           	global	_T1OSCEN
  4302  0000                     _T1OSCEN	set	0x7E6B
  4303                           	global	_T1OSI
  4304  0000                     _T1OSI	set	0x7C11
  4305                           	global	_T1OSO
  4306  0000                     _T1OSO	set	0x7C10
  4307                           	global	_T1RD16
  4308  0000                     _T1RD16	set	0x7E6F
  4309                           	global	_T1RUN
  4310  0000                     _T1RUN	set	0x7E6E
  4311                           	global	_T1SYNC
  4312  0000                     _T1SYNC	set	0x7E6A
  4313                           	global	_T2CKPS0
  4314  0000                     _T2CKPS0	set	0x7E50
  4315                           	global	_T2CKPS1
  4316  0000                     _T2CKPS1	set	0x7E51
  4317                           	global	_T2OUTPS0
  4318  0000                     _T2OUTPS0	set	0x7E53
  4319                           	global	_T2OUTPS1
  4320  0000                     _T2OUTPS1	set	0x7E54
  4321                           	global	_T2OUTPS2
  4322  0000                     _T2OUTPS2	set	0x7E55
  4323                           	global	_T2OUTPS3
  4324  0000                     _T2OUTPS3	set	0x7E56
  4325                           	global	_TMR0IE
  4326  0000                     _TMR0IE	set	0x7F95
  4327                           	global	_TMR0IF
  4328  0000                     _TMR0IF	set	0x7F92
  4329                           	global	_TMR0IP
  4330  0000                     _TMR0IP	set	0x7F8A
  4331                           	global	_TMR0ON
  4332  0000                     _TMR0ON	set	0x7EAF
  4333                           	global	_TMR1CS
  4334  0000                     _TMR1CS	set	0x7E69
  4335                           	global	_TMR1IE
  4336  0000                     _TMR1IE	set	0x7CE8
  4337                           	global	_TMR1IF
  4338  0000                     _TMR1IF	set	0x7CF0
  4339                           	global	_TMR1IP
  4340  0000                     _TMR1IP	set	0x7CF8
  4341                           	global	_TMR1ON
  4342  0000                     _TMR1ON	set	0x7E68
  4343                           	global	_TMR2IE
  4344  0000                     _TMR2IE	set	0x7CE9
  4345                           	global	_TMR2IF
  4346  0000                     _TMR2IF	set	0x7CF1
  4347                           	global	_TMR2IP
  4348  0000                     _TMR2IP	set	0x7CF9
  4349                           	global	_TMR2ON
  4350  0000                     _TMR2ON	set	0x7E52
  4351                           	global	_TO
  4352  0000                     _TO	set	0x7E83
  4353                           	global	_TOUTPS0
  4354  0000                     _TOUTPS0	set	0x7E53
  4355                           	global	_TOUTPS1
  4356  0000                     _TOUTPS1	set	0x7E54
  4357                           	global	_TOUTPS2
  4358  0000                     _TOUTPS2	set	0x7E55
  4359                           	global	_TOUTPS3
  4360  0000                     _TOUTPS3	set	0x7E56
  4361                           	global	_TRISA0
  4362  0000                     _TRISA0	set	0x7C90
  4363                           	global	_TRISA1
  4364  0000                     _TRISA1	set	0x7C91
  4365                           	global	_TRISA2
  4366  0000                     _TRISA2	set	0x7C92
  4367                           	global	_TRISA3
  4368  0000                     _TRISA3	set	0x7C93
  4369                           	global	_TRISA5
  4370  0000                     _TRISA5	set	0x7C95
  4371                           	global	_TRISB0
  4372  0000                     _TRISB0	set	0x7C98
  4373                           	global	_TRISB1
  4374  0000                     _TRISB1	set	0x7C99
  4375                           	global	_TRISB2
  4376  0000                     _TRISB2	set	0x7C9A
  4377                           	global	_TRISB3
  4378  0000                     _TRISB3	set	0x7C9B
  4379                           	global	_TRISB4
  4380  0000                     _TRISB4	set	0x7C9C
  4381                           	global	_TRISB5
  4382  0000                     _TRISB5	set	0x7C9D
  4383                           	global	_TRISB6
  4384  0000                     _TRISB6	set	0x7C9E
  4385                           	global	_TRISB7
  4386  0000                     _TRISB7	set	0x7C9F
  4387                           	global	_TRISC0
  4388  0000                     _TRISC0	set	0x7CA0
  4389                           	global	_TRISC1
  4390  0000                     _TRISC1	set	0x7CA1
  4391                           	global	_TRISC2
  4392  0000                     _TRISC2	set	0x7CA2
  4393                           	global	_TRISC3
  4394  0000                     _TRISC3	set	0x7CA3
  4395                           	global	_TRISC4
  4396  0000                     _TRISC4	set	0x7CA4
  4397                           	global	_TRISC5
  4398  0000                     _TRISC5	set	0x7CA5
  4399                           	global	_TRISC6
  4400  0000                     _TRISC6	set	0x7CA6
  4401                           	global	_TRISC7
  4402  0000                     _TRISC7	set	0x7CA7
  4403                           	global	_TRISD0
  4404  0000                     _TRISD0	set	0x7CA8
  4405                           	global	_TRISD1
  4406  0000                     _TRISD1	set	0x7CA9
  4407                           	global	_TRISD2
  4408  0000                     _TRISD2	set	0x7CAA
  4409                           	global	_TRISD3
  4410  0000                     _TRISD3	set	0x7CAB
  4411                           	global	_TRISD4
  4412  0000                     _TRISD4	set	0x7CAC
  4413                           	global	_TRISD5
  4414  0000                     _TRISD5	set	0x7CAD
  4415                           	global	_TRISD6
  4416  0000                     _TRISD6	set	0x7CAE
  4417                           	global	_TRISD7
  4418  0000                     _TRISD7	set	0x7CAF
  4419                           	global	_TRISE0
  4420  0000                     _TRISE0	set	0x7CB0
  4421                           	global	_TRISE1
  4422  0000                     _TRISE1	set	0x7CB1
  4423                           	global	_TRISE2
  4424  0000                     _TRISE2	set	0x7CB2
  4425                           	global	_TRMT
  4426  0000                     _TRMT	set	0x7D61
  4427                           	global	_TRMT1
  4428  0000                     _TRMT1	set	0x7D61
  4429                           	global	_TX
  4430  0000                     _TX	set	0x7C16
  4431                           	global	_TX1IE
  4432  0000                     _TX1IE	set	0x7CEC
  4433                           	global	_TX1IF
  4434  0000                     _TX1IF	set	0x7CF4
  4435                           	global	_TX1IP
  4436  0000                     _TX1IP	set	0x7CFC
  4437                           	global	_TX8_9
  4438  0000                     _TX8_9	set	0x7D66
  4439                           	global	_TX9
  4440  0000                     _TX9	set	0x7D66
  4441                           	global	_TX91
  4442  0000                     _TX91	set	0x7D66
  4443                           	global	_TX9D
  4444  0000                     _TX9D	set	0x7D60
  4445                           	global	_TX9D1
  4446  0000                     _TX9D1	set	0x7D60
  4447                           	global	_TXD8
  4448  0000                     _TXD8	set	0x7D60
  4449                           	global	_TXEN
  4450  0000                     _TXEN	set	0x7D65
  4451                           	global	_TXEN1
  4452  0000                     _TXEN1	set	0x7D65
  4453                           	global	_TXIE
  4454  0000                     _TXIE	set	0x7CEC
  4455                           	global	_TXIF
  4456  0000                     _TXIF	set	0x7CF4
  4457                           	global	_TXIP
  4458  0000                     _TXIP	set	0x7CFC
  4459                           	global	_UA
  4460  0000                     _UA	set	0x7E39
  4461                           	global	_UA1
  4462  0000                     _UA1	set	0x7E39
  4463                           	global	_UA2
  4464  0000                     _UA2	set	0x7C39
  4465                           	global	_ULPWUIN
  4466  0000                     _ULPWUIN	set	0x7C00
  4467                           	global	_VCFG0
  4468  0000                     _VCFG0	set	0x7E0C
  4469                           	global	_VCFG01
  4470  0000                     _VCFG01	set	0x7E0C
  4471                           	global	_VCFG1
  4472  0000                     _VCFG1	set	0x7E0D
  4473                           	global	_VCFG11
  4474  0000                     _VCFG11	set	0x7E0D
  4475                           	global	_VREFM
  4476  0000                     _VREFM	set	0x7C02
  4477                           	global	_VREFP
  4478  0000                     _VREFP	set	0x7C03
  4479                           	global	_W4E
  4480  0000                     _W4E	set	0x7DC1
  4481                           	global	_WCOL
  4482  0000                     _WCOL	set	0x7E37
  4483                           	global	_WCOL1
  4484  0000                     _WCOL1	set	0x7E37
  4485                           	global	_WCOL2
  4486  0000                     _WCOL2	set	0x7C37
  4487                           	global	_WR
  4488  0000                     _WR	set	0x7D31
  4489                           	global	_WRE
  4490  0000                     _WRE	set	0x7C21
  4491                           	global	_WREN
  4492  0000                     _WREN	set	0x7D32
  4493                           	global	_WRERR
  4494  0000                     _WRERR	set	0x7D33
  4495                           	global	_WUE
  4496  0000                     _WUE	set	0x7DC1
  4497                           	global	_ZERO
  4498  0000                     _ZERO	set	0x7EC2
  4499                           	global	_nA2
  4500  0000                     _nA2	set	0x7C3D
  4501                           	global	_nADDRESS2
  4502  0000                     _nADDRESS2	set	0x7C3D
  4503                           	global	_nBOR
  4504  0000                     _nBOR	set	0x7E80
  4505                           	global	_nCS
  4506  0000                     _nCS	set	0x7C22
  4507                           	global	_nDONE
  4508  0000                     _nDONE	set	0x7E11
  4509                           	global	_nPD
  4510  0000                     _nPD	set	0x7E82
  4511                           	global	_nPOR
  4512  0000                     _nPOR	set	0x7E81
  4513                           	global	_nRBPU
  4514  0000                     _nRBPU	set	0x7F8F
  4515                           	global	_nRC8
  4516  0000                     _nRC8	set	0x7D5E
  4517                           	global	_nRD
  4518  0000                     _nRD	set	0x7C20
  4519                           	global	_nRI
  4520  0000                     _nRI	set	0x7E84
  4521                           	global	_nSS1
  4522  0000                     _nSS1	set	0x7C05
  4523                           	global	_nSS2
  4524  0000                     _nSS2	set	0x7C1B
  4525                           	global	_nT1SYNC
  4526  0000                     _nT1SYNC	set	0x7E6A
  4527                           	global	_nTO
  4528  0000                     _nTO	set	0x7E83
  4529                           	global	_nTX8
  4530  0000                     _nTX8	set	0x7D66
  4531                           	global	_nW2
  4532  0000                     _nW2	set	0x7C3A
  4533                           	global	_nWR
  4534  0000                     _nWR	set	0x7C21
  4535                           	global	_nWRITE2
  4536  0000                     _nWRITE2	set	0x7C3A
  4537                           	global	_ic_ptr
  4538                           psect	nvCOMRAM,class=COMRAM,space=1
  4539                           global __pnvCOMRAM
  4540  000048                     __pnvCOMRAM:
  4541  000048                     _ic_ptr:
  4542  000048                            ds      2
  4543                           	global	_uc_ptr
  4544  00004A                     _uc_ptr:
  4545  00004A                            ds      2
  4546                           ; #config settings
  4547                           global __CFG_WDTEN$OFF
  4548  0000                     __CFG_WDTEN$OFF equ 0x0
  4549                           global __CFG_STVREN$OFF
  4550  0000                     __CFG_STVREN$OFF equ 0x0
  4551                           global __CFG_XINST$OFF
  4552  0000                     __CFG_XINST$OFF equ 0x0
  4553                           global __CFG_CP0$OFF
  4554  0000                     __CFG_CP0$OFF equ 0x0
  4555                           global __CFG_IESO$ON
  4556  0000                     __CFG_IESO$ON equ 0x0
  4557                           global __CFG_FOSC2$ON
  4558  0000                     __CFG_FOSC2$ON equ 0x0
  4559                           global __CFG_FOSC$HSPLL
  4560  0000                     __CFG_FOSC$HSPLL equ 0x0
  4561                           global __CFG_FCMEN$ON
  4562  0000                     __CFG_FCMEN$ON equ 0x0
  4563                           global __CFG_WDTPS$32768
  4564  0000                     __CFG_WDTPS$32768 equ 0x0
  4565                           global __CFG_CCP2MX$DEFAULT
  4566  0000                     __CFG_CCP2MX$DEFAULT equ 0x0
  4567                           	file	"/tmp/cgtt9NCIs"
  4568                           	line	#
  4569                           psect	cinit,class=CODE,delta=1,reloc=2
  4570                           global __pcinit
  4571  001ABC                     __pcinit:
  4572                           global start_initialization
  4573  001ABC                     start_initialization:
  4574                           
  4575                           global __initialization
  4576  001ABC                     __initialization:
  4577                           psect	bssCOMRAM,class=COMRAM,space=1
  4578                           global __pbssCOMRAM
  4579  000042                     __pbssCOMRAM:
  4580                           	global	_errno
  4581                           	global	_errno
  4582  000042                     _errno:
  4583  000042                            ds      2
  4584                           	global	_CapStatus
  4585                           	global	_CapStatus
  4586  000044                     _CapStatus:
  4587  000044                            ds      1
  4588  000045                     _MQ_Main_Willing_to_block:
  4589  000045                            ds      1
  4590                           	global	_USART_Status
  4591  000046                     _USART_Status:
  4592  000046                            ds      1
  4593  000047                     _adcMsgCount:
  4594  000047                            ds      1
  4595                           psect	bssBANK0,class=BANK0,space=1
  4596                           global __pbssBANK0
  4597  0000C6                     __pbssBANK0:
  4598  0000C6                     _emptyMsgCount:
  4599  0000C6                            ds      1
  4600                           psect	bssBANK1,class=BANK1,space=1
  4601                           global __pbssBANK1
  4602  000100                     __pbssBANK1:
  4603  000100                     _FromMainLow_MQ:
  4604  000100                            ds      54
  4605  000136                     _ToMainHigh_MQ:
  4606  000136                            ds      54
  4607  00016C                     _ToMainLow_MQ:
  4608  00016C                            ds      54
  4609                           psect	bssBANK2,class=BANK2,space=1
  4610                           global __pbssBANK2
  4611  000200                     __pbssBANK2:
  4612  000200                     _FromMainHigh_MQ:
  4613  000200                            ds      54
  4614                           psect	cinit
  4615                           ; Clear objects allocated to BANK2 (54 bytes)
  4616                           	global __pbssBANK2
  4617  001ABC  EE02  F000         lfsr	0,__pbssBANK2
  4618  001AC0  0E36               movlw	54
  4619  001AC2                     clear_0:
  4620  001AC2  6AEE               clrf	postinc0,c
  4621  001AC4  06E8               decf	wreg
  4622  001AC6  E1FD               bnz	clear_0
  4623                           ; Clear objects allocated to BANK1 (162 bytes)
  4624                           	global __pbssBANK1
  4625  001AC8  EE01  F000         lfsr	0,__pbssBANK1
  4626  001ACC  0EA2               movlw	162
  4627  001ACE                     clear_1:
  4628  001ACE  6AEE               clrf	postinc0,c
  4629  001AD0  06E8               decf	wreg
  4630  001AD2  E1FD               bnz	clear_1
  4631                           ; Clear objects allocated to BANK0 (1 bytes)
  4632                           	global __pbssBANK0
  4633  001AD4  0100               movlb	0
  4634  001AD6  6BC6               clrf	(__pbssBANK0+0)&0xffh,b
  4635                           ; Clear objects allocated to COMRAM (6 bytes)
  4636                           	global __pbssCOMRAM
  4637  001AD8  6A47               clrf	(__pbssCOMRAM+5)&0xffh,c
  4638  001ADA  6A46               clrf	(__pbssCOMRAM+4)&0xffh,c
  4639  001ADC  6A45               clrf	(__pbssCOMRAM+3)&0xffh,c
  4640  001ADE  6A44               clrf	(__pbssCOMRAM+2)&0xffh,c
  4641  001AE0  6A43               clrf	(__pbssCOMRAM+1)&0xffh,c
  4642  001AE2  6A42               clrf	(__pbssCOMRAM+0)&0xffh,c
  4643                           psect cinit,class=CODE,delta=1
  4644                           global end_of_initialization,__end_of__initialization
  4645                           
  4646                           ;End of C runtime variable initialization code
  4647                           
  4648  001AE4                     end_of_initialization:
  4649  001AE4                     __end_of__initialization:movlb 0
  4650  001AE6  EF85  F003         goto _main	;jump to C main() function
  4651                           psect	cstackBANK1,class=BANK1,space=1
  4652                           global __pcstackBANK1
  4653  0001A2                     __pcstackBANK1:
  4654                           	global	?_send_msg
  4655  0001A2                     ?_send_msg:	; 1 bytes @ 0x0
  4656                           	global	?_recv_msg
  4657  0001A2                     ?_recv_msg:	; 1 bytes @ 0x0
  4658                           	global	send_msg@qptr
  4659  0001A2                     send_msg@qptr:	; 2 bytes @ 0x0
  4660                           	global	recv_msg@qptr
  4661  0001A2                     recv_msg@qptr:	; 2 bytes @ 0x0
  4662  0001A2                     	ds   2
  4663                           	global	send_msg@length
  4664  0001A4                     send_msg@length:	; 1 bytes @ 0x2
  4665                           	global	recv_msg@maxlength
  4666  0001A4                     recv_msg@maxlength:	; 1 bytes @ 0x2
  4667  0001A4                     	ds   1
  4668                           	global	send_msg@msgtype
  4669  0001A5                     send_msg@msgtype:	; 1 bytes @ 0x3
  4670                           	global	recv_msg@msgtype
  4671  0001A5                     recv_msg@msgtype:	; 2 bytes @ 0x3
  4672  0001A5                     	ds   1
  4673                           	global	send_msg@data
  4674  0001A6                     send_msg@data:	; 2 bytes @ 0x4
  4675  0001A6                     	ds   1
  4676                           	global	recv_msg@data
  4677  0001A7                     recv_msg@data:	; 2 bytes @ 0x5
  4678  0001A7                     	ds   1
  4679                           	global	send_msg@tlength
  4680  0001A8                     send_msg@tlength:	; 2 bytes @ 0x6
  4681  0001A8                     	ds   1
  4682                           	global	recv_msg@slot
  4683  0001A9                     recv_msg@slot:	; 1 bytes @ 0x7
  4684  0001A9                     	ds   1
  4685                           	global	send_msg@slot
  4686  0001AA                     send_msg@slot:	; 1 bytes @ 0x8
  4687                           	global	recv_msg@tlength
  4688  0001AA                     recv_msg@tlength:	; 2 bytes @ 0x8
  4689  0001AA                     	ds   1
  4690                           	global	send_msg@qmsg
  4691  0001AB                     send_msg@qmsg:	; 2 bytes @ 0x9
  4692  0001AB                     	ds   1
  4693                           	global	recv_msg@qmsg
  4694  0001AC                     recv_msg@qmsg:	; 2 bytes @ 0xA
  4695  0001AC                     	ds   1
  4696                           	global	?_FromMainLow_sendmsg
  4697  0001AD                     ?_FromMainLow_sendmsg:	; 1 bytes @ 0xB
  4698                           	global	FromMainLow_sendmsg@length
  4699  0001AD                     FromMainLow_sendmsg@length:	; 1 bytes @ 0xB
  4700  0001AD                     	ds   1
  4701                           	global	?_ToMainHigh_recvmsg
  4702  0001AE                     ?_ToMainHigh_recvmsg:	; 1 bytes @ 0xC
  4703                           	global	?_ToMainLow_recvmsg
  4704  0001AE                     ?_ToMainLow_recvmsg:	; 1 bytes @ 0xC
  4705                           	global	ToMainLow_recvmsg@maxlength
  4706  0001AE                     ToMainLow_recvmsg@maxlength:	; 1 bytes @ 0xC
  4707                           	global	ToMainHigh_recvmsg@maxlength
  4708  0001AE                     ToMainHigh_recvmsg@maxlength:	; 1 bytes @ 0xC
  4709                           	global	FromMainLow_sendmsg@msgtype
  4710  0001AE                     FromMainLow_sendmsg@msgtype:	; 1 bytes @ 0xC
  4711  0001AE                     	ds   1
  4712                           	global	ToMainLow_recvmsg@msgtype
  4713  0001AF                     ToMainLow_recvmsg@msgtype:	; 2 bytes @ 0xD
  4714                           	global	ToMainHigh_recvmsg@msgtype
  4715  0001AF                     ToMainHigh_recvmsg@msgtype:	; 2 bytes @ 0xD
  4716                           	global	FromMainLow_sendmsg@data
  4717  0001AF                     FromMainLow_sendmsg@data:	; 2 bytes @ 0xD
  4718  0001AF                     	ds   2
  4719                           	global	ToMainLow_recvmsg@data
  4720  0001B1                     ToMainLow_recvmsg@data:	; 2 bytes @ 0xF
  4721                           	global	ToMainHigh_recvmsg@data
  4722  0001B1                     ToMainHigh_recvmsg@data:	; 2 bytes @ 0xF
  4723  0001B1                     	ds   2
  4724                           	global	main@msgbuffer
  4725  0001B3                     main@msgbuffer:	; 11 bytes @ 0x11
  4726  0001B3                     	ds   11
  4727                           	global	main@uthread_data
  4728  0001BE                     main@uthread_data:	; 2 bytes @ 0x1C
  4729  0001BE                     	ds   2
  4730                           	global	main@t0thread_data
  4731  0001C0                     main@t0thread_data:	; 2 bytes @ 0x1E
  4732  0001C0                     	ds   2
  4733                           	global	main@last_reg_recvd
  4734  0001C2                     main@last_reg_recvd:	; 1 bytes @ 0x20
  4735  0001C2                     	ds   1
  4736                           	global	main@t1thread_data
  4737  0001C3                     main@t1thread_data:	; 2 bytes @ 0x21
  4738  0001C3                     	ds   2
  4739                           	global	main@uc
  4740  0001C5                     main@uc:	; 5 bytes @ 0x23
  4741  0001C5                     	ds   5
  4742                           	global	main@length
  4743  0001CA                     main@length:	; 1 bytes @ 0x28
  4744  0001CA                     	ds   1
  4745                           	global	main@msgtype
  4746  0001CB                     main@msgtype:	; 1 bytes @ 0x29
  4747  0001CB                     	ds   1
  4748                           	global	main@ic
  4749  0001CC                     main@ic:	; 28 bytes @ 0x2A
  4750  0001CC                     	ds   28
  4751                           psect	cstackBANK0,class=BANK0,space=1
  4752                           global __pcstackBANK0
  4753  000080                     __pcstackBANK0:
  4754                           	global	?i2_send_msg
  4755  000080                     ?i2_send_msg:	; 1 bytes @ 0x0
  4756                           	global	?i2_recv_msg
  4757  000080                     ?i2_recv_msg:	; 1 bytes @ 0x0
  4758                           	global	i2send_msg@qptr
  4759  000080                     i2send_msg@qptr:	; 2 bytes @ 0x0
  4760                           	global	i2recv_msg@qptr
  4761  000080                     i2recv_msg@qptr:	; 2 bytes @ 0x0
  4762  000080                     	ds   2
  4763                           	global	i2send_msg@length
  4764  000082                     i2send_msg@length:	; 1 bytes @ 0x2
  4765                           	global	i2recv_msg@maxlength
  4766  000082                     i2recv_msg@maxlength:	; 1 bytes @ 0x2
  4767  000082                     	ds   1
  4768                           	global	i2send_msg@msgtype
  4769  000083                     i2send_msg@msgtype:	; 1 bytes @ 0x3
  4770                           	global	i2recv_msg@msgtype
  4771  000083                     i2recv_msg@msgtype:	; 2 bytes @ 0x3
  4772  000083                     	ds   1
  4773                           	global	i2send_msg@data
  4774  000084                     i2send_msg@data:	; 2 bytes @ 0x4
  4775  000084                     	ds   1
  4776                           	global	i2recv_msg@data
  4777  000085                     i2recv_msg@data:	; 2 bytes @ 0x5
  4778  000085                     	ds   1
  4779                           	global	i2send_msg@tlength
  4780  000086                     i2send_msg@tlength:	; 2 bytes @ 0x6
  4781  000086                     	ds   1
  4782                           	global	i2recv_msg@slot
  4783  000087                     i2recv_msg@slot:	; 1 bytes @ 0x7
  4784  000087                     	ds   1
  4785                           	global	i2send_msg@slot
  4786  000088                     i2send_msg@slot:	; 1 bytes @ 0x8
  4787                           	global	i2recv_msg@tlength
  4788  000088                     i2recv_msg@tlength:	; 2 bytes @ 0x8
  4789  000088                     	ds   1
  4790                           	global	i2send_msg@qmsg
  4791  000089                     i2send_msg@qmsg:	; 2 bytes @ 0x9
  4792  000089                     	ds   1
  4793                           	global	i2recv_msg@qmsg
  4794  00008A                     i2recv_msg@qmsg:	; 2 bytes @ 0xA
  4795  00008A                     	ds   1
  4796                           	global	?_ToMainHigh_sendmsg
  4797  00008B                     ?_ToMainHigh_sendmsg:	; 1 bytes @ 0xB
  4798                           	global	ToMainHigh_sendmsg@length
  4799  00008B                     ToMainHigh_sendmsg@length:	; 1 bytes @ 0xB
  4800  00008B                     	ds   1
  4801                           	global	?_FromMainLow_recvmsg
  4802  00008C                     ?_FromMainLow_recvmsg:	; 1 bytes @ 0xC
  4803                           	global	?_FromMainHigh_recvmsg
  4804  00008C                     ?_FromMainHigh_recvmsg:	; 1 bytes @ 0xC
  4805                           	global	ToMainHigh_sendmsg@msgtype
  4806  00008C                     ToMainHigh_sendmsg@msgtype:	; 1 bytes @ 0xC
  4807                           	global	FromMainLow_recvmsg@maxlength
  4808  00008C                     FromMainLow_recvmsg@maxlength:	; 1 bytes @ 0xC
  4809                           	global	FromMainHigh_recvmsg@maxlength
  4810  00008C                     FromMainHigh_recvmsg@maxlength:	; 1 bytes @ 0xC
  4811  00008C                     	ds   1
  4812                           	global	ToMainHigh_sendmsg@data
  4813  00008D                     ToMainHigh_sendmsg@data:	; 2 bytes @ 0xD
  4814                           	global	FromMainLow_recvmsg@msgtype
  4815  00008D                     FromMainLow_recvmsg@msgtype:	; 2 bytes @ 0xD
  4816                           	global	FromMainHigh_recvmsg@msgtype
  4817  00008D                     FromMainHigh_recvmsg@msgtype:	; 2 bytes @ 0xD
  4818  00008D                     	ds   2
  4819                           	global	FromMainLow_recvmsg@data
  4820  00008F                     FromMainLow_recvmsg@data:	; 2 bytes @ 0xF
  4821                           	global	FromMainHigh_recvmsg@data
  4822  00008F                     FromMainHigh_recvmsg@data:	; 2 bytes @ 0xF
  4823  00008F                     	ds   2
  4824                           	global	timer0_int_handler@msgtype
  4825  000091                     timer0_int_handler@msgtype:	; 2 bytes @ 0x11
  4826                           	global	i2c_int_handler@data
  4827  000091                     i2c_int_handler@data:	; 10 bytes @ 0x11
  4828  000091                     	ds   2
  4829                           	global	timer0_int_handler@length
  4830  000093                     timer0_int_handler@length:	; 2 bytes @ 0x13
  4831  000093                     	ds   2
  4832                           	global	timer0_int_handler@val
  4833  000095                     timer0_int_handler@val:	; 2 bytes @ 0x15
  4834  000095                     	ds   6
  4835                           	global	i2c_int_handler@empty
  4836  00009B                     i2c_int_handler@empty:	; 4 bytes @ 0x1B
  4837  00009B                     	ds   4
  4838                           	global	i2c_int_handler@error_buf
  4839  00009F                     i2c_int_handler@error_buf:	; 3 bytes @ 0x1F
  4840  00009F                     	ds   3
  4841                           	global	i2c_int_handler@data_written
  4842  0000A2                     i2c_int_handler@data_written:	; 1 bytes @ 0x22
  4843  0000A2                     	ds   1
  4844                           	global	i2c_int_handler@overrun_error
  4845  0000A3                     i2c_int_handler@overrun_error:	; 1 bytes @ 0x23
  4846  0000A3                     	ds   1
  4847                           	global	i2c_int_handler@length
  4848  0000A4                     i2c_int_handler@length:	; 2 bytes @ 0x24
  4849  0000A4                     	ds   2
  4850                           	global	i2c_int_handler@i2c_data
  4851  0000A6                     i2c_int_handler@i2c_data:	; 1 bytes @ 0x26
  4852  0000A6                     	ds   1
  4853                           	global	i2c_int_handler@msgtype
  4854  0000A7                     i2c_int_handler@msgtype:	; 1 bytes @ 0x27
  4855  0000A7                     	ds   1
  4856                           	global	i2c_int_handler@msg_to_send
  4857  0000A8                     i2c_int_handler@msg_to_send:	; 1 bytes @ 0x28
  4858  0000A8                     	ds   1
  4859                           	global	i2c_int_handler@msg_ready
  4860  0000A9                     i2c_int_handler@msg_ready:	; 1 bytes @ 0x29
  4861  0000A9                     	ds   1
  4862                           	global	i2c_int_handler@data_read
  4863  0000AA                     i2c_int_handler@data_read:	; 1 bytes @ 0x2A
  4864  0000AA                     	ds   1
  4865  0000AB                     ??_InterruptHandlerHigh:	; 0 bytes @ 0x2B
  4866  0000AB                     	ds   14
  4867                           	global	?_init_uart_recv
  4868  0000B9                     ?_init_uart_recv:	; 0 bytes @ 0x39
  4869                           	global	?_init_i2c
  4870  0000B9                     ?_init_i2c:	; 0 bytes @ 0x39
  4871                           	global	?_OpenTimer1
  4872  0000B9                     ?_OpenTimer1:	; 0 bytes @ 0x39
  4873                           	global	?_i2c_configure_slave
  4874  0000B9                     ?_i2c_configure_slave:	; 0 bytes @ 0x39
  4875                           	global	?_OpenUSART
  4876  0000B9                     ?_OpenUSART:	; 0 bytes @ 0x39
  4877                           	global	?_Delay1KTCYx
  4878  0000B9                     ?_Delay1KTCYx:	; 0 bytes @ 0x39
  4879                           	global	?_OpenADC
  4880  0000B9                     ?_OpenADC:	; 0 bytes @ 0x39
  4881                           	global	?_SetChanADC
  4882  0000B9                     ?_SetChanADC:	; 0 bytes @ 0x39
  4883  0000B9                     ??_ConvertADC:	; 0 bytes @ 0x39
  4884  0000B9                     ??_enable_interrupts:	; 0 bytes @ 0x39
  4885                           	global	?_init_queue
  4886  0000B9                     ?_init_queue:	; 0 bytes @ 0x39
  4887                           	global	?_check_msg
  4888  0000B9                     ?_check_msg:	; 1 bytes @ 0x39
  4889                           	global	?_timer0_lthread
  4890  0000B9                     ?_timer0_lthread:	; 2 bytes @ 0x39
  4891                           	global	?_timer1_lthread
  4892  0000B9                     ?_timer1_lthread:	; 2 bytes @ 0x39
  4893                           	global	?_uart_lthread
  4894  0000B9                     ?_uart_lthread:	; 2 bytes @ 0x39
  4895                           	global	?_memcpy
  4896  0000B9                     ?_memcpy:	; 2 bytes @ 0x39
  4897                           	global	?_in_high_int
  4898  0000B9                     ?_in_high_int:	; 2 bytes @ 0x39
  4899                           	global	i2c_configure_slave@addr
  4900  0000B9                     i2c_configure_slave@addr:	; 1 bytes @ 0x39
  4901                           	global	OpenADC@config
  4902  0000B9                     OpenADC@config:	; 1 bytes @ 0x39
  4903                           	global	SetChanADC@channel
  4904  0000B9                     SetChanADC@channel:	; 1 bytes @ 0x39
  4905                           	global	OpenTimer1@config
  4906  0000B9                     OpenTimer1@config:	; 1 bytes @ 0x39
  4907                           	global	OpenUSART@config
  4908  0000B9                     OpenUSART@config:	; 1 bytes @ 0x39
  4909                           	global	Delay1KTCYx@unit
  4910  0000B9                     Delay1KTCYx@unit:	; 1 bytes @ 0x39
  4911                           	global	init_queue@qptr
  4912  0000B9                     init_queue@qptr:	; 2 bytes @ 0x39
  4913                           	global	check_msg@qptr
  4914  0000B9                     check_msg@qptr:	; 2 bytes @ 0x39
  4915                           	global	init_i2c@ic
  4916  0000B9                     init_i2c@ic:	; 2 bytes @ 0x39
  4917                           	global	init_uart_recv@uc
  4918  0000B9                     init_uart_recv@uc:	; 2 bytes @ 0x39
  4919  0000B9                     timer0_lthread@tptr:	; 2 bytes @ 0x39
  4920                           	global	timer1_lthread@tptr
  4921  0000B9                     timer1_lthread@tptr:	; 2 bytes @ 0x39
  4922  0000B9                     uart_lthread@uptr:	; 2 bytes @ 0x39
  4923                           	global	memcpy@d1
  4924  0000B9                     memcpy@d1:	; 2 bytes @ 0x39
  4925  0000B9                     	ds   1
  4926  0000BA                     ??_OpenTimer1:	; 0 bytes @ 0x3A
  4927  0000BA                     ??_i2c_configure_slave:	; 0 bytes @ 0x3A
  4928  0000BA                     ??_Delay1KTCYx:	; 0 bytes @ 0x3A
  4929  0000BA                     ??_SetChanADC:	; 0 bytes @ 0x3A
  4930                           	global	OpenADC@config2
  4931  0000BA                     OpenADC@config2:	; 1 bytes @ 0x3A
  4932                           	global	OpenUSART@spbrg
  4933  0000BA                     OpenUSART@spbrg:	; 2 bytes @ 0x3A
  4934  0000BA                     	ds   1
  4935  0000BB                     ??_init_uart_recv:	; 0 bytes @ 0x3B
  4936  0000BB                     ??_init_i2c:	; 0 bytes @ 0x3B
  4937  0000BB                     ??_in_high_int:	; 0 bytes @ 0x3B
  4938  0000BB                     ??_init_queue:	; 0 bytes @ 0x3B
  4939  0000BB                     ??_check_msg:	; 0 bytes @ 0x3B
  4940                           	global	?_in_low_int
  4941  0000BB                     ?_in_low_int:	; 2 bytes @ 0x3B
  4942                           	global	OpenADC@portconfig
  4943  0000BB                     OpenADC@portconfig:	; 1 bytes @ 0x3B
  4944  0000BB                     timer0_lthread@msgtype:	; 2 bytes @ 0x3B
  4945  0000BB                     timer1_lthread@msgtype:	; 2 bytes @ 0x3B
  4946                           	global	uart_lthread@msgtype
  4947  0000BB                     uart_lthread@msgtype:	; 2 bytes @ 0x3B
  4948                           	global	memcpy@s1
  4949  0000BB                     memcpy@s1:	; 2 bytes @ 0x3B
  4950  0000BB                     	ds   1
  4951  0000BC                     ??_OpenUSART:	; 0 bytes @ 0x3C
  4952  0000BC                     ??_OpenADC:	; 0 bytes @ 0x3C
  4953                           	global	init_queue@i
  4954  0000BC                     init_queue@i:	; 1 bytes @ 0x3C
  4955  0000BC                     	ds   1
  4956  0000BD                     ??_init_queues:	; 0 bytes @ 0x3D
  4957  0000BD                     ??_in_low_int:	; 0 bytes @ 0x3D
  4958                           	global	?_in_main
  4959  0000BD                     ?_in_main:	; 2 bytes @ 0x3D
  4960  0000BD                     timer0_lthread@length:	; 2 bytes @ 0x3D
  4961  0000BD                     timer1_lthread@length:	; 2 bytes @ 0x3D
  4962                           	global	uart_lthread@length
  4963  0000BD                     uart_lthread@length:	; 2 bytes @ 0x3D
  4964                           	global	memcpy@n
  4965  0000BD                     memcpy@n:	; 2 bytes @ 0x3D
  4966  0000BD                     	ds   1
  4967                           	global	?_init_timer1_lthread
  4968  0000BE                     ?_init_timer1_lthread:	; 0 bytes @ 0x3E
  4969                           	global	init_timer1_lthread@tptr
  4970  0000BE                     init_timer1_lthread@tptr:	; 2 bytes @ 0x3E
  4971  0000BE                     	ds   1
  4972  0000BF                     ??_block_on_To_msgqueues:	; 0 bytes @ 0x3F
  4973  0000BF                     ??_memcpy:	; 0 bytes @ 0x3F
  4974  0000BF                     ??_in_main:	; 0 bytes @ 0x3F
  4975                           	global	timer0_lthread@msgbuffer
  4976  0000BF                     timer0_lthread@msgbuffer:	; 2 bytes @ 0x3F
  4977                           	global	timer1_lthread@msgbuffer
  4978  0000BF                     timer1_lthread@msgbuffer:	; 2 bytes @ 0x3F
  4979                           	global	uart_lthread@msgbuffer
  4980  0000BF                     uart_lthread@msgbuffer:	; 2 bytes @ 0x3F
  4981                           	global	memcpy@d
  4982  0000BF                     memcpy@d:	; 2 bytes @ 0x3F
  4983  0000BF                     	ds   1
  4984  0000C0                     ??_init_timer1_lthread:	; 0 bytes @ 0x40
  4985  0000C0                     	ds   1
  4986  0000C1                     ??_timer0_lthread:	; 0 bytes @ 0x41
  4987  0000C1                     ??_timer1_lthread:	; 0 bytes @ 0x41
  4988  0000C1                     ??_uart_lthread:	; 0 bytes @ 0x41
  4989                           	global	timer0_lthread@msgval
  4990  0000C1                     timer0_lthread@msgval:	; 2 bytes @ 0x41
  4991                           	global	memcpy@s
  4992  0000C1                     memcpy@s:	; 2 bytes @ 0x41
  4993  0000C1                     	ds   2
  4994  0000C3                     ??_send_msg:	; 0 bytes @ 0x43
  4995  0000C3                     ??_recv_msg:	; 0 bytes @ 0x43
  4996  0000C3                     	ds   1
  4997  0000C4                     ??_FromMainLow_sendmsg:	; 0 bytes @ 0x44
  4998  0000C4                     	ds   1
  4999  0000C5                     ??_ToMainHigh_recvmsg:	; 0 bytes @ 0x45
  5000  0000C5                     ??_ToMainLow_recvmsg:	; 0 bytes @ 0x45
  5001  0000C5                     ??_main:	; 0 bytes @ 0x45
  5002  0000C5                     	ds   1
  5003                           psect	cstackCOMRAM,class=COMRAM,space=1
  5004                           global __pcstackCOMRAM
  5005  000001                     __pcstackCOMRAM:
  5006  000001                     ?_i2c_int_handler:	; 0 bytes @ 0x0
  5007  000001                     ?_timer0_int_handler:	; 0 bytes @ 0x0
  5008  000001                     ?_SleepIfOkay:	; 0 bytes @ 0x0
  5009  000001                     ?_timer1_int_handler:	; 0 bytes @ 0x0
  5010  000001                     ?_adc_int_handler:	; 0 bytes @ 0x0
  5011  000001                     ?_uart_recv_int_handler:	; 0 bytes @ 0x0
  5012  000001                     ?_init_queues:	; 0 bytes @ 0x0
  5013  000001                     ?_block_on_To_msgqueues:	; 0 bytes @ 0x0
  5014  000001                     ??_ReadUSART:	; 0 bytes @ 0x0
  5015  000001                     ?_ConvertADC:	; 0 bytes @ 0x0
  5016                           	global	?_WriteTimer1
  5017  000001                     ?_WriteTimer1:	; 0 bytes @ 0x0
  5018  000001                     ?_enable_interrupts:	; 0 bytes @ 0x0
  5019  000001                     ?_InterruptHandlerHigh:	; 0 bytes @ 0x0
  5020  000001                     ?_InterruptHandlerLow:	; 0 bytes @ 0x0
  5021  000001                     ?_main:	; 0 bytes @ 0x0
  5022  000001                     ?_enter_sleep_mode:	; 0 bytes @ 0x0
  5023  000001                     ?_ReadUSART:	; 1 bytes @ 0x0
  5024                           	global	?_ReadTimer1
  5025  000001                     ?_ReadTimer1:	; 2 bytes @ 0x0
  5026                           	global	?_ReadADC
  5027  000001                     ?_ReadADC:	; 2 bytes @ 0x0
  5028                           	global	?i1_memcpy
  5029  000001                     ?i1_memcpy:	; 2 bytes @ 0x0
  5030                           	global	ReadUSART@data
  5031  000001                     ReadUSART@data:	; 1 bytes @ 0x0
  5032                           	global	WriteTimer1@timer1
  5033  000001                     WriteTimer1@timer1:	; 2 bytes @ 0x0
  5034                           	global	i1memcpy@d1
  5035  000001                     i1memcpy@d1:	; 2 bytes @ 0x0
  5036  000001                     	ds   2
  5037  000003                     ??_ReadTimer1:	; 0 bytes @ 0x2
  5038  000003                     ??_WriteTimer1:	; 0 bytes @ 0x2
  5039  000003                     ??_ReadADC:	; 0 bytes @ 0x2
  5040                           	global	ReadTimer1@timer
  5041  000003                     ReadTimer1@timer:	; 2 bytes @ 0x2
  5042                           	global	WriteTimer1@timer
  5043  000003                     WriteTimer1@timer:	; 2 bytes @ 0x2
  5044                           	global	i1memcpy@s1
  5045  000003                     i1memcpy@s1:	; 2 bytes @ 0x2
  5046  000003                     	ds   2
  5047                           	global	i1memcpy@n
  5048  000005                     i1memcpy@n:	; 2 bytes @ 0x4
  5049  000005                     	ds   2
  5050  000007                     ??i1_memcpy:	; 0 bytes @ 0x6
  5051                           	global	i1memcpy@d
  5052  000007                     i1memcpy@d:	; 2 bytes @ 0x6
  5053  000007                     	ds   2
  5054                           	global	i1memcpy@s
  5055  000009                     i1memcpy@s:	; 2 bytes @ 0x8
  5056  000009                     	ds   2
  5057                           	global	?i1_send_msg
  5058  00000B                     ?i1_send_msg:	; 1 bytes @ 0xA
  5059                           	global	i1send_msg@qptr
  5060  00000B                     i1send_msg@qptr:	; 2 bytes @ 0xA
  5061  00000B                     	ds   2
  5062                           	global	i1send_msg@length
  5063  00000D                     i1send_msg@length:	; 1 bytes @ 0xC
  5064  00000D                     	ds   1
  5065                           	global	i1send_msg@msgtype
  5066  00000E                     i1send_msg@msgtype:	; 1 bytes @ 0xD
  5067  00000E                     	ds   1
  5068                           	global	i1send_msg@data
  5069  00000F                     i1send_msg@data:	; 2 bytes @ 0xE
  5070  00000F                     	ds   2
  5071  000011                     ??i1_send_msg:	; 0 bytes @ 0x10
  5072  000011                     	ds   1
  5073                           	global	i1send_msg@tlength
  5074  000012                     i1send_msg@tlength:	; 2 bytes @ 0x11
  5075  000012                     	ds   2
  5076                           	global	i1send_msg@slot
  5077  000014                     i1send_msg@slot:	; 1 bytes @ 0x13
  5078  000014                     	ds   1
  5079                           	global	i1send_msg@qmsg
  5080  000015                     i1send_msg@qmsg:	; 2 bytes @ 0x14
  5081  000015                     	ds   2
  5082                           	global	?_ToMainLow_sendmsg
  5083  000017                     ?_ToMainLow_sendmsg:	; 1 bytes @ 0x16
  5084                           	global	ToMainLow_sendmsg@length
  5085  000017                     ToMainLow_sendmsg@length:	; 1 bytes @ 0x16
  5086  000017                     	ds   1
  5087                           	global	ToMainLow_sendmsg@msgtype
  5088  000018                     ToMainLow_sendmsg@msgtype:	; 1 bytes @ 0x17
  5089  000018                     	ds   1
  5090                           	global	ToMainLow_sendmsg@data
  5091  000019                     ToMainLow_sendmsg@data:	; 2 bytes @ 0x18
  5092  000019                     	ds   2
  5093  00001B                     ??_timer1_int_handler:	; 0 bytes @ 0x1A
  5094  00001B                     ??_adc_int_handler:	; 0 bytes @ 0x1A
  5095  00001B                     ??_uart_recv_int_handler:	; 0 bytes @ 0x1A
  5096  00001B                     ??_ToMainLow_sendmsg:	; 0 bytes @ 0x1A
  5097  00001B                     	ds   2
  5098                           	global	timer1_int_handler@temp
  5099  00001D                     timer1_int_handler@temp:	; 2 bytes @ 0x1C
  5100                           	global	adc_int_handler@message
  5101  00001D                     adc_int_handler@message:	; 4 bytes @ 0x1C
  5102  00001D                     	ds   2
  5103                           	global	timer1_int_handler@result
  5104  00001F                     timer1_int_handler@result:	; 2 bytes @ 0x1E
  5105  00001F                     	ds   2
  5106                           	global	adc_int_handler@value
  5107  000021                     adc_int_handler@value:	; 2 bytes @ 0x20
  5108  000021                     	ds   2
  5109  000023                     ??_InterruptHandlerLow:	; 0 bytes @ 0x22
  5110  000023                     	ds   17
  5111                           	global	?_WriteTimer0
  5112  000034                     ?_WriteTimer0:	; 0 bytes @ 0x33
  5113  000034                     ??_enter_sleep_mode:	; 0 bytes @ 0x33
  5114                           	global	?_start_i2c_slave_reply
  5115  000034                     ?_start_i2c_slave_reply:	; 0 bytes @ 0x33
  5116                           	global	?_handle_start
  5117  000034                     ?_handle_start:	; 0 bytes @ 0x33
  5118                           	global	?i2_check_msg
  5119  000034                     ?i2_check_msg:	; 1 bytes @ 0x33
  5120                           	global	?i2_in_high_int
  5121  000034                     ?i2_in_high_int:	; 2 bytes @ 0x33
  5122                           	global	?i2_memcpy
  5123  000034                     ?i2_memcpy:	; 2 bytes @ 0x33
  5124                           	global	start_i2c_slave_reply@length
  5125  000034                     start_i2c_slave_reply@length:	; 1 bytes @ 0x33
  5126                           	global	handle_start@data_read
  5127  000034                     handle_start@data_read:	; 1 bytes @ 0x33
  5128                           	global	WriteTimer0@timer0
  5129  000034                     WriteTimer0@timer0:	; 2 bytes @ 0x33
  5130                           	global	i2check_msg@qptr
  5131  000034                     i2check_msg@qptr:	; 2 bytes @ 0x33
  5132                           	global	i2memcpy@d1
  5133  000034                     i2memcpy@d1:	; 2 bytes @ 0x33
  5134  000034                     	ds   1
  5135  000035                     ??_handle_start:	; 0 bytes @ 0x34
  5136                           	global	start_i2c_slave_reply@msg
  5137  000035                     start_i2c_slave_reply@msg:	; 2 bytes @ 0x34
  5138  000035                     	ds   1
  5139  000036                     ??_WriteTimer0:	; 0 bytes @ 0x35
  5140  000036                     ??i2_in_high_int:	; 0 bytes @ 0x35
  5141  000036                     ??i2_check_msg:	; 0 bytes @ 0x35
  5142                           	global	?i2_in_low_int
  5143  000036                     ?i2_in_low_int:	; 2 bytes @ 0x35
  5144                           	global	WriteTimer0@timer
  5145  000036                     WriteTimer0@timer:	; 2 bytes @ 0x35
  5146                           	global	i2memcpy@s1
  5147  000036                     i2memcpy@s1:	; 2 bytes @ 0x35
  5148  000036                     	ds   1
  5149  000037                     ??_start_i2c_slave_reply:	; 0 bytes @ 0x36
  5150  000037                     	ds   1
  5151  000038                     ??_SleepIfOkay:	; 0 bytes @ 0x37
  5152  000038                     ??i2_in_low_int:	; 0 bytes @ 0x37
  5153                           	global	i2memcpy@n
  5154  000038                     i2memcpy@n:	; 2 bytes @ 0x37
  5155  000038                     	ds   2
  5156  00003A                     ??i2_memcpy:	; 0 bytes @ 0x39
  5157                           	global	i2memcpy@d
  5158  00003A                     i2memcpy@d:	; 2 bytes @ 0x39
  5159  00003A                     	ds   2
  5160                           	global	i2memcpy@s
  5161  00003C                     i2memcpy@s:	; 2 bytes @ 0x3B
  5162  00003C                     	ds   2
  5163  00003E                     ??i2_send_msg:	; 0 bytes @ 0x3D
  5164  00003E                     ??i2_recv_msg:	; 0 bytes @ 0x3D
  5165  00003E                     	ds   1
  5166  00003F                     ??_ToMainHigh_sendmsg:	; 0 bytes @ 0x3E
  5167  00003F                     	ds   1
  5168  000040                     ??_i2c_int_handler:	; 0 bytes @ 0x3F
  5169  000040                     ??_timer0_int_handler:	; 0 bytes @ 0x3F
  5170  000040                     ??_FromMainLow_recvmsg:	; 0 bytes @ 0x3F
  5171  000040                     ??_FromMainHigh_recvmsg:	; 0 bytes @ 0x3F
  5172  000040                     	ds   2
  5173                           ;!
  5174                           ;!Data Sizes:
  5175                           ;!    Strings     0
  5176                           ;!    Constant    0
  5177                           ;!    Data        0
  5178                           ;!    BSS         223
  5179                           ;!    Persistent  4
  5180                           ;!    Stack       0
  5181                           ;!
  5182                           ;!Auto Spaces:
  5183                           ;!    Space          Size  Autos    Used
  5184                           ;!    COMRAM          127     65      75
  5185                           ;!    BANK0           128     70      71
  5186                           ;!    BANK1           256     70     232
  5187                           ;!    BANK2           256      0      54
  5188                           ;!    BANK3           256      0       0
  5189                           
  5190                           ;!
  5191                           ;!Pointer List with Targets:
  5192                           ;!
  5193                           ;!    ?_ReadTimer1	unsigned int  size(2) Largest target is 2
  5194                           ;!		 -> WriteTimer1@timer(COMRAM[2]), ReadTimer1@timer(COMRAM[2]), 
  5195                           ;!
  5196                           ;!    ?_ReadADC	int  size(2) Largest target is 0
  5197                           ;!
  5198                           ;!    ?_memcpy	PTR void  size(2) Largest target is 54
  5199                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@data(BANK0[10]), FromMainHigh_
                                 MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
  5200                           ;!		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 
  5201                           ;!
  5202                           ;!    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
  5203                           ;!		 -> main@uthread_data(BANK1[2]), 
  5204                           ;!
  5205                           ;!    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
  5206                           ;!		 -> main@t0thread_data(BANK1[2]), 
  5207                           ;!
  5208                           ;!    ?_in_high_int	int  size(2) Largest target is 0
  5209                           ;!
  5210                           ;!    memcpy@d1	PTR void  size(2) Largest target is 54
  5211                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@data(BANK0[10]), FromMainHigh_
                                 MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
  5212                           ;!		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 
  5213                           ;!
  5214                           ;!    memcpy@d	PTR unsigned char  size(2) Largest target is 54
  5215                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@data(BANK0[10]), FromMainHigh_
                                 MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
  5216                           ;!		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 
  5217                           ;!
  5218                           ;!    memcpy@s1	PTR const void  size(2) Largest target is 54
  5219                           ;!		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), timer0
                                 _int_handler@val(BANK0[2]), NULL(NULL[0]), 
  5220                           ;!		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(
                                 BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
  5221                           ;!		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), main@uc(BANK1[5]), 
  5222                           ;!
  5223                           ;!    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
  5224                           ;!		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), timer0
                                 _int_handler@val(BANK0[2]), NULL(NULL[0]), 
  5225                           ;!		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(
                                 BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
  5226                           ;!		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), main@uc(BANK1[5]), 
  5227                           ;!
  5228                           ;!    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
  5229                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5230                           ;!
  5231                           ;!    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
  5232                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5233                           ;!
  5234                           ;!    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
  5235                           ;!		 -> main@t1thread_data(BANK1[2]), 
  5236                           ;!
  5237                           ;!    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target 
                                 is 2
  5238                           ;!		 -> main@t1thread_data(BANK1[2]), 
  5239                           ;!
  5240                           ;!    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
  5241                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5242                           ;!
  5243                           ;!    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
  5244                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5245                           ;!
  5246                           ;!    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
  5247                           ;!		 -> main@uc(BANK1[5]), 
  5248                           ;!
  5249                           ;!    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
  5250                           ;!		 -> NULL(NULL[0]), main@uc(BANK1[5]), 
  5251                           ;!
  5252                           ;!    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
  5253                           ;!		 -> main@ic(BANK1[28]), 
  5254                           ;!
  5255                           ;!    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 10
  5256                           ;!		 -> i2c_int_handler@empty(BANK0[4]), i2c_int_handler@data(BANK0[10]), 
  5257                           ;!
  5258                           ;!    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
  5259                           ;!		 -> NULL(NULL[0]), main@ic(BANK1[28]), 
  5260                           ;!
  5261                           ;!    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
  5262                           ;!		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
  5263                           ;!
  5264                           ;!    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
  5265                           ;!		 -> timer0_int_handler@val(BANK0[2]), 
  5266                           ;!
  5267                           ;!    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1023
  5268                           ;!		 -> RAM(DATA[1023]), 
  5269                           ;!
  5270                           ;!    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 10
  5271                           ;!		 -> i2c_int_handler@data(BANK0[10]), 
  5272                           ;!
  5273                           ;!    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
  5274                           ;!		 -> i2c_int_handler@msgtype(BANK0[1]), 
  5275                           ;!
  5276                           ;!    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 11
  5277                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5278                           ;!
  5279                           ;!    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
  5280                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5281                           ;!
  5282                           ;!    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
  5283                           ;!		 -> main@msgtype(BANK1[1]), 
  5284                           ;!
  5285                           ;!    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 3
  5286                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@error_buf(BANK0[3]), 
  5287                           ;!
  5288                           ;!    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
  5289                           ;!		 -> main@msgbuffer(BANK1[11]), 
  5290                           ;!
  5291                           ;!    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
  5292                           ;!		 -> main@msgtype(BANK1[1]), 
  5293                           ;!
  5294                           ;!    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
  5295                           ;!		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), NULL(N
                                 ULL[0]), main@uc(BANK1[5]), 
  5296                           ;!
  5297                           ;!    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1023
  5298                           ;!		 -> RAM(DATA[1023]), i2c_int_handler@msgtype(BANK0[1]), main@msgtype(BANK1[1]), 
  5299                           ;!
  5300                           ;!    recv_msg@data	PTR void  size(2) Largest target is 11
  5301                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@data(BANK0[10]), main@msgbuffe
                                 r(BANK1[11]), 
  5302                           ;!
  5303                           ;!    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
  5304                           ;!		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK1[54]), 
  5305                           ;!
  5306                           ;!    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
  5307                           ;!		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK1[54]), 
  5308                           ;!
  5309                           ;!    sp__memcpy	PTR void  size(2) Largest target is 54
  5310                           ;!		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@data(BANK0[10]), FromMainHigh_
                                 MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
  5311                           ;!		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 
  5312                           ;!
  5313                           ;!    send_msg@data	PTR void  size(2) Largest target is 11
  5314                           ;!		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), timer0
                                 _int_handler@val(BANK0[2]), NULL(NULL[0]), 
  5315                           ;!		 -> i2c_int_handler@error_buf(BANK0[3]), main@msgbuffer(BANK1[11]), main@uc(BANK1[5]
                                 ), 
  5316                           ;!
  5317                           ;!    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
  5318                           ;!		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK1[54]), 
  5319                           ;!
  5320                           ;!    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
  5321                           ;!		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK1[54]), 
  5322                           ;!
  5323                           ;!    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
  5324                           ;!		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]),
                                  ToMainLow_MQ(BANK1[54]), 
  5325                           ;!
  5326                           
  5327                           
  5328                           ;!
  5329                           ;!Critical Paths under _main in COMRAM
  5330                           ;!
  5331                           ;!    None.
  5332                           ;!
  5333                           ;!Critical Paths under _InterruptHandlerHigh in COMRAM
  5334                           ;!
  5335                           ;!    _InterruptHandlerHigh->_i2c_int_handler
  5336                           ;!    _InterruptHandlerHigh->_timer0_int_handler
  5337                           ;!    _SleepIfOkay->i2_in_low_int
  5338                           ;!    _ToMainHigh_sendmsg->i2_send_msg
  5339                           ;!    _FromMainLow_recvmsg->i2_recv_msg
  5340                           ;!    _FromMainHigh_recvmsg->i2_recv_msg
  5341                           ;!    i2_in_low_int->i2_in_high_int
  5342                           ;!    i2_send_msg->i2_memcpy
  5343                           ;!    i2_recv_msg->i2_memcpy
  5344                           ;!    _InterruptHandlerLow->_adc_int_handler
  5345                           ;!    _timer1_int_handler->_ToMainLow_sendmsg
  5346                           ;!    _adc_int_handler->_ToMainLow_sendmsg
  5347                           ;!    _uart_recv_int_handler->_ToMainLow_sendmsg
  5348                           ;!    _ToMainLow_sendmsg->i1_send_msg
  5349                           ;!    i1_send_msg->i1_memcpy
  5350                           ;!
  5351                           ;!Critical Paths under _main in BANK0
  5352                           ;!
  5353                           ;!    _init_timer1_lthread->_OpenADC
  5354                           ;!    _init_queues->_init_queue
  5355                           ;!    _block_on_To_msgqueues->_in_main
  5356                           ;!    _in_main->_in_low_int
  5357                           ;!    _in_low_int->_in_high_int
  5358                           ;!    _ToMainHigh_recvmsg->_recv_msg
  5359                           ;!    _ToMainLow_recvmsg->_recv_msg
  5360                           ;!    _FromMainLow_sendmsg->_send_msg
  5361                           ;!    _send_msg->_memcpy
  5362                           ;!    _recv_msg->_memcpy
  5363                           ;!
  5364                           ;!Critical Paths under _InterruptHandlerHigh in BANK0
  5365                           ;!
  5366                           ;!    _InterruptHandlerHigh->_i2c_int_handler
  5367                           ;!    _i2c_int_handler->_FromMainLow_recvmsg
  5368                           ;!    _timer0_int_handler->_FromMainHigh_recvmsg
  5369                           ;!    _ToMainHigh_sendmsg->i2_send_msg
  5370                           ;!    _FromMainLow_recvmsg->i2_recv_msg
  5371                           ;!    _FromMainHigh_recvmsg->i2_recv_msg
  5372                           ;!
  5373                           ;!Critical Paths under _main in BANK1
  5374                           ;!
  5375                           ;!    _main->_ToMainHigh_recvmsg
  5376                           ;!    _main->_ToMainLow_recvmsg
  5377                           ;!    _ToMainHigh_recvmsg->_recv_msg
  5378                           ;!    _ToMainLow_recvmsg->_recv_msg
  5379                           ;!    _FromMainLow_sendmsg->_send_msg
  5380                           ;!
  5381                           ;!Critical Paths under _InterruptHandlerHigh in BANK1
  5382                           ;!
  5383                           ;!    None.
  5384                           ;!
  5385                           ;!Critical Paths under _main in BANK2
  5386                           ;!
  5387                           ;!    None.
  5388                           ;!
  5389                           ;!Critical Paths under _InterruptHandlerHigh in BANK2
  5390                           ;!
  5391                           ;!    None.
  5392                           ;!
  5393                           ;!Critical Paths under _main in BANK3
  5394                           ;!
  5395                           ;!    None.
  5396                           ;!
  5397                           ;!Critical Paths under _InterruptHandlerHigh in BANK3
  5398                           ;!
  5399                           ;!    None.
  5400                           
  5401 ;;
  5402 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  5403 ;;
  5404                           
  5405                           ;!
  5406                           ;!Call Graph Tables:
  5407                           ;!
  5408                           ;! ---------------------------------------------------------------------------------
  5409                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  5410                           ;! ---------------------------------------------------------------------------------
  5411                           ;! (0) _main                                                56    56      0    4596
  5412                           ;!                                             69 BANK0      1     1      0
  5413                           ;!                                             17 BANK1     53    53      0
  5414                           ;!                     _init_uart_recv
  5415                           ;!                           _init_i2c
  5416                           ;!                _init_timer1_lthread
  5417                           ;!                        _init_queues
  5418                           ;!                         _OpenTimer1
  5419                           ;!                  _enable_interrupts
  5420                           ;!                _i2c_configure_slave
  5421                           ;!                          _OpenUSART
  5422                           ;!              _block_on_To_msgqueues
  5423                           ;!                 _ToMainHigh_recvmsg
  5424                           ;!                     _timer0_lthread
  5425                           ;!                  _ToMainLow_recvmsg
  5426                           ;!                     _timer1_lthread
  5427                           ;!                _FromMainLow_sendmsg
  5428                           ;!                       _uart_lthread
  5429                           ;! ---------------------------------------------------------------------------------
  5430                           ;! (1) _enable_interrupts                                    0     0      0       0
  5431                           ;! ---------------------------------------------------------------------------------
  5432                           ;! (1) _init_uart_recv                                       2     0      2      22
  5433                           ;!                                             57 BANK0      2     0      2
  5434                           ;! ---------------------------------------------------------------------------------
  5435                           ;! (1) _init_i2c                                             2     0      2      22
  5436                           ;!                                             57 BANK0      2     0      2
  5437                           ;! ---------------------------------------------------------------------------------
  5438                           ;! (1) _init_timer1_lthread                                  5     3      2     198
  5439                           ;!                                             62 BANK0      5     3      2
  5440                           ;!                            _OpenADC
  5441                           ;!                         _SetChanADC
  5442                           ;! ---------------------------------------------------------------------------------
  5443                           ;! (1) _init_queues                                          1     1      0     134
  5444                           ;!                                             61 BANK0      1     1      0
  5445                           ;!                         _init_queue
  5446                           ;! ---------------------------------------------------------------------------------
  5447                           ;! (1) _OpenTimer1                                           1     0      1      66
  5448                           ;!                                             57 BANK0      1     0      1
  5449                           ;! ---------------------------------------------------------------------------------
  5450                           ;! (1) _i2c_configure_slave                                  1     0      1      22
  5451                           ;!                                             57 BANK0      1     0      1
  5452                           ;! ---------------------------------------------------------------------------------
  5453                           ;! (1) _OpenUSART                                            3     0      3     220
  5454                           ;!                                             57 BANK0      3     0      3
  5455                           ;! ---------------------------------------------------------------------------------
  5456                           ;! (1) _block_on_To_msgqueues                                1     1      0      66
  5457                           ;!                                             63 BANK0      1     1      0
  5458                           ;!                            _in_main
  5459                           ;!                          _check_msg
  5460                           ;!                        _Delay1KTCYx
  5461                           ;! ---------------------------------------------------------------------------------
  5462                           ;! (2) _in_main                                              2     0      2       0
  5463                           ;!                                             61 BANK0      2     0      2
  5464                           ;!                         _in_low_int
  5465                           ;!                        _in_high_int
  5466                           ;! ---------------------------------------------------------------------------------
  5467                           ;! (3) _in_low_int                                           2     0      2       0
  5468                           ;!                                             59 BANK0      2     0      2
  5469                           ;!                        _in_high_int
  5470                           ;! ---------------------------------------------------------------------------------
  5471                           ;! (3) _in_high_int                                          2     0      2       0
  5472                           ;!                                             57 BANK0      2     0      2
  5473                           ;! ---------------------------------------------------------------------------------
  5474                           ;! (1) _ToMainHigh_recvmsg                                   5     0      5     772
  5475                           ;!                                             12 BANK1      5     0      5
  5476                           ;!                           _recv_msg
  5477                           ;! ---------------------------------------------------------------------------------
  5478                           ;! (1) _timer0_lthread                                      10     2      8      23
  5479                           ;!                                             57 BANK0     10     2      8
  5480                           ;! ---------------------------------------------------------------------------------
  5481                           ;! (1) _ToMainLow_recvmsg                                    5     0      5     772
  5482                           ;!                                             12 BANK1      5     0      5
  5483                           ;!                           _recv_msg
  5484                           ;! ---------------------------------------------------------------------------------
  5485                           ;! (1) _timer1_lthread                                      10     2      8      44
  5486                           ;!                                             57 BANK0     10     2      8
  5487                           ;!                         _ConvertADC
  5488                           ;! ---------------------------------------------------------------------------------
  5489                           ;! (1) _FromMainLow_sendmsg                                  4     0      4     741
  5490                           ;!                                             11 BANK1      4     0      4
  5491                           ;!                           _send_msg
  5492                           ;! ---------------------------------------------------------------------------------
  5493                           ;! (1) _uart_lthread                                         8     0      8      88
  5494                           ;!                                             57 BANK0      8     0      8
  5495                           ;! ---------------------------------------------------------------------------------
  5496                           ;! (2) _init_queue                                           4     2      2     134
  5497                           ;!                                             57 BANK0      4     2      2
  5498                           ;! ---------------------------------------------------------------------------------
  5499                           ;! (2) _send_msg                                            12     6      6     648
  5500                           ;!                                             67 BANK0      1     1      0
  5501                           ;!                                              0 BANK1     11     5      6
  5502                           ;!                             _memcpy
  5503                           ;! ---------------------------------------------------------------------------------
  5504                           ;! (2) _recv_msg                                            14     7      7     679
  5505                           ;!                                             67 BANK0      2     2      0
  5506                           ;!                                              0 BANK1     12     5      7
  5507                           ;!                             _memcpy
  5508                           ;! ---------------------------------------------------------------------------------
  5509                           ;! (3) _memcpy                                              10     4      6     174
  5510                           ;!                                             57 BANK0     10     4      6
  5511                           ;! ---------------------------------------------------------------------------------
  5512                           ;! (2) _check_msg                                            3     1      2      44
  5513                           ;!                                             57 BANK0      3     1      2
  5514                           ;! ---------------------------------------------------------------------------------
  5515                           ;! (2) _Delay1KTCYx                                          1     0      1      22
  5516                           ;!                                             57 BANK0      1     0      1
  5517                           ;! ---------------------------------------------------------------------------------
  5518                           ;! (2) _OpenADC                                              5     2      3     154
  5519                           ;!                                             57 BANK0      5     2      3
  5520                           ;! ---------------------------------------------------------------------------------
  5521                           ;! (2) _SetChanADC                                           2     1      1      22
  5522                           ;!                                             57 BANK0      2     1      1
  5523                           ;! ---------------------------------------------------------------------------------
  5524                           ;! (2) _ConvertADC                                           0     0      0       0
  5525                           ;! ---------------------------------------------------------------------------------
  5526                           ;! Estimated maximum stack depth 3
  5527                           ;! ---------------------------------------------------------------------------------
  5528                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  5529                           ;! ---------------------------------------------------------------------------------
  5530                           ;! (5) _InterruptHandlerLow                                 17    17      0    4980
  5531                           ;!                                             34 COMRAM    17    17      0
  5532                           ;!                 _timer1_int_handler
  5533                           ;!                    _adc_int_handler
  5534                           ;!              _uart_recv_int_handler
  5535                           ;! ---------------------------------------------------------------------------------
  5536                           ;! (6) _timer1_int_handler                                   6     6      0    1688
  5537                           ;!                                             26 COMRAM     6     6      0
  5538                           ;!                         _ReadTimer1
  5539                           ;!                  _ToMainLow_sendmsg
  5540                           ;!                        _WriteTimer1
  5541                           ;! ---------------------------------------------------------------------------------
  5542                           ;! (6) _adc_int_handler                                      8     8      0    1707
  5543                           ;!                                             26 COMRAM     8     8      0
  5544                           ;!                            _ReadADC
  5545                           ;!                  _ToMainLow_sendmsg
  5546                           ;! ---------------------------------------------------------------------------------
  5547                           ;! (6) _uart_recv_int_handler                                2     2      0    1585
  5548                           ;!                                             26 COMRAM     2     2      0
  5549                           ;!                          _ReadUSART
  5550                           ;!                  _ToMainLow_sendmsg
  5551                           ;! ---------------------------------------------------------------------------------
  5552                           ;! (7) _ToMainLow_sendmsg                                    4     0      4    1562
  5553                           ;!                                             22 COMRAM     4     0      4
  5554                           ;!                         i1_send_msg
  5555                           ;! ---------------------------------------------------------------------------------
  5556                           ;! (7) _ReadUSART                                            1     1      0      23
  5557                           ;!                                              0 COMRAM     1     1      0
  5558                           ;! ---------------------------------------------------------------------------------
  5559                           ;! (7) _ReadTimer1                                           4     2      2      30
  5560                           ;!                                              0 COMRAM     4     2      2
  5561                           ;! ---------------------------------------------------------------------------------
  5562                           ;! (7) _WriteTimer1                                          4     2      2      45
  5563                           ;!                                              0 COMRAM     4     2      2
  5564                           ;! ---------------------------------------------------------------------------------
  5565                           ;! (7) _ReadADC                                              2     0      2       0
  5566                           ;!                                              0 COMRAM     2     0      2
  5567                           ;! ---------------------------------------------------------------------------------
  5568                           ;! (8) i1_send_msg                                          12     6      6    1496
  5569                           ;!                                             10 COMRAM    12     6      6
  5570                           ;!                           i1_memcpy
  5571                           ;! ---------------------------------------------------------------------------------
  5572                           ;! (9) i1_memcpy                                            10     4      6     395
  5573                           ;!                                              0 COMRAM    10     4      6
  5574                           ;! ---------------------------------------------------------------------------------
  5575                           ;! (10) _InterruptHandlerHigh                               14    14      0    9227
  5576                           ;!                                             43 BANK0     14    14      0
  5577                           ;!                    _i2c_int_handler
  5578                           ;!                 _timer0_int_handler
  5579                           ;!                        _SleepIfOkay
  5580                           ;! ---------------------------------------------------------------------------------
  5581                           ;! (11) _i2c_int_handler                                    28    28      0    4935
  5582                           ;!                                             63 COMRAM     2     2      0
  5583                           ;!                                             17 BANK0     26    26      0
  5584                           ;!                       _handle_start
  5585                           ;!                _FromMainLow_recvmsg
  5586                           ;!              _start_i2c_slave_reply
  5587                           ;!                 _ToMainHigh_sendmsg
  5588                           ;! ---------------------------------------------------------------------------------
  5589                           ;! (11) _timer0_int_handler                                  8     8      0    4146
  5590                           ;!                                             63 COMRAM     2     2      0
  5591                           ;!                                             17 BANK0      6     6      0
  5592                           ;!                        _WriteTimer0
  5593                           ;!               _FromMainHigh_recvmsg
  5594                           ;!                 _ToMainHigh_sendmsg
  5595                           ;! ---------------------------------------------------------------------------------
  5596                           ;! (11) _SleepIfOkay                                         0     0      0     146
  5597                           ;!                       i2_in_low_int
  5598                           ;!                      i2_in_high_int
  5599                           ;!                        i2_check_msg
  5600                           ;!                   _enter_sleep_mode
  5601                           ;! ---------------------------------------------------------------------------------
  5602                           ;! (12) _ToMainHigh_sendmsg                                  4     0      4    1912
  5603                           ;!                                             11 BANK0      4     0      4
  5604                           ;!                         i2_send_msg
  5605                           ;! ---------------------------------------------------------------------------------
  5606                           ;! (12) _FromMainLow_recvmsg                                 5     0      5    2000
  5607                           ;!                                             12 BANK0      5     0      5
  5608                           ;!                         i2_recv_msg
  5609                           ;! ---------------------------------------------------------------------------------
  5610                           ;! (12) _FromMainHigh_recvmsg                                5     0      5    2000
  5611                           ;!                                             12 BANK0      5     0      5
  5612                           ;!                         i2_recv_msg
  5613                           ;! ---------------------------------------------------------------------------------
  5614                           ;! (12) _enter_sleep_mode                                    0     0      0       0
  5615                           ;! ---------------------------------------------------------------------------------
  5616                           ;! (12) _start_i2c_slave_reply                               5     2      3      66
  5617                           ;!                                             51 COMRAM     5     2      3
  5618                           ;! ---------------------------------------------------------------------------------
  5619                           ;! (12) _handle_start                                        1     0      1      22
  5620                           ;!                                             51 COMRAM     1     0      1
  5621                           ;! ---------------------------------------------------------------------------------
  5622                           ;! (12) _WriteTimer0                                         4     2      2      68
  5623                           ;!                                             51 COMRAM     4     2      2
  5624                           ;! ---------------------------------------------------------------------------------
  5625                           ;! (12) i2_in_low_int                                        2     0      2       0
  5626                           ;!                                             53 COMRAM     2     0      2
  5627                           ;!                      i2_in_high_int
  5628                           ;! ---------------------------------------------------------------------------------
  5629                           ;! (12) i2_in_high_int                                       2     0      2       0
  5630                           ;!                                             51 COMRAM     2     0      2
  5631                           ;! ---------------------------------------------------------------------------------
  5632                           ;! (13) i2_send_msg                                         12     6      6    1819
  5633                           ;!                                             61 COMRAM     1     1      0
  5634                           ;!                                              0 BANK0     11     5      6
  5635                           ;!                           i2_memcpy
  5636                           ;! ---------------------------------------------------------------------------------
  5637                           ;! (13) i2_recv_msg                                         14     7      7    1907
  5638                           ;!                                             61 COMRAM     2     2      0
  5639                           ;!                                              0 BANK0     12     5      7
  5640                           ;!                           i2_memcpy
  5641                           ;! ---------------------------------------------------------------------------------
  5642                           ;! (12) i2_check_msg                                         3     1      2     146
  5643                           ;!                                             51 COMRAM     3     1      2
  5644                           ;! ---------------------------------------------------------------------------------
  5645                           ;! (14) i2_memcpy                                           10     4      6     484
  5646                           ;!                                             51 COMRAM    10     4      6
  5647                           ;! ---------------------------------------------------------------------------------
  5648                           ;! Estimated maximum stack depth 14
  5649                           ;! ---------------------------------------------------------------------------------
  5650                           ;!
  5651                           ;! Call Graph Graphs:
  5652                           ;!
  5653                           ;! _main (ROOT)
  5654                           ;!   _init_uart_recv
  5655                           ;!   _init_i2c
  5656                           ;!   _init_timer1_lthread
  5657                           ;!     _OpenADC
  5658                           ;!     _SetChanADC
  5659                           ;!   _init_queues
  5660                           ;!     _init_queue
  5661                           ;!   _OpenTimer1
  5662                           ;!   _enable_interrupts
  5663                           ;!   _i2c_configure_slave
  5664                           ;!   _OpenUSART
  5665                           ;!   _block_on_To_msgqueues
  5666                           ;!     _in_main
  5667                           ;!       _in_low_int
  5668                           ;!         _in_high_int
  5669                           ;!       _in_high_int
  5670                           ;!     _check_msg
  5671                           ;!     _Delay1KTCYx
  5672                           ;!   _ToMainHigh_recvmsg
  5673                           ;!     _recv_msg
  5674                           ;!       _memcpy
  5675                           ;!   _timer0_lthread
  5676                           ;!   _ToMainLow_recvmsg
  5677                           ;!     _recv_msg
  5678                           ;!       _memcpy
  5679                           ;!   _timer1_lthread
  5680                           ;!     _ConvertADC
  5681                           ;!   _FromMainLow_sendmsg
  5682                           ;!     _send_msg
  5683                           ;!       _memcpy
  5684                           ;!   _uart_lthread
  5685                           ;!
  5686                           ;! _InterruptHandlerLow (ROOT)
  5687                           ;!   _timer1_int_handler
  5688                           ;!     _ReadTimer1
  5689                           ;!     _ToMainLow_sendmsg
  5690                           ;!       i1_send_msg
  5691                           ;!         i1_memcpy
  5692                           ;!     _WriteTimer1
  5693                           ;!   _adc_int_handler
  5694                           ;!     _ReadADC
  5695                           ;!     _ToMainLow_sendmsg
  5696                           ;!       i1_send_msg
  5697                           ;!         i1_memcpy
  5698                           ;!   _uart_recv_int_handler
  5699                           ;!     _ReadUSART
  5700                           ;!     _ToMainLow_sendmsg
  5701                           ;!       i1_send_msg
  5702                           ;!         i1_memcpy
  5703                           ;!
  5704                           
  5705                           ;! Address spaces:
  5706                           
  5707                           ;!Name               Size   Autos  Total    Cost      Usage
  5708                           ;!BIGRAM             3FF      0       0      12        0.0%
  5709                           ;!BITBANK3           100      0       0       9        0.0%
  5710                           ;!BANK3              100      0       0      10        0.0%
  5711                           ;!BITBANK2           100      0       0       7        0.0%
  5712                           ;!BANK2              100      0      36       8       21.1%
  5713                           ;!BITBANK1           100      0       0       5        0.0%
  5714                           ;!BANK1              100     46      E8       6       90.6%
  5715                           ;!BITBANK0            80      0       0       3        0.0%
  5716                           ;!BANK0               80     46      47       4       55.5%
  5717                           ;!BITCOMRAM           7F      0       0       0        0.0%
  5718                           ;!COMRAM              7F     41      4B       1       59.1%
  5719                           ;!BITSFR               0      0       0      40        0.0%
  5720                           ;!SFR                  0      0       0      40        0.0%
  5721                           ;!STACK                0      0      22       2        0.0%
  5722                           ;!NULL                 0      0       0       0        0.0%
  5723                           ;!ABS                  0      0     1B0      11        0.0%
  5724                           ;!DATA                 0      0     1D2      13        0.0%
  5725                           ;!CODE                 0      0       0       0        0.0%
  5726                           
  5727                           	global	_main
  5728                           
  5729 ;; *************** function _main *****************
  5730 ;; Defined at:
  5731 ;;		line 79 in file "../src/main.c"
  5732 ;; Parameters:    Size  Location     Type
  5733 ;;		None
  5734 ;; Auto vars:     Size  Location     Type
  5735 ;;  ic             28   42[BANK1 ] struct __i2c_comm
  5736 ;;  msgbuffer      11   17[BANK1 ] unsigned char [11]
  5737 ;;  uc              5   35[BANK1 ] struct __uart_comm
  5738 ;;  t1thread_dat    2   33[BANK1 ] struct __timer1_thread_s
  5739 ;;  t0thread_dat    2   30[BANK1 ] struct __timer0_thread_s
  5740 ;;  uthread_data    2   28[BANK1 ] struct __uart_thread_str
  5741 ;;  msgtype         1   41[BANK1 ] unsigned char 
  5742 ;;  length          1   40[BANK1 ] char 
  5743 ;;  last_reg_rec    1   32[BANK1 ] unsigned char 
  5744 ;;  i               1    0        unsigned char 
  5745 ;;  c               1    0        unsigned char 
  5746 ;; Return value:  Size  Location     Type
  5747 ;;		None               void
  5748 ;; Registers used:
  5749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, structret, tblptrl, tblptrh, tblptr
       u, prodl, prodh, bsr, cstack
  5750 ;; Tracked objects:
  5751 ;;		On entry : 0/0
  5752 ;;		On exit  : 0/0
  5753 ;;		Unchanged: 0/0
  5754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5755 ;;      Params:         0       0       0       0       0
  5756 ;;      Locals:         0       0      53       0       0
  5757 ;;      Temps:          0       1       0       0       0
  5758 ;;      Totals:         0       1      53       0       0
  5759 ;;Total ram usage:       54 bytes
  5760 ;; Hardware stack levels required when called:   14
  5761 ;; This function calls:
  5762 ;;		_init_uart_recv
  5763 ;;		_init_i2c
  5764 ;;		_init_timer1_lthread
  5765 ;;		_init_queues
  5766 ;;		_OpenTimer1
  5767 ;;		_enable_interrupts
  5768 ;;		_i2c_configure_slave
  5769 ;;		_OpenUSART
  5770 ;;		_block_on_To_msgqueues
  5771 ;;		_ToMainHigh_recvmsg
  5772 ;;		_timer0_lthread
  5773 ;;		_ToMainLow_recvmsg
  5774 ;;		_timer1_lthread
  5775 ;;		_FromMainLow_sendmsg
  5776 ;;		_uart_lthread
  5777 ;; This function is called by:
  5778 ;;		Startup code after reset
  5779 ;; This function uses a non-reentrant model
  5780 ;;
  5781                           psect	text0,class=CODE,space=0,reloc=2
  5782                           global __ptext0
  5783  00070A                     __ptext0:
  5784                           psect	text0
  5785                           	file	"../src/main.c"
  5786                           	line	79
  5787                           	global	__size_of_main
  5788  0000                     	__size_of_main	equ	__end_of_main-_main
  5789                           	
  5790  00070A                     _main:; BSR set to: 0
  5791                           
  5792                           	opt	stack 17
  5793                           	line	99
  5794                           	
  5795  00070A                     l19031:
  5796                           ;main.c: 80: char c;
  5797                           ;main.c: 81: signed char length;
  5798                           ;main.c: 82: unsigned char msgtype;
  5799                           ;main.c: 83: unsigned char last_reg_recvd;
  5800                           ;main.c: 84: uart_comm uc;
  5801                           ;main.c: 85: i2c_comm ic;
  5802                           ;main.c: 86: unsigned char msgbuffer[10 + 1];
  5803                           ;main.c: 87: unsigned char i;
  5804                           ;main.c: 88: uart_thread_struct uthread_data;
  5805                           ;main.c: 91: timer1_thread_struct t1thread_data;
  5806                           ;main.c: 92: timer0_thread_struct t0thread_data;
  5807                           ;main.c: 99: OSCCON = 0x82;
  5808  00070A  0E82               	movlw	low(082h)
  5809  00070C  6ED3               	movwf	((c:4051)),c	;volatile
  5810                           	line	100
  5811                           	
  5812  00070E                     l19033:
  5813                           ;main.c: 100: OSCTUNEbits.PLLEN = 0;
  5814  00070E  9C9B               	bcf	((c:3995)),c,6	;volatile
  5815                           	line	104
  5816                           	
  5817  000710                     l19035:
  5818                           ;main.c: 104: init_uart_recv(&uc);
  5819  000710  0101               	movlb	1	; () banked
  5820  000712  0E01               	movlw	high(main@uc)
  5821  000714  0100               	movlb	0	; () banked
  5822  000716  0100               	movlb	0	; () banked
  5823  000718  6FBA               	movwf	((?_init_uart_recv+1))&0ffh
  5824  00071A  0101               	movlb	1	; () banked
  5825  00071C  0EC5               	movlw	low(main@uc)
  5826  00071E  0100               	movlb	0	; () banked
  5827  000720  6FB9               	movwf	((?_init_uart_recv))&0ffh
  5828  000722  0100               	movlb	0	; () banked
  5829  000724  ECF9  F00D         	call	_init_uart_recv	;wreg free
  5830                           	line	107
  5831                           	
  5832  000728                     l19037:
  5833                           ;main.c: 107: init_i2c(&ic);
  5834  000728  0101               	movlb	1	; () banked
  5835  00072A  0E01               	movlw	high(main@ic)
  5836  00072C  0100               	movlb	0	; () banked
  5837  00072E  0100               	movlb	0	; () banked
  5838  000730  6FBA               	movwf	((?_init_i2c+1))&0ffh
  5839  000732  0101               	movlb	1	; () banked
  5840  000734  0ECC               	movlw	low(main@ic)
  5841  000736  0100               	movlb	0	; () banked
  5842  000738  6FB9               	movwf	((?_init_i2c))&0ffh
  5843  00073A  0100               	movlb	0	; () banked
  5844  00073C  ECD9  F00B         	call	_init_i2c	;wreg free
  5845                           	line	110
  5846                           	
  5847  000740                     l19039:
  5848                           ;main.c: 110: init_timer1_lthread(&t1thread_data);
  5849  000740  0101               	movlb	1	; () banked
  5850  000742  0E01               	movlw	high(main@t1thread_data)
  5851  000744  0100               	movlb	0	; () banked
  5852  000746  0100               	movlb	0	; () banked
  5853  000748  6FBF               	movwf	((?_init_timer1_lthread+1))&0ffh
  5854  00074A  0101               	movlb	1	; () banked
  5855  00074C  0EC3               	movlw	low(main@t1thread_data)
  5856  00074E  0100               	movlb	0	; () banked
  5857  000750  6FBE               	movwf	((?_init_timer1_lthread))&0ffh
  5858  000752  0100               	movlb	0	; () banked
  5859  000754  ECFA  F00A         	call	_init_timer1_lthread	;wreg free
  5860                           	line	113
  5861                           	
  5862  000758                     l19041:
  5863                           ;main.c: 113: init_queues();
  5864  000758  ECC3  F00A         	call	_init_queues	;wreg free
  5865                           	line	116
  5866                           	
  5867  00075C                     l19043:
  5868                           ;main.c: 116: TRISB = 0x0;
  5869  00075C  0E00               	movlw	low(0)
  5870  00075E  6E93               	movwf	((c:3987)),c	;volatile
  5871                           	line	117
  5872                           	
  5873  000760                     l19045:
  5874                           ;main.c: 117: LATB = 0x0;
  5875  000760  0E00               	movlw	low(0)
  5876  000762  6E8A               	movwf	((c:3978)),c	;volatile
  5877                           	line	121
  5878                           	
  5879  000764                     l19047:
  5880                           ;main.c: 121: PORTA = 0x0;
  5881  000764  0E00               	movlw	low(0)
  5882  000766  6E80               	movwf	((c:3968)),c	;volatile
  5883                           	line	122
  5884                           	
  5885  000768                     l19049:
  5886                           ;main.c: 122: LATA = 0x0;
  5887  000768  0E00               	movlw	low(0)
  5888  00076A  6E89               	movwf	((c:3977)),c	;volatile
  5889                           	line	123
  5890                           	
  5891  00076C                     l19051:
  5892                           ;main.c: 123: ADCON1 = 0x0F;
  5893  00076C  0E0F               	movlw	low(0Fh)
  5894  00076E  6EC1               	movwf	((c:4033)),c	;volatile
  5895                           	line	125
  5896                           	
  5897  000770                     l19053:
  5898                           ;main.c: 125: TRISA = 0x0F;
  5899  000770  0E0F               	movlw	low(0Fh)
  5900  000772  6E92               	movwf	((c:3986)),c	;volatile
  5901                           	line	129
  5902                           	
  5903  000774                     l19055:
  5904                           ;main.c: 129: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
                                 & 0b11111111);
  5905  000774  0100               	movlb	0	; () banked
  5906  000776  6FC5               	movwf	(??_main+0+0)&0ffh
  5907  000778  0EF5               	movlw	low(0F5h)
  5908  00077A  0100               	movlb	0	; () banked
  5909  00077C  0100               	movlb	0	; () banked
  5910  00077E  6FB9               	movwf	((?_OpenTimer1))&0ffh
  5911  000780  0100               	movlb	0	; () banked
  5912  000782  51C5               	movf	(??_main+0+0)&0ffh,w
  5913  000784  0100               	movlb	0	; () banked
  5914  000786  EC88  F00C         	call	_OpenTimer1	;wreg free
  5915                           	line	133
  5916                           	
  5917  00078A                     l19057:
  5918                           ;main.c: 133: enable_interrupts();
  5919  00078A  EC47  F00E         	call	_enable_interrupts	;wreg free
  5920                           	line	138
  5921                           	
  5922  00078E                     l19059:
  5923                           ;main.c: 138: IPR1bits.TMR1IP = 0;
  5924  00078E  909F               	bcf	((c:3999)),c,0	;volatile
  5925                           	line	140
  5926                           	
  5927  000790                     l19061:
  5928                           ;main.c: 140: IPR1bits.ADIP = 0;
  5929  000790  9C9F               	bcf	((c:3999)),c,6	;volatile
  5930                           	line	142
  5931                           	
  5932  000792                     l19063:
  5933                           ;main.c: 142: IPR1bits.RCIP = 0;
  5934  000792  9A9F               	bcf	((c:3999)),c,5	;volatile
  5935                           	line	144
  5936                           	
  5937  000794                     l19065:
  5938                           ;main.c: 144: IPR1bits.SSPIP = 1;
  5939  000794  869F               	bsf	((c:3999)),c,3	;volatile
  5940                           	line	154
  5941                           	
  5942  000796                     l19067:
  5943                           ;main.c: 154: i2c_configure_slave(0x9E);
  5944  000796  0100               	movlb	0	; () banked
  5945  000798  6FC5               	movwf	(??_main+0+0)&0ffh
  5946  00079A  0E9E               	movlw	low(09Eh)
  5947  00079C  0100               	movlb	0	; () banked
  5948  00079E  0100               	movlb	0	; () banked
  5949  0007A0  6FB9               	movwf	((?_i2c_configure_slave))&0ffh
  5950  0007A2  0100               	movlb	0	; () banked
  5951  0007A4  51C5               	movf	(??_main+0+0)&0ffh,w
  5952  0007A6  0100               	movlb	0	; () banked
  5953  0007A8  ECC7  F00D         	call	_i2c_configure_slave	;wreg free
  5954                           	line	167
  5955                           	
  5956  0007AC                     l19069:
  5957                           ;main.c: 167: PIE1bits.SSPIE = 1;
  5958  0007AC  869D               	bsf	((c:3997)),c,3	;volatile
  5959                           	line	171
  5960                           	
  5961  0007AE                     l19071:
  5962                           ;main.c: 170: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  5963                           ;main.c: 171: 0b11111111 & 0b11101111, 0x19);
  5964  0007AE  0100               	movlb	0	; () banked
  5965  0007B0  6FC5               	movwf	(??_main+0+0)&0ffh
  5966  0007B2  0E6C               	movlw	low(06Ch)
  5967  0007B4  0100               	movlb	0	; () banked
  5968  0007B6  0100               	movlb	0	; () banked
  5969  0007B8  6FB9               	movwf	((?_OpenUSART))&0ffh
  5970  0007BA  0100               	movlb	0	; () banked
  5971  0007BC  51C5               	movf	(??_main+0+0)&0ffh,w
  5972  0007BE  0E00               	movlw	high(019h)
  5973  0007C0  0100               	movlb	0	; () banked
  5974  0007C2  0100               	movlb	0	; () banked
  5975  0007C4  6FBB               	movwf	(1+(?_OpenUSART+01h))&0ffh
  5976  0007C6  0E19               	movlw	low(019h)
  5977  0007C8  0100               	movlb	0	; () banked
  5978  0007CA  6FBA               	movwf	(0+(?_OpenUSART+01h))&0ffh
  5979  0007CC  0100               	movlb	0	; () banked
  5980  0007CE  EC60  F008         	call	_OpenUSART	;wreg free
  5981  0007D2  D000               	goto	l19073
  5982                           	line	191
  5983                           ;main.c: 191: while (1) {
  5984                           	
  5985  0007D4                     l3645:
  5986                           	line	195
  5987                           	
  5988  0007D4                     l19073:
  5989                           ;main.c: 195: block_on_To_msgqueues();
  5990  0007D4  EC3B  F007         	call	_block_on_To_msgqueues	;wreg free
  5991                           	line	202
  5992                           	
  5993  0007D8                     l19075:
  5994                           ;main.c: 202: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  5995  0007D8  0100               	movlb	0	; () banked
  5996  0007DA  6FC5               	movwf	(??_main+0+0)&0ffh
  5997  0007DC  0E0A               	movlw	low(0Ah)
  5998  0007DE  0101               	movlb	1	; () banked
  5999  0007E0  0101               	movlb	1	; () banked
  6000  0007E2  6FAE               	movwf	((?_ToMainHigh_recvmsg))&0ffh
  6001  0007E4  0100               	movlb	0	; () banked
  6002  0007E6  51C5               	movf	(??_main+0+0)&0ffh,w
  6003  0007E8  0101               	movlb	1	; () banked
  6004  0007EA  0E01               	movlw	high(main@msgtype)
  6005  0007EC  0101               	movlb	1	; () banked
  6006  0007EE  0101               	movlb	1	; () banked
  6007  0007F0  6FB0               	movwf	(1+(?_ToMainHigh_recvmsg+01h))&0ffh
  6008  0007F2  0101               	movlb	1	; () banked
  6009  0007F4  0ECB               	movlw	low(main@msgtype)
  6010  0007F6  0101               	movlb	1	; () banked
  6011  0007F8  6FAF               	movwf	(0+(?_ToMainHigh_recvmsg+01h))&0ffh
  6012  0007FA  0101               	movlb	1	; () banked
  6013  0007FC  0E01               	movlw	high(main@msgbuffer)
  6014  0007FE  0101               	movlb	1	; () banked
  6015  000800  0101               	movlb	1	; () banked
  6016  000802  6FB2               	movwf	(1+(?_ToMainHigh_recvmsg+03h))&0ffh
  6017  000804  0101               	movlb	1	; () banked
  6018  000806  0EB3               	movlw	low(main@msgbuffer)
  6019  000808  0101               	movlb	1	; () banked
  6020  00080A  6FB1               	movwf	(0+(?_ToMainHigh_recvmsg+03h))&0ffh
  6021  00080C  0101               	movlb	1	; () banked
  6022  00080E  ECFE  F00C         	call	_ToMainHigh_recvmsg	;wreg free
  6023  000812  0101               	movlb	1	; () banked
  6024  000814  0101               	movlb	1	; () banked
  6025  000816  6FCA               	movwf	((main@length))&0ffh
  6026                           	line	203
  6027                           	
  6028  000818                     l19077:; BSR set to: 1
  6029                           
  6030                           ;main.c: 203: if (length < 0) {
  6031  000818  0101               	movlb	1	; () banked
  6032  00081A  0101               	movlb	1	; () banked
  6033  00081C  AFCA               	btfss	((main@length))&0ffh,7
  6034  00081E  D001               	goto	u2181
  6035  000820  D001               	goto	u2180
  6036  000822                     u2181:
  6037  000822  D03C               	goto	l19089
  6038  000824                     u2180:
  6039  000824  D04C               	goto	l19091
  6040                           	line	205
  6041                           	
  6042  000826                     l19079:; BSR set to: 1
  6043                           
  6044  000826  D04B               	goto	l19091
  6045                           	line	207
  6046                           	
  6047  000828                     l3647:; BSR set to: 1
  6048                           
  6049                           	line	208
  6050                           ;main.c: 207: }
  6051                           ;main.c: 208: } else {
  6052  000828  D04A               	goto	l19091
  6053                           	
  6054  00082A                     l3646:; BSR set to: 1
  6055                           
  6056                           	line	209
  6057                           ;main.c: 209: switch (msgtype) {
  6058  00082A  D038               	goto	l19089
  6059                           	line	213
  6060                           ;main.c: 213: case 10:
  6061                           	
  6062  00082C                     l3650:; BSR set to: 1
  6063                           
  6064                           	line	215
  6065                           	
  6066  00082C                     l19081:; BSR set to: 1
  6067                           
  6068                           ;main.c: 214: {
  6069                           ;main.c: 215: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  6070  00082C  0101               	movlb	1	; () banked
  6071  00082E  0E01               	movlw	high(main@t0thread_data)
  6072  000830  0100               	movlb	0	; () banked
  6073  000832  0100               	movlb	0	; () banked
  6074  000834  6FBA               	movwf	((?_timer0_lthread+1))&0ffh
  6075  000836  0101               	movlb	1	; () banked
  6076  000838  0EC0               	movlw	low(main@t0thread_data)
  6077  00083A  0100               	movlb	0	; () banked
  6078  00083C  6FB9               	movwf	((?_timer0_lthread))&0ffh
  6079  00083E  0101               	movlb	1	; () banked
  6080  000840  0100               	movlb	0	; () banked
  6081  000842  C1CB  F0BB         	movff	(main@msgtype),0+(?_timer0_lthread+02h)
  6082  000846  0100               	movlb	0	; () banked
  6083  000848  0100               	movlb	0	; () banked
  6084  00084A  6BBC               	clrf	(1+(?_timer0_lthread+02h))&0ffh
  6085  00084C  0101               	movlb	1	; () banked
  6086  00084E  0101               	movlb	1	; () banked
  6087  000850  51CA               	movf	((main@length))&0ffh,w
  6088  000852  0100               	movlb	0	; () banked
  6089  000854  0100               	movlb	0	; () banked
  6090  000856  6FBD               	movwf	(0+(?_timer0_lthread+04h))&0ffh
  6091  000858  0100               	movlb	0	; () banked
  6092  00085A  6BBE               	clrf	(1+(?_timer0_lthread+04h))&0ffh
  6093  00085C  0100               	movlb	0	; () banked
  6094  00085E  BFBD               	btfsc	(0+(?_timer0_lthread+04h))&0ffh,7
  6095  000860  07BE               	decf	(1+(?_timer0_lthread+04h))&0ffh
  6096  000862  0101               	movlb	1	; () banked
  6097  000864  0E01               	movlw	high(main@msgbuffer)
  6098  000866  0100               	movlb	0	; () banked
  6099  000868  0100               	movlb	0	; () banked
  6100  00086A  6FC0               	movwf	(1+(?_timer0_lthread+06h))&0ffh
  6101  00086C  0101               	movlb	1	; () banked
  6102  00086E  0EB3               	movlw	low(main@msgbuffer)
  6103  000870  0100               	movlb	0	; () banked
  6104  000872  6FBF               	movwf	(0+(?_timer0_lthread+06h))&0ffh
  6105  000874  0100               	movlb	0	; () banked
  6106  000876  EC42  F00E         	call	_timer0_lthread	;wreg free
  6107                           	line	216
  6108                           ;main.c: 216: break;
  6109  00087A  D021               	goto	l19091
  6110                           	line	218
  6111                           ;main.c: 217: };
  6112                           ;main.c: 218: case 40:
  6113                           	
  6114  00087C                     l3652:
  6115                           	line	220
  6116                           	
  6117  00087C                     l3653:
  6118                           	line	224
  6119                           ;main.c: 220: case 41:
  6120                           ;main.c: 221: {
  6121                           ;main.c: 224: last_reg_recvd = msgbuffer[0];
  6122  00087C  C1B3  F1C2         	movff	(main@msgbuffer),(main@last_reg_recvd)
  6123                           	line	225
  6124                           ;main.c: 225: break;
  6125  000880  D01E               	goto	l19091
  6126                           	line	227
  6127                           ;main.c: 226: };
  6128                           ;main.c: 227: case 42:
  6129                           	
  6130  000882                     l3654:
  6131                           	line	236
  6132                           ;main.c: 228: {
  6133                           ;main.c: 236: switch (last_reg_recvd) {
  6134  000882  D002               	goto	l19085
  6135                           	line	237
  6136                           ;main.c: 237: case 0xaa:
  6137                           	
  6138  000884                     l3656:
  6139                           	line	242
  6140                           ;main.c: 238: {
  6141                           ;main.c: 242: break;
  6142  000884  D01C               	goto	l19091
  6143                           	line	256
  6144                           	
  6145  000886                     l19083:
  6146                           ;main.c: 243: }
  6147                           ;main.c: 256: };
  6148  000886  D01B               	goto	l19091
  6149                           	line	236
  6150                           	
  6151  000888                     l3655:
  6152                           	
  6153  000888                     l19085:
  6154  000888  0101               	movlb	1	; () banked
  6155  00088A  0101               	movlb	1	; () banked
  6156  00088C  51C2               	movf	((main@last_reg_recvd))&0ffh,w
  6157                           	; Switch size 1, requested type "space"
  6158                           ; Number of cases is 1, Range of values is 170 to 170
  6159                           ; switch strategies available:
  6160                           ; Name         Instructions Cycles
  6161                           ; simple_byte            4     3 (average)
  6162                           ;	Chosen strategy is simple_byte
  6163                           
  6164  00088E  0AAA               	xorlw	170^0	; case 170
  6165  000890  B4D8               	skipnz
  6166  000892  D015               	goto	l19091
  6167  000894  D014               	goto	l19091
  6168                           
  6169                           	line	256
  6170                           	
  6171  000896                     l3657:; BSR set to: 1
  6172                           
  6173                           	line	258
  6174                           ;main.c: 258: break;
  6175  000896  D013               	goto	l19091
  6176                           	line	260
  6177                           ;main.c: 259: };
  6178                           ;main.c: 260: default:
  6179                           	
  6180  000898                     l3658:; BSR set to: 1
  6181                           
  6182                           	line	263
  6183                           ;main.c: 261: {
  6184                           ;main.c: 263: break;
  6185  000898  D012               	goto	l19091
  6186                           	line	265
  6187                           	
  6188  00089A                     l19087:; BSR set to: 1
  6189                           
  6190                           ;main.c: 264: };
  6191                           ;main.c: 265: };
  6192  00089A  D011               	goto	l19091
  6193                           	line	209
  6194                           	
  6195  00089C                     l3649:; BSR set to: 1
  6196                           
  6197                           	
  6198  00089C                     l19089:; BSR set to: 1
  6199                           
  6200  00089C  0101               	movlb	1	; () banked
  6201  00089E  0101               	movlb	1	; () banked
  6202  0008A0  51CB               	movf	((main@msgtype))&0ffh,w
  6203                           	; Switch size 1, requested type "space"
  6204                           ; Number of cases is 4, Range of values is 10 to 42
  6205                           ; switch strategies available:
  6206                           ; Name         Instructions Cycles
  6207                           ; simple_byte           13     7 (average)
  6208                           ;	Chosen strategy is simple_byte
  6209                           
  6210  0008A2  0A0A               	xorlw	10^0	; case 10
  6211  0008A4  B4D8               	skipnz
  6212  0008A6  D7C2               	goto	l19081
  6213  0008A8  0A22               	xorlw	40^10	; case 40
  6214  0008AA  B4D8               	skipnz
  6215  0008AC  D7E7               	goto	l3653
  6216  0008AE  0A01               	xorlw	41^40	; case 41
  6217  0008B0  B4D8               	skipnz
  6218  0008B2  D7E4               	goto	l3653
  6219  0008B4  0A03               	xorlw	42^41	; case 42
  6220  0008B6  B4D8               	skipnz
  6221  0008B8  D7E7               	goto	l19085
  6222  0008BA  D001               	goto	l19091
  6223                           
  6224                           	line	265
  6225                           	
  6226  0008BC                     l3651:; BSR set to: 1
  6227                           
  6228  0008BC  D000               	goto	l19091
  6229                           	line	266
  6230                           	
  6231  0008BE                     l3648:; BSR set to: 1
  6232                           
  6233                           	line	269
  6234                           	
  6235  0008BE                     l19091:
  6236                           ;main.c: 266: }
  6237                           ;main.c: 269: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  6238  0008BE  0100               	movlb	0	; () banked
  6239  0008C0  6FC5               	movwf	(??_main+0+0)&0ffh
  6240  0008C2  0E0A               	movlw	low(0Ah)
  6241  0008C4  0101               	movlb	1	; () banked
  6242  0008C6  0101               	movlb	1	; () banked
  6243  0008C8  6FAE               	movwf	((?_ToMainLow_recvmsg))&0ffh
  6244  0008CA  0100               	movlb	0	; () banked
  6245  0008CC  51C5               	movf	(??_main+0+0)&0ffh,w
  6246  0008CE  0101               	movlb	1	; () banked
  6247  0008D0  0E01               	movlw	high(main@msgtype)
  6248  0008D2  0101               	movlb	1	; () banked
  6249  0008D4  0101               	movlb	1	; () banked
  6250  0008D6  6FB0               	movwf	(1+(?_ToMainLow_recvmsg+01h))&0ffh
  6251  0008D8  0101               	movlb	1	; () banked
  6252  0008DA  0ECB               	movlw	low(main@msgtype)
  6253  0008DC  0101               	movlb	1	; () banked
  6254  0008DE  6FAF               	movwf	(0+(?_ToMainLow_recvmsg+01h))&0ffh
  6255  0008E0  0101               	movlb	1	; () banked
  6256  0008E2  0E01               	movlw	high(main@msgbuffer)
  6257  0008E4  0101               	movlb	1	; () banked
  6258  0008E6  0101               	movlb	1	; () banked
  6259  0008E8  6FB2               	movwf	(1+(?_ToMainLow_recvmsg+03h))&0ffh
  6260  0008EA  0101               	movlb	1	; () banked
  6261  0008EC  0EB3               	movlw	low(main@msgbuffer)
  6262  0008EE  0101               	movlb	1	; () banked
  6263  0008F0  6FB1               	movwf	(0+(?_ToMainLow_recvmsg+03h))&0ffh
  6264  0008F2  0101               	movlb	1	; () banked
  6265  0008F4  EC16  F00D         	call	_ToMainLow_recvmsg	;wreg free
  6266  0008F8  0101               	movlb	1	; () banked
  6267  0008FA  0101               	movlb	1	; () banked
  6268  0008FC  6FCA               	movwf	((main@length))&0ffh
  6269                           	line	270
  6270                           	
  6271  0008FE                     l19093:; BSR set to: 1
  6272                           
  6273                           ;main.c: 270: if (length < 0) {
  6274  0008FE  0101               	movlb	1	; () banked
  6275  000900  0101               	movlb	1	; () banked
  6276  000902  AFCA               	btfss	((main@length))&0ffh,7
  6277  000904  D001               	goto	u2191
  6278  000906  D001               	goto	u2190
  6279  000908                     u2191:
  6280  000908  D068               	goto	l19105
  6281  00090A                     u2190:
  6282  00090A  D764               	goto	l19073
  6283                           	line	272
  6284                           	
  6285  00090C                     l19095:; BSR set to: 1
  6286                           
  6287  00090C  D763               	goto	l19073
  6288                           	line	274
  6289                           	
  6290  00090E                     l3660:; BSR set to: 1
  6291                           
  6292                           	line	275
  6293                           ;main.c: 274: }
  6294                           ;main.c: 275: } else {
  6295  00090E  D762               	goto	l19073
  6296                           	
  6297  000910                     l3659:; BSR set to: 1
  6298                           
  6299                           	line	276
  6300                           ;main.c: 276: switch (msgtype) {
  6301  000910  D064               	goto	l19105
  6302                           	line	277
  6303                           ;main.c: 277: case 11:
  6304                           	
  6305  000912                     l3663:; BSR set to: 1
  6306                           
  6307                           	line	279
  6308                           	
  6309  000912                     l19097:; BSR set to: 1
  6310                           
  6311                           ;main.c: 278: {
  6312                           ;main.c: 279: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  6313  000912  0101               	movlb	1	; () banked
  6314  000914  0E01               	movlw	high(main@t1thread_data)
  6315  000916  0100               	movlb	0	; () banked
  6316  000918  0100               	movlb	0	; () banked
  6317  00091A  6FBA               	movwf	((?_timer1_lthread+1))&0ffh
  6318  00091C  0101               	movlb	1	; () banked
  6319  00091E  0EC3               	movlw	low(main@t1thread_data)
  6320  000920  0100               	movlb	0	; () banked
  6321  000922  6FB9               	movwf	((?_timer1_lthread))&0ffh
  6322  000924  0101               	movlb	1	; () banked
  6323  000926  0100               	movlb	0	; () banked
  6324  000928  C1CB  F0BB         	movff	(main@msgtype),0+(?_timer1_lthread+02h)
  6325  00092C  0100               	movlb	0	; () banked
  6326  00092E  0100               	movlb	0	; () banked
  6327  000930  6BBC               	clrf	(1+(?_timer1_lthread+02h))&0ffh
  6328  000932  0101               	movlb	1	; () banked
  6329  000934  0101               	movlb	1	; () banked
  6330  000936  51CA               	movf	((main@length))&0ffh,w
  6331  000938  0100               	movlb	0	; () banked
  6332  00093A  0100               	movlb	0	; () banked
  6333  00093C  6FBD               	movwf	(0+(?_timer1_lthread+04h))&0ffh
  6334  00093E  0100               	movlb	0	; () banked
  6335  000940  6BBE               	clrf	(1+(?_timer1_lthread+04h))&0ffh
  6336  000942  0100               	movlb	0	; () banked
  6337  000944  BFBD               	btfsc	(0+(?_timer1_lthread+04h))&0ffh,7
  6338  000946  07BE               	decf	(1+(?_timer1_lthread+04h))&0ffh
  6339  000948  0101               	movlb	1	; () banked
  6340  00094A  0E01               	movlw	high(main@msgbuffer)
  6341  00094C  0100               	movlb	0	; () banked
  6342  00094E  0100               	movlb	0	; () banked
  6343  000950  6FC0               	movwf	(1+(?_timer1_lthread+06h))&0ffh
  6344  000952  0101               	movlb	1	; () banked
  6345  000954  0EB3               	movlw	low(main@msgbuffer)
  6346  000956  0100               	movlb	0	; () banked
  6347  000958  6FBF               	movwf	(0+(?_timer1_lthread+06h))&0ffh
  6348  00095A  0100               	movlb	0	; () banked
  6349  00095C  ECA1  F00D         	call	_timer1_lthread	;wreg free
  6350                           	line	280
  6351                           ;main.c: 280: break;
  6352  000960  D739               	goto	l19073
  6353                           	line	282
  6354                           ;main.c: 281: };
  6355                           ;main.c: 282: case 40:
  6356                           	
  6357  000962                     l3665:
  6358                           	line	285
  6359                           	
  6360  000962                     l19099:
  6361                           ;main.c: 283: {
  6362                           ;main.c: 285: FromMainLow_sendmsg(length, msgtype, (void *) msgbuffer);
  6363  000962  C1CA  F1AD         	movff	(main@length),(?_FromMainLow_sendmsg)
  6364  000966  C1CB  F1AE         	movff	(main@msgtype),0+(?_FromMainLow_sendmsg+01h)
  6365  00096A  0101               	movlb	1	; () banked
  6366  00096C  0E01               	movlw	high(main@msgbuffer)
  6367  00096E  0101               	movlb	1	; () banked
  6368  000970  0101               	movlb	1	; () banked
  6369  000972  6FB0               	movwf	(1+(?_FromMainLow_sendmsg+02h))&0ffh
  6370  000974  0101               	movlb	1	; () banked
  6371  000976  0EB3               	movlw	low(main@msgbuffer)
  6372  000978  0101               	movlb	1	; () banked
  6373  00097A  6FAF               	movwf	(0+(?_FromMainLow_sendmsg+02h))&0ffh
  6374  00097C  0101               	movlb	1	; () banked
  6375  00097E  EC75  F00D         	call	_FromMainLow_sendmsg	;wreg free
  6376  000982  D001               	goto	l19101
  6377                           	line	287
  6378                           ;main.c: 286: };
  6379                           ;main.c: 287: case 30:
  6380                           	
  6381  000984                     l3666:
  6382  000984  D000               	goto	l19101
  6383                           	line	288
  6384                           	
  6385  000986                     l3667:
  6386                           	line	290
  6387                           	
  6388  000986                     l19101:
  6389                           ;main.c: 288: case 31:
  6390                           ;main.c: 289: {
  6391                           ;main.c: 290: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  6392  000986  0101               	movlb	1	; () banked
  6393  000988  0E01               	movlw	high(main@uthread_data)
  6394  00098A  0100               	movlb	0	; () banked
  6395  00098C  0100               	movlb	0	; () banked
  6396  00098E  6FBA               	movwf	((?_uart_lthread+1))&0ffh
  6397  000990  0101               	movlb	1	; () banked
  6398  000992  0EBE               	movlw	low(main@uthread_data)
  6399  000994  0100               	movlb	0	; () banked
  6400  000996  6FB9               	movwf	((?_uart_lthread))&0ffh
  6401  000998  0101               	movlb	1	; () banked
  6402  00099A  0100               	movlb	0	; () banked
  6403  00099C  C1CB  F0BB         	movff	(main@msgtype),0+(?_uart_lthread+02h)
  6404  0009A0  0100               	movlb	0	; () banked
  6405  0009A2  0100               	movlb	0	; () banked
  6406  0009A4  6BBC               	clrf	(1+(?_uart_lthread+02h))&0ffh
  6407  0009A6  0101               	movlb	1	; () banked
  6408  0009A8  0101               	movlb	1	; () banked
  6409  0009AA  51CA               	movf	((main@length))&0ffh,w
  6410  0009AC  0100               	movlb	0	; () banked
  6411  0009AE  0100               	movlb	0	; () banked
  6412  0009B0  6FBD               	movwf	(0+(?_uart_lthread+04h))&0ffh
  6413  0009B2  0100               	movlb	0	; () banked
  6414  0009B4  6BBE               	clrf	(1+(?_uart_lthread+04h))&0ffh
  6415  0009B6  0100               	movlb	0	; () banked
  6416  0009B8  BFBD               	btfsc	(0+(?_uart_lthread+04h))&0ffh,7
  6417  0009BA  07BE               	decf	(1+(?_uart_lthread+04h))&0ffh
  6418  0009BC  0101               	movlb	1	; () banked
  6419  0009BE  0E01               	movlw	high(main@msgbuffer)
  6420  0009C0  0100               	movlb	0	; () banked
  6421  0009C2  0100               	movlb	0	; () banked
  6422  0009C4  6FC0               	movwf	(1+(?_uart_lthread+06h))&0ffh
  6423  0009C6  0101               	movlb	1	; () banked
  6424  0009C8  0EB3               	movlw	low(main@msgbuffer)
  6425  0009CA  0100               	movlb	0	; () banked
  6426  0009CC  6FBF               	movwf	(0+(?_uart_lthread+06h))&0ffh
  6427  0009CE  0100               	movlb	0	; () banked
  6428  0009D0  ECB2  F00B         	call	_uart_lthread	;wreg free
  6429                           	line	291
  6430                           ;main.c: 291: break;
  6431  0009D4  D6FF               	goto	l19073
  6432                           	line	293
  6433                           ;main.c: 292: };
  6434                           ;main.c: 293: default:
  6435                           	
  6436  0009D6                     l3668:
  6437                           	line	296
  6438                           ;main.c: 294: {
  6439                           ;main.c: 296: break;
  6440  0009D6  D6FE               	goto	l19073
  6441                           	line	298
  6442                           	
  6443  0009D8                     l19103:
  6444                           ;main.c: 297: };
  6445                           ;main.c: 298: };
  6446  0009D8  D6FD               	goto	l19073
  6447                           	line	276
  6448                           	
  6449  0009DA                     l3662:
  6450                           	
  6451  0009DA                     l19105:
  6452  0009DA  0101               	movlb	1	; () banked
  6453  0009DC  0101               	movlb	1	; () banked
  6454  0009DE  51CB               	movf	((main@msgtype))&0ffh,w
  6455                           	; Switch size 1, requested type "space"
  6456                           ; Number of cases is 4, Range of values is 11 to 40
  6457                           ; switch strategies available:
  6458                           ; Name         Instructions Cycles
  6459                           ; simple_byte           13     7 (average)
  6460                           ;	Chosen strategy is simple_byte
  6461                           
  6462  0009E0  0A0B               	xorlw	11^0	; case 11
  6463  0009E2  B4D8               	skipnz
  6464  0009E4  D796               	goto	l19097
  6465  0009E6  0A15               	xorlw	30^11	; case 30
  6466  0009E8  B4D8               	skipnz
  6467  0009EA  D7CD               	goto	l19101
  6468  0009EC  0A01               	xorlw	31^30	; case 31
  6469  0009EE  B4D8               	skipnz
  6470  0009F0  D7CA               	goto	l19101
  6471  0009F2  0A37               	xorlw	40^31	; case 40
  6472  0009F4  B4D8               	skipnz
  6473  0009F6  D7B5               	goto	l19099
  6474  0009F8  D6ED               	goto	l19073
  6475                           
  6476                           	line	298
  6477                           	
  6478  0009FA                     l3664:; BSR set to: 1
  6479                           
  6480  0009FA  D6EC               	goto	l19073
  6481                           	line	299
  6482                           	
  6483  0009FC                     l3661:; BSR set to: 1
  6484                           
  6485  0009FC  D6EB               	goto	l19073
  6486                           	line	300
  6487                           	
  6488  0009FE                     l3669:; BSR set to: 1
  6489                           
  6490                           	line	191
  6491  0009FE  D6EA               	goto	l19073
  6492                           	
  6493  000A00                     l3670:; BSR set to: 1
  6494                           
  6495                           	line	302
  6496                           	
  6497  000A00                     l3671:; BSR set to: 1
  6498                           
  6499                           	global	start
  6500  000A00  EF69  F000         	goto	start
  6501                           	opt stack 0
  6502                           GLOBAL	__end_of_main
  6503  000A04                     	__end_of_main:
  6504                           	signat	_main,88
  6505                           	global	_enable_interrupts
  6506                           
  6507 ;; *************** function _enable_interrupts *****************
  6508 ;; Defined at:
  6509 ;;		line 14 in file "../src/interrupts.c"
  6510 ;; Parameters:    Size  Location     Type
  6511 ;;		None
  6512 ;; Auto vars:     Size  Location     Type
  6513 ;;		None
  6514 ;; Return value:  Size  Location     Type
  6515 ;;		None               void
  6516 ;; Registers used:
  6517 ;;		None
  6518 ;; Tracked objects:
  6519 ;;		On entry : 0/0
  6520 ;;		On exit  : 0/0
  6521 ;;		Unchanged: 0/0
  6522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6523 ;;      Params:         0       0       0       0       0
  6524 ;;      Locals:         0       0       0       0       0
  6525 ;;      Temps:          0       0       0       0       0
  6526 ;;      Totals:         0       0       0       0       0
  6527 ;;Total ram usage:        0 bytes
  6528 ;; Hardware stack levels used:    1
  6529 ;; Hardware stack levels required when called:   10
  6530 ;; This function calls:
  6531 ;;		Nothing
  6532 ;; This function is called by:
  6533 ;;		_main
  6534 ;; This function uses a non-reentrant model
  6535 ;;
  6536                           psect	text1,class=CODE,space=0,reloc=2
  6537                           global __ptext1
  6538  001C8E                     __ptext1:
  6539                           psect	text1
  6540                           	file	"../src/interrupts.c"
  6541                           	line	14
  6542                           	global	__size_of_enable_interrupts
  6543  0000                     	__size_of_enable_interrupts	equ	__end_of_enable_interrupts-_enable_interrupts
  6544                           	
  6545  001C8E                     _enable_interrupts:; BSR set to: 1
  6546                           
  6547                           	opt	stack 20
  6548                           	line	17
  6549                           	
  6550  001C8E                     l18065:
  6551                           ;interrupts.c: 17: RCONbits.IPEN = 1;
  6552  001C8E  8ED0               	bsf	((c:4048)),c,7	;volatile
  6553                           	line	18
  6554                           ;interrupts.c: 18: INTCONbits.GIEH = 1;
  6555  001C90  8EF2               	bsf	((c:4082)),c,7	;volatile
  6556                           	line	19
  6557                           ;interrupts.c: 19: INTCONbits.GIEL = 1;
  6558  001C92  8CF2               	bsf	((c:4082)),c,6	;volatile
  6559                           	line	20
  6560                           	
  6561  001C94                     l1799:
  6562  001C94  0012               	return
  6563                           	opt stack 0
  6564                           GLOBAL	__end_of_enable_interrupts
  6565  001C96                     	__end_of_enable_interrupts:
  6566                           	signat	_enable_interrupts,88
  6567                           	global	_init_uart_recv
  6568                           
  6569 ;; *************** function _init_uart_recv *****************
  6570 ;; Defined at:
  6571 ;;		line 30 in file "../src/my_uart.c"
  6572 ;; Parameters:    Size  Location     Type
  6573 ;;  uc              2   57[BANK0 ] PTR struct __uart_comm
  6574 ;;		 -> main@uc(5), 
  6575 ;; Auto vars:     Size  Location     Type
  6576 ;;		None
  6577 ;; Return value:  Size  Location     Type
  6578 ;;		None               void
  6579 ;; Registers used:
  6580 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6581 ;; Tracked objects:
  6582 ;;		On entry : 0/0
  6583 ;;		On exit  : 0/0
  6584 ;;		Unchanged: 0/0
  6585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6586 ;;      Params:         0       2       0       0       0
  6587 ;;      Locals:         0       0       0       0       0
  6588 ;;      Temps:          0       0       0       0       0
  6589 ;;      Totals:         0       2       0       0       0
  6590 ;;Total ram usage:        2 bytes
  6591 ;; Hardware stack levels used:    1
  6592 ;; Hardware stack levels required when called:   10
  6593 ;; This function calls:
  6594 ;;		Nothing
  6595 ;; This function is called by:
  6596 ;;		_main
  6597 ;; This function uses a non-reentrant model
  6598 ;;
  6599                           psect	text2,class=CODE,space=0,reloc=2
  6600                           global __ptext2
  6601  001BF2                     __ptext2:
  6602                           psect	text2
  6603                           	file	"../src/my_uart.c"
  6604                           	line	30
  6605                           	global	__size_of_init_uart_recv
  6606  0000                     	__size_of_init_uart_recv	equ	__end_of_init_uart_recv-_init_uart_recv
  6607                           	
  6608  001BF2                     _init_uart_recv:
  6609                           	opt	stack 20
  6610                           	line	31
  6611                           	
  6612  001BF2                     l18357:
  6613                           ;my_uart.c: 31: uc_ptr = uc;
  6614  001BF2  C0B9  F04A         	movff	(init_uart_recv@uc),(c:_uc_ptr)
  6615  001BF6  C0BA  F04B         	movff	(init_uart_recv@uc+1),(c:_uc_ptr+1)
  6616                           	line	32
  6617                           	
  6618  001BFA                     l18359:
  6619                           ;my_uart.c: 32: uc_ptr->buflen = 0;
  6620  001BFA  EE20 F004          	lfsr	2,04h
  6621  001BFE  504A               	movf	((c:_uc_ptr)),c,w
  6622  001C00  26D9               	addwf	fsr2l
  6623  001C02  504B               	movf	((c:_uc_ptr+1)),c,w
  6624  001C04  22DA               	addwfc	fsr2h
  6625  001C06  0E00               	movlw	low(0)
  6626  001C08  6EDF               	movwf	indf2
  6627                           	line	33
  6628                           	
  6629  001C0A                     l9209:
  6630  001C0A  0012               	return
  6631                           	opt stack 0
  6632                           GLOBAL	__end_of_init_uart_recv
  6633  001C0C                     	__end_of_init_uart_recv:
  6634                           	signat	_init_uart_recv,4216
  6635                           	global	_init_i2c
  6636                           
  6637 ;; *************** function _init_i2c *****************
  6638 ;; Defined at:
  6639 ;;		line 293 in file "../src/my_i2c.c"
  6640 ;; Parameters:    Size  Location     Type
  6641 ;;  ic              2   57[BANK0 ] PTR struct __i2c_comm
  6642 ;;		 -> main@ic(28), 
  6643 ;; Auto vars:     Size  Location     Type
  6644 ;;		None
  6645 ;; Return value:  Size  Location     Type
  6646 ;;		None               void
  6647 ;; Registers used:
  6648 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6649 ;; Tracked objects:
  6650 ;;		On entry : 0/0
  6651 ;;		On exit  : 0/0
  6652 ;;		Unchanged: 0/0
  6653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6654 ;;      Params:         0       2       0       0       0
  6655 ;;      Locals:         0       0       0       0       0
  6656 ;;      Temps:          0       0       0       0       0
  6657 ;;      Totals:         0       2       0       0       0
  6658 ;;Total ram usage:        2 bytes
  6659 ;; Hardware stack levels used:    1
  6660 ;; Hardware stack levels required when called:   10
  6661 ;; This function calls:
  6662 ;;		Nothing
  6663 ;; This function is called by:
  6664 ;;		_main
  6665 ;; This function uses a non-reentrant model
  6666 ;;
  6667                           psect	text3,class=CODE,space=0,reloc=2
  6668                           global __ptext3
  6669  0017B2                     __ptext3:
  6670                           psect	text3
  6671                           	file	"../src/my_i2c.c"
  6672                           	line	293
  6673                           	global	__size_of_init_i2c
  6674  0000                     	__size_of_init_i2c	equ	__end_of_init_i2c-_init_i2c
  6675                           	
  6676  0017B2                     _init_i2c:
  6677                           	opt	stack 20
  6678                           	line	294
  6679                           	
  6680  0017B2                     l18361:
  6681                           ;my_i2c.c: 294: ic_ptr = ic;
  6682  0017B2  C0B9  F048         	movff	(init_i2c@ic),(c:_ic_ptr)
  6683  0017B6  C0BA  F049         	movff	(init_i2c@ic+1),(c:_ic_ptr+1)
  6684                           	line	295
  6685                           	
  6686  0017BA                     l18363:
  6687                           ;my_i2c.c: 295: ic_ptr->buflen = 0;
  6688  0017BA  EE20 F00A          	lfsr	2,0Ah
  6689  0017BE  5048               	movf	((c:_ic_ptr)),c,w
  6690  0017C0  26D9               	addwf	fsr2l
  6691  0017C2  5049               	movf	((c:_ic_ptr+1)),c,w
  6692  0017C4  22DA               	addwfc	fsr2h
  6693  0017C6  0E00               	movlw	low(0)
  6694  0017C8  6EDF               	movwf	indf2
  6695                           	line	296
  6696                           ;my_i2c.c: 296: ic_ptr->event_count = 0;
  6697  0017CA  EE20 F00B          	lfsr	2,0Bh
  6698  0017CE  5048               	movf	((c:_ic_ptr)),c,w
  6699  0017D0  26D9               	addwf	fsr2l
  6700  0017D2  5049               	movf	((c:_ic_ptr+1)),c,w
  6701  0017D4  22DA               	addwfc	fsr2h
  6702  0017D6  0E00               	movlw	low(0)
  6703  0017D8  6EDF               	movwf	indf2
  6704                           	line	297
  6705                           ;my_i2c.c: 297: ic_ptr->status = 0x5;
  6706  0017DA  EE20 F00C          	lfsr	2,0Ch
  6707  0017DE  5048               	movf	((c:_ic_ptr)),c,w
  6708  0017E0  26D9               	addwf	fsr2l
  6709  0017E2  5049               	movf	((c:_ic_ptr+1)),c,w
  6710  0017E4  22DA               	addwfc	fsr2h
  6711  0017E6  0E05               	movlw	low(05h)
  6712  0017E8  6EDF               	movwf	indf2
  6713                           	line	298
  6714                           ;my_i2c.c: 298: ic_ptr->error_count = 0;
  6715  0017EA  EE20 F00E          	lfsr	2,0Eh
  6716  0017EE  5048               	movf	((c:_ic_ptr)),c,w
  6717  0017F0  26D9               	addwf	fsr2l
  6718  0017F2  5049               	movf	((c:_ic_ptr+1)),c,w
  6719  0017F4  22DA               	addwfc	fsr2h
  6720  0017F6  0E00               	movlw	low(0)
  6721  0017F8  6EDF               	movwf	indf2
  6722                           	line	299
  6723                           	
  6724  0017FA                     l7407:
  6725  0017FA  0012               	return
  6726                           	opt stack 0
  6727                           GLOBAL	__end_of_init_i2c
  6728  0017FC                     	__end_of_init_i2c:
  6729                           	signat	_init_i2c,4216
  6730                           	global	_init_timer1_lthread
  6731                           
  6732 ;; *************** function _init_timer1_lthread *****************
  6733 ;; Defined at:
  6734 ;;		line 8 in file "../src/timer1_thread.c"
  6735 ;; Parameters:    Size  Location     Type
  6736 ;;  tptr            2   62[BANK0 ] PTR struct __timer1_thre
  6737 ;;		 -> main@t1thread_data(2), 
  6738 ;; Auto vars:     Size  Location     Type
  6739 ;;		None
  6740 ;; Return value:  Size  Location     Type
  6741 ;;		None               void
  6742 ;; Registers used:
  6743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6744 ;; Tracked objects:
  6745 ;;		On entry : 0/0
  6746 ;;		On exit  : 0/0
  6747 ;;		Unchanged: 0/0
  6748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6749 ;;      Params:         0       2       0       0       0
  6750 ;;      Locals:         0       0       0       0       0
  6751 ;;      Temps:          0       3       0       0       0
  6752 ;;      Totals:         0       5       0       0       0
  6753 ;;Total ram usage:        5 bytes
  6754 ;; Hardware stack levels used:    1
  6755 ;; Hardware stack levels required when called:   11
  6756 ;; This function calls:
  6757 ;;		_OpenADC
  6758 ;;		_SetChanADC
  6759 ;; This function is called by:
  6760 ;;		_main
  6761 ;; This function uses a non-reentrant model
  6762 ;;
  6763                           psect	text4,class=CODE,space=0,reloc=2
  6764                           global __ptext4
  6765  0015F4                     __ptext4:
  6766                           psect	text4
  6767                           	file	"../src/timer1_thread.c"
  6768                           	line	8
  6769                           	global	__size_of_init_timer1_lthread
  6770  0000                     	__size_of_init_timer1_lthread	equ	__end_of_init_timer1_lthread-_init_timer1_lthread
  6771                           	
  6772  0015F4                     _init_timer1_lthread:
  6773                           	opt	stack 19
  6774                           	line	13
  6775                           	
  6776  0015F4                     l18365:
  6777                           ;timer1_thread.c: 10: OpenADC(0b10011111 & 0b11111111 & 0b11110001,
  6778                           ;timer1_thread.c: 11: 0b10000111 & 0b10001111 &
  6779                           ;timer1_thread.c: 12: 0b01111111 & 0b11111110 &
  6780                           ;timer1_thread.c: 13: 0b11111101, 0b1011);
  6781  0015F4  0100               	movlb	0	; () banked
  6782  0015F6  6FC0               	movwf	(??_init_timer1_lthread+0+0)&0ffh
  6783  0015F8  0E91               	movlw	low(091h)
  6784  0015FA  0100               	movlb	0	; () banked
  6785  0015FC  0100               	movlb	0	; () banked
  6786  0015FE  6FB9               	movwf	((?_OpenADC))&0ffh
  6787  001600  0100               	movlb	0	; () banked
  6788  001602  51C0               	movf	(??_init_timer1_lthread+0+0)&0ffh,w
  6789  001604  0100               	movlb	0	; () banked
  6790  001606  6FC1               	movwf	(??_init_timer1_lthread+1+0)&0ffh
  6791  001608  0E04               	movlw	low(04h)
  6792  00160A  0100               	movlb	0	; () banked
  6793  00160C  0100               	movlb	0	; () banked
  6794  00160E  6FBA               	movwf	(0+(?_OpenADC+01h))&0ffh
  6795  001610  0100               	movlb	0	; () banked
  6796  001612  51C1               	movf	(??_init_timer1_lthread+1+0)&0ffh,w
  6797  001614  0100               	movlb	0	; () banked
  6798  001616  6FC2               	movwf	(??_init_timer1_lthread+2+0)&0ffh
  6799  001618  0E0B               	movlw	low(0Bh)
  6800  00161A  0100               	movlb	0	; () banked
  6801  00161C  0100               	movlb	0	; () banked
  6802  00161E  6FBB               	movwf	(0+(?_OpenADC+02h))&0ffh
  6803  001620  0100               	movlb	0	; () banked
  6804  001622  51C2               	movf	(??_init_timer1_lthread+2+0)&0ffh,w
  6805  001624  0100               	movlb	0	; () banked
  6806  001626  EC46  F00A         	call	_OpenADC	;wreg free
  6807                           	line	14
  6808                           ;timer1_thread.c: 14: SetChanADC(0b10000111);
  6809  00162A  0100               	movlb	0	; () banked
  6810  00162C  6FC0               	movwf	(??_init_timer1_lthread+0+0)&0ffh
  6811  00162E  0E87               	movlw	low(087h)
  6812  001630  0100               	movlb	0	; () banked
  6813  001632  0100               	movlb	0	; () banked
  6814  001634  6FB9               	movwf	((?_SetChanADC))&0ffh
  6815  001636  0100               	movlb	0	; () banked
  6816  001638  51C0               	movf	(??_init_timer1_lthread+0+0)&0ffh,w
  6817  00163A  0100               	movlb	0	; () banked
  6818  00163C  ECEB  F00D         	call	_SetChanADC	;wreg free
  6819                           	line	16
  6820                           	
  6821  001640                     l18367:
  6822                           ;timer1_thread.c: 16: (PIR1bits.ADIF=0,INTCONbits.PEIE=1,PIE1bits.ADIE=1);
  6823  001640  9C9E               	bcf	((c:3998)),c,6	;volatile
  6824                           	
  6825  001642                     l18369:
  6826  001642  8CF2               	bsf	((c:4082)),c,6	;volatile
  6827                           	
  6828  001644                     l18371:
  6829  001644  8C9D               	bsf	((c:3997)),c,6	;volatile
  6830                           	line	17
  6831                           	
  6832  001646                     l18373:
  6833                           ;timer1_thread.c: 17: tptr->timerval = 0;
  6834  001646  C0BE  FFD9         	movff	(init_timer1_lthread@tptr),fsr2l
  6835  00164A  C0BF  FFDA         	movff	(init_timer1_lthread@tptr+1),fsr2h
  6836  00164E  0E00               	movlw	low(0)
  6837  001650  6EDE               	movwf	postinc2
  6838  001652  0E00               	movlw	high(0)
  6839  001654  6EDD               	movwf	postdec2
  6840                           	line	18
  6841                           	
  6842  001656                     l12789:
  6843  001656  0012               	return
  6844                           	opt stack 0
  6845                           GLOBAL	__end_of_init_timer1_lthread
  6846  001658                     	__end_of_init_timer1_lthread:
  6847                           	signat	_init_timer1_lthread,4216
  6848                           	global	_init_queues
  6849                           
  6850 ;; *************** function _init_queues *****************
  6851 ;; Defined at:
  6852 ;;		line 194 in file "../src/messages.c"
  6853 ;; Parameters:    Size  Location     Type
  6854 ;;		None
  6855 ;; Auto vars:     Size  Location     Type
  6856 ;;		None
  6857 ;; Return value:  Size  Location     Type
  6858 ;;		None               void
  6859 ;; Registers used:
  6860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6861 ;; Tracked objects:
  6862 ;;		On entry : 0/0
  6863 ;;		On exit  : 0/0
  6864 ;;		Unchanged: 0/0
  6865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6866 ;;      Params:         0       0       0       0       0
  6867 ;;      Locals:         0       0       0       0       0
  6868 ;;      Temps:          0       1       0       0       0
  6869 ;;      Totals:         0       1       0       0       0
  6870 ;;Total ram usage:        1 bytes
  6871 ;; Hardware stack levels used:    1
  6872 ;; Hardware stack levels required when called:   11
  6873 ;; This function calls:
  6874 ;;		_init_queue
  6875 ;; This function is called by:
  6876 ;;		_main
  6877 ;; This function uses a non-reentrant model
  6878 ;;
  6879                           psect	text5,class=CODE,space=0,reloc=2
  6880                           global __ptext5
  6881  001586                     __ptext5:
  6882                           psect	text5
  6883                           	file	"../src/messages.c"
  6884                           	line	194
  6885                           	global	__size_of_init_queues
  6886  0000                     	__size_of_init_queues	equ	__end_of_init_queues-_init_queues
  6887                           	
  6888  001586                     _init_queues:
  6889                           	opt	stack 19
  6890                           	line	195
  6891                           	
  6892  001586                     l18375:
  6893                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  6894  001586  0100               	movlb	0	; () banked
  6895  001588  6FBD               	movwf	(??_init_queues+0+0)&0ffh
  6896  00158A  0E00               	movlw	low(0)
  6897  00158C  6E45               	movwf	((c:_MQ_Main_Willing_to_block)),c
  6898  00158E  0100               	movlb	0	; () banked
  6899  001590  51BD               	movf	(??_init_queues+0+0)&0ffh,w
  6900                           	line	196
  6901                           	
  6902  001592                     l18377:; BSR set to: 0
  6903                           
  6904                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  6905  001592  0101               	movlb	1	; () banked
  6906  001594  0E01               	movlw	high(_ToMainLow_MQ)
  6907  001596  0100               	movlb	0	; () banked
  6908  001598  0100               	movlb	0	; () banked
  6909  00159A  6FBA               	movwf	((?_init_queue+1))&0ffh
  6910  00159C  0101               	movlb	1	; () banked
  6911  00159E  0E6C               	movlw	low(_ToMainLow_MQ)
  6912  0015A0  0100               	movlb	0	; () banked
  6913  0015A2  6FB9               	movwf	((?_init_queue))&0ffh
  6914  0015A4  0100               	movlb	0	; () banked
  6915  0015A6  EC03  F00A         	call	_init_queue	;wreg free
  6916                           	line	197
  6917                           	
  6918  0015AA                     l18379:
  6919                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  6920  0015AA  0101               	movlb	1	; () banked
  6921  0015AC  0E01               	movlw	high(_ToMainHigh_MQ)
  6922  0015AE  0100               	movlb	0	; () banked
  6923  0015B0  0100               	movlb	0	; () banked
  6924  0015B2  6FBA               	movwf	((?_init_queue+1))&0ffh
  6925  0015B4  0101               	movlb	1	; () banked
  6926  0015B6  0E36               	movlw	low(_ToMainHigh_MQ)
  6927  0015B8  0100               	movlb	0	; () banked
  6928  0015BA  6FB9               	movwf	((?_init_queue))&0ffh
  6929  0015BC  0100               	movlb	0	; () banked
  6930  0015BE  EC03  F00A         	call	_init_queue	;wreg free
  6931                           	line	198
  6932                           	
  6933  0015C2                     l18381:
  6934                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  6935  0015C2  0101               	movlb	1	; () banked
  6936  0015C4  0E01               	movlw	high(_FromMainLow_MQ)
  6937  0015C6  0100               	movlb	0	; () banked
  6938  0015C8  0100               	movlb	0	; () banked
  6939  0015CA  6FBA               	movwf	((?_init_queue+1))&0ffh
  6940  0015CC  0101               	movlb	1	; () banked
  6941  0015CE  0E00               	movlw	low(_FromMainLow_MQ)
  6942  0015D0  0100               	movlb	0	; () banked
  6943  0015D2  6FB9               	movwf	((?_init_queue))&0ffh
  6944  0015D4  0100               	movlb	0	; () banked
  6945  0015D6  EC03  F00A         	call	_init_queue	;wreg free
  6946                           	line	199
  6947                           	
  6948  0015DA                     l18383:
  6949                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  6950  0015DA  0102               	movlb	2	; () banked
  6951  0015DC  0E02               	movlw	high(_FromMainHigh_MQ)
  6952  0015DE  0100               	movlb	0	; () banked
  6953  0015E0  0100               	movlb	0	; () banked
  6954  0015E2  6FBA               	movwf	((?_init_queue+1))&0ffh
  6955  0015E4  0102               	movlb	2	; () banked
  6956  0015E6  0E00               	movlw	low(_FromMainHigh_MQ)
  6957  0015E8  0100               	movlb	0	; () banked
  6958  0015EA  6FB9               	movwf	((?_init_queue))&0ffh
  6959  0015EC  0100               	movlb	0	; () banked
  6960  0015EE  EC03  F00A         	call	_init_queue	;wreg free
  6961                           	line	200
  6962                           	
  6963  0015F2                     l5517:
  6964  0015F2  0012               	return
  6965                           	opt stack 0
  6966                           GLOBAL	__end_of_init_queues
  6967  0015F4                     	__end_of_init_queues:
  6968                           	signat	_init_queues,88
  6969                           	global	_OpenTimer1
  6970                           
  6971 ;; *************** function _OpenTimer1 *****************
  6972 ;; Defined at:
  6973 ;;		line 17 in file "plib/Timers/t1open.c"
  6974 ;; Parameters:    Size  Location     Type
  6975 ;;  config          1   57[BANK0 ] unsigned char 
  6976 ;; Auto vars:     Size  Location     Type
  6977 ;;		None
  6978 ;; Return value:  Size  Location     Type
  6979 ;;		None               void
  6980 ;; Registers used:
  6981 ;;		wreg, status,2, status,0
  6982 ;; Tracked objects:
  6983 ;;		On entry : 0/0
  6984 ;;		On exit  : 0/0
  6985 ;;		Unchanged: 0/0
  6986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6987 ;;      Params:         0       1       0       0       0
  6988 ;;      Locals:         0       0       0       0       0
  6989 ;;      Temps:          0       0       0       0       0
  6990 ;;      Totals:         0       1       0       0       0
  6991 ;;Total ram usage:        1 bytes
  6992 ;; Hardware stack levels used:    1
  6993 ;; Hardware stack levels required when called:   10
  6994 ;; This function calls:
  6995 ;;		Nothing
  6996 ;; This function is called by:
  6997 ;;		_main
  6998 ;; This function uses a non-reentrant model
  6999 ;;
  7000                           psect	text6,class=CODE,space=0,reloc=2
  7001                           global __ptext6
  7002  001910                     __ptext6:
  7003                           psect	text6
  7004                           	file	"plib/Timers/t1open.c"
  7005                           	line	17
  7006                           	global	__size_of_OpenTimer1
  7007  0000                     	__size_of_OpenTimer1	equ	__end_of_OpenTimer1-_OpenTimer1
  7008                           	
  7009  001910                     _OpenTimer1:
  7010                           	opt	stack 20
  7011                           	line	18
  7012                           	
  7013  001910                     l18385:
  7014  001910  0100               	movlb	0	; () banked
  7015  001912  0100               	movlb	0	; () banked
  7016  001914  51B9               	movf	((OpenTimer1@config))&0ffh,w
  7017  001916  0B7E               	andlw	low(07Eh)
  7018  001918  6ECD               	movwf	((c:4045)),c	;volatile
  7019                           	line	21
  7020                           	
  7021  00191A                     l18387:; BSR set to: 0
  7022                           
  7023  00191A  0100               	movlb	0	; () banked
  7024                           	
  7025  00191C  0100               	movlb	0	; () banked
  7026  00191E  ADB9               	btfss	((OpenTimer1@config))&0ffh,(6)&7
  7027  001920  D001               	goto	u1401
  7028  001922  D001               	goto	u1400
  7029  001924                     u1401:
  7030  001924  D002               	goto	l16451
  7031  001926                     u1400:
  7032                           	line	22
  7033                           	
  7034  001926                     l18389:; BSR set to: 0
  7035                           
  7036  001926  8ECD               	bsf	((c:4045)),c,7	;volatile
  7037  001928  D002               	goto	l18391
  7038                           	line	23
  7039                           	
  7040  00192A                     l16451:; BSR set to: 0
  7041                           
  7042                           	line	24
  7043  00192A  9ECD               	bcf	((c:4045)),c,7	;volatile
  7044  00192C  D000               	goto	l18391
  7045                           	
  7046  00192E                     l16452:; BSR set to: 0
  7047                           
  7048                           	line	26
  7049                           	
  7050  00192E                     l18391:; BSR set to: 0
  7051                           
  7052  00192E  0E00               	movlw	low(0)
  7053  001930  6ECF               	movwf	((c:4047)),c	;volatile
  7054                           	line	27
  7055  001932  0E00               	movlw	low(0)
  7056  001934  6ECE               	movwf	((c:4046)),c	;volatile
  7057                           	line	28
  7058                           	
  7059  001936                     l18393:; BSR set to: 0
  7060                           
  7061  001936  909E               	bcf	((c:3998)),c,0	;volatile
  7062                           	line	30
  7063                           	
  7064  001938                     l18395:; BSR set to: 0
  7065                           
  7066  001938  0100               	movlb	0	; () banked
  7067                           	
  7068  00193A  0100               	movlb	0	; () banked
  7069  00193C  AFB9               	btfss	((OpenTimer1@config))&0ffh,(7)&7
  7070  00193E  D001               	goto	u1411
  7071  001940  D001               	goto	u1410
  7072  001942                     u1411:
  7073  001942  D002               	goto	l16453
  7074  001944                     u1410:
  7075                           	line	31
  7076                           	
  7077  001944                     l18397:; BSR set to: 0
  7078                           
  7079  001944  809D               	bsf	((c:3997)),c,0	;volatile
  7080  001946  D001               	goto	l16454
  7081                           	line	32
  7082                           	
  7083  001948                     l16453:; BSR set to: 0
  7084                           
  7085                           	line	33
  7086  001948  909D               	bcf	((c:3997)),c,0	;volatile
  7087                           	
  7088  00194A                     l16454:; BSR set to: 0
  7089                           
  7090                           	line	35
  7091  00194A  80CD               	bsf	((c:4045)),c,0	;volatile
  7092                           	line	36
  7093                           	
  7094  00194C                     l16455:; BSR set to: 0
  7095                           
  7096  00194C  0012               	return
  7097                           	opt stack 0
  7098                           GLOBAL	__end_of_OpenTimer1
  7099  00194E                     	__end_of_OpenTimer1:
  7100                           	signat	_OpenTimer1,4216
  7101                           	global	_i2c_configure_slave
  7102                           
  7103 ;; *************** function _i2c_configure_slave *****************
  7104 ;; Defined at:
  7105 ;;		line 304 in file "../src/my_i2c.c"
  7106 ;; Parameters:    Size  Location     Type
  7107 ;;  addr            1   57[BANK0 ] unsigned char 
  7108 ;; Auto vars:     Size  Location     Type
  7109 ;;		None
  7110 ;; Return value:  Size  Location     Type
  7111 ;;		None               void
  7112 ;; Registers used:
  7113 ;;		wreg, status,2, status,0
  7114 ;; Tracked objects:
  7115 ;;		On entry : 0/0
  7116 ;;		On exit  : 0/0
  7117 ;;		Unchanged: 0/0
  7118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7119 ;;      Params:         0       1       0       0       0
  7120 ;;      Locals:         0       0       0       0       0
  7121 ;;      Temps:          0       0       0       0       0
  7122 ;;      Totals:         0       1       0       0       0
  7123 ;;Total ram usage:        1 bytes
  7124 ;; Hardware stack levels used:    1
  7125 ;; Hardware stack levels required when called:   10
  7126 ;; This function calls:
  7127 ;;		Nothing
  7128 ;; This function is called by:
  7129 ;;		_main
  7130 ;; This function uses a non-reentrant model
  7131 ;;
  7132                           psect	text7,class=CODE,space=0,reloc=2
  7133                           global __ptext7
  7134  001B8E                     __ptext7:
  7135                           psect	text7
  7136                           	file	"../src/my_i2c.c"
  7137                           	line	304
  7138                           	global	__size_of_i2c_configure_slave
  7139  0000                     	__size_of_i2c_configure_slave	equ	__end_of_i2c_configure_slave-_i2c_configure_slave
  7140                           	
  7141  001B8E                     _i2c_configure_slave:; BSR set to: 0
  7142                           
  7143                           	opt	stack 20
  7144                           	line	307
  7145                           	
  7146  001B8E                     l18399:
  7147                           ;my_i2c.c: 307: TRISCbits.TRISC3 = 1;
  7148  001B8E  8694               	bsf	((c:3988)),c,3	;volatile
  7149                           	line	308
  7150                           ;my_i2c.c: 308: TRISCbits.TRISC4 = 1;
  7151  001B90  8894               	bsf	((c:3988)),c,4	;volatile
  7152                           	line	310
  7153                           ;my_i2c.c: 310: SSPADD = addr;
  7154  001B92  C0B9  FFC8         	movff	(i2c_configure_slave@addr),(c:4040)	;volatile
  7155                           	line	312
  7156                           	
  7157  001B96                     l18401:
  7158                           ;my_i2c.c: 312: SSPSTAT = 0x0;
  7159  001B96  0E00               	movlw	low(0)
  7160  001B98  6EC7               	movwf	((c:4039)),c	;volatile
  7161                           	line	313
  7162                           ;my_i2c.c: 313: SSPCON1 = 0x0;
  7163  001B9A  0E00               	movlw	low(0)
  7164  001B9C  6EC6               	movwf	((c:4038)),c	;volatile
  7165                           	line	314
  7166                           ;my_i2c.c: 314: SSPCON2 = 0x0;
  7167  001B9E  0E00               	movlw	low(0)
  7168  001BA0  6EC5               	movwf	((c:4037)),c	;volatile
  7169                           	line	315
  7170                           	
  7171  001BA2                     l18403:
  7172                           ;my_i2c.c: 315: SSPCON1 |= 0x0E;
  7173  001BA2  0E0E               	movlw	(0Eh)&0ffh
  7174  001BA4  12C6               	iorwf	((c:4038)),c	;volatile
  7175                           	line	316
  7176                           	
  7177  001BA6                     l18405:
  7178                           ;my_i2c.c: 316: SSPSTAT |= 0b10000000;
  7179  001BA6  8EC7               	bsf	(0+(7/8)+(c:4039)),c,(7)&7	;volatile
  7180                           	line	318
  7181                           	
  7182  001BA8                     l18407:
  7183                           ;my_i2c.c: 318: TRISCbits.TRISC3 = 1;
  7184  001BA8  8694               	bsf	((c:3988)),c,3	;volatile
  7185                           	line	319
  7186                           	
  7187  001BAA                     l18409:
  7188                           ;my_i2c.c: 319: TRISCbits.TRISC4 = 1;
  7189  001BAA  8894               	bsf	((c:3988)),c,4	;volatile
  7190                           	line	329
  7191                           	
  7192  001BAC                     l18411:
  7193                           ;my_i2c.c: 329: SSPCON2bits.SEN = 1;
  7194  001BAC  80C5               	bsf	((c:4037)),c,0	;volatile
  7195                           	line	330
  7196                           	
  7197  001BAE                     l18413:
  7198                           ;my_i2c.c: 330: SSPCON1 |= 0b00100000;
  7199  001BAE  8AC6               	bsf	(0+(5/8)+(c:4038)),c,(5)&7	;volatile
  7200                           	line	332
  7201                           	
  7202  001BB0                     l7410:
  7203  001BB0  0012               	return
  7204                           	opt stack 0
  7205                           GLOBAL	__end_of_i2c_configure_slave
  7206  001BB2                     	__end_of_i2c_configure_slave:
  7207                           	signat	_i2c_configure_slave,4216
  7208                           	global	_OpenUSART
  7209                           
  7210 ;; *************** function _OpenUSART *****************
  7211 ;; Defined at:
  7212 ;;		line 74 in file "plib/USART/uopen.c"
  7213 ;; Parameters:    Size  Location     Type
  7214 ;;  config          1   57[BANK0 ] unsigned char 
  7215 ;;  spbrg           2   58[BANK0 ] unsigned int 
  7216 ;; Auto vars:     Size  Location     Type
  7217 ;;		None
  7218 ;; Return value:  Size  Location     Type
  7219 ;;		None               void
  7220 ;; Registers used:
  7221 ;;		wreg, status,2
  7222 ;; Tracked objects:
  7223 ;;		On entry : 0/0
  7224 ;;		On exit  : 0/0
  7225 ;;		Unchanged: 0/0
  7226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7227 ;;      Params:         0       3       0       0       0
  7228 ;;      Locals:         0       0       0       0       0
  7229 ;;      Temps:          0       0       0       0       0
  7230 ;;      Totals:         0       3       0       0       0
  7231 ;;Total ram usage:        3 bytes
  7232 ;; Hardware stack levels used:    1
  7233 ;; Hardware stack levels required when called:   10
  7234 ;; This function calls:
  7235 ;;		Nothing
  7236 ;; This function is called by:
  7237 ;;		_main
  7238 ;; This function uses a non-reentrant model
  7239 ;;
  7240                           psect	text8,class=CODE,space=0,reloc=2
  7241                           global __ptext8
  7242  0010C0                     __ptext8:
  7243                           psect	text8
  7244                           	file	"plib/USART/uopen.c"
  7245                           	line	74
  7246                           	global	__size_of_OpenUSART
  7247  0000                     	__size_of_OpenUSART	equ	__end_of_OpenUSART-_OpenUSART
  7248                           	
  7249  0010C0                     _OpenUSART:
  7250                           	opt	stack 20
  7251                           	line	75
  7252                           	
  7253  0010C0                     l18415:
  7254  0010C0  0E00               	movlw	low(0)
  7255  0010C2  6EAC               	movwf	((c:4012)),c	;volatile
  7256                           	line	76
  7257  0010C4  0E00               	movlw	low(0)
  7258  0010C6  6EAB               	movwf	((c:4011)),c	;volatile
  7259                           	line	78
  7260                           	
  7261  0010C8                     l18417:
  7262  0010C8  0100               	movlb	0	; () banked
  7263                           	
  7264  0010CA  0100               	movlb	0	; () banked
  7265  0010CC  A1B9               	btfss	((OpenUSART@config))&0ffh,(0)&7
  7266  0010CE  D001               	goto	u1421
  7267  0010D0  D001               	goto	u1420
  7268  0010D2                     u1421:
  7269  0010D2  D001               	goto	l16492
  7270  0010D4                     u1420:
  7271                           	line	79
  7272                           	
  7273  0010D4                     l18419:; BSR set to: 0
  7274                           
  7275  0010D4  88AC               	bsf	((c:4012)),c,4	;volatile
  7276                           	
  7277  0010D6                     l16492:; BSR set to: 0
  7278                           
  7279                           	line	81
  7280  0010D6  0100               	movlb	0	; () banked
  7281                           	
  7282  0010D8  0100               	movlb	0	; () banked
  7283  0010DA  A3B9               	btfss	((OpenUSART@config))&0ffh,(1)&7
  7284  0010DC  D001               	goto	u1431
  7285  0010DE  D001               	goto	u1430
  7286  0010E0                     u1431:
  7287  0010E0  D002               	goto	l16493
  7288  0010E2                     u1430:
  7289                           	line	83
  7290                           	
  7291  0010E2                     l18421:; BSR set to: 0
  7292                           
  7293  0010E2  8CAC               	bsf	((c:4012)),c,6	;volatile
  7294                           	line	84
  7295  0010E4  8CAB               	bsf	((c:4011)),c,6	;volatile
  7296                           	line	85
  7297                           	
  7298  0010E6                     l16493:; BSR set to: 0
  7299                           
  7300                           	line	87
  7301  0010E6  0100               	movlb	0	; () banked
  7302                           	
  7303  0010E8  0100               	movlb	0	; () banked
  7304  0010EA  A5B9               	btfss	((OpenUSART@config))&0ffh,(2)&7
  7305  0010EC  D001               	goto	u1441
  7306  0010EE  D001               	goto	u1440
  7307  0010F0                     u1441:
  7308  0010F0  D001               	goto	l16494
  7309  0010F2                     u1440:
  7310                           	line	88
  7311                           	
  7312  0010F2                     l18423:; BSR set to: 0
  7313                           
  7314  0010F2  8EAC               	bsf	((c:4012)),c,7	;volatile
  7315                           	
  7316  0010F4                     l16494:; BSR set to: 0
  7317                           
  7318                           	line	90
  7319  0010F4  0100               	movlb	0	; () banked
  7320                           	
  7321  0010F6  0100               	movlb	0	; () banked
  7322  0010F8  A7B9               	btfss	((OpenUSART@config))&0ffh,(3)&7
  7323  0010FA  D001               	goto	u1451
  7324  0010FC  D001               	goto	u1450
  7325  0010FE                     u1451:
  7326  0010FE  D002               	goto	l16495
  7327  001100                     u1450:
  7328                           	line	91
  7329                           	
  7330  001100                     l18425:; BSR set to: 0
  7331                           
  7332  001100  88AB               	bsf	((c:4011)),c,4	;volatile
  7333  001102  D001               	goto	l16496
  7334                           	line	92
  7335                           	
  7336  001104                     l16495:; BSR set to: 0
  7337                           
  7338                           	line	93
  7339  001104  8AAB               	bsf	((c:4011)),c,5	;volatile
  7340                           	
  7341  001106                     l16496:; BSR set to: 0
  7342                           
  7343                           	line	95
  7344  001106  0100               	movlb	0	; () banked
  7345                           	
  7346  001108  0100               	movlb	0	; () banked
  7347  00110A  A9B9               	btfss	((OpenUSART@config))&0ffh,(4)&7
  7348  00110C  D001               	goto	u1461
  7349  00110E  D001               	goto	u1460
  7350  001110                     u1461:
  7351  001110  D001               	goto	l16497
  7352  001112                     u1460:
  7353                           	line	96
  7354                           	
  7355  001112                     l18427:; BSR set to: 0
  7356                           
  7357  001112  84AC               	bsf	((c:4012)),c,2	;volatile
  7358                           	
  7359  001114                     l16497:; BSR set to: 0
  7360                           
  7361                           	line	98
  7362  001114  989E               	bcf	((c:3998)),c,4	;volatile
  7363                           	line	100
  7364  001116  0100               	movlb	0	; () banked
  7365                           	
  7366  001118  0100               	movlb	0	; () banked
  7367  00111A  ABB9               	btfss	((OpenUSART@config))&0ffh,(5)&7
  7368  00111C  D001               	goto	u1471
  7369  00111E  D001               	goto	u1470
  7370  001120                     u1471:
  7371  001120  D001               	goto	l16498
  7372  001122                     u1470:
  7373                           	line	101
  7374                           	
  7375  001122                     l18429:; BSR set to: 0
  7376                           
  7377  001122  86AB               	bsf	((c:4011)),c,3	;volatile
  7378                           	
  7379  001124                     l16498:; BSR set to: 0
  7380                           
  7381                           	line	103
  7382  001124  0100               	movlb	0	; () banked
  7383                           	
  7384  001126  0100               	movlb	0	; () banked
  7385  001128  ADB9               	btfss	((OpenUSART@config))&0ffh,(6)&7
  7386  00112A  D001               	goto	u1481
  7387  00112C  D001               	goto	u1480
  7388  00112E                     u1481:
  7389  00112E  D002               	goto	l16499
  7390  001130                     u1480:
  7391                           	line	104
  7392                           	
  7393  001130                     l18431:; BSR set to: 0
  7394                           
  7395  001130  8A9D               	bsf	((c:3997)),c,5	;volatile
  7396  001132  D001               	goto	l16500
  7397                           	line	105
  7398                           	
  7399  001134                     l16499:; BSR set to: 0
  7400                           
  7401                           	line	106
  7402  001134  9A9D               	bcf	((c:3997)),c,5	;volatile
  7403                           	
  7404  001136                     l16500:; BSR set to: 0
  7405                           
  7406                           	line	108
  7407  001136  9A9E               	bcf	((c:3998)),c,5	;volatile
  7408                           	line	110
  7409  001138  0100               	movlb	0	; () banked
  7410                           	
  7411  00113A  0100               	movlb	0	; () banked
  7412  00113C  AFB9               	btfss	((OpenUSART@config))&0ffh,(7)&7
  7413  00113E  D001               	goto	u1491
  7414  001140  D001               	goto	u1490
  7415  001142                     u1491:
  7416  001142  D002               	goto	l16501
  7417  001144                     u1490:
  7418                           	line	111
  7419                           	
  7420  001144                     l18433:; BSR set to: 0
  7421                           
  7422  001144  889D               	bsf	((c:3997)),c,4	;volatile
  7423  001146  D001               	goto	l16502
  7424                           	line	112
  7425                           	
  7426  001148                     l16501:; BSR set to: 0
  7427                           
  7428                           	line	113
  7429  001148  989D               	bcf	((c:3997)),c,4	;volatile
  7430                           	
  7431  00114A                     l16502:; BSR set to: 0
  7432                           
  7433                           	line	115
  7434  00114A  C0BA  FFAF         	movff	(OpenUSART@spbrg),(c:4015)	;volatile
  7435                           	line	116
  7436                           	
  7437  00114E                     l18435:; BSR set to: 0
  7438                           
  7439  00114E  0100               	movlb	0	; () banked
  7440  001150  0100               	movlb	0	; () banked
  7441  001152  51BB               	movf	((OpenUSART@spbrg+1))&0ffh,w
  7442  001154  6EB0               	movwf	((c:4016)),c	;volatile
  7443                           	line	118
  7444                           	
  7445  001156                     l18437:; BSR set to: 0
  7446                           
  7447  001156  8AAC               	bsf	((c:4012)),c,5	;volatile
  7448                           	line	119
  7449                           	
  7450  001158                     l18439:; BSR set to: 0
  7451                           
  7452  001158  8EAB               	bsf	((c:4011)),c,7	;volatile
  7453                           	line	137
  7454                           	
  7455  00115A                     l18441:; BSR set to: 0
  7456                           
  7457  00115A  9C94               	bcf	((c:3988)),c,6	;volatile
  7458                           	
  7459  00115C                     l18443:; BSR set to: 0
  7460                           
  7461  00115C  8E94               	bsf	((c:3988)),c,7	;volatile
  7462                           	line	138
  7463                           	
  7464  00115E                     l18445:; BSR set to: 0
  7465                           
  7466                           	
  7467  00115E  A8AC               	btfss	((c:4012)),c,4	;volatile
  7468  001160  D001               	goto	u1501
  7469  001162  D001               	goto	u1500
  7470  001164                     u1501:
  7471  001164  D006               	goto	l16504
  7472  001166                     u1500:
  7473                           	
  7474  001166                     l18447:; BSR set to: 0
  7475                           
  7476                           	
  7477  001166  BEAC               	btfsc	((c:4012)),c,7	;volatile
  7478  001168  D001               	goto	u1511
  7479  00116A  D001               	goto	u1510
  7480  00116C                     u1511:
  7481  00116C  D002               	goto	l16504
  7482  00116E                     u1510:
  7483                           	line	139
  7484                           	
  7485  00116E                     l18449:; BSR set to: 0
  7486                           
  7487  00116E  8C94               	bsf	((c:3988)),c,6	;volatile
  7488  001170  D000               	goto	l16504
  7489                           	
  7490  001172                     l16503:; BSR set to: 0
  7491                           
  7492                           	line	143
  7493                           	
  7494  001172                     l16504:; BSR set to: 0
  7495                           
  7496  001172  0012               	return
  7497                           	opt stack 0
  7498                           GLOBAL	__end_of_OpenUSART
  7499  001174                     	__end_of_OpenUSART:
  7500                           	signat	_OpenUSART,8312
  7501                           	global	_block_on_To_msgqueues
  7502                           
  7503 ;; *************** function _block_on_To_msgqueues *****************
  7504 ;; Defined at:
  7505 ;;		line 258 in file "../src/messages.c"
  7506 ;; Parameters:    Size  Location     Type
  7507 ;;		None
  7508 ;; Auto vars:     Size  Location     Type
  7509 ;;		None
  7510 ;; Return value:  Size  Location     Type
  7511 ;;		None               void
  7512 ;; Registers used:
  7513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7514 ;; Tracked objects:
  7515 ;;		On entry : 0/0
  7516 ;;		On exit  : 0/0
  7517 ;;		Unchanged: 0/0
  7518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7519 ;;      Params:         0       0       0       0       0
  7520 ;;      Locals:         0       0       0       0       0
  7521 ;;      Temps:          0       1       0       0       0
  7522 ;;      Totals:         0       1       0       0       0
  7523 ;;Total ram usage:        1 bytes
  7524 ;; Hardware stack levels used:    1
  7525 ;; Hardware stack levels required when called:   13
  7526 ;; This function calls:
  7527 ;;		_in_main
  7528 ;;		_check_msg
  7529 ;;		_Delay1KTCYx
  7530 ;; This function is called by:
  7531 ;;		_main
  7532 ;; This function uses a non-reentrant model
  7533 ;;
  7534                           psect	text9,class=CODE,space=0,reloc=2
  7535                           global __ptext9
  7536  000E76                     __ptext9:
  7537                           psect	text9
  7538                           	file	"../src/messages.c"
  7539                           	line	258
  7540                           	global	__size_of_block_on_To_msgqueues
  7541  0000                     	__size_of_block_on_To_msgqueues	equ	__end_of_block_on_To_msgqueues-_block_on_To_msgqueu
                                 es
  7542                           	
  7543  000E76                     _block_on_To_msgqueues:; BSR set to: 0
  7544                           
  7545                           	opt	stack 17
  7546                           	line	259
  7547                           	
  7548  000E76                     l18451:
  7549                           ;messages.c: 259: if (!in_main()) {
  7550  000E76  0100               	movlb	0	; () banked
  7551  000E78  EC5B  F00B         	call	_in_main	;wreg free
  7552  000E7C  0100               	movlb	0	; () banked
  7553  000E7E  0100               	movlb	0	; () banked
  7554  000E80  51BE               	movf	(1+?_in_main)&0ffh,w
  7555  000E82  0100               	movlb	0	; () banked
  7556  000E84  11BD               	iorwf (0+?_in_main)&0ffh,w
  7557                           
  7558  000E86  A4D8               	btfss	status,2
  7559  000E88  D001               	goto	u1521
  7560  000E8A  D001               	goto	u1520
  7561  000E8C                     u1521:
  7562  000E8C  D002               	goto	l5534
  7563  000E8E                     u1520:
  7564  000E8E  D05C               	goto	l5535
  7565                           	line	260
  7566                           	
  7567  000E90                     l18453:; BSR set to: 0
  7568                           
  7569                           ;messages.c: 260: return;
  7570  000E90  D05B               	goto	l5535
  7571                           	line	261
  7572                           	
  7573  000E92                     l5534:; BSR set to: 0
  7574                           
  7575                           	line	262
  7576                           ;messages.c: 261: }
  7577                           ;messages.c: 262: LATBbits.LATB3 = 1;
  7578  000E92  868A               	bsf	((c:3978)),c,3	;volatile
  7579                           	line	263
  7580                           	
  7581  000E94                     l18455:; BSR set to: 0
  7582                           
  7583                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  7584  000E94  0100               	movlb	0	; () banked
  7585  000E96  6FBF               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7586  000E98  0E01               	movlw	low(01h)
  7587  000E9A  6E45               	movwf	((c:_MQ_Main_Willing_to_block)),c
  7588  000E9C  0100               	movlb	0	; () banked
  7589  000E9E  51BF               	movf	(??_block_on_To_msgqueues+0+0)&0ffh,w
  7590  000EA0  D000               	goto	l18457
  7591                           	line	264
  7592                           ;messages.c: 264: while (1) {
  7593                           	
  7594  000EA2                     l5536:; BSR set to: 0
  7595                           
  7596                           	line	265
  7597                           	
  7598  000EA2                     l18457:; BSR set to: 0
  7599                           
  7600                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  7601  000EA2  0101               	movlb	1	; () banked
  7602  000EA4  0E01               	movlw	high(_ToMainHigh_MQ)
  7603  000EA6  0100               	movlb	0	; () banked
  7604  000EA8  0100               	movlb	0	; () banked
  7605  000EAA  6FBA               	movwf	((?_check_msg+1))&0ffh
  7606  000EAC  0101               	movlb	1	; () banked
  7607  000EAE  0E36               	movlw	low(_ToMainHigh_MQ)
  7608  000EB0  0100               	movlb	0	; () banked
  7609  000EB2  6FB9               	movwf	((?_check_msg))&0ffh
  7610  000EB4  0100               	movlb	0	; () banked
  7611  000EB6  ECC6  F00C         	call	_check_msg	;wreg free
  7612  000EBA  0900               	iorlw	0
  7613  000EBC  B4D8               	btfsc	status,2
  7614  000EBE  D001               	goto	u1531
  7615  000EC0  D001               	goto	u1530
  7616  000EC2                     u1531:
  7617  000EC2  D009               	goto	l18465
  7618  000EC4                     u1530:
  7619                           	line	266
  7620                           	
  7621  000EC4                     l18459:
  7622                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  7623  000EC4  0100               	movlb	0	; () banked
  7624  000EC6  6FBF               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7625  000EC8  0E00               	movlw	low(0)
  7626  000ECA  6E45               	movwf	((c:_MQ_Main_Willing_to_block)),c
  7627  000ECC  0100               	movlb	0	; () banked
  7628  000ECE  51BF               	movf	(??_block_on_To_msgqueues+0+0)&0ffh,w
  7629                           	line	267
  7630                           	
  7631  000ED0                     l18461:; BSR set to: 0
  7632                           
  7633                           ;messages.c: 267: LATBbits.LATB3 = 0;
  7634  000ED0  968A               	bcf	((c:3978)),c,3	;volatile
  7635  000ED2  D03A               	goto	l5535
  7636                           	line	268
  7637                           	
  7638  000ED4                     l18463:; BSR set to: 0
  7639                           
  7640                           ;messages.c: 268: return;
  7641  000ED4  D039               	goto	l5535
  7642                           	line	269
  7643                           	
  7644  000ED6                     l5537:; BSR set to: 0
  7645                           
  7646                           	line	270
  7647                           	
  7648  000ED6                     l18465:
  7649                           ;messages.c: 269: }
  7650                           ;messages.c: 270: if (check_msg(&ToMainLow_MQ)) {
  7651  000ED6  0101               	movlb	1	; () banked
  7652  000ED8  0E01               	movlw	high(_ToMainLow_MQ)
  7653  000EDA  0100               	movlb	0	; () banked
  7654  000EDC  0100               	movlb	0	; () banked
  7655  000EDE  6FBA               	movwf	((?_check_msg+1))&0ffh
  7656  000EE0  0101               	movlb	1	; () banked
  7657  000EE2  0E6C               	movlw	low(_ToMainLow_MQ)
  7658  000EE4  0100               	movlb	0	; () banked
  7659  000EE6  6FB9               	movwf	((?_check_msg))&0ffh
  7660  000EE8  0100               	movlb	0	; () banked
  7661  000EEA  ECC6  F00C         	call	_check_msg	;wreg free
  7662  000EEE  0900               	iorlw	0
  7663  000EF0  B4D8               	btfsc	status,2
  7664  000EF2  D001               	goto	u1541
  7665  000EF4  D001               	goto	u1540
  7666  000EF6                     u1541:
  7667  000EF6  D009               	goto	l18473
  7668  000EF8                     u1540:
  7669                           	line	271
  7670                           	
  7671  000EF8                     l18467:
  7672                           ;messages.c: 271: MQ_Main_Willing_to_block = 0;
  7673  000EF8  0100               	movlb	0	; () banked
  7674  000EFA  6FBF               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7675  000EFC  0E00               	movlw	low(0)
  7676  000EFE  6E45               	movwf	((c:_MQ_Main_Willing_to_block)),c
  7677  000F00  0100               	movlb	0	; () banked
  7678  000F02  51BF               	movf	(??_block_on_To_msgqueues+0+0)&0ffh,w
  7679                           	line	272
  7680                           	
  7681  000F04                     l18469:; BSR set to: 0
  7682                           
  7683                           ;messages.c: 272: LATBbits.LATB3 = 0;
  7684  000F04  968A               	bcf	((c:3978)),c,3	;volatile
  7685  000F06  D020               	goto	l5535
  7686                           	line	273
  7687                           	
  7688  000F08                     l18471:; BSR set to: 0
  7689                           
  7690                           ;messages.c: 273: return;
  7691  000F08  D01F               	goto	l5535
  7692                           	line	274
  7693                           	
  7694  000F0A                     l5538:; BSR set to: 0
  7695                           
  7696                           	line	275
  7697                           	
  7698  000F0A                     l18473:
  7699                           ;messages.c: 274: }
  7700                           ;messages.c: 275: Delay1KTCYx(10);
  7701  000F0A  0100               	movlb	0	; () banked
  7702  000F0C  6FBF               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7703  000F0E  0E0A               	movlw	low(0Ah)
  7704  000F10  0100               	movlb	0	; () banked
  7705  000F12  0100               	movlb	0	; () banked
  7706  000F14  6FB9               	movwf	((?_Delay1KTCYx))&0ffh
  7707  000F16  0100               	movlb	0	; () banked
  7708  000F18  51BF               	movf	(??_block_on_To_msgqueues+0+0)&0ffh,w
  7709  000F1A  0100               	movlb	0	; () banked
  7710  000F1C  EC10  F00E         	call	_Delay1KTCYx	;wreg free
  7711                           	line	276
  7712                           	
  7713  000F20                     l18475:
  7714                           ;messages.c: 276: LATBbits.LATB3 = !LATBbits.LATB3;
  7715                           	
  7716  000F20  A68A               	btfss	((c:3978)),c,3	;volatile
  7717  000F22  D001               	goto	u1551
  7718  000F24  D002               	goto	u1550
  7719  000F26                     u1551:
  7720  000F26  0E01               	movlw	1
  7721  000F28  D001               	goto	u1556
  7722  000F2A                     u1550:
  7723  000F2A  0E00               	movlw	0
  7724  000F2C                     u1556:
  7725  000F2C  0100               	movlb	0	; () banked
  7726  000F2E  6FBF               	movwf	(??_block_on_To_msgqueues+0+0)&0ffh
  7727  000F30  0100               	movlb	0	; () banked
  7728  000F32  47BF               	rlncf	((??_block_on_To_msgqueues+0+0))&0ffh
  7729  000F34  47BF               	rlncf	((??_block_on_To_msgqueues+0+0))&0ffh
  7730  000F36  47BF               	rlncf	((??_block_on_To_msgqueues+0+0))&0ffh
  7731  000F38  508A               	movf	((c:3978)),c,w	;volatile
  7732  000F3A  0100               	movlb	0	; () banked
  7733  000F3C  19BF               	xorwf	((??_block_on_To_msgqueues+0+0))&0ffh,w
  7734  000F3E  0BF7               	andlw	not (((1<<1)-1)<<3)
  7735  000F40  19BF               	xorwf	((??_block_on_To_msgqueues+0+0))&0ffh,w
  7736  000F42  6E8A               	movwf	((c:3978)),c	;volatile
  7737  000F44  D7AE               	goto	l18457
  7738                           	line	277
  7739                           	
  7740  000F46                     l5539:; BSR set to: 0
  7741                           
  7742                           	line	264
  7743  000F46  D7AD               	goto	l18457
  7744                           	
  7745  000F48                     l5540:; BSR set to: 0
  7746                           
  7747                           	line	278
  7748                           	
  7749  000F48                     l5535:; BSR set to: 0
  7750                           
  7751  000F48  0012               	return
  7752                           	opt stack 0
  7753                           GLOBAL	__end_of_block_on_To_msgqueues
  7754  000F4A                     	__end_of_block_on_To_msgqueues:
  7755                           	signat	_block_on_To_msgqueues,88
  7756                           	global	_in_main
  7757                           
  7758 ;; *************** function _in_main *****************
  7759 ;; Defined at:
  7760 ;;		line 40 in file "../src/interrupts.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;		None
  7763 ;; Auto vars:     Size  Location     Type
  7764 ;;		None
  7765 ;; Return value:  Size  Location     Type
  7766 ;;                  2   61[BANK0 ] int 
  7767 ;; Registers used:
  7768 ;;		wreg, status,2, status,0, cstack
  7769 ;; Tracked objects:
  7770 ;;		On entry : 0/0
  7771 ;;		On exit  : 0/0
  7772 ;;		Unchanged: 0/0
  7773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7774 ;;      Params:         0       2       0       0       0
  7775 ;;      Locals:         0       0       0       0       0
  7776 ;;      Temps:          0       0       0       0       0
  7777 ;;      Totals:         0       2       0       0       0
  7778 ;;Total ram usage:        2 bytes
  7779 ;; Hardware stack levels used:    1
  7780 ;; Hardware stack levels required when called:   12
  7781 ;; This function calls:
  7782 ;;		_in_low_int
  7783 ;;		_in_high_int
  7784 ;; This function is called by:
  7785 ;;		_block_on_To_msgqueues
  7786 ;; This function uses a non-reentrant model
  7787 ;;
  7788                           psect	text10,class=CODE,space=0,reloc=2
  7789                           global __ptext10
  7790  0016B6                     __ptext10:
  7791                           psect	text10
  7792                           	file	"../src/interrupts.c"
  7793                           	line	40
  7794                           	global	__size_of_in_main
  7795  0000                     	__size_of_in_main	equ	__end_of_in_main-_in_main
  7796                           	
  7797  0016B6                     _in_main:; BSR set to: 0
  7798                           
  7799                           	opt	stack 17
  7800                           	line	41
  7801                           	
  7802  0016B6                     l18091:
  7803                           ;interrupts.c: 41: if ((!in_low_int()) && (!in_high_int())) {
  7804  0016B6  0100               	movlb	0	; () banked
  7805  0016B8  EC2C  F00B         	call	_in_low_int	;wreg free
  7806  0016BC  0100               	movlb	0	; () banked
  7807  0016BE  0100               	movlb	0	; () banked
  7808  0016C0  51BC               	movf	(1+?_in_low_int)&0ffh,w
  7809  0016C2  0100               	movlb	0	; () banked
  7810  0016C4  11BB               	iorwf (0+?_in_low_int)&0ffh,w
  7811                           
  7812  0016C6  A4D8               	btfss	status,2
  7813  0016C8  D001               	goto	u1001
  7814  0016CA  D001               	goto	u1000
  7815  0016CC                     u1001:
  7816  0016CC  D016               	goto	l18101
  7817  0016CE                     u1000:
  7818                           	
  7819  0016CE                     l18093:; BSR set to: 0
  7820                           
  7821  0016CE  0100               	movlb	0	; () banked
  7822  0016D0  EC06  F00E         	call	_in_high_int	;wreg free
  7823  0016D4  0100               	movlb	0	; () banked
  7824  0016D6  0100               	movlb	0	; () banked
  7825  0016D8  51BA               	movf	(1+?_in_high_int)&0ffh,w
  7826  0016DA  0100               	movlb	0	; () banked
  7827  0016DC  11B9               	iorwf (0+?_in_high_int)&0ffh,w
  7828                           
  7829  0016DE  A4D8               	btfss	status,2
  7830  0016E0  D001               	goto	u1011
  7831  0016E2  D001               	goto	u1010
  7832  0016E4                     u1011:
  7833  0016E4  D00A               	goto	l18101
  7834  0016E6                     u1010:
  7835                           	line	42
  7836                           	
  7837  0016E6                     l18095:; BSR set to: 0
  7838                           
  7839                           ;interrupts.c: 42: return (1);
  7840  0016E6  0E00               	movlw	high(01h)
  7841  0016E8  0100               	movlb	0	; () banked
  7842  0016EA  0100               	movlb	0	; () banked
  7843  0016EC  6FBE               	movwf	((?_in_main+1))&0ffh
  7844  0016EE  0E01               	movlw	low(01h)
  7845  0016F0  0100               	movlb	0	; () banked
  7846  0016F2  6FBD               	movwf	((?_in_main))&0ffh
  7847  0016F4  D00B               	goto	l1816
  7848                           	
  7849  0016F6                     l18097:; BSR set to: 0
  7850                           
  7851  0016F6  D00A               	goto	l1816
  7852                           	line	43
  7853                           	
  7854  0016F8                     l18099:; BSR set to: 0
  7855                           
  7856                           ;interrupts.c: 43: } else {
  7857  0016F8  D009               	goto	l1816
  7858                           	
  7859  0016FA                     l1815:; BSR set to: 0
  7860                           
  7861                           	line	44
  7862                           	
  7863  0016FA                     l18101:; BSR set to: 0
  7864                           
  7865                           ;interrupts.c: 44: return (0);
  7866  0016FA  0E00               	movlw	high(0)
  7867  0016FC  0100               	movlb	0	; () banked
  7868  0016FE  0100               	movlb	0	; () banked
  7869  001700  6FBE               	movwf	((?_in_main+1))&0ffh
  7870  001702  0E00               	movlw	low(0)
  7871  001704  0100               	movlb	0	; () banked
  7872  001706  6FBD               	movwf	((?_in_main))&0ffh
  7873  001708  D001               	goto	l1816
  7874                           	
  7875  00170A                     l18103:; BSR set to: 0
  7876                           
  7877  00170A  D000               	goto	l1816
  7878                           	line	45
  7879                           	
  7880  00170C                     l1817:; BSR set to: 0
  7881                           
  7882                           	line	46
  7883                           	
  7884  00170C                     l1816:; BSR set to: 0
  7885                           
  7886  00170C  0012               	return
  7887                           	opt stack 0
  7888                           GLOBAL	__end_of_in_main
  7889  00170E                     	__end_of_in_main:
  7890                           	signat	_in_main,90
  7891                           	global	_in_low_int
  7892                           
  7893 ;; *************** function _in_low_int *****************
  7894 ;; Defined at:
  7895 ;;		line 30 in file "../src/interrupts.c"
  7896 ;; Parameters:    Size  Location     Type
  7897 ;;		None
  7898 ;; Auto vars:     Size  Location     Type
  7899 ;;		None
  7900 ;; Return value:  Size  Location     Type
  7901 ;;                  2   59[BANK0 ] int 
  7902 ;; Registers used:
  7903 ;;		wreg, status,2, status,0, cstack
  7904 ;; Tracked objects:
  7905 ;;		On entry : 0/0
  7906 ;;		On exit  : 0/0
  7907 ;;		Unchanged: 0/0
  7908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7909 ;;      Params:         0       2       0       0       0
  7910 ;;      Locals:         0       0       0       0       0
  7911 ;;      Temps:          0       0       0       0       0
  7912 ;;      Totals:         0       2       0       0       0
  7913 ;;Total ram usage:        2 bytes
  7914 ;; Hardware stack levels used:    1
  7915 ;; Hardware stack levels required when called:   11
  7916 ;; This function calls:
  7917 ;;		_in_high_int
  7918 ;; This function is called by:
  7919 ;;		_in_main
  7920 ;; This function uses a non-reentrant model
  7921 ;;
  7922                           psect	text11,class=CODE,space=0,reloc=2
  7923                           global __ptext11
  7924  001658                     __ptext11:
  7925                           psect	text11
  7926                           	file	"../src/interrupts.c"
  7927                           	line	30
  7928                           	global	__size_of_in_low_int
  7929  0000                     	__size_of_in_low_int	equ	__end_of_in_low_int-_in_low_int
  7930                           	
  7931  001658                     _in_low_int:; BSR set to: 0
  7932                           
  7933                           	opt	stack 17
  7934                           	line	31
  7935                           	
  7936  001658                     l18071:
  7937                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
  7938                           	
  7939  001658  ACF2               	btfss	((c:4082)),c,6	;volatile
  7940  00165A  D001               	goto	u981
  7941  00165C  D001               	goto	u980
  7942  00165E                     u981:
  7943  00165E  D00A               	goto	l18079
  7944  001660                     u980:
  7945                           	line	32
  7946                           	
  7947  001660                     l18073:
  7948                           ;interrupts.c: 32: return (0);
  7949  001660  0E00               	movlw	high(0)
  7950  001662  0100               	movlb	0	; () banked
  7951  001664  0100               	movlb	0	; () banked
  7952  001666  6FBC               	movwf	((?_in_low_int+1))&0ffh
  7953  001668  0E00               	movlw	low(0)
  7954  00166A  0100               	movlb	0	; () banked
  7955  00166C  6FBB               	movwf	((?_in_low_int))&0ffh
  7956  00166E  D022               	goto	l1809
  7957                           	
  7958  001670                     l18075:; BSR set to: 0
  7959                           
  7960  001670  D021               	goto	l1809
  7961                           	line	33
  7962                           	
  7963  001672                     l18077:; BSR set to: 0
  7964                           
  7965                           ;interrupts.c: 33: } else if (in_high_int()) {
  7966  001672  D020               	goto	l1809
  7967                           	
  7968  001674                     l1808:; BSR set to: 0
  7969                           
  7970                           	
  7971  001674                     l18079:
  7972  001674  0100               	movlb	0	; () banked
  7973  001676  EC06  F00E         	call	_in_high_int	;wreg free
  7974  00167A  0100               	movlb	0	; () banked
  7975  00167C  0100               	movlb	0	; () banked
  7976  00167E  51BA               	movf	(1+?_in_high_int)&0ffh,w
  7977  001680  0100               	movlb	0	; () banked
  7978  001682  11B9               	iorwf (0+?_in_high_int)&0ffh,w
  7979                           
  7980  001684  B4D8               	btfsc	status,2
  7981  001686  D001               	goto	u991
  7982  001688  D001               	goto	u990
  7983  00168A                     u991:
  7984  00168A  D00A               	goto	l18087
  7985  00168C                     u990:
  7986                           	line	34
  7987                           	
  7988  00168C                     l18081:; BSR set to: 0
  7989                           
  7990                           ;interrupts.c: 34: return (0);
  7991  00168C  0E00               	movlw	high(0)
  7992  00168E  0100               	movlb	0	; () banked
  7993  001690  0100               	movlb	0	; () banked
  7994  001692  6FBC               	movwf	((?_in_low_int+1))&0ffh
  7995  001694  0E00               	movlw	low(0)
  7996  001696  0100               	movlb	0	; () banked
  7997  001698  6FBB               	movwf	((?_in_low_int))&0ffh
  7998  00169A  D00C               	goto	l1809
  7999                           	
  8000  00169C                     l18083:; BSR set to: 0
  8001                           
  8002  00169C  D00B               	goto	l1809
  8003                           	line	35
  8004                           	
  8005  00169E                     l18085:; BSR set to: 0
  8006                           
  8007                           ;interrupts.c: 35: } else {
  8008  00169E  D00A               	goto	l1809
  8009                           	
  8010  0016A0                     l1811:; BSR set to: 0
  8011                           
  8012                           	line	36
  8013                           	
  8014  0016A0                     l18087:; BSR set to: 0
  8015                           
  8016                           ;interrupts.c: 36: return (1);
  8017  0016A0  0E00               	movlw	high(01h)
  8018  0016A2  0100               	movlb	0	; () banked
  8019  0016A4  0100               	movlb	0	; () banked
  8020  0016A6  6FBC               	movwf	((?_in_low_int+1))&0ffh
  8021  0016A8  0E01               	movlw	low(01h)
  8022  0016AA  0100               	movlb	0	; () banked
  8023  0016AC  6FBB               	movwf	((?_in_low_int))&0ffh
  8024  0016AE  D002               	goto	l1809
  8025                           	
  8026  0016B0                     l18089:; BSR set to: 0
  8027                           
  8028  0016B0  D001               	goto	l1809
  8029                           	line	37
  8030                           	
  8031  0016B2                     l1812:; BSR set to: 0
  8032                           
  8033  0016B2  D000               	goto	l1809
  8034                           	
  8035  0016B4                     l1810:; BSR set to: 0
  8036                           
  8037                           	line	38
  8038                           	
  8039  0016B4                     l1809:; BSR set to: 0
  8040                           
  8041  0016B4  0012               	return
  8042                           	opt stack 0
  8043                           GLOBAL	__end_of_in_low_int
  8044  0016B6                     	__end_of_in_low_int:
  8045                           	signat	_in_low_int,90
  8046                           	global	_in_high_int
  8047                           
  8048 ;; *************** function _in_high_int *****************
  8049 ;; Defined at:
  8050 ;;		line 22 in file "../src/interrupts.c"
  8051 ;; Parameters:    Size  Location     Type
  8052 ;;		None
  8053 ;; Auto vars:     Size  Location     Type
  8054 ;;		None
  8055 ;; Return value:  Size  Location     Type
  8056 ;;                  2   57[BANK0 ] int 
  8057 ;; Registers used:
  8058 ;;		wreg, status,2
  8059 ;; Tracked objects:
  8060 ;;		On entry : 0/0
  8061 ;;		On exit  : 0/0
  8062 ;;		Unchanged: 0/0
  8063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8064 ;;      Params:         0       2       0       0       0
  8065 ;;      Locals:         0       0       0       0       0
  8066 ;;      Temps:          0       0       0       0       0
  8067 ;;      Totals:         0       2       0       0       0
  8068 ;;Total ram usage:        2 bytes
  8069 ;; Hardware stack levels used:    1
  8070 ;; Hardware stack levels required when called:   10
  8071 ;; This function calls:
  8072 ;;		Nothing
  8073 ;; This function is called by:
  8074 ;;		_in_low_int
  8075 ;;		_in_main
  8076 ;; This function uses a non-reentrant model
  8077 ;;
  8078                           psect	text12,class=CODE,space=0,reloc=2
  8079                           global __ptext12
  8080  001C0C                     __ptext12:
  8081                           psect	text12
  8082                           	file	"../src/interrupts.c"
  8083                           	line	22
  8084                           	global	__size_of_in_high_int
  8085  0000                     	__size_of_in_high_int	equ	__end_of_in_high_int-_in_high_int
  8086                           	
  8087  001C0C                     _in_high_int:; BSR set to: 0
  8088                           
  8089                           	opt	stack 18
  8090                           	line	23
  8091                           	
  8092  001C0C                     l18067:
  8093                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
  8094                           	
  8095  001C0C  0E00               	movlw	0
  8096  001C0E  AEF2               	btfss	((c:4082)),c,7	;volatile
  8097  001C10  0E01               	movlw	1
  8098  001C12  0100               	movlb	0	; () banked
  8099  001C14  0100               	movlb	0	; () banked
  8100  001C16  6FB9               	movwf	((?_in_high_int))&0ffh
  8101  001C18  0100               	movlb	0	; () banked
  8102  001C1A  6BBA               	clrf	((?_in_high_int+1))&0ffh
  8103  001C1C  D000               	goto	l1802
  8104                           	
  8105  001C1E                     l18069:; BSR set to: 0
  8106                           
  8107                           	line	24
  8108                           	
  8109  001C1E                     l1802:; BSR set to: 0
  8110                           
  8111  001C1E  0012               	return
  8112                           	opt stack 0
  8113                           GLOBAL	__end_of_in_high_int
  8114  001C20                     	__end_of_in_high_int:
  8115                           	signat	_in_high_int,90
  8116                           	global	_ToMainHigh_recvmsg
  8117                           
  8118 ;; *************** function _ToMainHigh_recvmsg *****************
  8119 ;; Defined at:
  8120 ;;		line 135 in file "../src/messages.c"
  8121 ;; Parameters:    Size  Location     Type
  8122 ;;  maxlength       1   12[BANK1 ] unsigned char 
  8123 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  8124 ;;		 -> main@msgtype(1), 
  8125 ;;  data            2   15[BANK1 ] PTR void 
  8126 ;;		 -> main@msgbuffer(11), 
  8127 ;; Auto vars:     Size  Location     Type
  8128 ;;		None
  8129 ;; Return value:  Size  Location     Type
  8130 ;;                  1    wreg      char 
  8131 ;; Registers used:
  8132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8133 ;; Tracked objects:
  8134 ;;		On entry : 0/0
  8135 ;;		On exit  : 0/0
  8136 ;;		Unchanged: 0/0
  8137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8138 ;;      Params:         0       0       5       0       0
  8139 ;;      Locals:         0       0       0       0       0
  8140 ;;      Temps:          0       0       0       0       0
  8141 ;;      Totals:         0       0       5       0       0
  8142 ;;Total ram usage:        5 bytes
  8143 ;; Hardware stack levels used:    1
  8144 ;; Hardware stack levels required when called:   12
  8145 ;; This function calls:
  8146 ;;		_recv_msg
  8147 ;; This function is called by:
  8148 ;;		_main
  8149 ;; This function uses a non-reentrant model
  8150 ;;
  8151                           psect	text13,class=CODE,space=0,reloc=2
  8152                           global __ptext13
  8153  0019FC                     __ptext13:
  8154                           psect	text13
  8155                           	file	"../src/messages.c"
  8156                           	line	135
  8157                           	global	__size_of_ToMainHigh_recvmsg
  8158  0000                     	__size_of_ToMainHigh_recvmsg	equ	__end_of_ToMainHigh_recvmsg-_ToMainHigh_recvmsg
  8159                           	
  8160  0019FC                     _ToMainHigh_recvmsg:; BSR set to: 0
  8161                           
  8162                           	opt	stack 18
  8163                           	line	141
  8164                           	
  8165  0019FC                     l19107:
  8166                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  8167  0019FC  0101               	movlb	1	; () banked
  8168  0019FE  0E01               	movlw	high(_ToMainHigh_MQ)
  8169  001A00  0101               	movlb	1	; () banked
  8170  001A02  0101               	movlb	1	; () banked
  8171  001A04  6FA3               	movwf	((?_recv_msg+1))&0ffh
  8172  001A06  0101               	movlb	1	; () banked
  8173  001A08  0E36               	movlw	low(_ToMainHigh_MQ)
  8174  001A0A  0101               	movlb	1	; () banked
  8175  001A0C  6FA2               	movwf	((?_recv_msg))&0ffh
  8176  001A0E  C1AE  F1A4         	movff	(ToMainHigh_recvmsg@maxlength),0+(?_recv_msg+02h)
  8177  001A12  C1AF  F1A5         	movff	(ToMainHigh_recvmsg@msgtype),0+(?_recv_msg+03h)
  8178  001A16  C1B0  F1A6         	movff	(ToMainHigh_recvmsg@msgtype+1),1+(?_recv_msg+03h)
  8179  001A1A  C1B1  F1A7         	movff	(ToMainHigh_recvmsg@data),0+(?_recv_msg+05h)
  8180  001A1E  C1B2  F1A8         	movff	(ToMainHigh_recvmsg@data+1),1+(?_recv_msg+05h)
  8181  001A22  0101               	movlb	1	; () banked
  8182  001A24  EC02  F005         	call	_recv_msg	;wreg free
  8183  001A28  D000               	goto	l5496
  8184                           	
  8185  001A2A                     l19109:
  8186                           	line	142
  8187                           	
  8188  001A2A                     l5496:
  8189  001A2A  0012               	return
  8190                           	opt stack 0
  8191                           GLOBAL	__end_of_ToMainHigh_recvmsg
  8192  001A2C                     	__end_of_ToMainHigh_recvmsg:
  8193                           	signat	_ToMainHigh_recvmsg,12409
  8194                           	global	_timer0_lthread
  8195                           
  8196 ;; *************** function _timer0_lthread *****************
  8197 ;; Defined at:
  8198 ;;		line 9 in file "../src/timer0_thread.c"
  8199 ;; Parameters:    Size  Location     Type
  8200 ;;  tptr            2   57[BANK0 ] PTR struct __timer0_thre
  8201 ;;		 -> main@t0thread_data(2), 
  8202 ;;  msgtype         2   59[BANK0 ] int 
  8203 ;;  length          2   61[BANK0 ] int 
  8204 ;;  msgbuffer       2   63[BANK0 ] PTR unsigned char 
  8205 ;;		 -> main@msgbuffer(11), 
  8206 ;; Auto vars:     Size  Location     Type
  8207 ;;  msgval          2   65[BANK0 ] PTR unsigned int 
  8208 ;;		 -> main@msgbuffer(11), 
  8209 ;; Return value:  Size  Location     Type
  8210 ;;                  2   57[BANK0 ] int 
  8211 ;; Registers used:
  8212 ;;		None
  8213 ;; Tracked objects:
  8214 ;;		On entry : 0/0
  8215 ;;		On exit  : 0/0
  8216 ;;		Unchanged: 0/0
  8217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8218 ;;      Params:         0       8       0       0       0
  8219 ;;      Locals:         0       2       0       0       0
  8220 ;;      Temps:          0       0       0       0       0
  8221 ;;      Totals:         0      10       0       0       0
  8222 ;;Total ram usage:       10 bytes
  8223 ;; Hardware stack levels used:    1
  8224 ;; Hardware stack levels required when called:   10
  8225 ;; This function calls:
  8226 ;;		Nothing
  8227 ;; This function is called by:
  8228 ;;		_main
  8229 ;; This function uses a non-reentrant model
  8230 ;;
  8231                           psect	text14,class=CODE,space=0,reloc=2
  8232                           global __ptext14
  8233  001C84                     __ptext14:
  8234                           psect	text14
  8235                           	file	"../src/timer0_thread.c"
  8236                           	line	9
  8237                           	global	__size_of_timer0_lthread
  8238  0000                     	__size_of_timer0_lthread	equ	__end_of_timer0_lthread-_timer0_lthread
  8239                           	
  8240  001C84                     _timer0_lthread:
  8241                           	opt	stack 20
  8242                           	line	12
  8243                           	
  8244  001C84                     l18481:
  8245                           ;timer0_thread.c: 10: unsigned int *msgval;
  8246                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  8247  001C84  C0BF  F0C1         	movff	(timer0_lthread@msgbuffer),(timer0_lthread@msgval)
  8248  001C88  C0C0  F0C2         	movff	(timer0_lthread@msgbuffer+1),(timer0_lthread@msgval+1)
  8249                           	line	16
  8250                           	
  8251  001C8C                     l10996:
  8252  001C8C  0012               	return
  8253                           	opt stack 0
  8254                           GLOBAL	__end_of_timer0_lthread
  8255  001C8E                     	__end_of_timer0_lthread:
  8256                           	signat	_timer0_lthread,16506
  8257                           	global	_ToMainLow_recvmsg
  8258                           
  8259 ;; *************** function _ToMainLow_recvmsg *****************
  8260 ;; Defined at:
  8261 ;;		line 112 in file "../src/messages.c"
  8262 ;; Parameters:    Size  Location     Type
  8263 ;;  maxlength       1   12[BANK1 ] unsigned char 
  8264 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  8265 ;;		 -> main@msgtype(1), 
  8266 ;;  data            2   15[BANK1 ] PTR void 
  8267 ;;		 -> main@msgbuffer(11), 
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;		None
  8270 ;; Return value:  Size  Location     Type
  8271 ;;                  1    wreg      char 
  8272 ;; Registers used:
  8273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8274 ;; Tracked objects:
  8275 ;;		On entry : 0/0
  8276 ;;		On exit  : 0/0
  8277 ;;		Unchanged: 0/0
  8278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8279 ;;      Params:         0       0       5       0       0
  8280 ;;      Locals:         0       0       0       0       0
  8281 ;;      Temps:          0       0       0       0       0
  8282 ;;      Totals:         0       0       5       0       0
  8283 ;;Total ram usage:        5 bytes
  8284 ;; Hardware stack levels used:    1
  8285 ;; Hardware stack levels required when called:   12
  8286 ;; This function calls:
  8287 ;;		_recv_msg
  8288 ;; This function is called by:
  8289 ;;		_main
  8290 ;; This function uses a non-reentrant model
  8291 ;;
  8292                           psect	text15,class=CODE,space=0,reloc=2
  8293                           global __ptext15
  8294  001A2C                     __ptext15:
  8295                           psect	text15
  8296                           	file	"../src/messages.c"
  8297                           	line	112
  8298                           	global	__size_of_ToMainLow_recvmsg
  8299  0000                     	__size_of_ToMainLow_recvmsg	equ	__end_of_ToMainLow_recvmsg-_ToMainLow_recvmsg
  8300                           	
  8301  001A2C                     _ToMainLow_recvmsg:
  8302                           	opt	stack 18
  8303                           	line	118
  8304                           	
  8305  001A2C                     l19111:
  8306                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  8307  001A2C  0101               	movlb	1	; () banked
  8308  001A2E  0E01               	movlw	high(_ToMainLow_MQ)
  8309  001A30  0101               	movlb	1	; () banked
  8310  001A32  0101               	movlb	1	; () banked
  8311  001A34  6FA3               	movwf	((?_recv_msg+1))&0ffh
  8312  001A36  0101               	movlb	1	; () banked
  8313  001A38  0E6C               	movlw	low(_ToMainLow_MQ)
  8314  001A3A  0101               	movlb	1	; () banked
  8315  001A3C  6FA2               	movwf	((?_recv_msg))&0ffh
  8316  001A3E  C1AE  F1A4         	movff	(ToMainLow_recvmsg@maxlength),0+(?_recv_msg+02h)
  8317  001A42  C1AF  F1A5         	movff	(ToMainLow_recvmsg@msgtype),0+(?_recv_msg+03h)
  8318  001A46  C1B0  F1A6         	movff	(ToMainLow_recvmsg@msgtype+1),1+(?_recv_msg+03h)
  8319  001A4A  C1B1  F1A7         	movff	(ToMainLow_recvmsg@data),0+(?_recv_msg+05h)
  8320  001A4E  C1B2  F1A8         	movff	(ToMainLow_recvmsg@data+1),1+(?_recv_msg+05h)
  8321  001A52  0101               	movlb	1	; () banked
  8322  001A54  EC02  F005         	call	_recv_msg	;wreg free
  8323  001A58  D000               	goto	l5488
  8324                           	
  8325  001A5A                     l19113:
  8326                           	line	119
  8327                           	
  8328  001A5A                     l5488:
  8329  001A5A  0012               	return
  8330                           	opt stack 0
  8331                           GLOBAL	__end_of_ToMainLow_recvmsg
  8332  001A5C                     	__end_of_ToMainLow_recvmsg:
  8333                           	signat	_ToMainLow_recvmsg,12409
  8334                           	global	_timer1_lthread
  8335                           
  8336 ;; *************** function _timer1_lthread *****************
  8337 ;; Defined at:
  8338 ;;		line 24 in file "../src/timer1_thread.c"
  8339 ;; Parameters:    Size  Location     Type
  8340 ;;  tptr            2   57[BANK0 ] PTR struct __timer1_thre
  8341 ;;		 -> main@t1thread_data(2), 
  8342 ;;  msgtype         2   59[BANK0 ] int 
  8343 ;;  length          2   61[BANK0 ] int 
  8344 ;;  msgbuffer       2   63[BANK0 ] PTR unsigned char 
  8345 ;;		 -> main@msgbuffer(11), 
  8346 ;; Auto vars:     Size  Location     Type
  8347 ;;		None
  8348 ;; Return value:  Size  Location     Type
  8349 ;;                  2   57[BANK0 ] int 
  8350 ;; Registers used:
  8351 ;;		wreg, fsr2l, fsr2h, cstack
  8352 ;; Tracked objects:
  8353 ;;		On entry : 0/0
  8354 ;;		On exit  : 0/0
  8355 ;;		Unchanged: 0/0
  8356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8357 ;;      Params:         0       8       0       0       0
  8358 ;;      Locals:         0       0       0       0       0
  8359 ;;      Temps:          0       2       0       0       0
  8360 ;;      Totals:         0      10       0       0       0
  8361 ;;Total ram usage:       10 bytes
  8362 ;; Hardware stack levels used:    1
  8363 ;; Hardware stack levels required when called:   11
  8364 ;; This function calls:
  8365 ;;		_ConvertADC
  8366 ;; This function is called by:
  8367 ;;		_main
  8368 ;; This function uses a non-reentrant model
  8369 ;;
  8370                           psect	text16,class=CODE,space=0,reloc=2
  8371                           global __ptext16
  8372  001B42                     __ptext16:
  8373                           psect	text16
  8374                           	file	"../src/timer1_thread.c"
  8375                           	line	24
  8376                           	global	__size_of_timer1_lthread
  8377  0000                     	__size_of_timer1_lthread	equ	__end_of_timer1_lthread-_timer1_lthread
  8378                           	
  8379  001B42                     _timer1_lthread:
  8380                           	opt	stack 19
  8381                           	line	26
  8382                           	
  8383  001B42                     l18487:
  8384                           ;timer1_thread.c: 26: tptr->timerval = msgbuffer[0];
  8385  001B42  C0BF  FFD9         	movff	(timer1_lthread@msgbuffer),fsr2l
  8386  001B46  C0C0  FFDA         	movff	(timer1_lthread@msgbuffer+1),fsr2h
  8387  001B4A  50DF               	movf	indf2,w
  8388  001B4C  0100               	movlb	0	; () banked
  8389  001B4E  6FC1               	movwf	(??_timer1_lthread+0+0)&0ffh
  8390  001B50  6BC2               	clrf	(??_timer1_lthread+0+0+1)&0ffh
  8391                           
  8392  001B52  C0B9  FFD9         	movff	(timer1_lthread@tptr),fsr2l
  8393  001B56  C0BA  FFDA         	movff	(timer1_lthread@tptr+1),fsr2h
  8394  001B5A  C0C1  FFDE         	movff	??_timer1_lthread+0+0,postinc2
  8395  001B5E  C0C2  FFDD         	movff	??_timer1_lthread+0+1,postdec2
  8396                           
  8397                           	line	28
  8398                           	
  8399  001B62                     l18489:; BSR set to: 0
  8400                           
  8401                           ;timer1_thread.c: 28: ConvertADC();
  8402  001B62  EC4E  F00E         	call	_ConvertADC	;wreg free
  8403                           	line	29
  8404                           	
  8405  001B66                     l12792:
  8406  001B66  0012               	return
  8407                           	opt stack 0
  8408                           GLOBAL	__end_of_timer1_lthread
  8409  001B68                     	__end_of_timer1_lthread:
  8410                           	signat	_timer1_lthread,16506
  8411                           	global	_FromMainLow_sendmsg
  8412                           
  8413 ;; *************** function _FromMainLow_sendmsg *****************
  8414 ;; Defined at:
  8415 ;;		line 150 in file "../src/messages.c"
  8416 ;; Parameters:    Size  Location     Type
  8417 ;;  length          1   11[BANK1 ] unsigned char 
  8418 ;;  msgtype         1   12[BANK1 ] unsigned char 
  8419 ;;  data            2   13[BANK1 ] PTR void 
  8420 ;;		 -> main@msgbuffer(11), 
  8421 ;; Auto vars:     Size  Location     Type
  8422 ;;		None
  8423 ;; Return value:  Size  Location     Type
  8424 ;;                  1    wreg      char 
  8425 ;; Registers used:
  8426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8427 ;; Tracked objects:
  8428 ;;		On entry : 0/0
  8429 ;;		On exit  : 0/0
  8430 ;;		Unchanged: 0/0
  8431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8432 ;;      Params:         0       0       4       0       0
  8433 ;;      Locals:         0       0       0       0       0
  8434 ;;      Temps:          0       0       0       0       0
  8435 ;;      Totals:         0       0       4       0       0
  8436 ;;Total ram usage:        4 bytes
  8437 ;; Hardware stack levels used:    1
  8438 ;; Hardware stack levels required when called:   12
  8439 ;; This function calls:
  8440 ;;		_send_msg
  8441 ;; This function is called by:
  8442 ;;		_main
  8443 ;; This function uses a non-reentrant model
  8444 ;;
  8445                           psect	text17,class=CODE,space=0,reloc=2
  8446                           global __ptext17
  8447  001AEA                     __ptext17:
  8448                           psect	text17
  8449                           	file	"../src/messages.c"
  8450                           	line	150
  8451                           	global	__size_of_FromMainLow_sendmsg
  8452  0000                     	__size_of_FromMainLow_sendmsg	equ	__end_of_FromMainLow_sendmsg-_FromMainLow_sendmsg
  8453                           	
  8454  001AEA                     _FromMainLow_sendmsg:
  8455                           	opt	stack 18
  8456                           	line	156
  8457                           	
  8458  001AEA                     l19115:
  8459                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  8460                           ;	Return value of _FromMainLow_sendmsg is never used
  8461  001AEA  0101               	movlb	1	; () banked
  8462  001AEC  0E01               	movlw	high(_FromMainLow_MQ)
  8463  001AEE  0101               	movlb	1	; () banked
  8464  001AF0  0101               	movlb	1	; () banked
  8465  001AF2  6FA3               	movwf	((?_send_msg+1))&0ffh
  8466  001AF4  0101               	movlb	1	; () banked
  8467  001AF6  0E00               	movlw	low(_FromMainLow_MQ)
  8468  001AF8  0101               	movlb	1	; () banked
  8469  001AFA  6FA2               	movwf	((?_send_msg))&0ffh
  8470  001AFC  C1AD  F1A4         	movff	(FromMainLow_sendmsg@length),0+(?_send_msg+02h)
  8471  001B00  C1AE  F1A5         	movff	(FromMainLow_sendmsg@msgtype),0+(?_send_msg+03h)
  8472  001B04  C1AF  F1A6         	movff	(FromMainLow_sendmsg@data),0+(?_send_msg+04h)
  8473  001B08  C1B0  F1A7         	movff	(FromMainLow_sendmsg@data+1),1+(?_send_msg+04h)
  8474  001B0C  0101               	movlb	1	; () banked
  8475  001B0E  EC3B  F006         	call	_send_msg	;wreg free
  8476  001B12  D000               	goto	l5501
  8477                           	
  8478  001B14                     l19117:
  8479                           	line	157
  8480                           	
  8481  001B14                     l5501:
  8482  001B14  0012               	return
  8483                           	opt stack 0
  8484                           GLOBAL	__end_of_FromMainLow_sendmsg
  8485  001B16                     	__end_of_FromMainLow_sendmsg:
  8486                           	signat	_FromMainLow_sendmsg,12409
  8487                           	global	_uart_lthread
  8488                           
  8489 ;; *************** function _uart_lthread *****************
  8490 ;; Defined at:
  8491 ;;		line 9 in file "../src/uart_thread.c"
  8492 ;; Parameters:    Size  Location     Type
  8493 ;;  uptr            2   57[BANK0 ] PTR struct __uart_thread
  8494 ;;		 -> main@uthread_data(2), 
  8495 ;;  msgtype         2   59[BANK0 ] int 
  8496 ;;  length          2   61[BANK0 ] int 
  8497 ;;  msgbuffer       2   63[BANK0 ] PTR unsigned char 
  8498 ;;		 -> main@msgbuffer(11), 
  8499 ;; Auto vars:     Size  Location     Type
  8500 ;;		None
  8501 ;; Return value:  Size  Location     Type
  8502 ;;                  2   57[BANK0 ] int 
  8503 ;; Registers used:
  8504 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8505 ;; Tracked objects:
  8506 ;;		On entry : 0/0
  8507 ;;		On exit  : 0/0
  8508 ;;		Unchanged: 0/0
  8509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8510 ;;      Params:         0       8       0       0       0
  8511 ;;      Locals:         0       0       0       0       0
  8512 ;;      Temps:          0       0       0       0       0
  8513 ;;      Totals:         0       8       0       0       0
  8514 ;;Total ram usage:        8 bytes
  8515 ;; Hardware stack levels used:    1
  8516 ;; Hardware stack levels required when called:   10
  8517 ;; This function calls:
  8518 ;;		Nothing
  8519 ;; This function is called by:
  8520 ;;		_main
  8521 ;; This function uses a non-reentrant model
  8522 ;;
  8523                           psect	text18,class=CODE,space=0,reloc=2
  8524                           global __ptext18
  8525  001764                     __ptext18:
  8526                           psect	text18
  8527                           	file	"../src/uart_thread.c"
  8528                           	line	9
  8529                           	global	__size_of_uart_lthread
  8530  0000                     	__size_of_uart_lthread	equ	__end_of_uart_lthread-_uart_lthread
  8531                           	
  8532  001764                     _uart_lthread:
  8533                           	opt	stack 20
  8534                           	line	10
  8535                           	
  8536  001764                     l18495:
  8537                           ;uart_thread.c: 10: if (msgtype == 30) {
  8538  001764  0100               	movlb	0	; () banked
  8539  001766  0100               	movlb	0	; () banked
  8540  001768  51BB               	movf	((uart_lthread@msgtype))&0ffh,w
  8541  00176A  0A1E               	xorlw	30
  8542  00176C  11BC               	iorwf ((uart_lthread@msgtype+1))&0ffh,w
  8543                           
  8544  00176E  A4D8               	btfss	status,2
  8545  001770  D001               	goto	u1561
  8546  001772  D001               	goto	u1560
  8547  001774                     u1561:
  8548  001774  D002               	goto	l18499
  8549  001776                     u1560:
  8550  001776  D01C               	goto	l14582
  8551                           	line	11
  8552                           	
  8553  001778                     l18497:; BSR set to: 0
  8554                           
  8555                           ;uart_thread.c: 11: } else if (msgtype == 31) {
  8556  001778  D01B               	goto	l14582
  8557                           	
  8558  00177A                     l14579:; BSR set to: 0
  8559                           
  8560                           	
  8561  00177A                     l18499:; BSR set to: 0
  8562                           
  8563  00177A  0100               	movlb	0	; () banked
  8564  00177C  0100               	movlb	0	; () banked
  8565  00177E  51BB               	movf	((uart_lthread@msgtype))&0ffh,w
  8566  001780  0A1F               	xorlw	31
  8567  001782  11BC               	iorwf ((uart_lthread@msgtype+1))&0ffh,w
  8568                           
  8569  001784  A4D8               	btfss	status,2
  8570  001786  D001               	goto	u1571
  8571  001788  D001               	goto	u1570
  8572  00178A                     u1571:
  8573  00178A  D012               	goto	l14582
  8574  00178C                     u1570:
  8575                           	line	14
  8576                           	
  8577  00178C                     l18501:; BSR set to: 0
  8578                           
  8579                           ;uart_thread.c: 14: msgbuffer[length] = '\0';
  8580  00178C  0100               	movlb	0	; () banked
  8581  00178E  0100               	movlb	0	; () banked
  8582  001790  51BD               	movf	((uart_lthread@length))&0ffh,w
  8583  001792  0100               	movlb	0	; () banked
  8584  001794  0100               	movlb	0	; () banked
  8585  001796  25BF               	addwf	((uart_lthread@msgbuffer))&0ffh,w
  8586  001798  6ED9               	movwf	c:fsr2l
  8587  00179A  0100               	movlb	0	; () banked
  8588  00179C  0100               	movlb	0	; () banked
  8589  00179E  51BE               	movf	((uart_lthread@length+1))&0ffh,w
  8590  0017A0  0100               	movlb	0	; () banked
  8591  0017A2  0100               	movlb	0	; () banked
  8592  0017A4  21C0               	addwfc	((uart_lthread@msgbuffer+1))&0ffh,w
  8593  0017A6  6EDA               	movwf	1+c:fsr2l
  8594  0017A8  0E00               	movlw	low(0)
  8595  0017AA  6EDF               	movwf	indf2
  8596  0017AC  D001               	goto	l14582
  8597                           	line	16
  8598                           	
  8599  0017AE                     l14581:; BSR set to: 0
  8600                           
  8601  0017AE  D000               	goto	l14582
  8602                           	line	17
  8603                           	
  8604  0017B0                     l14580:; BSR set to: 0
  8605                           
  8606                           	
  8607  0017B0                     l14582:; BSR set to: 0
  8608                           
  8609  0017B0  0012               	return
  8610                           	opt stack 0
  8611                           GLOBAL	__end_of_uart_lthread
  8612  0017B2                     	__end_of_uart_lthread:
  8613                           	signat	_uart_lthread,16506
  8614                           	global	_init_queue
  8615                           
  8616 ;; *************** function _init_queue *****************
  8617 ;; Defined at:
  8618 ;;		line 14 in file "../src/messages.c"
  8619 ;; Parameters:    Size  Location     Type
  8620 ;;  qptr            2   57[BANK0 ] PTR struct __msg_queue
  8621 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8622 ;; Auto vars:     Size  Location     Type
  8623 ;;  i               1   60[BANK0 ] unsigned char 
  8624 ;; Return value:  Size  Location     Type
  8625 ;;		None               void
  8626 ;; Registers used:
  8627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8628 ;; Tracked objects:
  8629 ;;		On entry : 0/0
  8630 ;;		On exit  : 0/0
  8631 ;;		Unchanged: 0/0
  8632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8633 ;;      Params:         0       2       0       0       0
  8634 ;;      Locals:         0       1       0       0       0
  8635 ;;      Temps:          0       1       0       0       0
  8636 ;;      Totals:         0       4       0       0       0
  8637 ;;Total ram usage:        4 bytes
  8638 ;; Hardware stack levels used:    1
  8639 ;; Hardware stack levels required when called:   10
  8640 ;; This function calls:
  8641 ;;		Nothing
  8642 ;; This function is called by:
  8643 ;;		_init_queues
  8644 ;; This function uses a non-reentrant model
  8645 ;;
  8646                           psect	text19,class=CODE,space=0,reloc=2
  8647                           global __ptext19
  8648  001406                     __ptext19:
  8649                           psect	text19
  8650                           	file	"../src/messages.c"
  8651                           	line	14
  8652                           	global	__size_of_init_queue
  8653  0000                     	__size_of_init_queue	equ	__end_of_init_queue-_init_queue
  8654                           	
  8655  001406                     _init_queue:; BSR set to: 0
  8656                           
  8657                           	opt	stack 19
  8658                           	line	17
  8659                           	
  8660  001406                     l18503:
  8661                           ;messages.c: 15: unsigned char i;
  8662                           ;messages.c: 17: qptr->cur_write_ind = 0;
  8663  001406  0100               	movlb	0	; () banked
  8664  001408  EE20 F034          	lfsr	2,034h
  8665  00140C  0100               	movlb	0	; () banked
  8666  00140E  51B9               	movf	((init_queue@qptr))&0ffh,w
  8667  001410  26D9               	addwf	fsr2l
  8668  001412  0100               	movlb	0	; () banked
  8669  001414  51BA               	movf	((init_queue@qptr+1))&0ffh,w
  8670  001416  22DA               	addwfc	fsr2h
  8671  001418  0E00               	movlw	low(0)
  8672  00141A  6EDF               	movwf	indf2
  8673                           	line	18
  8674                           ;messages.c: 18: qptr->cur_read_ind = 0;
  8675  00141C  0100               	movlb	0	; () banked
  8676  00141E  EE20 F035          	lfsr	2,035h
  8677  001422  0100               	movlb	0	; () banked
  8678  001424  51B9               	movf	((init_queue@qptr))&0ffh,w
  8679  001426  26D9               	addwf	fsr2l
  8680  001428  0100               	movlb	0	; () banked
  8681  00142A  51BA               	movf	((init_queue@qptr+1))&0ffh,w
  8682  00142C  22DA               	addwfc	fsr2h
  8683  00142E  0E00               	movlw	low(0)
  8684  001430  6EDF               	movwf	indf2
  8685                           	line	19
  8686                           	
  8687  001432                     l18505:; BSR set to: 0
  8688                           
  8689                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  8690  001432  0100               	movlb	0	; () banked
  8691  001434  6FBB               	movwf	(??_init_queue+0+0)&0ffh
  8692  001436  0E00               	movlw	low(0)
  8693  001438  0100               	movlb	0	; () banked
  8694  00143A  0100               	movlb	0	; () banked
  8695  00143C  6FBC               	movwf	((init_queue@i))&0ffh
  8696  00143E  0100               	movlb	0	; () banked
  8697  001440  51BB               	movf	(??_init_queue+0+0)&0ffh,w
  8698                           	
  8699  001442                     l18507:; BSR set to: 0
  8700                           
  8701  001442  0E03               	movlw	(04h-1)
  8702  001444  0100               	movlb	0	; () banked
  8703  001446  0100               	movlb	0	; () banked
  8704  001448  65BC               	cpfsgt	((init_queue@i))&0ffh
  8705  00144A  D001               	goto	u1581
  8706  00144C  D001               	goto	u1580
  8707  00144E                     u1581:
  8708  00144E  D002               	goto	l18511
  8709  001450                     u1580:
  8710  001450  D01C               	goto	l5470
  8711                           	
  8712  001452                     l18509:; BSR set to: 0
  8713                           
  8714  001452  D01B               	goto	l5470
  8715                           	
  8716  001454                     l5468:; BSR set to: 0
  8717                           
  8718                           	line	20
  8719                           	
  8720  001454                     l18511:; BSR set to: 0
  8721                           
  8722                           ;messages.c: 20: qptr->queue[i].full = 0;
  8723  001454  0100               	movlb	0	; () banked
  8724  001456  0100               	movlb	0	; () banked
  8725  001458  51BC               	movf	((init_queue@i))&0ffh,w
  8726  00145A  0D0D               	mullw	0Dh
  8727  00145C  50F3               	movf	(prodl),c,w
  8728  00145E  0100               	movlb	0	; () banked
  8729  001460  0100               	movlb	0	; () banked
  8730  001462  25B9               	addwf	((init_queue@qptr))&0ffh,w
  8731  001464  6ED9               	movwf	c:fsr2l
  8732  001466  50F4               	movf	(prodh),c,w
  8733  001468  0100               	movlb	0	; () banked
  8734  00146A  0100               	movlb	0	; () banked
  8735  00146C  21BA               	addwfc	((init_queue@qptr+1))&0ffh,w
  8736  00146E  6EDA               	movwf	1+c:fsr2l
  8737  001470  0E00               	movlw	low(0)
  8738  001472  6EDF               	movwf	indf2
  8739                           	line	19
  8740                           	
  8741  001474                     l18513:; BSR set to: 0
  8742                           
  8743  001474  0100               	movlb	0	; () banked
  8744  001476  0100               	movlb	0	; () banked
  8745  001478  2BBC               	incf	((init_queue@i))&0ffh
  8746                           	
  8747  00147A                     l18515:; BSR set to: 0
  8748                           
  8749  00147A  0E03               	movlw	(04h-1)
  8750  00147C  0100               	movlb	0	; () banked
  8751  00147E  0100               	movlb	0	; () banked
  8752  001480  65BC               	cpfsgt	((init_queue@i))&0ffh
  8753  001482  D001               	goto	u1591
  8754  001484  D001               	goto	u1590
  8755  001486                     u1591:
  8756  001486  D7E6               	goto	l18511
  8757  001488                     u1590:
  8758  001488  D000               	goto	l5470
  8759                           	
  8760  00148A                     l5469:; BSR set to: 0
  8761                           
  8762                           	line	22
  8763                           	
  8764  00148A                     l5470:; BSR set to: 0
  8765                           
  8766  00148A  0012               	return
  8767                           	opt stack 0
  8768                           GLOBAL	__end_of_init_queue
  8769  00148C                     	__end_of_init_queue:
  8770                           	signat	_init_queue,4216
  8771                           	global	_send_msg
  8772                           
  8773 ;; *************** function _send_msg *****************
  8774 ;; Defined at:
  8775 ;;		line 24 in file "../src/messages.c"
  8776 ;; Parameters:    Size  Location     Type
  8777 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  8778 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8779 ;;  length          1    2[BANK1 ] unsigned char 
  8780 ;;  msgtype         1    3[BANK1 ] unsigned char 
  8781 ;;  data            2    4[BANK1 ] PTR void 
  8782 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
  8783 ;;		 -> i2c_int_handler@error_buf(3), main@msgbuffer(11), main@uc(5), 
  8784 ;; Auto vars:     Size  Location     Type
  8785 ;;  qmsg            2    9[BANK1 ] PTR struct __msg
  8786 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8787 ;;  tlength         2    6[BANK1 ] unsigned int 
  8788 ;;  slot            1    8[BANK1 ] unsigned char 
  8789 ;; Return value:  Size  Location     Type
  8790 ;;                  1    wreg      char 
  8791 ;; Registers used:
  8792 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8793 ;; Tracked objects:
  8794 ;;		On entry : 0/0
  8795 ;;		On exit  : 0/0
  8796 ;;		Unchanged: 0/0
  8797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8798 ;;      Params:         0       0       6       0       0
  8799 ;;      Locals:         0       0       5       0       0
  8800 ;;      Temps:          0       1       0       0       0
  8801 ;;      Totals:         0       1      11       0       0
  8802 ;;Total ram usage:       12 bytes
  8803 ;; Hardware stack levels used:    1
  8804 ;; Hardware stack levels required when called:   11
  8805 ;; This function calls:
  8806 ;;		_memcpy
  8807 ;; This function is called by:
  8808 ;;		_FromMainLow_sendmsg
  8809 ;;		_FromMainHigh_sendmsg
  8810 ;; This function uses a non-reentrant model
  8811 ;;
  8812                           psect	text20,class=CODE,space=0,reloc=2
  8813                           global __ptext20
  8814  000C76                     __ptext20:
  8815                           psect	text20
  8816                           	file	"../src/messages.c"
  8817                           	line	24
  8818                           	global	__size_of_send_msg
  8819  0000                     	__size_of_send_msg	equ	__end_of_send_msg-_send_msg
  8820                           	
  8821  000C76                     _send_msg:; BSR set to: 0
  8822                           
  8823                           	opt	stack 18
  8824                           	line	28
  8825                           	
  8826  000C76                     l19119:
  8827                           ;messages.c: 25: unsigned char slot;
  8828                           ;messages.c: 27: msg *qmsg;
  8829                           ;messages.c: 28: size_t tlength = length;
  8830  000C76  0101               	movlb	1	; () banked
  8831  000C78  0101               	movlb	1	; () banked
  8832  000C7A  C1A4  F1A8         	movff	(send_msg@length),(send_msg@tlength)
  8833  000C7E  0101               	movlb	1	; () banked
  8834  000C80  0101               	movlb	1	; () banked
  8835  000C82  6BA9               	clrf	((send_msg@tlength+1))&0ffh
  8836                           	line	38
  8837                           	
  8838  000C84                     l19121:; BSR set to: 1
  8839                           
  8840                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8841  000C84  0101               	movlb	1	; () banked
  8842  000C86  EE20 F034          	lfsr	2,034h
  8843  000C8A  0101               	movlb	1	; () banked
  8844  000C8C  51A2               	movf	((send_msg@qptr))&0ffh,w
  8845  000C8E  26D9               	addwf	fsr2l
  8846  000C90  0101               	movlb	1	; () banked
  8847  000C92  51A3               	movf	((send_msg@qptr+1))&0ffh,w
  8848  000C94  22DA               	addwfc	fsr2h
  8849  000C96  50DF               	movf	indf2,w
  8850  000C98  0101               	movlb	1	; () banked
  8851  000C9A  0101               	movlb	1	; () banked
  8852  000C9C  6FAA               	movwf	((send_msg@slot))&0ffh
  8853                           	line	39
  8854                           	
  8855  000C9E                     l19123:; BSR set to: 1
  8856                           
  8857                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8858  000C9E  0101               	movlb	1	; () banked
  8859  000CA0  0101               	movlb	1	; () banked
  8860  000CA2  51AA               	movf	((send_msg@slot))&0ffh,w
  8861  000CA4  0D0D               	mullw	0Dh
  8862  000CA6  50F3               	movf	(prodl),c,w
  8863  000CA8  0101               	movlb	1	; () banked
  8864  000CAA  0101               	movlb	1	; () banked
  8865  000CAC  25A2               	addwf	((send_msg@qptr))&0ffh,w
  8866  000CAE  0101               	movlb	1	; () banked
  8867                           	
  8868  000CB0  0101               	movlb	1	; () banked
  8869  000CB2  6FAB               	movwf	((send_msg@qmsg))&0ffh
  8870  000CB4  50F4               	movf	(prodh),c,w
  8871  000CB6  0101               	movlb	1	; () banked
  8872  000CB8  0101               	movlb	1	; () banked
  8873  000CBA  21A3               	addwfc	((send_msg@qptr+1))&0ffh,w
  8874  000CBC  0101               	movlb	1	; () banked
  8875  000CBE  6FAC               	movwf	1+((send_msg@qmsg))&0ffh
  8876                           	line	41
  8877                           	
  8878  000CC0                     l19125:; BSR set to: 1
  8879                           
  8880                           ;messages.c: 41: if (qmsg->full != 0) {
  8881  000CC0  C1AB  FFD9         	movff	(send_msg@qmsg),fsr2l
  8882  000CC4  C1AC  FFDA         	movff	(send_msg@qmsg+1),fsr2h
  8883  000CC8  50DF               	movf	indf2,w
  8884  000CCA  B4D8               	btfsc	status,2
  8885  000CCC  D001               	goto	u2201
  8886  000CCE  D001               	goto	u2200
  8887  000CD0                     u2201:
  8888  000CD0  D003               	goto	l19131
  8889  000CD2                     u2200:
  8890                           	line	42
  8891                           	
  8892  000CD2                     l19127:; BSR set to: 1
  8893                           
  8894                           ;messages.c: 42: return (-1);
  8895  000CD2  0EFF               	movlw	(-1)&0ffh
  8896  000CD4  D052               	goto	l5474
  8897                           	
  8898  000CD6                     l19129:; BSR set to: 1
  8899                           
  8900  000CD6  D051               	goto	l5474
  8901                           	line	43
  8902                           	
  8903  000CD8                     l5473:; BSR set to: 1
  8904                           
  8905                           	line	46
  8906                           	
  8907  000CD8                     l19131:; BSR set to: 1
  8908                           
  8909                           ;messages.c: 43: }
  8910                           ;messages.c: 46: qmsg->length = length;
  8911  000CD8  0101               	movlb	1	; () banked
  8912  000CDA  EE20 F001          	lfsr	2,01h
  8913  000CDE  0101               	movlb	1	; () banked
  8914  000CE0  51AB               	movf	((send_msg@qmsg))&0ffh,w
  8915  000CE2  26D9               	addwf	fsr2l
  8916  000CE4  0101               	movlb	1	; () banked
  8917  000CE6  51AC               	movf	((send_msg@qmsg+1))&0ffh,w
  8918  000CE8  22DA               	addwfc	fsr2h
  8919  000CEA  0101               	movlb	1	; () banked
  8920  000CEC  C1A4  FFDF         	movff	(send_msg@length),indf2
  8921                           
  8922                           	line	47
  8923                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8924  000CF0  0101               	movlb	1	; () banked
  8925  000CF2  EE20 F002          	lfsr	2,02h
  8926  000CF6  0101               	movlb	1	; () banked
  8927  000CF8  51AB               	movf	((send_msg@qmsg))&0ffh,w
  8928  000CFA  26D9               	addwf	fsr2l
  8929  000CFC  0101               	movlb	1	; () banked
  8930  000CFE  51AC               	movf	((send_msg@qmsg+1))&0ffh,w
  8931  000D00  22DA               	addwfc	fsr2h
  8932  000D02  0101               	movlb	1	; () banked
  8933  000D04  C1A5  FFDF         	movff	(send_msg@msgtype),indf2
  8934                           
  8935                           	line	55
  8936                           	
  8937  000D08                     l19133:; BSR set to: 1
  8938                           
  8939                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8940  000D08  0E03               	movlw	low(03h)
  8941  000D0A  0101               	movlb	1	; () banked
  8942  000D0C  0101               	movlb	1	; () banked
  8943  000D0E  25AB               	addwf	((send_msg@qmsg))&0ffh,w
  8944  000D10  0100               	movlb	0	; () banked
  8945                           	
  8946  000D12  0100               	movlb	0	; () banked
  8947  000D14  6FB9               	movwf	((?_memcpy))&0ffh
  8948  000D16  0E00               	movlw	high(03h)
  8949  000D18  0101               	movlb	1	; () banked
  8950  000D1A  0101               	movlb	1	; () banked
  8951  000D1C  21AC               	addwfc	((send_msg@qmsg+1))&0ffh,w
  8952  000D1E  0100               	movlb	0	; () banked
  8953  000D20  6FBA               	movwf	1+((?_memcpy))&0ffh
  8954  000D22  C1A6  F0BB         	movff	(send_msg@data),0+(?_memcpy+02h)
  8955  000D26  C1A7  F0BC         	movff	(send_msg@data+1),1+(?_memcpy+02h)
  8956  000D2A  C1A8  F0BD         	movff	(send_msg@tlength),0+(?_memcpy+04h)
  8957  000D2E  C1A9  F0BE         	movff	(send_msg@tlength+1),1+(?_memcpy+04h)
  8958  000D32  0100               	movlb	0	; () banked
  8959  000D34  EC87  F00B         	call	_memcpy	;wreg free
  8960                           	line	56
  8961                           	
  8962  000D38                     l19135:
  8963                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8964  000D38  0101               	movlb	1	; () banked
  8965  000D3A  EE20 F034          	lfsr	2,034h
  8966  000D3E  0101               	movlb	1	; () banked
  8967  000D40  51A2               	movf	((send_msg@qptr))&0ffh,w
  8968  000D42  26D9               	addwf	fsr2l
  8969  000D44  0101               	movlb	1	; () banked
  8970  000D46  51A3               	movf	((send_msg@qptr+1))&0ffh,w
  8971  000D48  22DA               	addwfc	fsr2h
  8972  000D4A  0101               	movlb	1	; () banked
  8973  000D4C  EE10 F034          	lfsr	1,034h
  8974  000D50  0101               	movlb	1	; () banked
  8975  000D52  51A2               	movf	((send_msg@qptr))&0ffh,w
  8976  000D54  26E1               	addwf	fsr1l
  8977  000D56  0101               	movlb	1	; () banked
  8978  000D58  51A3               	movf	((send_msg@qptr+1))&0ffh,w
  8979  000D5A  22E2               	addwfc	fsr1h
  8980  000D5C  50E7               	movf	indf1,w
  8981  000D5E  0100               	movlb	0	; () banked
  8982  000D60  6FC3               	movwf	(??_send_msg+0+0)&0ffh
  8983  000D62  0100               	movlb	0	; () banked
  8984  000D64  29C3               	incf	((??_send_msg+0+0))&0ffh,w
  8985  000D66  0B03               	andlw	low(03h)
  8986  000D68  6EDF               	movwf	indf2
  8987                           
  8988                           	line	59
  8989                           	
  8990  000D6A                     l19137:; BSR set to: 0
  8991                           
  8992                           ;messages.c: 59: qmsg->full = 1;
  8993  000D6A  C1AB  FFD9         	movff	(send_msg@qmsg),fsr2l
  8994  000D6E  C1AC  FFDA         	movff	(send_msg@qmsg+1),fsr2h
  8995  000D72  0E01               	movlw	low(01h)
  8996  000D74  6EDF               	movwf	indf2
  8997                           	line	60
  8998                           	
  8999  000D76                     l19139:; BSR set to: 0
  9000                           
  9001                           ;messages.c: 60: return (1);
  9002  000D76  0E01               	movlw	(01h)&0ffh
  9003  000D78  D000               	goto	l5474
  9004                           	
  9005  000D7A                     l19141:; BSR set to: 0
  9006                           
  9007                           	line	61
  9008                           	
  9009  000D7A                     l5474:
  9010  000D7A  0012               	return
  9011                           	opt stack 0
  9012                           GLOBAL	__end_of_send_msg
  9013  000D7C                     	__end_of_send_msg:
  9014                           	signat	_send_msg,16505
  9015                           	global	_recv_msg
  9016                           
  9017 ;; *************** function _recv_msg *****************
  9018 ;; Defined at:
  9019 ;;		line 63 in file "../src/messages.c"
  9020 ;; Parameters:    Size  Location     Type
  9021 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  9022 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9023 ;;  maxlength       1    2[BANK1 ] unsigned char 
  9024 ;;  msgtype         2    3[BANK1 ] PTR unsigned char 
  9025 ;;		 -> RAM(1023), i2c_int_handler@msgtype(1), main@msgtype(1), 
  9026 ;;  data            2    5[BANK1 ] PTR void 
  9027 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@data(10), main@msgbuffer(11), 
  9028 ;; Auto vars:     Size  Location     Type
  9029 ;;  qmsg            2   10[BANK1 ] PTR struct __msg
  9030 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9031 ;;  tlength         2    8[BANK1 ] unsigned int 
  9032 ;;  slot            1    7[BANK1 ] unsigned char 
  9033 ;; Return value:  Size  Location     Type
  9034 ;;                  1    wreg      char 
  9035 ;; Registers used:
  9036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9037 ;; Tracked objects:
  9038 ;;		On entry : 0/0
  9039 ;;		On exit  : 0/0
  9040 ;;		Unchanged: 0/0
  9041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9042 ;;      Params:         0       0       7       0       0
  9043 ;;      Locals:         0       0       5       0       0
  9044 ;;      Temps:          0       2       0       0       0
  9045 ;;      Totals:         0       2      12       0       0
  9046 ;;Total ram usage:       14 bytes
  9047 ;; Hardware stack levels used:    1
  9048 ;; Hardware stack levels required when called:   11
  9049 ;; This function calls:
  9050 ;;		_memcpy
  9051 ;; This function is called by:
  9052 ;;		_ToMainLow_recvmsg
  9053 ;;		_ToMainHigh_recvmsg
  9054 ;; This function uses a non-reentrant model
  9055 ;;
  9056                           psect	text21,class=CODE,space=0,reloc=2
  9057                           global __ptext21
  9058  000A04                     __ptext21:
  9059                           psect	text21
  9060                           	file	"../src/messages.c"
  9061                           	line	63
  9062                           	global	__size_of_recv_msg
  9063  0000                     	__size_of_recv_msg	equ	__end_of_recv_msg-_recv_msg
  9064                           	
  9065  000A04                     _recv_msg:
  9066                           	opt	stack 18
  9067                           	line	72
  9068                           	
  9069  000A04                     l19153:
  9070                           ;messages.c: 64: unsigned char slot;
  9071                           ;messages.c: 68: msg *qmsg;
  9072                           ;messages.c: 69: size_t tlength;
  9073                           ;messages.c: 72: slot = qptr->cur_read_ind;
  9074  000A04  0101               	movlb	1	; () banked
  9075  000A06  EE20 F035          	lfsr	2,035h
  9076  000A0A  0101               	movlb	1	; () banked
  9077  000A0C  51A2               	movf	((recv_msg@qptr))&0ffh,w
  9078  000A0E  26D9               	addwf	fsr2l
  9079  000A10  0101               	movlb	1	; () banked
  9080  000A12  51A3               	movf	((recv_msg@qptr+1))&0ffh,w
  9081  000A14  22DA               	addwfc	fsr2h
  9082  000A16  50DF               	movf	indf2,w
  9083  000A18  0101               	movlb	1	; () banked
  9084  000A1A  0101               	movlb	1	; () banked
  9085  000A1C  6FA9               	movwf	((recv_msg@slot))&0ffh
  9086                           	line	73
  9087                           	
  9088  000A1E                     l19155:; BSR set to: 1
  9089                           
  9090                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  9091  000A1E  0101               	movlb	1	; () banked
  9092  000A20  0101               	movlb	1	; () banked
  9093  000A22  51A9               	movf	((recv_msg@slot))&0ffh,w
  9094  000A24  0D0D               	mullw	0Dh
  9095  000A26  50F3               	movf	(prodl),c,w
  9096  000A28  0101               	movlb	1	; () banked
  9097  000A2A  0101               	movlb	1	; () banked
  9098  000A2C  25A2               	addwf	((recv_msg@qptr))&0ffh,w
  9099  000A2E  0101               	movlb	1	; () banked
  9100                           	
  9101  000A30  0101               	movlb	1	; () banked
  9102  000A32  6FAC               	movwf	((recv_msg@qmsg))&0ffh
  9103  000A34  50F4               	movf	(prodh),c,w
  9104  000A36  0101               	movlb	1	; () banked
  9105  000A38  0101               	movlb	1	; () banked
  9106  000A3A  21A3               	addwfc	((recv_msg@qptr+1))&0ffh,w
  9107  000A3C  0101               	movlb	1	; () banked
  9108  000A3E  6FAD               	movwf	1+((recv_msg@qmsg))&0ffh
  9109                           	line	74
  9110                           	
  9111  000A40                     l19157:; BSR set to: 1
  9112                           
  9113                           ;messages.c: 74: if (qmsg->full == 1) {
  9114  000A40  0E01               	movlw	(01h)&0ffh
  9115  000A42  C1AC  FFD9         	movff	(recv_msg@qmsg),fsr2l
  9116  000A46  C1AD  FFDA         	movff	(recv_msg@qmsg+1),fsr2h
  9117  000A4A  62DF               	cpfseq	indf2
  9118  000A4C  D001               	goto	u2221
  9119  000A4E  D001               	goto	u2220
  9120  000A50                     u2221:
  9121  000A50  D075               	goto	l19181
  9122  000A52                     u2220:
  9123                           	line	76
  9124                           	
  9125  000A52                     l19159:; BSR set to: 1
  9126                           
  9127                           ;messages.c: 76: if (qmsg->length > maxlength) {
  9128  000A52  0101               	movlb	1	; () banked
  9129  000A54  EE20 F001          	lfsr	2,01h
  9130  000A58  0101               	movlb	1	; () banked
  9131  000A5A  51AC               	movf	((recv_msg@qmsg))&0ffh,w
  9132  000A5C  26D9               	addwf	fsr2l
  9133  000A5E  0101               	movlb	1	; () banked
  9134  000A60  51AD               	movf	((recv_msg@qmsg+1))&0ffh,w
  9135  000A62  22DA               	addwfc	fsr2h
  9136  000A64  50DF               	movf	indf2,w
  9137  000A66  0101               	movlb	1	; () banked
  9138  000A68  0101               	movlb	1	; () banked
  9139  000A6A  61A4               	cpfslt	((recv_msg@maxlength))&0ffh
  9140  000A6C  D001               	goto	u2231
  9141  000A6E  D001               	goto	u2230
  9142  000A70                     u2231:
  9143  000A70  D003               	goto	l19165
  9144  000A72                     u2230:
  9145                           	line	77
  9146                           	
  9147  000A72                     l19161:; BSR set to: 1
  9148                           
  9149                           ;messages.c: 77: return (-3);
  9150  000A72  0EFD               	movlw	(-3)&0ffh
  9151  000A74  D066               	goto	l5479
  9152                           	
  9153  000A76                     l19163:; BSR set to: 1
  9154                           
  9155  000A76  D065               	goto	l5479
  9156                           	line	78
  9157                           	
  9158  000A78                     l5478:; BSR set to: 1
  9159                           
  9160                           	line	80
  9161                           	
  9162  000A78                     l19165:; BSR set to: 1
  9163                           
  9164                           ;messages.c: 78: }
  9165                           ;messages.c: 80: tlength = qmsg->length;
  9166  000A78  0101               	movlb	1	; () banked
  9167  000A7A  EE20 F001          	lfsr	2,01h
  9168  000A7E  0101               	movlb	1	; () banked
  9169  000A80  51AC               	movf	((recv_msg@qmsg))&0ffh,w
  9170  000A82  26D9               	addwf	fsr2l
  9171  000A84  0101               	movlb	1	; () banked
  9172  000A86  51AD               	movf	((recv_msg@qmsg+1))&0ffh,w
  9173  000A88  22DA               	addwfc	fsr2h
  9174  000A8A  50DF               	movf	indf2,w
  9175  000A8C  0100               	movlb	0	; () banked
  9176  000A8E  6FC3               	movwf	(??_recv_msg+0+0)&0ffh
  9177  000A90  0100               	movlb	0	; () banked
  9178  000A92  51C3               	movf	((??_recv_msg+0+0))&0ffh,w
  9179  000A94  0101               	movlb	1	; () banked
  9180  000A96  0101               	movlb	1	; () banked
  9181  000A98  6FAA               	movwf	((recv_msg@tlength))&0ffh
  9182  000A9A  0101               	movlb	1	; () banked
  9183  000A9C  6BAB               	clrf	((recv_msg@tlength+1))&0ffh
  9184                           	line	81
  9185                           	
  9186  000A9E                     l19167:; BSR set to: 1
  9187                           
  9188                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  9189  000A9E  C1A7  F0B9         	movff	(recv_msg@data),(?_memcpy)
  9190  000AA2  C1A8  F0BA         	movff	(recv_msg@data+1),(?_memcpy+1)
  9191  000AA6  0E03               	movlw	03h
  9192  000AA8  0101               	movlb	1	; () banked
  9193  000AAA  0101               	movlb	1	; () banked
  9194  000AAC  25AC               	addwf	((recv_msg@qmsg))&0ffh,w
  9195  000AAE  0100               	movlb	0	; () banked
  9196  000AB0  6FC3               	movwf	(??_recv_msg+0+0)&0ffh
  9197  000AB2  0E00               	movlw	0
  9198  000AB4  0101               	movlb	1	; () banked
  9199  000AB6  0101               	movlb	1	; () banked
  9200  000AB8  21AD               	addwfc	((recv_msg@qmsg+1))&0ffh,w
  9201  000ABA  0100               	movlb	0	; () banked
  9202  000ABC  6FC4               	movwf	(??_recv_msg+0+0+1)&0ffh
  9203  000ABE  C0C3  F0BB         	movff	??_recv_msg+0+0,0+(?_memcpy+02h)
  9204  000AC2  C0C4  F0BC         	movff	??_recv_msg+0+1,1+(?_memcpy+02h)
  9205  000AC6  C1AA  F0BD         	movff	(recv_msg@tlength),0+(?_memcpy+04h)
  9206  000ACA  C1AB  F0BE         	movff	(recv_msg@tlength+1),1+(?_memcpy+04h)
  9207  000ACE  0100               	movlb	0	; () banked
  9208  000AD0  EC87  F00B         	call	_memcpy	;wreg free
  9209                           	line	87
  9210                           	
  9211  000AD4                     l19169:
  9212                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  9213  000AD4  0101               	movlb	1	; () banked
  9214  000AD6  EE20 F035          	lfsr	2,035h
  9215  000ADA  0101               	movlb	1	; () banked
  9216  000ADC  51A2               	movf	((recv_msg@qptr))&0ffh,w
  9217  000ADE  26D9               	addwf	fsr2l
  9218  000AE0  0101               	movlb	1	; () banked
  9219  000AE2  51A3               	movf	((recv_msg@qptr+1))&0ffh,w
  9220  000AE4  22DA               	addwfc	fsr2h
  9221  000AE6  0101               	movlb	1	; () banked
  9222  000AE8  EE10 F035          	lfsr	1,035h
  9223  000AEC  0101               	movlb	1	; () banked
  9224  000AEE  51A2               	movf	((recv_msg@qptr))&0ffh,w
  9225  000AF0  26E1               	addwf	fsr1l
  9226  000AF2  0101               	movlb	1	; () banked
  9227  000AF4  51A3               	movf	((recv_msg@qptr+1))&0ffh,w
  9228  000AF6  22E2               	addwfc	fsr1h
  9229  000AF8  50E7               	movf	indf1,w
  9230  000AFA  0100               	movlb	0	; () banked
  9231  000AFC  6FC3               	movwf	(??_recv_msg+0+0)&0ffh
  9232  000AFE  0100               	movlb	0	; () banked
  9233  000B00  29C3               	incf	((??_recv_msg+0+0))&0ffh,w
  9234  000B02  0B03               	andlw	low(03h)
  9235  000B04  6EDF               	movwf	indf2
  9236                           
  9237                           	line	89
  9238                           	
  9239  000B06                     l19171:; BSR set to: 0
  9240                           
  9241                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  9242  000B06  0101               	movlb	1	; () banked
  9243  000B08  EE20 F002          	lfsr	2,02h
  9244  000B0C  0101               	movlb	1	; () banked
  9245  000B0E  51AC               	movf	((recv_msg@qmsg))&0ffh,w
  9246  000B10  26D9               	addwf	fsr2l
  9247  000B12  0101               	movlb	1	; () banked
  9248  000B14  51AD               	movf	((recv_msg@qmsg+1))&0ffh,w
  9249  000B16  22DA               	addwfc	fsr2h
  9250  000B18  C1A5  FFE1         	movff	(recv_msg@msgtype),fsr1l
  9251  000B1C  C1A6  FFE2         	movff	(recv_msg@msgtype+1),fsr1h
  9252  000B20  CFDF FFE7          	movff	indf2,indf1
  9253                           	line	91
  9254                           	
  9255  000B24                     l19173:; BSR set to: 1
  9256                           
  9257                           ;messages.c: 91: qmsg->full = 0;
  9258  000B24  C1AC  FFD9         	movff	(recv_msg@qmsg),fsr2l
  9259  000B28  C1AD  FFDA         	movff	(recv_msg@qmsg+1),fsr2h
  9260  000B2C  0E00               	movlw	low(0)
  9261  000B2E  6EDF               	movwf	indf2
  9262                           	line	92
  9263                           	
  9264  000B30                     l19175:; BSR set to: 1
  9265                           
  9266                           ;messages.c: 92: return (tlength);
  9267  000B30  0101               	movlb	1	; () banked
  9268  000B32  0101               	movlb	1	; () banked
  9269  000B34  51AA               	movf	((recv_msg@tlength))&0ffh,w
  9270  000B36  D005               	goto	l5479
  9271                           	
  9272  000B38                     l19177:; BSR set to: 1
  9273                           
  9274  000B38  D004               	goto	l5479
  9275                           	line	93
  9276                           	
  9277  000B3A                     l19179:; BSR set to: 1
  9278                           
  9279                           ;messages.c: 93: } else {
  9280  000B3A  D003               	goto	l5479
  9281                           	
  9282  000B3C                     l5477:; BSR set to: 1
  9283                           
  9284                           	line	94
  9285                           	
  9286  000B3C                     l19181:; BSR set to: 1
  9287                           
  9288                           ;messages.c: 94: return (-4);
  9289  000B3C  0EFC               	movlw	(-4)&0ffh
  9290  000B3E  D001               	goto	l5479
  9291                           	
  9292  000B40                     l19183:; BSR set to: 1
  9293                           
  9294  000B40  D000               	goto	l5479
  9295                           	line	95
  9296                           	
  9297  000B42                     l5480:; BSR set to: 1
  9298                           
  9299                           	line	96
  9300                           	
  9301  000B42                     l5479:; BSR set to: 1
  9302                           
  9303  000B42  0012               	return
  9304                           	opt stack 0
  9305                           GLOBAL	__end_of_recv_msg
  9306  000B44                     	__end_of_recv_msg:
  9307                           	signat	_recv_msg,16505
  9308                           	global	_memcpy
  9309                           
  9310 ;; *************** function _memcpy *****************
  9311 ;; Defined at:
  9312 ;;		line 13 in file "/opt/microchip/xc8/v1.10/sources/memcpy.c"
  9313 ;; Parameters:    Size  Location     Type
  9314 ;;  d1              2   57[BANK0 ] PTR void 
  9315 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  9316 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  9317 ;;  s1              2   59[BANK0 ] PTR const void 
  9318 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
  9319 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  9320 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(5), 
  9321 ;;  n               2   61[BANK0 ] unsigned int 
  9322 ;; Auto vars:     Size  Location     Type
  9323 ;;  s               2   65[BANK0 ] PTR const unsigned char 
  9324 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
  9325 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  9326 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(5), 
  9327 ;;  d               2   63[BANK0 ] PTR unsigned char 
  9328 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  9329 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
  9330 ;; Return value:  Size  Location     Type
  9331 ;;                  2   57[BANK0 ] PTR void 
  9332 ;; Registers used:
  9333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9334 ;; Tracked objects:
  9335 ;;		On entry : 0/0
  9336 ;;		On exit  : 0/0
  9337 ;;		Unchanged: 0/0
  9338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9339 ;;      Params:         0       6       0       0       0
  9340 ;;      Locals:         0       4       0       0       0
  9341 ;;      Temps:          0       0       0       0       0
  9342 ;;      Totals:         0      10       0       0       0
  9343 ;;Total ram usage:       10 bytes
  9344 ;; Hardware stack levels used:    1
  9345 ;; Hardware stack levels required when called:   10
  9346 ;; This function calls:
  9347 ;;		Nothing
  9348 ;; This function is called by:
  9349 ;;		_send_msg
  9350 ;;		_recv_msg
  9351 ;; This function uses a non-reentrant model
  9352 ;;
  9353                           psect	text22,class=CODE,space=0,reloc=2
  9354                           global __ptext22
  9355  00170E                     __ptext22:
  9356                           psect	text22
  9357                           	file	"/opt/microchip/xc8/v1.10/sources/memcpy.c"
  9358                           	line	13
  9359                           	global	__size_of_memcpy
  9360  0000                     	__size_of_memcpy	equ	__end_of_memcpy-_memcpy
  9361                           	
  9362  00170E                     _memcpy:; BSR set to: 1
  9363                           
  9364                           	opt	stack 18
  9365                           	line	24
  9366                           	
  9367  00170E                     l19143:
  9368  00170E  C0BB  F0C1         	movff	(memcpy@s1),(memcpy@s)
  9369  001712  C0BC  F0C2         	movff	(memcpy@s1+1),(memcpy@s+1)
  9370                           	line	25
  9371  001716  C0B9  F0BF         	movff	(memcpy@d1),(memcpy@d)
  9372  00171A  C0BA  F0C0         	movff	(memcpy@d1+1),(memcpy@d+1)
  9373                           	line	26
  9374  00171E  D013               	goto	l19151
  9375                           	
  9376  001720                     l17011:
  9377                           	line	27
  9378                           	
  9379  001720                     l19145:
  9380  001720  C0C1  FFD9         	movff	(memcpy@s),fsr2l
  9381  001724  C0C2  FFDA         	movff	(memcpy@s+1),fsr2h
  9382  001728  C0BF  FFE1         	movff	(memcpy@d),fsr1l
  9383  00172C  C0C0  FFE2         	movff	(memcpy@d+1),fsr1h
  9384  001730  CFDF FFE7          	movff	indf2,indf1
  9385                           	
  9386  001734                     l19147:
  9387  001734  0100               	movlb	0	; () banked
  9388  001736  0100               	movlb	0	; () banked
  9389  001738  4BC1               	infsnz	((memcpy@s))&0ffh
  9390  00173A  2BC2               	incf	((memcpy@s+1))&0ffh
  9391                           	
  9392  00173C                     l19149:; BSR set to: 0
  9393                           
  9394  00173C  0100               	movlb	0	; () banked
  9395  00173E  0100               	movlb	0	; () banked
  9396  001740  4BBF               	infsnz	((memcpy@d))&0ffh
  9397  001742  2BC0               	incf	((memcpy@d+1))&0ffh
  9398  001744  D000               	goto	l19151
  9399                           	
  9400  001746                     l17010:; BSR set to: 0
  9401                           
  9402                           	line	26
  9403                           	
  9404  001746                     l19151:
  9405  001746  0100               	movlb	0	; () banked
  9406  001748  0100               	movlb	0	; () banked
  9407  00174A  07BD               	decf	((memcpy@n))&0ffh
  9408  00174C  A0D8               	btfss	status,0
  9409  00174E  07BE               	decf	((memcpy@n+1))&0ffh
  9410  001750  0100               	movlb	0	; () banked
  9411  001752  29BD               	incf	((memcpy@n))&0ffh,w
  9412  001754  B4D8               	btfsc	status,2
  9413  001756  29BE               	incf ((memcpy@n+1))&0ffh,w
  9414                           
  9415  001758  A4D8               	btfss	status,2
  9416  00175A  D001               	goto	u2211
  9417  00175C  D001               	goto	u2210
  9418  00175E                     u2211:
  9419  00175E  D7E0               	goto	l19145
  9420  001760                     u2210:
  9421  001760  D000               	goto	l17013
  9422                           	
  9423  001762                     l17012:; BSR set to: 0
  9424                           
  9425                           	line	32
  9426                           ;	Return value of _memcpy is never used
  9427                           	
  9428  001762                     l17013:; BSR set to: 0
  9429                           
  9430  001762  0012               	return
  9431                           	opt stack 0
  9432                           GLOBAL	__end_of_memcpy
  9433  001764                     	__end_of_memcpy:
  9434                           	signat	_memcpy,12410
  9435                           	global	_check_msg
  9436                           
  9437 ;; *************** function _check_msg *****************
  9438 ;; Defined at:
  9439 ;;		line 222 in file "../src/messages.c"
  9440 ;; Parameters:    Size  Location     Type
  9441 ;;  qptr            2   57[BANK0 ] PTR struct __msg_queue
  9442 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9443 ;; Auto vars:     Size  Location     Type
  9444 ;;		None
  9445 ;; Return value:  Size  Location     Type
  9446 ;;                  1    wreg      unsigned char 
  9447 ;; Registers used:
  9448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9449 ;; Tracked objects:
  9450 ;;		On entry : 0/0
  9451 ;;		On exit  : 0/0
  9452 ;;		Unchanged: 0/0
  9453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9454 ;;      Params:         0       2       0       0       0
  9455 ;;      Locals:         0       0       0       0       0
  9456 ;;      Temps:          0       1       0       0       0
  9457 ;;      Totals:         0       3       0       0       0
  9458 ;;Total ram usage:        3 bytes
  9459 ;; Hardware stack levels used:    1
  9460 ;; Hardware stack levels required when called:   10
  9461 ;; This function calls:
  9462 ;;		Nothing
  9463 ;; This function is called by:
  9464 ;;		_block_on_To_msgqueues
  9465 ;; This function uses a non-reentrant model
  9466 ;;
  9467                           psect	text23,class=CODE,space=0,reloc=2
  9468                           global __ptext23
  9469  00198C                     __ptext23:
  9470                           psect	text23
  9471                           	file	"../src/messages.c"
  9472                           	line	222
  9473                           	global	__size_of_check_msg
  9474  0000                     	__size_of_check_msg	equ	__end_of_check_msg-_check_msg
  9475                           	
  9476  00198C                     _check_msg:; BSR set to: 0
  9477                           
  9478                           	opt	stack 19
  9479                           	line	223
  9480                           	
  9481  00198C                     l18601:
  9482                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  9483  00198C  0100               	movlb	0	; () banked
  9484  00198E  EE20 F035          	lfsr	2,035h
  9485  001992  0100               	movlb	0	; () banked
  9486  001994  51B9               	movf	((check_msg@qptr))&0ffh,w
  9487  001996  26D9               	addwf	fsr2l
  9488  001998  0100               	movlb	0	; () banked
  9489  00199A  51BA               	movf	((check_msg@qptr+1))&0ffh,w
  9490  00199C  22DA               	addwfc	fsr2h
  9491  00199E  50DF               	movf	indf2,w
  9492  0019A0  0100               	movlb	0	; () banked
  9493  0019A2  6FBB               	movwf	(??_check_msg+0+0)&0ffh
  9494  0019A4  0100               	movlb	0	; () banked
  9495  0019A6  51BB               	movf	((??_check_msg+0+0))&0ffh,w
  9496  0019A8  0D0D               	mullw	0Dh
  9497  0019AA  50F3               	movf	(prodl),c,w
  9498  0019AC  0100               	movlb	0	; () banked
  9499  0019AE  0100               	movlb	0	; () banked
  9500  0019B0  25B9               	addwf	((check_msg@qptr))&0ffh,w
  9501  0019B2  6ED9               	movwf	c:fsr2l
  9502  0019B4  50F4               	movf	(prodh),c,w
  9503  0019B6  0100               	movlb	0	; () banked
  9504  0019B8  0100               	movlb	0	; () banked
  9505  0019BA  21BA               	addwfc	((check_msg@qptr+1))&0ffh,w
  9506  0019BC  6EDA               	movwf	1+c:fsr2l
  9507  0019BE  50DF               	movf	indf2,w
  9508  0019C0  D000               	goto	l5523
  9509                           	
  9510  0019C2                     l18603:; BSR set to: 0
  9511                           
  9512                           	line	224
  9513                           	
  9514  0019C2                     l5523:; BSR set to: 0
  9515                           
  9516  0019C2  0012               	return
  9517                           	opt stack 0
  9518                           GLOBAL	__end_of_check_msg
  9519  0019C4                     	__end_of_check_msg:
  9520                           	signat	_check_msg,4217
  9521                           	global	_Delay1KTCYx
  9522                           
  9523 ;; *************** function _Delay1KTCYx *****************
  9524 ;; Defined at:
  9525 ;;		line 9 in file "../common/d1ktcyx.c"
  9526 ;; Parameters:    Size  Location     Type
  9527 ;;  unit            1   57[BANK0 ] unsigned char 
  9528 ;; Auto vars:     Size  Location     Type
  9529 ;;		None
  9530 ;; Return value:  Size  Location     Type
  9531 ;;		None               void
  9532 ;; Registers used:
  9533 ;;		wreg
  9534 ;; Tracked objects:
  9535 ;;		On entry : 0/0
  9536 ;;		On exit  : 0/0
  9537 ;;		Unchanged: 0/0
  9538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9539 ;;      Params:         0       1       0       0       0
  9540 ;;      Locals:         0       0       0       0       0
  9541 ;;      Temps:          0       0       0       0       0
  9542 ;;      Totals:         0       1       0       0       0
  9543 ;;Total ram usage:        1 bytes
  9544 ;; Hardware stack levels used:    1
  9545 ;; Hardware stack levels required when called:   10
  9546 ;; This function calls:
  9547 ;;		Nothing
  9548 ;; This function is called by:
  9549 ;;		_block_on_To_msgqueues
  9550 ;; This function uses a non-reentrant model
  9551 ;;
  9552                           psect	text24,class=CODE,space=0,reloc=2
  9553                           global __ptext24
  9554  001C20                     __ptext24:
  9555                           psect	text24
  9556                           	file	"../common/d1ktcyx.c"
  9557                           	line	9
  9558                           	global	__size_of_Delay1KTCYx
  9559  0000                     	__size_of_Delay1KTCYx	equ	__end_of_Delay1KTCYx-_Delay1KTCYx
  9560                           	
  9561  001C20                     _Delay1KTCYx:; BSR set to: 0
  9562                           
  9563                           	opt	stack 19
  9564                           	line	10
  9565                           	
  9566  001C20                     l17075:
  9567                           	line	11
  9568                           	
  9569  001C20                     l18605:
  9570  001C20  0EFA               	movlw	250
  9571  001C22                     u2287:
  9572  001C22  F000               	nop
  9573  001C24  2EE8               decfsz	wreg,f
  9574  001C26  D7FD               	goto	u2287
  9575                           
  9576                           	line	12
  9577                           	
  9578  001C28                     l18607:
  9579  001C28  0100               	movlb	0	; () banked
  9580  001C2A  0100               	movlb	0	; () banked
  9581  001C2C  2FB9               	decfsz	((Delay1KTCYx@unit))&0ffh
  9582                           	
  9583  001C2E  D7F8               	goto	l17075
  9584  001C30  D000               	goto	l17077
  9585                           	
  9586  001C32                     l17076:; BSR set to: 0
  9587                           
  9588                           	line	13
  9589                           	
  9590  001C32                     l17077:; BSR set to: 0
  9591                           
  9592  001C32  0012               	return
  9593                           	opt stack 0
  9594                           GLOBAL	__end_of_Delay1KTCYx
  9595  001C34                     	__end_of_Delay1KTCYx:
  9596                           	signat	_Delay1KTCYx,4216
  9597                           	global	_OpenADC
  9598                           
  9599 ;; *************** function _OpenADC *****************
  9600 ;; Defined at:
  9601 ;;		line 71 in file "plib/ADC/adcopen.c"
  9602 ;; Parameters:    Size  Location     Type
  9603 ;;  config          1   57[BANK0 ] unsigned char 
  9604 ;;  config2         1   58[BANK0 ] unsigned char 
  9605 ;;  portconfig      1   59[BANK0 ] unsigned char 
  9606 ;; Auto vars:     Size  Location     Type
  9607 ;;		None
  9608 ;; Return value:  Size  Location     Type
  9609 ;;		None               void
  9610 ;; Registers used:
  9611 ;;		wreg, status,2, status,0
  9612 ;; Tracked objects:
  9613 ;;		On entry : 0/0
  9614 ;;		On exit  : 0/0
  9615 ;;		Unchanged: 0/0
  9616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9617 ;;      Params:         0       3       0       0       0
  9618 ;;      Locals:         0       0       0       0       0
  9619 ;;      Temps:          0       2       0       0       0
  9620 ;;      Totals:         0       5       0       0       0
  9621 ;;Total ram usage:        5 bytes
  9622 ;; Hardware stack levels used:    1
  9623 ;; Hardware stack levels required when called:   10
  9624 ;; This function calls:
  9625 ;;		Nothing
  9626 ;; This function is called by:
  9627 ;;		_init_timer1_lthread
  9628 ;; This function uses a non-reentrant model
  9629 ;;
  9630                           psect	text25,class=CODE,space=0,reloc=2
  9631                           global __ptext25
  9632  00148C                     __ptext25:
  9633                           psect	text25
  9634                           	file	"plib/ADC/adcopen.c"
  9635                           	line	71
  9636                           	global	__size_of_OpenADC
  9637  0000                     	__size_of_OpenADC	equ	__end_of_OpenADC-_OpenADC
  9638                           	
  9639  00148C                     _OpenADC:; BSR set to: 0
  9640                           
  9641                           	opt	stack 19
  9642                           	line	72
  9643                           	
  9644  00148C                     l18651:
  9645  00148C  0E00               	movlw	low(0)
  9646  00148E  6EC2               	movwf	((c:4034)),c	;volatile
  9647                           	line	73
  9648  001490  0E00               	movlw	low(0)
  9649  001492  6EC0               	movwf	((c:4032)),c	;volatile
  9650                           	line	75
  9651                           	
  9652  001494                     l18653:
  9653  001494  0100               	movlb	0	; () banked
  9654  001496  0100               	movlb	0	; () banked
  9655  001498  90D8               	bcf	status,0
  9656  00149A  31BA               	rrcf	((OpenADC@config2))&0ffh,w
  9657  00149C  0B3C               	andlw	low(03Ch)
  9658  00149E  6EC2               	movwf	((c:4034)),c	;volatile
  9659                           	line	77
  9660                           	
  9661  0014A0                     l18655:; BSR set to: 0
  9662                           
  9663  0014A0  C0BA  F0BC         	movff	(OpenADC@config2),??_OpenADC+0+0
  9664  0014A4  0100               	movlb	0	; () banked
  9665  0014A6  3BBC               	swapf	(??_OpenADC+0+0)&0ffh
  9666  0014A8  0EF0               	movlw	(0ffh shl 4) & 0ffh
  9667  0014AA  17BC               	andwf	(??_OpenADC+0+0)&0ffh
  9668  0014AC  0E30               	movlw	030h
  9669  0014AE  0100               	movlb	0	; () banked
  9670  0014B0  17BC               	andwf	(??_OpenADC+0+0)&0ffh
  9671  0014B2  0100               	movlb	0	; () banked
  9672  0014B4  0100               	movlb	0	; () banked
  9673  0014B6  51BB               	movf	((OpenADC@portconfig))&0ffh,w
  9674  0014B8  0B0F               	andlw	low(0Fh)
  9675  0014BA  0100               	movlb	0	; () banked
  9676  0014BC  11BC               	iorwf	(??_OpenADC+0+0)&0ffh,w
  9677  0014BE  6EC1               	movwf	((c:4033)),c	;volatile
  9678                           	line	80
  9679                           	
  9680  0014C0                     l18657:; BSR set to: 0
  9681                           
  9682  0014C0  C0B9  F0BC         	movff	(OpenADC@config),??_OpenADC+0+0
  9683  0014C4  0100               	movlb	0	; () banked
  9684  0014C6  90D8               	bcf	status,0
  9685  0014C8  37BC               	rlcf	(??_OpenADC+0+0)&0ffh
  9686  0014CA  0100               	movlb	0	; () banked
  9687  0014CC  90D8               	bcf	status,0
  9688  0014CE  37BC               	rlcf	(??_OpenADC+0+0)&0ffh
  9689                           
  9690  0014D0  0E38               	movlw	038h
  9691  0014D2  0100               	movlb	0	; () banked
  9692  0014D4  17BC               	andwf	(??_OpenADC+0+0)&0ffh
  9693  0014D6  C0B9  F0BD         	movff	(OpenADC@config),??_OpenADC+1+0
  9694  0014DA  0100               	movlb	0	; () banked
  9695  0014DC  3BBD               	swapf	(??_OpenADC+1+0)&0ffh
  9696  0014DE  0E0F               	movlw	(0ffh shr 4) & 0ffh
  9697  0014E0  17BD               	andwf	(??_OpenADC+1+0)&0ffh
  9698  0014E2  0E07               	movlw	07h
  9699  0014E4  0100               	movlb	0	; () banked
  9700  0014E6  17BD               	andwf	(??_OpenADC+1+0)&0ffh
  9701  0014E8  0100               	movlb	0	; () banked
  9702  0014EA  0100               	movlb	0	; () banked
  9703  0014EC  51B9               	movf	((OpenADC@config))&0ffh,w
  9704  0014EE  0B80               	andlw	low(080h)
  9705  0014F0  0100               	movlb	0	; () banked
  9706  0014F2  11BD               	iorwf	(??_OpenADC+1+0)&0ffh,w
  9707  0014F4  0100               	movlb	0	; () banked
  9708  0014F6  11BC               	iorwf	(??_OpenADC+0+0)&0ffh,w
  9709  0014F8  6EC0               	movwf	((c:4032)),c	;volatile
  9710                           	line	82
  9711                           	
  9712  0014FA                     l18659:; BSR set to: 0
  9713                           
  9714  0014FA  0100               	movlb	0	; () banked
  9715                           	
  9716  0014FC  0100               	movlb	0	; () banked
  9717  0014FE  AFBA               	btfss	((OpenADC@config2))&0ffh,(7)&7
  9718  001500  D001               	goto	u1721
  9719  001502  D001               	goto	u1720
  9720  001504                     u1721:
  9721  001504  D003               	goto	l16414
  9722  001506                     u1720:
  9723                           	line	84
  9724                           	
  9725  001506                     l18661:; BSR set to: 0
  9726                           
  9727  001506  9C9E               	bcf	((c:3998)),c,6	;volatile
  9728                           	line	85
  9729  001508  8C9D               	bsf	((c:3997)),c,6	;volatile
  9730                           	line	86
  9731  00150A  8CF2               	bsf	((c:4082)),c,6	;volatile
  9732                           	line	87
  9733                           	
  9734  00150C                     l16414:; BSR set to: 0
  9735                           
  9736                           	line	88
  9737  00150C  80C2               	bsf	((c:4034)),c,0	;volatile
  9738                           	line	89
  9739                           	
  9740  00150E                     l16415:; BSR set to: 0
  9741                           
  9742  00150E  0012               	return
  9743                           	opt stack 0
  9744                           GLOBAL	__end_of_OpenADC
  9745  001510                     	__end_of_OpenADC:
  9746                           	signat	_OpenADC,12408
  9747                           	global	_SetChanADC
  9748                           
  9749 ;; *************** function _SetChanADC *****************
  9750 ;; Defined at:
  9751 ;;		line 31 in file "plib/ADC/adcsetch.c"
  9752 ;; Parameters:    Size  Location     Type
  9753 ;;  channel         1   57[BANK0 ] unsigned char 
  9754 ;; Auto vars:     Size  Location     Type
  9755 ;;		None
  9756 ;; Return value:  Size  Location     Type
  9757 ;;		None               void
  9758 ;; Registers used:
  9759 ;;		wreg, status,2, status,0
  9760 ;; Tracked objects:
  9761 ;;		On entry : 0/0
  9762 ;;		On exit  : 0/0
  9763 ;;		Unchanged: 0/0
  9764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9765 ;;      Params:         0       1       0       0       0
  9766 ;;      Locals:         0       0       0       0       0
  9767 ;;      Temps:          0       1       0       0       0
  9768 ;;      Totals:         0       2       0       0       0
  9769 ;;Total ram usage:        2 bytes
  9770 ;; Hardware stack levels used:    1
  9771 ;; Hardware stack levels required when called:   10
  9772 ;; This function calls:
  9773 ;;		Nothing
  9774 ;; This function is called by:
  9775 ;;		_init_timer1_lthread
  9776 ;; This function uses a non-reentrant model
  9777 ;;
  9778                           psect	text26,class=CODE,space=0,reloc=2
  9779                           global __ptext26
  9780  001BD6                     __ptext26:
  9781                           psect	text26
  9782                           	file	"plib/ADC/adcsetch.c"
  9783                           	line	31
  9784                           	global	__size_of_SetChanADC
  9785  0000                     	__size_of_SetChanADC	equ	__end_of_SetChanADC-_SetChanADC
  9786                           	
  9787  001BD6                     _SetChanADC:; BSR set to: 0
  9788                           
  9789                           	opt	stack 19
  9790                           	line	34
  9791                           	
  9792  001BD6                     l18663:
  9793  001BD6  CFC2 F0BA          	movff	(c:4034),??_SetChanADC+0+0	;volatile
  9794  001BDA  0EC3               	movlw	0C3h
  9795  001BDC  0100               	movlb	0	; () banked
  9796  001BDE  17BA               	andwf	(??_SetChanADC+0+0)&0ffh
  9797  001BE0  0100               	movlb	0	; () banked
  9798  001BE2  0100               	movlb	0	; () banked
  9799  001BE4  90D8               	bcf	status,0
  9800  001BE6  31B9               	rrcf	((SetChanADC@channel))&0ffh,w
  9801  001BE8  0B3C               	andlw	low(03Ch)
  9802  001BEA  0100               	movlb	0	; () banked
  9803  001BEC  11BA               	iorwf	(??_SetChanADC+0+0)&0ffh,w
  9804  001BEE  6EC2               	movwf	((c:4034)),c	;volatile
  9805                           	line	36
  9806                           	
  9807  001BF0                     l16427:; BSR set to: 0
  9808                           
  9809  001BF0  0012               	return
  9810                           	opt stack 0
  9811                           GLOBAL	__end_of_SetChanADC
  9812  001BF2                     	__end_of_SetChanADC:
  9813                           	signat	_SetChanADC,4216
  9814                           	global	_ConvertADC
  9815                           
  9816 ;; *************** function _ConvertADC *****************
  9817 ;; Defined at:
  9818 ;;		line 23 in file "plib/ADC/adcconv.c"
  9819 ;; Parameters:    Size  Location     Type
  9820 ;;		None
  9821 ;; Auto vars:     Size  Location     Type
  9822 ;;		None
  9823 ;; Return value:  Size  Location     Type
  9824 ;;		None               void
  9825 ;; Registers used:
  9826 ;;		None
  9827 ;; Tracked objects:
  9828 ;;		On entry : 0/0
  9829 ;;		On exit  : 0/0
  9830 ;;		Unchanged: 0/0
  9831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9832 ;;      Params:         0       0       0       0       0
  9833 ;;      Locals:         0       0       0       0       0
  9834 ;;      Temps:          0       0       0       0       0
  9835 ;;      Totals:         0       0       0       0       0
  9836 ;;Total ram usage:        0 bytes
  9837 ;; Hardware stack levels used:    1
  9838 ;; Hardware stack levels required when called:   10
  9839 ;; This function calls:
  9840 ;;		Nothing
  9841 ;; This function is called by:
  9842 ;;		_timer1_lthread
  9843 ;; This function uses a non-reentrant model
  9844 ;;
  9845                           psect	text27,class=CODE,space=0,reloc=2
  9846                           global __ptext27
  9847  001C9C                     __ptext27:
  9848                           psect	text27
  9849                           	file	"plib/ADC/adcconv.c"
  9850                           	line	23
  9851                           	global	__size_of_ConvertADC
  9852  0000                     	__size_of_ConvertADC	equ	__end_of_ConvertADC-_ConvertADC
  9853                           	
  9854  001C9C                     _ConvertADC:; BSR set to: 0
  9855                           
  9856                           	opt	stack 19
  9857                           	line	24
  9858                           	
  9859  001C9C                     l18665:
  9860  001C9C  82C2               	bsf	((c:4034)),c,1	;volatile
  9861                           	line	25
  9862                           	
  9863  001C9E                     l16397:
  9864  001C9E  0012               	return
  9865                           	opt stack 0
  9866                           GLOBAL	__end_of_ConvertADC
  9867  001CA0                     	__end_of_ConvertADC:
  9868                           	signat	_ConvertADC,88
  9869                           	global	_InterruptHandlerLow
  9870                           
  9871 ;; *************** function _InterruptHandlerLow *****************
  9872 ;; Defined at:
  9873 ;;		line 122 in file "../src/interrupts.c"
  9874 ;; Parameters:    Size  Location     Type
  9875 ;;		None
  9876 ;; Auto vars:     Size  Location     Type
  9877 ;;		None
  9878 ;; Return value:  Size  Location     Type
  9879 ;;		None               void
  9880 ;; Registers used:
  9881 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9882 ;; Tracked objects:
  9883 ;;		On entry : 0/0
  9884 ;;		On exit  : 0/0
  9885 ;;		Unchanged: 0/0
  9886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9887 ;;      Params:         0       0       0       0       0
  9888 ;;      Locals:         0       0       0       0       0
  9889 ;;      Temps:         17       0       0       0       0
  9890 ;;      Totals:        17       0       0       0       0
  9891 ;;Total ram usage:       17 bytes
  9892 ;; Hardware stack levels used:    1
  9893 ;; Hardware stack levels required when called:    9
  9894 ;; This function calls:
  9895 ;;		_timer1_int_handler
  9896 ;;		_adc_int_handler
  9897 ;;		_uart_recv_int_handler
  9898 ;; This function is called by:
  9899 ;;		Interrupt level 1
  9900 ;; This function uses a non-reentrant model
  9901 ;;
  9902                           psect	intcodelo,class=CODE,space=0,reloc=2
  9903                           global __pintcodelo
  9904  000018                     __pintcodelo:
  9905                           psect	intcodelo
  9906                           	file	"../src/interrupts.c"
  9907                           	line	122
  9908                           	global	__size_of_InterruptHandlerLow
  9909  0000                     	__size_of_InterruptHandlerLow	equ	__end_of_InterruptHandlerLow-_InterruptHandlerLow
  9910                           	
  9911  000018                     _InterruptHandlerLow:
  9912                           	opt	stack 17
  9913  000018  CFD8 F023          	movff	status+0,??_InterruptHandlerLow+0
  9914  00001C  CFE8 F024          	movff	wreg+0,??_InterruptHandlerLow+1
  9915  000020  CFE0 F025          	movff	bsr+0,??_InterruptHandlerLow+2
  9916  000024  CFFA F026          	movff	pclat+0,??_InterruptHandlerLow+3
  9917  000028  CFFB F027          	movff	pclat+1,??_InterruptHandlerLow+4
  9918  00002C  CFE9 F028          	movff	fsr0l+0,??_InterruptHandlerLow+5
  9919  000030  CFEA F029          	movff	fsr0h+0,??_InterruptHandlerLow+6
  9920  000034  CFE1 F02A          	movff	fsr1l+0,??_InterruptHandlerLow+7
  9921  000038  CFE2 F02B          	movff	fsr1h+0,??_InterruptHandlerLow+8
  9922  00003C  CFD9 F02C          	movff	fsr2l+0,??_InterruptHandlerLow+9
  9923  000040  CFDA F02D          	movff	fsr2h+0,??_InterruptHandlerLow+10
  9924  000044  CFF3 F02E          	movff	prodl+0,??_InterruptHandlerLow+11
  9925  000048  CFF4 F02F          	movff	prodh+0,??_InterruptHandlerLow+12
  9926  00004C  CFF6 F030          	movff	tblptrl+0,??_InterruptHandlerLow+13
  9927  000050  CFF7 F031          	movff	tblptrh+0,??_InterruptHandlerLow+14
  9928  000054  CFF8 F032          	movff	tblptru+0,??_InterruptHandlerLow+15
  9929  000058  CFF5 F033          	movff	tablat+0,??_InterruptHandlerLow+16
  9930                           	line	124
  9931                           	
  9932  00005C                     i1l18841:
  9933                           ;interrupts.c: 124: if (PIR1bits.TMR1IF) {
  9934                           	
  9935  00005C  A09E               	btfss	((c:3998)),c,0	;volatile
  9936  00005E  D001               	goto	i1u184_21
  9937  000060  D001               	goto	i1u184_20
  9938  000062                     i1u184_21:
  9939  000062  D004               	goto	i1l18847
  9940  000064                     i1u184_20:
  9941                           	line	125
  9942                           	
  9943  000064                     i1l18843:
  9944                           ;interrupts.c: 125: PIR1bits.TMR1IF = 0;
  9945  000064  909E               	bcf	((c:3998)),c,0	;volatile
  9946                           	line	126
  9947                           	
  9948  000066                     i1l18845:
  9949                           ;interrupts.c: 126: timer1_int_handler();
  9950  000066  ECA7  F00C         	call	_timer1_int_handler	;wreg free
  9951  00006A  D000               	goto	i1l18847
  9952                           	line	127
  9953                           	
  9954  00006C                     i1l1825:
  9955                           	line	130
  9956                           	
  9957  00006C                     i1l18847:
  9958                           ;interrupts.c: 127: }
  9959                           ;interrupts.c: 130: if(PIR1bits.ADIF){
  9960                           	
  9961  00006C  AC9E               	btfss	((c:3998)),c,6	;volatile
  9962  00006E  D001               	goto	i1u185_21
  9963  000070  D001               	goto	i1u185_20
  9964  000072                     i1u185_21:
  9965  000072  D004               	goto	i1l18853
  9966  000074                     i1u185_20:
  9967                           	line	131
  9968                           	
  9969  000074                     i1l18849:
  9970                           ;interrupts.c: 131: PIR1bits.ADIF = 0;
  9971  000074  9C9E               	bcf	((c:3998)),c,6	;volatile
  9972                           	line	132
  9973                           	
  9974  000076                     i1l18851:
  9975                           ;interrupts.c: 132: adc_int_handler();
  9976  000076  EC68  F00C         	call	_adc_int_handler	;wreg free
  9977  00007A  D000               	goto	i1l18853
  9978                           	line	133
  9979                           	
  9980  00007C                     i1l1826:
  9981                           	line	136
  9982                           	
  9983  00007C                     i1l18853:
  9984                           ;interrupts.c: 133: }
  9985                           ;interrupts.c: 136: if (PIR1bits.RCIF) {
  9986                           	
  9987  00007C  AA9E               	btfss	((c:3998)),c,5	;volatile
  9988  00007E  D001               	goto	i1u186_21
  9989  000080  D001               	goto	i1u186_20
  9990  000082                     i1u186_21:
  9991  000082  D004               	goto	i1l1828
  9992  000084                     i1u186_20:
  9993                           	line	137
  9994                           	
  9995  000084                     i1l18855:
  9996                           ;interrupts.c: 137: PIR1bits.RCIF = 0;
  9997  000084  9A9E               	bcf	((c:3998)),c,5	;volatile
  9998                           	line	138
  9999                           	
 10000  000086                     i1l18857:
 10001                           ;interrupts.c: 138: uart_recv_int_handler();
 10002  000086  EC05  F008         	call	_uart_recv_int_handler	;wreg free
 10003  00008A  D000               	goto	i1l1828
 10004                           	line	139
 10005                           	
 10006  00008C                     i1l1827:
 10007                           	line	140
 10008                           	
 10009  00008C                     i1l1828:
 10010  00008C  C033  FFF5         	movff	??_InterruptHandlerLow+16,tablat+0
 10011  000090  C032  FFF8         	movff	??_InterruptHandlerLow+15,tblptru+0
 10012  000094  C031  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh+0
 10013  000098  C030  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl+0
 10014  00009C  C02F  FFF4         	movff	??_InterruptHandlerLow+12,prodh+0
 10015  0000A0  C02E  FFF3         	movff	??_InterruptHandlerLow+11,prodl+0
 10016  0000A4  C02D  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h+0
 10017  0000A8  C02C  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l+0
 10018  0000AC  C02B  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h+0
 10019  0000B0  C02A  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l+0
 10020  0000B4  C029  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h+0
 10021  0000B8  C028  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l+0
 10022  0000BC  C027  FFFB         	movff	??_InterruptHandlerLow+4,pclat+1
 10023  0000C0  C026  FFFA         	movff	??_InterruptHandlerLow+3,pclat+0
 10024  0000C4  C025  FFE0         	movff	??_InterruptHandlerLow+2,bsr+0
 10025  0000C8  C024  FFE8         	movff	??_InterruptHandlerLow+1,wreg+0
 10026  0000CC  C023  FFD8         	movff	??_InterruptHandlerLow+0,status+0
 10027  0000D0  0010               	retfie
 10028                           	opt stack 0
 10029                           GLOBAL	__end_of_InterruptHandlerLow
 10030  0000D2                     	__end_of_InterruptHandlerLow:
 10031                           	signat	_InterruptHandlerLow,1112
 10032                           	global	_timer1_int_handler
 10033                           
 10034 ;; *************** function _timer1_int_handler *****************
 10035 ;; Defined at:
 10036 ;;		line 37 in file "../src/user_interrupts.c"
 10037 ;; Parameters:    Size  Location     Type
 10038 ;;		None
 10039 ;; Auto vars:     Size  Location     Type
 10040 ;;  result          2   30[COMRAM] unsigned int 
 10041 ;;  temp            2   28[COMRAM] unsigned int 
 10042 ;; Return value:  Size  Location     Type
 10043 ;;		None               void
 10044 ;; Registers used:
 10045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10046 ;; Tracked objects:
 10047 ;;		On entry : 0/0
 10048 ;;		On exit  : 0/0
 10049 ;;		Unchanged: 0/0
 10050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10051 ;;      Params:         0       0       0       0       0
 10052 ;;      Locals:         4       0       0       0       0
 10053 ;;      Temps:          2       0       0       0       0
 10054 ;;      Totals:         6       0       0       0       0
 10055 ;;Total ram usage:        6 bytes
 10056 ;; Hardware stack levels used:    1
 10057 ;; Hardware stack levels required when called:    8
 10058 ;; This function calls:
 10059 ;;		_ReadTimer1
 10060 ;;		_ToMainLow_sendmsg
 10061 ;;		_WriteTimer1
 10062 ;; This function is called by:
 10063 ;;		_InterruptHandlerLow
 10064 ;; This function uses a non-reentrant model
 10065 ;;
 10066                           psect	text29,class=CODE,space=0,reloc=2
 10067                           global __ptext29
 10068  00194E                     __ptext29:
 10069                           psect	text29
 10070                           	file	"../src/user_interrupts.c"
 10071                           	line	37
 10072                           	global	__size_of_timer1_int_handler
 10073  0000                     	__size_of_timer1_int_handler	equ	__end_of_timer1_int_handler-_timer1_int_handler
 10074                           	
 10075  00194E                     _timer1_int_handler:
 10076                           	opt	stack 17
 10077                           	line	42
 10078                           	
 10079  00194E                     i1l18801:
 10080                           ;user_interrupts.c: 38: unsigned int result;
 10081                           ;user_interrupts.c: 42: result = ReadTimer1();
 10082  00194E  EC1A  F00E         	call	_ReadTimer1	;wreg free
 10083  001952  C001  F01F         	movff	0+?_ReadTimer1,(c:timer1_int_handler@result)
 10084  001956  C002  F020         	movff	1+?_ReadTimer1,(c:timer1_int_handler@result+1)
 10085                           	line	43
 10086                           	
 10087  00195A                     i1l18803:
 10088                           ;user_interrupts.c: 43: ToMainLow_sendmsg(sizeof(result), 11, (void *) &result);
 10089  00195A  6E1B               	movwf	(??_timer1_int_handler+0+0)&0ffh,c
 10090  00195C  0E02               	movlw	low(02h)
 10091  00195E  6E17               	movwf	((c:?_ToMainLow_sendmsg)),c
 10092  001960  501B               	movf	(??_timer1_int_handler+0+0)&0ffh,c,w
 10093  001962  6E1C               	movwf	(??_timer1_int_handler+1+0)&0ffh,c
 10094  001964  0E0B               	movlw	low(0Bh)
 10095  001966  6E18               	movwf	(0+((c:?_ToMainLow_sendmsg)+01h)),c
 10096  001968  501C               	movf	(??_timer1_int_handler+1+0)&0ffh,c,w
 10097  00196A  0E00               	movlw	high((c:timer1_int_handler@result))
 10098  00196C  6E1A               	movwf	(1+((c:?_ToMainLow_sendmsg)+02h)),c
 10099  00196E  0E1F               	movlw	low((c:timer1_int_handler@result))
 10100  001970  6E19               	movwf	(0+((c:?_ToMainLow_sendmsg)+02h)),c
 10101  001972  ECD9  F00D         	call	_ToMainLow_sendmsg	;wreg free
 10102                           	line	46
 10103                           	
 10104  001976                     i1l18805:
 10105                           ;user_interrupts.c: 46: unsigned int temp = 0x1;
 10106  001976  0E00               	movlw	high(01h)
 10107  001978  6E1E               	movwf	((c:timer1_int_handler@temp+1)),c
 10108  00197A  0E01               	movlw	low(01h)
 10109  00197C  6E1D               	movwf	((c:timer1_int_handler@temp)),c
 10110                           	line	47
 10111                           	
 10112  00197E                     i1l18807:
 10113                           ;user_interrupts.c: 47: WriteTimer1(temp);
 10114  00197E  C01D  F001         	movff	(c:timer1_int_handler@temp),(c:?_WriteTimer1)
 10115  001982  C01E  F002         	movff	(c:timer1_int_handler@temp+1),(c:?_WriteTimer1+1)
 10116  001986  EC23  F00E         	call	_WriteTimer1	;wreg free
 10117                           	line	48
 10118                           	
 10119  00198A                     i1l16389:
 10120  00198A  0012               	return
 10121                           	opt stack 0
 10122                           GLOBAL	__end_of_timer1_int_handler
 10123  00198C                     	__end_of_timer1_int_handler:
 10124                           	signat	_timer1_int_handler,88
 10125                           	global	_adc_int_handler
 10126                           
 10127 ;; *************** function _adc_int_handler *****************
 10128 ;; Defined at:
 10129 ;;		line 50 in file "../src/user_interrupts.c"
 10130 ;; Parameters:    Size  Location     Type
 10131 ;;		None
 10132 ;; Auto vars:     Size  Location     Type
 10133 ;;  message         4   28[COMRAM] unsigned char [4]
 10134 ;;  value           2   32[COMRAM] unsigned int 
 10135 ;; Return value:  Size  Location     Type
 10136 ;;		None               void
 10137 ;; Registers used:
 10138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10139 ;; Tracked objects:
 10140 ;;		On entry : 0/0
 10141 ;;		On exit  : 0/0
 10142 ;;		Unchanged: 0/0
 10143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10144 ;;      Params:         0       0       0       0       0
 10145 ;;      Locals:         6       0       0       0       0
 10146 ;;      Temps:          2       0       0       0       0
 10147 ;;      Totals:         8       0       0       0       0
 10148 ;;Total ram usage:        8 bytes
 10149 ;; Hardware stack levels used:    1
 10150 ;; Hardware stack levels required when called:    8
 10151 ;; This function calls:
 10152 ;;		_ReadADC
 10153 ;;		_ToMainLow_sendmsg
 10154 ;; This function is called by:
 10155 ;;		_InterruptHandlerLow
 10156 ;; This function uses a non-reentrant model
 10157 ;;
 10158                           psect	text30,class=CODE,space=0,reloc=2
 10159                           global __ptext30
 10160  0018D0                     __ptext30:
 10161                           psect	text30
 10162                           	file	"../src/user_interrupts.c"
 10163                           	line	50
 10164                           	global	__size_of_adc_int_handler
 10165  0000                     	__size_of_adc_int_handler	equ	__end_of_adc_int_handler-_adc_int_handler
 10166                           	
 10167  0018D0                     _adc_int_handler:
 10168                           	opt	stack 17
 10169                           	line	51
 10170                           	
 10171  0018D0                     i1l18809:
 10172                           ;user_interrupts.c: 51: unsigned int value = ReadADC();
 10173  0018D0  EC3C  F00E         	call	_ReadADC	;wreg free
 10174  0018D4  C001  F021         	movff	0+?_ReadADC,(c:adc_int_handler@value)
 10175  0018D8  C002  F022         	movff	1+?_ReadADC,(c:adc_int_handler@value+1)
 10176                           	line	53
 10177                           	
 10178  0018DC                     i1l18811:
 10179                           ;user_interrupts.c: 52: unsigned char message[4];
 10180                           ;user_interrupts.c: 53: message[2] = (unsigned char)(0xFF & value);
 10181  0018DC  C021  F01F         	movff	(c:adc_int_handler@value),0+((c:adc_int_handler@message)+02h)
 10182                           	line	54
 10183                           	
 10184  0018E0                     i1l18813:
 10185                           ;user_interrupts.c: 54: message[3] = (unsigned char)(0xFF & (value>>8));
 10186  0018E0  5022               	movf	((c:adc_int_handler@value+1)),c,w
 10187  0018E2  6E20               	movwf	(0+((c:adc_int_handler@message)+03h)),c
 10188                           	line	55
 10189                           	
 10190  0018E4                     i1l18815:
 10191                           ;user_interrupts.c: 55: message[0] = 0x10;
 10192  0018E4  6E1B               	movwf	(??_adc_int_handler+0+0)&0ffh,c
 10193  0018E6  0E10               	movlw	low(010h)
 10194  0018E8  6E1D               	movwf	((c:adc_int_handler@message)),c
 10195  0018EA  501B               	movf	(??_adc_int_handler+0+0)&0ffh,c,w
 10196                           	line	56
 10197                           	
 10198  0018EC                     i1l18817:
 10199                           ;user_interrupts.c: 56: message[1] = adcMsgCount;
 10200  0018EC  C047  F01E         	movff	(c:_adcMsgCount),0+((c:adc_int_handler@message)+01h)
 10201                           	line	57
 10202                           	
 10203  0018F0                     i1l18819:
 10204                           ;user_interrupts.c: 57: adcMsgCount++;
 10205  0018F0  2A47               	incf	((c:_adcMsgCount)),c
 10206                           	line	58
 10207                           	
 10208  0018F2                     i1l18821:
 10209                           ;user_interrupts.c: 58: ToMainLow_sendmsg(4,40,(void *) message);
 10210  0018F2  6E1B               	movwf	(??_adc_int_handler+0+0)&0ffh,c
 10211  0018F4  0E04               	movlw	low(04h)
 10212  0018F6  6E17               	movwf	((c:?_ToMainLow_sendmsg)),c
 10213  0018F8  501B               	movf	(??_adc_int_handler+0+0)&0ffh,c,w
 10214  0018FA  6E1C               	movwf	(??_adc_int_handler+1+0)&0ffh,c
 10215  0018FC  0E28               	movlw	low(028h)
 10216  0018FE  6E18               	movwf	(0+((c:?_ToMainLow_sendmsg)+01h)),c
 10217  001900  501C               	movf	(??_adc_int_handler+1+0)&0ffh,c,w
 10218  001902  0E00               	movlw	high((c:adc_int_handler@message))
 10219  001904  6E1A               	movwf	(1+((c:?_ToMainLow_sendmsg)+02h)),c
 10220  001906  0E1D               	movlw	low((c:adc_int_handler@message))
 10221  001908  6E19               	movwf	(0+((c:?_ToMainLow_sendmsg)+02h)),c
 10222  00190A  ECD9  F00D         	call	_ToMainLow_sendmsg	;wreg free
 10223                           	line	59
 10224                           	
 10225  00190E                     i1l16392:
 10226  00190E  0012               	return
 10227                           	opt stack 0
 10228                           GLOBAL	__end_of_adc_int_handler
 10229  001910                     	__end_of_adc_int_handler:
 10230                           	signat	_adc_int_handler,88
 10231                           	global	_uart_recv_int_handler
 10232                           
 10233 ;; *************** function _uart_recv_int_handler *****************
 10234 ;; Defined at:
 10235 ;;		line 11 in file "../src/my_uart.c"
 10236 ;; Parameters:    Size  Location     Type
 10237 ;;		None
 10238 ;; Auto vars:     Size  Location     Type
 10239 ;;		None
 10240 ;; Return value:  Size  Location     Type
 10241 ;;		None               void
 10242 ;; Registers used:
 10243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10244 ;; Tracked objects:
 10245 ;;		On entry : 0/0
 10246 ;;		On exit  : 0/0
 10247 ;;		Unchanged: 0/0
 10248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10249 ;;      Params:         0       0       0       0       0
 10250 ;;      Locals:         0       0       0       0       0
 10251 ;;      Temps:          2       0       0       0       0
 10252 ;;      Totals:         2       0       0       0       0
 10253 ;;Total ram usage:        2 bytes
 10254 ;; Hardware stack levels used:    1
 10255 ;; Hardware stack levels required when called:    8
 10256 ;; This function calls:
 10257 ;;		_ReadUSART
 10258 ;;		_ToMainLow_sendmsg
 10259 ;; This function is called by:
 10260 ;;		_InterruptHandlerLow
 10261 ;; This function uses a non-reentrant model
 10262 ;;
 10263                           psect	text31,class=CODE,space=0,reloc=2
 10264                           global __ptext31
 10265  00100A                     __ptext31:
 10266                           psect	text31
 10267                           	file	"../src/my_uart.c"
 10268                           	line	11
 10269                           	global	__size_of_uart_recv_int_handler
 10270  0000                     	__size_of_uart_recv_int_handler	equ	__end_of_uart_recv_int_handler-_uart_recv_int_handl
                                 er
 10271                           	
 10272  00100A                     _uart_recv_int_handler:
 10273                           	opt	stack 17
 10274                           	line	12
 10275                           	
 10276  00100A                     i1l18823:
 10277                           ;my_uart.c: 12: if ((PIR1bits.RCIF)) {
 10278                           	
 10279  00100A  AA9E               	btfss	((c:3998)),c,5	;volatile
 10280  00100C  D001               	goto	i1u181_21
 10281  00100E  D001               	goto	i1u181_20
 10282  001010                     i1u181_21:
 10283  001010  D041               	goto	i1l18835
 10284  001012                     i1u181_20:
 10285                           	line	13
 10286                           	
 10287  001012                     i1l18825:
 10288                           ;my_uart.c: 13: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
 10289  001012  EE20 F004          	lfsr	2,04h
 10290  001016  504A               	movf	((c:_uc_ptr)),c,w
 10291  001018  26D9               	addwf	fsr2l
 10292  00101A  504B               	movf	((c:_uc_ptr+1)),c,w
 10293  00101C  22DA               	addwfc	fsr2h
 10294  00101E  50DF               	movf	indf2,w
 10295  001020  6E1B               	movwf	(??_uart_recv_int_handler+0+0)&0ffh,c
 10296  001022  501B               	movf	((??_uart_recv_int_handler+0+0)),c,w
 10297  001024  0D01               	mullw	01h
 10298  001026  50F3               	movf	(prodl),c,w
 10299  001028  244A               	addwf	((c:_uc_ptr)),c,w
 10300  00102A  6ED9               	movwf	c:fsr2l
 10301  00102C  50F4               	movf	(prodh),c,w
 10302  00102E  204B               	addwfc	((c:_uc_ptr+1)),c,w
 10303  001030  6EDA               	movwf	1+c:fsr2l
 10304  001032  ECE2  F00C         	call	_ReadUSART	;wreg free
 10305  001036  6EDF               	movwf	indf2
 10306                           
 10307                           	line	14
 10308                           	
 10309  001038                     i1l18827:
 10310                           ;my_uart.c: 14: uc_ptr->buflen++;
 10311  001038  EE20 F004          	lfsr	2,04h
 10312  00103C  504A               	movf	((c:_uc_ptr)),c,w
 10313  00103E  26D9               	addwf	fsr2l
 10314  001040  504B               	movf	((c:_uc_ptr+1)),c,w
 10315  001042  22DA               	addwfc	fsr2h
 10316  001044  2ADF               	incf	indf2
 10317                           
 10318                           	line	16
 10319                           	
 10320  001046                     i1l18829:
 10321                           ;my_uart.c: 16: if (uc_ptr->buflen == 4) {
 10322  001046  EE20 F004          	lfsr	2,04h
 10323  00104A  504A               	movf	((c:_uc_ptr)),c,w
 10324  00104C  26D9               	addwf	fsr2l
 10325  00104E  504B               	movf	((c:_uc_ptr+1)),c,w
 10326  001050  22DA               	addwfc	fsr2h
 10327  001052  0E04               	movlw	(04h)&0ffh
 10328  001054  62DF               	cpfseq	indf2
 10329  001056  D001               	goto	i1u182_21
 10330  001058  D001               	goto	i1u182_20
 10331  00105A                     i1u182_21:
 10332  00105A  D01C               	goto	i1l18835
 10333  00105C                     i1u182_20:
 10334                           	line	17
 10335                           	
 10336  00105C                     i1l18831:
 10337                           ;my_uart.c: 17: ToMainLow_sendmsg(uc_ptr->buflen, 31, (void *) uc_ptr->buffer);
 10338  00105C  EE20 F004          	lfsr	2,04h
 10339  001060  504A               	movf	((c:_uc_ptr)),c,w
 10340  001062  26D9               	addwf	fsr2l
 10341  001064  504B               	movf	((c:_uc_ptr+1)),c,w
 10342  001066  22DA               	addwfc	fsr2h
 10343  001068  50DF               	movf	indf2,w
 10344  00106A  6E17               	movwf	((c:?_ToMainLow_sendmsg)),c
 10345  00106C  6E1B               	movwf	(??_uart_recv_int_handler+0+0)&0ffh,c
 10346  00106E  0E1F               	movlw	low(01Fh)
 10347  001070  6E18               	movwf	(0+((c:?_ToMainLow_sendmsg)+01h)),c
 10348  001072  501B               	movf	(??_uart_recv_int_handler+0+0)&0ffh,c,w
 10349  001074  C04A  F019         	movff	(c:_uc_ptr),0+((c:?_ToMainLow_sendmsg)+02h)
 10350  001078  C04B  F01A         	movff	(c:_uc_ptr+1),1+((c:?_ToMainLow_sendmsg)+02h)
 10351  00107C  ECD9  F00D         	call	_ToMainLow_sendmsg	;wreg free
 10352                           	line	18
 10353                           	
 10354  001080                     i1l18833:
 10355                           ;my_uart.c: 18: uc_ptr->buflen = 0;
 10356  001080  EE20 F004          	lfsr	2,04h
 10357  001084  504A               	movf	((c:_uc_ptr)),c,w
 10358  001086  26D9               	addwf	fsr2l
 10359  001088  504B               	movf	((c:_uc_ptr+1)),c,w
 10360  00108A  22DA               	addwfc	fsr2h
 10361  00108C  0E00               	movlw	low(0)
 10362  00108E  6EDF               	movwf	indf2
 10363  001090  D001               	goto	i1l18835
 10364                           	line	19
 10365                           	
 10366  001092                     i1l9204:
 10367  001092  D000               	goto	i1l18835
 10368                           	line	20
 10369                           	
 10370  001094                     i1l9203:
 10371                           	line	21
 10372                           	
 10373  001094                     i1l18835:
 10374                           ;my_uart.c: 19: }
 10375                           ;my_uart.c: 20: }
 10376                           ;my_uart.c: 21: if (USART_Status.OVERRUN_ERROR == 1) {
 10377                           	
 10378  001094  A646               	btfss	((c:_USART_Status)),c,3
 10379  001096  D001               	goto	i1u183_21
 10380  001098  D001               	goto	i1u183_20
 10381  00109A                     i1u183_21:
 10382  00109A  D011               	goto	i1l9206
 10383  00109C                     i1u183_20:
 10384                           	line	24
 10385                           	
 10386  00109C                     i1l18837:
 10387                           ;my_uart.c: 24: RCSTAbits.CREN = 0;
 10388  00109C  98AB               	bcf	((c:4011)),c,4	;volatile
 10389                           	line	25
 10390                           ;my_uart.c: 25: RCSTAbits.CREN = 1;
 10391  00109E  88AB               	bsf	((c:4011)),c,4	;volatile
 10392                           	line	26
 10393                           	
 10394  0010A0                     i1l18839:
 10395                           ;my_uart.c: 26: ToMainLow_sendmsg(0, 30, (void *) 0);
 10396  0010A0  6E1B               	movwf	(??_uart_recv_int_handler+0+0)&0ffh,c
 10397  0010A2  0E00               	movlw	low(0)
 10398  0010A4  6E17               	movwf	((c:?_ToMainLow_sendmsg)),c
 10399  0010A6  501B               	movf	(??_uart_recv_int_handler+0+0)&0ffh,c,w
 10400  0010A8  6E1C               	movwf	(??_uart_recv_int_handler+1+0)&0ffh,c
 10401  0010AA  0E1E               	movlw	low(01Eh)
 10402  0010AC  6E18               	movwf	(0+((c:?_ToMainLow_sendmsg)+01h)),c
 10403  0010AE  501C               	movf	(??_uart_recv_int_handler+1+0)&0ffh,c,w
 10404  0010B0  0E00               	movlw	high(0)
 10405  0010B2  6E1A               	movwf	(1+((c:?_ToMainLow_sendmsg)+02h)),c
 10406  0010B4  0E00               	movlw	low(0)
 10407  0010B6  6E19               	movwf	(0+((c:?_ToMainLow_sendmsg)+02h)),c
 10408  0010B8  ECD9  F00D         	call	_ToMainLow_sendmsg	;wreg free
 10409  0010BC  D000               	goto	i1l9206
 10410                           	line	27
 10411                           	
 10412  0010BE                     i1l9205:
 10413                           	line	28
 10414                           	
 10415  0010BE                     i1l9206:
 10416  0010BE  0012               	return
 10417                           	opt stack 0
 10418                           GLOBAL	__end_of_uart_recv_int_handler
 10419  0010C0                     	__end_of_uart_recv_int_handler:
 10420                           	signat	_uart_recv_int_handler,88
 10421                           	global	_ToMainLow_sendmsg
 10422                           
 10423 ;; *************** function _ToMainLow_sendmsg *****************
 10424 ;; Defined at:
 10425 ;;		line 103 in file "../src/messages.c"
 10426 ;; Parameters:    Size  Location     Type
 10427 ;;  length          1   22[COMRAM] unsigned char 
 10428 ;;  msgtype         1   23[COMRAM] unsigned char 
 10429 ;;  data            2   24[COMRAM] PTR void 
 10430 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), NULL(0), main@uc(5), 
 10431 ;; Auto vars:     Size  Location     Type
 10432 ;;		None
 10433 ;; Return value:  Size  Location     Type
 10434 ;;                  1    wreg      char 
 10435 ;; Registers used:
 10436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10437 ;; Tracked objects:
 10438 ;;		On entry : 0/0
 10439 ;;		On exit  : 0/0
 10440 ;;		Unchanged: 0/0
 10441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10442 ;;      Params:         4       0       0       0       0
 10443 ;;      Locals:         0       0       0       0       0
 10444 ;;      Temps:          0       0       0       0       0
 10445 ;;      Totals:         4       0       0       0       0
 10446 ;;Total ram usage:        4 bytes
 10447 ;; Hardware stack levels used:    1
 10448 ;; Hardware stack levels required when called:    7
 10449 ;; This function calls:
 10450 ;;		i1_send_msg
 10451 ;; This function is called by:
 10452 ;;		_uart_recv_int_handler
 10453 ;;		_timer1_int_handler
 10454 ;;		_adc_int_handler
 10455 ;; This function uses a non-reentrant model
 10456 ;;
 10457                           psect	text32,class=CODE,space=0,reloc=2
 10458                           global __ptext32
 10459  001BB2                     __ptext32:
 10460                           psect	text32
 10461                           	file	"../src/messages.c"
 10462                           	line	103
 10463                           	global	__size_of_ToMainLow_sendmsg
 10464  0000                     	__size_of_ToMainLow_sendmsg	equ	__end_of_ToMainLow_sendmsg-_ToMainLow_sendmsg
 10465                           	
 10466  001BB2                     _ToMainLow_sendmsg:
 10467                           	opt	stack 17
 10468                           	line	109
 10469                           	
 10470  001BB2                     i1l18797:
 10471                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
 10472                           ;	Return value of _ToMainLow_sendmsg is never used
 10473  001BB2  0101               	movlb	1	; () banked
 10474  001BB4  0E01               	movlw	high(_ToMainLow_MQ)
 10475  001BB6  6E0C               	movwf	((c:?i1_send_msg+1)),c
 10476  001BB8  0101               	movlb	1	; () banked
 10477  001BBA  0E6C               	movlw	low(_ToMainLow_MQ)
 10478  001BBC  6E0B               	movwf	((c:?i1_send_msg)),c
 10479  001BBE  C017  F00D         	movff	(c:ToMainLow_sendmsg@length),0+((c:?i1_send_msg)+02h)
 10480  001BC2  C018  F00E         	movff	(c:ToMainLow_sendmsg@msgtype),0+((c:?i1_send_msg)+03h)
 10481  001BC6  C019  F00F         	movff	(c:ToMainLow_sendmsg@data),0+((c:?i1_send_msg)+04h)
 10482  001BCA  C01A  F010         	movff	(c:ToMainLow_sendmsg@data+1),1+((c:?i1_send_msg)+04h)
 10483  001BCE  ECBA  F008         	call	i1_send_msg	;wreg free
 10484  001BD2  D000               	goto	i1l5485
 10485                           	
 10486  001BD4                     i1l18799:
 10487                           	line	110
 10488                           	
 10489  001BD4                     i1l5485:
 10490  001BD4  0012               	return
 10491                           	opt stack 0
 10492                           GLOBAL	__end_of_ToMainLow_sendmsg
 10493  001BD6                     	__end_of_ToMainLow_sendmsg:
 10494                           	signat	_ToMainLow_sendmsg,12409
 10495                           	global	_ReadUSART
 10496                           
 10497 ;; *************** function _ReadUSART *****************
 10498 ;; Defined at:
 10499 ;;		line 16 in file "plib/USART/uread.c"
 10500 ;; Parameters:    Size  Location     Type
 10501 ;;		None
 10502 ;; Auto vars:     Size  Location     Type
 10503 ;;  data            1    0[COMRAM] unsigned char 
 10504 ;; Return value:  Size  Location     Type
 10505 ;;                  1    wreg      unsigned char 
 10506 ;; Registers used:
 10507 ;;		wreg, status,2, status,0
 10508 ;; Tracked objects:
 10509 ;;		On entry : 0/0
 10510 ;;		On exit  : 0/0
 10511 ;;		Unchanged: 0/0
 10512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10513 ;;      Params:         0       0       0       0       0
 10514 ;;      Locals:         1       0       0       0       0
 10515 ;;      Temps:          0       0       0       0       0
 10516 ;;      Totals:         1       0       0       0       0
 10517 ;;Total ram usage:        1 bytes
 10518 ;; Hardware stack levels used:    1
 10519 ;; Hardware stack levels required when called:    5
 10520 ;; This function calls:
 10521 ;;		Nothing
 10522 ;; This function is called by:
 10523 ;;		_uart_recv_int_handler
 10524 ;; This function uses a non-reentrant model
 10525 ;;
 10526                           psect	text33,class=CODE,space=0,reloc=2
 10527                           global __ptext33
 10528  0019C4                     __ptext33:
 10529                           psect	text33
 10530                           	file	"plib/USART/uread.c"
 10531                           	line	16
 10532                           	global	__size_of_ReadUSART
 10533  0000                     	__size_of_ReadUSART	equ	__end_of_ReadUSART-_ReadUSART
 10534                           	
 10535  0019C4                     _ReadUSART:
 10536                           	opt	stack 19
 10537                           	line	19
 10538                           	
 10539  0019C4                     i1l18635:
 10540  0019C4  0EF2               	movlw	(0F2h)&0ffh
 10541  0019C6  1646               	andwf	((c:_USART_Status)),c
 10542                           	line	21
 10543                           	
 10544  0019C8                     i1l18637:
 10545                           	
 10546  0019C8  ACAB               	btfss	((c:4011)),c,6	;volatile
 10547  0019CA  D001               	goto	i1u168_21
 10548  0019CC  D001               	goto	i1u168_20
 10549  0019CE                     i1u168_21:
 10550  0019CE  D007               	goto	i1l16513
 10551  0019D0                     i1u168_20:
 10552                           	line	23
 10553                           	
 10554  0019D0                     i1l18639:
 10555  0019D0  9046               	bcf	((c:_USART_Status)),c,0
 10556                           	line	24
 10557                           	
 10558  0019D2  A0AB               	btfss	((c:4011)),c,0	;volatile
 10559  0019D4  D001               	goto	i1u169_21
 10560  0019D6  D001               	goto	i1u169_20
 10561  0019D8                     i1u169_21:
 10562  0019D8  D002               	goto	i1l16513
 10563  0019DA                     i1u169_20:
 10564                           	line	25
 10565                           	
 10566  0019DA                     i1l18641:
 10567  0019DA  8046               	bsf	((c:_USART_Status)),c,0
 10568  0019DC  D000               	goto	i1l16513
 10569                           	
 10570  0019DE                     i1l16514:
 10571                           	line	26
 10572                           	
 10573  0019DE                     i1l16513:
 10574                           	line	28
 10575                           	
 10576  0019DE  A4AB               	btfss	((c:4011)),c,2	;volatile
 10577  0019E0  D001               	goto	i1u170_21
 10578  0019E2  D001               	goto	i1u170_20
 10579  0019E4                     i1u170_21:
 10580  0019E4  D001               	goto	i1l16515
 10581  0019E6                     i1u170_20:
 10582                           	line	29
 10583                           	
 10584  0019E6                     i1l18643:
 10585  0019E6  8446               	bsf	((c:_USART_Status)),c,2
 10586                           	
 10587  0019E8                     i1l16515:
 10588                           	line	31
 10589                           	
 10590  0019E8  A2AB               	btfss	((c:4011)),c,1	;volatile
 10591  0019EA  D001               	goto	i1u171_21
 10592  0019EC  D001               	goto	i1u171_20
 10593  0019EE                     i1u171_21:
 10594  0019EE  D001               	goto	i1l16516
 10595  0019F0                     i1u171_20:
 10596                           	line	32
 10597                           	
 10598  0019F0                     i1l18645:
 10599  0019F0  8646               	bsf	((c:_USART_Status)),c,3
 10600                           	
 10601  0019F2                     i1l16516:
 10602                           	line	34
 10603  0019F2  CFAE F001          	movff	(c:4014),(c:ReadUSART@data)	;volatile
 10604                           	line	36
 10605                           	
 10606  0019F6                     i1l18647:
 10607  0019F6  5001               	movf	((c:ReadUSART@data)),c,w
 10608  0019F8  D000               	goto	i1l16517
 10609                           	
 10610  0019FA                     i1l18649:
 10611                           	line	37
 10612                           	
 10613  0019FA                     i1l16517:
 10614  0019FA  0012               	return
 10615                           	opt stack 0
 10616                           GLOBAL	__end_of_ReadUSART
 10617  0019FC                     	__end_of_ReadUSART:
 10618                           	signat	_ReadUSART,89
 10619                           	global	_ReadTimer1
 10620                           
 10621 ;; *************** function _ReadTimer1 *****************
 10622 ;; Defined at:
 10623 ;;		line 16 in file "plib/Timers/t1read.c"
 10624 ;; Parameters:    Size  Location     Type
 10625 ;;		None
 10626 ;; Auto vars:     Size  Location     Type
 10627 ;;  timer           2    2[COMRAM] struct Timers
 10628 ;; Return value:  Size  Location     Type
 10629 ;;                  2    0[COMRAM] unsigned int 
 10630 ;; Registers used:
 10631 ;;		None
 10632 ;; Tracked objects:
 10633 ;;		On entry : 0/0
 10634 ;;		On exit  : 0/0
 10635 ;;		Unchanged: 0/0
 10636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10637 ;;      Params:         2       0       0       0       0
 10638 ;;      Locals:         2       0       0       0       0
 10639 ;;      Temps:          0       0       0       0       0
 10640 ;;      Totals:         4       0       0       0       0
 10641 ;;Total ram usage:        4 bytes
 10642 ;; Hardware stack levels used:    1
 10643 ;; Hardware stack levels required when called:    5
 10644 ;; This function calls:
 10645 ;;		Nothing
 10646 ;; This function is called by:
 10647 ;;		_timer1_int_handler
 10648 ;; This function uses a non-reentrant model
 10649 ;;
 10650                           psect	text34,class=CODE,space=0,reloc=2
 10651                           global __ptext34
 10652  001C34                     __ptext34:
 10653                           psect	text34
 10654                           	file	"plib/Timers/t1read.c"
 10655                           	line	16
 10656                           	global	__size_of_ReadTimer1
 10657  0000                     	__size_of_ReadTimer1	equ	__end_of_ReadTimer1-_ReadTimer1
 10658                           	
 10659  001C34                     _ReadTimer1:
 10660                           	opt	stack 19
 10661                           	line	19
 10662                           	
 10663  001C34                     i1l17739:
 10664  001C34  CFCE F003          	movff	(c:4046),(c:ReadTimer1@timer)	;volatile
 10665                           	line	20
 10666  001C38  CFCF F004          	movff	(c:4047),0+((c:ReadTimer1@timer)+01h)	;volatile
 10667                           	line	22
 10668  001C3C  C003  F001         	movff	(c:ReadTimer1@timer),(c:?_ReadTimer1)
 10669  001C40  C004  F002         	movff	(c:ReadTimer1@timer+1),(c:?_ReadTimer1+1)
 10670                           	line	23
 10671                           	
 10672  001C44                     i1l16462:
 10673  001C44  0012               	return
 10674                           	opt stack 0
 10675                           GLOBAL	__end_of_ReadTimer1
 10676  001C46                     	__end_of_ReadTimer1:
 10677                           	signat	_ReadTimer1,90
 10678                           	global	_WriteTimer1
 10679                           
 10680 ;; *************** function _WriteTimer1 *****************
 10681 ;; Defined at:
 10682 ;;		line 15 in file "plib/Timers/t1write.c"
 10683 ;; Parameters:    Size  Location     Type
 10684 ;;  timer1          2    0[COMRAM] unsigned int 
 10685 ;; Auto vars:     Size  Location     Type
 10686 ;;  timer           2    2[COMRAM] struct Timers
 10687 ;; Return value:  Size  Location     Type
 10688 ;;		None               void
 10689 ;; Registers used:
 10690 ;;		None
 10691 ;; Tracked objects:
 10692 ;;		On entry : 0/0
 10693 ;;		On exit  : 0/0
 10694 ;;		Unchanged: 0/0
 10695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10696 ;;      Params:         2       0       0       0       0
 10697 ;;      Locals:         2       0       0       0       0
 10698 ;;      Temps:          0       0       0       0       0
 10699 ;;      Totals:         4       0       0       0       0
 10700 ;;Total ram usage:        4 bytes
 10701 ;; Hardware stack levels used:    1
 10702 ;; Hardware stack levels required when called:    5
 10703 ;; This function calls:
 10704 ;;		Nothing
 10705 ;; This function is called by:
 10706 ;;		_timer1_int_handler
 10707 ;; This function uses a non-reentrant model
 10708 ;;
 10709                           psect	text35,class=CODE,space=0,reloc=2
 10710                           global __ptext35
 10711  001C46                     __ptext35:
 10712                           psect	text35
 10713                           	file	"plib/Timers/t1write.c"
 10714                           	line	15
 10715                           	global	__size_of_WriteTimer1
 10716  0000                     	__size_of_WriteTimer1	equ	__end_of_WriteTimer1-_WriteTimer1
 10717                           	
 10718  001C46                     _WriteTimer1:
 10719                           	opt	stack 19
 10720                           	line	18
 10721                           	
 10722  001C46                     i1l17741:
 10723  001C46  C001  F003         	movff	(c:WriteTimer1@timer1),(c:WriteTimer1@timer)
 10724  001C4A  C002  F004         	movff	(c:WriteTimer1@timer1+1),(c:WriteTimer1@timer+1)
 10725                           	line	20
 10726  001C4E  C004  FFCF         	movff	0+((c:WriteTimer1@timer)+01h),(c:4047)	;volatile
 10727                           	line	21
 10728  001C52  C003  FFCE         	movff	(c:WriteTimer1@timer),(c:4046)	;volatile
 10729                           	line	22
 10730                           	
 10731  001C56                     i1l16469:
 10732  001C56  0012               	return
 10733                           	opt stack 0
 10734                           GLOBAL	__end_of_WriteTimer1
 10735  001C58                     	__end_of_WriteTimer1:
 10736                           	signat	_WriteTimer1,4216
 10737                           	global	_ReadADC
 10738                           
 10739 ;; *************** function _ReadADC *****************
 10740 ;; Defined at:
 10741 ;;		line 25 in file "plib/ADC/adcread.c"
 10742 ;; Parameters:    Size  Location     Type
 10743 ;;		None
 10744 ;; Auto vars:     Size  Location     Type
 10745 ;;		None
 10746 ;; Return value:  Size  Location     Type
 10747 ;;                  2    0[COMRAM] int 
 10748 ;; Registers used:
 10749 ;;		wreg, status,2
 10750 ;; Tracked objects:
 10751 ;;		On entry : 0/0
 10752 ;;		On exit  : 0/0
 10753 ;;		Unchanged: 0/0
 10754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10755 ;;      Params:         2       0       0       0       0
 10756 ;;      Locals:         0       0       0       0       0
 10757 ;;      Temps:          0       0       0       0       0
 10758 ;;      Totals:         2       0       0       0       0
 10759 ;;Total ram usage:        2 bytes
 10760 ;; Hardware stack levels used:    1
 10761 ;; Hardware stack levels required when called:    5
 10762 ;; This function calls:
 10763 ;;		Nothing
 10764 ;; This function is called by:
 10765 ;;		_adc_int_handler
 10766 ;; This function uses a non-reentrant model
 10767 ;;
 10768                           psect	text36,class=CODE,space=0,reloc=2
 10769                           global __ptext36
 10770  001C78                     __ptext36:
 10771                           psect	text36
 10772                           	file	"plib/ADC/adcread.c"
 10773                           	line	25
 10774                           	global	__size_of_ReadADC
 10775  0000                     	__size_of_ReadADC	equ	__end_of_ReadADC-_ReadADC
 10776                           	
 10777  001C78                     _ReadADC:
 10778                           	opt	stack 19
 10779                           	line	26
 10780                           	
 10781  001C78                     i1l17743:
 10782  001C78  50C4               	movf	((c:4036)),c,w	;volatile
 10783  001C7A  6E02               	movwf	((c:?_ReadADC+1)),c
 10784  001C7C  50C3               	movf	((c:4035)),c,w	;volatile
 10785  001C7E  6E01               	movwf	((c:?_ReadADC)),c
 10786  001C80  D000               	goto	i1l16422
 10787                           	
 10788  001C82                     i1l17745:
 10789                           	line	27
 10790                           	
 10791  001C82                     i1l16422:
 10792  001C82  0012               	return
 10793                           	opt stack 0
 10794                           GLOBAL	__end_of_ReadADC
 10795  001C84                     	__end_of_ReadADC:
 10796                           	signat	_ReadADC,90
 10797                           	global	i1_send_msg
 10798                           
 10799 ;; *************** function i1_send_msg *****************
 10800 ;; Defined at:
 10801 ;;		line 24 in file "../src/messages.c"
 10802 ;; Parameters:    Size  Location     Type
 10803 ;;  send_msg        2   10[COMRAM] PTR struct __msg_queue
 10804 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 10805 ;;  send_msg        1   12[COMRAM] unsigned char 
 10806 ;;  send_msg        1   13[COMRAM] unsigned char 
 10807 ;;  send_msg        2   14[COMRAM] PTR void 
 10808 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 10809 ;;		 -> i2c_int_handler@error_buf(3), main@msgbuffer(11), main@uc(5), 
 10810 ;; Auto vars:     Size  Location     Type
 10811 ;;  send_msg        2   20[COMRAM] PTR struct __msg
 10812 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 10813 ;;  send_msg        2   17[COMRAM] unsigned int 
 10814 ;;  send_msg        1   19[COMRAM] unsigned char 
 10815 ;; Return value:  Size  Location     Type
 10816 ;;                  1    wreg      char 
 10817 ;; Registers used:
 10818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10819 ;; Tracked objects:
 10820 ;;		On entry : 0/0
 10821 ;;		On exit  : 0/0
 10822 ;;		Unchanged: 0/0
 10823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 10824 ;;      Params:         6       0       0       0       0
 10825 ;;      Locals:         5       0       0       0       0
 10826 ;;      Temps:          1       0       0       0       0
 10827 ;;      Totals:        12       0       0       0       0
 10828 ;;Total ram usage:       12 bytes
 10829 ;; Hardware stack levels used:    1
 10830 ;; Hardware stack levels required when called:    6
 10831 ;; This function calls:
 10832 ;;		i1_memcpy
 10833 ;; This function is called by:
 10834 ;;		_ToMainLow_sendmsg
 10835 ;; This function uses a non-reentrant model
 10836 ;;
 10837                           psect	text37,class=CODE,space=0,reloc=2
 10838                           global __ptext37
 10839  001174                     __ptext37:
 10840                           psect	text37
 10841                           	file	"../src/messages.c"
 10842                           	line	24
 10843                           	global	__size_ofi1_send_msg
 10844  0000                     	__size_ofi1_send_msg	equ	__end_ofi1_send_msg-i1_send_msg
 10845                           	
 10846  001174                     i1_send_msg:
 10847                           	opt	stack 17
 10848                           	line	28
 10849                           	
 10850  001174                     i1l18773:
 10851                           ;messages.c: 25: unsigned char slot;
 10852                           ;messages.c: 27: msg *qmsg;
 10853                           ;messages.c: 28: size_t tlength = length;
 10854  001174  C00D  F012         	movff	(c:i1send_msg@length),(c:i1send_msg@tlength)
 10855  001178  6A13               	clrf	((c:i1send_msg@tlength+1)),c
 10856                           	line	38
 10857                           	
 10858  00117A                     i1l18775:
 10859                           ;messages.c: 38: slot = qptr->cur_write_ind;
 10860  00117A  EE20 F034          	lfsr	2,034h
 10861  00117E  500B               	movf	((c:i1send_msg@qptr)),c,w
 10862  001180  26D9               	addwf	fsr2l
 10863  001182  500C               	movf	((c:i1send_msg@qptr+1)),c,w
 10864  001184  22DA               	addwfc	fsr2h
 10865  001186  50DF               	movf	indf2,w
 10866  001188  6E14               	movwf	((c:i1send_msg@slot)),c
 10867                           	line	39
 10868                           	
 10869  00118A                     i1l18777:
 10870                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
 10871  00118A  5014               	movf	((c:i1send_msg@slot)),c,w
 10872  00118C  0D0D               	mullw	0Dh
 10873  00118E  50F3               	movf	(prodl),c,w
 10874  001190  240B               	addwf	((c:i1send_msg@qptr)),c,w
 10875                           	
 10876  001192  6E15               	movwf	((c:i1send_msg@qmsg)),c
 10877  001194  50F4               	movf	(prodh),c,w
 10878  001196  200C               	addwfc	((c:i1send_msg@qptr+1)),c,w
 10879  001198  6E16               	movwf	1+((c:i1send_msg@qmsg)),c
 10880                           	line	41
 10881                           	
 10882  00119A                     i1l18779:
 10883                           ;messages.c: 41: if (qmsg->full != 0) {
 10884  00119A  C015  FFD9         	movff	(c:i1send_msg@qmsg),fsr2l
 10885  00119E  C016  FFDA         	movff	(c:i1send_msg@qmsg+1),fsr2h
 10886  0011A2  50DF               	movf	indf2,w
 10887  0011A4  B4D8               	btfsc	status,2
 10888  0011A6  D001               	goto	i1u180_21
 10889  0011A8  D001               	goto	i1u180_20
 10890  0011AA                     i1u180_21:
 10891  0011AA  D003               	goto	i1l18785
 10892  0011AC                     i1u180_20:
 10893                           	line	42
 10894                           	
 10895  0011AC                     i1l18781:
 10896                           ;messages.c: 42: return (-1);
 10897  0011AC  0EFF               	movlw	(-1)&0ffh
 10898  0011AE  D03A               	goto	i1l5474
 10899                           	
 10900  0011B0                     i1l18783:
 10901  0011B0  D039               	goto	i1l5474
 10902                           	line	43
 10903                           	
 10904  0011B2                     i1l5473:
 10905                           	line	46
 10906                           	
 10907  0011B2                     i1l18785:
 10908                           ;messages.c: 43: }
 10909                           ;messages.c: 46: qmsg->length = length;
 10910  0011B2  EE20 F001          	lfsr	2,01h
 10911  0011B6  5015               	movf	((c:i1send_msg@qmsg)),c,w
 10912  0011B8  26D9               	addwf	fsr2l
 10913  0011BA  5016               	movf	((c:i1send_msg@qmsg+1)),c,w
 10914  0011BC  22DA               	addwfc	fsr2h
 10915  0011BE  C00D  FFDF         	movff	(c:i1send_msg@length),indf2
 10916                           
 10917                           	line	47
 10918                           ;messages.c: 47: qmsg->msgtype = msgtype;
 10919  0011C2  EE20 F002          	lfsr	2,02h
 10920  0011C6  5015               	movf	((c:i1send_msg@qmsg)),c,w
 10921  0011C8  26D9               	addwf	fsr2l
 10922  0011CA  5016               	movf	((c:i1send_msg@qmsg+1)),c,w
 10923  0011CC  22DA               	addwfc	fsr2h
 10924  0011CE  C00E  FFDF         	movff	(c:i1send_msg@msgtype),indf2
 10925                           
 10926                           	line	55
 10927                           	
 10928  0011D2                     i1l18787:
 10929                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
 10930  0011D2  0E03               	movlw	low(03h)
 10931  0011D4  2415               	addwf	((c:i1send_msg@qmsg)),c,w
 10932                           	
 10933  0011D6  6E01               	movwf	((c:?i1_memcpy)),c
 10934  0011D8  0E00               	movlw	high(03h)
 10935  0011DA  2016               	addwfc	((c:i1send_msg@qmsg+1)),c,w
 10936  0011DC  6E02               	movwf	1+((c:?i1_memcpy)),c
 10937  0011DE  C00F  F003         	movff	(c:i1send_msg@data),0+((c:?i1_memcpy)+02h)
 10938  0011E2  C010  F004         	movff	(c:i1send_msg@data+1),1+((c:?i1_memcpy)+02h)
 10939  0011E6  C012  F005         	movff	(c:i1send_msg@tlength),0+((c:?i1_memcpy)+04h)
 10940  0011EA  C013  F006         	movff	(c:i1send_msg@tlength+1),1+((c:?i1_memcpy)+04h)
 10941  0011EE  ECFE  F00B         	call	i1_memcpy	;wreg free
 10942                           	line	56
 10943                           	
 10944  0011F2                     i1l18789:
 10945                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
 10946  0011F2  EE20 F034          	lfsr	2,034h
 10947  0011F6  500B               	movf	((c:i1send_msg@qptr)),c,w
 10948  0011F8  26D9               	addwf	fsr2l
 10949  0011FA  500C               	movf	((c:i1send_msg@qptr+1)),c,w
 10950  0011FC  22DA               	addwfc	fsr2h
 10951  0011FE  EE10 F034          	lfsr	1,034h
 10952  001202  500B               	movf	((c:i1send_msg@qptr)),c,w
 10953  001204  26E1               	addwf	fsr1l
 10954  001206  500C               	movf	((c:i1send_msg@qptr+1)),c,w
 10955  001208  22E2               	addwfc	fsr1h
 10956  00120A  50E7               	movf	indf1,w
 10957  00120C  6E11               	movwf	(??i1_send_msg+0+0)&0ffh,c
 10958  00120E  2811               	incf	((??i1_send_msg+0+0)),c,w
 10959  001210  0B03               	andlw	low(03h)
 10960  001212  6EDF               	movwf	indf2
 10961                           
 10962                           	line	59
 10963                           	
 10964  001214                     i1l18791:
 10965                           ;messages.c: 59: qmsg->full = 1;
 10966  001214  C015  FFD9         	movff	(c:i1send_msg@qmsg),fsr2l
 10967  001218  C016  FFDA         	movff	(c:i1send_msg@qmsg+1),fsr2h
 10968  00121C  0E01               	movlw	low(01h)
 10969  00121E  6EDF               	movwf	indf2
 10970                           	line	60
 10971                           	
 10972  001220                     i1l18793:
 10973                           ;messages.c: 60: return (1);
 10974  001220  0E01               	movlw	(01h)&0ffh
 10975  001222  D000               	goto	i1l5474
 10976                           	
 10977  001224                     i1l18795:
 10978                           	line	61
 10979                           	
 10980  001224                     i1l5474:
 10981  001224  0012               	return
 10982                           	opt stack 0
 10983                           GLOBAL	__end_ofi1_send_msg
 10984  001226                     	__end_ofi1_send_msg:
 10985                           	signat	i1_send_msg,89
 10986                           	global	i1_memcpy
 10987                           
 10988 ;; *************** function i1_memcpy *****************
 10989 ;; Defined at:
 10990 ;;		line 13 in file "/opt/microchip/xc8/v1.10/sources/memcpy.c"
 10991 ;; Parameters:    Size  Location     Type
 10992 ;;  memcpy          2    0[COMRAM] PTR void 
 10993 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
 10994 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
 10995 ;;  memcpy          2    2[COMRAM] PTR const void 
 10996 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 10997 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 10998 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(5), 
 10999 ;;  memcpy          2    4[COMRAM] unsigned int 
 11000 ;; Auto vars:     Size  Location     Type
 11001 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 11002 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 11003 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 11004 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(5), 
 11005 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 11006 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
 11007 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
 11008 ;; Return value:  Size  Location     Type
 11009 ;;                  2    0[COMRAM] PTR void 
 11010 ;; Registers used:
 11011 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 11012 ;; Tracked objects:
 11013 ;;		On entry : 0/0
 11014 ;;		On exit  : 0/0
 11015 ;;		Unchanged: 0/0
 11016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11017 ;;      Params:         6       0       0       0       0
 11018 ;;      Locals:         4       0       0       0       0
 11019 ;;      Temps:          0       0       0       0       0
 11020 ;;      Totals:        10       0       0       0       0
 11021 ;;Total ram usage:       10 bytes
 11022 ;; Hardware stack levels used:    1
 11023 ;; Hardware stack levels required when called:    5
 11024 ;; This function calls:
 11025 ;;		Nothing
 11026 ;; This function is called by:
 11027 ;;		i1_send_msg
 11028 ;; This function uses a non-reentrant model
 11029 ;;
 11030                           psect	text38,class=CODE,space=0,reloc=2
 11031                           global __ptext38
 11032  0017FC                     __ptext38:
 11033                           psect	text38
 11034                           	file	"/opt/microchip/xc8/v1.10/sources/memcpy.c"
 11035                           	line	13
 11036                           	global	__size_ofi1_memcpy
 11037  0000                     	__size_ofi1_memcpy	equ	__end_ofi1_memcpy-i1_memcpy
 11038                           	
 11039  0017FC                     i1_memcpy:
 11040                           	opt	stack 17
 11041                           	line	24
 11042                           	
 11043  0017FC                     i1l18753:
 11044  0017FC  C003  F009         	movff	(c:i1memcpy@s1),(c:i1memcpy@s)
 11045  001800  C004  F00A         	movff	(c:i1memcpy@s1+1),(c:i1memcpy@s+1)
 11046                           	line	25
 11047  001804  C001  F007         	movff	(c:i1memcpy@d1),(c:i1memcpy@d)
 11048  001808  C002  F008         	movff	(c:i1memcpy@d1+1),(c:i1memcpy@d+1)
 11049                           	line	26
 11050  00180C  D00F               	goto	i1l18761
 11051                           	
 11052  00180E                     i1l17011:
 11053                           	line	27
 11054                           	
 11055  00180E                     i1l18755:
 11056  00180E  C009  FFD9         	movff	(c:i1memcpy@s),fsr2l
 11057  001812  C00A  FFDA         	movff	(c:i1memcpy@s+1),fsr2h
 11058  001816  C007  FFE1         	movff	(c:i1memcpy@d),fsr1l
 11059  00181A  C008  FFE2         	movff	(c:i1memcpy@d+1),fsr1h
 11060  00181E  CFDF FFE7          	movff	indf2,indf1
 11061                           	
 11062  001822                     i1l18757:
 11063  001822  4A09               	infsnz	((c:i1memcpy@s)),c
 11064  001824  2A0A               	incf	((c:i1memcpy@s+1)),c
 11065                           	
 11066  001826                     i1l18759:
 11067  001826  4A07               	infsnz	((c:i1memcpy@d)),c
 11068  001828  2A08               	incf	((c:i1memcpy@d+1)),c
 11069  00182A  D000               	goto	i1l18761
 11070                           	
 11071  00182C                     i1l17010:
 11072                           	line	26
 11073                           	
 11074  00182C                     i1l18761:
 11075  00182C  0605               	decf	((c:i1memcpy@n)),c
 11076  00182E  A0D8               	btfss	status,0
 11077  001830  0606               	decf	((c:i1memcpy@n+1)),c
 11078  001832  2805               	incf	((c:i1memcpy@n))&0ffh,w
 11079  001834  B4D8               	btfsc	status,2
 11080  001836  2806               	incf ((c:i1memcpy@n+1))&0ffh,w
 11081                           
 11082  001838  A4D8               	btfss	status,2
 11083  00183A  D001               	goto	i1u178_21
 11084  00183C  D001               	goto	i1u178_20
 11085  00183E                     i1u178_21:
 11086  00183E  D7E7               	goto	i1l18755
 11087  001840                     i1u178_20:
 11088  001840  D000               	goto	i1l17013
 11089                           	
 11090  001842                     i1l17012:
 11091                           	line	32
 11092                           ;	Return value of i1_memcpy is never used
 11093                           	
 11094  001842                     i1l17013:
 11095  001842  0012               	return
 11096                           	opt stack 0
 11097                           GLOBAL	__end_ofi1_memcpy
 11098  001844                     	__end_ofi1_memcpy:
 11099                           	signat	i1_memcpy,90
 11100                           	global	_InterruptHandlerHigh
 11101                           
 11102 ;; *************** function _InterruptHandlerHigh *****************
 11103 ;; Defined at:
 11104 ;;		line 83 in file "../src/interrupts.c"
 11105 ;; Parameters:    Size  Location     Type
 11106 ;;		None
 11107 ;; Auto vars:     Size  Location     Type
 11108 ;;		None
 11109 ;; Return value:  Size  Location     Type
 11110 ;;		None               void
 11111 ;; Registers used:
 11112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11113 ;; Tracked objects:
 11114 ;;		On entry : 0/0
 11115 ;;		On exit  : 0/0
 11116 ;;		Unchanged: 0/0
 11117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11118 ;;      Params:         0       0       0       0       0
 11119 ;;      Locals:         0       0       0       0       0
 11120 ;;      Temps:          0      14       0       0       0
 11121 ;;      Totals:         0      14       0       0       0
 11122 ;;Total ram usage:       14 bytes
 11123 ;; Hardware stack levels used:    1
 11124 ;; Hardware stack levels required when called:    4
 11125 ;; This function calls:
 11126 ;;		_i2c_int_handler
 11127 ;;		_timer0_int_handler
 11128 ;;		_SleepIfOkay
 11129 ;; This function is called by:
 11130 ;;		Interrupt level 2
 11131 ;; This function uses a non-reentrant model
 11132 ;;
 11133                           psect	intcode,class=CODE,space=0,reloc=2
 11134                           global __pintcode
 11135  000008                     __pintcode:
 11136                           psect	intcode
 11137                           	file	"../src/interrupts.c"
 11138                           	line	83
 11139                           	global	__size_of_InterruptHandlerHigh
 11140  0000                     	__size_of_InterruptHandlerHigh	equ	__end_of_InterruptHandlerHigh-_InterruptHandlerHigh
 11141                           	
 11142  000008                     _InterruptHandlerHigh:
 11143                           	opt	stack 17
 11144  000008  CFFA F0AB          	movff	pclat+0,??_InterruptHandlerHigh+0
 11145  00000C  CFFB F0AC          	movff	pclat+1,??_InterruptHandlerHigh+1
 11146  000010  CFE9 F0AD          	movff	fsr0l+0,??_InterruptHandlerHigh+2
 11147                           	global	int_func
 11148  000014  EFBE  F009         	goto	int_func
 11149                           psect	intcode_body,class=CODE,space=0,reloc=2
 11150                           global __pintcode_body
 11151  00137C                     __pintcode_body:
 11152  00137C                     int_func:
 11153  00137C  CFEA F0AE          	movff	fsr0h+0,??_InterruptHandlerHigh+3
 11154  001380  CFE1 F0AF          	movff	fsr1l+0,??_InterruptHandlerHigh+4
 11155  001384  CFE2 F0B0          	movff	fsr1h+0,??_InterruptHandlerHigh+5
 11156  001388  CFD9 F0B1          	movff	fsr2l+0,??_InterruptHandlerHigh+6
 11157  00138C  CFDA F0B2          	movff	fsr2h+0,??_InterruptHandlerHigh+7
 11158  001390  CFF3 F0B3          	movff	prodl+0,??_InterruptHandlerHigh+8
 11159  001394  CFF4 F0B4          	movff	prodh+0,??_InterruptHandlerHigh+9
 11160  001398  CFF6 F0B5          	movff	tblptrl+0,??_InterruptHandlerHigh+10
 11161  00139C  CFF7 F0B6          	movff	tblptrh+0,??_InterruptHandlerHigh+11
 11162  0013A0  CFF8 F0B7          	movff	tblptru+0,??_InterruptHandlerHigh+12
 11163  0013A4  CFF5 F0B8          	movff	tablat+0,??_InterruptHandlerHigh+13
 11164                           	line	88
 11165                           	
 11166  0013A8                     i2l18859:
 11167                           ;interrupts.c: 88: if (PIR1bits.SSPIF) {
 11168                           	
 11169  0013A8  A69E               	btfss	((c:3998)),c,3	;volatile
 11170  0013AA  D001               	goto	i2u187_41
 11171  0013AC  D001               	goto	i2u187_40
 11172  0013AE                     i2u187_41:
 11173  0013AE  D004               	goto	i2l18865
 11174  0013B0                     i2u187_40:
 11175                           	line	90
 11176                           	
 11177  0013B0                     i2l18861:
 11178                           ;interrupts.c: 90: PIR1bits.SSPIF = 0;
 11179  0013B0  969E               	bcf	((c:3998)),c,3	;volatile
 11180                           	line	92
 11181                           	
 11182  0013B2                     i2l18863:
 11183                           ;interrupts.c: 92: i2c_int_handler();
 11184  0013B2  EC6B  F000         	call	_i2c_int_handler	;wreg free
 11185  0013B6  D000               	goto	i2l18865
 11186                           	line	93
 11187                           	
 11188  0013B8                     i2l1820:
 11189                           	line	96
 11190                           	
 11191  0013B8                     i2l18865:
 11192                           ;interrupts.c: 93: }
 11193                           ;interrupts.c: 96: if (INTCONbits.TMR0IF) {
 11194                           	
 11195  0013B8  A4F2               	btfss	((c:4082)),c,2	;volatile
 11196  0013BA  D001               	goto	i2u188_41
 11197  0013BC  D001               	goto	i2u188_40
 11198  0013BE                     i2u188_41:
 11199  0013BE  D004               	goto	i2l18871
 11200  0013C0                     i2u188_40:
 11201                           	line	97
 11202                           	
 11203  0013C0                     i2l18867:
 11204                           ;interrupts.c: 97: INTCONbits.TMR0IF = 0;
 11205  0013C0  94F2               	bcf	((c:4082)),c,2	;volatile
 11206                           	line	99
 11207                           	
 11208  0013C2                     i2l18869:
 11209                           ;interrupts.c: 99: timer0_int_handler();
 11210  0013C2  EC13  F009         	call	_timer0_int_handler	;wreg free
 11211  0013C6  D000               	goto	i2l18871
 11212                           	line	100
 11213                           	
 11214  0013C8                     i2l1821:
 11215                           	line	109
 11216                           	
 11217  0013C8                     i2l18871:
 11218                           ;interrupts.c: 100: }
 11219                           ;interrupts.c: 109: SleepIfOkay();
 11220  0013C8  EC88  F00A         	call	_SleepIfOkay	;wreg free
 11221                           	line	110
 11222                           	
 11223  0013CC                     i2l1822:
 11224  0013CC  C0B8  FFF5         	movff	??_InterruptHandlerHigh+13,tablat+0
 11225  0013D0  C0B7  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru+0
 11226  0013D4  C0B6  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh+0
 11227  0013D8  C0B5  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl+0
 11228  0013DC  C0B4  FFF4         	movff	??_InterruptHandlerHigh+9,prodh+0
 11229  0013E0  C0B3  FFF3         	movff	??_InterruptHandlerHigh+8,prodl+0
 11230  0013E4  C0B2  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h+0
 11231  0013E8  C0B1  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l+0
 11232  0013EC  C0B0  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h+0
 11233  0013F0  C0AF  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l+0
 11234  0013F4  C0AE  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h+0
 11235  0013F8  C0AD  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l+0
 11236  0013FC  C0AC  FFFB         	movff	??_InterruptHandlerHigh+1,pclat+1
 11237  001400  C0AB  FFFA         	movff	??_InterruptHandlerHigh+0,pclat+0
 11238  001404  0011               	retfie f
 11239                           	opt stack 0
 11240                           GLOBAL	__end_of_InterruptHandlerHigh
 11241  001406                     	__end_of_InterruptHandlerHigh:
 11242                           	signat	_InterruptHandlerHigh,88
 11243                           	global	_i2c_int_handler
 11244                           
 11245 ;; *************** function _i2c_int_handler *****************
 11246 ;; Defined at:
 11247 ;;		line 102 in file "../src/my_i2c.c"
 11248 ;; Parameters:    Size  Location     Type
 11249 ;;		None
 11250 ;; Auto vars:     Size  Location     Type
 11251 ;;  empty           4   27[BANK0 ] unsigned char [4]
 11252 ;;  data           10   17[BANK0 ] unsigned char [10]
 11253 ;;  length          2   36[BANK0 ] int 
 11254 ;;  msgtype         1   39[BANK0 ] unsigned char 
 11255 ;;  error_buf       3   31[BANK0 ] unsigned char [3]
 11256 ;;  data_read       1   42[BANK0 ] unsigned char 
 11257 ;;  msg_ready       1   41[BANK0 ] unsigned char 
 11258 ;;  msg_to_send     1   40[BANK0 ] unsigned char 
 11259 ;;  i2c_data        1   38[BANK0 ] unsigned char 
 11260 ;;  overrun_erro    1   35[BANK0 ] unsigned char 
 11261 ;;  data_written    1   34[BANK0 ] unsigned char 
 11262 ;; Return value:  Size  Location     Type
 11263 ;;		None               void
 11264 ;; Registers used:
 11265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11266 ;; Tracked objects:
 11267 ;;		On entry : 0/0
 11268 ;;		On exit  : 0/0
 11269 ;;		Unchanged: 0/0
 11270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 11271 ;;      Params:         0       0       0       0       0
 11272 ;;      Locals:         0      26       0       0       0
 11273 ;;      Temps:          2       0       0       0       0
 11274 ;;      Totals:         2      26       0       0       0
 11275 ;;Total ram usage:       28 bytes
 11276 ;; Hardware stack levels used:    1
 11277 ;; Hardware stack levels required when called:    3
 11278 ;; This function calls:
 11279 ;;		_handle_start
 11280 ;;		_FromMainLow_recvmsg
 11281 ;;		_start_i2c_slave_reply
 11282 ;;		_ToMainHigh_sendmsg
 11283 ;; This function is called by:
 11284 ;;		_InterruptHandlerHigh
 11285 ;; This function uses a non-reentrant model
 11286 ;;
 11287                           psect	text40,class=CODE,space=0,reloc=2
 11288                           global __ptext40
 11289  0000D6                     __ptext40:
 11290                           psect	text40
 11291                           	file	"../src/my_i2c.c"
 11292                           	line	102
 11293                           	global	__size_of_i2c_int_handler
 11294  0000                     	__size_of_i2c_int_handler	equ	__end_of_i2c_int_handler-_i2c_int_handler
 11295                           	
 11296  0000D6                     _i2c_int_handler:
 11297                           	opt	stack 17
 11298                           	line	104
 11299                           	
 11300  0000D6                     i2l18873:
 11301                           ;my_i2c.c: 103: unsigned char i2c_data;
 11302                           ;my_i2c.c: 104: unsigned char data_read = 0;
 11303  0000D6  6E40               	movwf	(??_i2c_int_handler+0+0)&0ffh,c
 11304  0000D8  0E00               	movlw	low(0)
 11305  0000DA  0100               	movlb	0	; () banked
 11306  0000DC  0100               	movlb	0	; () banked
 11307  0000DE  6FAA               	movwf	((i2c_int_handler@data_read))&0ffh
 11308  0000E0  5040               	movf	(??_i2c_int_handler+0+0)&0ffh,c,w
 11309                           	line	105
 11310                           ;my_i2c.c: 105: unsigned char data_written = 0;
 11311  0000E2  6E40               	movwf	(??_i2c_int_handler+0+0)&0ffh,c
 11312  0000E4  0E00               	movlw	low(0)
 11313  0000E6  0100               	movlb	0	; () banked
 11314  0000E8  0100               	movlb	0	; () banked
 11315  0000EA  6FA2               	movwf	((i2c_int_handler@data_written))&0ffh
 11316  0000EC  5040               	movf	(??_i2c_int_handler+0+0)&0ffh,c,w
 11317                           	line	106
 11318                           ;my_i2c.c: 106: unsigned char msg_ready = 0;
 11319  0000EE  6E40               	movwf	(??_i2c_int_handler+0+0)&0ffh,c
 11320  0000F0  0E00               	movlw	low(0)
 11321  0000F2  0100               	movlb	0	; () banked
 11322  0000F4  0100               	movlb	0	; () banked
 11323  0000F6  6FA9               	movwf	((i2c_int_handler@msg_ready))&0ffh
 11324  0000F8  5040               	movf	(??_i2c_int_handler+0+0)&0ffh,c,w
 11325                           	line	107
 11326                           ;my_i2c.c: 107: unsigned char msg_to_send = 0;
 11327  0000FA  6E40               	movwf	(??_i2c_int_handler+0+0)&0ffh,c
 11328  0000FC  0E00               	movlw	low(0)
 11329  0000FE  0100               	movlb	0	; () banked
 11330  000100  0100               	movlb	0	; () banked
 11331  000102  6FA8               	movwf	((i2c_int_handler@msg_to_send))&0ffh
 11332  000104  5040               	movf	(??_i2c_int_handler+0+0)&0ffh,c,w
 11333                           	line	108
 11334                           ;my_i2c.c: 108: unsigned char overrun_error = 0;
 11335  000106  6E40               	movwf	(??_i2c_int_handler+0+0)&0ffh,c
 11336  000108  0E00               	movlw	low(0)
 11337  00010A  0100               	movlb	0	; () banked
 11338  00010C  0100               	movlb	0	; () banked
 11339  00010E  6FA3               	movwf	((i2c_int_handler@overrun_error))&0ffh
 11340  000110  5040               	movf	(??_i2c_int_handler+0+0)&0ffh,c,w
 11341                           	line	112
 11342                           	
 11343  000112                     i2l18875:; BSR set to: 0
 11344                           
 11345                           ;my_i2c.c: 109: unsigned char error_buf[3];
 11346                           ;my_i2c.c: 112: if (SSPCON1bits.SSPOV == 1) {
 11347                           	
 11348  000112  ACC6               	btfss	((c:4038)),c,6	;volatile
 11349  000114  D001               	goto	i2u189_41
 11350  000116  D001               	goto	i2u189_40
 11351  000118                     i2u189_41:
 11352  000118  D01F               	goto	i2l18887
 11353  00011A                     i2u189_40:
 11354                           	line	113
 11355                           	
 11356  00011A                     i2l18877:; BSR set to: 0
 11357                           
 11358                           ;my_i2c.c: 113: SSPCON1bits.SSPOV = 0;
 11359  00011A  9CC6               	bcf	((c:4038)),c,6	;volatile
 11360                           	line	117
 11361                           	
 11362  00011C                     i2l18879:; BSR set to: 0
 11363                           
 11364                           ;my_i2c.c: 117: ic_ptr->status = 0x5;
 11365  00011C  EE20 F00C          	lfsr	2,0Ch
 11366  000120  5048               	movf	((c:_ic_ptr)),c,w
 11367  000122  26D9               	addwf	fsr2l
 11368  000124  5049               	movf	((c:_ic_ptr+1)),c,w
 11369  000126  22DA               	addwfc	fsr2h
 11370  000128  0E05               	movlw	low(05h)
 11371  00012A  6EDF               	movwf	indf2
 11372                           	line	118
 11373                           	
 11374  00012C                     i2l18881:; BSR set to: 0
 11375                           
 11376                           ;my_i2c.c: 118: overrun_error = 1;
 11377  00012C  6E40               	movwf	(??_i2c_int_handler+0+0)&0ffh,c
 11378  00012E  0E01               	movlw	low(01h)
 11379  000130  0100               	movlb	0	; () banked
 11380  000132  0100               	movlb	0	; () banked
 11381  000134  6FA3               	movwf	((i2c_int_handler@overrun_error))&0ffh
 11382  000136  5040               	movf	(??_i2c_int_handler+0+0)&0ffh,c,w
 11383                           	line	119
 11384                           	
 11385  000138                     i2l18883:; BSR set to: 0
 11386                           
 11387                           ;my_i2c.c: 119: ic_ptr->error_count++;
 11388  000138  EE20 F00E          	lfsr	2,0Eh
 11389  00013C  5048               	movf	((c:_ic_ptr)),c,w
 11390  00013E  26D9               	addwf	fsr2l
 11391  000140  5049               	movf	((c:_ic_ptr+1)),c,w
 11392  000142  22DA               	addwfc	fsr2h
 11393  000144  2ADF               	incf	indf2
 11394                           
 11395                           	line	120
 11396                           	
 11397  000146                     i2l18885:; BSR set to: 0
 11398                           
 11399                           ;my_i2c.c: 120: ic_ptr->error_code = 0x4;
 11400  000146  EE20 F00D          	lfsr	2,0Dh
 11401  00014A  5048               	movf	((c:_ic_ptr)),c,w
 11402  00014C  26D9               	addwf	fsr2l
 11403  00014E  5049               	movf	((c:_ic_ptr+1)),c,w
 11404  000150  22DA               	addwfc	fsr2h
 11405  000152  0E04               	movlw	low(04h)
 11406  000154  6EDF               	movwf	indf2
 11407  000156  D000               	goto	i2l18887
 11408                           	line	121
 11409                           	
 11410  000158                     i2l7359:; BSR set to: 0
 11411                           
 11412                           	line	123
 11413                           	
 11414  000158                     i2l18887:; BSR set to: 0
 11415                           
 11416                           ;my_i2c.c: 121: }
 11417                           ;my_i2c.c: 123: if (SSPSTATbits.BF == 1) {
 11418                           	
 11419  000158  A0C7               	btfss	((c:4039)),c,0	;volatile
 11420  00015A  D001               	goto	i2u190_41
 11421  00015C  D001               	goto	i2u190_40
 11422  00015E                     i2u190_41:
 11423  00015E  D009               	goto	i2l18893
 11424  000160                     i2u190_40:
 11425                           	line	124
 11426                           	
 11427  000160                     i2l18889:; BSR set to: 0
 11428                           
 11429                           ;my_i2c.c: 124: i2c_data = SSPBUF;
 11430  000160  CFC9 F0A6          	movff	(c:4041),(i2c_int_handler@i2c_data)	;volatile
 11431                           	line	125
 11432                           	
 11433  000164                     i2l18891:; BSR set to: 0
 11434                           
 11435                           ;my_i2c.c: 125: data_read = 1;
 11436  000164  6E40               	movwf	(??_i2c_int_handler+0+0)&0ffh,c
 11437  000166  0E01               	movlw	low(01h)
 11438  000168  0100               	movlb	0	; () banked
 11439  00016A  0100               	movlb	0	; () banked
 11440  00016C  6FAA               	movwf	((i2c_int_handler@data_read))&0ffh
 11441  00016E  5040               	movf	(??_i2c_int_handler+0+0)&0ffh,c,w
 11442  000170  D000               	goto	i2l18893
 11443                           	line	126
 11444                           	
 11445  000172                     i2l7360:; BSR set to: 0
 11446                           
 11447                           	line	131
 11448                           	
 11449  000172                     i2l18893:; BSR set to: 0
 11450                           
 11451                           ;my_i2c.c: 126: }
 11452                           ;my_i2c.c: 131: if (!overrun_error) {
 11453  000172  0100               	movlb	0	; () banked
 11454  000174  0100               	movlb	0	; () banked
 11455  000176  67A3               	tstfsz	((i2c_int_handler@overrun_error))&0ffh
 11456  000178  D001               	goto	i2u191_41
 11457  00017A  D001               	goto	i2u191_40
 11458  00017C                     i2u191_41:
 11459  00017C  D1C9               	goto	i2l7361
 11460  00017E                     i2u191_40:
 11461  00017E  D1B4               	goto	i2l18981
 11462                           	line	132
 11463                           	
 11464  000180                     i2l18895:; BSR set to: 0
 11465                           
 11466                           ;my_i2c.c: 132: switch (ic_ptr->status) {
 11467  000180  D1B3               	goto	i2l18981
 11468                           	line	133
 11469                           ;my_i2c.c: 133: case 0x5:
 11470                           	
 11471  000182                     i2l7363:; BSR set to: 0
 11472                           
 11473                           	line	136
 11474                           ;my_i2c.c: 134: {
 11475                           ;my_i2c.c: 136: if (SSPSTATbits.S == 1) {
 11476                           	
 11477  000182  A6C7               	btfss	((c:4039)),c,3	;volatile
 11478  000184  D001               	goto	i2u192_41
 11479  000186  D001               	goto	i2u192_40
 11480  000188                     i2u192_41:
 11481  000188  D1C3               	goto	i2l7361
 11482  00018A                     i2u192_40:
 11483                           	line	137
 11484                           	
 11485  00018A                     i2l18897:; BSR set to: 0
 11486                           
 11487                           ;my_i2c.c: 137: handle_start(data_read);
 11488  00018A  C0AA  F034         	movff	(i2c_int_handler@data_read),(c:?_handle_start)
 11489  00018E  EC6B  F009         	call	_handle_start	;wreg free
 11490                           	line	139
 11491                           	
 11492  000192                     i2l18899:
 11493                           ;my_i2c.c: 139: if (ic_ptr->status == 0x8) {
 11494  000192  EE20 F00C          	lfsr	2,0Ch
 11495  000196  5048               	movf	((c:_ic_ptr)),c,w
 11496  000198  26D9               	addwf	fsr2l
 11497  00019A  5049               	movf	((c:_ic_ptr+1)),c,w
 11498  00019C  22DA               	addwfc	fsr2h
 11499  00019E  0E08               	movlw	(08h)&0ffh
 11500  0001A0  62DF               	cpfseq	indf2
 11501  0001A2  D001               	goto	i2u193_41
 11502  0001A4  D001               	goto	i2u193_40
 11503  0001A6                     i2u193_41:
 11504  0001A6  D1B4               	goto	i2l7361
 11505  0001A8                     i2u193_40:
 11506                           	line	140
 11507                           	
 11508  0001A8                     i2l18901:
 11509                           ;my_i2c.c: 140: data_read = 0;
 11510  0001A8  6E40               	movwf	(??_i2c_int_handler+0+0)&0ffh,c
 11511  0001AA  0E00               	movlw	low(0)
 11512  0001AC  0100               	movlb	0	; () banked
 11513  0001AE  0100               	movlb	0	; () banked
 11514  0001B0  6FAA               	movwf	((i2c_int_handler@data_read))&0ffh
 11515  0001B2  5040               	movf	(??_i2c_int_handler+0+0)&0ffh,c,w
 11516                           	line	141
 11517                           ;my_i2c.c: 141: msg_to_send = 1;
 11518  0001B4  6E40               	movwf	(??_i2c_int_handler+0+0)&0ffh,c
 11519  0001B6  0E01               	movlw	low(01h)
 11520  0001B8  0100               	movlb	0	; () banked
 11521  0001BA  0100               	movlb	0	; () banked
 11522  0001BC  6FA8               	movwf	((i2c_int_handler@msg_to_send))&0ffh
 11523  0001BE  5040               	movf	(??_i2c_int_handler+0+0)&0ffh,c,w
 11524  0001C0  D1A7               	goto	i2l7361
 11525                           	line	142
 11526                           	
 11527  0001C2                     i2l7365:; BSR set to: 0
 11528                           
 11529  0001C2  D1A6               	goto	i2l7361
 11530                           	line	143
 11531                           	
 11532  0001C4                     i2l7364:; BSR set to: 0
 11533                           
 11534                           	line	144
 11535                           ;my_i2c.c: 142: }
 11536                           ;my_i2c.c: 143: }
 11537                           ;my_i2c.c: 144: break;
 11538  0001C4  D1A5               	goto	i2l7361
 11539                           	line	146
 11540                           ;my_i2c.c: 145: }
 11541                           ;my_i2c.c: 146: case 0x6:
 11542                           	
 11543  0001C6                     i2l7367:; BSR set to: 0
 11544                           
 11545                           	line	149
 11546                           ;my_i2c.c: 147: {
 11547                           ;my_i2c.c: 149: if (SSPSTATbits.P == 1) {
 11548                           	
 11549  0001C6  A8C7               	btfss	((c:4039)),c,4	;volatile
 11550  0001C8  D001               	goto	i2u194_41
 11551  0001CA  D001               	goto	i2u194_40
 11552  0001CC                     i2u194_41:
 11553  0001CC  D032               	goto	i2l18913
 11554  0001CE                     i2u194_40:
 11555                           	line	152
 11556                           	
 11557  0001CE                     i2l18903:; BSR set to: 0
 11558                           
 11559                           ;my_i2c.c: 152: ic_ptr->event_count++;
 11560  0001CE  EE20 F00B          	lfsr	2,0Bh
 11561  0001D2  5048               	movf	((c:_ic_ptr)),c,w
 11562  0001D4  26D9               	addwf	fsr2l
 11563  0001D6  5049               	movf	((c:_ic_ptr+1)),c,w
 11564  0001D8  22DA               	addwfc	fsr2h
 11565  0001DA  2ADF               	incf	indf2
 11566                           
 11567                           	line	153
 11568                           	
 11569  0001DC                     i2l18905:; BSR set to: 0
 11570                           
 11571                           ;my_i2c.c: 153: if (data_read) {
 11572  0001DC  0100               	movlb	0	; () banked
 11573  0001DE  0100               	movlb	0	; () banked
 11574  0001E0  51AA               	movf	((i2c_int_handler@data_read))&0ffh,w
 11575  0001E2  B4D8               	btfsc	status,2
 11576  0001E4  D001               	goto	i2u195_41
 11577  0001E6  D001               	goto	i2u195_40
 11578  0001E8                     i2u195_41:
 11579  0001E8  D01B               	goto	i2l7369
 11580  0001EA                     i2u195_40:
 11581                           	line	154
 11582                           	
 11583  0001EA                     i2l18907:; BSR set to: 0
 11584                           
 11585                           ;my_i2c.c: 154: if (SSPSTATbits.D_A == 0) {
 11586                           	
 11587  0001EA  BAC7               	btfsc	((c:4039)),c,5	;volatile
 11588  0001EC  D001               	goto	i2u196_41
 11589  0001EE  D001               	goto	i2u196_40
 11590  0001F0                     i2u196_41:
 11591  0001F0  D007               	goto	i2l18911
 11592  0001F2                     i2u196_40:
 11593                           	line	155
 11594                           	
 11595  0001F2                     i2l18909:; BSR set to: 0
 11596                           
 11597                           ;my_i2c.c: 155: msg_ready = 1;
 11598  0001F2  6E40               	movwf	(??_i2c_int_handler+0+0)&0ffh,c
 11599  0001F4  0E01               	movlw	low(01h)
 11600  0001F6  0100               	movlb	0	; () banked
 11601  0001F8  0100               	movlb	0	; () banked
 11602  0001FA  6FA9               	movwf	((i2c_int_handler@msg_ready))&0ffh
 11603  0001FC  5040               	movf	(??_i2c_int_handler+0+0)&0ffh,c,w
 11604                           	line	156
 11605                           ;my_i2c.c: 156: } else {
 11606  0001FE  D010               	goto	i2l7369
 11607                           	
 11608  000200                     i2l7370:; BSR set to: 0
 11609                           
 11610                           	line	157
 11611                           	
 11612  000200                     i2l18911:; BSR set to: 0
 11613                           
 11614                           ;my_i2c.c: 157: ic_ptr->error_count++;
 11615  000200  EE20 F00E          	lfsr	2,0Eh
 11616  000204  5048               	movf	((c:_ic_ptr)),c,w
 11617  000206  26D9               	addwf	fsr2l
 11618  000208  5049               	movf	((c:_ic_ptr+1)),c,w
 11619  00020A  22DA               	addwfc	fsr2h
 11620  00020C  2ADF               	incf	indf2
 11621                           
 11622                           	line	158
 11623                           ;my_i2c.c: 158: ic_ptr->error_code = 0x6;
 11624  00020E  EE20 F00D          	lfsr	2,0Dh
 11625  000212  5048               	movf	((c:_ic_ptr)),c,w
 11626  000214  26D9               	addwf	fsr2l
 11627  000216  5049               	movf	((c:_ic_ptr+1)),c,w
 11628  000218  22DA               	addwfc	fsr2h
 11629  00021A  0E06               	movlw	low(06h)
 11630  00021C  6EDF               	movwf	indf2
 11631  00021E  D000               	goto	i2l7369
 11632                           	line	159
 11633                           	
 11634  000220                     i2l7371:; BSR set to: 0
 11635                           
 11636                           	line	160
 11637                           	
 11638  000220                     i2l7369:; BSR set to: 0
 11639                           
 11640                           	line	161
 11641                           ;my_i2c.c: 159: }
 11642                           ;my_i2c.c: 160: }
 11643                           ;my_i2c.c: 161: ic_ptr->status = 0x5;
 11644  000220  EE20 F00C          	lfsr	2,0Ch
 11645  000224  5048               	movf	((c:_ic_ptr)),c,w
 11646  000226  26D9               	addwf	fsr2l
 11647  000228  5049               	movf	((c:_ic_ptr+1)),c,w
 11648  00022A  22DA               	addwfc	fsr2h
 11649  00022C  0E05               	movlw	low(05h)
 11650  00022E  6EDF               	movwf	indf2
 11651                           	line	162
 11652                           ;my_i2c.c: 162: } else if (data_read) {
 11653  000230  D16F               	goto	i2l7361
 11654                           	
 11655  000232                     i2l7368:; BSR set to: 0
 11656                           
 11657                           	
 11658  000232                     i2l18913:; BSR set to: 0
 11659                           
 11660  000232  0100               	movlb	0	; () banked
 11661  000234  0100               	movlb	0	; () banked
 11662  000236  51AA               	movf	((i2c_int_handler@data_read))&0ffh,w
 11663  000238  B4D8               	btfsc	status,2
 11664  00023A  D001               	goto	i2u197_41
 11665  00023C  D001               	goto	i2u197_40
 11666  00023E                     i2u197_41:
 11667  00023E  D168               	goto	i2l7361
 11668  000240                     i2u197_40:
 11669                           	line	163
 11670                           	
 11671  000240                     i2l18915:; BSR set to: 0
 11672                           
 11673                           ;my_i2c.c: 163: ic_ptr->event_count++;
 11674  000240  EE20 F00B          	lfsr	2,0Bh
 11675  000244  5048               	movf	((c:_ic_ptr)),c,w
 11676  000246  26D9               	addwf	fsr2l
 11677  000248  5049               	movf	((c:_ic_ptr+1)),c,w
 11678  00024A  22DA               	addwfc	fsr2h
 11679  00024C  2ADF               	incf	indf2
 11680                           
 11681                           	line	164
 11682                           	
 11683  00024E                     i2l18917:; BSR set to: 0
 11684                           
 11685                           ;my_i2c.c: 164: if (SSPSTATbits.D_A == 0) {
 11686                           	
 11687  00024E  BAC7               	btfsc	((c:4039)),c,5	;volatile
 11688  000250  D001               	goto	i2u198_41
 11689  000252  D001               	goto	i2u198_40
 11690  000254                     i2u198_41:
 11691  000254  D023               	goto	i2l18929
 11692  000256                     i2u198_40:
 11693                           	line	165
 11694                           	
 11695  000256                     i2l18919:; BSR set to: 0
 11696                           
 11697                           ;my_i2c.c: 165: if (SSPSTATbits.R_W == 0) {
 11698                           	
 11699  000256  B4C7               	btfsc	((c:4039)),c,2	;volatile
 11700  000258  D001               	goto	i2u199_41
 11701  00025A  D001               	goto	i2u199_40
 11702  00025C                     i2u199_41:
 11703  00025C  D009               	goto	i2l18923
 11704  00025E                     i2u199_40:
 11705                           	line	166
 11706                           	
 11707  00025E                     i2l18921:; BSR set to: 0
 11708                           
 11709                           ;my_i2c.c: 166: ic_ptr->status = 0x7;
 11710  00025E  EE20 F00C          	lfsr	2,0Ch
 11711  000262  5048               	movf	((c:_ic_ptr)),c,w
 11712  000264  26D9               	addwf	fsr2l
 11713  000266  5049               	movf	((c:_ic_ptr+1)),c,w
 11714  000268  22DA               	addwfc	fsr2h
 11715  00026A  0E07               	movlw	low(07h)
 11716  00026C  6EDF               	movwf	indf2
 11717                           	line	167
 11718                           ;my_i2c.c: 167: } else {
 11719  00026E  D150               	goto	i2l7361
 11720                           	
 11721  000270                     i2l7375:; BSR set to: 0
 11722                           
 11723                           	line	168
 11724                           	
 11725  000270                     i2l18923:; BSR set to: 0
 11726                           
 11727                           ;my_i2c.c: 168: ic_ptr->status = 0x8;
 11728  000270  EE20 F00C          	lfsr	2,0Ch
 11729  000274  5048               	movf	((c:_ic_ptr)),c,w
 11730  000276  26D9               	addwf	fsr2l
 11731  000278  5049               	movf	((c:_ic_ptr+1)),c,w
 11732  00027A  22DA               	addwfc	fsr2h
 11733  00027C  0E08               	movlw	low(08h)
 11734  00027E  6EDF               	movwf	indf2
 11735                           	line	169
 11736                           	
 11737  000280                     i2l18925:; BSR set to: 0
 11738                           
 11739                           ;my_i2c.c: 169: msg_to_send = 1;
 11740  000280  6E40               	movwf	(??_i2c_int_handler+0+0)&0ffh,c
 11741  000282  0E01               	movlw	low(01h)
 11742  000284  0100               	movlb	0	; () banked
 11743  000286  0100               	movlb	0	; () banked
 11744  000288  6FA8               	movwf	((i2c_int_handler@msg_to_send))&0ffh
 11745  00028A  5040               	movf	(??_i2c_int_handler+0+0)&0ffh,c,w
 11746                           	line	171
 11747                           	
 11748  00028C                     i2l18927:; BSR set to: 0
 11749                           
 11750                           ;my_i2c.c: 171: data_read = 0;
 11751  00028C  6E40               	movwf	(??_i2c_int_handler+0+0)&0ffh,c
 11752  00028E  0E00               	movlw	low(0)
 11753  000290  0100               	movlb	0	; () banked
 11754  000292  0100               	movlb	0	; () banked
 11755  000294  6FAA               	movwf	((i2c_int_handler@data_read))&0ffh
 11756  000296  5040               	movf	(??_i2c_int_handler+0+0)&0ffh,c,w
 11757  000298  D13B               	goto	i2l7361
 11758                           	line	172
 11759                           	
 11760  00029A                     i2l7376:; BSR set to: 0
 11761                           
 11762                           	line	173
 11763                           ;my_i2c.c: 172: }
 11764                           ;my_i2c.c: 173: } else {
 11765  00029A  D13A               	goto	i2l7361
 11766                           	
 11767  00029C                     i2l7374:; BSR set to: 0
 11768                           
 11769                           	line	174
 11770                           	
 11771  00029C                     i2l18929:; BSR set to: 0
 11772                           
 11773                           ;my_i2c.c: 174: ic_ptr->error_count++;
 11774  00029C  EE20 F00E          	lfsr	2,0Eh
 11775  0002A0  5048               	movf	((c:_ic_ptr)),c,w
 11776  0002A2  26D9               	addwf	fsr2l
 11777  0002A4  5049               	movf	((c:_ic_ptr+1)),c,w
 11778  0002A6  22DA               	addwfc	fsr2h
 11779  0002A8  2ADF               	incf	indf2
 11780                           
 11781                           	line	175
 11782                           ;my_i2c.c: 175: ic_ptr->status = 0x5;
 11783  0002AA  EE20 F00C          	lfsr	2,0Ch
 11784  0002AE  5048               	movf	((c:_ic_ptr)),c,w
 11785  0002B0  26D9               	addwf	fsr2l
 11786  0002B2  5049               	movf	((c:_ic_ptr+1)),c,w
 11787  0002B4  22DA               	addwfc	fsr2h
 11788  0002B6  0E05               	movlw	low(05h)
 11789  0002B8  6EDF               	movwf	indf2
 11790                           	line	176
 11791                           ;my_i2c.c: 176: ic_ptr->error_code = 0x6;
 11792  0002BA  EE20 F00D          	lfsr	2,0Dh
 11793  0002BE  5048               	movf	((c:_ic_ptr)),c,w
 11794  0002C0  26D9               	addwf	fsr2l
 11795  0002C2  5049               	movf	((c:_ic_ptr+1)),c,w
 11796  0002C4  22DA               	addwfc	fsr2h
 11797  0002C6  0E06               	movlw	low(06h)
 11798  0002C8  6EDF               	movwf	indf2
 11799  0002CA  D122               	goto	i2l7361
 11800                           	line	177
 11801                           	
 11802  0002CC                     i2l7377:; BSR set to: 0
 11803                           
 11804  0002CC  D121               	goto	i2l7361
 11805                           	line	178
 11806                           	
 11807  0002CE                     i2l7373:; BSR set to: 0
 11808                           
 11809  0002CE  D120               	goto	i2l7361
 11810                           	line	179
 11811                           	
 11812  0002D0                     i2l7372:; BSR set to: 0
 11813                           
 11814                           ;my_i2c.c: 177: }
 11815                           ;my_i2c.c: 178: }
 11816                           ;my_i2c.c: 179: break;
 11817  0002D0  D11F               	goto	i2l7361
 11818                           	line	181
 11819                           ;my_i2c.c: 180: }
 11820                           ;my_i2c.c: 181: case 0x8:
 11821                           	
 11822  0002D2                     i2l7378:; BSR set to: 0
 11823                           
 11824                           	line	183
 11825                           	
 11826  0002D2                     i2l18931:; BSR set to: 0
 11827                           
 11828                           ;my_i2c.c: 182: {
 11829                           ;my_i2c.c: 183: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
 11830  0002D2  EE20 F01A          	lfsr	2,01Ah
 11831  0002D6  5048               	movf	((c:_ic_ptr)),c,w
 11832  0002D8  26D9               	addwf	fsr2l
 11833  0002DA  5049               	movf	((c:_ic_ptr+1)),c,w
 11834  0002DC  22DA               	addwfc	fsr2h
 11835  0002DE  50DF               	movf	indf2,w
 11836  0002E0  6E40               	movwf	(??_i2c_int_handler+0+0)&0ffh,c
 11837  0002E2  EE20 F019          	lfsr	2,019h
 11838  0002E6  5048               	movf	((c:_ic_ptr)),c,w
 11839  0002E8  26D9               	addwf	fsr2l
 11840  0002EA  5049               	movf	((c:_ic_ptr+1)),c,w
 11841  0002EC  22DA               	addwfc	fsr2h
 11842  0002EE  50DF               	movf	indf2,w
 11843  0002F0  5C40               	subwf	((??_i2c_int_handler+0+0)),c,w
 11844  0002F2  B0D8               	btfsc	status,0
 11845  0002F4  D001               	goto	i2u200_41
 11846  0002F6  D001               	goto	i2u200_40
 11847  0002F8                     i2u200_41:
 11848  0002F8  D024               	goto	i2l18939
 11849  0002FA                     i2u200_40:
 11850                           	line	184
 11851                           	
 11852  0002FA                     i2l18933:; BSR set to: 0
 11853                           
 11854                           ;my_i2c.c: 184: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
 11855  0002FA  EE20 F01A          	lfsr	2,01Ah
 11856  0002FE  5048               	movf	((c:_ic_ptr)),c,w
 11857  000300  26D9               	addwf	fsr2l
 11858  000302  5049               	movf	((c:_ic_ptr+1)),c,w
 11859  000304  22DA               	addwfc	fsr2h
 11860  000306  50DF               	movf	indf2,w
 11861  000308  6E40               	movwf	(??_i2c_int_handler+0+0)&0ffh,c
 11862  00030A  5040               	movf	((??_i2c_int_handler+0+0)),c,w
 11863  00030C  0D01               	mullw	01h
 11864  00030E  0E0F               	movlw	0Fh
 11865  000310  26F3               	addwf	(prodl),c
 11866  000312  0E00               	movlw	0
 11867  000314  22F4               	addwfc	(prodh),c
 11868  000316  50F3               	movf	(prodl),c,w
 11869  000318  2448               	addwf	((c:_ic_ptr)),c,w
 11870  00031A  6ED9               	movwf	c:fsr2l
 11871  00031C  50F4               	movf	(prodh),c,w
 11872  00031E  2049               	addwfc	((c:_ic_ptr+1)),c,w
 11873  000320  6EDA               	movwf	1+c:fsr2l
 11874  000322  50DF               	movf	indf2,w
 11875  000324  6EC9               	movwf	((c:4041)),c	;volatile
 11876                           	line	185
 11877                           	
 11878  000326                     i2l18935:; BSR set to: 0
 11879                           
 11880                           ;my_i2c.c: 185: ic_ptr->outbufind++;
 11881  000326  EE20 F01A          	lfsr	2,01Ah
 11882  00032A  5048               	movf	((c:_ic_ptr)),c,w
 11883  00032C  26D9               	addwf	fsr2l
 11884  00032E  5049               	movf	((c:_ic_ptr+1)),c,w
 11885  000330  22DA               	addwfc	fsr2h
 11886  000332  2ADF               	incf	indf2
 11887                           
 11888                           	line	186
 11889                           	
 11890  000334                     i2l18937:; BSR set to: 0
 11891                           
 11892                           ;my_i2c.c: 186: data_written = 1;
 11893  000334  6E40               	movwf	(??_i2c_int_handler+0+0)&0ffh,c
 11894  000336  0E01               	movlw	low(01h)
 11895  000338  0100               	movlb	0	; () banked
 11896  00033A  0100               	movlb	0	; () banked
 11897  00033C  6FA2               	movwf	((i2c_int_handler@data_written))&0ffh
 11898  00033E  5040               	movf	(??_i2c_int_handler+0+0)&0ffh,c,w
 11899                           	line	187
 11900                           ;my_i2c.c: 187: } else {
 11901  000340  D0E7               	goto	i2l7361
 11902                           	
 11903  000342                     i2l7379:; BSR set to: 0
 11904                           
 11905                           	line	189
 11906                           	
 11907  000342                     i2l18939:; BSR set to: 0
 11908                           
 11909                           ;my_i2c.c: 189: ic_ptr->status = 0x5;
 11910  000342  EE20 F00C          	lfsr	2,0Ch
 11911  000346  5048               	movf	((c:_ic_ptr)),c,w
 11912  000348  26D9               	addwf	fsr2l
 11913  00034A  5049               	movf	((c:_ic_ptr+1)),c,w
 11914  00034C  22DA               	addwfc	fsr2h
 11915  00034E  0E05               	movlw	low(05h)
 11916  000350  6EDF               	movwf	indf2
 11917  000352  D0DE               	goto	i2l7361
 11918                           	line	190
 11919                           	
 11920  000354                     i2l7380:; BSR set to: 0
 11921                           
 11922                           	line	191
 11923                           ;my_i2c.c: 190: }
 11924                           ;my_i2c.c: 191: break;
 11925  000354  D0DD               	goto	i2l7361
 11926                           	line	193
 11927                           ;my_i2c.c: 192: }
 11928                           ;my_i2c.c: 193: case 0x7:
 11929                           	
 11930  000356                     i2l7381:; BSR set to: 0
 11931                           
 11932                           	line	196
 11933                           ;my_i2c.c: 194: {
 11934                           ;my_i2c.c: 196: if (SSPSTATbits.P == 1) {
 11935                           	
 11936  000356  A8C7               	btfss	((c:4039)),c,4	;volatile
 11937  000358  D001               	goto	i2u201_41
 11938  00035A  D001               	goto	i2u201_40
 11939  00035C                     i2u201_41:
 11940  00035C  D05C               	goto	i2l18959
 11941  00035E                     i2u201_40:
 11942                           	line	198
 11943                           	
 11944  00035E                     i2l18941:; BSR set to: 0
 11945                           
 11946                           ;my_i2c.c: 198: ic_ptr->event_count++;
 11947  00035E  EE20 F00B          	lfsr	2,0Bh
 11948  000362  5048               	movf	((c:_ic_ptr)),c,w
 11949  000364  26D9               	addwf	fsr2l
 11950  000366  5049               	movf	((c:_ic_ptr+1)),c,w
 11951  000368  22DA               	addwfc	fsr2h
 11952  00036A  2ADF               	incf	indf2
 11953                           
 11954                           	line	199
 11955                           	
 11956  00036C                     i2l18943:; BSR set to: 0
 11957                           
 11958                           ;my_i2c.c: 199: if (data_read) {
 11959  00036C  0100               	movlb	0	; () banked
 11960  00036E  0100               	movlb	0	; () banked
 11961  000370  51AA               	movf	((i2c_int_handler@data_read))&0ffh,w
 11962  000372  B4D8               	btfsc	status,2
 11963  000374  D001               	goto	i2u202_41
 11964  000376  D001               	goto	i2u202_40
 11965  000378                     i2u202_41:
 11966  000378  D03E               	goto	i2l18955
 11967  00037A                     i2u202_40:
 11968                           	line	200
 11969                           	
 11970  00037A                     i2l18945:; BSR set to: 0
 11971                           
 11972                           ;my_i2c.c: 200: if (SSPSTATbits.D_A == 1) {
 11973                           	
 11974  00037A  AAC7               	btfss	((c:4039)),c,5	;volatile
 11975  00037C  D001               	goto	i2u203_41
 11976  00037E  D001               	goto	i2u203_40
 11977  000380                     i2u203_41:
 11978  000380  D021               	goto	i2l18953
 11979  000382                     i2u203_40:
 11980                           	line	201
 11981                           	
 11982  000382                     i2l18947:; BSR set to: 0
 11983                           
 11984                           ;my_i2c.c: 201: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
 11985  000382  EE20 F00A          	lfsr	2,0Ah
 11986  000386  5048               	movf	((c:_ic_ptr)),c,w
 11987  000388  26D9               	addwf	fsr2l
 11988  00038A  5049               	movf	((c:_ic_ptr+1)),c,w
 11989  00038C  22DA               	addwfc	fsr2h
 11990  00038E  50DF               	movf	indf2,w
 11991  000390  6E40               	movwf	(??_i2c_int_handler+0+0)&0ffh,c
 11992  000392  5040               	movf	((??_i2c_int_handler+0+0)),c,w
 11993  000394  0D01               	mullw	01h
 11994  000396  50F3               	movf	(prodl),c,w
 11995  000398  2448               	addwf	((c:_ic_ptr)),c,w
 11996  00039A  6ED9               	movwf	c:fsr2l
 11997  00039C  50F4               	movf	(prodh),c,w
 11998  00039E  2049               	addwfc	((c:_ic_ptr+1)),c,w
 11999  0003A0  6EDA               	movwf	1+c:fsr2l
 12000  0003A2  0100               	movlb	0	; () banked
 12001  0003A4  C0A6  FFDF         	movff	(i2c_int_handler@i2c_data),indf2
 12002                           
 12003                           	line	202
 12004                           	
 12005  0003A8                     i2l18949:; BSR set to: 0
 12006                           
 12007                           ;my_i2c.c: 202: ic_ptr->buflen++;
 12008  0003A8  EE20 F00A          	lfsr	2,0Ah
 12009  0003AC  5048               	movf	((c:_ic_ptr)),c,w
 12010  0003AE  26D9               	addwf	fsr2l
 12011  0003B0  5049               	movf	((c:_ic_ptr+1)),c,w
 12012  0003B2  22DA               	addwfc	fsr2h
 12013  0003B4  2ADF               	incf	indf2
 12014                           
 12015                           	line	203
 12016                           	
 12017  0003B6                     i2l18951:; BSR set to: 0
 12018                           
 12019                           ;my_i2c.c: 203: msg_ready = 1;
 12020  0003B6  6E40               	movwf	(??_i2c_int_handler+0+0)&0ffh,c
 12021  0003B8  0E01               	movlw	low(01h)
 12022  0003BA  0100               	movlb	0	; () banked
 12023  0003BC  0100               	movlb	0	; () banked
 12024  0003BE  6FA9               	movwf	((i2c_int_handler@msg_ready))&0ffh
 12025  0003C0  5040               	movf	(??_i2c_int_handler+0+0)&0ffh,c,w
 12026                           	line	204
 12027                           ;my_i2c.c: 204: } else {
 12028  0003C2  D020               	goto	i2l18957
 12029                           	
 12030  0003C4                     i2l7384:; BSR set to: 0
 12031                           
 12032                           	line	205
 12033                           	
 12034  0003C4                     i2l18953:; BSR set to: 0
 12035                           
 12036                           ;my_i2c.c: 205: ic_ptr->error_count++;
 12037  0003C4  EE20 F00E          	lfsr	2,0Eh
 12038  0003C8  5048               	movf	((c:_ic_ptr)),c,w
 12039  0003CA  26D9               	addwf	fsr2l
 12040  0003CC  5049               	movf	((c:_ic_ptr+1)),c,w
 12041  0003CE  22DA               	addwfc	fsr2h
 12042  0003D0  2ADF               	incf	indf2
 12043                           
 12044                           	line	206
 12045                           ;my_i2c.c: 206: ic_ptr->error_code = 0x6;
 12046  0003D2  EE20 F00D          	lfsr	2,0Dh
 12047  0003D6  5048               	movf	((c:_ic_ptr)),c,w
 12048  0003D8  26D9               	addwf	fsr2l
 12049  0003DA  5049               	movf	((c:_ic_ptr+1)),c,w
 12050  0003DC  22DA               	addwfc	fsr2h
 12051  0003DE  0E06               	movlw	low(06h)
 12052  0003E0  6EDF               	movwf	indf2
 12053                           	line	207
 12054                           ;my_i2c.c: 207: ic_ptr->status = 0x5;
 12055  0003E2  EE20 F00C          	lfsr	2,0Ch
 12056  0003E6  5048               	movf	((c:_ic_ptr)),c,w
 12057  0003E8  26D9               	addwf	fsr2l
 12058  0003EA  5049               	movf	((c:_ic_ptr+1)),c,w
 12059  0003EC  22DA               	addwfc	fsr2h
 12060  0003EE  0E05               	movlw	low(05h)
 12061  0003F0  6EDF               	movwf	indf2
 12062  0003F2  D008               	goto	i2l18957
 12063                           	line	208
 12064                           	
 12065  0003F4                     i2l7385:; BSR set to: 0
 12066                           
 12067                           	line	209
 12068                           ;my_i2c.c: 208: }
 12069                           ;my_i2c.c: 209: } else {
 12070  0003F4  D007               	goto	i2l18957
 12071                           	
 12072  0003F6                     i2l7383:; BSR set to: 0
 12073                           
 12074                           	line	210
 12075                           	
 12076  0003F6                     i2l18955:; BSR set to: 0
 12077                           
 12078                           ;my_i2c.c: 210: msg_ready = 1;
 12079  0003F6  6E40               	movwf	(??_i2c_int_handler+0+0)&0ffh,c
 12080  0003F8  0E01               	movlw	low(01h)
 12081  0003FA  0100               	movlb	0	; () banked
 12082  0003FC  0100               	movlb	0	; () banked
 12083  0003FE  6FA9               	movwf	((i2c_int_handler@msg_ready))&0ffh
 12084  000400  5040               	movf	(??_i2c_int_handler+0+0)&0ffh,c,w
 12085  000402  D000               	goto	i2l18957
 12086                           	line	211
 12087                           	
 12088  000404                     i2l7386:; BSR set to: 0
 12089                           
 12090                           	line	212
 12091                           	
 12092  000404                     i2l18957:; BSR set to: 0
 12093                           
 12094                           ;my_i2c.c: 211: }
 12095                           ;my_i2c.c: 212: ic_ptr->status = 0x5;
 12096  000404  EE20 F00C          	lfsr	2,0Ch
 12097  000408  5048               	movf	((c:_ic_ptr)),c,w
 12098  00040A  26D9               	addwf	fsr2l
 12099  00040C  5049               	movf	((c:_ic_ptr+1)),c,w
 12100  00040E  22DA               	addwfc	fsr2h
 12101  000410  0E05               	movlw	low(05h)
 12102  000412  6EDF               	movwf	indf2
 12103                           	line	213
 12104                           ;my_i2c.c: 213: } else if (data_read) {
 12105  000414  D07D               	goto	i2l7361
 12106                           	
 12107  000416                     i2l7382:; BSR set to: 0
 12108                           
 12109                           	
 12110  000416                     i2l18959:; BSR set to: 0
 12111                           
 12112  000416  0100               	movlb	0	; () banked
 12113  000418  0100               	movlb	0	; () banked
 12114  00041A  51AA               	movf	((i2c_int_handler@data_read))&0ffh,w
 12115  00041C  B4D8               	btfsc	status,2
 12116  00041E  D001               	goto	i2u204_41
 12117  000420  D001               	goto	i2u204_40
 12118  000422                     i2u204_41:
 12119  000422  D076               	goto	i2l7361
 12120  000424                     i2u204_40:
 12121                           	line	214
 12122                           	
 12123  000424                     i2l18961:; BSR set to: 0
 12124                           
 12125                           ;my_i2c.c: 214: ic_ptr->event_count++;
 12126  000424  EE20 F00B          	lfsr	2,0Bh
 12127  000428  5048               	movf	((c:_ic_ptr)),c,w
 12128  00042A  26D9               	addwf	fsr2l
 12129  00042C  5049               	movf	((c:_ic_ptr+1)),c,w
 12130  00042E  22DA               	addwfc	fsr2h
 12131  000430  2ADF               	incf	indf2
 12132                           
 12133                           	line	215
 12134                           	
 12135  000432                     i2l18963:; BSR set to: 0
 12136                           
 12137                           ;my_i2c.c: 215: if (SSPSTATbits.D_A == 1) {
 12138                           	
 12139  000432  AAC7               	btfss	((c:4039)),c,5	;volatile
 12140  000434  D001               	goto	i2u205_41
 12141  000436  D001               	goto	i2u205_40
 12142  000438                     i2u205_41:
 12143  000438  D01B               	goto	i2l7389
 12144  00043A                     i2u205_40:
 12145                           	line	216
 12146                           	
 12147  00043A                     i2l18965:; BSR set to: 0
 12148                           
 12149                           ;my_i2c.c: 216: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
 12150  00043A  EE20 F00A          	lfsr	2,0Ah
 12151  00043E  5048               	movf	((c:_ic_ptr)),c,w
 12152  000440  26D9               	addwf	fsr2l
 12153  000442  5049               	movf	((c:_ic_ptr+1)),c,w
 12154  000444  22DA               	addwfc	fsr2h
 12155  000446  50DF               	movf	indf2,w
 12156  000448  6E40               	movwf	(??_i2c_int_handler+0+0)&0ffh,c
 12157  00044A  5040               	movf	((??_i2c_int_handler+0+0)),c,w
 12158  00044C  0D01               	mullw	01h
 12159  00044E  50F3               	movf	(prodl),c,w
 12160  000450  2448               	addwf	((c:_ic_ptr)),c,w
 12161  000452  6ED9               	movwf	c:fsr2l
 12162  000454  50F4               	movf	(prodh),c,w
 12163  000456  2049               	addwfc	((c:_ic_ptr+1)),c,w
 12164  000458  6EDA               	movwf	1+c:fsr2l
 12165  00045A  0100               	movlb	0	; () banked
 12166  00045C  C0A6  FFDF         	movff	(i2c_int_handler@i2c_data),indf2
 12167                           
 12168                           	line	217
 12169                           	
 12170  000460                     i2l18967:; BSR set to: 0
 12171                           
 12172                           ;my_i2c.c: 217: ic_ptr->buflen++;
 12173  000460  EE20 F00A          	lfsr	2,0Ah
 12174  000464  5048               	movf	((c:_ic_ptr)),c,w
 12175  000466  26D9               	addwf	fsr2l
 12176  000468  5049               	movf	((c:_ic_ptr+1)),c,w
 12177  00046A  22DA               	addwfc	fsr2h
 12178  00046C  2ADF               	incf	indf2
 12179                           
 12180                           	line	218
 12181                           ;my_i2c.c: 218: } else {
 12182  00046E  D050               	goto	i2l7361
 12183                           	
 12184  000470                     i2l7389:; BSR set to: 0
 12185                           
 12186                           	line	219
 12187                           ;my_i2c.c: 219: if (SSPSTATbits.R_W == 1) {
 12188                           	
 12189  000470  A4C7               	btfss	((c:4039)),c,2	;volatile
 12190  000472  D001               	goto	i2u206_41
 12191  000474  D001               	goto	i2u206_40
 12192  000476                     i2u206_41:
 12193  000476  D01B               	goto	i2l18977
 12194  000478                     i2u206_40:
 12195                           	line	220
 12196                           	
 12197  000478                     i2l18969:; BSR set to: 0
 12198                           
 12199                           ;my_i2c.c: 220: ic_ptr->status = 0x8;
 12200  000478  EE20 F00C          	lfsr	2,0Ch
 12201  00047C  5048               	movf	((c:_ic_ptr)),c,w
 12202  00047E  26D9               	addwf	fsr2l
 12203  000480  5049               	movf	((c:_ic_ptr+1)),c,w
 12204  000482  22DA               	addwfc	fsr2h
 12205  000484  0E08               	movlw	low(08h)
 12206  000486  6EDF               	movwf	indf2
 12207                           	line	221
 12208                           	
 12209  000488                     i2l18971:; BSR set to: 0
 12210                           
 12211                           ;my_i2c.c: 221: msg_ready = 1;
 12212  000488  6E40               	movwf	(??_i2c_int_handler+0+0)&0ffh,c
 12213  00048A  0E01               	movlw	low(01h)
 12214  00048C  0100               	movlb	0	; () banked
 12215  00048E  0100               	movlb	0	; () banked
 12216  000490  6FA9               	movwf	((i2c_int_handler@msg_ready))&0ffh
 12217  000492  5040               	movf	(??_i2c_int_handler+0+0)&0ffh,c,w
 12218                           	line	222
 12219                           	
 12220  000494                     i2l18973:; BSR set to: 0
 12221                           
 12222                           ;my_i2c.c: 222: msg_to_send = 1;
 12223  000494  6E40               	movwf	(??_i2c_int_handler+0+0)&0ffh,c
 12224  000496  0E01               	movlw	low(01h)
 12225  000498  0100               	movlb	0	; () banked
 12226  00049A  0100               	movlb	0	; () banked
 12227  00049C  6FA8               	movwf	((i2c_int_handler@msg_to_send))&0ffh
 12228  00049E  5040               	movf	(??_i2c_int_handler+0+0)&0ffh,c,w
 12229                           	line	224
 12230                           	
 12231  0004A0                     i2l18975:; BSR set to: 0
 12232                           
 12233                           ;my_i2c.c: 224: data_read = 0;
 12234  0004A0  6E40               	movwf	(??_i2c_int_handler+0+0)&0ffh,c
 12235  0004A2  0E00               	movlw	low(0)
 12236  0004A4  0100               	movlb	0	; () banked
 12237  0004A6  0100               	movlb	0	; () banked
 12238  0004A8  6FAA               	movwf	((i2c_int_handler@data_read))&0ffh
 12239  0004AA  5040               	movf	(??_i2c_int_handler+0+0)&0ffh,c,w
 12240                           	line	225
 12241                           ;my_i2c.c: 225: } else {
 12242  0004AC  D031               	goto	i2l7361
 12243                           	
 12244  0004AE                     i2l7391:; BSR set to: 0
 12245                           
 12246                           	line	226
 12247                           	
 12248  0004AE                     i2l18977:; BSR set to: 0
 12249                           
 12250                           ;my_i2c.c: 226: ic_ptr->error_count++;
 12251  0004AE  EE20 F00E          	lfsr	2,0Eh
 12252  0004B2  5048               	movf	((c:_ic_ptr)),c,w
 12253  0004B4  26D9               	addwf	fsr2l
 12254  0004B6  5049               	movf	((c:_ic_ptr+1)),c,w
 12255  0004B8  22DA               	addwfc	fsr2h
 12256  0004BA  2ADF               	incf	indf2
 12257                           
 12258                           	line	227
 12259                           ;my_i2c.c: 227: ic_ptr->error_code = 0x6;
 12260  0004BC  EE20 F00D          	lfsr	2,0Dh
 12261  0004C0  5048               	movf	((c:_ic_ptr)),c,w
 12262  0004C2  26D9               	addwf	fsr2l
 12263  0004C4  5049               	movf	((c:_ic_ptr+1)),c,w
 12264  0004C6  22DA               	addwfc	fsr2h
 12265  0004C8  0E06               	movlw	low(06h)
 12266  0004CA  6EDF               	movwf	indf2
 12267                           	line	228
 12268                           ;my_i2c.c: 228: ic_ptr->status = 0x5;
 12269  0004CC  EE20 F00C          	lfsr	2,0Ch
 12270  0004D0  5048               	movf	((c:_ic_ptr)),c,w
 12271  0004D2  26D9               	addwf	fsr2l
 12272  0004D4  5049               	movf	((c:_ic_ptr+1)),c,w
 12273  0004D6  22DA               	addwfc	fsr2h
 12274  0004D8  0E05               	movlw	low(05h)
 12275  0004DA  6EDF               	movwf	indf2
 12276  0004DC  D019               	goto	i2l7361
 12277                           	line	229
 12278                           	
 12279  0004DE                     i2l7392:; BSR set to: 0
 12280                           
 12281  0004DE  D018               	goto	i2l7361
 12282                           	line	230
 12283                           	
 12284  0004E0                     i2l7390:; BSR set to: 0
 12285                           
 12286  0004E0  D017               	goto	i2l7361
 12287                           	line	231
 12288                           	
 12289  0004E2                     i2l7388:; BSR set to: 0
 12290                           
 12291  0004E2  D016               	goto	i2l7361
 12292                           	line	232
 12293                           	
 12294  0004E4                     i2l7387:; BSR set to: 0
 12295                           
 12296                           ;my_i2c.c: 229: }
 12297                           ;my_i2c.c: 230: }
 12298                           ;my_i2c.c: 231: }
 12299                           ;my_i2c.c: 232: break;
 12300  0004E4  D015               	goto	i2l7361
 12301                           	line	234
 12302                           	
 12303  0004E6                     i2l18979:; BSR set to: 0
 12304                           
 12305                           ;my_i2c.c: 233: }
 12306                           ;my_i2c.c: 234: }
 12307  0004E6  D014               	goto	i2l7361
 12308                           	line	132
 12309                           	
 12310  0004E8                     i2l7362:; BSR set to: 0
 12311                           
 12312                           	
 12313  0004E8                     i2l18981:; BSR set to: 0
 12314                           
 12315  0004E8  EE20 F00C          	lfsr	2,0Ch
 12316  0004EC  5048               	movf	((c:_ic_ptr)),c,w
 12317  0004EE  26D9               	addwf	fsr2l
 12318  0004F0  5049               	movf	((c:_ic_ptr+1)),c,w
 12319  0004F2  22DA               	addwfc	fsr2h
 12320  0004F4  50DF               	movf	indf2,w
 12321                           	; Switch size 1, requested type "space"
 12322                           ; Number of cases is 4, Range of values is 5 to 8
 12323                           ; switch strategies available:
 12324                           ; Name         Instructions Cycles
 12325                           ; simple_byte           13     7 (average)
 12326                           ;	Chosen strategy is simple_byte
 12327                           
 12328  0004F6  0A05               	xorlw	5^0	; case 5
 12329  0004F8  B4D8               	skipnz
 12330  0004FA  D643               	goto	i2l7363
 12331  0004FC  0A03               	xorlw	6^5	; case 6
 12332  0004FE  B4D8               	skipnz
 12333  000500  D662               	goto	i2l7367
 12334  000502  0A01               	xorlw	7^6	; case 7
 12335  000504  B4D8               	skipnz
 12336  000506  D727               	goto	i2l7381
 12337  000508  0A0F               	xorlw	8^7	; case 8
 12338  00050A  B4D8               	skipnz
 12339  00050C  D6E2               	goto	i2l18931
 12340  00050E  D000               	goto	i2l7361
 12341                           
 12342                           	line	234
 12343                           	
 12344  000510                     i2l7366:; BSR set to: 0
 12345                           
 12346                           	line	235
 12347                           	
 12348  000510                     i2l7361:
 12349                           	line	238
 12350                           ;my_i2c.c: 235: }
 12351                           ;my_i2c.c: 238: if (data_read || data_written) {
 12352  000510  0100               	movlb	0	; () banked
 12353  000512  0100               	movlb	0	; () banked
 12354  000514  67AA               	tstfsz	((i2c_int_handler@data_read))&0ffh
 12355  000516  D001               	goto	i2u207_41
 12356  000518  D001               	goto	i2u207_40
 12357  00051A                     i2u207_41:
 12358  00051A  D007               	goto	i2l7395
 12359  00051C                     i2u207_40:
 12360                           	
 12361  00051C                     i2l18983:; BSR set to: 0
 12362                           
 12363  00051C  0100               	movlb	0	; () banked
 12364  00051E  0100               	movlb	0	; () banked
 12365  000520  51A2               	movf	((i2c_int_handler@data_written))&0ffh,w
 12366  000522  B4D8               	btfsc	status,2
 12367  000524  D001               	goto	i2u208_41
 12368  000526  D001               	goto	i2u208_40
 12369  000528                     i2u208_41:
 12370  000528  D007               	goto	i2l18987
 12371  00052A                     i2u208_40:
 12372                           	
 12373  00052A                     i2l7395:; BSR set to: 0
 12374                           
 12375                           	line	240
 12376                           ;my_i2c.c: 240: if (SSPCON1bits.CKP == 0) {
 12377                           	
 12378  00052A  B8C6               	btfsc	((c:4038)),c,4	;volatile
 12379  00052C  D001               	goto	i2u209_41
 12380  00052E  D001               	goto	i2u209_40
 12381  000530                     i2u209_41:
 12382  000530  D003               	goto	i2l18987
 12383  000532                     i2u209_40:
 12384                           	line	241
 12385                           	
 12386  000532                     i2l18985:; BSR set to: 0
 12387                           
 12388                           ;my_i2c.c: 241: SSPCON1bits.CKP = 1;
 12389  000532  88C6               	bsf	((c:4038)),c,4	;volatile
 12390  000534  D001               	goto	i2l18987
 12391                           	line	242
 12392                           	
 12393  000536                     i2l7396:; BSR set to: 0
 12394                           
 12395  000536  D000               	goto	i2l18987
 12396                           	line	243
 12397                           	
 12398  000538                     i2l7393:; BSR set to: 0
 12399                           
 12400                           	line	246
 12401                           	
 12402  000538                     i2l18987:; BSR set to: 0
 12403                           
 12404                           ;my_i2c.c: 242: }
 12405                           ;my_i2c.c: 243: }
 12406                           ;my_i2c.c: 246: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
 12407  000538  EE20 F00A          	lfsr	2,0Ah
 12408  00053C  5048               	movf	((c:_ic_ptr)),c,w
 12409  00053E  26D9               	addwf	fsr2l
 12410  000540  5049               	movf	((c:_ic_ptr+1)),c,w
 12411  000542  22DA               	addwfc	fsr2h
 12412  000544  0E08               	movlw	(09h-1)
 12413  000546  64DF               	cpfsgt	indf2
 12414  000548  D001               	goto	i2u210_41
 12415  00054A  D001               	goto	i2u210_40
 12416  00054C                     i2u210_41:
 12417  00054C  D01E               	goto	i2l18993
 12418  00054E                     i2u210_40:
 12419                           	
 12420  00054E                     i2l18989:; BSR set to: 0
 12421                           
 12422  00054E  0100               	movlb	0	; () banked
 12423  000550  0100               	movlb	0	; () banked
 12424  000552  67A9               	tstfsz	((i2c_int_handler@msg_ready))&0ffh
 12425  000554  D001               	goto	i2u211_41
 12426  000556  D001               	goto	i2u211_40
 12427  000558                     i2u211_41:
 12428  000558  D018               	goto	i2l18993
 12429  00055A                     i2u211_40:
 12430                           	line	247
 12431                           	
 12432  00055A                     i2l18991:; BSR set to: 0
 12433                           
 12434                           ;my_i2c.c: 247: ic_ptr->status = 0x5;
 12435  00055A  EE20 F00C          	lfsr	2,0Ch
 12436  00055E  5048               	movf	((c:_ic_ptr)),c,w
 12437  000560  26D9               	addwf	fsr2l
 12438  000562  5049               	movf	((c:_ic_ptr+1)),c,w
 12439  000564  22DA               	addwfc	fsr2h
 12440  000566  0E05               	movlw	low(05h)
 12441  000568  6EDF               	movwf	indf2
 12442                           	line	248
 12443                           ;my_i2c.c: 248: ic_ptr->error_count++;
 12444  00056A  EE20 F00E          	lfsr	2,0Eh
 12445  00056E  5048               	movf	((c:_ic_ptr)),c,w
 12446  000570  26D9               	addwf	fsr2l
 12447  000572  5049               	movf	((c:_ic_ptr+1)),c,w
 12448  000574  22DA               	addwfc	fsr2h
 12449  000576  2ADF               	incf	indf2
 12450                           
 12451                           	line	249
 12452                           ;my_i2c.c: 249: ic_ptr->error_code = 0x7;
 12453  000578  EE20 F00D          	lfsr	2,0Dh
 12454  00057C  5048               	movf	((c:_ic_ptr)),c,w
 12455  00057E  26D9               	addwf	fsr2l
 12456  000580  5049               	movf	((c:_ic_ptr+1)),c,w
 12457  000582  22DA               	addwfc	fsr2h
 12458  000584  0E07               	movlw	low(07h)
 12459  000586  6EDF               	movwf	indf2
 12460  000588  D000               	goto	i2l18993
 12461                           	line	250
 12462                           	
 12463  00058A                     i2l7397:; BSR set to: 0
 12464                           
 12465                           	line	252
 12466                           	
 12467  00058A                     i2l18993:; BSR set to: 0
 12468                           
 12469                           ;my_i2c.c: 250: }
 12470                           ;my_i2c.c: 252: if (msg_ready) {
 12471  00058A  0100               	movlb	0	; () banked
 12472  00058C  0100               	movlb	0	; () banked
 12473  00058E  51A9               	movf	((i2c_int_handler@msg_ready))&0ffh,w
 12474  000590  B4D8               	btfsc	status,2
 12475  000592  D001               	goto	i2u212_41
 12476  000594  D001               	goto	i2u212_40
 12477  000596                     i2u212_41:
 12478  000596  D05F               	goto	i2l19009
 12479  000598                     i2u212_40:
 12480                           	line	256
 12481                           	
 12482  000598                     i2l18995:; BSR set to: 0
 12483                           
 12484                           ;my_i2c.c: 254: unsigned char data[10];
 12485                           ;my_i2c.c: 255: unsigned char msgtype;
 12486                           ;my_i2c.c: 256: int length = FromMainLow_recvmsg(10, &msgtype, (void *) data);
 12487  000598  6E40               	movwf	(??_i2c_int_handler+0+0)&0ffh,c
 12488  00059A  0E0A               	movlw	low(0Ah)
 12489  00059C  0100               	movlb	0	; () banked
 12490  00059E  0100               	movlb	0	; () banked
 12491  0005A0  6F8C               	movwf	((?_FromMainLow_recvmsg))&0ffh
 12492  0005A2  5040               	movf	(??_i2c_int_handler+0+0)&0ffh,c,w
 12493  0005A4  0100               	movlb	0	; () banked
 12494  0005A6  0E00               	movlw	high(i2c_int_handler@msgtype)
 12495  0005A8  0100               	movlb	0	; () banked
 12496  0005AA  0100               	movlb	0	; () banked
 12497  0005AC  6F8E               	movwf	(1+(?_FromMainLow_recvmsg+01h))&0ffh
 12498  0005AE  0100               	movlb	0	; () banked
 12499  0005B0  0EA7               	movlw	low(i2c_int_handler@msgtype)
 12500  0005B2  0100               	movlb	0	; () banked
 12501  0005B4  6F8D               	movwf	(0+(?_FromMainLow_recvmsg+01h))&0ffh
 12502  0005B6  0100               	movlb	0	; () banked
 12503  0005B8  0E00               	movlw	high(i2c_int_handler@data)
 12504  0005BA  0100               	movlb	0	; () banked
 12505  0005BC  0100               	movlb	0	; () banked
 12506  0005BE  6F90               	movwf	(1+(?_FromMainLow_recvmsg+03h))&0ffh
 12507  0005C0  0100               	movlb	0	; () banked
 12508  0005C2  0E91               	movlw	low(i2c_int_handler@data)
 12509  0005C4  0100               	movlb	0	; () banked
 12510  0005C6  6F8F               	movwf	(0+(?_FromMainLow_recvmsg+03h))&0ffh
 12511  0005C8  0100               	movlb	0	; () banked
 12512  0005CA  EC2E  F00D         	call	_FromMainLow_recvmsg	;wreg free
 12513  0005CE  0100               	movlb	0	; () banked
 12514  0005D0  0100               	movlb	0	; () banked
 12515  0005D2  6FA4               	movwf	((i2c_int_handler@length))&0ffh
 12516  0005D4  0100               	movlb	0	; () banked
 12517  0005D6  6BA5               	clrf	((i2c_int_handler@length+1))&0ffh
 12518  0005D8  0100               	movlb	0	; () banked
 12519  0005DA  BFA4               	btfsc	((i2c_int_handler@length))&0ffh,7
 12520  0005DC  07A5               	decf	((i2c_int_handler@length+1))&0ffh
 12521                           	line	257
 12522                           	
 12523  0005DE                     i2l18997:; BSR set to: 0
 12524                           
 12525                           ;my_i2c.c: 257: if(length > 0){
 12526  0005DE  0100               	movlb	0	; () banked
 12527  0005E0  0100               	movlb	0	; () banked
 12528  0005E2  51A5               	movf	((i2c_int_handler@length+1))&0ffh,w
 12529  0005E4  0A80               	xorlw	80h
 12530  0005E6  0F80               	addlw	-((0)^80h)
 12531  0005E8  0E01               	movlw	01h
 12532  0005EA  B4D8               	btfsc	status,2
 12533  0005EC  5DA4               	subwf	((i2c_int_handler@length))&0ffh,w
 12534  0005EE  A0D8               	btfss	status,0
 12535  0005F0  D001               	goto	i2u213_41
 12536  0005F2  D001               	goto	i2u213_40
 12537  0005F4                     i2u213_41:
 12538  0005F4  D00B               	goto	i2l19001
 12539  0005F6                     i2u213_40:
 12540                           	line	258
 12541                           	
 12542  0005F6                     i2l18999:; BSR set to: 0
 12543                           
 12544                           ;my_i2c.c: 258: start_i2c_slave_reply(length, data);
 12545  0005F6  C0A4  F034         	movff	(i2c_int_handler@length),(c:?_start_i2c_slave_reply)
 12546  0005FA  0100               	movlb	0	; () banked
 12547  0005FC  0E00               	movlw	high(i2c_int_handler@data)
 12548  0005FE  6E36               	movwf	(1+((c:?_start_i2c_slave_reply)+01h)),c
 12549  000600  0100               	movlb	0	; () banked
 12550  000602  0E91               	movlw	low(i2c_int_handler@data)
 12551  000604  6E35               	movwf	(0+((c:?_start_i2c_slave_reply)+01h)),c
 12552  000606  ECA5  F007         	call	_start_i2c_slave_reply	;wreg free
 12553                           	line	259
 12554                           ;my_i2c.c: 259: }
 12555  00060A  D070               	goto	i2l19017
 12556                           	line	260
 12557                           	
 12558  00060C                     i2l7399:
 12559                           	line	263
 12560                           	
 12561  00060C                     i2l19001:
 12562                           ;my_i2c.c: 260: else {
 12563                           ;my_i2c.c: 262: unsigned char empty[4];
 12564                           ;my_i2c.c: 263: empty[0] = 0x55;
 12565  00060C  6E40               	movwf	(??_i2c_int_handler+0+0)&0ffh,c
 12566  00060E  0E55               	movlw	low(055h)
 12567  000610  0100               	movlb	0	; () banked
 12568  000612  0100               	movlb	0	; () banked
 12569  000614  6F9B               	movwf	((i2c_int_handler@empty))&0ffh
 12570  000616  5040               	movf	(??_i2c_int_handler+0+0)&0ffh,c,w
 12571                           	line	264
 12572                           	
 12573  000618                     i2l19003:; BSR set to: 0
 12574                           
 12575                           ;my_i2c.c: 264: empty[1] = emptyMsgCount;
 12576  000618  C0C6  F09C         	movff	(_emptyMsgCount),0+(i2c_int_handler@empty+01h)
 12577                           	line	265
 12578                           ;my_i2c.c: 265: empty[2] = 0x0;
 12579  00061C  6E40               	movwf	(??_i2c_int_handler+0+0)&0ffh,c
 12580  00061E  0E00               	movlw	low(0)
 12581  000620  0100               	movlb	0	; () banked
 12582  000622  0100               	movlb	0	; () banked
 12583  000624  6F9D               	movwf	(0+(i2c_int_handler@empty+02h))&0ffh
 12584  000626  5040               	movf	(??_i2c_int_handler+0+0)&0ffh,c,w
 12585                           	line	266
 12586                           ;my_i2c.c: 266: empty[3] = 0x0;
 12587  000628  6E40               	movwf	(??_i2c_int_handler+0+0)&0ffh,c
 12588  00062A  0E00               	movlw	low(0)
 12589  00062C  0100               	movlb	0	; () banked
 12590  00062E  0100               	movlb	0	; () banked
 12591  000630  6F9E               	movwf	(0+(i2c_int_handler@empty+03h))&0ffh
 12592  000632  5040               	movf	(??_i2c_int_handler+0+0)&0ffh,c,w
 12593                           	line	267
 12594                           	
 12595  000634                     i2l19005:; BSR set to: 0
 12596                           
 12597                           ;my_i2c.c: 267: emptyMsgCount++;
 12598  000634  0100               	movlb	0	; () banked
 12599  000636  0100               	movlb	0	; () banked
 12600  000638  2BC6               	incf	((_emptyMsgCount))&0ffh
 12601                           	line	268
 12602                           	
 12603  00063A                     i2l19007:; BSR set to: 0
 12604                           
 12605                           ;my_i2c.c: 268: start_i2c_slave_reply(4,empty);
 12606  00063A  6E40               	movwf	(??_i2c_int_handler+0+0)&0ffh,c
 12607  00063C  0E04               	movlw	low(04h)
 12608  00063E  6E34               	movwf	((c:?_start_i2c_slave_reply)),c
 12609  000640  5040               	movf	(??_i2c_int_handler+0+0)&0ffh,c,w
 12610  000642  0100               	movlb	0	; () banked
 12611  000644  0E00               	movlw	high(i2c_int_handler@empty)
 12612  000646  6E36               	movwf	(1+((c:?_start_i2c_slave_reply)+01h)),c
 12613  000648  0100               	movlb	0	; () banked
 12614  00064A  0E9B               	movlw	low(i2c_int_handler@empty)
 12615  00064C  6E35               	movwf	(0+((c:?_start_i2c_slave_reply)+01h)),c
 12616  00064E  ECA5  F007         	call	_start_i2c_slave_reply	;wreg free
 12617  000652  D04C               	goto	i2l19017
 12618                           	line	269
 12619                           	
 12620  000654                     i2l7400:
 12621                           	line	272
 12622                           ;my_i2c.c: 269: }
 12623                           ;my_i2c.c: 272: } else if (ic_ptr->error_count >= 1) {
 12624  000654  D04B               	goto	i2l19017
 12625                           	
 12626  000656                     i2l7398:
 12627                           	
 12628  000656                     i2l19009:
 12629  000656  EE20 F00E          	lfsr	2,0Eh
 12630  00065A  5048               	movf	((c:_ic_ptr)),c,w
 12631  00065C  26D9               	addwf	fsr2l
 12632  00065E  5049               	movf	((c:_ic_ptr+1)),c,w
 12633  000660  22DA               	addwfc	fsr2h
 12634  000662  50DF               	movf	indf2,w
 12635  000664  B4D8               	btfsc	status,2
 12636  000666  D001               	goto	i2u214_41
 12637  000668  D001               	goto	i2u214_40
 12638  00066A                     i2u214_41:
 12639  00066A  D040               	goto	i2l19017
 12640  00066C                     i2u214_40:
 12641                           	line	273
 12642                           	
 12643  00066C                     i2l19011:
 12644                           ;my_i2c.c: 273: error_buf[0] = ic_ptr->error_count;
 12645  00066C  EE20 F00E          	lfsr	2,0Eh
 12646  000670  5048               	movf	((c:_ic_ptr)),c,w
 12647  000672  26D9               	addwf	fsr2l
 12648  000674  5049               	movf	((c:_ic_ptr+1)),c,w
 12649  000676  22DA               	addwfc	fsr2h
 12650  000678  50DF               	movf	indf2,w
 12651  00067A  0100               	movlb	0	; () banked
 12652  00067C  0100               	movlb	0	; () banked
 12653  00067E  6F9F               	movwf	((i2c_int_handler@error_buf))&0ffh
 12654                           	line	274
 12655                           ;my_i2c.c: 274: error_buf[1] = ic_ptr->error_code;
 12656  000680  EE20 F00D          	lfsr	2,0Dh
 12657  000684  5048               	movf	((c:_ic_ptr)),c,w
 12658  000686  26D9               	addwf	fsr2l
 12659  000688  5049               	movf	((c:_ic_ptr+1)),c,w
 12660  00068A  22DA               	addwfc	fsr2h
 12661  00068C  50DF               	movf	indf2,w
 12662  00068E  0100               	movlb	0	; () banked
 12663  000690  0100               	movlb	0	; () banked
 12664  000692  6FA0               	movwf	(0+(i2c_int_handler@error_buf+01h))&0ffh
 12665                           	line	275
 12666                           ;my_i2c.c: 275: error_buf[2] = ic_ptr->event_count;
 12667  000694  EE20 F00B          	lfsr	2,0Bh
 12668  000698  5048               	movf	((c:_ic_ptr)),c,w
 12669  00069A  26D9               	addwf	fsr2l
 12670  00069C  5049               	movf	((c:_ic_ptr+1)),c,w
 12671  00069E  22DA               	addwfc	fsr2h
 12672  0006A0  50DF               	movf	indf2,w
 12673  0006A2  0100               	movlb	0	; () banked
 12674  0006A4  0100               	movlb	0	; () banked
 12675  0006A6  6FA1               	movwf	(0+(i2c_int_handler@error_buf+02h))&0ffh
 12676                           	line	276
 12677                           	
 12678  0006A8                     i2l19013:; BSR set to: 0
 12679                           
 12680                           ;my_i2c.c: 276: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
 12681  0006A8  6E40               	movwf	(??_i2c_int_handler+0+0)&0ffh,c
 12682  0006AA  0E03               	movlw	low(03h)
 12683  0006AC  0100               	movlb	0	; () banked
 12684  0006AE  0100               	movlb	0	; () banked
 12685  0006B0  6F8B               	movwf	((?_ToMainHigh_sendmsg))&0ffh
 12686  0006B2  5040               	movf	(??_i2c_int_handler+0+0)&0ffh,c,w
 12687  0006B4  6E41               	movwf	(??_i2c_int_handler+1+0)&0ffh,c
 12688  0006B6  0E29               	movlw	low(029h)
 12689  0006B8  0100               	movlb	0	; () banked
 12690  0006BA  0100               	movlb	0	; () banked
 12691  0006BC  6F8C               	movwf	(0+(?_ToMainHigh_sendmsg+01h))&0ffh
 12692  0006BE  5041               	movf	(??_i2c_int_handler+1+0)&0ffh,c,w
 12693  0006C0  0100               	movlb	0	; () banked
 12694  0006C2  0E00               	movlw	high(i2c_int_handler@error_buf)
 12695  0006C4  0100               	movlb	0	; () banked
 12696  0006C6  0100               	movlb	0	; () banked
 12697  0006C8  6F8E               	movwf	(1+(?_ToMainHigh_sendmsg+02h))&0ffh
 12698  0006CA  0100               	movlb	0	; () banked
 12699  0006CC  0E9F               	movlw	low(i2c_int_handler@error_buf)
 12700  0006CE  0100               	movlb	0	; () banked
 12701  0006D0  6F8D               	movwf	(0+(?_ToMainHigh_sendmsg+02h))&0ffh
 12702  0006D2  0100               	movlb	0	; () banked
 12703  0006D4  EC8B  F00D         	call	_ToMainHigh_sendmsg	;wreg free
 12704                           	line	277
 12705                           	
 12706  0006D8                     i2l19015:
 12707                           ;my_i2c.c: 277: ic_ptr->error_count = 0;
 12708  0006D8  EE20 F00E          	lfsr	2,0Eh
 12709  0006DC  5048               	movf	((c:_ic_ptr)),c,w
 12710  0006DE  26D9               	addwf	fsr2l
 12711  0006E0  5049               	movf	((c:_ic_ptr+1)),c,w
 12712  0006E2  22DA               	addwfc	fsr2h
 12713  0006E4  0E00               	movlw	low(0)
 12714  0006E6  6EDF               	movwf	indf2
 12715  0006E8  D001               	goto	i2l19017
 12716                           	line	278
 12717                           	
 12718  0006EA                     i2l7402:
 12719  0006EA  D000               	goto	i2l19017
 12720                           	line	279
 12721                           	
 12722  0006EC                     i2l7401:
 12723                           	
 12724  0006EC                     i2l19017:
 12725                           ;my_i2c.c: 278: }
 12726                           ;my_i2c.c: 279: if (msg_to_send) {
 12727  0006EC  0100               	movlb	0	; () banked
 12728  0006EE  0100               	movlb	0	; () banked
 12729  0006F0  51A8               	movf	((i2c_int_handler@msg_to_send))&0ffh,w
 12730  0006F2  B4D8               	btfsc	status,2
 12731  0006F4  D001               	goto	i2u215_41
 12732  0006F6  D001               	goto	i2u215_40
 12733  0006F8                     i2u215_41:
 12734  0006F8  D007               	goto	i2l7404
 12735  0006FA                     i2u215_40:
 12736                           	line	286
 12737                           	
 12738  0006FA                     i2l19019:; BSR set to: 0
 12739                           
 12740                           ;my_i2c.c: 286: msg_to_send = 0;
 12741  0006FA  6E40               	movwf	(??_i2c_int_handler+0+0)&0ffh,c
 12742  0006FC  0E00               	movlw	low(0)
 12743  0006FE  0100               	movlb	0	; () banked
 12744  000700  0100               	movlb	0	; () banked
 12745  000702  6FA8               	movwf	((i2c_int_handler@msg_to_send))&0ffh
 12746  000704  5040               	movf	(??_i2c_int_handler+0+0)&0ffh,c,w
 12747  000706  D000               	goto	i2l7404
 12748                           	line	287
 12749                           	
 12750  000708                     i2l7403:; BSR set to: 0
 12751                           
 12752                           	line	288
 12753                           	
 12754  000708                     i2l7404:; BSR set to: 0
 12755                           
 12756  000708  0012               	return
 12757                           	opt stack 0
 12758                           GLOBAL	__end_of_i2c_int_handler
 12759  00070A                     	__end_of_i2c_int_handler:
 12760                           	signat	_i2c_int_handler,88
 12761                           	global	_timer0_int_handler
 12762                           
 12763 ;; *************** function _timer0_int_handler *****************
 12764 ;; Defined at:
 12765 ;;		line 19 in file "../src/user_interrupts.c"
 12766 ;; Parameters:    Size  Location     Type
 12767 ;;		None
 12768 ;; Auto vars:     Size  Location     Type
 12769 ;;  val             2   21[BANK0 ] unsigned int 
 12770 ;;  length          2   19[BANK0 ] int 
 12771 ;;  msgtype         2   17[BANK0 ] int 
 12772 ;; Return value:  Size  Location     Type
 12773 ;;		None               void
 12774 ;; Registers used:
 12775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12776 ;; Tracked objects:
 12777 ;;		On entry : 0/0
 12778 ;;		On exit  : 0/0
 12779 ;;		Unchanged: 0/0
 12780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12781 ;;      Params:         0       0       0       0       0
 12782 ;;      Locals:         0       6       0       0       0
 12783 ;;      Temps:          2       0       0       0       0
 12784 ;;      Totals:         2       6       0       0       0
 12785 ;;Total ram usage:        8 bytes
 12786 ;; Hardware stack levels used:    1
 12787 ;; Hardware stack levels required when called:    3
 12788 ;; This function calls:
 12789 ;;		_WriteTimer0
 12790 ;;		_FromMainHigh_recvmsg
 12791 ;;		_ToMainHigh_sendmsg
 12792 ;; This function is called by:
 12793 ;;		_InterruptHandlerHigh
 12794 ;; This function uses a non-reentrant model
 12795 ;;
 12796                           psect	text41,class=CODE,space=0,reloc=2
 12797                           global __ptext41
 12798  001226                     __ptext41:
 12799                           psect	text41
 12800                           	file	"../src/user_interrupts.c"
 12801                           	line	19
 12802                           	global	__size_of_timer0_int_handler
 12803  0000                     	__size_of_timer0_int_handler	equ	__end_of_timer0_int_handler-_timer0_int_handler
 12804                           	
 12805  001226                     _timer0_int_handler:; BSR set to: 0
 12806                           
 12807                           	opt	stack 17
 12808                           	line	24
 12809                           	
 12810  001226                     i2l19021:
 12811                           ;user_interrupts.c: 20: unsigned int val;
 12812                           ;user_interrupts.c: 21: int length, msgtype;
 12813                           ;user_interrupts.c: 24: LATBbits.LATB0 = !LATBbits.LATB0;
 12814                           	
 12815  001226  A08A               	btfss	((c:3978)),c,0	;volatile
 12816  001228  D001               	goto	i2u216_41
 12817  00122A  D002               	goto	i2u216_40
 12818  00122C                     i2u216_41:
 12819  00122C  0E01               	movlw	1
 12820  00122E  D001               	goto	i2u216_46
 12821  001230                     i2u216_40:
 12822  001230  0E00               	movlw	0
 12823  001232                     i2u216_46:
 12824  001232  6E40               	movwf	(??_timer0_int_handler+0+0)&0ffh,c
 12825  001234  508A               	movf	((c:3978)),c,w	;volatile
 12826  001236  1840               	xorwf	((??_timer0_int_handler+0+0)),c,w
 12827  001238  0BFE               	andlw	not ((1<<1)-1)
 12828  00123A  1840               	xorwf	((??_timer0_int_handler+0+0)),c,w
 12829  00123C  6E8A               	movwf	((c:3978)),c	;volatile
 12830                           	line	26
 12831                           	
 12832  00123E                     i2l19023:
 12833                           ;user_interrupts.c: 26: WriteTimer0(0);
 12834  00123E  0E00               	movlw	high(0)
 12835  001240  6E35               	movwf	((c:?_WriteTimer0+1)),c
 12836  001242  0E00               	movlw	low(0)
 12837  001244  6E34               	movwf	((c:?_WriteTimer0)),c
 12838  001246  EC2C  F00E         	call	_WriteTimer0	;wreg free
 12839                           	line	28
 12840                           	
 12841  00124A                     i2l19025:
 12842                           ;user_interrupts.c: 28: length = FromMainHigh_recvmsg(sizeof(val), (unsigned char *)(uns
                                 igned int)&msgtype, (void *) &val);
 12843  00124A  6E40               	movwf	(??_timer0_int_handler+0+0)&0ffh,c
 12844  00124C  0E02               	movlw	low(02h)
 12845  00124E  0100               	movlb	0	; () banked
 12846  001250  0100               	movlb	0	; () banked
 12847  001252  6F8C               	movwf	((?_FromMainHigh_recvmsg))&0ffh
 12848  001254  5040               	movf	(??_timer0_int_handler+0+0)&0ffh,c,w
 12849  001256  0100               	movlb	0	; () banked
 12850  001258  0E00               	movlw	high(timer0_int_handler@msgtype)
 12851  00125A  0100               	movlb	0	; () banked
 12852  00125C  0100               	movlb	0	; () banked
 12853  00125E  6F8E               	movwf	(1+(?_FromMainHigh_recvmsg+01h))&0ffh
 12854  001260  0100               	movlb	0	; () banked
 12855  001262  0E91               	movlw	low(timer0_int_handler@msgtype)
 12856  001264  0100               	movlb	0	; () banked
 12857  001266  6F8D               	movwf	(0+(?_FromMainHigh_recvmsg+01h))&0ffh
 12858  001268  0100               	movlb	0	; () banked
 12859  00126A  0E00               	movlw	high(timer0_int_handler@val)
 12860  00126C  0100               	movlb	0	; () banked
 12861  00126E  0100               	movlb	0	; () banked
 12862  001270  6F90               	movwf	(1+(?_FromMainHigh_recvmsg+03h))&0ffh
 12863  001272  0100               	movlb	0	; () banked
 12864  001274  0E95               	movlw	low(timer0_int_handler@val)
 12865  001276  0100               	movlb	0	; () banked
 12866  001278  6F8F               	movwf	(0+(?_FromMainHigh_recvmsg+03h))&0ffh
 12867  00127A  0100               	movlb	0	; () banked
 12868  00127C  EC46  F00D         	call	_FromMainHigh_recvmsg	;wreg free
 12869  001280  0100               	movlb	0	; () banked
 12870  001282  0100               	movlb	0	; () banked
 12871  001284  6F93               	movwf	((timer0_int_handler@length))&0ffh
 12872  001286  0100               	movlb	0	; () banked
 12873  001288  6B94               	clrf	((timer0_int_handler@length+1))&0ffh
 12874  00128A  0100               	movlb	0	; () banked
 12875  00128C  BF93               	btfsc	((timer0_int_handler@length))&0ffh,7
 12876  00128E  0794               	decf	((timer0_int_handler@length+1))&0ffh
 12877                           	line	29
 12878                           	
 12879  001290                     i2l19027:; BSR set to: 0
 12880                           
 12881                           ;user_interrupts.c: 29: if (length == sizeof (val)) {
 12882  001290  0100               	movlb	0	; () banked
 12883  001292  0100               	movlb	0	; () banked
 12884  001294  5193               	movf	((timer0_int_handler@length))&0ffh,w
 12885  001296  0A02               	xorlw	2
 12886  001298  1194               	iorwf ((timer0_int_handler@length+1))&0ffh,w
 12887                           
 12888  00129A  A4D8               	btfss	status,2
 12889  00129C  D001               	goto	i2u217_41
 12890  00129E  D001               	goto	i2u217_40
 12891  0012A0                     i2u217_41:
 12892  0012A0  D019               	goto	i2l16386
 12893  0012A2                     i2u217_40:
 12894                           	line	30
 12895                           	
 12896  0012A2                     i2l19029:; BSR set to: 0
 12897                           
 12898                           ;user_interrupts.c: 30: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
 12899  0012A2  6E40               	movwf	(??_timer0_int_handler+0+0)&0ffh,c
 12900  0012A4  0E02               	movlw	low(02h)
 12901  0012A6  0100               	movlb	0	; () banked
 12902  0012A8  0100               	movlb	0	; () banked
 12903  0012AA  6F8B               	movwf	((?_ToMainHigh_sendmsg))&0ffh
 12904  0012AC  5040               	movf	(??_timer0_int_handler+0+0)&0ffh,c,w
 12905  0012AE  6E41               	movwf	(??_timer0_int_handler+1+0)&0ffh,c
 12906  0012B0  0E0A               	movlw	low(0Ah)
 12907  0012B2  0100               	movlb	0	; () banked
 12908  0012B4  0100               	movlb	0	; () banked
 12909  0012B6  6F8C               	movwf	(0+(?_ToMainHigh_sendmsg+01h))&0ffh
 12910  0012B8  5041               	movf	(??_timer0_int_handler+1+0)&0ffh,c,w
 12911  0012BA  0100               	movlb	0	; () banked
 12912  0012BC  0E00               	movlw	high(timer0_int_handler@val)
 12913  0012BE  0100               	movlb	0	; () banked
 12914  0012C0  0100               	movlb	0	; () banked
 12915  0012C2  6F8E               	movwf	(1+(?_ToMainHigh_sendmsg+02h))&0ffh
 12916  0012C4  0100               	movlb	0	; () banked
 12917  0012C6  0E95               	movlw	low(timer0_int_handler@val)
 12918  0012C8  0100               	movlb	0	; () banked
 12919  0012CA  6F8D               	movwf	(0+(?_ToMainHigh_sendmsg+02h))&0ffh
 12920  0012CC  0100               	movlb	0	; () banked
 12921  0012CE  EC8B  F00D         	call	_ToMainHigh_sendmsg	;wreg free
 12922  0012D2  D000               	goto	i2l16386
 12923                           	line	31
 12924                           	
 12925  0012D4                     i2l16385:
 12926                           	line	32
 12927                           	
 12928  0012D4                     i2l16386:
 12929  0012D4  0012               	return
 12930                           	opt stack 0
 12931                           GLOBAL	__end_of_timer0_int_handler
 12932  0012D6                     	__end_of_timer0_int_handler:
 12933                           	signat	_timer0_int_handler,88
 12934                           	global	_SleepIfOkay
 12935                           
 12936 ;; *************** function _SleepIfOkay *****************
 12937 ;; Defined at:
 12938 ;;		line 228 in file "../src/messages.c"
 12939 ;; Parameters:    Size  Location     Type
 12940 ;;		None
 12941 ;; Auto vars:     Size  Location     Type
 12942 ;;		None
 12943 ;; Return value:  Size  Location     Type
 12944 ;;		None               void
 12945 ;; Registers used:
 12946 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12947 ;; Tracked objects:
 12948 ;;		On entry : 0/0
 12949 ;;		On exit  : 0/0
 12950 ;;		Unchanged: 0/0
 12951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 12952 ;;      Params:         0       0       0       0       0
 12953 ;;      Locals:         0       0       0       0       0
 12954 ;;      Temps:          0       0       0       0       0
 12955 ;;      Totals:         0       0       0       0       0
 12956 ;;Total ram usage:        0 bytes
 12957 ;; Hardware stack levels used:    1
 12958 ;; Hardware stack levels required when called:    2
 12959 ;; This function calls:
 12960 ;;		i2_in_low_int
 12961 ;;		i2_in_high_int
 12962 ;;		i2_check_msg
 12963 ;;		_enter_sleep_mode
 12964 ;; This function is called by:
 12965 ;;		_InterruptHandlerHigh
 12966 ;; This function uses a non-reentrant model
 12967 ;;
 12968                           psect	text42,class=CODE,space=0,reloc=2
 12969                           global __ptext42
 12970  001510                     __ptext42:
 12971                           psect	text42
 12972                           	file	"../src/messages.c"
 12973                           	line	228
 12974                           	global	__size_of_SleepIfOkay
 12975  0000                     	__size_of_SleepIfOkay	equ	__end_of_SleepIfOkay-_SleepIfOkay
 12976                           	
 12977  001510                     _SleepIfOkay:
 12978                           	opt	stack 18
 12979                           	line	230
 12980                           	
 12981  001510                     i2l18273:
 12982                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
 12983  001510  6645               	tstfsz	((c:_MQ_Main_Willing_to_block)),c
 12984  001512  D001               	goto	i2u133_41
 12985  001514  D001               	goto	i2u133_40
 12986  001516                     i2u133_41:
 12987  001516  D002               	goto	i2l18277
 12988  001518                     i2u133_40:
 12989  001518  D035               	goto	i2l5527
 12990                           	line	231
 12991                           	
 12992  00151A                     i2l18275:
 12993                           ;messages.c: 231: return;
 12994  00151A  D034               	goto	i2l5527
 12995                           	line	232
 12996                           	
 12997  00151C                     i2l5526:
 12998                           	line	235
 12999                           	
 13000  00151C                     i2l18277:
 13001                           ;messages.c: 232: }
 13002                           ;messages.c: 235: if (in_low_int()) {
 13003  00151C  EC46  F00C         	call	i2_in_low_int	;wreg free
 13004  001520  5037               	movf	(1+?i2_in_low_int),c,w
 13005  001522  1036               	iorwf (0+?i2_in_low_int),c,w
 13006                           
 13007  001524  B4D8               	btfsc	status,2
 13008  001526  D001               	goto	i2u134_41
 13009  001528  D001               	goto	i2u134_40
 13010  00152A                     i2u134_41:
 13011  00152A  D002               	goto	i2l18281
 13012  00152C                     i2u134_40:
 13013  00152C  D02B               	goto	i2l5527
 13014                           	line	236
 13015                           	
 13016  00152E                     i2l18279:
 13017                           ;messages.c: 236: return;
 13018  00152E  D02A               	goto	i2l5527
 13019                           	line	237
 13020                           	
 13021  001530                     i2l5528:
 13022                           	line	240
 13023                           	
 13024  001530                     i2l18281:
 13025                           ;messages.c: 237: }
 13026                           ;messages.c: 240: if (!in_high_int()) {
 13027  001530  EC35  F00E         	call	i2_in_high_int	;wreg free
 13028  001534  5035               	movf	(1+?i2_in_high_int),c,w
 13029  001536  1034               	iorwf (0+?i2_in_high_int),c,w
 13030                           
 13031  001538  A4D8               	btfss	status,2
 13032  00153A  D001               	goto	i2u135_41
 13033  00153C  D001               	goto	i2u135_40
 13034  00153E                     i2u135_41:
 13035  00153E  D002               	goto	i2l18285
 13036  001540                     i2u135_40:
 13037  001540  D021               	goto	i2l5527
 13038                           	line	241
 13039                           	
 13040  001542                     i2l18283:
 13041                           ;messages.c: 241: return;
 13042  001542  D020               	goto	i2l5527
 13043                           	line	242
 13044                           	
 13045  001544                     i2l5529:
 13046                           	line	247
 13047                           	
 13048  001544                     i2l18285:
 13049                           ;messages.c: 242: }
 13050                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
 13051  001544  0101               	movlb	1	; () banked
 13052  001546  0E01               	movlw	high(_ToMainHigh_MQ)
 13053  001548  6E35               	movwf	((c:?i2_check_msg+1)),c
 13054  00154A  0101               	movlb	1	; () banked
 13055  00154C  0E36               	movlw	low(_ToMainHigh_MQ)
 13056  00154E  6E34               	movwf	((c:?i2_check_msg)),c
 13057  001550  ECB4  F00D         	call	i2_check_msg	;wreg free
 13058  001554  0900               	iorlw	0
 13059  001556  B4D8               	btfsc	status,2
 13060  001558  D001               	goto	i2u136_41
 13061  00155A  D001               	goto	i2u136_40
 13062  00155C                     i2u136_41:
 13063  00155C  D002               	goto	i2l18289
 13064  00155E                     i2u136_40:
 13065  00155E  D012               	goto	i2l5527
 13066                           	line	248
 13067                           	
 13068  001560                     i2l18287:
 13069                           ;messages.c: 248: return;
 13070  001560  D011               	goto	i2l5527
 13071                           	line	249
 13072                           	
 13073  001562                     i2l5530:
 13074                           	line	250
 13075                           	
 13076  001562                     i2l18289:
 13077                           ;messages.c: 249: }
 13078                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
 13079  001562  0101               	movlb	1	; () banked
 13080  001564  0E01               	movlw	high(_ToMainLow_MQ)
 13081  001566  6E35               	movwf	((c:?i2_check_msg+1)),c
 13082  001568  0101               	movlb	1	; () banked
 13083  00156A  0E6C               	movlw	low(_ToMainLow_MQ)
 13084  00156C  6E34               	movwf	((c:?i2_check_msg)),c
 13085  00156E  ECB4  F00D         	call	i2_check_msg	;wreg free
 13086  001572  0900               	iorlw	0
 13087  001574  B4D8               	btfsc	status,2
 13088  001576  D001               	goto	i2u137_41
 13089  001578  D001               	goto	i2u137_40
 13090  00157A                     i2u137_41:
 13091  00157A  D002               	goto	i2l18293
 13092  00157C                     i2u137_40:
 13093  00157C  D003               	goto	i2l5527
 13094                           	line	251
 13095                           	
 13096  00157E                     i2l18291:
 13097                           ;messages.c: 251: return;
 13098  00157E  D002               	goto	i2l5527
 13099                           	line	252
 13100                           	
 13101  001580                     i2l5531:
 13102                           	line	253
 13103                           	
 13104  001580                     i2l18293:
 13105                           ;messages.c: 252: }
 13106                           ;messages.c: 253: enter_sleep_mode();
 13107  001580  EC4B  F00E         	call	_enter_sleep_mode	;wreg free
 13108                           	line	254
 13109                           	
 13110  001584                     i2l5527:
 13111  001584  0012               	return
 13112                           	opt stack 0
 13113                           GLOBAL	__end_of_SleepIfOkay
 13114  001586                     	__end_of_SleepIfOkay:
 13115                           	signat	_SleepIfOkay,88
 13116                           	global	_ToMainHigh_sendmsg
 13117                           
 13118 ;; *************** function _ToMainHigh_sendmsg *****************
 13119 ;; Defined at:
 13120 ;;		line 126 in file "../src/messages.c"
 13121 ;; Parameters:    Size  Location     Type
 13122 ;;  length          1   11[BANK0 ] unsigned char 
 13123 ;;  msgtype         1   12[BANK0 ] unsigned char 
 13124 ;;  data            2   13[BANK0 ] PTR void 
 13125 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@error_buf(3), 
 13126 ;; Auto vars:     Size  Location     Type
 13127 ;;		None
 13128 ;; Return value:  Size  Location     Type
 13129 ;;                  1    wreg      char 
 13130 ;; Registers used:
 13131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13132 ;; Tracked objects:
 13133 ;;		On entry : 0/0
 13134 ;;		On exit  : 0/0
 13135 ;;		Unchanged: 0/0
 13136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13137 ;;      Params:         0       4       0       0       0
 13138 ;;      Locals:         0       0       0       0       0
 13139 ;;      Temps:          0       0       0       0       0
 13140 ;;      Totals:         0       4       0       0       0
 13141 ;;Total ram usage:        4 bytes
 13142 ;; Hardware stack levels used:    1
 13143 ;; Hardware stack levels required when called:    2
 13144 ;; This function calls:
 13145 ;;		i2_send_msg
 13146 ;; This function is called by:
 13147 ;;		_i2c_int_handler
 13148 ;;		_timer0_int_handler
 13149 ;; This function uses a non-reentrant model
 13150 ;;
 13151                           psect	text43,class=CODE,space=0,reloc=2
 13152                           global __ptext43
 13153  001B16                     __ptext43:
 13154                           psect	text43
 13155                           	file	"../src/messages.c"
 13156                           	line	126
 13157                           	global	__size_of_ToMainHigh_sendmsg
 13158  0000                     	__size_of_ToMainHigh_sendmsg	equ	__end_of_ToMainHigh_sendmsg-_ToMainHigh_sendmsg
 13159                           	
 13160  001B16                     _ToMainHigh_sendmsg:
 13161                           	opt	stack 17
 13162                           	line	132
 13163                           	
 13164  001B16                     i2l19185:
 13165                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
 13166                           ;	Return value of _ToMainHigh_sendmsg is never used
 13167  001B16  0101               	movlb	1	; () banked
 13168  001B18  0E01               	movlw	high(_ToMainHigh_MQ)
 13169  001B1A  0100               	movlb	0	; () banked
 13170  001B1C  0100               	movlb	0	; () banked
 13171  001B1E  6F81               	movwf	((?i2_send_msg+1))&0ffh
 13172  001B20  0101               	movlb	1	; () banked
 13173  001B22  0E36               	movlw	low(_ToMainHigh_MQ)
 13174  001B24  0100               	movlb	0	; () banked
 13175  001B26  6F80               	movwf	((?i2_send_msg))&0ffh
 13176  001B28  C08B  F082         	movff	(ToMainHigh_sendmsg@length),0+(?i2_send_msg+02h)
 13177  001B2C  C08C  F083         	movff	(ToMainHigh_sendmsg@msgtype),0+(?i2_send_msg+03h)
 13178  001B30  C08D  F084         	movff	(ToMainHigh_sendmsg@data),0+(?i2_send_msg+04h)
 13179  001B34  C08E  F085         	movff	(ToMainHigh_sendmsg@data+1),1+(?i2_send_msg+04h)
 13180  001B38  0100               	movlb	0	; () banked
 13181  001B3A  ECBE  F006         	call	i2_send_msg	;wreg free
 13182  001B3E  D000               	goto	i2l5493
 13183                           	
 13184  001B40                     i2l19187:
 13185                           	line	133
 13186                           	
 13187  001B40                     i2l5493:
 13188  001B40  0012               	return
 13189                           	opt stack 0
 13190                           GLOBAL	__end_of_ToMainHigh_sendmsg
 13191  001B42                     	__end_of_ToMainHigh_sendmsg:
 13192                           	signat	_ToMainHigh_sendmsg,12409
 13193                           	global	_FromMainLow_recvmsg
 13194                           
 13195 ;; *************** function _FromMainLow_recvmsg *****************
 13196 ;; Defined at:
 13197 ;;		line 159 in file "../src/messages.c"
 13198 ;; Parameters:    Size  Location     Type
 13199 ;;  maxlength       1   12[BANK0 ] unsigned char 
 13200 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
 13201 ;;		 -> i2c_int_handler@msgtype(1), 
 13202 ;;  data            2   15[BANK0 ] PTR void 
 13203 ;;		 -> i2c_int_handler@data(10), 
 13204 ;; Auto vars:     Size  Location     Type
 13205 ;;		None
 13206 ;; Return value:  Size  Location     Type
 13207 ;;                  1    wreg      char 
 13208 ;; Registers used:
 13209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13210 ;; Tracked objects:
 13211 ;;		On entry : 0/0
 13212 ;;		On exit  : 0/0
 13213 ;;		Unchanged: 0/0
 13214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13215 ;;      Params:         0       5       0       0       0
 13216 ;;      Locals:         0       0       0       0       0
 13217 ;;      Temps:          0       0       0       0       0
 13218 ;;      Totals:         0       5       0       0       0
 13219 ;;Total ram usage:        5 bytes
 13220 ;; Hardware stack levels used:    1
 13221 ;; Hardware stack levels required when called:    2
 13222 ;; This function calls:
 13223 ;;		i2_recv_msg
 13224 ;; This function is called by:
 13225 ;;		_i2c_int_handler
 13226 ;; This function uses a non-reentrant model
 13227 ;;
 13228                           psect	text44,class=CODE,space=0,reloc=2
 13229                           global __ptext44
 13230  001A5C                     __ptext44:
 13231                           psect	text44
 13232                           	file	"../src/messages.c"
 13233                           	line	159
 13234                           	global	__size_of_FromMainLow_recvmsg
 13235  0000                     	__size_of_FromMainLow_recvmsg	equ	__end_of_FromMainLow_recvmsg-_FromMainLow_recvmsg
 13236                           	
 13237  001A5C                     _FromMainLow_recvmsg:
 13238                           	opt	stack 17
 13239                           	line	165
 13240                           	
 13241  001A5C                     i2l19189:
 13242                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
 13243  001A5C  0101               	movlb	1	; () banked
 13244  001A5E  0E01               	movlw	high(_FromMainLow_MQ)
 13245  001A60  0100               	movlb	0	; () banked
 13246  001A62  0100               	movlb	0	; () banked
 13247  001A64  6F81               	movwf	((?i2_recv_msg+1))&0ffh
 13248  001A66  0101               	movlb	1	; () banked
 13249  001A68  0E00               	movlw	low(_FromMainLow_MQ)
 13250  001A6A  0100               	movlb	0	; () banked
 13251  001A6C  6F80               	movwf	((?i2_recv_msg))&0ffh
 13252  001A6E  C08C  F082         	movff	(FromMainLow_recvmsg@maxlength),0+(?i2_recv_msg+02h)
 13253  001A72  C08D  F083         	movff	(FromMainLow_recvmsg@msgtype),0+(?i2_recv_msg+03h)
 13254  001A76  C08E  F084         	movff	(FromMainLow_recvmsg@msgtype+1),1+(?i2_recv_msg+03h)
 13255  001A7A  C08F  F085         	movff	(FromMainLow_recvmsg@data),0+(?i2_recv_msg+05h)
 13256  001A7E  C090  F086         	movff	(FromMainLow_recvmsg@data+1),1+(?i2_recv_msg+05h)
 13257  001A82  0100               	movlb	0	; () banked
 13258  001A84  ECA2  F005         	call	i2_recv_msg	;wreg free
 13259  001A88  D000               	goto	i2l5504
 13260                           	
 13261  001A8A                     i2l19191:
 13262                           	line	166
 13263                           	
 13264  001A8A                     i2l5504:
 13265  001A8A  0012               	return
 13266                           	opt stack 0
 13267                           GLOBAL	__end_of_FromMainLow_recvmsg
 13268  001A8C                     	__end_of_FromMainLow_recvmsg:
 13269                           	signat	_FromMainLow_recvmsg,12409
 13270                           	global	_FromMainHigh_recvmsg
 13271                           
 13272 ;; *************** function _FromMainHigh_recvmsg *****************
 13273 ;; Defined at:
 13274 ;;		line 183 in file "../src/messages.c"
 13275 ;; Parameters:    Size  Location     Type
 13276 ;;  maxlength       1   12[BANK0 ] unsigned char 
 13277 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
 13278 ;;		 -> RAM(1023), 
 13279 ;;  data            2   15[BANK0 ] PTR void 
 13280 ;;		 -> timer0_int_handler@val(2), 
 13281 ;; Auto vars:     Size  Location     Type
 13282 ;;		None
 13283 ;; Return value:  Size  Location     Type
 13284 ;;                  1    wreg      char 
 13285 ;; Registers used:
 13286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13287 ;; Tracked objects:
 13288 ;;		On entry : 0/0
 13289 ;;		On exit  : 0/0
 13290 ;;		Unchanged: 0/0
 13291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13292 ;;      Params:         0       5       0       0       0
 13293 ;;      Locals:         0       0       0       0       0
 13294 ;;      Temps:          0       0       0       0       0
 13295 ;;      Totals:         0       5       0       0       0
 13296 ;;Total ram usage:        5 bytes
 13297 ;; Hardware stack levels used:    1
 13298 ;; Hardware stack levels required when called:    2
 13299 ;; This function calls:
 13300 ;;		i2_recv_msg
 13301 ;; This function is called by:
 13302 ;;		_timer0_int_handler
 13303 ;; This function uses a non-reentrant model
 13304 ;;
 13305                           psect	text45,class=CODE,space=0,reloc=2
 13306                           global __ptext45
 13307  001A8C                     __ptext45:
 13308                           psect	text45
 13309                           	file	"../src/messages.c"
 13310                           	line	183
 13311                           	global	__size_of_FromMainHigh_recvmsg
 13312  0000                     	__size_of_FromMainHigh_recvmsg	equ	__end_of_FromMainHigh_recvmsg-_FromMainHigh_recvmsg
 13313                           	
 13314  001A8C                     _FromMainHigh_recvmsg:
 13315                           	opt	stack 17
 13316                           	line	189
 13317                           	
 13318  001A8C                     i2l19197:
 13319                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
 13320  001A8C  0102               	movlb	2	; () banked
 13321  001A8E  0E02               	movlw	high(_FromMainHigh_MQ)
 13322  001A90  0100               	movlb	0	; () banked
 13323  001A92  0100               	movlb	0	; () banked
 13324  001A94  6F81               	movwf	((?i2_recv_msg+1))&0ffh
 13325  001A96  0102               	movlb	2	; () banked
 13326  001A98  0E00               	movlw	low(_FromMainHigh_MQ)
 13327  001A9A  0100               	movlb	0	; () banked
 13328  001A9C  6F80               	movwf	((?i2_recv_msg))&0ffh
 13329  001A9E  C08C  F082         	movff	(FromMainHigh_recvmsg@maxlength),0+(?i2_recv_msg+02h)
 13330  001AA2  C08D  F083         	movff	(FromMainHigh_recvmsg@msgtype),0+(?i2_recv_msg+03h)
 13331  001AA6  C08E  F084         	movff	(FromMainHigh_recvmsg@msgtype+1),1+(?i2_recv_msg+03h)
 13332  001AAA  C08F  F085         	movff	(FromMainHigh_recvmsg@data),0+(?i2_recv_msg+05h)
 13333  001AAE  C090  F086         	movff	(FromMainHigh_recvmsg@data+1),1+(?i2_recv_msg+05h)
 13334  001AB2  0100               	movlb	0	; () banked
 13335  001AB4  ECA2  F005         	call	i2_recv_msg	;wreg free
 13336  001AB8  D000               	goto	i2l5512
 13337                           	
 13338  001ABA                     i2l19199:
 13339                           	line	190
 13340                           	
 13341  001ABA                     i2l5512:
 13342  001ABA  0012               	return
 13343                           	opt stack 0
 13344                           GLOBAL	__end_of_FromMainHigh_recvmsg
 13345  001ABC                     	__end_of_FromMainHigh_recvmsg:
 13346                           	signat	_FromMainHigh_recvmsg,12409
 13347                           	global	_enter_sleep_mode
 13348                           
 13349 ;; *************** function _enter_sleep_mode *****************
 13350 ;; Defined at:
 13351 ;;		line 202 in file "../src/messages.c"
 13352 ;; Parameters:    Size  Location     Type
 13353 ;;		None
 13354 ;; Auto vars:     Size  Location     Type
 13355 ;;		None
 13356 ;; Return value:  Size  Location     Type
 13357 ;;		None               void
 13358 ;; Registers used:
 13359 ;;		None
 13360 ;; Tracked objects:
 13361 ;;		On entry : 0/0
 13362 ;;		On exit  : 0/0
 13363 ;;		Unchanged: 0/0
 13364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13365 ;;      Params:         0       0       0       0       0
 13366 ;;      Locals:         0       0       0       0       0
 13367 ;;      Temps:          0       0       0       0       0
 13368 ;;      Totals:         0       0       0       0       0
 13369 ;;Total ram usage:        0 bytes
 13370 ;; Hardware stack levels used:    1
 13371 ;; This function calls:
 13372 ;;		Nothing
 13373 ;; This function is called by:
 13374 ;;		_SleepIfOkay
 13375 ;; This function uses a non-reentrant model
 13376 ;;
 13377                           psect	text46,class=CODE,space=0,reloc=2
 13378                           global __ptext46
 13379  001C96                     __ptext46:
 13380                           psect	text46
 13381                           	file	"../src/messages.c"
 13382                           	line	202
 13383                           	global	__size_of_enter_sleep_mode
 13384  0000                     	__size_of_enter_sleep_mode	equ	__end_of_enter_sleep_mode-_enter_sleep_mode
 13385                           	
 13386  001C96                     _enter_sleep_mode:
 13387                           	opt	stack 19
 13388                           	line	204
 13389                           	
 13390  001C96                     i2l18599:
 13391                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
 13392  001C96  8ED3               	bsf	((c:4051)),c,7	;volatile
 13393                           	line	213
 13394                           # 213 "../src/messages.c"
 13395  001C98  0003               SLEEP ;# 
 13396                           	line	215
 13397                           # 215 "../src/messages.c"
 13398                           # 214 ;# 
 13399                           psect	text46
 13400                           	line	218
 13401                           	
 13402  001C9A                     i2l5520:
 13403  001C9A  0012               	return
 13404                           	opt stack 0
 13405                           GLOBAL	__end_of_enter_sleep_mode
 13406  001C9C                     	__end_of_enter_sleep_mode:
 13407                           	signat	_enter_sleep_mode,88
 13408                           	global	_start_i2c_slave_reply
 13409                           
 13410 ;; *************** function _start_i2c_slave_reply *****************
 13411 ;; Defined at:
 13412 ;;		line 55 in file "../src/my_i2c.c"
 13413 ;; Parameters:    Size  Location     Type
 13414 ;;  length          1   51[COMRAM] unsigned char 
 13415 ;;  msg             2   52[COMRAM] PTR unsigned char 
 13416 ;;		 -> i2c_int_handler@empty(4), i2c_int_handler@data(10), 
 13417 ;; Auto vars:     Size  Location     Type
 13418 ;;		None
 13419 ;; Return value:  Size  Location     Type
 13420 ;;		None               void
 13421 ;; Registers used:
 13422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13423 ;; Tracked objects:
 13424 ;;		On entry : 0/0
 13425 ;;		On exit  : 0/0
 13426 ;;		Unchanged: 0/0
 13427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13428 ;;      Params:         3       0       0       0       0
 13429 ;;      Locals:         0       0       0       0       0
 13430 ;;      Temps:          2       0       0       0       0
 13431 ;;      Totals:         5       0       0       0       0
 13432 ;;Total ram usage:        5 bytes
 13433 ;; Hardware stack levels used:    1
 13434 ;; This function calls:
 13435 ;;		Nothing
 13436 ;; This function is called by:
 13437 ;;		_i2c_int_handler
 13438 ;; This function uses a non-reentrant model
 13439 ;;
 13440                           psect	text47,class=CODE,space=0,reloc=2
 13441                           global __ptext47
 13442  000F4A                     __ptext47:
 13443                           psect	text47
 13444                           	file	"../src/my_i2c.c"
 13445                           	line	55
 13446                           	global	__size_of_start_i2c_slave_reply
 13447  0000                     	__size_of_start_i2c_slave_reply	equ	__end_of_start_i2c_slave_reply-_start_i2c_slave_rep
                                 ly
 13448                           	
 13449  000F4A                     _start_i2c_slave_reply:
 13450                           	opt	stack 19
 13451                           	line	57
 13452                           	
 13453  000F4A                     i2l18609:
 13454                           ;my_i2c.c: 57: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
                                 ++) {
 13455  000F4A  EE20 F019          	lfsr	2,019h
 13456  000F4E  5048               	movf	((c:_ic_ptr)),c,w
 13457  000F50  26D9               	addwf	fsr2l
 13458  000F52  5049               	movf	((c:_ic_ptr+1)),c,w
 13459  000F54  22DA               	addwfc	fsr2h
 13460  000F56  0E00               	movlw	low(0)
 13461  000F58  6EDF               	movwf	indf2
 13462  000F5A  D02E               	goto	i2l18615
 13463                           	
 13464  000F5C                     i2l7345:
 13465                           	line	58
 13466                           	
 13467  000F5C                     i2l18611:
 13468                           ;my_i2c.c: 58: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
 13469  000F5C  EE20 F019          	lfsr	2,019h
 13470  000F60  5048               	movf	((c:_ic_ptr)),c,w
 13471  000F62  26D9               	addwf	fsr2l
 13472  000F64  5049               	movf	((c:_ic_ptr+1)),c,w
 13473  000F66  22DA               	addwfc	fsr2h
 13474  000F68  50DF               	movf	indf2,w
 13475  000F6A  6E37               	movwf	(??_start_i2c_slave_reply+0+0)&0ffh,c
 13476  000F6C  5037               	movf	((??_start_i2c_slave_reply+0+0)),c,w
 13477  000F6E  0D01               	mullw	01h
 13478  000F70  50F3               	movf	(prodl),c,w
 13479  000F72  2435               	addwf	((c:start_i2c_slave_reply@msg)),c,w
 13480  000F74  6ED9               	movwf	c:fsr2l
 13481  000F76  50F4               	movf	(prodh),c,w
 13482  000F78  2036               	addwfc	((c:start_i2c_slave_reply@msg+1)),c,w
 13483  000F7A  6EDA               	movwf	1+c:fsr2l
 13484  000F7C  EE10 F019          	lfsr	1,019h
 13485  000F80  5048               	movf	((c:_ic_ptr)),c,w
 13486  000F82  26E1               	addwf	fsr1l
 13487  000F84  5049               	movf	((c:_ic_ptr+1)),c,w
 13488  000F86  22E2               	addwfc	fsr1h
 13489  000F88  50E7               	movf	indf1,w
 13490  000F8A  6E38               	movwf	(??_start_i2c_slave_reply+1+0)&0ffh,c
 13491  000F8C  5038               	movf	((??_start_i2c_slave_reply+1+0)),c,w
 13492  000F8E  0D01               	mullw	01h
 13493  000F90  0E0F               	movlw	0Fh
 13494  000F92  26F3               	addwf	(prodl),c
 13495  000F94  0E00               	movlw	0
 13496  000F96  22F4               	addwfc	(prodh),c
 13497  000F98  50F3               	movf	(prodl),c,w
 13498  000F9A  2448               	addwf	((c:_ic_ptr)),c,w
 13499  000F9C  6EE1               	movwf	c:fsr1l
 13500  000F9E  50F4               	movf	(prodh),c,w
 13501  000FA0  2049               	addwfc	((c:_ic_ptr+1)),c,w
 13502  000FA2  6EE2               	movwf	1+c:fsr1l
 13503  000FA4  CFDF FFE7          	movff	indf2,indf1
 13504                           	line	57
 13505                           	
 13506  000FA8                     i2l18613:
 13507  000FA8  EE20 F019          	lfsr	2,019h
 13508  000FAC  5048               	movf	((c:_ic_ptr)),c,w
 13509  000FAE  26D9               	addwf	fsr2l
 13510  000FB0  5049               	movf	((c:_ic_ptr+1)),c,w
 13511  000FB2  22DA               	addwfc	fsr2h
 13512  000FB4  2ADF               	incf	indf2
 13513                           
 13514  000FB6  D000               	goto	i2l18615
 13515                           	
 13516  000FB8                     i2l7344:
 13517                           	
 13518  000FB8                     i2l18615:
 13519  000FB8  EE20 F019          	lfsr	2,019h
 13520  000FBC  5048               	movf	((c:_ic_ptr)),c,w
 13521  000FBE  26D9               	addwf	fsr2l
 13522  000FC0  5049               	movf	((c:_ic_ptr+1)),c,w
 13523  000FC2  22DA               	addwfc	fsr2h
 13524  000FC4  50DF               	movf	indf2,w
 13525  000FC6  6E37               	movwf	(??_start_i2c_slave_reply+0+0)&0ffh,c
 13526  000FC8  5034               	movf	((c:start_i2c_slave_reply@length)),c,w
 13527  000FCA  5C37               	subwf	((??_start_i2c_slave_reply+0+0)),c,w
 13528  000FCC  A0D8               	btfss	status,0
 13529  000FCE  D001               	goto	i2u164_41
 13530  000FD0  D001               	goto	i2u164_40
 13531  000FD2                     i2u164_41:
 13532  000FD2  D7C4               	goto	i2l18611
 13533  000FD4                     i2u164_40:
 13534  000FD4  D000               	goto	i2l18617
 13535                           	
 13536  000FD6                     i2l7346:
 13537                           	line	60
 13538                           	
 13539  000FD6                     i2l18617:
 13540                           ;my_i2c.c: 59: }
 13541                           ;my_i2c.c: 60: ic_ptr->outbuflen = length;
 13542  000FD6  EE20 F019          	lfsr	2,019h
 13543  000FDA  5048               	movf	((c:_ic_ptr)),c,w
 13544  000FDC  26D9               	addwf	fsr2l
 13545  000FDE  5049               	movf	((c:_ic_ptr+1)),c,w
 13546  000FE0  22DA               	addwfc	fsr2h
 13547  000FE2  C034  FFDF         	movff	(c:start_i2c_slave_reply@length),indf2
 13548                           
 13549                           	line	61
 13550                           ;my_i2c.c: 61: ic_ptr->outbufind = 1;
 13551  000FE6  EE20 F01A          	lfsr	2,01Ah
 13552  000FEA  5048               	movf	((c:_ic_ptr)),c,w
 13553  000FEC  26D9               	addwf	fsr2l
 13554  000FEE  5049               	movf	((c:_ic_ptr+1)),c,w
 13555  000FF0  22DA               	addwfc	fsr2h
 13556  000FF2  0E01               	movlw	low(01h)
 13557  000FF4  6EDF               	movwf	indf2
 13558                           	line	64
 13559                           ;my_i2c.c: 64: SSPBUF = ic_ptr->outbuffer[0];
 13560  000FF6  EE20 F00F          	lfsr	2,0Fh
 13561  000FFA  5048               	movf	((c:_ic_ptr)),c,w
 13562  000FFC  26D9               	addwf	fsr2l
 13563  000FFE  5049               	movf	((c:_ic_ptr+1)),c,w
 13564  001000  22DA               	addwfc	fsr2h
 13565  001002  50DF               	movf	indf2,w
 13566  001004  6EC9               	movwf	((c:4041)),c	;volatile
 13567                           	line	67
 13568                           	
 13569  001006                     i2l18619:
 13570                           ;my_i2c.c: 67: SSPCON1bits.CKP = 1;
 13571  001006  88C6               	bsf	((c:4038)),c,4	;volatile
 13572                           	line	69
 13573                           	
 13574  001008                     i2l7347:
 13575  001008  0012               	return
 13576                           	opt stack 0
 13577                           GLOBAL	__end_of_start_i2c_slave_reply
 13578  00100A                     	__end_of_start_i2c_slave_reply:
 13579                           	signat	_start_i2c_slave_reply,8312
 13580                           	global	_handle_start
 13581                           
 13582 ;; *************** function _handle_start *****************
 13583 ;; Defined at:
 13584 ;;		line 73 in file "../src/my_i2c.c"
 13585 ;; Parameters:    Size  Location     Type
 13586 ;;  data_read       1   51[COMRAM] unsigned char 
 13587 ;; Auto vars:     Size  Location     Type
 13588 ;;		None
 13589 ;; Return value:  Size  Location     Type
 13590 ;;		None               void
 13591 ;; Registers used:
 13592 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13593 ;; Tracked objects:
 13594 ;;		On entry : 0/0
 13595 ;;		On exit  : 0/0
 13596 ;;		Unchanged: 0/0
 13597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13598 ;;      Params:         1       0       0       0       0
 13599 ;;      Locals:         0       0       0       0       0
 13600 ;;      Temps:          0       0       0       0       0
 13601 ;;      Totals:         1       0       0       0       0
 13602 ;;Total ram usage:        1 bytes
 13603 ;; Hardware stack levels used:    1
 13604 ;; This function calls:
 13605 ;;		Nothing
 13606 ;; This function is called by:
 13607 ;;		_i2c_int_handler
 13608 ;; This function uses a non-reentrant model
 13609 ;;
 13610                           psect	text48,class=CODE,space=0,reloc=2
 13611                           global __ptext48
 13612  0012D6                     __ptext48:
 13613                           psect	text48
 13614                           	file	"../src/my_i2c.c"
 13615                           	line	73
 13616                           	global	__size_of_handle_start
 13617  0000                     	__size_of_handle_start	equ	__end_of_handle_start-_handle_start
 13618                           	
 13619  0012D6                     _handle_start:
 13620                           	opt	stack 19
 13621                           	line	74
 13622                           	
 13623  0012D6                     i2l18621:
 13624                           ;my_i2c.c: 74: ic_ptr->event_count = 1;
 13625  0012D6  EE20 F00B          	lfsr	2,0Bh
 13626  0012DA  5048               	movf	((c:_ic_ptr)),c,w
 13627  0012DC  26D9               	addwf	fsr2l
 13628  0012DE  5049               	movf	((c:_ic_ptr+1)),c,w
 13629  0012E0  22DA               	addwfc	fsr2h
 13630  0012E2  0E01               	movlw	low(01h)
 13631  0012E4  6EDF               	movwf	indf2
 13632                           	line	75
 13633                           ;my_i2c.c: 75: ic_ptr->buflen = 0;
 13634  0012E6  EE20 F00A          	lfsr	2,0Ah
 13635  0012EA  5048               	movf	((c:_ic_ptr)),c,w
 13636  0012EC  26D9               	addwf	fsr2l
 13637  0012EE  5049               	movf	((c:_ic_ptr+1)),c,w
 13638  0012F0  22DA               	addwfc	fsr2h
 13639  0012F2  0E00               	movlw	low(0)
 13640  0012F4  6EDF               	movwf	indf2
 13641                           	line	77
 13642                           	
 13643  0012F6                     i2l18623:
 13644                           ;my_i2c.c: 77: if (data_read) {
 13645  0012F6  5034               	movf	((c:handle_start@data_read)),c,w
 13646  0012F8  B4D8               	btfsc	status,2
 13647  0012FA  D001               	goto	i2u165_41
 13648  0012FC  D001               	goto	i2u165_40
 13649  0012FE                     i2u165_41:
 13650  0012FE  D034               	goto	i2l18633
 13651  001300                     i2u165_40:
 13652                           	line	78
 13653                           	
 13654  001300                     i2l18625:
 13655                           ;my_i2c.c: 78: if (SSPSTATbits.D_A == 1) {
 13656                           	
 13657  001300  AAC7               	btfss	((c:4039)),c,5	;volatile
 13658  001302  D001               	goto	i2u166_41
 13659  001304  D001               	goto	i2u166_40
 13660  001306                     i2u166_41:
 13661  001306  D018               	goto	i2l7351
 13662  001308                     i2u166_40:
 13663                           	line	81
 13664                           	
 13665  001308                     i2l18627:
 13666                           ;my_i2c.c: 81: ic_ptr->status = 0x5;
 13667  001308  EE20 F00C          	lfsr	2,0Ch
 13668  00130C  5048               	movf	((c:_ic_ptr)),c,w
 13669  00130E  26D9               	addwf	fsr2l
 13670  001310  5049               	movf	((c:_ic_ptr+1)),c,w
 13671  001312  22DA               	addwfc	fsr2h
 13672  001314  0E05               	movlw	low(05h)
 13673  001316  6EDF               	movwf	indf2
 13674                           	line	82
 13675                           ;my_i2c.c: 82: ic_ptr->error_count++;
 13676  001318  EE20 F00E          	lfsr	2,0Eh
 13677  00131C  5048               	movf	((c:_ic_ptr)),c,w
 13678  00131E  26D9               	addwf	fsr2l
 13679  001320  5049               	movf	((c:_ic_ptr+1)),c,w
 13680  001322  22DA               	addwfc	fsr2h
 13681  001324  2ADF               	incf	indf2
 13682                           
 13683                           	line	83
 13684                           ;my_i2c.c: 83: ic_ptr->error_code = 0x5;
 13685  001326  EE20 F00D          	lfsr	2,0Dh
 13686  00132A  5048               	movf	((c:_ic_ptr)),c,w
 13687  00132C  26D9               	addwf	fsr2l
 13688  00132E  5049               	movf	((c:_ic_ptr+1)),c,w
 13689  001330  22DA               	addwfc	fsr2h
 13690  001332  0E05               	movlw	low(05h)
 13691  001334  6EDF               	movwf	indf2
 13692                           	line	84
 13693                           ;my_i2c.c: 84: } else {
 13694  001336  D021               	goto	i2l7356
 13695                           	
 13696  001338                     i2l7351:
 13697                           	line	85
 13698                           ;my_i2c.c: 85: if (SSPSTATbits.R_W == 1) {
 13699                           	
 13700  001338  A4C7               	btfss	((c:4039)),c,2	;volatile
 13701  00133A  D001               	goto	i2u167_41
 13702  00133C  D001               	goto	i2u167_40
 13703  00133E                     i2u167_41:
 13704  00133E  D009               	goto	i2l18631
 13705  001340                     i2u167_40:
 13706                           	line	86
 13707                           	
 13708  001340                     i2l18629:
 13709                           ;my_i2c.c: 86: ic_ptr->status = 0x8;
 13710  001340  EE20 F00C          	lfsr	2,0Ch
 13711  001344  5048               	movf	((c:_ic_ptr)),c,w
 13712  001346  26D9               	addwf	fsr2l
 13713  001348  5049               	movf	((c:_ic_ptr+1)),c,w
 13714  00134A  22DA               	addwfc	fsr2h
 13715  00134C  0E08               	movlw	low(08h)
 13716  00134E  6EDF               	movwf	indf2
 13717                           	line	87
 13718                           ;my_i2c.c: 87: } else {
 13719  001350  D014               	goto	i2l7356
 13720                           	
 13721  001352                     i2l7353:
 13722                           	line	88
 13723                           	
 13724  001352                     i2l18631:
 13725                           ;my_i2c.c: 88: ic_ptr->status = 0x7;
 13726  001352  EE20 F00C          	lfsr	2,0Ch
 13727  001356  5048               	movf	((c:_ic_ptr)),c,w
 13728  001358  26D9               	addwf	fsr2l
 13729  00135A  5049               	movf	((c:_ic_ptr+1)),c,w
 13730  00135C  22DA               	addwfc	fsr2h
 13731  00135E  0E07               	movlw	low(07h)
 13732  001360  6EDF               	movwf	indf2
 13733  001362  D00B               	goto	i2l7356
 13734                           	line	89
 13735                           	
 13736  001364                     i2l7354:
 13737  001364  D00A               	goto	i2l7356
 13738                           	line	90
 13739                           	
 13740  001366                     i2l7352:
 13741                           	line	91
 13742                           ;my_i2c.c: 89: }
 13743                           ;my_i2c.c: 90: }
 13744                           ;my_i2c.c: 91: } else {
 13745  001366  D009               	goto	i2l7356
 13746                           	
 13747  001368                     i2l7350:
 13748                           	line	92
 13749                           	
 13750  001368                     i2l18633:
 13751                           ;my_i2c.c: 92: ic_ptr->status = 0x6;
 13752  001368  EE20 F00C          	lfsr	2,0Ch
 13753  00136C  5048               	movf	((c:_ic_ptr)),c,w
 13754  00136E  26D9               	addwf	fsr2l
 13755  001370  5049               	movf	((c:_ic_ptr+1)),c,w
 13756  001372  22DA               	addwfc	fsr2h
 13757  001374  0E06               	movlw	low(06h)
 13758  001376  6EDF               	movwf	indf2
 13759  001378  D000               	goto	i2l7356
 13760                           	line	93
 13761                           	
 13762  00137A                     i2l7355:
 13763                           	line	94
 13764                           	
 13765  00137A                     i2l7356:
 13766  00137A  0012               	return
 13767                           	opt stack 0
 13768                           GLOBAL	__end_of_handle_start
 13769  00137C                     	__end_of_handle_start:
 13770                           	signat	_handle_start,4216
 13771                           	global	_WriteTimer0
 13772                           
 13773 ;; *************** function _WriteTimer0 *****************
 13774 ;; Defined at:
 13775 ;;		line 17 in file "plib/Timers/t0write.c"
 13776 ;; Parameters:    Size  Location     Type
 13777 ;;  timer0          2   51[COMRAM] unsigned int 
 13778 ;; Auto vars:     Size  Location     Type
 13779 ;;  timer           2   53[COMRAM] struct Timers
 13780 ;; Return value:  Size  Location     Type
 13781 ;;		None               void
 13782 ;; Registers used:
 13783 ;;		None
 13784 ;; Tracked objects:
 13785 ;;		On entry : 0/0
 13786 ;;		On exit  : 0/0
 13787 ;;		Unchanged: 0/0
 13788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13789 ;;      Params:         2       0       0       0       0
 13790 ;;      Locals:         2       0       0       0       0
 13791 ;;      Temps:          0       0       0       0       0
 13792 ;;      Totals:         4       0       0       0       0
 13793 ;;Total ram usage:        4 bytes
 13794 ;; Hardware stack levels used:    1
 13795 ;; This function calls:
 13796 ;;		Nothing
 13797 ;; This function is called by:
 13798 ;;		_timer0_int_handler
 13799 ;; This function uses a non-reentrant model
 13800 ;;
 13801                           psect	text49,class=CODE,space=0,reloc=2
 13802                           global __ptext49
 13803  001C58                     __ptext49:
 13804                           psect	text49
 13805                           	file	"plib/Timers/t0write.c"
 13806                           	line	17
 13807                           	global	__size_of_WriteTimer0
 13808  0000                     	__size_of_WriteTimer0	equ	__end_of_WriteTimer0-_WriteTimer0
 13809                           	
 13810  001C58                     _WriteTimer0:
 13811                           	opt	stack 19
 13812                           	line	20
 13813                           	
 13814  001C58                     i2l18667:
 13815  001C58  C034  F036         	movff	(c:WriteTimer0@timer0),(c:WriteTimer0@timer)
 13816  001C5C  C035  F037         	movff	(c:WriteTimer0@timer0+1),(c:WriteTimer0@timer+1)
 13817                           	line	22
 13818  001C60  C037  FFD7         	movff	0+((c:WriteTimer0@timer)+01h),(c:4055)	;volatile
 13819                           	line	23
 13820  001C64  C036  FFD6         	movff	(c:WriteTimer0@timer),(c:4054)	;volatile
 13821                           	line	24
 13822                           	
 13823  001C68                     i2l16436:
 13824  001C68  0012               	return
 13825                           	opt stack 0
 13826                           GLOBAL	__end_of_WriteTimer0
 13827  001C6A                     	__end_of_WriteTimer0:
 13828                           	signat	_WriteTimer0,4216
 13829                           	global	i2_in_low_int
 13830                           
 13831 ;; *************** function i2_in_low_int *****************
 13832 ;; Defined at:
 13833 ;;		line 30 in file "../src/interrupts.c"
 13834 ;; Parameters:    Size  Location     Type
 13835 ;;		None
 13836 ;; Auto vars:     Size  Location     Type
 13837 ;;		None
 13838 ;; Return value:  Size  Location     Type
 13839 ;;                  2   53[COMRAM] int 
 13840 ;; Registers used:
 13841 ;;		wreg, status,2, status,0, cstack
 13842 ;; Tracked objects:
 13843 ;;		On entry : 0/0
 13844 ;;		On exit  : 0/0
 13845 ;;		Unchanged: 0/0
 13846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13847 ;;      Params:         2       0       0       0       0
 13848 ;;      Locals:         0       0       0       0       0
 13849 ;;      Temps:          0       0       0       0       0
 13850 ;;      Totals:         2       0       0       0       0
 13851 ;;Total ram usage:        2 bytes
 13852 ;; Hardware stack levels used:    1
 13853 ;; Hardware stack levels required when called:    1
 13854 ;; This function calls:
 13855 ;;		i2_in_high_int
 13856 ;; This function is called by:
 13857 ;;		_SleepIfOkay
 13858 ;; This function uses a non-reentrant model
 13859 ;;
 13860                           psect	text50,class=CODE,space=0,reloc=2
 13861                           global __ptext50
 13862  00188C                     __ptext50:
 13863                           psect	text50
 13864                           	file	"../src/interrupts.c"
 13865                           	line	30
 13866                           	global	__size_ofi2_in_low_int
 13867  0000                     	__size_ofi2_in_low_int	equ	__end_ofi2_in_low_int-i2_in_low_int
 13868                           	
 13869  00188C                     i2_in_low_int:
 13870                           	opt	stack 18
 13871                           	line	31
 13872                           	
 13873  00188C                     i2l18673:
 13874                           ;interrupts.c: 31: if (INTCONbits.GIEL == 1) {
 13875                           	
 13876  00188C  ACF2               	btfss	((c:4082)),c,6	;volatile
 13877  00188E  D001               	goto	i2u173_41
 13878  001890  D001               	goto	i2u173_40
 13879  001892                     i2u173_41:
 13880  001892  D007               	goto	i2l18681
 13881  001894                     i2u173_40:
 13882                           	line	32
 13883                           	
 13884  001894                     i2l18675:
 13885                           ;interrupts.c: 32: return (0);
 13886  001894  0E00               	movlw	high(0)
 13887  001896  6E37               	movwf	((c:?i2_in_low_int+1)),c
 13888  001898  0E00               	movlw	low(0)
 13889  00189A  6E36               	movwf	((c:?i2_in_low_int)),c
 13890  00189C  D018               	goto	i2l1809
 13891                           	
 13892  00189E                     i2l18677:
 13893  00189E  D017               	goto	i2l1809
 13894                           	line	33
 13895                           	
 13896  0018A0                     i2l18679:
 13897                           ;interrupts.c: 33: } else if (in_high_int()) {
 13898  0018A0  D016               	goto	i2l1809
 13899                           	
 13900  0018A2                     i2l1808:
 13901                           	
 13902  0018A2                     i2l18681:
 13903  0018A2  EC35  F00E         	call	i2_in_high_int	;wreg free
 13904  0018A6  5035               	movf	(1+?i2_in_high_int),c,w
 13905  0018A8  1034               	iorwf (0+?i2_in_high_int),c,w
 13906                           
 13907  0018AA  B4D8               	btfsc	status,2
 13908  0018AC  D001               	goto	i2u174_41
 13909  0018AE  D001               	goto	i2u174_40
 13910  0018B0                     i2u174_41:
 13911  0018B0  D007               	goto	i2l18689
 13912  0018B2                     i2u174_40:
 13913                           	line	34
 13914                           	
 13915  0018B2                     i2l18683:
 13916                           ;interrupts.c: 34: return (0);
 13917  0018B2  0E00               	movlw	high(0)
 13918  0018B4  6E37               	movwf	((c:?i2_in_low_int+1)),c
 13919  0018B6  0E00               	movlw	low(0)
 13920  0018B8  6E36               	movwf	((c:?i2_in_low_int)),c
 13921  0018BA  D009               	goto	i2l1809
 13922                           	
 13923  0018BC                     i2l18685:
 13924  0018BC  D008               	goto	i2l1809
 13925                           	line	35
 13926                           	
 13927  0018BE                     i2l18687:
 13928                           ;interrupts.c: 35: } else {
 13929  0018BE  D007               	goto	i2l1809
 13930                           	
 13931  0018C0                     i2l1811:
 13932                           	line	36
 13933                           	
 13934  0018C0                     i2l18689:
 13935                           ;interrupts.c: 36: return (1);
 13936  0018C0  0E00               	movlw	high(01h)
 13937  0018C2  6E37               	movwf	((c:?i2_in_low_int+1)),c
 13938  0018C4  0E01               	movlw	low(01h)
 13939  0018C6  6E36               	movwf	((c:?i2_in_low_int)),c
 13940  0018C8  D002               	goto	i2l1809
 13941                           	
 13942  0018CA                     i2l18691:
 13943  0018CA  D001               	goto	i2l1809
 13944                           	line	37
 13945                           	
 13946  0018CC                     i2l1812:
 13947  0018CC  D000               	goto	i2l1809
 13948                           	
 13949  0018CE                     i2l1810:
 13950                           	line	38
 13951                           	
 13952  0018CE                     i2l1809:
 13953  0018CE  0012               	return
 13954                           	opt stack 0
 13955                           GLOBAL	__end_ofi2_in_low_int
 13956  0018D0                     	__end_ofi2_in_low_int:
 13957                           	signat	i2_in_low_int,90
 13958                           	global	i2_in_high_int
 13959                           
 13960 ;; *************** function i2_in_high_int *****************
 13961 ;; Defined at:
 13962 ;;		line 22 in file "../src/interrupts.c"
 13963 ;; Parameters:    Size  Location     Type
 13964 ;;		None
 13965 ;; Auto vars:     Size  Location     Type
 13966 ;;		None
 13967 ;; Return value:  Size  Location     Type
 13968 ;;                  2   51[COMRAM] int 
 13969 ;; Registers used:
 13970 ;;		wreg, status,2
 13971 ;; Tracked objects:
 13972 ;;		On entry : 0/0
 13973 ;;		On exit  : 0/0
 13974 ;;		Unchanged: 0/0
 13975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 13976 ;;      Params:         2       0       0       0       0
 13977 ;;      Locals:         0       0       0       0       0
 13978 ;;      Temps:          0       0       0       0       0
 13979 ;;      Totals:         2       0       0       0       0
 13980 ;;Total ram usage:        2 bytes
 13981 ;; Hardware stack levels used:    1
 13982 ;; This function calls:
 13983 ;;		Nothing
 13984 ;; This function is called by:
 13985 ;;		_SleepIfOkay
 13986 ;;		i2_in_low_int
 13987 ;; This function uses a non-reentrant model
 13988 ;;
 13989                           psect	text51,class=CODE,space=0,reloc=2
 13990                           global __ptext51
 13991  001C6A                     __ptext51:
 13992                           psect	text51
 13993                           	file	"../src/interrupts.c"
 13994                           	line	22
 13995                           	global	__size_ofi2_in_high_int
 13996  0000                     	__size_ofi2_in_high_int	equ	__end_ofi2_in_high_int-i2_in_high_int
 13997                           	
 13998  001C6A                     i2_in_high_int:
 13999                           	opt	stack 19
 14000                           	line	23
 14001                           	
 14002  001C6A                     i2l18669:
 14003                           ;interrupts.c: 23: return (!INTCONbits.GIEH);
 14004                           	
 14005  001C6A  0E00               	movlw	0
 14006  001C6C  AEF2               	btfss	((c:4082)),c,7	;volatile
 14007  001C6E  0E01               	movlw	1
 14008  001C70  6E34               	movwf	((c:?i2_in_high_int)),c
 14009  001C72  6A35               	clrf	((c:?i2_in_high_int+1)),c
 14010  001C74  D000               	goto	i2l1802
 14011                           	
 14012  001C76                     i2l18671:
 14013                           	line	24
 14014                           	
 14015  001C76                     i2l1802:
 14016  001C76  0012               	return
 14017                           	opt stack 0
 14018                           GLOBAL	__end_ofi2_in_high_int
 14019  001C78                     	__end_ofi2_in_high_int:
 14020                           	signat	i2_in_high_int,90
 14021                           	global	i2_send_msg
 14022                           
 14023 ;; *************** function i2_send_msg *****************
 14024 ;; Defined at:
 14025 ;;		line 24 in file "../src/messages.c"
 14026 ;; Parameters:    Size  Location     Type
 14027 ;;  send_msg        2    0[BANK0 ] PTR struct __msg_queue
 14028 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 14029 ;;  send_msg        1    2[BANK0 ] unsigned char 
 14030 ;;  send_msg        1    3[BANK0 ] unsigned char 
 14031 ;;  send_msg        2    4[BANK0 ] PTR void 
 14032 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 14033 ;;		 -> i2c_int_handler@error_buf(3), main@msgbuffer(11), main@uc(5), 
 14034 ;; Auto vars:     Size  Location     Type
 14035 ;;  send_msg        2    9[BANK0 ] PTR struct __msg
 14036 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 14037 ;;  send_msg        2    6[BANK0 ] unsigned int 
 14038 ;;  send_msg        1    8[BANK0 ] unsigned char 
 14039 ;; Return value:  Size  Location     Type
 14040 ;;                  1    wreg      char 
 14041 ;; Registers used:
 14042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14043 ;; Tracked objects:
 14044 ;;		On entry : 0/0
 14045 ;;		On exit  : 0/0
 14046 ;;		Unchanged: 0/0
 14047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14048 ;;      Params:         0       6       0       0       0
 14049 ;;      Locals:         0       5       0       0       0
 14050 ;;      Temps:          1       0       0       0       0
 14051 ;;      Totals:         1      11       0       0       0
 14052 ;;Total ram usage:       12 bytes
 14053 ;; Hardware stack levels used:    1
 14054 ;; Hardware stack levels required when called:    1
 14055 ;; This function calls:
 14056 ;;		i2_memcpy
 14057 ;; This function is called by:
 14058 ;;		_ToMainHigh_sendmsg
 14059 ;; This function uses a non-reentrant model
 14060 ;;
 14061                           psect	text52,class=CODE,space=0,reloc=2
 14062                           global __ptext52
 14063  000D7C                     __ptext52:
 14064                           psect	text52
 14065                           	file	"../src/messages.c"
 14066                           	global	__size_ofi2_send_msg
 14067  0000                     	__size_ofi2_send_msg	equ	__end_ofi2_send_msg-i2_send_msg
 14068                           	
 14069  000D7C                     i2_send_msg:
 14070                           	opt	stack 17
 14071                           	line	28
 14072                           	
 14073  000D7C                     i2l19201:
 14074                           ;messages.c: 25: unsigned char slot;
 14075                           ;messages.c: 27: msg *qmsg;
 14076                           ;messages.c: 28: size_t tlength = length;
 14077  000D7C  0100               	movlb	0	; () banked
 14078  000D7E  0100               	movlb	0	; () banked
 14079  000D80  C082  F086         	movff	(i2send_msg@length),(i2send_msg@tlength)
 14080  000D84  0100               	movlb	0	; () banked
 14081  000D86  0100               	movlb	0	; () banked
 14082  000D88  6B87               	clrf	((i2send_msg@tlength+1))&0ffh
 14083                           	line	38
 14084                           	
 14085  000D8A                     i2l19203:; BSR set to: 0
 14086                           
 14087                           ;messages.c: 38: slot = qptr->cur_write_ind;
 14088  000D8A  0100               	movlb	0	; () banked
 14089  000D8C  EE20 F034          	lfsr	2,034h
 14090  000D90  0100               	movlb	0	; () banked
 14091  000D92  5180               	movf	((i2send_msg@qptr))&0ffh,w
 14092  000D94  26D9               	addwf	fsr2l
 14093  000D96  0100               	movlb	0	; () banked
 14094  000D98  5181               	movf	((i2send_msg@qptr+1))&0ffh,w
 14095  000D9A  22DA               	addwfc	fsr2h
 14096  000D9C  50DF               	movf	indf2,w
 14097  000D9E  0100               	movlb	0	; () banked
 14098  000DA0  0100               	movlb	0	; () banked
 14099  000DA2  6F88               	movwf	((i2send_msg@slot))&0ffh
 14100                           	line	39
 14101                           	
 14102  000DA4                     i2l19205:; BSR set to: 0
 14103                           
 14104                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
 14105  000DA4  0100               	movlb	0	; () banked
 14106  000DA6  0100               	movlb	0	; () banked
 14107  000DA8  5188               	movf	((i2send_msg@slot))&0ffh,w
 14108  000DAA  0D0D               	mullw	0Dh
 14109  000DAC  50F3               	movf	(prodl),c,w
 14110  000DAE  0100               	movlb	0	; () banked
 14111  000DB0  0100               	movlb	0	; () banked
 14112  000DB2  2580               	addwf	((i2send_msg@qptr))&0ffh,w
 14113  000DB4  0100               	movlb	0	; () banked
 14114                           	
 14115  000DB6  0100               	movlb	0	; () banked
 14116  000DB8  6F89               	movwf	((i2send_msg@qmsg))&0ffh
 14117  000DBA  50F4               	movf	(prodh),c,w
 14118  000DBC  0100               	movlb	0	; () banked
 14119  000DBE  0100               	movlb	0	; () banked
 14120  000DC0  2181               	addwfc	((i2send_msg@qptr+1))&0ffh,w
 14121  000DC2  0100               	movlb	0	; () banked
 14122  000DC4  6F8A               	movwf	1+((i2send_msg@qmsg))&0ffh
 14123                           	line	41
 14124                           	
 14125  000DC6                     i2l19207:; BSR set to: 0
 14126                           
 14127                           ;messages.c: 41: if (qmsg->full != 0) {
 14128  000DC6  C089  FFD9         	movff	(i2send_msg@qmsg),fsr2l
 14129  000DCA  C08A  FFDA         	movff	(i2send_msg@qmsg+1),fsr2h
 14130  000DCE  50DF               	movf	indf2,w
 14131  000DD0  B4D8               	btfsc	status,2
 14132  000DD2  D001               	goto	i2u224_41
 14133  000DD4  D001               	goto	i2u224_40
 14134  000DD6                     i2u224_41:
 14135  000DD6  D003               	goto	i2l19213
 14136  000DD8                     i2u224_40:
 14137                           	line	42
 14138                           	
 14139  000DD8                     i2l19209:; BSR set to: 0
 14140                           
 14141                           ;messages.c: 42: return (-1);
 14142  000DD8  0EFF               	movlw	(-1)&0ffh
 14143  000DDA  D04C               	goto	i2l5474
 14144                           	
 14145  000DDC                     i2l19211:; BSR set to: 0
 14146                           
 14147  000DDC  D04B               	goto	i2l5474
 14148                           	line	43
 14149                           	
 14150  000DDE                     i2l5473:; BSR set to: 0
 14151                           
 14152                           	line	46
 14153                           	
 14154  000DDE                     i2l19213:; BSR set to: 0
 14155                           
 14156                           ;messages.c: 43: }
 14157                           ;messages.c: 46: qmsg->length = length;
 14158  000DDE  0100               	movlb	0	; () banked
 14159  000DE0  EE20 F001          	lfsr	2,01h
 14160  000DE4  0100               	movlb	0	; () banked
 14161  000DE6  5189               	movf	((i2send_msg@qmsg))&0ffh,w
 14162  000DE8  26D9               	addwf	fsr2l
 14163  000DEA  0100               	movlb	0	; () banked
 14164  000DEC  518A               	movf	((i2send_msg@qmsg+1))&0ffh,w
 14165  000DEE  22DA               	addwfc	fsr2h
 14166  000DF0  0100               	movlb	0	; () banked
 14167  000DF2  C082  FFDF         	movff	(i2send_msg@length),indf2
 14168                           
 14169                           	line	47
 14170                           ;messages.c: 47: qmsg->msgtype = msgtype;
 14171  000DF6  0100               	movlb	0	; () banked
 14172  000DF8  EE20 F002          	lfsr	2,02h
 14173  000DFC  0100               	movlb	0	; () banked
 14174  000DFE  5189               	movf	((i2send_msg@qmsg))&0ffh,w
 14175  000E00  26D9               	addwf	fsr2l
 14176  000E02  0100               	movlb	0	; () banked
 14177  000E04  518A               	movf	((i2send_msg@qmsg+1))&0ffh,w
 14178  000E06  22DA               	addwfc	fsr2h
 14179  000E08  0100               	movlb	0	; () banked
 14180  000E0A  C083  FFDF         	movff	(i2send_msg@msgtype),indf2
 14181                           
 14182                           	line	55
 14183                           	
 14184  000E0E                     i2l19215:; BSR set to: 0
 14185                           
 14186                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
 14187  000E0E  0E03               	movlw	low(03h)
 14188  000E10  0100               	movlb	0	; () banked
 14189  000E12  0100               	movlb	0	; () banked
 14190  000E14  2589               	addwf	((i2send_msg@qmsg))&0ffh,w
 14191                           	
 14192  000E16  6E34               	movwf	((c:?i2_memcpy)),c
 14193  000E18  0E00               	movlw	high(03h)
 14194  000E1A  0100               	movlb	0	; () banked
 14195  000E1C  0100               	movlb	0	; () banked
 14196  000E1E  218A               	addwfc	((i2send_msg@qmsg+1))&0ffh,w
 14197  000E20  6E35               	movwf	1+((c:?i2_memcpy)),c
 14198  000E22  C084  F036         	movff	(i2send_msg@data),0+((c:?i2_memcpy)+02h)
 14199  000E26  C085  F037         	movff	(i2send_msg@data+1),1+((c:?i2_memcpy)+02h)
 14200  000E2A  C086  F038         	movff	(i2send_msg@tlength),0+((c:?i2_memcpy)+04h)
 14201  000E2E  C087  F039         	movff	(i2send_msg@tlength+1),1+((c:?i2_memcpy)+04h)
 14202  000E32  EC22  F00C         	call	i2_memcpy	;wreg free
 14203                           	line	56
 14204                           	
 14205  000E36                     i2l19217:
 14206                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
 14207  000E36  0100               	movlb	0	; () banked
 14208  000E38  EE20 F034          	lfsr	2,034h
 14209  000E3C  0100               	movlb	0	; () banked
 14210  000E3E  5180               	movf	((i2send_msg@qptr))&0ffh,w
 14211  000E40  26D9               	addwf	fsr2l
 14212  000E42  0100               	movlb	0	; () banked
 14213  000E44  5181               	movf	((i2send_msg@qptr+1))&0ffh,w
 14214  000E46  22DA               	addwfc	fsr2h
 14215  000E48  0100               	movlb	0	; () banked
 14216  000E4A  EE10 F034          	lfsr	1,034h
 14217  000E4E  0100               	movlb	0	; () banked
 14218  000E50  5180               	movf	((i2send_msg@qptr))&0ffh,w
 14219  000E52  26E1               	addwf	fsr1l
 14220  000E54  0100               	movlb	0	; () banked
 14221  000E56  5181               	movf	((i2send_msg@qptr+1))&0ffh,w
 14222  000E58  22E2               	addwfc	fsr1h
 14223  000E5A  50E7               	movf	indf1,w
 14224  000E5C  6E3E               	movwf	(??i2_send_msg+0+0)&0ffh,c
 14225  000E5E  283E               	incf	((??i2_send_msg+0+0)),c,w
 14226  000E60  0B03               	andlw	low(03h)
 14227  000E62  6EDF               	movwf	indf2
 14228                           
 14229                           	line	59
 14230                           	
 14231  000E64                     i2l19219:; BSR set to: 0
 14232                           
 14233                           ;messages.c: 59: qmsg->full = 1;
 14234  000E64  C089  FFD9         	movff	(i2send_msg@qmsg),fsr2l
 14235  000E68  C08A  FFDA         	movff	(i2send_msg@qmsg+1),fsr2h
 14236  000E6C  0E01               	movlw	low(01h)
 14237  000E6E  6EDF               	movwf	indf2
 14238                           	line	60
 14239                           	
 14240  000E70                     i2l19221:; BSR set to: 0
 14241                           
 14242                           ;messages.c: 60: return (1);
 14243  000E70  0E01               	movlw	(01h)&0ffh
 14244  000E72  D000               	goto	i2l5474
 14245                           	
 14246  000E74                     i2l19223:; BSR set to: 0
 14247                           
 14248                           	line	61
 14249                           	
 14250  000E74                     i2l5474:; BSR set to: 0
 14251                           
 14252  000E74  0012               	return
 14253                           	opt stack 0
 14254                           GLOBAL	__end_ofi2_send_msg
 14255  000E76                     	__end_ofi2_send_msg:
 14256                           	signat	i2_send_msg,89
 14257                           	global	i2_recv_msg
 14258                           
 14259 ;; *************** function i2_recv_msg *****************
 14260 ;; Defined at:
 14261 ;;		line 63 in file "../src/messages.c"
 14262 ;; Parameters:    Size  Location     Type
 14263 ;;  recv_msg        2    0[BANK0 ] PTR struct __msg_queue
 14264 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 14265 ;;  recv_msg        1    2[BANK0 ] unsigned char 
 14266 ;;  recv_msg        2    3[BANK0 ] PTR unsigned char 
 14267 ;;		 -> RAM(1023), i2c_int_handler@msgtype(1), main@msgtype(1), 
 14268 ;;  recv_msg        2    5[BANK0 ] PTR void 
 14269 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@data(10), main@msgbuffer(11), 
 14270 ;; Auto vars:     Size  Location     Type
 14271 ;;  recv_msg        2   10[BANK0 ] PTR struct __msg
 14272 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 14273 ;;  recv_msg        2    8[BANK0 ] unsigned int 
 14274 ;;  recv_msg        1    7[BANK0 ] unsigned char 
 14275 ;; Return value:  Size  Location     Type
 14276 ;;                  1    wreg      char 
 14277 ;; Registers used:
 14278 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14279 ;; Tracked objects:
 14280 ;;		On entry : 0/0
 14281 ;;		On exit  : 0/0
 14282 ;;		Unchanged: 0/0
 14283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14284 ;;      Params:         0       7       0       0       0
 14285 ;;      Locals:         0       5       0       0       0
 14286 ;;      Temps:          2       0       0       0       0
 14287 ;;      Totals:         2      12       0       0       0
 14288 ;;Total ram usage:       14 bytes
 14289 ;; Hardware stack levels used:    1
 14290 ;; Hardware stack levels required when called:    1
 14291 ;; This function calls:
 14292 ;;		i2_memcpy
 14293 ;; This function is called by:
 14294 ;;		_FromMainLow_recvmsg
 14295 ;;		_FromMainHigh_recvmsg
 14296 ;; This function uses a non-reentrant model
 14297 ;;
 14298                           psect	text53,class=CODE,space=0,reloc=2
 14299                           global __ptext53
 14300  000B44                     __ptext53:
 14301                           psect	text53
 14302                           	file	"../src/messages.c"
 14303                           	line	63
 14304                           	global	__size_ofi2_recv_msg
 14305  0000                     	__size_ofi2_recv_msg	equ	__end_ofi2_recv_msg-i2_recv_msg
 14306                           	
 14307  000B44                     i2_recv_msg:; BSR set to: 0
 14308                           
 14309                           	opt	stack 17
 14310                           	line	72
 14311                           	
 14312  000B44                     i2l19225:
 14313                           ;messages.c: 64: unsigned char slot;
 14314                           ;messages.c: 68: msg *qmsg;
 14315                           ;messages.c: 69: size_t tlength;
 14316                           ;messages.c: 72: slot = qptr->cur_read_ind;
 14317  000B44  0100               	movlb	0	; () banked
 14318  000B46  EE20 F035          	lfsr	2,035h
 14319  000B4A  0100               	movlb	0	; () banked
 14320  000B4C  5180               	movf	((i2recv_msg@qptr))&0ffh,w
 14321  000B4E  26D9               	addwf	fsr2l
 14322  000B50  0100               	movlb	0	; () banked
 14323  000B52  5181               	movf	((i2recv_msg@qptr+1))&0ffh,w
 14324  000B54  22DA               	addwfc	fsr2h
 14325  000B56  50DF               	movf	indf2,w
 14326  000B58  0100               	movlb	0	; () banked
 14327  000B5A  0100               	movlb	0	; () banked
 14328  000B5C  6F87               	movwf	((i2recv_msg@slot))&0ffh
 14329                           	line	73
 14330                           	
 14331  000B5E                     i2l19227:; BSR set to: 0
 14332                           
 14333                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
 14334  000B5E  0100               	movlb	0	; () banked
 14335  000B60  0100               	movlb	0	; () banked
 14336  000B62  5187               	movf	((i2recv_msg@slot))&0ffh,w
 14337  000B64  0D0D               	mullw	0Dh
 14338  000B66  50F3               	movf	(prodl),c,w
 14339  000B68  0100               	movlb	0	; () banked
 14340  000B6A  0100               	movlb	0	; () banked
 14341  000B6C  2580               	addwf	((i2recv_msg@qptr))&0ffh,w
 14342  000B6E  0100               	movlb	0	; () banked
 14343                           	
 14344  000B70  0100               	movlb	0	; () banked
 14345  000B72  6F8A               	movwf	((i2recv_msg@qmsg))&0ffh
 14346  000B74  50F4               	movf	(prodh),c,w
 14347  000B76  0100               	movlb	0	; () banked
 14348  000B78  0100               	movlb	0	; () banked
 14349  000B7A  2181               	addwfc	((i2recv_msg@qptr+1))&0ffh,w
 14350  000B7C  0100               	movlb	0	; () banked
 14351  000B7E  6F8B               	movwf	1+((i2recv_msg@qmsg))&0ffh
 14352                           	line	74
 14353                           	
 14354  000B80                     i2l19229:; BSR set to: 0
 14355                           
 14356                           ;messages.c: 74: if (qmsg->full == 1) {
 14357  000B80  0E01               	movlw	(01h)&0ffh
 14358  000B82  C08A  FFD9         	movff	(i2recv_msg@qmsg),fsr2l
 14359  000B86  C08B  FFDA         	movff	(i2recv_msg@qmsg+1),fsr2h
 14360  000B8A  62DF               	cpfseq	indf2
 14361  000B8C  D001               	goto	i2u225_41
 14362  000B8E  D001               	goto	i2u225_40
 14363  000B90                     i2u225_41:
 14364  000B90  D06E               	goto	i2l19253
 14365  000B92                     i2u225_40:
 14366                           	line	76
 14367                           	
 14368  000B92                     i2l19231:; BSR set to: 0
 14369                           
 14370                           ;messages.c: 76: if (qmsg->length > maxlength) {
 14371  000B92  0100               	movlb	0	; () banked
 14372  000B94  EE20 F001          	lfsr	2,01h
 14373  000B98  0100               	movlb	0	; () banked
 14374  000B9A  518A               	movf	((i2recv_msg@qmsg))&0ffh,w
 14375  000B9C  26D9               	addwf	fsr2l
 14376  000B9E  0100               	movlb	0	; () banked
 14377  000BA0  518B               	movf	((i2recv_msg@qmsg+1))&0ffh,w
 14378  000BA2  22DA               	addwfc	fsr2h
 14379  000BA4  50DF               	movf	indf2,w
 14380  000BA6  0100               	movlb	0	; () banked
 14381  000BA8  0100               	movlb	0	; () banked
 14382  000BAA  6182               	cpfslt	((i2recv_msg@maxlength))&0ffh
 14383  000BAC  D001               	goto	i2u226_41
 14384  000BAE  D001               	goto	i2u226_40
 14385  000BB0                     i2u226_41:
 14386  000BB0  D003               	goto	i2l19237
 14387  000BB2                     i2u226_40:
 14388                           	line	77
 14389                           	
 14390  000BB2                     i2l19233:; BSR set to: 0
 14391                           
 14392                           ;messages.c: 77: return (-3);
 14393  000BB2  0EFD               	movlw	(-3)&0ffh
 14394  000BB4  D05F               	goto	i2l5479
 14395                           	
 14396  000BB6                     i2l19235:; BSR set to: 0
 14397                           
 14398  000BB6  D05E               	goto	i2l5479
 14399                           	line	78
 14400                           	
 14401  000BB8                     i2l5478:; BSR set to: 0
 14402                           
 14403                           	line	80
 14404                           	
 14405  000BB8                     i2l19237:; BSR set to: 0
 14406                           
 14407                           ;messages.c: 78: }
 14408                           ;messages.c: 80: tlength = qmsg->length;
 14409  000BB8  0100               	movlb	0	; () banked
 14410  000BBA  EE20 F001          	lfsr	2,01h
 14411  000BBE  0100               	movlb	0	; () banked
 14412  000BC0  518A               	movf	((i2recv_msg@qmsg))&0ffh,w
 14413  000BC2  26D9               	addwf	fsr2l
 14414  000BC4  0100               	movlb	0	; () banked
 14415  000BC6  518B               	movf	((i2recv_msg@qmsg+1))&0ffh,w
 14416  000BC8  22DA               	addwfc	fsr2h
 14417  000BCA  50DF               	movf	indf2,w
 14418  000BCC  6E3E               	movwf	(??i2_recv_msg+0+0)&0ffh,c
 14419  000BCE  503E               	movf	((??i2_recv_msg+0+0)),c,w
 14420  000BD0  0100               	movlb	0	; () banked
 14421  000BD2  0100               	movlb	0	; () banked
 14422  000BD4  6F88               	movwf	((i2recv_msg@tlength))&0ffh
 14423  000BD6  0100               	movlb	0	; () banked
 14424  000BD8  6B89               	clrf	((i2recv_msg@tlength+1))&0ffh
 14425                           	line	81
 14426                           	
 14427  000BDA                     i2l19239:; BSR set to: 0
 14428                           
 14429                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
 14430  000BDA  C085  F034         	movff	(i2recv_msg@data),(c:?i2_memcpy)
 14431  000BDE  C086  F035         	movff	(i2recv_msg@data+1),(c:?i2_memcpy+1)
 14432  000BE2  0E03               	movlw	03h
 14433  000BE4  0100               	movlb	0	; () banked
 14434  000BE6  0100               	movlb	0	; () banked
 14435  000BE8  258A               	addwf	((i2recv_msg@qmsg))&0ffh,w
 14436  000BEA  6E3E               	movwf	(??i2_recv_msg+0+0)&0ffh,c
 14437  000BEC  0E00               	movlw	0
 14438  000BEE  0100               	movlb	0	; () banked
 14439  000BF0  0100               	movlb	0	; () banked
 14440  000BF2  218B               	addwfc	((i2recv_msg@qmsg+1))&0ffh,w
 14441  000BF4  6E3F               	movwf	(??i2_recv_msg+0+0+1)&0ffh,c
 14442  000BF6  C03E  F036         	movff	??i2_recv_msg+0+0,0+((c:?i2_memcpy)+02h)
 14443  000BFA  C03F  F037         	movff	??i2_recv_msg+0+1,1+((c:?i2_memcpy)+02h)
 14444  000BFE  C088  F038         	movff	(i2recv_msg@tlength),0+((c:?i2_memcpy)+04h)
 14445  000C02  C089  F039         	movff	(i2recv_msg@tlength+1),1+((c:?i2_memcpy)+04h)
 14446  000C06  EC22  F00C         	call	i2_memcpy	;wreg free
 14447                           	line	87
 14448                           	
 14449  000C0A                     i2l19241:
 14450                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
 14451  000C0A  0100               	movlb	0	; () banked
 14452  000C0C  EE20 F035          	lfsr	2,035h
 14453  000C10  0100               	movlb	0	; () banked
 14454  000C12  5180               	movf	((i2recv_msg@qptr))&0ffh,w
 14455  000C14  26D9               	addwf	fsr2l
 14456  000C16  0100               	movlb	0	; () banked
 14457  000C18  5181               	movf	((i2recv_msg@qptr+1))&0ffh,w
 14458  000C1A  22DA               	addwfc	fsr2h
 14459  000C1C  0100               	movlb	0	; () banked
 14460  000C1E  EE10 F035          	lfsr	1,035h
 14461  000C22  0100               	movlb	0	; () banked
 14462  000C24  5180               	movf	((i2recv_msg@qptr))&0ffh,w
 14463  000C26  26E1               	addwf	fsr1l
 14464  000C28  0100               	movlb	0	; () banked
 14465  000C2A  5181               	movf	((i2recv_msg@qptr+1))&0ffh,w
 14466  000C2C  22E2               	addwfc	fsr1h
 14467  000C2E  50E7               	movf	indf1,w
 14468  000C30  6E3E               	movwf	(??i2_recv_msg+0+0)&0ffh,c
 14469  000C32  283E               	incf	((??i2_recv_msg+0+0)),c,w
 14470  000C34  0B03               	andlw	low(03h)
 14471  000C36  6EDF               	movwf	indf2
 14472                           
 14473                           	line	89
 14474                           	
 14475  000C38                     i2l19243:; BSR set to: 0
 14476                           
 14477                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
 14478  000C38  0100               	movlb	0	; () banked
 14479  000C3A  EE20 F002          	lfsr	2,02h
 14480  000C3E  0100               	movlb	0	; () banked
 14481  000C40  518A               	movf	((i2recv_msg@qmsg))&0ffh,w
 14482  000C42  26D9               	addwf	fsr2l
 14483  000C44  0100               	movlb	0	; () banked
 14484  000C46  518B               	movf	((i2recv_msg@qmsg+1))&0ffh,w
 14485  000C48  22DA               	addwfc	fsr2h
 14486  000C4A  C083  FFE1         	movff	(i2recv_msg@msgtype),fsr1l
 14487  000C4E  C084  FFE2         	movff	(i2recv_msg@msgtype+1),fsr1h
 14488  000C52  CFDF FFE7          	movff	indf2,indf1
 14489                           	line	91
 14490                           	
 14491  000C56                     i2l19245:; BSR set to: 0
 14492                           
 14493                           ;messages.c: 91: qmsg->full = 0;
 14494  000C56  C08A  FFD9         	movff	(i2recv_msg@qmsg),fsr2l
 14495  000C5A  C08B  FFDA         	movff	(i2recv_msg@qmsg+1),fsr2h
 14496  000C5E  0E00               	movlw	low(0)
 14497  000C60  6EDF               	movwf	indf2
 14498                           	line	92
 14499                           	
 14500  000C62                     i2l19247:; BSR set to: 0
 14501                           
 14502                           ;messages.c: 92: return (tlength);
 14503  000C62  0100               	movlb	0	; () banked
 14504  000C64  0100               	movlb	0	; () banked
 14505  000C66  5188               	movf	((i2recv_msg@tlength))&0ffh,w
 14506  000C68  D005               	goto	i2l5479
 14507                           	
 14508  000C6A                     i2l19249:; BSR set to: 0
 14509                           
 14510  000C6A  D004               	goto	i2l5479
 14511                           	line	93
 14512                           	
 14513  000C6C                     i2l19251:; BSR set to: 0
 14514                           
 14515                           ;messages.c: 93: } else {
 14516  000C6C  D003               	goto	i2l5479
 14517                           	
 14518  000C6E                     i2l5477:; BSR set to: 0
 14519                           
 14520                           	line	94
 14521                           	
 14522  000C6E                     i2l19253:; BSR set to: 0
 14523                           
 14524                           ;messages.c: 94: return (-4);
 14525  000C6E  0EFC               	movlw	(-4)&0ffh
 14526  000C70  D001               	goto	i2l5479
 14527                           	
 14528  000C72                     i2l19255:; BSR set to: 0
 14529                           
 14530  000C72  D000               	goto	i2l5479
 14531                           	line	95
 14532                           	
 14533  000C74                     i2l5480:; BSR set to: 0
 14534                           
 14535                           	line	96
 14536                           	
 14537  000C74                     i2l5479:; BSR set to: 0
 14538                           
 14539  000C74  0012               	return
 14540                           	opt stack 0
 14541                           GLOBAL	__end_ofi2_recv_msg
 14542  000C76                     	__end_ofi2_recv_msg:
 14543                           	signat	i2_recv_msg,89
 14544                           	global	i2_check_msg
 14545                           
 14546 ;; *************** function i2_check_msg *****************
 14547 ;; Defined at:
 14548 ;;		line 222 in file "../src/messages.c"
 14549 ;; Parameters:    Size  Location     Type
 14550 ;;  check_msg       2   51[COMRAM] PTR struct __msg_queue
 14551 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
 14552 ;; Auto vars:     Size  Location     Type
 14553 ;;		None
 14554 ;; Return value:  Size  Location     Type
 14555 ;;                  1    wreg      unsigned char 
 14556 ;; Registers used:
 14557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14558 ;; Tracked objects:
 14559 ;;		On entry : 0/0
 14560 ;;		On exit  : 0/0
 14561 ;;		Unchanged: 0/0
 14562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14563 ;;      Params:         2       0       0       0       0
 14564 ;;      Locals:         0       0       0       0       0
 14565 ;;      Temps:          1       0       0       0       0
 14566 ;;      Totals:         3       0       0       0       0
 14567 ;;Total ram usage:        3 bytes
 14568 ;; Hardware stack levels used:    1
 14569 ;; This function calls:
 14570 ;;		Nothing
 14571 ;; This function is called by:
 14572 ;;		_SleepIfOkay
 14573 ;; This function uses a non-reentrant model
 14574 ;;
 14575                           psect	text54,class=CODE,space=0,reloc=2
 14576                           global __ptext54
 14577  001B68                     __ptext54:
 14578                           psect	text54
 14579                           	file	"../src/messages.c"
 14580                           	line	222
 14581                           	global	__size_ofi2_check_msg
 14582  0000                     	__size_ofi2_check_msg	equ	__end_ofi2_check_msg-i2_check_msg
 14583                           	
 14584  001B68                     i2_check_msg:; BSR set to: 0
 14585                           
 14586                           	opt	stack 19
 14587                           	line	223
 14588                           	
 14589  001B68                     i2l18749:
 14590                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
 14591  001B68  EE20 F035          	lfsr	2,035h
 14592  001B6C  5034               	movf	((c:i2check_msg@qptr)),c,w
 14593  001B6E  26D9               	addwf	fsr2l
 14594  001B70  5035               	movf	((c:i2check_msg@qptr+1)),c,w
 14595  001B72  22DA               	addwfc	fsr2h
 14596  001B74  50DF               	movf	indf2,w
 14597  001B76  6E36               	movwf	(??i2_check_msg+0+0)&0ffh,c
 14598  001B78  5036               	movf	((??i2_check_msg+0+0)),c,w
 14599  001B7A  0D0D               	mullw	0Dh
 14600  001B7C  50F3               	movf	(prodl),c,w
 14601  001B7E  2434               	addwf	((c:i2check_msg@qptr)),c,w
 14602  001B80  6ED9               	movwf	c:fsr2l
 14603  001B82  50F4               	movf	(prodh),c,w
 14604  001B84  2035               	addwfc	((c:i2check_msg@qptr+1)),c,w
 14605  001B86  6EDA               	movwf	1+c:fsr2l
 14606  001B88  50DF               	movf	indf2,w
 14607  001B8A  D000               	goto	i2l5523
 14608                           	
 14609  001B8C                     i2l18751:
 14610                           	line	224
 14611                           	
 14612  001B8C                     i2l5523:
 14613  001B8C  0012               	return
 14614                           	opt stack 0
 14615                           GLOBAL	__end_ofi2_check_msg
 14616  001B8E                     	__end_ofi2_check_msg:
 14617                           	signat	i2_check_msg,89
 14618                           	global	i2_memcpy
 14619                           
 14620 ;; *************** function i2_memcpy *****************
 14621 ;; Defined at:
 14622 ;;		line 13 in file "/opt/microchip/xc8/v1.10/sources/memcpy.c"
 14623 ;; Parameters:    Size  Location     Type
 14624 ;;  memcpy          2   51[COMRAM] PTR void 
 14625 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
 14626 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
 14627 ;;  memcpy          2   53[COMRAM] PTR const void 
 14628 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 14629 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 14630 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(5), 
 14631 ;;  memcpy          2   55[COMRAM] unsigned int 
 14632 ;; Auto vars:     Size  Location     Type
 14633 ;;  memcpy          2   59[COMRAM] PTR const unsigned char 
 14634 ;;		 -> adc_int_handler@message(4), timer1_int_handler@result(2), timer0_int_handler@val(2), NULL(0), 
 14635 ;;		 -> i2c_int_handler@error_buf(3), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
 14636 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), main@uc(5), 
 14637 ;;  memcpy          2   57[COMRAM] PTR unsigned char 
 14638 ;;		 -> timer0_int_handler@val(2), i2c_int_handler@data(10), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
 14639 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), 
 14640 ;; Return value:  Size  Location     Type
 14641 ;;                  2   51[COMRAM] PTR void 
 14642 ;; Registers used:
 14643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 14644 ;; Tracked objects:
 14645 ;;		On entry : 0/0
 14646 ;;		On exit  : 0/0
 14647 ;;		Unchanged: 0/0
 14648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
 14649 ;;      Params:         6       0       0       0       0
 14650 ;;      Locals:         4       0       0       0       0
 14651 ;;      Temps:          0       0       0       0       0
 14652 ;;      Totals:        10       0       0       0       0
 14653 ;;Total ram usage:       10 bytes
 14654 ;; Hardware stack levels used:    1
 14655 ;; This function calls:
 14656 ;;		Nothing
 14657 ;; This function is called by:
 14658 ;;		i2_send_msg
 14659 ;;		i2_recv_msg
 14660 ;; This function uses a non-reentrant model
 14661 ;;
 14662                           psect	text55,class=CODE,space=0,reloc=2
 14663                           global __ptext55
 14664  001844                     __ptext55:
 14665                           psect	text55
 14666                           	file	"/opt/microchip/xc8/v1.10/sources/memcpy.c"
 14667                           	line	13
 14668                           	global	__size_ofi2_memcpy
 14669  0000                     	__size_ofi2_memcpy	equ	__end_ofi2_memcpy-i2_memcpy
 14670                           	
 14671  001844                     i2_memcpy:
 14672                           	opt	stack 17
 14673                           	line	24
 14674                           	
 14675  001844                     i2l19257:
 14676  001844  C036  F03C         	movff	(c:i2memcpy@s1),(c:i2memcpy@s)
 14677  001848  C037  F03D         	movff	(c:i2memcpy@s1+1),(c:i2memcpy@s+1)
 14678                           	line	25
 14679  00184C  C034  F03A         	movff	(c:i2memcpy@d1),(c:i2memcpy@d)
 14680  001850  C035  F03B         	movff	(c:i2memcpy@d1+1),(c:i2memcpy@d+1)
 14681                           	line	26
 14682  001854  D00F               	goto	i2l19265
 14683                           	
 14684  001856                     i2l17011:
 14685                           	line	27
 14686                           	
 14687  001856                     i2l19259:
 14688  001856  C03C  FFD9         	movff	(c:i2memcpy@s),fsr2l
 14689  00185A  C03D  FFDA         	movff	(c:i2memcpy@s+1),fsr2h
 14690  00185E  C03A  FFE1         	movff	(c:i2memcpy@d),fsr1l
 14691  001862  C03B  FFE2         	movff	(c:i2memcpy@d+1),fsr1h
 14692  001866  CFDF FFE7          	movff	indf2,indf1
 14693                           	
 14694  00186A                     i2l19261:
 14695  00186A  4A3C               	infsnz	((c:i2memcpy@s)),c
 14696  00186C  2A3D               	incf	((c:i2memcpy@s+1)),c
 14697                           	
 14698  00186E                     i2l19263:
 14699  00186E  4A3A               	infsnz	((c:i2memcpy@d)),c
 14700  001870  2A3B               	incf	((c:i2memcpy@d+1)),c
 14701  001872  D000               	goto	i2l19265
 14702                           	
 14703  001874                     i2l17010:
 14704                           	line	26
 14705                           	
 14706  001874                     i2l19265:
 14707  001874  0638               	decf	((c:i2memcpy@n)),c
 14708  001876  A0D8               	btfss	status,0
 14709  001878  0639               	decf	((c:i2memcpy@n+1)),c
 14710  00187A  2838               	incf	((c:i2memcpy@n))&0ffh,w
 14711  00187C  B4D8               	btfsc	status,2
 14712  00187E  2839               	incf ((c:i2memcpy@n+1))&0ffh,w
 14713                           
 14714  001880  A4D8               	btfss	status,2
 14715  001882  D001               	goto	i2u227_41
 14716  001884  D001               	goto	i2u227_40
 14717  001886                     i2u227_41:
 14718  001886  D7E7               	goto	i2l19259
 14719  001888                     i2u227_40:
 14720  001888  D000               	goto	i2l17013
 14721                           	
 14722  00188A                     i2l17012:
 14723                           	line	32
 14724                           ;	Return value of i2_memcpy is never used
 14725                           	
 14726  00188A                     i2l17013:
 14727  00188A  0012               	return
 14728                           	opt stack 0
 14729                           GLOBAL	__end_ofi2_memcpy
 14730  00188C                     	__end_ofi2_memcpy:
 14731                           	signat	i2_memcpy,90
 14732                           	GLOBAL	__activetblptr
 14733  0000                     __activetblptr	EQU	0
 14734                           	psect	intsave_regs,class=BIGRAM,space=1
 14735                           psect	text56,class=CODE,space=0,reloc=2
 14736                           global __ptext56
 14737  000000                     __ptext56:
 14738                           	PSECT	rparam,class=COMRAM,space=1
 14739                           	GLOBAL	__Lrparam
 14740                           	FNCONF	rparam,??,?
 14741                           GLOBAL	__Lparam, __Hparam
 14742                           GLOBAL	__Lrparam, __Hrparam
 14743  0000                     __Lparam	EQU	__Lrparam
 14744  0000                     __Hparam	EQU	__Hrparam


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         223
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     65      75
    BANK0           128     70      71
    BANK1           256     70     232
    BANK2           256      0      54
    BANK3           256      0       0

Pointer List with Targets:

    ?_ReadTimer1	unsigned int  size(2) Largest target is 2
		 -> WriteTimer1@timer(COMRAM[2]), ReadTimer1@timer(COMRAM[2]), 

    ?_ReadADC	int  size(2) Largest target is 0

    ?_memcpy	PTR void  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@data(BANK0[10]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    ?_in_high_int	int  size(2) Largest target is 0

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@data(BANK0[10]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@data(BANK0[10]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), main@uc(BANK1[5]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), main@uc(BANK1[5]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> NULL(NULL[0]), main@uc(BANK1[5]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 10
		 -> i2c_int_handler@empty(BANK0[4]), i2c_int_handler@data(BANK0[10]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> NULL(NULL[0]), main@ic(BANK1[28]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1023
		 -> RAM(DATA[1023]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 10
		 -> i2c_int_handler@data(BANK0[10]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> i2c_int_handler@msgtype(BANK0[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 3
		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@error_buf(BANK0[3]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), NULL(NULL[0]), main@uc(BANK1[5]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1023
		 -> RAM(DATA[1023]), i2c_int_handler@msgtype(BANK0[1]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@data(BANK0[10]), main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> timer0_int_handler@val(BANK0[2]), i2c_int_handler@data(BANK0[10]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 11
		 -> adc_int_handler@message(COMRAM[4]), timer1_int_handler@result(COMRAM[2]), timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), 
		 -> i2c_int_handler@error_buf(BANK0[3]), main@msgbuffer(BANK1[11]), main@uc(BANK1[5]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_i2c_int_handler
    _InterruptHandlerHigh->_timer0_int_handler
    _SleepIfOkay->i2_in_low_int
    _ToMainHigh_sendmsg->i2_send_msg
    _FromMainLow_recvmsg->i2_recv_msg
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_in_low_int->i2_in_high_int
    i2_send_msg->i2_memcpy
    i2_recv_msg->i2_memcpy
    _InterruptHandlerLow->_adc_int_handler
    _timer1_int_handler->_ToMainLow_sendmsg
    _adc_int_handler->_ToMainLow_sendmsg
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _init_timer1_lthread->_OpenADC
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainHigh_recvmsg->_recv_msg
    _ToMainLow_recvmsg->_recv_msg
    _FromMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _i2c_int_handler->_FromMainLow_recvmsg
    _timer0_int_handler->_FromMainHigh_recvmsg
    _ToMainHigh_sendmsg->i2_send_msg
    _FromMainLow_recvmsg->i2_recv_msg
    _FromMainHigh_recvmsg->i2_recv_msg

Critical Paths under _main in BANK1

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _ToMainHigh_recvmsg->_recv_msg
    _ToMainLow_recvmsg->_recv_msg
    _FromMainLow_sendmsg->_send_msg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                56    56      0    4596
                                             69 BANK0      1     1      0
                                             17 BANK1     53    53      0
                     _init_uart_recv
                           _init_i2c
                _init_timer1_lthread
                        _init_queues
                         _OpenTimer1
                  _enable_interrupts
                _i2c_configure_slave
                          _OpenUSART
              _block_on_To_msgqueues
                 _ToMainHigh_recvmsg
                     _timer0_lthread
                  _ToMainLow_recvmsg
                     _timer1_lthread
                _FromMainLow_sendmsg
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      22
                                             57 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      22
                                             57 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  5     3      2     198
                                             62 BANK0      5     3      2
                            _OpenADC
                         _SetChanADC
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     134
                                             61 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     0      1      66
                                             57 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     0      1      22
                                             57 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            3     0      3     220
                                             57 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0      66
                                             63 BANK0      1     1      0
                            _in_main
                          _check_msg
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             61 BANK0      2     0      2
                         _in_low_int
                        _in_high_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             59 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (3) _in_high_int                                          2     0      2       0
                                             57 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     0      5     772
                                             12 BANK1      5     0      5
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8      23
                                             57 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     0      5     772
                                             12 BANK1      5     0      5
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8      44
                                             57 BANK0     10     2      8
                         _ConvertADC
 ---------------------------------------------------------------------------------
 (1) _FromMainLow_sendmsg                                  4     0      4     741
                                             11 BANK1      4     0      4
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8      88
                                             57 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     134
                                             57 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _send_msg                                            12     6      6     648
                                             67 BANK0      1     1      0
                                              0 BANK1     11     5      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7     679
                                             67 BANK0      2     2      0
                                              0 BANK1     12     5      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     174
                                             57 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2      44
                                             57 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     0      1      22
                                             57 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     2      3     154
                                             57 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _SetChanADC                                           2     1      1      22
                                             57 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    4980
                                             34 COMRAM    17    17      0
                 _timer1_int_handler
                    _adc_int_handler
              _uart_recv_int_handler
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   6     6      0    1688
                                             26 COMRAM     6     6      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (6) _adc_int_handler                                      8     8      0    1707
                                             26 COMRAM     8     8      0
                            _ReadADC
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                2     2      0    1585
                                             26 COMRAM     2     2      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     0      4    1562
                                             22 COMRAM     4     0      4
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      45
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ReadADC                                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    1496
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     395
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    9227
                                             43 BANK0     14    14      0
                    _i2c_int_handler
                 _timer0_int_handler
                        _SleepIfOkay
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                    28    28      0    4935
                                             63 COMRAM     2     2      0
                                             17 BANK0     26    26      0
                       _handle_start
                _FromMainLow_recvmsg
              _start_i2c_slave_reply
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  8     8      0    4146
                                             63 COMRAM     2     2      0
                                             17 BANK0      6     6      0
                        _WriteTimer0
               _FromMainHigh_recvmsg
                 _ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     146
                       i2_in_low_int
                      i2_in_high_int
                        i2_check_msg
                   _enter_sleep_mode
 ---------------------------------------------------------------------------------
 (12) _ToMainHigh_sendmsg                                  4     0      4    1912
                                             11 BANK0      4     0      4
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (12) _FromMainLow_recvmsg                                 5     0      5    2000
                                             12 BANK0      5     0      5
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     0      5    2000
                                             12 BANK0      5     0      5
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _start_i2c_slave_reply                               5     2      3      66
                                             51 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (12) _handle_start                                        1     0      1      22
                                             51 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2      68
                                             51 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                             53 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (12) i2_in_high_int                                       2     0      2       0
                                             51 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    1819
                                             61 COMRAM     1     1      0
                                              0 BANK0     11     5      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    1907
                                             61 COMRAM     2     2      0
                                              0 BANK0     12     5      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     146
                                             51 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6     484
                                             51 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_uart_recv
   _init_i2c
   _init_timer1_lthread
     _OpenADC
     _SetChanADC
   _init_queues
     _init_queue
   _OpenTimer1
   _enable_interrupts
   _i2c_configure_slave
   _OpenUSART
   _block_on_To_msgqueues
     _in_main
       _in_low_int
         _in_high_int
       _in_high_int
     _check_msg
     _Delay1KTCYx
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _timer0_lthread
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _timer1_lthread
     _ConvertADC
   _FromMainLow_sendmsg
     _send_msg
       _memcpy
   _uart_lthread

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _adc_int_handler
     _ReadADC
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      36       8       21.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100     46      E8       6       90.6%
BITBANK0            80      0       0       3        0.0%
BANK0               80     46      47       4       55.5%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     41      4B       1       59.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0      22       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B0      11        0.0%
DATA                 0      0     1D2      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.10 build 47796 
Symbol Table                                                                                   Mon Sep 24 19:03:37 2012

                    _STKPTRbits 000FFC                main@uthread_data 01BE        _MQ_Main_Willing_to_block 0045  
                   _SSPSTATbits 000FC7                              _DA 007E3D                              _BF 007E38  
                            _DC 007EC1                              _CK 007C16                              _P2 007C3C  
                            _S2 007C3B                              _CS 007C22                              _DT 007C17  
                            _GO 007E11                              _PC 000FF9                              _PD 007E82  
                            _RD 007C20                              _UA 007E39                              _RI 007E84  
                            _OV 007EC3                              _TO 007E83                              _RW 007E3A  
                            _RX 007C17                              _WR 007D31                              _TX 007C16  
     __end_of_ToMainLow_recvmsg 1A5C                              bsr 000FE0       __end_of_ToMainLow_sendmsg 1BD6  
                  __CFG_CP0$OFF 000000               i2recv_msg@msgtype 0083               i2recv_msg@tlength 0088  
          ?_FromMainLow_recvmsg 008C                             _DA1 007E3D                             _DA2 007C3D  
                           _BF1 007E38                             _BF2 007C38                             _AN0 007C00  
                           _AN1 007C01                             _AN2 007C02                             _AN3 007C03  
                           _AN4 007C05                             _AN5 007C20                             _CM0 007DA0  
                           _AN6 007C21                             _CM1 007DA1                             _AN7 007C22  
                           _CM2 007DA2                             _AN8 007C0A                             _AN9 007C0B  
                           _LA0 007C48                             _P1A 007C12                             _LA1 007C49  
                           _P1B 007C1D                             _LB0 007C50                             _LA2 007C4A  
                           _P1C 007C1E                             _LB1 007C51                             _LA3 007C4B  
                           _P1D 007C1F                             _LC0 007C58                             _LB2 007C52  
                           _LA4 007C4C                             _LC1 007C59                             _LB3 007C53  
                           _LA5 007C4D                             _CKE 007E3E            ?_FromMainLow_sendmsg 01AD  
                           _LD0 007C60                             _LC2 007C5A                             _LB4 007C54  
                           _LA6 007C4E                             _LD1 007C61                             _LC3 007C5B  
                           _LB5 007C55                             _LA7 007C4F                             _LE0 007C68  
                           _LD2 007C62                             _LC4 007C5C                             _LB6 007C56  
                           _LE1 007C69                             _LD3 007C63                             _LC5 007C5D  
                           _LB7 007C57                             _LE2 007C6A                             _LD4 007C64  
                           _LC6 007C5E                             _LE3 007C6B                             _LD5 007C65  
                           _LC7 007C5F                             _LE4 007C6C                             _LD6 007C66  
                           _IBF 007CB7                             _LE5 007C6D                             _LD7 007C67  
                           _LE6 007C6E                             _LE7 007C6F                             _CIS 007DA3  
                           _CKP 007E34                             _PA1 007C12                             _GIE 007F97  
                           _PA2 007C11                             _PB2 007C22                             _PC2 007C21  
                           _BOR 007E80                             _RA0 007C00                             _PD2 007C20  
                           _RA1 007C01                             _RB0 007C08                             _RA2 007C02  
                           _RB1 007C09                             _RA3 007C03                             _RC0 007C10  
                           _RB2 007C0A                             _RA4 007C04                             _RC1 007C11  
                           _RB3 007C0B                             _RA5 007C05                             _RD0 007C18  
                           _RC2 007C12                             _RB4 007C0C                             _RA6 007C06  
                           _BSR 000FE0                             _RD1 007C19                             _RC3 007C13  
                           _RB5 007C0D                             _RA7 007C07                             _RE0 007C20  
                           _RD2 007C1A                             _RC4 007C14                             _RB6 007C0E  
                           _RE1 007C21                             _RD3 007C1B                             _RC5 007C15  
                           _RB7 007C0F                             _RE2 007C22                             _RD4 007C1C  
                           _RC6 007C16                             _RE3 007CB3                             _RD5 007C1D  
                           _RC7 007C17                             _RE4 007C24                             _RD6 007C1E  
                           _OBF 007CB6                             _UA1 007E39                             _RE5 007C25  
                           _RD7 007C1F                             _RC9 007D5E                             _UA2 007C39  
                           _RE6 007C26                             _W4E 007DC1                             _RE7 007C27  
                           _PGC 007C0E                             _PGD 007C0F                             _PCL 000FF9  
                           _SDA 007C14                             _RDE 007C20                             _PR2 000FCB  
                           _PEN 007E2A                             _SDI 007C14                             _SCK 007C13  
                           _SCL 007C13                             _SS1 007C05                             _SDO 007C15  
                           _SS2 007C1B                             _SEN 007E28                             _RW1 007E3A  
                           _PSA 007EAB                             _RW2 007C3A                             _POR 007E81  
                           _RX9 007D5E                             u980 1660                             u981 165E  
                           u990 168C                             _SMP 007E3F                             u991 168A  
                           _TX9 007D66                             _TOS 000FFD                             _WRE 007C21  
                           _WUE 007DC1                             _nA2 007C3D                             _nCS 007C22  
                           _nW2 007C3A                             _nPD 007E82            __size_of_WriteTimer0 0012  
          __size_of_WriteTimer1 0012                             _nRD 007C20                             _nRI 007E84  
                           _nTO 007E83                             _nWR 007C21                  _FromMainLow_MQ 0100  
                           wreg 000FE8                      _TXSTA1bits 000FAC                    __CFG_IESO$ON 000000  
                  ?_in_high_int 00B9                ??_init_uart_recv 00BB                 ReadTimer1@timer 0003  
           i2recv_msg@maxlength 0082                            l1802 1C1E                            l1810 16B4  
                          l1811 16A0                            l1812 16B2                            l1815 16FA  
                          l1808 1674                            l1816 170C                            l1809 16B4  
                          l1817 170C                            _AN10 007C09                            _AN11 007C0C  
                          _AN12 007C08                            l3650 082C                            l3651 08BC  
                          l3660 090E                            l3652 087C                            l5501 1B14  
                          l3661 09FC                            l3653 087C                            l3645 07D4  
                          l3670 0A00                            l3662 09DA                            l3654 0882  
                          l3646 082A                            l1799 1C94                            l3671 0A00  
                          l3663 0912                            l3655 0888                            l3647 0828  
                          l3664 09FA                            l3648 08BE                            l3656 0884  
                          l3665 0962                            l3649 089C                            l3657 0896  
                          l3666 0984                            l3658 0898                            l5523 19C2  
                          l3667 0986                            l3659 0910                            l5540 0F48  
                          l3668 09D6                            l5517 15F2                            l3669 09FE  
                          l5470 148A                            l5534 0E92                            l5535 0F48  
                          l5480 0B42                            l5536 0EA2                            l5473 0CD8  
                          l5537 0ED6                            l5474 0D7A                            l5538 0F0A  
                          l7410 1BB0                            l5539 0F46                            l5468 1454  
                          l5477 0B3C                            l5469 148A                            l5478 0A78  
                          l5479 0B42                            l7407 17FA                            _ADIE 007CEE  
                          l5488 1A5A                            l5496 1A2A                            _ADIF 007CF6  
                          _ADEN 007D5B                            _ADFM 007E07                            _CCP1 007C12  
                          l9209 1C0A                            _ADIP 007CFE                            _CKE1 007E3E  
                          _CKE2 007C3E                            _ADON 007E10                            _P1M0 007DEE  
                          _CHS0 007E12                            _P1M1 007DEF                            _CHS1 007E13  
                          _CHS2 007E14                            _CHS3 007E15                            _CKP1 007E34  
                          _DDRA 000F92                            _CKP2 007C34                            _DDRB 000F93  
                          _DDRC 000F94                            _DDRD 000F95                            _DDRE 000F96  
                          _GCEN 007E2F                            _KBI0 007C0C                            _KBI1 007C0D  
                          _CMIE 007D06                            _KBI2 007C0E                            _CMIF 007D0E  
                          _KBI3 007C0F                            _PA2E 007C27                            _GIEH 007F97  
                          _CMIP 007D16                            _BRGH 007D62                            _PB1E 007C26  
                          _GIEL 007F96                            _PC1E 007C25                            _PB3E 007C24  
                          _T0IE 007F95                            _PC3E 007C23                            u1000 16CE  
                          _T0IF 007F92                            _RD16 007E6F                            _FLT0 007C08  
                          _CREN 007D5C                            u1001 16CC                            _T0CS 007EAD  
                          u1010 16E6                            _FERR 007D5A                            u1011 16E4  
                          _DONE 007E11                            _T0IP 007F8A                            _IBOV 007CB5  
                          _CVR0 007DA8                            _CVR1 007DA9                            _PDC0 007DB8  
                          _CVR2 007DAA                            _PDC1 007DB9                            _FREE 007D34  
                          _CVR3 007DAB                            u2200 0CD2                            u1400 1926  
                          _PDC2 007DBA                            u2201 0CD0                            u1401 1924  
                          _PDC3 007DBB                            u2210 1760                            u1410 1944  
                          _PDC4 007DBC                            u2211 175E                            u1411 1942  
                          _T0SE 007EAC                            _PDC5 007DBD                            _CSRC 007D67  
                          u2220 0A52                            u1500 1166                            u1420 10D4  
                          _PDC6 007DBE                            u2221 0A50                            u1501 1164  
                          u1421 10D2                            _LATA 000F89                            u2230 0A72  
                          u1510 116E                            u1430 10E2                            _LATB 000F8A  
                          u2231 0A70                            u1511 116C                            u1431 10E0  
                          _LATC 000F8B                            u1520 0E8E                            u1440 10F2  
                          _D_A2 007C3D                            _LATD 000F8C                            _FSR0 000FE9  
                          u1521 0E8C                            u1441 10F0                            _LATE 000F8D  
                          _FSR1 000FE1                            u1530 0EC4                            u1450 1100  
                          _FSR2 000FD9                            u1531 0EC2                            u1451 10FE  
                          u1540 0EF8                            u1460 1112                            u2180 0824  
                          u1541 0EF6                            u1461 1110                            u2181 0822  
                          u1550 0F2A                            u1470 1122                            u2190 090A  
                          u1551 0F26                            u1471 1120                            u2191 0908  
                          u1720 1506                            u1560 1776                            u1480 1130  
                          _INT0 007C08                            u1721 1504                            u1561 1774  
                          u1481 112E                            _INT1 007C09                            u1570 178C  
                          u1490 1144                            _INT2 007C0A                            u1571 178A  
                          u1491 1142                            _SDA1 007C14                            u1580 1450  
                          u1556 0F2C                            _SDA2 007C19                            _RCD8 007D58  
                          u1581 144E                            _IPR1 000F9F                            u1590 1488  
                          _IPR2 000FA2                            u2287 1C22                            u1591 1486  
                          _PIE1 000F9D                            _IPR3 000FA5                            _IPEN 007E87  
                          _PIE2 000FA0                            _PEN1 007E2A                            _PIE3 000FA3  
                          _PEN2 007C2A                            _CVRR 007DAD                            _SDI1 007C14  
                          _SCK1 007C13                            _PEIE 007F96                            _SDI2 007C19  
                          _SCK2 007C18                            _SCL1 007C13                            _SCL2 007C18  
                          _RBIE 007F93                            _RBIF 007F90                            _RCIE 007CED  
                          _RCIF 007CF5                            _RCEN 007E2B                            _SDO1 007C15  
                          _SDO2 007C1A                            _SEN1 007E28                            _PIR1 000F9E  
                          _SEN2 007C28                            _SCS0 007E98                            _RBIP 007F88  
                          _MSK0 007E40                            _PIR2 000FA1                            _SCS1 007E99  
                          _MSK1 007E41                            _PIR3 000FA4                            _MSK2 007E42  
                          _MSK3 007E43                            _RCIP 007CFD                            _MSK4 007E44  
                          _MSK5 007E45                            _MSK6 007E46                            _MSK7 007E47  
                          _OERR 007D59                            _RCON 000FD0                            _SCKP 007DC4  
                          _RCMT 007DC6                            _RBPU 007F8F                            _RX91 007D5E  
                          _PSP0 007C18                            _SMP1 007E3F                            _PSP1 007C19  
                          _SMP2 007C3F                            _PSP2 007C1A                            _PSP3 007C1B  
                          _PSP4 007C1C                            _PSP5 007C1D                            _PSP6 007C1E  
                          _TX91 007D66                            _PSP7 007C1F                            _RX9D 007D58  
                          _TMR0 000FD6                            _TMR1 000FCE                            _TMR2 000FCC  
                          _PROD 000FF3                            _RJPU 007C07                            _WCOL 007E37  
                          _SPEN 007D5F                            _RSEN 007E29                            _TX9D 007D60  
                          _SREN 007D5D                            _OSTS 007E9B                            _TXD8 007D60  
                          _TOSH 000FFE                            _TOSL 000FFD                            _WREG 000FE8  
                          _TRMT 007D61                            _STOP 007E3C                            _ZERO 007EC2  
                          _TXIE 007CEC                            _TOSU 000FFF                            _WREN 007D32  
                          _TXIF 007CF4                            _TXEN 007D65                            _SYNC 007D64  
                          _TXIP 007CFC                            _R_W2 007C3A                 _FromMainHigh_MQ 0200  
                          _nBOR 007E80                   __CFG_FCMEN$ON 000000                            _nRC8 007D5E  
                          _nSS1 007C05                            _nSS2 007C1B                            _nPOR 007E81  
                          _nTX8 007D66          ?_block_on_To_msgqueues 0001                            _main 070A  
                          fsr0h 000FEA                            fsr1h 000FE2                            fsr0l 000FE9  
                          fsr2h 000FDA                            indf1 000FE7                            fsr1l 000FE1  
                          indf2 000FDF                            fsr2l 000FD9                     main@msgtype 01CB  
                    i1_send_msg 1174                            pclat 000FFA                     i2_check_msg 1B68  
                          prodh 000FF4                            prodl 000FF3           handle_start@data_read 0034  
                          start 00D2                      i2_recv_msg 0B44                   __CFG_FOSC2$ON 000000  
              ?_adc_int_handler 0001                      i2_send_msg 0D7C       ToMainHigh_recvmsg@msgtype 01AF  
                  _ECCP1DELbits 000FB7                 __end_of_ReadADC 1C84                    _ECCP1CONbits 000FBD  
                send_msg@length 01A4                 __end_of_OpenADC 1510     __size_of_timer0_int_handler 00B0  
                   _Delay1KTCYx 1C20           ??_FromMainLow_recvmsg 0040                           l17010 1746  
                         l17011 1720                           l17012 1762                           l10996 1C8C  
                         l17013 1762                           l12792 1B66                           l14580 17B0  
                         l16500 1136                           l14581 17AE                           l18101 16FA  
                         l16501 1148                           l12789 1656                           l16414 150C  
                         l14582 17B0                           l16502 114A                           l16415 150E  
                         l18103 170A                           l16503 1172                           l16504 1172  
                         l16427 1BF0                           l17075 1C20                           l14579 177A  
                         l16451 192A                           l17076 1C32                           l16452 192E  
                         l17077 1C32                           l16453 1948                           l19101 0986  
                         l16454 194A                           _C1INV 007DA4                           l19111 1A2C  
                         l18071 1658                           l16455 194C                           l19103 09D8  
                         l19031 070A                           _DC1B0 007DEC                           l19121 0C84  
                         l19113 1A5A                           l18081 168C                           l18073 1660  
                         l18401 1B96                           l18065 1C8E                           l19105 09DA  
                         l19041 0758                           l19033 070E                           _DC1B1 007DED  
                         l19131 0CD8                           l19123 0C9E                           l19115 1AEA  
                         l19107 19FC                           l18067 1C0C                           l18083 169C  
                         l18075 1670                           l18091 16B6                           l18411 1BAC  
                         l18403 1BA2                           l19051 076C                           l19043 075C  
                         l19035 0710                           l16492 10D6                           _DC2B0 007DD4  
                         l16397 1C9E                           l19141 0D7A                           l19133 0D08  
                         l19125 0CC0                           l18501 178C                           l19117 1B14  
                         l19109 1A2A                           l18069 1C1E                           l18085 169E  
                         l18077 1672                           l18093 16CE                           l18421 10E2  
                         l16493 10E6                           l18413 1BAE                           l18405 1BA6  
                         l19061 0790                           l19053 0770                           l19045 0760  
                         l19037 0728                           _DC2B1 007DD5                           l16494 10F4  
                         _C2INV 007DA5                           l19151 1746                           l19143 170E  
                         l19135 0D38                           l19127 0CD2                           l19119 0C76  
                         l18511 1454                           l18503 1406                           l18087 16A0  
                         l18079 1674                           l18095 16E6                           l18431 1130  
                         l16495 1104                           l18423 10F2                           l18415 10C0  
                         l18407 1BA8                           l19071 07AE                           l19063 0792  
                         l19055 0774                           l19047 0764                           l19039 0740  
                         l16496 1106                           l18601 198C                           l19145 1720  
                         l19161 0A72                           l19153 0A04                           l19137 0D6A  
                         l19129 0CD6                           l18513 1474                           l18505 1432  
                         l18089 16B0                           l18097 16F6                           l18441 115A  
                         l18433 1144                           l16497 1114                           l18425 1100  
                         l18417 10C8                           l18409 1BAA                           l18361 17B2  
                         l19081 082C                           l19073 07D4                           l19065 0794  
                         l19057 078A                           l19049 0768                           l16498 1124  
                         l18603 19C2                           l19147 1734                           l19171 0B06  
                         l19163 0A76                           l19155 0A1E                           l19139 0D76  
                         l18515 147A                           l18507 1442                           l18099 16F8  
                         l18451 0E76                           l18443 115C                           l18435 114E  
                         l16499 1134                           l18427 1112                           l18419 10D4  
                         l18371 1644                           l18363 17BA                           l19083 0886  
                         l19091 08BE                           l19075 07D8                           l19067 0796  
                         l19059 078E                           l18605 1C20                           l19149 173C  
                         l19173 0B24                           l19165 0A78                           l19181 0B3C  
                         l19157 0A40                           l18509 1452                           l18461 0ED0  
                         l18453 0E90                           l18445 115E                           l18437 1156  
                         l18429 1122                           l18381 15C2                           l18373 1646  
                         l18365 15F4                           l18357 1BF2                           l19093 08FE  
                         l19085 0888                           l19077 0818                           l19069 07AC  
                         l18607 1C28                           l19183 0B40                           l19175 0B30  
                         l19167 0A9E                           l19159 0A52                           l18471 0F08  
                         l18463 0ED4                           l18455 0E94                           l18447 1166  
                         l18439 1158                           l18391 192E                           l18383 15DA  
                         l18375 1586                           l18367 1640                           l18359 1BFA  
                         l19095 090C                           l19087 089A                           l19079 0826  
                         l19177 0B38                           l19169 0AD4                           l18481 1C84  
                         l18473 0F0A                           l18465 0ED6                           l18457 0EA2  
                         l18449 116E                           l18393 1936                           l18385 1910  
                         l18377 1592                           l18369 1642                           l19097 0912  
                         l19089 089C                           l18651 148C                           l19179 0B3A  
                         l18475 0F20                           l18467 0EF8                           l18459 0EC4  
                         l18395 1938                           l18387 191A                           l18379 15AA  
                         l19099 0962                           l18661 1506                           l18653 1494  
                         l18469 0F04                           l18397 1944                           l18389 1926  
                         l18663 1BD6                           l18655 14A0                           l18495 1764  
                         l18487 1B42                           l18399 1B8E                           l18665 1C9C  
                         l18657 14C0                           l18497 1778                           l18489 1B62  
                         l18659 14FA                           l18499 177A                           _C1OUT 007DA6  
                         _C2OUT 007DA7                           _ABDEN 007DC0                           _ADCAL 007E17  
                         _ADCS0 007E00                           _ADCS1 007E01                           _ADCS2 007E02  
         ??_FromMainLow_sendmsg 00C4                           _ADDEN 007D5B                           _CCP10 007C22  
                         ?_main 0001                           _ACKEN 007E2C                           _ACKDT 007E2D  
                         _CCP2E 007C27                           _CCP6E 007C26                           _CCP7E 007C25  
                         _CCP8E 007C24                           _CCP9E 007C23                           _BCLIE 007D03  
                         _BCLIF 007D0B                           _CCP1X 007DED                           _CCP1Y 007DEC  
                         _CCP2X 007DD5                           _ACQT0 007E03                           _CCP2Y 007DD4  
                         _ACQT1 007E04                           _ACQT2 007E05                           _BCLIP 007D13  
                         _ADRES 000FC3                           _CCPR1 000FBE                           _CCPR2 000FBB  
                         _BRG16 007DC3                           _GCEN1 007E2F                           _GCEN2 007C2F  
                         _CMEN0 007DA0                           _CMEN1 007DA1                           _CMEN2 007DA2  
                         _CARRY 007EC0                           _CHSN3 007E0B                           _BRGH1 007D62  
                         _CMCON 000FB4                           _CREN1 007D5C                           _FERR1 007D5A  
                         _T0CKI 007C0D                           _T1CKI 007C10                           _IDLEN 007E9F  
                         _T0CON 000FD5                           _T1CON 000FCD                           _CSRC1 007D67  
                         _T2CON 000FCA                           _LATA0 007C48                           _LATA1 007C49  
                         _LATB0 007C50                           _LATA2 007C4A                           _INDF0 000FEF  
                         _LATB1 007C51                           _LATA3 007C4B                           _INDF1 000FE7  
                         _LATC0 007C58                           _LATB2 007C52                           _INDF2 000FDF  
                         _LATC1 007C59                           _LATB3 007C53                           _LATA5 007C4D  
                         _LATD0 007C60                           _LATC2 007C5A                           _LATB4 007C54  
                         _LATD1 007C61                           _LATC3 007C5B                           _LATB5 007C55  
                         _LATA7 007C4F                           _LATE0 007C68                           _LATD2 007C62  
                         _LATC4 007C5C                           _LATB6 007C56                           _RC1IE 007CED  
                         _LATE1 007C69                           _LATD3 007C63                           _LATC5 007C5D  
                         _LATB7 007C57                           _RC1IF 007CF5                           _LATE2 007C6A  
                         _LATD4 007C64                           _LATC6 007C5E                           _LATD5 007C65  
                         _LATC7 007C5F                           _T0PS0 007EA8                           _LATD6 007C66  
                         _T0PS1 007EA9                           _LATD7 007C67                           _T0PS2 007EAA  
                         _RC1IP 007CFD                           _FSR0H 000FEA                           _FSR1H 000FE2  
                         _FSR2H 000FDA                           _FSR0L 000FE9                           _PCFG0 007E08  
                         _FSR1L 000FE1                           _PCFG1 007E09                           _PCFG2 007E0A  
                         _FSR2L 000FD9                           _PCFG3 007E0B                           _T1OSI 007C11  
                         _INT0E 007F94                           _INT0F 007F91                           _INT1E 007F83  
                         _INT1F 007F80                           _CVREF 007C02                           _T1OSO 007C10  
                         _INT2E 007F84                           _INT2F 007F81                           _CVREN 007DAF  
                         _INT1P 007F86                           _INT2P 007F87                           _T1RUN 007E6E  
                         _CVROE 007DAE                           _RC8_9 007D5E                           _RCEN1 007E2B  
                    i1memcpy@d1 0001                           _RCEN2 007C2B                           _PCLAT 000FF9  
                         _CVRSS 007DAC                           _MSK01 007E40                           _MSK02 007C40  
                         _MSK11 007E41                           _MSK12 007C41                           _MSK21 007E42  
                         _MSK22 007C42                           _MSK31 007E43                           _MSK32 007C43  
                         _MSK41 007E44                           _MSK42 007C44                           _MSK51 007E45  
                         _RCIDL 007DC6                           _MSK52 007C45                           _MSK61 007E46  
                         _MSK62 007C46                           _MSK71 007E47                           _MSK72 007C47  
                         _OERR1 007D59                      i1memcpy@s1 0003     FromMainHigh_recvmsg@msgtype 008D  
                         _VCFG0 007E0C                           _VCFG1 007E0D                           _RCREG 000FAE  
                         _SENDB 007D63                           _LVDIN 007C05                           _PLLEN 007CDE  
                         _RCSTA 000FAB                           _RX9D1 007D58                           _WCOL1 007E37  
                         _WCOL2 007C37                           _SPEN1 007D5F                           _TMR0H 000FD7  
                         _RSEN1 007E29                           _RSEN2 007C29                           _TMR1H 000FCF  
                         _TX1IE 007CEC                           _TX1IF 007CF4                           _TMR0L 000FD6  
                         _PRODH 000FF4                           _TX9D1 007D60                           _TMR1L 000FCE  
                         _PRODL 000FF3                           _SREN1 007D5D                           _SPBRG 000FAF  
                         _D_nA2 007C3D                           _TX1IP 007CFC                           _NOT_A 007E3D  
                         _PORTA 000F80                           _PORTB 000F81                           _PORTC 000F82  
                         _PORTD 000F83                           _PORTE 000F84                           _PSPIE 007CEF  
                         _PSPIF 007CF7                           _SRENA 007D5D                           _PRSEN 007DBF  
                         _PSPIP 007CFF                           _NOT_W 007E3A                           _START 007E3B  
                         _SSPM0 007E30                           _SSPM1 007E31                           _SSPM2 007E32  
                         _SSPM3 007E33                           _TX8_9 007D66                           _TRISA 000F92  
                         _TRISB 000F93                           _VREFM 007C02                           _TRMT1 007D61  
                         _STOP1 007E3C                           _TRISC 000F94                           _STOP2 007C3C  
                         _TRISD 000F95                           _SSPIE 007CEB                           _TRISE 000F96  
                         _VREFP 007C03                           _SSPIF 007CF3                           _SSPEN 007E35  
                         _TXEN1 007D65                           _SWDTE 007E88                           _SYNC1 007D64  
                         _SSPIP 007CFB                           _SSPOV 007E36                           _WRERR 007D33  
                         _TXREG 000FAD                           _TXSTA 000FAC                           _R_nW2 007C3A  
                    i2memcpy@d1 0034                           _nDONE 007E11                      i2memcpy@s1 0036  
                  ?_init_queues 0001                           _nRBPU 007F8F       __size_of_enter_sleep_mode 0006  
               __end_of_in_main 170E                           _errno 0042      ToMainLow_recvmsg@maxlength 01AE  
       timer0_lthread@msgbuffer 00BF                      _ConvertADC 1C9C         i2c_configure_slave@addr 00B9  
                         tablat 000FF5                           status 000FD8                __end_ofi1_memcpy 1844  
              __end_ofi2_memcpy 188C                 __initialization 1ABC                    __end_of_main 0A04  
                    _ReadTimer1 1C34     __size_of_timer1_int_handler 003E      __size_of_ToMainLow_recvmsg 0030  
    __size_of_ToMainLow_sendmsg 0024   __size_of_FromMainHigh_recvmsg 0030           __size_ofi2_in_low_int 0044  
                        ??_main 00C5                 send_msg@msgtype 01A5                   __activetblptr 000000  
               send_msg@tlength 01A8      FromMainLow_sendmsg@msgtype 01AE                      _SetChanADC 1BD6  
          __end_of_handle_start 137C          i2c_int_handler@msgtype 00A7                   _emptyMsgCount 00C6  
                        _ADDEN1 007D5B                          _BCL1IE 007D03                          _BCL1IF 007D0B  
                        _BCL2IE 007D1E                          _BCL2IF 007D26                          _BCL1IP 007D13  
                        _BCL2IP 007D2E                          _ADCON0 000FC2                          _ADCON1 000FC1  
                        _ADCON2 000FC0                          _ACKEN1 007E2C                          _ACKEN2 007C2C  
                        _ABDOVF 007DC7                          _ACKDT1 007E2D                          _ACKDT2 007C2D  
                        _CCP1M0 007DE8                          _CCP1M1 007DE9                          _CCP1M2 007DEA  
                        _CCP1M3 007DEB                          _CCP2M0 007DD0                          _CCP2M1 007DD1  
                        _CCP2M2 007DD2                          _CCP2M3 007DD3                          _CCP1IE 007CEA  
                        _CCP1IF 007CF2                          _CCP2IE 007D00                          _CCP2IF 007D08  
                        _CCP1IP 007CFA                          _CCP2IP 007D10                          _ADMSK1 007E29  
                        _ADMSK2 007E2A                          _ADMSK3 007E2B                          _ADMSK4 007E2C  
                        _ADMSK5 007E2D                          _ADRESH 000FC4                          _ADRESL 000FC3  
                        _CCPR1H 000FBF                          _CCPR2H 000FBC                          _CCPR1L 000FBE  
                        _CCPR2L 000FBB                          _EECON1 000FA6                          _EECON2 000FA7  
                        _T08BIT 007EAE         ??_uart_recv_int_handler 001B                          _T1RD16 007E6F  
                        _GODONE 007E11                          _INT0IE 007F94                          _INT0IF 007F91  
                        _INT1IE 007F83                          _INT1IF 007F80                          _INT2IE 007F84  
                        _INT2IF 007F81                          _INT1IP 007F86                          _CVRCON 000FB5  
                        _INT2IP 007F87                          _MEMCON 000FCB                          i1l1825 006C  
                        i1l1826 007C                          i1l1827 008C                          i1l1828 008C  
                        _CVROEN 007DAE                          _T1SYNC 007E6A                          i1l5473 11B2  
                        i2l1802 1C76                          i2l1810 18CE                          i1l5474 1224  
                    _OpenTimer1 1910                          i2l1811 18C0                          i2l1812 18CC  
                        i2l1820 13B8                          i2l1821 13C8                          i1l5485 1BD4  
                        i2l1822 13CC                  __CFG_WDTEN$OFF 000000                          i2l1808 18A2  
                        i2l1809 18CE                          i1l9203 1094                          i1l9204 1092  
                        _PCLATH 000FFA                          i1l9205 10BE                          i1l9206 10BE  
                        i2l5520 1C9A                          i2l5512 1ABA                          i2l5504 1A8A  
                        _PCLATU 000FFB                          i2l5530 1562                          i2l5523 1B8C  
                        i2l5531 1580                          i2l5526 151C                          i2l5527 1584  
                        i2l5480 0C74                          i2l5528 1530                          i2l7400 0654  
                        _INTCON 000FF2                          i2l5473 0DDE                          i2l5529 1544  
                        i2l7401 06EC                          i2l5474 0E74                          i2l7402 06EA  
                        i2l7403 0708                          i2l7404 0708                          i2l5477 0C6E  
                        i2l5493 1B40                          i2l5478 0BB8                          i2l7350 1368  
                        i2l5479 0C74                          i2l7351 1338                          i2l7352 1366  
                        i2l7344 0FB8                          i2l7360 0172                          i2l7353 1352  
                        i2l7345 0F5C                          i2l7361 0510                          i2l7354 1364  
                        i2l7346 0FD6                          i2l7362 04E8                          i2l7370 0200  
                        i2l7355 137A                          i2l7347 1008                          i2l7371 0220  
                        i2l7363 0182                          i2l7356 137A                          i2l7380 0354  
                        i2l7372 02D0                          i2l7364 01C4                          i2l7381 0356  
                        i2l7373 02CE                          i2l7365 01C2                          i2l7366 0510  
                        i2l7390 04E0                          i2l7382 0416                          i2l7374 029C  
                        _TABLAT 000FF5                          i2l7391 04AE                          i2l7383 03F6  
                        i2l7375 0270                          i2l7367 01C6                          i2l7359 0158  
                        i2l7392 04DE                          i2l7384 03C4                          i2l7376 029A  
                        i2l7368 0232                          i2l7393 0538                          i2l7385 03F4  
                        i2l7377 02CC                          i2l7369 0220                          i2l7386 0404  
                        i2l7378 02D2                          i2l7395 052A                          i2l7387 04E4  
                        i2l7379 0342                          i2l7396 0536                          i2l7388 04E2  
                        i2l7397 058A                          i2l7389 0470                          i2l7398 0656  
                        i2l7399 060C                          _VCFG01 007E0C                          _VCFG11 007E0D  
                        _RCREG1 000FAE     __end_of_i2c_configure_slave 1BB2                          _SENDB1 007D63  
                 ??_SleepIfOkay 0038              __size_of_ReadUSART 0038                          _RCSTA1 000FAB  
                        _OSCFIE 007D07                          _OSCFIF 007D0F                          _OSCCON 000FD3  
                        _OSCFIP 007D17                          _TBLPTR 000FF6                          _TMR0IE 007F95  
                        _SPBRG1 000FAF                          _TMR0IF 007F92                          _TMR1IE 007CE8  
                        _TMR1IF 007CF0                          _TMR1CS 007E69                          _TMR2IE 007CE9  
                        _TMR2IF 007CF1                          _TMR0IP 007F8A                          _PSSAC0 007DB2  
                        _PSSAC1 007DB3                          _TMR1IP 007CF8                          _PSSBD0 007DB0  
                        _PSSBD1 007DB1                          _TMR2IP 007CF9                          _TMR0ON 007EAF  
                        _SPBRGH 000FB0                          _TMR1ON 007E68                          _PLUSW0 000FEB  
                        _PLUSW1 000FE3                          _TMR2ON 007E52                          _PLUSW2 000FDB  
                        _NOT_CS 007C22                          _SSP1IE 007CEB                          _SSP1IF 007CF3  
                        _SSP2IE 007D1F                          _SSP2IF 007D27                          _NOT_PD 007E82  
                        _NOT_RD 007C20                          _SSP1IP 007CFB                          _WDTCON 000FD1  
                        _NOT_RI 007E84                          _SSP2IP 007D2F                          _NOT_TO 007E83  
                        _START1 007E3B                          _START2 007C3B                          _SOSCEN 007E6B  
                        _NOT_WR 007C21                          _SSPM01 007E30                          _SSPM02 007C30  
                        _SSPM11 007E31                          _SSPM12 007C31                          _SSPM21 007E32  
                        _SSPM22 007C32                          _SSPM31 007E33                          _SSPM32 007C33  
                        _SSPADD 000FC8                          _TRISA0 007C90                          _TRISA1 007C91  
                        _TRISB0 007C98                          _TRISA2 007C92                          _TRISB1 007C99  
                        _TRISA3 007C93                          _TRISC0 007CA0                          _TRISB2 007C9A  
                        _TRISC1 007CA1                          _TRISB3 007C9B                          _TRISA5 007C95  
                        _TRISD0 007CA8                          _TRISC2 007CA2                          _TRISB4 007C9C  
                        _TRISD1 007CA9                          _TRISC3 007CA3                          _TRISB5 007C9D  
                        _TRISE0 007CB0                          _TRISD2 007CAA                          _TRISC4 007CA4  
                        _TRISB6 007C9E                          _TRISE1 007CB1                          _TRISD3 007CAB  
                        _TRISC5 007CA5                          _TRISB7 007C9F                          _TRISE2 007CB2  
                        _TRISD4 007CAC                          _TRISC6 007CA6                          _TRISD5 007CAD  
                        _TRISC7 007CA7                          _SSPEN1 007E35                          _TRISD6 007CAE  
                        _SSPEN2 007C35                          _TRISD7 007CAF                          _STATUS 000FD8  
                        _STKFUL 007FE7                          _SSPBUF 000FC9                          _SWDTEN 007E88  
                        _STKOVF 007FE7                          _SSPOV1 007E36                          _SSPOV2 007C36  
                        _STKUNF 007FE6                          _STKPTR 000FFC  __size_of_start_i2c_slave_reply 00C0  
                        _TXREG1 000FAD                     ?i1_send_msg 000B                       ??_ReadADC 0003  
                        _TXSTA1 000FAC   __end_of_start_i2c_slave_reply 100A              timer0_lthread@tptr 00B9  
       FromMainLow_recvmsg@data 008F                     ?i2_recv_msg 0080                       ??_OpenADC 00BC  
                  i2_in_low_int 188C                     ?i2_send_msg 0080                  __CFG_XINST$OFF 000000  
            __size_of_OpenUSART 00B4                 _i2c_int_handler 00D6                          _ic_ptr 0048  
                 main@msgbuffer 01B3                __end_of_init_i2c 17FC                OpenTimer1@config 00B9  
                        _memcpy 170E                          clear_0 1AC2                          clear_1 1ACE  
                        _uc_ptr 004A                          main@ic 01CC                          main@uc 01C5  
              __end_of_recv_msg 0B44     start_i2c_slave_reply@length 0034                       ??_in_main 00BF  
              __end_of_send_msg 0D7C           timer0_int_handler@val 0095         i2c_int_handler@i2c_data 00A6  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
                   init_queue@i 00BC        ToMainLow_recvmsg@msgtype 01AF            __size_of_in_high_int 0014  
                   ?_ConvertADC 0001         FromMainLow_sendmsg@data 01AF                 __CFG_FOSC$HSPLL 000000  
                    __accesstop 0080         __end_of__initialization 1AE4      __end_of_ToMainHigh_recvmsg 1A2C  
    __end_of_ToMainHigh_sendmsg 1B42     __end_of_init_timer1_lthread 1658             __end_of_SleepIfOkay 1586  
                __pcstackCOMRAM 0001          __size_ofi2_in_high_int 000E                     ?_ReadTimer1 0001  
            __size_of_check_msg 0038               __end_of_ReadUSART 19FC       timer0_int_handler@msgtype 0091  
                   ?_SetChanADC 00B9             __size_ofi1_send_msg 00B2                       ?i1_memcpy 0001  
 __size_of_InterruptHandlerHigh 13FE     __end_of_InterruptHandlerLow 00D2                       ?i2_memcpy 0034  
                 _ToMainHigh_MQ 0136             __size_ofi2_recv_msg 0132                _enter_sleep_mode 1C96  
           __size_ofi2_send_msg 00FA            timer1_lthread@length 00BD                   ReadUSART@data 0001  
             __end_of_OpenUSART 1174                   check_msg@qptr 00B9         ??_block_on_To_msgqueues 00BF  
          __size_of_init_queues 006E                      __pbssBANK0 00C6                      __pbssBANK1 0100  
                    __pbssBANK2 0200                     ?_OpenTimer1 00B9                      __pnvCOMRAM 0048  
       __end_of_i2c_int_handler 070A                    ?i2_check_msg 0034              timer1_lthread@tptr 00B9  
                 _DATA_ADDRESS2 007C3D               recv_msg@maxlength 01A4                 recv_msg@msgtype 01A5  
               recv_msg@tlength 01AA                         _CCP1CON 000FBD                         _CCP2CON 000FBA  
         __size_of_handle_start 00A6                    ?_Delay1KTCYx 00B9                WriteTimer0@timer 0036  
                       _ADMSK11 007E29                         _ADMSK12 007C29                         _ADMSK21 007E2A  
                       _ECCP1AS 000FB6                         _ADMSK22 007C2A                         _ADMSK31 007E2B  
                       _ADMSK32 007C2B                         _ADMSK41 007E2C                         _ADMSK42 007C2C  
                       _ADMSK51 007E2D                         _ADMSK52 007C2D                         ?_memcpy 00B9  
                       _BAUDCON 000FB8                         _ACKSTAT 007E2E                         _BAUDCTL 000FB8  
              WriteTimer1@timer 0003                   ??_WriteTimer0 0036                   ??_WriteTimer1 0003  
                       _ECCPAS0 007DB4                         _ECCPAS1 007DB5                         _ECCPAS2 007DB6  
                       _ECCPASE 007DB7             __size_of_ConvertADC 0004         __size_of_timer0_lthread 000A  
                       _T1CKPS0 007E6C                         _T1CKPS1 007E6D                         _T2CKPS0 007E50  
                       _T2CKPS1 007E51         __size_of_timer1_lthread 0026                         _T1OSCEN 007E6B  
                       i1l17010 182C                         i1l17011 180E                         i1l17012 1842  
                       i1l17013 1842                         i1l16422 1C82                         i1l16513 19DE  
                       i1l16514 19DE                         i1l16515 19E8                         i1l16516 19F2  
                       i1l16517 19FA                         i1l16462 1C44                         i1l16392 190E  
                       i1l16469 1C56                         i1l16389 198A                         i1l17741 1C46  
                       i1l17743 1C78                         i1l17745 1C82                         i1l18641 19DA  
                       i1l18801 194E                         i1l17739 1C34                         i1l18643 19E6  
                       i1l18635 19C4                         i1l18811 18DC                         i1l18803 195A  
                       i1l18645 19F0                         i1l18637 19C8                         i1l18821 18F2  
                       i1l18813 18E0                         i1l18805 1976                         i1l18647 19F6  
                       i1l18639 19D0                         i1l18831 105C                         i1l18823 100A  
                       i1l18815 18E4                         i1l18807 197E                         i1l18761 182C  
                       i1l18753 17FC                         i1l18649 19FA                         i1l18833 1080  
                       i1l18825 1012                         i1l18817 18EC                         i1l18809 18D0  
                       i1l18841 005C                         i1l18755 180E                         i1l18827 1038  
                       i1l18835 1094                         i1l18819 18F0                         i1l18851 0076  
                       i1l18843 0064                         i1l18757 1822                         i1l18781 11AC  
                       i1l18773 1174                         i1l18837 109C                         i1l18829 1046  
                       i1l18853 007C                         i1l18845 0066                         i1l18759 1826  
                       i1l18791 1214                         i1l18783 11B0                         i1l18775 117A  
                       i1l18839 10A0                         i1l18855 0084                         i1l18847 006C  
                       i1l18793 1220                         i1l18785 11B2                         i1l18777 118A  
                       i1l18857 0086                         i1l18849 0074                         i1l18795 1224  
                       i1l18787 11D2                         i1l18779 119A                         i1l18789 11F2  
                       i1l18797 1BB2                         i1l18799 1BD4                         i2l17010 1874  
                       i2l17011 1856                         i2l17012 188A                         i2l17013 188A  
                       i2l19001 060C                         i2l19011 066C                         i2l19003 0618  
                       i2l16436 1C68                         i2l19021 1226                         i2l19013 06A8  
                       i2l19005 0634                         i2l19023 123E                         i2l19015 06D8  
                       i2l19007 063A                         i2l19201 0D7C                         i2l16385 12D4  
                       i2l19025 124A                         i2l19017 06EC                         i2l19009 0656  
                       i2l16386 12D4                         i2l19211 0DDC                         i2l19203 0D8A  
                       i2l19027 1290                         i2l19019 06FA                         i2l19221 0E70  
                       i2l19213 0DDE                         i2l19205 0DA4                         i2l19029 12A2  
                       _INTEDG0 007F8E                         i2l19231 0B92                         i2l19223 0E74  
                       i2l19215 0E0E                         i2l19207 0DC6                         _INTEDG1 007F8D  
                       _INTEDG2 007F8C                         i2l19241 0C0A                         i2l19233 0BB2  
                       i2l19225 0B44                         i2l19217 0E36                         i2l19209 0DD8  
                       i2l18281 1530                         i2l18273 1510                         i2l19251 0C6C  
                       i2l19243 0C38                         i2l19235 0BB6                         i2l19227 0B5E  
                       i2l19219 0E64                         i2l18611 0F5C                         i2l18291 157E  
                       i2l18283 1542                         i2l18275 151A                         i2l19261 186A  
                       i2l19245 0C56                         i2l19237 0BB8                         i2l19253 0C6E  
                       i2l19229 0B80                         i2l18621 12D6                         i2l18613 0FA8  
                       i2l18293 1580                         i2l18285 1544                         i2l18277 151C  
                       i2l19263 186E                         i2l19255 0C72                         i2l19247 0C62  
                       i2l19239 0BDA                         i2l18631 1352                         i2l18623 12F6  
                       i2l18615 0FB8                         i2l19191 1A8A                         i2l18287 1560  
                       i2l18279 152E                         i2l19265 1874                         i2l19257 1844  
                       i2l19249 0C6A                         i2l18625 1300                         i2l18633 1368  
                       i2l18617 0FD6                         i2l18609 0F4A                         i2l19185 1B16  
                       i2l18289 1562                         i2l19259 1856                         i2l18627 1308  
                       i2l18619 1006                         i2l19187 1B40                         i2l18629 1340  
                       i2l19197 1A8C                         i2l19189 1A5C                         i2l18901 01A8  
                       i2l18751 1B8C                         i2l18671 1C76                         i2l19199 1ABA  
                       i2l18911 0200                         i2l18903 01CE                         i2l18681 18A2  
                       i2l18673 188C                         i2l18921 025E                         i2l18905 01DC  
                       i2l18913 0232                         i2l18691 18CA                         i2l18683 18B2  
                       i2l18675 1894                         i2l18667 1C58                         i2l18931 02D2  
                       i2l18923 0270                         i2l18915 0240                         i2l18907 01EA  
                       i2l18749 1B68                         i2l18669 1C6A                         i2l18685 18BC  
                       i2l18677 189E                         i2l18941 035E                         i2l18933 02FA  
                       i2l18925 0280                         i2l18917 024E                         i2l18909 01F2  
                       i2l18861 13B0                         i2l18687 18BE                         i2l18679 18A0  
                       i2l18599 1C96                         i2l18951 03B6                         i2l18943 036C  
                       i2l18935 0326                         i2l18927 028C                         i2l18919 0256  
                       i2l18871 13C8                         i2l18863 13B2                         i2l18689 18C0  
                       i2l18961 0424                         i2l18953 03C4                         i2l18945 037A  
                       i2l18937 0334                         i2l18929 029C                         i2l18881 012C  
                       i2l18873 00D6                         i2l18865 13B8                         i2l18971 0488  
                       i2l18963 0432                         i2l18947 0382                         i2l18955 03F6  
                       i2l18939 0342                         i2l18891 0164                         i2l18883 0138  
                       i2l18875 0112                         i2l18867 13C0                         i2l18859 13A8  
                       i2l18973 0494                         i2l18965 043A                         i2l18957 0404  
                       i2l18949 03A8                         i2l18981 04E8                         i2l18893 0172  
                       i2l18885 0146                         i2l18877 011A                         i2l18869 13C2  
                       i2l18991 055A                         i2l18983 051C                         i2l18975 04A0  
                       i2l18967 0460                         i2l18959 0416                         i2l18895 0180  
                       i2l18879 011C                         i2l18887 0158                         i2l18993 058A  
                       i2l18985 0532                         i2l18969 0478                         i2l18977 04AE  
                       i2l18897 018A                         i2l18889 0160                         i2l18995 0598  
                       i2l18987 0538                         i2l18979 04E6                         i2l18899 0192  
                       i2l18997 05DE                         i2l18989 054E                         i2l18999 05F6  
                       _INTCON2 000FF1                      ??i1_memcpy 0007                         _INTCON3 000FF0  
                       _GO_DONE 007E11                      ??i2_memcpy 003A                         _TBLPTRH 000FF7  
                       _TBLPTRL 000FF6                         _PREINC0 000FEC                         _PREINC1 000FE4  
                       _PREINC2 000FDC                         _TBLPTRU 000FF8                         _OSCTUNE 000F9B  
                       _PWM1CON 000FB7                i1send_msg@length 000D                         _SSP1ADD 000FC8  
                       _SSP2ADD 000F88                         _NOT_BOR 007E80                         _NOT_RC8 007D5E  
                       _SSP1BUF 000FC9                         _SSP2BUF 000F8E                         _NOT_SS1 007C05  
                       _NOT_SS2 007C1B                         _NOT_POR 007E81                         _NOT_TX8 007D66  
                       _PSPMODE 007CB4                   i2_in_high_int 1C6A                         _SSPCON1 000FC6  
                       _SSPCON2 000FC5                         _STKPTR0 007FE0                         _STKPTR1 007FE1  
                       _STKPTR2 007FE2                         _STKPTR3 007FE3                         _STKPTR4 007FE4  
                       _ULPWUIN 007C00                         _SSPSTAT 000FC7                         _TOUTPS0 007E53  
                       _TOUTPS1 007E54                         _TOUTPS2 007E55                         _TOUTPS3 007E56  
           __size_of_ReadTimer1 0012               __end_of_check_msg 19C4                       _I2C_READ2 007C3A  
                     _I2C_STOP2 007C3C                       ?_init_i2c 00B9                     _SleepIfOkay 1510  
                       _ReadADC 1C78                       ?_recv_msg 01A2                         _OpenADC 148C  
                    _in_low_int 1658                    _handle_start 12D6                         __Hparam 0000  
           __size_of_SetChanADC 001C                         _nT1SYNC 007E6A                       ?_send_msg 01A2  
                       __Lparam 0000      __end_of_timer0_int_handler 12D6     __end_of_FromMainLow_recvmsg 1A8C  
   __end_of_FromMainLow_sendmsg 1B16                init_uart_recv@uc 00B9                         _nWRITE2 007C3A  
                     _CMCONbits 000FB4                 __CFG_STVREN$OFF 000000                         __pcinit 1ABC  
               __size_of_memcpy 0056        __size_of_adc_int_handler 0040                      _init_queue 1406  
                       __ramtop 0400             __size_of_OpenTimer1 003E                         __ptext0 070A  
                       __ptext1 1C8E                         __ptext2 1BF2                         __ptext3 17B2  
                       __ptext4 15F4                         __ptext5 1586                         __ptext6 1910  
                       __ptext7 1B8E                         __ptext8 10C0                         __ptext9 0E76  
                     _T0CONbits 000FD5                         _in_main 16B6                       _T1CONbits 000FCD  
                     _T2CONbits 000FCA             __end_of_WriteTimer0 1C6A             __end_of_WriteTimer1 1C58  
                ?i2_in_high_int 0034                  OpenADC@config2 00BA                  __pintcode_body 137C  
  __end_of_FromMainHigh_recvmsg 1ABC            end_of_initialization 1AE4         timer1_lthread@msgbuffer 00BF  
                     _PEIE_GIEL 007F96  __size_of_uart_recv_int_handler 00B6                         memcpy@d 00BF  
                       memcpy@n 00BD                         memcpy@s 00C1   __end_of_uart_recv_int_handler 10C0  
                    ??_init_i2c 00BB     i2c_int_handler@data_written 00A2                         int_func 137C  
                  ??i1_send_msg 0011                   ?_uart_lthread 00B9         __size_of_init_uart_recv 001A  
              ?_i2c_int_handler 0001                    ??i2_recv_msg 003E                      ??_recv_msg 00C3  
                  ??i2_send_msg 003E                      ??_send_msg 00C3            adc_int_handler@value 0021  
    __end_of_timer1_int_handler 198C                       _RCSTAbits 000FAB                         postdec2 000FDD  
                       postinc0 000FEE                         postinc2 000FDE       ToMainHigh_sendmsg@msgtype 008C  
                     _PORTAbits 000F80                       _PORTBbits 000F81                       _PORTCbits 000F82  
                     _PORTDbits 000F83                       _PORTEbits 000F84              __end_ofi1_send_msg 1226  
                     _TRISAbits 000F92                       _TRISBbits 000F93                       _TRISCbits 000F94  
                     _TRISDbits 000F95                       _TRISEbits 000F96              __end_ofi2_recv_msg 0C76  
            __end_ofi2_send_msg 0E76                    ??_ConvertADC 00B9                     _adcMsgCount 0047  
                     _CapStatus 0044   FromMainHigh_recvmsg@maxlength 008C        timer1_int_handler@result 001F  
                ??_uart_lthread 00C1                     _CCP1CONbits 000FBD                     _CCP2CONbits 000FBA  
                     _TXSTAbits 000FAC                      main@length 01CA                     ?_in_low_int 00BB  
         timer0_lthread@msgtype 00BB           _start_i2c_slave_reply 0F4A    __size_of_i2c_configure_slave 0024  
          __size_ofi2_check_msg 0026        __end_of_enter_sleep_mode 1C9C                    ??_ReadTimer1 0003  
                   _ECCP1ASbits 000FB6              _ToMainHigh_recvmsg 19FC                       i1memcpy@d 0007  
            _ToMainHigh_sendmsg 1B16                       i1memcpy@n 0005                       i1memcpy@s 0009  
                   _BAUDCONbits 000FB8                  _timer0_lthread 1C84                     ?_init_queue 00B9  
                     i2memcpy@d 003A                     _BAUDCTLbits 000FB8                     _WriteTimer0 1C58  
                   _WriteTimer1 1C46                       i2memcpy@n 0038                       i2memcpy@s 003C  
            __end_of_ConvertADC 1CA0                  _timer1_lthread 1B42                  __end_of_memcpy 1764  
             _enable_interrupts 1C8E            __size_of_Delay1KTCYx 0014                       _nADDRESS2 007C3D  
                  ??_SetChanADC 00BA             ?_ToMainHigh_recvmsg 01AE                 ??i2_in_high_int 0036  
      i2c_int_handler@data_read 00AA             ?_ToMainHigh_sendmsg 008B              ?_enable_interrupts 0001  
           start_initialization 1ABC                   ??_in_high_int 00BB                       _ReadUSART 19C4  
             ??_adc_int_handler 001B               __size_ofi1_memcpy 0048               __size_ofi2_memcpy 0048  
     FromMainLow_sendmsg@length 01AD           i2c_int_handler@length 00A4             ??_enable_interrupts 00B9  
                  ??_OpenTimer1 00BA  __size_of_block_on_To_msgqueues 00D4              __end_of_ReadTimer1 1C46  
 __end_of_block_on_To_msgqueues 0F4A                       _OpenUSART 10C0    __end_of_InterruptHandlerHigh 1406  
                    init_i2c@ic 00B9            ??_ToMainHigh_recvmsg 00C5            ??_ToMainHigh_sendmsg 003F  
            __end_of_SetChanADC 1BF2          __end_of_timer0_lthread 1C8E        i2c_int_handler@error_buf 009F  
        __end_of_timer1_lthread 1B68       __end_of_enable_interrupts 1C96                        ??_memcpy 00BF  
         timer1_lthread@msgtype 00BB            _FromMainHigh_recvmsg 1A8C    __size_of_init_timer1_lthread 0064  
            __end_of_OpenTimer1 194E        i2c_int_handler@msg_ready 00A9                     __pbssCOMRAM 0042  
        timer1_int_handler@temp 001D                      ?_ReadUSART 0001                   ??_init_queues 00BD  
                 __pcstackBANK0 0080                   __pcstackBANK1 01A2             __size_of_in_low_int 005E  
      start_i2c_slave_reply@msg 0035             __CFG_CCP2MX$DEFAULT 000000                 Delay1KTCYx@unit 00B9  
      ToMainLow_sendmsg@msgtype 0018    __size_of_InterruptHandlerLow 00BA             __end_of_in_high_int 1C20  
                    ?_OpenUSART 00B9                    ?_SleepIfOkay 0001           ToMainLow_recvmsg@data 01B1  
                  _ToMainLow_MQ 016C             __size_of_init_queue 0086                  _init_uart_recv 1BF2  
                      ?_ReadADC 0001                       _check_msg 198C          ?_start_i2c_slave_reply 0034  
             __size_of_init_i2c 004A               OpenADC@portconfig 00BB                        ?_OpenADC 00B9  
                  recv_msg@data 01A7                    recv_msg@qmsg 01AC                    recv_msg@slot 01A9  
                  recv_msg@qptr 01A2               __size_of_recv_msg 0140                       __pintcode 0008  
             __size_of_send_msg 0106                 ?_timer0_lthread 00B9           ?_FromMainHigh_recvmsg 008C  
               ?_timer1_lthread 00B9                     __pintcodelo 0018          ToMainHigh_recvmsg@data 01B1  
          __end_of_uart_lthread 17B2                        _I2C_DAT2 007C3D      i2c_int_handler@msg_to_send 00A8  
                      ?_in_main 00BD               WriteTimer0@timer0 0034                        _ECCP1DEL 000FB7  
                      _ECCP1CON 000FBD                        _CCP2_PA2 007C0B                        _ACKSTAT1 007E2E  
                      _ACKSTAT2 007C2E              _timer0_int_handler 1226               WriteTimer1@timer1 0001  
           uart_lthread@msgtype 00BB           ToMainLow_sendmsg@data 0019                        _DDRAbits 000F92  
                      _DDRBbits 000F93                        _DDRCbits 000F94                        _DDRDbits 000F95  
                      _DDREbits 000F96             ?_timer0_int_handler 0001                        _GIE_GIEH 007F97  
                      _T1INSYNC 007E6A                uart_lthread@uptr 00B9          __end_of_init_uart_recv 1C0C  
           __end_of_init_queues 15F4                        _NEGATIVE 007EC4                        _T2OUTPS0 007E53  
                      _T2OUTPS1 007E54                        _T2OUTPS2 007E55                        _T2OUTPS3 007E56  
                 OpenADC@config 00B9                        _LATAbits 000F89                        _LATBbits 000F8A  
                      _LATCbits 000F8B                        _LATDbits 000F8C                        _LATEbits 000F8D  
               i2check_msg@qptr 0034                      ?_check_msg 00B9                        _IPR1bits 000F9F  
                      _IPR2bits 000FA2                        _PIE1bits 000F9D                        _IPR3bits 000FA5  
                      _PIE2bits 000FA0                        _PIE3bits 000FA3                   ?i2_in_low_int 0036  
                      i1u170_20 19E6                        i1u170_21 19E4                        i1u171_20 19F0  
                      i1u171_21 19EE                        i1u180_20 11AC                        i1u180_21 11AA  
                      i1u181_20 1012                        i1u181_21 1010                        i1u182_20 105C  
                      i1u182_21 105A                        i1u183_20 109C                        i1u183_21 109A  
                      i1u168_20 19D0                        i1u184_20 0064                        i1u168_21 19CE  
                      i1u184_21 0062                        i2u200_40 02FA                        i2u200_41 02F8  
                      i1u169_20 19DA                        i1u185_20 0074                        i1u169_21 19D8  
                      i1u185_21 0072                        i2u201_40 035E                        i2u201_41 035C  
                      i1u178_20 1840                        i1u186_20 0084                        i1u178_21 183E  
                      i1u186_21 0082                        i2u210_40 054E                        i2u202_40 037A  
                      i2u210_41 054C                        i2u202_41 0378                        i2u211_40 055A  
                      i2u203_40 0382                        i2u211_41 0558                        i2u203_41 0380  
                      i2u212_40 0598                        i2u204_40 0424                        i2u212_41 0596  
                      i2u204_41 0422                        i2u133_40 1518                        i2u213_40 05F6  
                      i2u205_40 043A                        i2u133_41 1516                        i2u213_41 05F4  
                      i2u205_41 0438                        i2u134_40 152C                        i2u214_40 066C  
                      i2u206_40 0478                        i2u134_41 152A                        i2u214_41 066A  
                      i2u206_41 0476                        i2u135_40 1540                        i2u215_40 06FA  
                      i2u207_40 051C                        i2u135_41 153E                        i2u215_41 06F8  
                      i2u207_41 051A                        i2u224_40 0DD8                        i2u136_40 155E  
                      i2u216_40 1230                        i2u208_40 052A                        i2u224_41 0DD6  
                      i2u136_41 155C                        i2u216_41 122C                        i2u208_41 0528  
                      i2u216_46 1232                        i2u225_40 0B92                        i2u137_40 157C  
                      i2u217_40 12A2                        i2u209_40 0532                        i2u225_41 0B90  
                      i2u137_41 157A                        i2u217_41 12A0                        i2u209_41 0530  
                      i2u226_40 0BB2                        i2u226_41 0BB0                        i2u227_40 1888  
                      i2u227_41 1886                        i2u164_40 0FD4                        i2u164_41 0FD2  
                      i2u173_40 1894                        i2u165_40 1300                        i2u173_41 1892  
                      i2u165_41 12FE                        i2u174_40 18B2                        i2u166_40 1308  
                      i2u190_40 0160                        i2u174_41 18B0                        i2u166_41 1306  
                      i2u190_41 015E                        i2u167_40 1340                        i2u191_40 017E  
                      i2u167_41 133E                        i2u191_41 017C                        i2u192_40 018A  
                      i2u192_41 0188                        i2u193_40 01A8                        i2u193_41 01A6  
                      _PIR1bits 000F9E                        i2u194_40 01CE                        i2u194_41 01CC  
                      i2u195_40 01EA                        i2u187_40 13B0                        i2u195_41 01E8  
                      i2u187_41 13AE                        _PIR2bits 000FA1                        i2u196_40 01F2  
                      i2u188_40 13C0                        i2u196_41 01F0                        i2u188_41 13BE  
                      i2u197_40 0240                        i2u189_40 011A                        i2u197_41 023E  
                      i2u189_41 0118                        _PIR3bits 000FA4                        i2u198_40 0256  
                      i2u198_41 0254                        i2u199_40 025E                        i2u199_41 025C  
        ToMainHigh_sendmsg@data 008D                        _GO_nDONE 007E11                        _RCONbits 000FD0  
              __CFG_WDTPS$32768 000000                        _OVERFLOW 007EC3                        _POSTDEC0 000FED  
                      _POSTDEC1 000FE5                        _POSTDEC2 000FDD                        _NOT_DONE 007E11  
                      _SSP1CON1 000FC6                        _SSP1CON2 000FC5                        _SSP2CON1 000F86  
                      _SSP2CON2 000F85                        _POSTINC0 000FEE                        _POSTINC1 000FE6  
                      _POSTINC2 000FDE                        _NOT_RBPU 007F8F            ??_timer0_int_handler 0040  
                      _SSP1STAT 000FC7                        _SSP2STAT 000F87    FromMainLow_recvmsg@maxlength 008C  
    __size_of_enable_interrupts 0008               i1send_msg@msgtype 000E               i1send_msg@tlength 0012  
    FromMainLow_recvmsg@msgtype 008D                      _ADCON0bits 000FC2                      _ADCON1bits 000FC1  
                    _ADCON2bits 000FC0    __size_of_FromMainLow_recvmsg 0030    __size_of_FromMainLow_sendmsg 002C  
          timer0_lthread@length 00BD              _timer1_int_handler 194E                        i1_memcpy 17FC  
          _InterruptHandlerHigh 0008                     ??_ReadUSART 0001                        i2_memcpy 1844  
          timer0_lthread@msgval 00C1        FromMainHigh_recvmsg@data 008F                      _I2C_START2 007C3B  
                   _in_high_int 1C0C                    send_msg@data 01A6             _i2c_configure_slave 1B8E  
                  send_msg@qmsg 01AB                    send_msg@slot 01AA                    send_msg@qptr 01A2  
                   _INTCON2bits 000FF1                     _INTCON3bits 000FF0           uart_lthread@msgbuffer 00BF  
           ?_timer1_int_handler 0001                 ?_init_uart_recv 00B9                     ??_OpenUSART 00BC  
          i2c_int_handler@empty 009B                 OpenUSART@config 00B9                      _EECON1bits 000FA6  
                ??i2_in_low_int 0038           _uart_recv_int_handler 100A                    ??_in_low_int 00BD  
              __size_of_ReadADC 000C                     _READ_WRITE2 007C3A                        __Hrparam 0000  
              __size_of_OpenADC 0084            ?_i2c_configure_slave 00B9                        __Lrparam 0000  
             ?_enter_sleep_mode 0001          ??_FromMainHigh_recvmsg 0040            ??_timer1_int_handler 001B  
               _adc_int_handler 18D0        __size_of_i2c_int_handler 0634              ??_enter_sleep_mode 0034  
                  ??_init_queue 00BB                    ?_WriteTimer0 0034                    ?_WriteTimer1 0001  
       ToMainLow_sendmsg@length 0017               main@t0thread_data 01C0           ?_InterruptHandlerHigh 0001  
                   _GO_NOT_DONE 007E11                __size_of_in_main 0058               i2send_msg@msgtype 0083  
   ToMainHigh_recvmsg@maxlength 01AE               i2send_msg@tlength 0086         init_timer1_lthread@tptr 00BE  
                   _init_queues 1586              __end_of_in_low_int 16B6                        __ptext10 16B6  
                      __ptext11 1658                        __ptext20 0C76                        __ptext12 1C0C  
                      __ptext21 0A04                        __ptext13 19FC                        __ptext30 18D0  
                      __ptext22 170E                        __ptext14 1C84                        __ptext31 100A  
                      __ptext23 198C                        __ptext15 1A2C                        __ptext40 00D6  
                      __ptext32 1BB2                        __ptext24 1C20                        __ptext16 1B42  
                      __ptext41 1226                        __ptext33 19C4                        __ptext25 148C  
                      __ptext17 1AEA                        __ptext50 188C                        __ptext42 1510  
                      __ptext34 1C34                        __ptext26 1BD6                        __ptext18 1764  
                      __ptext51 1C6A                        __ptext43 1B16                        __ptext35 1C46  
                      __ptext27 1C9C                        __ptext19 1406                        __ptext52 0D7C  
                      __ptext44 1A5C                        __ptext36 1C78                        __ptext53 0B44  
                      __ptext45 1A8C                        __ptext37 1174                        __ptext29 194E  
                      __ptext54 1B68                        __ptext46 1C96                        __ptext38 17FC  
                      __ptext55 1844                        __ptext47 0F4A                        __ptext56 0000  
                      __ptext48 12D6                        __ptext49 1C58                    _SSP1CON1bits 000FC6  
                  _SSP1CON2bits 000FC5                  i1send_msg@data 000F                    _SSP2CON1bits 000F86  
                  _SSP2CON2bits 000F85                  i1send_msg@qmsg 0015                  i1send_msg@slot 0014  
                i1send_msg@qptr 000B              uart_lthread@length 00BD        timer0_int_handler@length 0093  
                      _init_i2c 17B2             _init_timer1_lthread 15F4                   __size_of_main 02FA  
        adc_int_handler@message 001D                   ??i2_check_msg 0036               main@t1thread_data 01C3  
                   ??_check_msg 00BB              __end_of_init_queue 148C            __size_of_SleepIfOkay 0076  
                      _recv_msg 0A04           ??_i2c_configure_slave 00BA                        _send_msg 0C76  
                init_queue@qptr 00B9                      _CVRCONbits 000FB5           __size_of_uart_lthread 004E  
                i2recv_msg@data 0085                  i2recv_msg@qmsg 008A                   ??_Delay1KTCYx 00BA  
                i2recv_msg@slot 0087                  i2recv_msg@qptr 0080                    _SSP1STATbits 000FC7  
           _InterruptHandlerLow 0018            ?_init_timer1_lthread 00BE                    _SSP2STATbits 000F87  
           i2c_int_handler@data 0091                     _OSCTUNEbits 000F9B                      _INTCONbits 000FF2  
                   _PWM1CONbits 000FB7                  OpenUSART@spbrg 00BA                        memcpy@d1 00B9  
                      memcpy@s1 00BB           __end_ofi2_in_high_int 1C78    i2c_int_handler@overrun_error 00A3  
              i2send_msg@length 0082                        intlevel1 0000                        intlevel2 0000  
          ?_InterruptHandlerLow 0001         ??_start_i2c_slave_reply 0037                     _SSP1ADDbits 000FC8  
                   _SSP2ADDbits 000F88          ?_uart_recv_int_handler 0001                    _uart_lthread 1764  
             SetChanADC@channel 00B9                      _RCSTA1bits 000FAB           _block_on_To_msgqueues 0E76  
                 ?_handle_start 0034                ??_timer0_lthread 00C1     __size_of_ToMainHigh_recvmsg 0030  
       __end_of_adc_int_handler 1910     __size_of_ToMainHigh_sendmsg 002C                      _OSCCONbits 000FD3  
              ??_timer1_lthread 00C1        ToMainHigh_sendmsg@length 008B             __end_ofi2_check_msg 1B8E  
         ??_init_timer1_lthread 00C0          ??_InterruptHandlerHigh 00AB               _ToMainLow_recvmsg 1A2C  
             _ToMainLow_sendmsg 1BB2              main@last_reg_recvd 01C2                      _NOT_T1SYNC 007E6A  
          __end_ofi2_in_low_int 18D0              ?_ToMainLow_recvmsg 01AE             __end_of_Delay1KTCYx 1C34  
             ??_i2c_int_handler 0040              ?_ToMainLow_sendmsg 0017                     _SSPCON1bits 000FC6  
                   _SSPCON2bits 000FC5                      _WDTCONbits 000FD1                  i2send_msg@data 0084  
         ??_InterruptHandlerLow 0023             ??_ToMainLow_recvmsg 00C5                  i2send_msg@qmsg 0089  
                i2send_msg@slot 0088                  i2send_msg@qptr 0080             ??_ToMainLow_sendmsg 001B  
                    _SSPADDbits 000FC8                      _STATUSbits 000FD8             _FromMainLow_recvmsg 1A5C  
                ??_handle_start 0035             _FromMainLow_sendmsg 1AEA                    _USART_Status 0046  
